{"version":3,"file":"VacancyView.6a36602af859f9af54f6.js","mappings":"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","sources":["xhh/./webapp-static/js/Utils/Dates.js","xhh/./webapp-static/lux/components/Auction/HoverWarningTipToEdit/index.tsx","xhh/./webapp-static/lux/components/Banner/BannerPropType.ts","xhh/./webapp-static/lux/components/Breadcrumbs/Breadcrumb.tsx","xhh/./webapp-static/lux/components/Breadcrumbs/BreadcrumbsDivider.tsx","xhh/./webapp-static/lux/components/Breadcrumbs/index.tsx","xhh/./webapp-static/lux/components/Forms/Submit/index.tsx","xhh/./webapp-static/lux/components/Hhcaptcha/index.tsx","xhh/./webapp-static/lux/components/OTP/TimeoutCounter.tsx","xhh/./webapp-static/lux/components/OTP/CodeError.tsx","xhh/./webapp-static/lux/components/OTP/CodeSender.tsx","xhh/./webapp-static/lux/components/Recaptcha/index.jsx","xhh/./webapp-static/lux/components/RelatedVacancies/Title.jsx","xhh/./webapp-static/lux/components/VacancySerpBanner/index.jsx","xhh/./webapp-static/lux/components/RelatedVacancies/index.jsx","xhh/./webapp-static/lux/components/Rise/useShowRisePage.ts","xhh/./webapp-static/lux/components/SignupModal/api/index.ts","xhh/./webapp-static/lux/components/SignupModal/lib/index.ts","xhh/./webapp-static/lux/components/VacancyActions/ArchiveAction.tsx","xhh/./webapp-static/lux/components/VacancyActions/AutoProlongationAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/DuplicateAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/EditAction.tsx","xhh/./webapp-static/lux/components/VacancyActions/OptionAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/risePageExperimentUtils.ts","xhh/./webapp-static/lux/components/VacancyActions/ProlongateActionRisePageExperiment.tsx","xhh/./webapp-static/lux/components/VacancyActions/SnackbarRisePageExperiment.tsx","xhh/./webapp-static/lux/components/VacancyActions/UpgradeAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/VideoInterviewAction.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyBody.jsx","xhh/./webapp-static/lux/components/VacancyView/VideoInterviewInfo.tsx","xhh/./webapp-static/lux/components/VacancyView/propTypes.js","xhh/./webapp-static/lux/components/Verification/Verification.tsx","xhh/./webapp-static/lux/components/Verification/VerificationForm.tsx","xhh/./webapp-static/lux/hooks/useAutofocus.ts","xhh/./webapp-static/lux/hooks/useIsClient.ts","xhh/./webapp-static/lux/hooks/useTimer.ts","xhh/./webapp-static/lux/models/banners.ts","xhh/./webapp-static/lux/components/SignupModal/VacancySignUpModal.tsx","xhh/./webapp-static/lux/components/RelatedEmployerVacancies/Title.tsx","xhh/./webapp-static/lux/components/RelatedEmployerVacancies/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyBodyRedesigned.jsx","xhh/./webapp-static/lux/components/VacancyView/useDispatchAfterResponseNotification.js","xhh/./webapp-static/lux/components/VacancyView/VacancySidebarBanners.jsx","xhh/./webapp-static/lux/components/SuitableVacancy/Company.jsx","xhh/./webapp-static/lux/components/SuitableVacancy/Compensation.jsx","xhh/./webapp-static/lux/components/SuitableVacancy/index.jsx","xhh/./webapp-static/lux/pages/VacancyView/components/RelatedVacanciesPreview.jsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancySidebar.jsx","xhh/./webapp-static/lux/pages/VacancyView/VacancyView.jsx","xhh/./webapp-static/lux/components/VacancyView/useShowResponse.js","xhh/./webapp-static/lux/pages/VacancyView/VacancyViewConstructor.jsx","webpack://xhh/./webapp-static/lux/components/Auction/Banner/styles.less?2b36","xhh/./webapp-static/lux/components/Auction/Banner/index.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useAuctionCreationEnabled.ts","xhh/./webapp-static/lux/components/VacancyView/VacancyHasTestText.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/VacancySystemInfo/vacancy-system-info.less?81f4","xhh/./webapp-static/lux/components/VacancyView/VacancySystemInfo/SystemInfoItem.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancySystemInfo/constants.ts","xhh/./webapp-static/lux/components/VacancyView/VacancySystemInfo/index.tsx","webpack://xhh/./webapp-static/lux/pages/VacancyView/components/VacancyBreadcrumbs/vacancy-breadcrumbs.less?0594","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyBreadcrumbs/index.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useAuctionEditingEnabled.ts","xhh/./webapp-static/lux/components/EmployerVacancySalaryCanvacBanner/CompensationType.tsx","webpack://xhh/./webapp-static/lux/components/EmployerVacancySalaryCanvacBanner/styles.less?fd51","xhh/./webapp-static/lux/components/EmployerVacancySalaryCanvacBanner/VacancySalaryRangeDiagram.tsx","xhh/./webapp-static/lux/components/EmployerVacancySalaryCanvacBanner/index.tsx","webpack://xhh/./webapp-static/lux/components/SuitableVacanciesBanner/suitable-vacancies-banner.less?a019","xhh/./webapp-static/lux/components/SuitableVacanciesBanner/index.tsx","webpack://xhh/./webapp-static/lux/components/VacancyConversionInfo/vacancy-conversion-info.less?9a7c","xhh/./webapp-static/lux/components/VacancyConversionInfo/ColumnBox.tsx","xhh/./webapp-static/lux/components/VacancyConversionInfo/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/CampaignStatus/campaign-status-text.less?604a","xhh/./webapp-static/lux/components/Auction/Common/CampaignStatus/CampaignStatusText.tsx","webpack://xhh/./webapp-static/lux/pages/VacancyView/components/AuctionStatistic/styles.less?9308","xhh/./webapp-static/lux/pages/VacancyView/components/AuctionStatistic/index.tsx","webpack://xhh/./webapp-static/lux/pages/VacancyView/components/CompetitorAnalysisBanner/competitor-analysis-banner.less?c8cb","xhh/./webapp-static/lux/pages/VacancyView/components/CompetitorAnalysisBanner/index.tsx","xhh/./webapp-static/lux/pages/VacancyView/components/DisableCallTracking.tsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyEmployerSidebar.jsx","xhh/./webapp-static/lux/components/VacancyActions/DeleteAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/HideAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/PrintAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/ResponsesLinkAction.tsx","xhh/./webapp-static/lux/components/VacancyActions/RestoreAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/RestoreFastAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/RestoreToArchiveAction.jsx","xhh/./webapp-static/lux/components/VacancyActions/sendVacancyActionsAnalytics.js","xhh/./webapp-static/lux/components/VacancyActions/useAdaptiveVacancyActions.js","webpack://xhh/./webapp-static/lux/pages/VacancyView/components/VacancyActionLayout/vacancy-action-layout.less?1bc5","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyActionLayout/index.tsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyAction.jsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyEmployerActions.jsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyHeader.jsx","webpack://xhh/./webapp-static/lux/components/Timeline/timeline.less?33d9","xhh/./webapp-static/lux/components/Timeline/index.tsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyHistoryTab/index.tsx","xhh/./webapp-static/lux/hooks/useLayoutMount.ts","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyHistoryTab/TooltipHistoryTab.tsx","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyTabs/index.tsx","webpack://xhh/./webapp-static/lux/pages/VacancyView/components/VacancyTabs/tab-pane.less?4619","xhh/./webapp-static/lux/pages/VacancyView/components/VacancyTabs/TabPane.tsx","xhh/./webapp-static/lux/pages/VacancyView/VacancyViewEmployer.jsx","xhh/./webapp-static/lux/pages/VacancyView/useVacancyViewMeta.ts","xhh/./webapp-static/lux/pages/VacancyView/VacancyView.route.jsx"],"sourcesContent":["import addDays from 'date-fns/addDays';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport isBefore from 'date-fns/isBefore';\nimport max from 'date-fns/max';\nimport startOfMonth from 'date-fns/startOfMonth';\n\nimport Debug from 'HHC/Debug';\nimport formatDate from 'Modules/formatDate';\n\n/**\n * Получить отформатированные секунды для таймера, с количеством часов или без\n *\n * @param {Number} seconds\n *\n * @returns {String}\n */\nexport const formatSeconds = (seconds) => {\n    const date = new Date(0, 0, 0, 0, 0, seconds);\n    const format = date.getHours() > 0 ? 'HH:mm:ss' : 'mm:ss';\n    return formatDate(date, format);\n};\n\nconst getSeconds = (date) => Math.floor(date / 1000);\nexport const getCurrentSeconds = () => getSeconds(Date.now());\n\nexport const IntervalMessages = (humanDatesRules) => {\n    const humanDatesList = Object.keys(humanDatesRules).sort((a, b) => Math.sign(b - a));\n\n    const get = (deltaTime) => {\n        const deltaSeconds = getSeconds(deltaTime);\n        const messageIndex = humanDatesList.findIndex((i) => i < deltaSeconds);\n\n        try {\n            return humanDatesRules[humanDatesList[messageIndex]].translation;\n        } catch (error) {\n            Debug.log('error out', 'messageIndex is wrong', {\n                error,\n                humanDatesList,\n                messageIndex,\n                humanDatesRules,\n                timeLeft: deltaTime,\n            });\n        }\n\n        return null;\n    };\n\n    return { get };\n};\n\nexport const calculateDisabledDates = (selectedDate, lastAvailableDate = new Date()) => {\n    if (isBefore(selectedDate, startOfMonth(lastAvailableDate))) {\n        return [];\n    }\n\n    const start = max([startOfMonth(selectedDate), addDays(lastAvailableDate, 1)]);\n    const end = endOfMonth(selectedDate);\n\n    if (!isBefore(start, end)) {\n        return [];\n    }\n\n    return eachDayOfInterval({ start, end }).map((disabledDate) => formatDate(disabledDate, 'y-MM-dd'));\n};\n","import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    warningTitle: 'auction.banner.edit.hover.warningTitle',\n    warningDescription: 'auction.banner.edit.hover.warningDescription',\n};\n\nconst HoverWarningTipToEdit: TranslatedComponent = ({ trls }) => {\n    const title = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.currentVacancyAuctionCampaign?.campaignAccountInfo.title || ''\n    );\n    return (\n        <div>\n            <div>\n                {format(trls[TrlKeys.warningTitle], {\n                    '{0}': title,\n                })}\n            </div>\n            <VSpacing base={4} />\n            <div>{trls[TrlKeys.warningDescription]}</div>\n        </div>\n    );\n};\n\nexport default translation(HoverWarningTipToEdit);\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n    id: PropTypes.string,\n});\n","import { ReactNode, FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Text, { TextImportance } from 'bloko/blocks/text';\n\ninterface BreadcrumbProps {\n    children: ReactNode;\n    to: string;\n    className?: string;\n    isSeoLink?: boolean;\n    hideOverflow?: boolean;\n}\n\nconst Breadcrumb: FC<BreadcrumbProps> = ({ children, to, className, isSeoLink = false, hideOverflow = false }) => (\n    <Link\n        to={to}\n        isSeoLink={isSeoLink}\n        className={classnames('breadcrumbs__item', className, { 'breadcrumbs__item_hide-overflow': hideOverflow })}\n    >\n        <Text importance={TextImportance.Tertiary} Element=\"span\">\n            {children}\n        </Text>\n    </Link>\n);\n\nexport default Breadcrumb;\n","import { FC } from 'react';\n\nimport Icon, { IconColor, IconKind, IconScale, IconView } from 'bloko/blocks/icon';\n\nconst BreadcrumbsDivider: FC = () => (\n    <div className=\"breadcrumbs__divider\">\n        <Icon kind={IconKind.Right} view={IconView.Arrow} initial={IconColor.Gray30} scale={IconScale.Small} />\n    </div>\n);\n\nexport default BreadcrumbsDivider;\n","import { FC, ComponentPropsWithoutRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Breadcrumb from 'lux/components/Breadcrumbs/Breadcrumb';\nimport BreadcrumbsDivider from 'lux/components/Breadcrumbs/BreadcrumbsDivider';\n\nconst Breadcrumbs: FC<ComponentPropsWithoutRef<'div'> & PropsWithChildren> = ({ children, className, ...props }) => (\n    <div {...props} className={classnames('breadcrumbs', className)}>\n        {children}\n    </div>\n);\n\nexport { Breadcrumb, BreadcrumbsDivider };\n\nexport default Breadcrumbs;\n","import { FC, PropsWithChildren, ReactElement } from 'react';\n\nimport {\n    Button as MagritteButton,\n    ButtonMode as MagritteButtonMode,\n    ButtonType as MagritteButtonType,\n    ButtonStyle as MagritteButtonStyle,\n    ButtonSize,\n} from '@hh.ru/magritte-ui';\nimport Button, { ButtonType, ButtonKind, ButtonProps } from 'bloko/blocks/button';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\n\nimport useIsClient from 'lux/hooks/useIsClient';\nimport useRedesign from 'lux/hooks/useMagritte';\n\ninterface Props {\n    isFetching: boolean;\n}\n\nconst Index: FC<Props & Partial<ButtonProps> & PropsWithChildren> = ({ isFetching, children, ...props }) => {\n    const isClient = useIsClient();\n    const isRedesign = useRedesign();\n\n    if (isRedesign) {\n        return (\n            <MagritteButton\n                {...props}\n                mode={MagritteButtonMode.Primary}\n                Element={props.Element as 'button' | undefined}\n                icon={props.icon as ReactElement}\n                type={MagritteButtonType.Submit}\n                disabled={!isClient || isFetching}\n                style={MagritteButtonStyle.Accent}\n                loading={isFetching}\n                size={ButtonSize.Large}\n            >\n                {children}\n            </MagritteButton>\n        );\n    }\n\n    return (\n        <Button\n            {...props}\n            type={ButtonType.Submit}\n            disabled={!isClient || isFetching}\n            kind={ButtonKind.Primary}\n            loading={isFetching && <Loading initial={LoadingColor.White} scale={LoadingScale.Small} />}\n        >\n            {children}\n        </Button>\n    );\n};\n\nexport default Index;\n","import { useMemo, ComponentProps } from 'react';\n\nimport { Hhcaptcha as HHcaptcha } from '@hh.ru/hhcaptcha';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useRedesign from 'lux/hooks/useMagritte';\nimport fetcher from 'lux/modules/fetcher';\n\nconst TrlKeys = {\n    error: 'hhсaptcha.error',\n    placeholder: 'hhсaptcha.placeholder',\n    description: 'hhсaptcha.info',\n    renewText: 'hhсaptcha.renew.text',\n    lang: {\n        RU: 'hhсaptcha.lang.RU',\n        EN: 'hhсaptcha.lang.EN',\n    },\n};\n\ntype HhCaptchaProps = Pick<ComponentProps<typeof HHcaptcha>, 'size'>;\n\nconst Hhcaptcha: TranslatedComponent<HhCaptchaProps> = ({ trls, size }) => {\n    const isMagritte = useRedesign();\n    const captchaTrl = useMemo(\n        () => ({\n            error: trls[TrlKeys.error],\n            renewText: trls[TrlKeys.renewText],\n            description: trls[TrlKeys.description],\n            placeholder: trls[TrlKeys.placeholder],\n            lang: {\n                RU: trls[TrlKeys.lang.RU],\n                EN: trls[TrlKeys.lang.EN],\n            },\n        }),\n        [trls]\n    );\n\n    return <HHcaptcha trls={captchaTrl} fetcher={fetcher} isMagritte={isMagritte} size={size} />;\n};\n\nexport default translation(Hhcaptcha);\n","import { useEffect, useState } from 'react';\n\nconst ONE_SECOND = 1000;\n\nconst getSecondsRemain = (till: number): number => {\n    const nowSeconds = Math.floor(Date.now() / ONE_SECOND);\n    if (till <= nowSeconds) {\n        return 0;\n    }\n    return till - nowSeconds;\n};\n\nconst useTimeoutTimer = (till: number) => {\n    const [value, setValue] = useState(() => getSecondsRemain(till));\n\n    useEffect(() => {\n        let timeOutHandler: NodeJS.Timeout;\n        const updateValue = () => {\n            setValue(getSecondsRemain(till));\n            timeOutHandler = setTimeout(updateValue, ONE_SECOND);\n        };\n        updateValue();\n        return () => clearTimeout(timeOutHandler);\n    }, [till]);\n\n    return value;\n};\n\nconst TimeoutCounter: React.FC<\n    {\n        till: number;\n    } & React.PropsWithChildren\n> = ({ till }) => {\n    const secondsRemain = useTimeoutTimer(till);\n\n    if (secondsRemain < 1) {\n        return null;\n    }\n    return <>{secondsRemain}</>;\n};\n\nexport default TimeoutCounter;\n","import { FormError } from 'bloko/blocks/form';\nimport { LangTrls, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { Verification } from 'lux/models/applicant/auth';\n\nimport TimeoutCounter from 'lux/components/OTP/TimeoutCounter';\n\nconst CONFIRM_CODE_BLOCKED = 'CONFIRM_CODE_BLOCKED';\nconst CONFIRM_CODE_BLOCKED_PHONE = 'CONFIRM_CODE_BLOCKED_PHONE';\n\nconst TrlKeys = {\n    default: 'account.connect.merge_by_code.email.error.unknown',\n    CODE_NOT_FOUND: 'account.connect.merge_by_code.email.error.CODE_NOT_FOUND',\n    [CONFIRM_CODE_BLOCKED]: 'account.connect.merge_by_code.email.error.CONFIRM_CODE_BLOCKED',\n    [CONFIRM_CODE_BLOCKED_PHONE]: 'account.connect.merge_by_code.email.error.CONFIRM_CODE_BLOCKED.phone',\n    WRONG_CODE: 'account.connect.merge_by_code.email.error.WRONG_CODE',\n    CODE_EXPIRED: 'account.connect.merge_by_code.email.error.CODE_EXPIRED',\n};\n\nconst getErrorText = ({ key, nextConfirmTime }: Verification, trls: LangTrls, authType: string) => {\n    if (key === CONFIRM_CODE_BLOCKED) {\n        const errorText =\n            authType.toLowerCase() === 'email'\n                ? trls[TrlKeys[CONFIRM_CODE_BLOCKED]]\n                : trls[TrlKeys[CONFIRM_CODE_BLOCKED_PHONE]];\n        return formatToReactComponent(errorText, {\n            '{0}': <TimeoutCounter till={nextConfirmTime['@timestamp'] || nextConfirmTime.timestamp} />,\n        });\n    }\n    return trls[TrlKeys[key as keyof typeof TrlKeys]] || trls[TrlKeys.default];\n};\n\nconst CodeError: TranslatedComponent<{ verification: Verification | null; authType?: string }> = ({\n    verification,\n    authType = 'email',\n    trls,\n}) => {\n    if (!verification) {\n        return null;\n    }\n\n    const errorKey = verification.key;\n    return (\n        <FormError data-qa={`oauth-merge-by-code__code-error-${errorKey.toLowerCase()}`} show>\n            {getErrorText(verification, trls, authType)}\n        </FormError>\n    );\n};\n\nexport default translation(CodeError);\n","import { Fragment, useCallback, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AxiosResponse } from 'axios';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { useCaptcha } from '@hh.ru/hhcaptcha';\nimport { Link as MagritteLink, Text } from '@hh.ru/magritte-ui';\nimport { FormSeparator } from 'bloko/blocks/form';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport { formatSeconds } from 'Utils/Dates';\nimport Hhcaptcha from 'lux/components/Hhcaptcha';\nimport Recaptcha from 'lux/components/Recaptcha';\nimport translation from 'lux/components/translation';\nimport useMagritte from 'lux/hooks/useMagritte';\nimport useTimer from 'lux/hooks/useTimer';\nimport { OtpRequest } from 'lux/models/applicant/auth';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst TrlKeys = {\n    send: 'account.connect.merge_by_code.send',\n    wait: 'account.connect.merge_by_code.wait',\n};\n\n// из всех описанных урлов FetcherPostApi оставляем только те которые по запросу/ответу удовлетворяют интерфейсу OtpRequest\nexport type AvailableOtpUrls = keyof {\n    [K in keyof FetcherPostApi as FetcherPostApi[K] extends OtpRequest ? K : never]: FetcherPostApi[K];\n};\n\nconst CodeSender: TranslatedComponent<{\n    login?: string;\n    isSignupPage?: boolean;\n    url: AvailableOtpUrls;\n    otpType: string;\n    operationType?: string;\n    recaptchaClassName?: string;\n    disableCaptcha?: boolean;\n}> = ({ login, trls, isSignupPage, url, otpType, operationType, recaptchaClassName = '', disableCaptcha }) => {\n    const [recaptchaValue, setRecaptchaValue] = useState<string | null>(null);\n    const { secondsUntilNextSend } = useSelector(({ otp }) => otp);\n    const recaptcha = useSelector(({ recaptcha }) => recaptcha);\n    const hhcaptcha = useSelector(({ hhcaptcha }) => hhcaptcha);\n    const [sendTimer, setSendTimer] = useTimer(secondsUntilNextSend);\n    const dispatch = useDispatch();\n    const elementRef = useRef<HTMLDivElement>(null);\n    const captcha = useCaptcha();\n    const vacancyId = useSelector(({ postponedActions }) => postponedActions?.vacancy?.vacancyId);\n    const isMagritte = useMagritte();\n\n    const sendCode = useCallback(async () => {\n        const captchaInput = elementRef.current?.querySelector('.g-recaptcha-response') as HTMLInputElement | undefined;\n        const params: OtpRequest['body'] = {\n            login,\n            otpType,\n            operationType,\n        };\n        let response: AxiosResponse<OtpRequest['response'], unknown> | null = null;\n\n        captcha.addCaptchaParams(params);\n\n        if (captchaInput?.value && recaptchaValue !== captchaInput.value) {\n            params['g-recaptcha-response'] = captchaInput.value;\n            captchaInput?.value && setRecaptchaValue(captchaInput.value);\n        }\n\n        Analytics.sendHHEventButtonClick(\n            'resend_code',\n            {\n                isSignupPage,\n                vacancyId,\n            },\n            { login }\n        );\n\n        try {\n            response = await fetcher.postFormData(url, params);\n        } catch (err) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (!err?.response?.data?.recaptcha || !err?.response?.data?.hhcaptcha) {\n                dispatch(showDefaultError(err));\n                return;\n            }\n        }\n\n        if (response) {\n            response.data && captcha.updateCaptcha(response.data);\n            setSendTimer(response.data?.otp?.secondsUntilNextSend || 0);\n        } else {\n            dispatch(showDefaultError());\n        }\n    }, [login, otpType, operationType, captcha, recaptchaValue, isSignupPage, vacancyId, url, dispatch, setSendTimer]);\n\n    const linkProps = {\n        onClick: sendCode,\n        'data-qa': 'oauth-merge-by-code__code-resend',\n        children: trls[TrlKeys.send],\n    };\n\n    const link = isMagritte ? (\n        <MagritteLink {...linkProps} />\n    ) : (\n        <BlokoLink appearance={LinkAppearance.Pseudo} {...linkProps} />\n    );\n\n    const renderTime = () => {\n        const timer = <p suppressHydrationWarning>{format(trls[TrlKeys.wait], { '{0}': formatSeconds(sendTimer) })}</p>;\n        if (isMagritte) {\n            return <Text>{timer}</Text>;\n        }\n        return timer;\n    };\n\n    return (\n        <div ref={elementRef}>\n            {!disableCaptcha && (\n                <>\n                    <Recaptcha WrapperField={Fragment} className={recaptchaClassName} />\n                    <Hhcaptcha />\n                    {(recaptcha?.isBot || hhcaptcha?.isBot) && <FormSeparator />}\n                </>\n            )}\n            {sendTimer > 0 ? renderTime() : link}\n        </div>\n    );\n};\nexport default translation(CodeSender);\n","import { useRef, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormError, FormSeparator } from 'bloko/blocks/form';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslationLangContext } from 'bloko/common/hooks/useTranslations';\n\nimport Debug from 'HHC/Debug';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const ERROR_RECAPTCHA_VERIFICATION = 'failed';\n\nconst CHECK_RECAPTCHA_TIMEOUT_MS = 300;\n\nconst renderRecaptcha = (element, wrapper, siteKey, widgetId) => {\n    requestAnimationFrame(() => {\n        try {\n            if (widgetId.current !== null) {\n                window.grecaptcha.reset(widgetId.current);\n                return;\n            }\n            widgetId.current = window.grecaptcha.render(element, {\n                sitekey: siteKey,\n            });\n            wrapper.classList.remove('g-hidden');\n        } catch (error) {\n            Debug.log('error out', error, { isRecaptcha: true });\n        }\n    });\n};\n\nlet scriptAppended = false;\n\nconst loadScript = (lang) => {\n    if (scriptAppended) {\n        return;\n    }\n\n    const script = document.createElement('script');\n    script.src = `https://recaptcha.net/recaptcha/api.js?render=explicit&hl=${lang}&_=${Date.now()}`;\n    document.body.appendChild(script);\n    scriptAppended = true;\n};\n\nconst Recaptcha = ({ isBot, siteKey, error, className, trls, WrapperField }) => {\n    const wrapper = useRef(null);\n    const element = useRef(null);\n    const widgetId = useRef(null);\n    const lang = useContext(TranslationLangContext);\n\n    useEffect(() => {\n        if (!isBot) {\n            return undefined;\n        }\n\n        loadScript(lang);\n\n        let timerId;\n\n        const checkToRender = () => {\n            clearTimeout(timerId);\n            if (window.grecaptcha?.render) {\n                renderRecaptcha(element.current, wrapper.current, siteKey, widgetId);\n            } else {\n                timerId = setTimeout(checkToRender, CHECK_RECAPTCHA_TIMEOUT_MS);\n            }\n        };\n\n        checkToRender();\n\n        return () => {\n            clearTimeout(timerId);\n        };\n    }, [isBot, lang, error, siteKey]);\n\n    const content = <div ref={element} className={className} />;\n\n    return (\n        <>\n            <div ref={wrapper} className={!isBot ? 'g-hidden' : ''}>\n                <input type=\"hidden\" name=\"isBot\" value={isBot} />\n                {WrapperField ? (\n                    <WrapperField>{content}</WrapperField>\n                ) : (\n                    <>\n                        <VSpacing base={2} />\n                        {content}\n                    </>\n                )}\n            </div>\n            {error && <FormSeparator />}\n            <FormError show={error}>{trls[Recaptcha.trls.error]}</FormError>\n        </>\n    );\n};\n\nRecaptcha.propTypes = {\n    isBot: PropTypes.bool,\n    siteKey: PropTypes.string,\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    trls: PropTypes.object,\n    WrapperField: PropTypes.elementType,\n};\n\nRecaptcha.trls = {\n    error: 'error.signup.captcha.invalid',\n};\n\nconst RecaptchaWithTRL = translation(Recaptcha);\n\nconst RecaptchaWrapper = (props) => {\n    const recaptcha = useSelector(({ recaptcha }) => recaptcha);\n    const isFirstRender = useRef(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setError(recaptcha?.isBot && isFirstRender.current);\n        isFirstRender.current = !!recaptcha?.isBot;\n    }, [recaptcha]);\n\n    return <RecaptchaWithTRL error={error} {...recaptcha} {...props} />;\n};\n\nexport default RecaptchaWrapper;\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nimport { RELATED_VACANCIES_TYPES } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\n\nconst RelatedVacanciesTitle = ({ type, trls }) => {\n    if (type === RELATED_VACANCIES_TYPES.SUITABLE) {\n        return trls[RelatedVacanciesTitle.trls.titleSuitable];\n    }\n    return trls[RelatedVacanciesTitle.trls.titleSimilar];\n};\n\nRelatedVacanciesTitle.propTypes = {\n    type: PropTypes.string,\n    trls: PropTypes.object,\n};\n\nRelatedVacanciesTitle.trls = {\n    titleSimilar: 'vacancy.similarVacancy.title',\n    titleSuitable: 'vacancy.suitable.title',\n};\n\nexport default translation(RelatedVacanciesTitle);\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { BannerPlace } from 'lux/models/banners';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst getBannersMap = (banners, isOdd) => {\n    if (isOdd) {\n        return {\n            bannerL: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_L],\n            bannerSM: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_S_M],\n            bannerXS: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_XS],\n        };\n    }\n    return {\n        bannerL: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_L],\n        bannerSM: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_S_M],\n        bannerXS: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_XS],\n    };\n};\n\nconst VacancySerpBanner = ({ isOdd, position, adsPositionInfo, bannerNum }) => {\n    const isWebView = useSelector((state) => state.isWebView);\n    const banners = useSelector((state) => state.banners);\n    const adsVacancyParams = useSelector((state) => state.adsVacancyParams);\n    const vacancyId = useSelector((state) => state.vacancyView?.vacancyId);\n    const wrapperRef = useRef(null);\n\n    useEffect(() => {\n        if (isWebView) {\n            return;\n        }\n        if (wrapperRef.current) {\n            Analytics.sendHHEventElementShown(wrapperRef.current, {\n                name: 'clickme_banner',\n                vacancyId,\n                position: bannerNum + 4,\n            });\n        }\n    }, [bannerNum, isWebView, vacancyId]);\n\n    const { bannerL, bannerSM, bannerXS } = getBannersMap(banners, isOdd);\n    if (isWebView || (!bannerXS?.length && !bannerSM?.length && !bannerL?.length)) {\n        return null;\n    }\n\n    const sendClickAnalytics = () => {\n        Analytics.sendHHEventButtonClick('clickme_banner', {\n            vacancyId,\n            position: bannerNum + 4,\n        });\n    };\n\n    return (\n        <div ref={wrapperRef}>\n            {bannerL?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-l\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerL[0]}\n                            cId={position ? `position_${position}_${bannerL[0].cId}` : bannerL[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerSM?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-s-m\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerSM[0]}\n                            cId={position ? `position_${position}_${bannerSM[0].cId}` : bannerSM[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerXS?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-xs\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerXS[0]}\n                            cId={position ? `position_${position}_${bannerXS[0].cId}` : bannerXS[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nVacancySerpBanner.propTypes = {\n    position: PropTypes.number,\n    isOdd: PropTypes.bool,\n    adsPositionInfo: PropTypes.string,\n    bannerNum: PropTypes.number,\n};\n\nexport default VacancySerpBanner;\n","import { useState, useCallback, useEffect, useRef, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Button, { ButtonScale, ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport { H1Section } from 'bloko/blocks/header';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport TranslateGuard from 'bloko/blocks/translateGuard';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport Metrics from 'bloko/common/metrics';\nimport throttle from 'bloko/common/throttle';\n\nimport VacancySearchItem from 'lux/components/VacancySearchItem';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport VacancySerpBanner from 'lux/components/VacancySerpBanner';\nimport translation from 'lux/components/translation';\nimport { pushRelatedVacanciesAction } from 'lux/models/relatedVacancies';\nimport { addUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport RelatedVacanciesTitle from 'lux/components/RelatedVacancies/Title';\n\nconst AUTO_LOAD_PAGES = 3;\nconst SCROLL_THROTTLE_DELAY_MS = 1000;\nconst SCROLL_BOTTOM_OFFSET = 500;\nconst BANNER_POSITION = 3;\n\nfunction isScrolledPastThreshold(currentPageNumber, totalPages, wrapper) {\n    const viewportBottom = Metrics.getViewportMetrics().bottom;\n    const contentBottom = Metrics.getRelativeMetrics(wrapper).bottom;\n    return (\n        viewportBottom + SCROLL_BOTTOM_OFFSET >= contentBottom &&\n        currentPageNumber < totalPages &&\n        currentPageNumber < AUTO_LOAD_PAGES\n    );\n}\n\nconst RelatedVacancies = ({ blockRef, trls }) => {\n    const relatedVacancies = useSelector((state) => state.relatedVacancies);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const searchSessionId = useSelector((state) => state.searchSessionId);\n    const [isLoading, setIsLoading] = useState(false);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    const currentPageNumber = useRef(1);\n    const wrapperRef = useRef();\n    const dispatch = useDispatch();\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    const loadMoreVacancies = useCallback(() => {\n        if (isLoading) {\n            return;\n        }\n\n        setIsLoading(true);\n        fetcher\n            .get('/shards/vacancy/related_vacancies', {\n                params: {\n                    vacancyId,\n                    page: currentPageNumber.current,\n                    type: relatedVacancies.type,\n                    searchSessionId,\n                },\n            })\n            .then((response) => {\n                const actions = response.vacancies.map(({ vacancyId, userLabels }) =>\n                    addUserLabelsForVacancies({ vacancyId, labels: userLabels })\n                );\n\n                dispatch([...actions, pushRelatedVacanciesAction(response.vacancies)]);\n                currentPageNumber.current += 1;\n                if (currentPageNumber.current >= relatedVacancies.totalPages) {\n                    setShowLoadMore(false);\n                } else if (currentPageNumber.current >= AUTO_LOAD_PAGES) {\n                    setShowLoadMore(true);\n                }\n            })\n            .catch((error) => {\n                dispatch(showDefaultError(error));\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [dispatch, isLoading, relatedVacancies, searchSessionId, vacancyId]);\n\n    useEffect(() => {\n        if (!relatedVacancies.resultsFound) {\n            return undefined;\n        }\n        const onScrollHandler = throttle(() => {\n            if (isLoading) {\n                return;\n            }\n            if (isScrolledPastThreshold(currentPageNumber.current, relatedVacancies.totalPages, wrapperRef.current)) {\n                loadMoreVacancies();\n            }\n        }, SCROLL_THROTTLE_DELAY_MS);\n\n        document.addEventListener('scroll', onScrollHandler);\n\n        return () => {\n            document.removeEventListener('scroll', onScrollHandler);\n        };\n    }, [isLoading, relatedVacancies, loadMoreVacancies, currentPageNumber, wrapperRef]);\n\n    if (!relatedVacancies.resultsFound) {\n        return null;\n    }\n\n    const renderBannerIfNeeded = (index) => {\n        if (index % relatedVacancies.itemsOnPage !== BANNER_POSITION) {\n            return null;\n        }\n        const isOdd = Math.floor((index - BANNER_POSITION) / relatedVacancies.itemsOnPage) % 2 !== 0;\n        const bannerNumberOnPage = Math.ceil(index / (BANNER_POSITION * 2));\n        return (\n            <VacancySerpBanner\n                isOdd={isOdd}\n                position={index}\n                adsPositionInfo={`${bannerNumberOnPage}_${index}`}\n                bannerNum={bannerNumberOnPage}\n            />\n        );\n    };\n\n    return (\n        <div className=\"vacancy-section\" ref={blockRef} data-qa=\"vacancy-view-vacancies-from-search\">\n            <H1Section Element=\"h2\">\n                <RelatedVacanciesTitle type={relatedVacancies.type} />\n            </H1Section>\n            <VSpacing base={4} />\n            <div ref={wrapperRef}>\n                {relatedVacancies?.vacancies?.map((vacancy, index) => (\n                    <Fragment key={vacancy.vacancyId}>\n                        {renderBannerIfNeeded(index)}\n                        <VacancySearchItem\n                            vacancy={vacancy}\n                            vacancySource={Source.RelatedVacancies}\n                            hhtmFromLabel={`${relatedVacancies.type}_vacancies`}\n                            isXs={isXs}\n                        />\n                    </Fragment>\n                ))}\n            </div>\n            {isLoading && (\n                <div className=\"related-vacancies-loading-indicator\">\n                    <Gap top>\n                        <Loading scale={LoadingScale.Small} />\n                    </Gap>\n                </div>\n            )}\n            {!isLoading && showLoadMore && (\n                <Gap top>\n                    <Button\n                        scale={ButtonScale.Small}\n                        kind={ButtonKind.Secondary}\n                        appearance={ButtonAppearance.Outlined}\n                        onClick={loadMoreVacancies}\n                    >\n                        <TranslateGuard useSpan>{trls[RelatedVacancies.trls.loadMoreVacancies]}</TranslateGuard>\n                    </Button>\n                </Gap>\n            )}\n        </div>\n    );\n};\n\nRelatedVacancies.trls = {\n    loadMoreVacancies: 'vacancy.related.loadMoreVacancies',\n};\n\nRelatedVacancies.propTypes = {\n    blockRef: PropTypes.object,\n    trls: PropTypes.object,\n};\n\nexport default translation(RelatedVacancies);\n","import { useIsRussia } from 'lux/hooks/useCountries';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { useIsHeadHunterPlatform } from 'lux/hooks/usePlatform';\n\n/*\nВозвращает true если приложение находится одновременно в состоянии\n 1) эксп для показа отдельной страницы включ\n 2) домене hh.ru\n 3) в рублевой зоне\n */\nexport default (): boolean => {\n    const isHH = useIsHeadHunterPlatform();\n    const isRisePageExperiment = useExperiment('enable_vacancy_rise_page');\n    const isRussia = useIsRussia();\n    return isRisePageExperiment && isHH && isRussia;\n};\n","// tempexp_28466_file\nimport { AxiosResponse } from 'axios';\n\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/anonymous/set_signup_backurl': {\n            queryParams: void;\n            body: { backUrl?: string };\n            response: void;\n        };\n    }\n}\n\nexport const setSignupBackurl = (backUrl: string): Promise<AxiosResponse<void>> =>\n    fetcher.post('/shards/anonymous/set_signup_backurl', { backUrl });\n","export const redirectToFinishSignup = (): void => {\n    window.location.assign('/applicant/finish_signup');\n};\n","import { useCallback, memo, Dispatch } from 'react';\nimport { AnyAction } from 'redux';\n\nimport { FolderOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { BasicTrigger, ControlsTriggerActionType } from 'lux/components/ControlsTrigger';\nimport { MODAL_ARCHIVE, ADD_MODAL } from 'lux/components/VacancyModals/constants';\nimport translation from 'lux/components/translation';\n\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nconst TrlKeys = {\n    archive: 'employer.myVacancyes.archivate',\n};\n\ninterface ArchiveActionProps {\n    Component: React.FC<BasicTrigger>;\n    triggerType: string;\n    vacanciesIds: number[];\n    vacancyName: string;\n    dispatchModal: Dispatch<AnyAction>;\n    additionalAnalyticsParams?: Record<string, string>;\n    actionType?: ControlsTriggerActionType;\n    icon?: React.ReactNode;\n    onArchiveSuccess: (params: { isFeedbackSent: boolean; responseQuery: string }) => void;\n    onClose?: () => void;\n}\n\nconst ArchiveAction: TranslatedComponent<ArchiveActionProps> = ({\n    Component,\n    triggerType,\n    vacanciesIds,\n    vacancyName,\n    dispatchModal,\n    additionalAnalyticsParams,\n    actionType,\n    icon,\n    trls,\n    onArchiveSuccess,\n    onClose,\n}) => {\n    const triggerName = 'archive';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: <FolderOutlinedSize24 initial=\"negative\" />,\n    });\n\n    const openModal = useCallback(() => {\n        dispatchModal({\n            type: ADD_MODAL,\n            payload: {\n                modalType: MODAL_ARCHIVE,\n                data: { vacanciesIds, vacancyName, onArchiveSuccess },\n            },\n        });\n\n        onClose && onClose();\n    }, [dispatchModal, vacanciesIds, vacancyName, onArchiveSuccess, onClose]);\n\n    return (\n        <Component\n            triggerName={triggerName}\n            triggerType={triggerType}\n            onTrigger={openModal}\n            batchLength={vacanciesIds.length}\n            additionalAnalyticsParams={additionalAnalyticsParams}\n            actionType={actionType}\n            isPermitted\n            icon={icon}\n            {...iconProps}\n        >\n            {trls[TrlKeys.archive]}\n        </Component>\n    );\n};\n\nexport default memo(translation(ArchiveAction));\n","import { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { CalendarOutlinedSize24, CrossCircleOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\n\nimport { ADD_MODAL, MODAL_AUTO_PROLONG } from 'lux/components/VacancyModals/constants';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport { UPDATE_CREATE_PERMISSION } from 'lux/components/VacancyActions/ProlongateAction';\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\nimport vacancyAutoProlongation from 'lux/components/VacancyActions/vacancyAutoProlongation';\n\nconst openModal = ({ dispatchModal, onClose, ...data }) => {\n    dispatchModal({\n        type: ADD_MODAL,\n        payload: {\n            modalType: MODAL_AUTO_PROLONG,\n            data,\n        },\n    });\n};\n\nconst disableAutoProlongation = async ({ vacanciesIds, setLoading, onClose, vacancyAutoProlongation, location }) => {\n    setLoading(true);\n    try {\n        await vacancyAutoProlongation({ action: 'disable', vacanciesIds, location });\n    } finally {\n        onClose?.();\n        setLoading(false);\n    }\n};\n\nconst openModalWithRequirements = async ({ vacanciesIds, setLoading, showDefaultError, onClose, modalParams }) => {\n    setLoading(true);\n    let requirements;\n    try {\n        requirements = (\n            await fetcher.put('/shards/employer/vacancies/auto_prolongation/requirements', { vacanciesIds })\n        )?.data;\n    } catch (error) {\n        showDefaultError(error);\n        return;\n    } finally {\n        onClose?.();\n        setLoading(false);\n    }\n\n    openModal({ ...modalParams, requirements });\n};\n\nconst useTriggerAction = ({\n    isAutoProlongationPlanned,\n    isPromoVacancy,\n    vacanciesIds,\n    managerIds,\n    showDefaultError,\n    vacancyAutoProlongation,\n    onClose,\n    dispatchModal,\n    isLoading,\n    setLoading,\n    location,\n    afterSuccessAction,\n}) => {\n    return useCallback(async () => {\n        if (isLoading) {\n            return;\n        }\n\n        if (isAutoProlongationPlanned) {\n            await disableAutoProlongation({\n                vacanciesIds,\n                setLoading,\n                onClose,\n                vacancyAutoProlongation,\n                location,\n            });\n            return;\n        }\n\n        const modalParams = { dispatchModal, vacanciesIds, managerIds, afterSuccessAction };\n\n        if (isPromoVacancy) {\n            openModal(modalParams);\n        } else {\n            await openModalWithRequirements({ vacanciesIds, setLoading, showDefaultError, onClose, modalParams });\n        }\n    }, [\n        isLoading,\n        isAutoProlongationPlanned,\n        dispatchModal,\n        vacanciesIds,\n        managerIds,\n        afterSuccessAction,\n        isPromoVacancy,\n        setLoading,\n        onClose,\n        vacancyAutoProlongation,\n        location,\n        showDefaultError,\n    ]);\n};\n\nconst AutoProlongationAction = ({\n    Component,\n    triggerType,\n    permissions,\n    additionalAnalyticsParams,\n    vacanciesIds,\n    trls,\n    icon,\n    ...triggerActionParams\n}) => {\n    const [isLoading, setLoading] = useState(false);\n\n    const handleTrigger = useTriggerAction({ ...triggerActionParams, isLoading, setLoading, vacanciesIds });\n    const action = triggerActionParams.isAutoProlongationPlanned ? 'disable' : 'enable';\n    const triggerName = 'auto-prolongation-toggle';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: action === 'enable' ? <CalendarOutlinedSize24 /> : <CrossCircleOutlinedSize24 />,\n    });\n\n    return (\n        <Component\n            triggerName={triggerName}\n            triggerType={triggerType}\n            onTrigger={handleTrigger}\n            isPermitted={permissions.includes(UPDATE_CREATE_PERMISSION)}\n            isLoading={isLoading}\n            additionalAnalyticsParams={{ ...additionalAnalyticsParams, action }}\n            batchLength={vacanciesIds.length}\n            icon={icon}\n            {...iconProps}\n        >\n            {trls[AutoProlongationAction.trls[action]]}\n        </Component>\n    );\n};\n\nAutoProlongationAction.trls = {\n    enable: 'employer.vacancies.autoProlongation.enable',\n    disable: 'employer.vacancies.autoProlongation.disable',\n};\n\nAutoProlongationAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    onClose: PropTypes.func,\n    vacanciesIds: PropTypes.array,\n    dispatchModal: PropTypes.func,\n    permissions: PropTypes.array,\n    isPromoVacancy: PropTypes.bool,\n    managerIds: PropTypes.array,\n    isAutoProlongationPlanned: PropTypes.bool,\n    vacancyAutoProlongation: PropTypes.func,\n    showDefaultError: PropTypes.func,\n    additionalAnalyticsParams: PropTypes.object,\n    trls: PropTypes.object,\n    location: PropTypes.object,\n    afterSuccessAction: PropTypes.func,\n    icon: PropTypes.element,\n};\n\nexport default connect(({ permissions, router: { location } }) => ({ permissions, location }), {\n    vacancyAutoProlongation,\n    showDefaultError,\n})(translation(AutoProlongationAction));\n","import PropTypes from 'prop-types';\n\nimport { SquaresIntersectedSize24 } from '@hh.ru/magritte-ui/icon';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { UPDATE_CREATE_PERMISSION } from 'lux/components/VacancyActions/ProlongateAction';\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nconst DuplicateAction = ({ Component, trls, vacancyId, triggerType, additionalAnalyticsParams }) => {\n    const permissions = useSelector((state) => state.permissions);\n    const triggerName = 'duplicate';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: <SquaresIntersectedSize24 />,\n    });\n\n    return (\n        <Component\n            triggerName={triggerName}\n            triggerType={triggerType}\n            triggerHref={`/employer/vacancy/duplicate/${vacancyId}`}\n            isPermitted={permissions.includes(UPDATE_CREATE_PERMISSION)}\n            additionalAnalyticsParams={additionalAnalyticsParams}\n            {...iconProps}\n        >\n            {trls[DuplicateAction.trls.duplicate]}\n        </Component>\n    );\n};\n\nDuplicateAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    triggerType: PropTypes.string,\n    permissions: PropTypes.array,\n    additionalAnalyticsParams: PropTypes.object,\n};\n\nDuplicateAction.trls = {\n    duplicate: 'employer.vacancy.button.duplicate',\n};\n\nexport default translation(DuplicateAction);\n","import { PenSquareOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { BasicTrigger } from 'lux/components/ControlsTrigger';\nimport translation from 'lux/components/translation';\n\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nconst TrlKeys = {\n    edit: 'employer.vacancy.button.edit',\n};\n\ninterface EditActionProps {\n    Component: React.FC<BasicTrigger>;\n    triggerType: string;\n    vacancyId: number;\n    employerId?: number;\n    additionalAnalyticsParams?: Record<string, string>;\n    iconOnly?: boolean;\n}\n\nconst EditAction: TranslatedComponent<EditActionProps> = ({\n    Component,\n    triggerType,\n    trls,\n    vacancyId,\n    employerId,\n    additionalAnalyticsParams,\n    iconOnly = false,\n}) => {\n    const triggerName = 'edit';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: <PenSquareOutlinedSize24 />,\n    });\n\n    const url = urlParser(`/employer/vacancy/edit/${vacancyId}`);\n    if (employerId) {\n        url.params = {\n            employerId,\n        };\n    }\n\n    return (\n        <Component\n            isPermitted\n            triggerName={triggerName}\n            triggerHref={url.href}\n            triggerType={triggerType}\n            additionalAnalyticsParams={additionalAnalyticsParams}\n            {...iconProps}\n        >\n            {!iconOnly && trls[TrlKeys.edit]}\n        </Component>\n    );\n};\n\nexport default translation(EditAction);\n","import { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport { ArrowUpOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\n\nimport {\n    TOGGLE_VACANCY_OPTION_SUCCESS,\n    TOGGLE_VACANCY_OPTION_ERROR,\n} from 'lux/components/Notifications/EmployerVacancies';\nimport { ADD_MODAL, MODAL_BUY_OPTION } from 'lux/components/VacancyModals/constants';\nimport translation from 'lux/components/translation';\nimport { refreshManagerVacancy } from 'lux/models/employerVacancies/managerVacancies';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nexport const OPTION_ACTIONS = {\n    enable: 'enable',\n    disable: 'disable',\n};\n\nconst ACTION_ERROR_KEYS = [\n    'FAILED_TO_DELETE_EXPIRED',\n    'PREMIUM_ALREDY_SET',\n    'PREMIUM_NOT_SET',\n    'FAILED_TO_DELETE',\n    'NOT_ZP_VACANCY',\n    'FAILED_TO_SPEND_SERVICE',\n    'FAILED_TO_RETURN_SERVICE',\n    'FAILED_TO_GET_SERVICE_COUNT',\n    'NOT_ENOUGH_QUOTAS',\n    'VACANCY_IS_NOT_ACTIVE',\n];\n\nconst OptionAction = ({\n    Component,\n    triggerType,\n    hasActiveOption,\n    vacancyId,\n    vacancyName,\n    additionalAnalyticsParams,\n    dispatchModal,\n    onClose,\n    trls,\n}) => {\n    const action = hasActiveOption ? OPTION_ACTIONS.disable : OPTION_ACTIONS.enable;\n    const [isLoading, setLoading] = useState(false);\n    const location = useSelector((state) => state.router.location);\n    const dispatch = useDispatch();\n    const triggerName = 'option-toggle';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: <ArrowUpOutlinedSize24 />,\n    });\n\n    const openModal = useCallback(() => {\n        dispatchModal({\n            type: ADD_MODAL,\n            payload: {\n                modalType: MODAL_BUY_OPTION,\n            },\n        });\n    }, [dispatchModal]);\n\n    const toggleOption = useCallback(async () => {\n        setLoading(true);\n        try {\n            const response = await fetcher.post(\n                `/shards/employer/vacancies_dashboard/toggle_vacancy_option?vacancyId=${vacancyId}&action=${action}`\n            );\n            if (location.pathname.match('/vacancy/')) {\n                dispatch(push(`${location.pathname}${response.data.query}`));\n            } else {\n                const vacancy = (\n                    await fetcher.get('/shards/employer/vacancies/get_full_vacancy', { params: { vacancyId } })\n                ).vacancy;\n                dispatch(refreshManagerVacancy(vacancy));\n                dispatch(addNotification(TOGGLE_VACANCY_OPTION_SUCCESS, { vacancyName, action }));\n            }\n        } catch (error) {\n            const errorKey = error?.response?.data?.error?.[0]?.key;\n            if (ACTION_ERROR_KEYS.includes(errorKey)) {\n                dispatch(addNotification(TOGGLE_VACANCY_OPTION_ERROR, { errorKey }));\n            } else if (errorKey === 'NOT_ENOUGH_SERVICES') {\n                openModal();\n            } else {\n                dispatch(showDefaultError(error));\n            }\n        } finally {\n            onClose?.();\n            setLoading(false);\n        }\n    }, [action, dispatch, location.pathname, onClose, openModal, vacancyId, vacancyName]);\n\n    return (\n        <Component\n            triggerName={triggerName}\n            triggerType={triggerType}\n            onTrigger={toggleOption}\n            isPermitted\n            isLoading={isLoading}\n            additionalAnalyticsParams={{ ...additionalAnalyticsParams, action }}\n            {...iconProps}\n        >\n            {trls[OptionAction.trls[action]]}\n        </Component>\n    );\n};\n\nOptionAction.trls = {\n    enable: 'vacancy.enableOption.trigger',\n    disable: 'vacancy.disableOption.trigger',\n};\n\nOptionAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    hasActiveOption: PropTypes.bool,\n    vacancyId: PropTypes.number,\n    vacancyName: PropTypes.string,\n    dispatchModal: PropTypes.func,\n    onClose: PropTypes.func,\n    additionalAnalyticsParams: PropTypes.object,\n    trls: PropTypes.object,\n};\n\nexport default translation(OptionAction);\n","import format from 'bloko/common/format';\nimport getConversionType from 'bloko/common/getConversionType';\nimport { LangTrls } from 'bloko/common/hooks/useTranslations';\n\nimport { EmployerVacanciesRiseProps } from 'lux/models/employerVacanciesRise';\nimport { UpdateInfo } from 'lux/models/updateInfo';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nconst TrlKeys = {\n    errorInsufficiencyPrefix: 'vacancy.rise.error.insufficiency.prefix',\n    errorInsufficiencyPostfix: 'vacancy.rise.error.insufficiency.postfix',\n\n    typeStandardOne: 'vacancy.rise.error.type.standard.one',\n    typeStandardSome: 'vacancy.rise.error.type.standard.some',\n    typeStandardMany: 'vacancy.rise.error.type.standard.many',\n    typeStandardPlusOne: 'vacancy.rise.error.type.standard.plus.one',\n    typeStandardPlusSome: 'vacancy.rise.error.type.standard.plus.some',\n    typeStandardPlusMany: 'vacancy.rise.error.type.standard.plus.many',\n    typePremiumOne: 'vacancy.rise.error.type.premium.one',\n    typePremiumSome: 'vacancy.rise.error.type.premium.some',\n    typePremiumMany: 'vacancy.rise.error.type.premium.many',\n    typeAnonymousOne: 'vacancy.rise.error.type.anonymous.one',\n    typeAnonymousSome: 'vacancy.rise.error.type.anonymous.some',\n    typeAnonymousMany: 'vacancy.rise.error.type.anonymous.many',\n    typeAdvertisingOne: 'vacancy.rise.error.type.advertising.one',\n    typeAdvertisingSome: 'vacancy.rise.error.type.advertising.some',\n    typeAdvertisingMany: 'vacancy.rise.error.type.advertising.many',\n\n    errorNonProlongableVacanciesOne: 'vacancy.rise.error.nonProlongableVacancies.one',\n    errorNonProlongableVacanciesMany: 'vacancy.rise.error.nonProlongableVacancies.many',\n\n    ARCHIVED: 'vacancy.rise.error.archivedOrClosed',\n    STANDARD_PLUS_NOT_MINIMUM_DAYS_TO_PROLONGATION: 'vacancy.rise.error.standardPlusNotMinimumDaysToProlongation',\n    STANDARD_PLUS_CLOSED: 'vacancy.rise.error.archivedOrClosed',\n    ACCESS_DENIED: 'vacancy.rise.error.accessDenied',\n};\n\nfunction getNonProlongableVacancies(\n    prolongableVacancies: UpdateInfo['notNeedProlongation'] | UpdateInfo['cantBeProlongated']\n) {\n    if (Array.isArray(prolongableVacancies)) {\n        return prolongableVacancies.map(({ vacancyId, reason }) => {\n            return { vacancyId, reason };\n        });\n    }\n    return [];\n}\n\n// Парсит ответ с POST /employer/vacancy/update_info(срабатывает при клике на кнопку «Поднять»)\n// Если возвращает null, то это значит что поднятие валидно и возможно,\n// иначе возвращает сообщение-причину(message) почему нельзя поднять.\n// Для случая когда нужно докупить, возвращает кроме сообщения еще и ключ-причину(reason),\n// для того чтобы snackbar понял что нужно рисовать кнопку для перехода на докупку\nexport function validateResponse(\n    {\n        unavailablePublications,\n        spentPublications,\n        promoPublicationInfo,\n        vacancyIdsWithFreeRenewal,\n        notNeedProlongation,\n        cantBeProlongated,\n    }: UpdateInfo,\n    trls: LangTrls\n): EmployerVacanciesRiseProps['error'] | null {\n    const isSomethingPossible =\n        spentPublications?.length > 0 || promoPublicationInfo || vacancyIdsWithFreeRenewal.length > 0;\n    const hasPublicationsInsufficiency = unavailablePublications?.length > 0;\n    const nonProlongableVacancies: { vacancyId: number; reason: string }[] = [\n        ...getNonProlongableVacancies(notNeedProlongation),\n        ...getNonProlongableVacancies(cantBeProlongated),\n    ];\n\n    // если возможно что-то поднять из пачки\n    if (isSomethingPossible) {\n        return null;\n    }\n\n    // ошибки на докупку, они в приоритете на показ\n    if (hasPublicationsInsufficiency) {\n        return {\n            message: unavailablePublications.reduce((acc, curr, index) => {\n                const lastIndex = unavailablePublications.length - 1;\n                const isLastIndex = lastIndex === index;\n\n                let vacancyDescription = '';\n                if (curr.vacancyServiceCode === MetallicVacancyType.Standard) {\n                    vacancyDescription = `${curr.count} ${getConversionType({\n                        one: trls[TrlKeys.typeStandardOne],\n                        some: trls[TrlKeys.typeStandardSome],\n                        many: trls[TrlKeys.typeStandardMany],\n                        value: curr.count,\n                    })}`;\n                } else if (curr.vacancyServiceCode === MetallicVacancyType.StandardPlus) {\n                    vacancyDescription = `${curr.count} ${getConversionType({\n                        one: trls[TrlKeys.typeStandardPlusOne],\n                        some: trls[TrlKeys.typeStandardPlusSome],\n                        many: trls[TrlKeys.typeStandardPlusMany],\n                        value: curr.count,\n                    })}`;\n                } else if (curr.vacancyServiceCode === MetallicVacancyType.Premium) {\n                    vacancyDescription = `${curr.count} ${getConversionType({\n                        one: trls[TrlKeys.typePremiumOne],\n                        some: trls[TrlKeys.typePremiumSome],\n                        many: trls[TrlKeys.typePremiumMany],\n                        value: curr.count,\n                    })}`;\n                } else if (curr.vacancyServiceCode.includes('ANONYMOUS')) {\n                    vacancyDescription = `${curr.count} ${getConversionType({\n                        one: trls[TrlKeys.typeAnonymousOne],\n                        some: trls[TrlKeys.typeAnonymousSome],\n                        many: trls[TrlKeys.typeAnonymousMany],\n                        value: curr.count,\n                    })}`;\n                } else if (curr.vacancyServiceCode.includes('ADVERTISING')) {\n                    vacancyDescription = `${curr.count} ${getConversionType({\n                        one: trls[TrlKeys.typeAdvertisingOne],\n                        some: trls[TrlKeys.typeAdvertisingSome],\n                        many: trls[TrlKeys.typeAdvertisingMany],\n                        value: curr.count,\n                    })}`;\n                }\n\n                if (index === 0) {\n                    return format(trls[TrlKeys.errorInsufficiencyPrefix], {\n                        '{0}': vacancyDescription,\n                    });\n                } else if (isLastIndex) {\n                    return `${acc} ${format(trls[TrlKeys.errorInsufficiencyPostfix], {\n                        '{0}': vacancyDescription,\n                    })}`;\n                }\n\n                return `${acc}, ${vacancyDescription}`;\n            }, ''),\n            reason: 'unavailablePublications',\n        };\n    }\n\n    // если причин несколько почему нельзя поднять вакансии, то пишем общую ошибку \"Не получится поднять вакансии\"\n    if (nonProlongableVacancies.length > 1) {\n        return { message: trls[TrlKeys.errorNonProlongableVacanciesMany] };\n    }\n    // если причина почему нельзя поднять вакансию одна, то\n    // если ошибка из тех что мы обрабатываем по стайлгайду, то берем ее из словаря,\n    // иначе пишем общую ошибку \"Не получится поднять вакансию\"\n    if (nonProlongableVacancies.length === 1) {\n        const [vacancy] = nonProlongableVacancies;\n        // причина из стайлгайда в словаре\n        if (Object.keys(TrlKeys).includes(vacancy.reason)) {\n            return { message: trls[TrlKeys[vacancy.reason as keyof typeof TrlKeys]] };\n        }\n\n        return { message: trls[TrlKeys.errorNonProlongableVacanciesOne] };\n    }\n    return null;\n}\n","import { ComponentType, ReactNode, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { VACANCY_ACTION_ERROR } from 'lux/components/Notifications/VacancyActionError';\nimport translation from 'lux/components/translation';\nimport { UpdateInfo } from 'lux/models/updateInfo';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport FreeRenewalTip from 'lux/components/VacancyActions/FreeRenewalTip';\nimport { validateResponse } from 'lux/components/VacancyActions/risePageExperimentUtils';\n\nexport const UPDATE_CREATE_PERMISSION = 'CreateVacancy';\nconst VACANCY_UPDATE_INFO_URL = '/employer/vacancy/update_info';\n\nconst TrlKeys = {\n    renewal: 'vacancy.action.renewal',\n    aria: 'vacancy.rise.aria',\n    snack: 'vacancy.rise.now',\n};\n\nconst fetchUpdateInfoSuccess = makeSetStoreField('updateInfo');\n\nconst setEmployerVacanciesRise = makeSetStoreField('employerVacanciesRise');\n\ndeclare global {\n    interface FetcherPostApi {\n        [VACANCY_UPDATE_INFO_URL]: {\n            body: { id: number[] };\n            queryParams: void;\n            response: UpdateInfo;\n        };\n    }\n}\n\nexport interface ComponentProps {\n    triggerName: string;\n    children: ReactNode;\n    triggerType: string;\n    onTrigger: () => void;\n    batchLength: number;\n    isPermitted: boolean;\n    isLoading: boolean;\n    additionalAnalyticsParams?: Record<string, string>;\n    actionType?: string;\n    displayInOwnColumn?: boolean;\n    icon?: ReactNode;\n}\n\ninterface ProlongateActionRisePageExperimentProps {\n    Component: ComponentType<ComponentProps>;\n    checkedVacancies: Record<number, number[]>;\n    triggerType: string;\n    vacanciesIds: number[];\n    vacancyId: number;\n    additionalAnalyticsParams?: Record<string, string>;\n    icon?: ReactNode;\n    actionType?: string;\n    freeRenewalInfo?: {\n        isFreeRenewalAvailable: boolean;\n        lastFreeRenewal: string;\n        freeRenewalInterval: string;\n    };\n    displayInOwnColumn?: boolean;\n}\n\nconst ProlongateActionRisePageExperiment: TranslatedComponent<ProlongateActionRisePageExperimentProps> = ({\n    Component,\n    triggerType,\n    vacanciesIds,\n    freeRenewalInfo,\n    additionalAnalyticsParams,\n    displayInOwnColumn,\n    actionType,\n    icon,\n    trls,\n}) => {\n    const dispatch = useDispatch();\n    const [isLoading, setLoading] = useState(false);\n    const permissions = useSelector((state) => state.permissions);\n    const breakpoint = useBreakpoint();\n    const canShowHoverTip = [Breakpoint.M, Breakpoint.L].includes(breakpoint);\n\n    const { isFreeRenewalAvailable, lastFreeRenewal, freeRenewalInterval } = freeRenewalInfo || {\n        isFreeRenewalAvailable: false,\n        lastFreeRenewal: '',\n        freeRenewalInterval: '',\n    };\n\n    const loadUpdateInfo = useCallback(() => {\n        setLoading(true);\n        dispatch(setEmployerVacanciesRise(null));\n        return fetcher.post(VACANCY_UPDATE_INFO_URL, { id: vacanciesIds }).then(\n            (updateInfo) => {\n                dispatch(fetchUpdateInfoSuccess(updateInfo.data));\n                const error = validateResponse(updateInfo.data, trls);\n                dispatch(setEmployerVacanciesRise(error ? { error } : { success: { message: trls[TrlKeys.snack] } }));\n                setLoading(false);\n            },\n            () => {\n                dispatch(addNotification(VACANCY_ACTION_ERROR));\n                setLoading(false);\n            }\n        );\n    }, [dispatch, trls, vacanciesIds]);\n\n    return (\n        <Component\n            triggerName=\"prolongate\"\n            triggerType={triggerType}\n            onTrigger={loadUpdateInfo}\n            batchLength={vacanciesIds.length}\n            isPermitted={permissions.includes(UPDATE_CREATE_PERMISSION)}\n            isLoading={isLoading}\n            additionalAnalyticsParams={additionalAnalyticsParams}\n            actionType={actionType}\n            displayInOwnColumn={displayInOwnColumn}\n            icon={icon}\n        >\n            {isFreeRenewalAvailable && canShowHoverTip ? (\n                <HoverTip\n                    placement={TipPlacement.Bottom}\n                    render={() => (\n                        <FreeRenewalTip lastFreeRenewal={lastFreeRenewal} freeRenewalInterval={freeRenewalInterval} />\n                    )}\n                    host={!process.env.LUX_SERVER ? document.body : null}\n                >\n                    <span>{trls[TrlKeys.renewal]}</span>\n                </HoverTip>\n            ) : (\n                trls[TrlKeys.renewal]\n            )}\n        </Component>\n    );\n};\n\nexport default translation(ProlongateActionRisePageExperiment);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { Snackbar } from '@hh.ru/magritte-ui';\nimport { MinusCircleFilledSize24 } from '@hh.ru/magritte-ui/icon';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport useShowRisePage from 'lux/components/Rise/useShowRisePage';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst setEmployerVacanciesRise = makeSetStoreField('employerVacanciesRise');\n\nconst TrlKeys = {\n    aria: 'vacancy.rise.aria',\n    goToBuy: 'vacancy.rise.goToBuy',\n};\nconst PRICE_LIST_URL = '/price/publications';\n\nconst SnackbarRisePageExperiment: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const isShowRisePage = useShowRisePage();\n    const error = useSelector((state) => state.employerVacanciesRise?.error);\n    const success = useSelector((state) => state.employerVacanciesRise?.success);\n\n    if (!isShowRisePage) {\n        return null;\n    }\n\n    return (\n        <>\n            {error && (\n                <Snackbar\n                    addon={<MinusCircleFilledSize24 initial=\"negative\" />}\n                    aria-label={trls[TrlKeys.aria]}\n                    onClose={() => dispatch(setEmployerVacanciesRise(null))}\n                    showClose\n                    onAction={() => {\n                        dispatch(push(PRICE_LIST_URL));\n                    }}\n                    actionLabel={error.reason ? trls[TrlKeys.goToBuy] : undefined}\n                >\n                    {error.message}\n                </Snackbar>\n            )}\n            {success && (\n                <Snackbar\n                    aria-label={trls[TrlKeys.aria]}\n                    onClose={() => dispatch(setEmployerVacanciesRise(null))}\n                    showClose\n                    onAction={() => {\n                        dispatch(push(PRICE_LIST_URL));\n                    }}\n                >\n                    {success.message}\n                </Snackbar>\n            )}\n        </>\n    );\n};\n\nexport default translation(SnackbarRisePageExperiment);\n","import { useCallback, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { AstrostarOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\n\nimport { VACANCY_ACTION_ERROR } from 'lux/components/Notifications/VacancyActionError';\nimport { ADD_MODAL, MODAL_UPGRADE } from 'lux/components/VacancyModals/constants';\nimport translation from 'lux/components/translation';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport fetchVacancyUpgrades from 'lux/requests/vacancyUpgrades/fetchVacancyUpgrades';\n\nimport { UPDATE_CREATE_PERMISSION } from 'lux/components/VacancyActions/ProlongateAction';\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nconst openModal = ({ dispatchModal, afterVacancyTypeHasBeenChanged, onClose, vacancyId, employerId, from }) => {\n    Analytics.sendEvent('account', 'update-vacancy', from, vacancyId);\n\n    dispatchModal({\n        type: ADD_MODAL,\n        payload: {\n            modalType: MODAL_UPGRADE,\n            data: { afterVacancyTypeHasBeenChanged, vacancyId, employerId, from },\n        },\n    });\n    onClose?.();\n};\n\nconst useHandleUpgrade = ({\n    addNotification,\n    afterVacancyTypeHasBeenChanged,\n    fetchVacancyUpgrades,\n    vacancyId,\n    employerId,\n    isLoading,\n    setLoading,\n    dispatchModal,\n    onClose,\n    from,\n}) => {\n    return useCallback(async () => {\n        if (isLoading) {\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            await fetchVacancyUpgrades({ params: { employerId, vacancyId } });\n        } catch {\n            addNotification(VACANCY_ACTION_ERROR);\n            return;\n        } finally {\n            setLoading(false);\n        }\n\n        openModal({ dispatchModal, afterVacancyTypeHasBeenChanged, onClose, vacancyId, employerId, from });\n    }, [\n        afterVacancyTypeHasBeenChanged,\n        isLoading,\n        setLoading,\n        dispatchModal,\n        onClose,\n        vacancyId,\n        employerId,\n        from,\n        fetchVacancyUpgrades,\n        addNotification,\n    ]);\n};\n\nconst UpgradeAction = ({\n    Component,\n    trls,\n    triggerType,\n    permissions,\n    additionalAnalyticsParams,\n    text,\n    actionType,\n    displayInOwnColumn,\n    ...triggerProps\n}) => {\n    const [isLoading, setLoading] = useState(false);\n    const [modalShown, setModalShown] = useState(false);\n\n    const triggerName = 'upgrade';\n    const iconProps = displayInOwnColumn\n        ? undefined\n        : getMenuButtonIconProps({\n              triggerType,\n              triggerName,\n              icon: <AstrostarOutlinedSize24 />,\n          });\n\n    const handleTrigger = useHandleUpgrade({ ...triggerProps, isLoading, setLoading });\n\n    useEffect(() => {\n        if (window.location.hash === '#upgrade' && !modalShown) {\n            setModalShown(true);\n            handleTrigger();\n        }\n    }, [handleTrigger, modalShown, setModalShown]);\n\n    return (\n        <Component\n            triggerName={triggerName}\n            triggerType={triggerType}\n            onTrigger={handleTrigger}\n            isLoading={isLoading}\n            isPermitted={permissions.includes(UPDATE_CREATE_PERMISSION)}\n            additionalAnalyticsParams={additionalAnalyticsParams}\n            displayInOwnColumn={displayInOwnColumn}\n            actionType={actionType}\n            {...iconProps}\n        >\n            {text || trls[UpgradeAction.trls.improve]}\n        </Component>\n    );\n};\n\nUpgradeAction.trls = {\n    info: 'vacancy.update.text',\n    upgradeTitle: 'vacancy.upgrade.popup.title',\n    fail: 'employer.service.message.fail',\n    cancel: 'employer.myVacancyes.move.cancel',\n    improve: 'vacancy.tools.improve',\n};\n\nUpgradeAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    vacancyId: PropTypes.number,\n    displayInOwnColumn: PropTypes.bool,\n    triggerType: PropTypes.string,\n    onClose: PropTypes.func,\n    dispatchModal: PropTypes.func,\n    permissions: PropTypes.array,\n    fetchVacancyUpgrades: PropTypes.func,\n    actionType: PropTypes.string,\n    addNotification: PropTypes.func,\n    additionalAnalyticsParams: PropTypes.object,\n    trls: PropTypes.object,\n    from: PropTypes.string,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    ({ permissions }) => ({\n        permissions,\n    }),\n    { fetchVacancyUpgrades, addNotification }\n)(translation(UpgradeAction));\n","import { ReactNode, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AnyAction, Dispatch } from 'redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { LinkOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { ADD_MODAL, MODAL_VIDEOINTERVIEW } from 'lux/components/VacancyModals/constants';\nimport VideoInterviewInfo from 'lux/components/VacancyView/VideoInterviewInfo';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport getMenuButtonIconProps from 'lux/components/VacancyActions/getMenuButtonIconProps';\n\nconst TrlKeys = {\n    videointerview: 'employer.myVacancyes.videointerview',\n};\n\nexport interface VacancyInterviewActionComponent {\n    (props: {\n        isPermitted?: boolean;\n        triggerName?: string;\n        triggerType?: string;\n        onTrigger?: () => void;\n        batchLength?: number;\n        additionalAnalyticsParams?: Record<string, unknown>;\n        children?: ReactNode;\n    }): JSX.Element;\n}\n\ninterface VideoInterviewActionProps {\n    Component: VacancyInterviewActionComponent;\n    triggerType?: string;\n    onClose?: () => void;\n    vacanciesIds: number[];\n    dispatchModal: Dispatch<AnyAction>;\n    showInfo?: boolean;\n    labelEntry?: string;\n    additionalAnalyticsParams?: Record<string, unknown>;\n}\n\nconst VideoInterviewAction: TranslatedComponent<VideoInterviewActionProps> = ({\n    Component,\n    labelEntry,\n    triggerType,\n    onClose,\n    vacanciesIds,\n    dispatchModal,\n    trls,\n    showInfo,\n    additionalAnalyticsParams,\n}) => {\n    const triggerName = 'videointerview';\n    const iconProps = getMenuButtonIconProps({\n        triggerType,\n        triggerName,\n        icon: <LinkOutlinedSize24 />,\n    });\n\n    const dispatch = useDispatch();\n    const openModal = useCallback(async () => {\n        onClose?.();\n        let authToken;\n        try {\n            authToken = (await fetcher.get('/shards/employer/video_interview/auth')).token;\n        } catch (error) {\n            dispatch(showDefaultError(error));\n            return;\n        }\n        Analytics.sendHHEventButtonClick('videoInterviewTrigger', {\n            goal: 'PORTFOLIO-10079',\n            labelEntry,\n        });\n        dispatchModal({\n            type: ADD_MODAL,\n            payload: {\n                modalType: MODAL_VIDEOINTERVIEW,\n                data: {\n                    vacanciesIds,\n                    authToken,\n                },\n            },\n        });\n    }, [onClose, labelEntry, dispatchModal, vacanciesIds, dispatch]);\n\n    return (\n        <VideoInterviewInfo showInfo={showInfo}>\n            <Component\n                isPermitted\n                triggerName={triggerName}\n                triggerType={triggerType}\n                onTrigger={openModal}\n                batchLength={vacanciesIds.length}\n                additionalAnalyticsParams={additionalAnalyticsParams}\n                {...iconProps}\n            >\n                {trls[TrlKeys.videointerview]}\n            </Component>\n        </VideoInterviewInfo>\n    );\n};\n\nexport default translation(VideoInterviewAction);\n","import { Fragment, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport VacancyAcceptTemporary from 'lux/components/VacancyView/VacancyAcceptTemporary';\nimport VacancyActions from 'lux/components/VacancyView/VacancyActions';\nimport VacancyAdditionalAccepts from 'lux/components/VacancyView/VacancyAdditionalAccepts';\nimport VacancyCompany from 'lux/components/VacancyView/VacancyCompany';\nimport VacancyContacts from 'lux/components/VacancyView/VacancyContacts';\nimport VacancyDescription from 'lux/components/VacancyView/VacancyDescription';\nimport VacancyDriverLicense from 'lux/components/VacancyView/VacancyDriverLicense';\nimport VacancyEmployment from 'lux/components/VacancyView/VacancyEmployment';\nimport VacancyFooter from 'lux/components/VacancyView/VacancyFooter';\nimport VacancyIsArchived from 'lux/components/VacancyView/VacancyIsArchived';\nimport VacancyKeySkills from 'lux/components/VacancyView/VacancyKeySkills';\nimport VacancyMap from 'lux/components/VacancyView/VacancyMap';\nimport VacancyOnlineUsersCounter from 'lux/components/VacancyView/VacancyOnlineUsersCounter';\nimport VacancyParttimeOptions from 'lux/components/VacancyView/VacancyParttimeOptions';\nimport VacancyPreviewTools from 'lux/components/VacancyView/VacancyPreviewTools';\nimport VacancyResponseQuestions from 'lux/components/VacancyView/VacancyResponseQuestions';\nimport VacancySimilarResumes from 'lux/components/VacancyView/VacancySimilarResumes';\nimport VacancySkillSurvey from 'lux/components/VacancyView/VacancySkillSurvey';\nimport VacancyTitle from 'lux/components/VacancyView/VacancyTitle';\nimport VacancyWorkExperience from 'lux/components/VacancyView/VacancyWorkExperience';\nimport useIsVisibleBody from 'lux/components/VacancyView/hooks/useIsVisibleBody';\n\nconst VacancyBody = ({ contactsNodeRef, vacancyBodyFooterNodeRef }) => {\n    const resumeFormNodeRef = useRef();\n    const { isVisibleBody, setIsVisibleBody } = useIsVisibleBody();\n\n    return (\n        <Fragment>\n            <VacancyTitle />\n            <VacancyCompany />\n            <Gap bottom>\n                <VacancyOnlineUsersCounter />\n                <VacancyIsArchived isHiddenSwitcher={isVisibleBody} setVisibilityBody={setIsVisibleBody} />\n                {isVisibleBody && (\n                    <Fragment>\n                        <VacancyActions\n                            contactsNodeRef={contactsNodeRef}\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            resumeFormNodeRef={resumeFormNodeRef}\n                        />\n                        <ColumnsRow>\n                            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                                <div className=\"vacancy-description\">\n                                    <Gap bottom>\n                                        <VacancyWorkExperience />\n                                        <VacancyEmployment />\n                                        <VacancyAcceptTemporary />\n                                        <VacancyParttimeOptions />\n                                    </Gap>\n                                    <VacancyDescription />\n                                    <VacancyAdditionalAccepts />\n                                    <VacancyKeySkills />\n                                    <VacancyDriverLicense />\n                                    <VacancySkillSurvey />\n                                    <VacancyContacts blockRef={contactsNodeRef} />\n                                    <VacancyResponseQuestions vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                                    <VacancyMap />\n                                    <VacancyPreviewTools />\n                                    <VacancySimilarResumes />\n                                </div>\n                            </Column>\n                        </ColumnsRow>\n                        <VacancyFooter vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                    </Fragment>\n                )}\n            </Gap>\n        </Fragment>\n    );\n};\n\nVacancyBody.propTypes = {\n    contactsNodeRef: PropTypes.object,\n    vacancyBodyFooterNodeRef: PropTypes.object,\n};\n\nexport default VacancyBody;\n","import { useState } from 'react';\n\nimport Info, { InfoPlacement } from 'bloko/blocks/drop/Info';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Notices from 'Modules/Notices';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'employer.vacancy.videointerview.tip.content',\n};\n\nconst NAME = 'videointerview_vacancy_menu';\n\ninterface VideoInterviewInfoProps {\n    children: JSX.Element;\n    showInfo?: boolean;\n}\n\nconst VideoInterviewInfo: TranslatedComponent<VideoInterviewInfoProps> = ({ children, showInfo, trls }) => {\n    const [show, setShow] = useState(true);\n    if (useSelector((state) => state.infoTip?.name !== NAME) || !showInfo) {\n        return children;\n    }\n    return (\n        <Info\n            onClose={() => {\n                setShow(false);\n                Notices.markAsViewed(NAME);\n            }}\n            placement={InfoPlacement.TopStart}\n            render={() => <div className=\"vacancy-videointerview-tip\">{trls[TrlKeys.content]}</div>}\n            show={show}\n        >\n            {children}\n        </Info>\n    );\n};\nexport default translation(VideoInterviewInfo);\n","import PropTypes from 'prop-types';\n\nconst vacancyView = PropTypes.shape({\n    specializations: PropTypes.shape({\n        profArea: PropTypes.arrayOf(\n            PropTypes.shape({\n                '@id': PropTypes.number,\n                trl: PropTypes.string,\n            })\n        ),\n    }),\n    status: PropTypes.shape({\n        archived: PropTypes.bool,\n    }),\n    area: PropTypes.shape({\n        areaCatalogTitle: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n        visibleName: PropTypes.string,\n    }),\n    name: PropTypes.string,\n});\n\nexport default { vacancyView };\n","import Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nimport VerificationForm, { VerificationFormBaseProps } from 'lux/components/Verification/VerificationForm';\n\nconst TrlKeys = {\n    header: 'otp.confirm.header',\n    subHeader: 'otp.confirm.sub.header',\n    firstName: 'newApplicant.firstName',\n    lastName: 'newApplicant.lastName',\n    send: 'account.connect.merge_by_code.send',\n    codePlaceholder: 'account.connect.merge_by_code.codePlaceholder',\n    confirmCode: 'account.connect.merge_by_code.confirm',\n    submitSignup: 'signupForm.create.submit',\n};\n\nexport interface VerificationProps extends VerificationFormBaseProps {\n    onCancel?: () => void;\n    cancelText?: string;\n    codePlaceholder?: string;\n    errorPageLogin?: boolean;\n    loginFormatted?: string;\n}\n\nconst Verification: TranslatedComponent<VerificationProps> = ({\n    trls,\n    errorPageLogin,\n    codePlaceholder,\n    onCancel,\n    cancelText,\n    loginFormatted,\n    ...formProps\n}) => {\n    const isXs = useBreakpoint() === Breakpoint.XS;\n    const { isSignupPage, login } = formProps;\n\n    return (\n        <VerificationForm\n            render={({ renderInput, renderCodeError, renderCodeSender, renderSubmit, renderCancelButton }) => {\n                return (\n                    <Column l={'6'} m={'6'} s={'6'} xs={'4'} container>\n                        <H2>\n                            <div className=\"verification-header\">\n                                {format(trls[TrlKeys.header], {\n                                    '{0}': (loginFormatted as string) || (login as string),\n                                })}\n                            </div>\n                        </H2>\n                        <VSpacing base={3} />\n                        <p>{trls[TrlKeys.subHeader]}</p>\n                        <VSpacing base={6} />\n                        <div className=\"verification-content\">\n                            <div className=\"verification-input-wrapper\">\n                                {renderInput({\n                                    placeholder: codePlaceholder,\n                                    isAutofocus: isSignupPage,\n                                })}\n                            </div>\n                        </div>\n                        <div>\n                            {isXs && renderCodeError()}\n                            <VSpacing base={3} />\n                            <Text importance={TextImportance.Tertiary}>{renderCodeSender()}</Text>\n                        </div>\n                        {!isXs && <div className=\"verification-error-wrapper\">{renderCodeError()}</div>}\n                        <VSpacing base={0} xs={5} />\n                        <div className=\"verification-submit\">{renderSubmit({ isStretched: !errorPageLogin })}</div>\n                        {onCancel && (\n                            <>\n                                <VSpacing base={3} />\n                                <div className=\"verification-submit\">\n                                    {renderCancelButton({\n                                        isStretched: !errorPageLogin,\n                                        onClick: onCancel,\n                                        trl: cancelText as string,\n                                    })}\n                                </div>\n                            </>\n                        )}\n                    </Column>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(Verification);\n","import { Dispatch, FormEventHandler, ReactNode, RefObject, SetStateAction, useEffect, useRef, useState } from 'react';\n\nimport Button, { ButtonKind, ButtonAppearance, ButtonType } from 'bloko/blocks/button';\nimport InputText, { InputType } from 'bloko/blocks/inputText';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport CodeError from 'lux/components/OTP/CodeError';\nimport CodeSender, { AvailableOtpUrls } from 'lux/components/OTP/CodeSender';\nimport translation from 'lux/components/translation';\nimport useAutofocus from 'lux/hooks/useAutofocus';\nimport { Verification as VerificationType } from 'lux/models/applicant/auth';\n\nconst MIN_CODE_LENGTH = 4;\n\nconst TrlKeys = {\n    header: 'otp.confirm.header',\n    subHeader: 'otp.confirm.sub.header',\n    firstName: 'newApplicant.firstName',\n    lastName: 'newApplicant.lastName',\n    send: 'account.connect.merge_by_code.send',\n    codePlaceholder: 'account.connect.merge_by_code.codePlaceholder',\n    confirmCode: 'account.connect.merge_by_code.confirm',\n    submitSignup: 'signupForm.create.submit',\n};\n\ninterface RenderInputArgs {\n    placeholder?: string;\n    isAutofocus?: boolean;\n}\n\ninterface RenderSubmitArgs {\n    isStretched?: boolean;\n}\n\ninterface RenderCancelButtonArgs {\n    isStretched?: boolean;\n    onClick: () => void;\n    trl: string;\n}\n\ninterface VerificationFormProps {\n    isSignupPage?: boolean;\n    login?: string;\n    authType?: string;\n    operationType?: string;\n    onShownAnalytics?: (ref: RefObject<HTMLFormElement>) => void;\n    onSubmit: (\n        setSending: Dispatch<SetStateAction<boolean>>,\n        setVerification: Dispatch<SetStateAction<VerificationType | null>>,\n        code: string\n    ) => void;\n    url?: AvailableOtpUrls;\n    render: (args: {\n        renderInput: (args?: RenderInputArgs) => ReactNode;\n        renderCodeError: () => ReactNode;\n        renderCodeSender: () => ReactNode;\n        renderSubmit: (args?: RenderSubmitArgs) => ReactNode;\n        renderCancelButton: (args: RenderCancelButtonArgs) => ReactNode;\n    }) => ReactNode;\n}\n\nexport type VerificationFormBaseProps = Omit<VerificationFormProps, 'render'>;\n\nconst Verification: TranslatedComponent<VerificationFormProps> = ({\n    trls,\n    render,\n    login,\n    authType,\n    isSignupPage,\n    onShownAnalytics,\n    operationType,\n    onSubmit,\n    url = '/account/otp_generate' as const,\n}) => {\n    const [code, setCode] = useState('');\n    const [isSending, setIsSending] = useState(false);\n    const [verification, setVerification] = useState<VerificationType | null>(null);\n    const elementRef = useRef<HTMLFormElement>(null);\n    const autofocusRef = useAutofocus();\n\n    useEffect(() => {\n        onShownAnalytics?.(elementRef);\n    }, [elementRef, onShownAnalytics]);\n\n    const confirmCode: FormEventHandler<HTMLFormElement> = (event) => {\n        event?.preventDefault();\n        onSubmit(setIsSending, setVerification, code);\n    };\n\n    const updateCode = (value: string) => {\n        setVerification(null);\n        setCode(value);\n    };\n\n    const renderInput = ({ placeholder, isAutofocus }: RenderInputArgs = {}) => {\n        return (\n            <InputText\n                type={InputType.Number}\n                placeholder={placeholder || trls[TrlKeys.codePlaceholder]}\n                data-qa=\"otp-code-input\"\n                name=\"otp-code-input\"\n                onChange={updateCode}\n                invalid={!!verification}\n                autoFocus\n                ref={isAutofocus ? autofocusRef : undefined}\n            />\n        );\n    };\n\n    const renderCodeError = () => {\n        return <CodeError verification={verification} authType={authType} />;\n    };\n\n    const renderCodeSender = () => {\n        return (\n            <CodeSender\n                login={login}\n                isSignupPage={isSignupPage}\n                url={url}\n                operationType={operationType}\n                otpType={authType === 'EMAIL' ? 'email' : 'phone'}\n                recaptchaClassName=\"account-login-recaptcha\"\n            />\n        );\n    };\n\n    const renderSubmit = ({ isStretched }: RenderSubmitArgs = {}) => {\n        return (\n            <Button\n                kind={ButtonKind.Primary}\n                type={ButtonType.Submit}\n                disabled={code.length < MIN_CODE_LENGTH || isSending}\n                data-qa=\"otp-code-submit\"\n                stretched={isStretched}\n            >\n                {trls[TrlKeys.confirmCode]}\n            </Button>\n        );\n    };\n\n    const renderCancelButton = ({ isStretched, onClick, trl }: RenderCancelButtonArgs) => {\n        return (\n            <Button\n                kind={ButtonKind.Primary}\n                appearance={ButtonAppearance.Outlined}\n                type={ButtonType.Button}\n                onClick={onClick}\n                data-qa={'otp-code-cancel'}\n                stretched={isStretched}\n            >\n                {trl}\n            </Button>\n        );\n    };\n\n    return (\n        <Form data-qa={'otp-code-form'} onSubmit={confirmCode} ref={elementRef}>\n            {render({ renderInput, renderCodeError, renderCodeSender, renderSubmit, renderCancelButton })}\n        </Form>\n    );\n};\n\nexport default translation(Verification);\n","import React, { useEffect, useRef } from 'react';\n\nconst useAutofocus = (): React.MutableRefObject<HTMLInputElement | null> => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useEffect(() => {\n        if (inputRef.current) {\n            if (inputRef.current.type !== 'number') {\n                inputRef.current.selectionStart = inputRef.current.value.length;\n            }\n            inputRef.current.focus();\n        }\n    }, []);\n    return inputRef;\n};\n\nexport const useAutofocusRenderOnce = (): ((value: string) => {\n    ref?: React.MutableRefObject<HTMLInputElement | null>;\n}) => {\n    const refSetted = useRef<boolean>();\n    const inputRefToFocus = useAutofocus();\n    return (value: string) => {\n        if (!value && !inputRefToFocus.current && !refSetted.current) {\n            refSetted.current = true;\n            return { ref: inputRefToFocus };\n        }\n        return {};\n    };\n};\n\nexport default useAutofocus;\n","import { useState, useLayoutEffect } from 'react';\n\nexport default function useIsClient(): boolean {\n    const [isClient, setIsClient] = useState(false);\n    useLayoutEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    return isClient;\n}\n","import { useState, useEffect, useRef } from 'react';\n\nimport { getCurrentSeconds } from 'Utils/Dates';\n// Хук для таймера обратного отсчета, возвращает оставшееся количество секунд и коллбэк для его изменения\n\nexport default (seconds = 0): [number, (value: number) => void] => {\n    const [timeLeft, setTime] = useState(Math.max(seconds, 0));\n    const timer = useRef(0);\n    useEffect(() => {\n        const startTime = getCurrentSeconds();\n        const tick = () => {\n            const secondsPassed = getCurrentSeconds() - startTime;\n            const secondsLeft = timeLeft - secondsPassed;\n            if (secondsLeft < 0 || Number.isNaN(secondsLeft)) {\n                setTime(0);\n                clearTimeout(timer.current);\n            } else {\n                setTime(secondsLeft);\n            }\n        };\n        timer.current = window.setTimeout(tick, 1000);\n        return () => clearTimeout(timer.current);\n    }, [timeLeft]);\n    return [timeLeft, setTime];\n};\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface BannerObject {\n    id: string;\n    cId: string;\n    bannerAdTargeting?: Record<string, unknown>;\n}\n\n// Не забудь продублировать в константы в  places.py!!!\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum BannerPlace {\n    AFTER_4TH_TOPIC_L = 'after-4th-topic-l',\n    AFTER_4TH_TOPIC_M = 'after-4th-topic-m',\n    AFTER_4TH_TOPIC_S = 'after-4th-topic-s',\n    AFTER_4TH_TOPIC_XS = 'after-4th-topic-xs',\n    AFTER_PAYMENT_FORM_L = 'after-payment-form-l',\n    AFTER_PAYMENT_FORM_S_M = 'after-payment-form-s-m',\n    AFTER_PAYMENT_FORM_XS = 'after-payment-form-xs',\n    AFTER_VACANCY_RESPONSE = 'after-vacancy-response',\n    BOTTOM_DASHBOARD = 'bottom-dashboard',\n    BOTTOM_DASHBOARD_CLICKME = 'bottom-dashboard-clickme',\n    CALENDAR = 'calendar',\n    DASHBOARD = 'dashboard',\n    INDEX_BOTTOM = 'index-bottom',\n    INDEX_BOTTOM_MOBILE = 'index-bottom-mobile',\n    INDEX_BOTTOM_XS = 'index-bottom-xs',\n    INDEX_DASHBOARD_MOBILE = 'index-dashboard-mobile',\n    INDEX_HORIZONTAL = 'index-horizontal',\n    INDEX_UNDER_NEWS_BOX = 'index-under-news-box',\n    INDEX_UNDER_DASHBOARD_SMALL = 'index-under-dashboard-small',\n    INDEX_VOD = 'index-vod',\n    INDEX_UNDER_RAINBOW_MOBILE = 'index-under-rainbow-mobile',\n    INDEX_UNDER_NEWS_BOX_MOBILE = 'index-under-news-box-mobile',\n    INDEX_WORK_IN_COMPANY = 'index-work-in-company',\n    INDEX_WORK_IN_COMPANY_MOBILE = 'index-work-in-company-mobile',\n    LEFT_COLUMN_UNDER_TABS = 'left-column-under-tabs',\n    RIGHT_COLUMN = 'right-column',\n    RIGHT_COLUMN_CLICKME = 'right-column-clickme',\n    RIGHT_COLUMN_CLICKME_ADAPTIVE = 'right-column-clickme-adaptive',\n    SERP_FIFTH_L = 'serp-fifth-l',\n    SERP_FIFTH_M = 'serp-fifth-m',\n    SERP_FIFTH_S = 'serp-fifth-s',\n    SERP_FIFTH_XS = 'serp-fifth-xs',\n    SERP_FIRST = 'serp-first',\n    SERP_FIRST_SMALL = 'serp-first-small',\n    SERP_FIRST_L = 'serp-first-l',\n    SERP_FIRST_M = 'serp-first-m',\n    SERP_FIRST_S = 'serp-first-s',\n    SERP_FIRST_XS = 'serp-first-xs',\n    SERP_FOURTH_L = 'serp-fourth-l',\n    SERP_FOURTH_M = 'serp-fourth-m',\n    SERP_FOURTH_S = 'serp-fourth-s',\n    SERP_FOURTH_XS = 'serp-fourth-xs',\n    SERP_SECOND = 'serp-second',\n    SERP_SECOND_SMALL = 'serp-second-small',\n    SERP_SECOND_L = 'serp-second-l',\n    SERP_SECOND_M = 'serp-second-m',\n    SERP_SECOND_S = 'serp-second-s',\n    SERP_SECOND_XS = 'serp-second-xs',\n    SERP_THIRD_L = 'serp-third-l',\n    SERP_THIRD_M = 'serp-third-m',\n    SERP_THIRD_S = 'serp-third-s',\n    SERP_THIRD_XS = 'serp-third-xs',\n    UNDER_PAGINATION_SEARCH_RESULTS_L = 'under-pagination-search-results-l',\n    UNDER_PAGINATION_SEARCH_RESULTS_M = 'under-pagination-search-results-m',\n    UNDER_PAGINATION_SEARCH_RESULTS_S = 'under-pagination-search-results-s',\n    UNDER_PAGINATION_SEARCH_RESULTS_XS = 'under-pagination-search-results-xs',\n    UNDER_SEARCH_RESULTS_ROTATE = 'under-search-results-rotate',\n    UNDER_SEARCH_RESULTS_XS = 'under-search-results-xs',\n    VACANCY_PROMOTION = 'vacancy-promotion',\n    VACANCY_RECOMMENDATIONS = 'vacancy-recommendations',\n    VACANCY_RIGHT_TEASER = 'vacancy-right-teaser',\n    VACANCY_VIEW_SERP_FIRST_L = 'vacancy-view-serp-first-l',\n    VACANCY_VIEW_SERP_FIRST_S_M = 'vacancy-view-serp-first-s-m',\n    VACANCY_VIEW_SERP_FIRST_XS = 'vacancy-view-serp-first-xs',\n    VACANCY_VIEW_SERP_FIRST_ODD_L = 'vacancy-view-serp-first-odd-l',\n    VACANCY_VIEW_SERP_FIRST_ODD_S_M = 'vacancy-view-serp-first-odd-s-m',\n    VACANCY_VIEW_SERP_FIRST_ODD_XS = 'vacancy-view-serp-first-odd-xs',\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n// Не забудь продублировать в константы в  places.py!!!\n\nexport interface Banners {\n    dashboard?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM]?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_DASHBOARD_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_HORIZONTAL]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_RAINBOW_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_VOD]?: BannerObject[];\n}\n\nexport default autoGeneratedReducer<Banners>({});\n","// tempexp_27495_file\nimport { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { closeAnonymousSignUpModal } from 'lux/models/anonymousSignUp/anonymousSignUpModalShow';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SignupModal from 'lux/components/SignupModal/Form';\nimport { setSignupBackurl } from 'lux/components/SignupModal/api';\nimport { SignupAnalyticsProvider } from 'lux/components/SignupModal/contexts/SignupAnalytics';\nimport { redirectToFinishSignup } from 'lux/components/SignupModal/lib';\n\nconst getPageUrl = (href: string): string => {\n    const urlObject = urlParser(href);\n    return urlObject.href;\n};\n\nconst VacancySignUpModal: FC = () => {\n    const dispatch = useDispatch();\n\n    const location = useSelector(({ router }) => router.location);\n\n    const opened = useSelector((state) => state.anonymousSignUpModalShow);\n    const isActivityExpB = useExperiment('anonym_force_signup_vacancy_2_b');\n\n    const onClose = () => {\n        dispatch(closeAnonymousSignUpModal());\n    };\n\n    const onSignup = () => {\n        const pageUrl = getPageUrl(location.pathname + location.search);\n        void setSignupBackurl(pageUrl);\n        dispatch(closeAnonymousSignUpModal());\n        redirectToFinishSignup();\n    };\n\n    if (!isActivityExpB) {\n        return null;\n    }\n    return (\n        <SignupAnalyticsProvider hhtmSource=\"vacancy_view_popup\">\n            <SignupModal opened={opened} onClose={onClose} onSignup={onSignup} />\n        </SignupAnalyticsProvider>\n    );\n};\n\nexport default VacancySignUpModal;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { RelatedVacanciesType } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    suitable: 'vacancy.suitableVacancyForEmployer.title',\n    similar: 'vacancy.similarVacancyForEmployer.title',\n};\n\nconst Title: TranslatedComponent<{ type?: RelatedVacanciesType }> = ({ type, trls }) => {\n    if (type === RelatedVacanciesType.Suitable) {\n        return <>{trls[TrlKeys.suitable]}</>;\n    }\n    return <>{trls[TrlKeys.similar]}</>;\n};\n\nexport default translation(Title);\n","import { useCallback, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport vacancySimilarItemForEmployerElementShown, {\n    RecommendationType,\n} from '@hh.ru/analytics-js-events/build/xhh/employer/vacancy/vacancy_similar_item_for_employer_element_shown';\nimport Button, { ButtonScale, ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport { H1Section, H2 } from 'bloko/blocks/header';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { RelatedVacanciesType } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\nimport VacancySearchItem from 'lux/components/VacancySearchItem';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { RelatedVacancies } from 'lux/models/relatedVacancies';\nimport { pushRelatedVacanciesForEmployerAction } from 'lux/models/relatedVacanciesForEmployer';\nimport { addUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport Title from 'lux/components/RelatedEmployerVacancies/Title';\n\nconst TrlKeys = {\n    loadMore: 'vacancy.relatedVacancyForEmployer.loadMore',\n};\n\ninterface RelatedEmployerVacaicesProps {\n    isRedesign?: boolean;\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/vacancy/related_vacancies': {\n            queryParams: {\n                vacancyId?: number;\n                employerId?: number;\n                page: number;\n                type?: RelatedVacanciesType;\n            };\n            response: RelatedVacancies;\n        };\n    }\n}\n\nconst RelatedEmployerVacancies: TranslatedComponent<RelatedEmployerVacaicesProps> = ({ trls, isRedesign }) => {\n    const [isLoading, setIsLoadingOn, setIsLoadingOff] = useOnOffState(false);\n\n    const currentPageNumber = useRef(1);\n    const wrapperRef = useRef(null);\n    const dispatch = useDispatch();\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n    const relatedVacanciesForEmployer = useSelector((state) => state.relatedVacanciesForEmployer);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const employerId = useSelector((state) => state.vacancyView.company.id);\n\n    const { type, totalPages, resultsFound } = relatedVacanciesForEmployer;\n    const [showLoadMore, setShowLoadMore] = useState(totalPages && currentPageNumber.current < totalPages);\n\n    const loadMoreVacancies = useCallback(async () => {\n        if (isLoading) {\n            return;\n        }\n        setIsLoadingOn();\n        let response;\n        try {\n            response = await fetcher.get('/shards/vacancy/related_vacancies', {\n                params: {\n                    vacancyId,\n                    employerId,\n                    page: currentPageNumber.current,\n                    type,\n                },\n            });\n        } catch (error) {\n            dispatch(showDefaultError(error));\n            return;\n        } finally {\n            setIsLoadingOff();\n        }\n        const actions = response.vacancies.map(({ vacancyId, userLabels }) =>\n            addUserLabelsForVacancies({ vacancyId, labels: userLabels })\n        );\n\n        dispatch([...actions, pushRelatedVacanciesForEmployerAction(response.vacancies)]);\n        currentPageNumber.current += 1;\n        if (totalPages && currentPageNumber.current >= totalPages) {\n            setShowLoadMore(false);\n        } else {\n            setShowLoadMore(true);\n        }\n    }, [isLoading, setIsLoadingOn, vacancyId, employerId, type, dispatch, totalPages, setIsLoadingOff]);\n\n    if (!resultsFound) {\n        return null;\n    }\n\n    const Heading = isRedesign ? H1Section : H2;\n    return (\n        <div className=\"vacancy-section\" data-qa=\"vacancy-view-employer-vacancies-from-search\">\n            <Heading Element=\"h2\">\n                <Title type={type} />\n            </Heading>\n            <VSpacing base={4} />\n            <div ref={wrapperRef}>\n                {relatedVacanciesForEmployer?.vacancies?.map((vacancy) => (\n                    <ElementShownAnchor\n                        fn={vacancySimilarItemForEmployerElementShown}\n                        recommendationType={type as RecommendationType}\n                        vacancyId={vacancyId || 0}\n                        relatedVacancyId={vacancy.vacancyId}\n                        key={vacancy.vacancyId}\n                    >\n                        <VacancySearchItem\n                            vacancy={vacancy}\n                            vacancySource={Source.EmployerRelatedVacancies}\n                            hhtmFromLabel={`${type || ''}_employer_vacancies`}\n                            isXs={isXs}\n                        />\n                    </ElementShownAnchor>\n                ))}\n            </div>\n            {isLoading && (\n                <div className=\"related-vacancies-loading-indicator\">\n                    <Gap top>\n                        <Loading scale={LoadingScale.Small} />\n                    </Gap>\n                </div>\n            )}\n            {!isLoading && showLoadMore && (\n                <Gap top>\n                    <Button\n                        scale={ButtonScale.Small}\n                        kind={ButtonKind.Secondary}\n                        appearance={ButtonAppearance.Outlined}\n                        onClick={loadMoreVacancies}\n                    >\n                        {trls[TrlKeys.loadMore]}\n                    </Button>\n                </Gap>\n            )}\n        </div>\n    );\n};\n\nexport default translation(RelatedEmployerVacancies);\n","import { Fragment, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\n\nimport VacancySignUpBlock from 'lux/components/VacancyView/SignUpBlock';\nimport VacancyAdditionalAccepts from 'lux/components/VacancyView/VacancyAdditionalAccepts';\nimport VacancyBlockEmployer from 'lux/components/VacancyView/VacancyBlock/Employer';\nimport VacancyBlockTop from 'lux/components/VacancyView/VacancyBlock/Top';\nimport VacancyContacts from 'lux/components/VacancyView/VacancyContacts';\nimport VacancyDescription from 'lux/components/VacancyView/VacancyDescription';\nimport VacancyDriverLicense from 'lux/components/VacancyView/VacancyDriverLicense';\nimport VacancyFooter from 'lux/components/VacancyView/VacancyFooter';\nimport VacancyIsArchived from 'lux/components/VacancyView/VacancyIsArchived';\nimport VacancyKeySkills from 'lux/components/VacancyView/VacancyKeySkills';\nimport VacancyMap from 'lux/components/VacancyView/VacancyMap';\nimport VacancyPreviewTools from 'lux/components/VacancyView/VacancyPreviewTools';\nimport VacancyResponseQuestions from 'lux/components/VacancyView/VacancyResponseQuestions';\nimport VacancySimilarResumes from 'lux/components/VacancyView/VacancySimilarResumes';\nimport VacancySkillSurvey from 'lux/components/VacancyView/VacancySkillSurvey';\nimport useIsVisibleBody from 'lux/components/VacancyView/hooks/useIsVisibleBody';\n\nconst VacancyBodyRedesigned = ({ contactsNodeRef, vacancyBodyFooterNodeRef }) => {\n    const resumeFormNodeRef = useRef();\n    const { isVisibleBody, setIsVisibleBody } = useIsVisibleBody();\n\n    return (\n        <Fragment>\n            <VacancyBlockTop\n                resumeFormNodeRef={resumeFormNodeRef}\n                contactsNodeRef={contactsNodeRef}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n            />\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"0\" container>\n                <VacancyBlockEmployer vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n            </Column>\n            <VacancySignUpBlock blockRef={vacancyBodyFooterNodeRef} />\n            <VacancyIsArchived isHiddenSwitcher={isVisibleBody} setVisibilityBody={setIsVisibleBody} />\n            {isVisibleBody && (\n                <Fragment>\n                    <ColumnsRow>\n                        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"10\">\n                            <div className=\"vacancy-description\">\n                                <VacancyDescription />\n                                <VacancyAdditionalAccepts />\n                                <VacancyKeySkills />\n                                <VacancyDriverLicense />\n                                <VacancySkillSurvey />\n                                <VacancyContacts\n                                    isRedesign\n                                    blockRef={contactsNodeRef}\n                                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                                />\n                                <VacancyResponseQuestions vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                                <VacancyMap isRedesign />\n                                <VacancyPreviewTools />\n                                <VacancySimilarResumes />\n                            </div>\n                        </Column>\n                    </ColumnsRow>\n                    <VacancyFooter vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} isRedesign withBanners />\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nVacancyBodyRedesigned.propTypes = {\n    contactsNodeRef: PropTypes.object,\n    vacancyBodyFooterNodeRef: PropTypes.object,\n};\n\nexport default VacancyBodyRedesigned;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { JOB_SEARCH_STATUS_AFTER_RESPONSE } from 'lux/components/VacancyResponseForm/JobSearchStatusNotification';\nimport { RESUME_AUTO_HIDE } from 'lux/components/VacancyResponseForm/ResumeAutoHideNotification';\nimport { VACANCY_RESPONSE } from 'lux/components/VacancyResponseForm/VacancyResponseNotification';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nconst useDispatchAfterResponseNotification = () => {\n    const dispatch = useDispatch();\n    const publishedResumeHash = useSelector((state) => state.publishedForResponseResumeHash);\n    const usedResume = useSelector((state) => state.vacancyView.responseInfo?.respondedWithResume);\n\n    return useCallback(\n        (askJobSearchStatus, notificationParams) => {\n            if (usedResume && usedResume.autoHideTime && publishedResumeHash === usedResume.hash) {\n                dispatch(\n                    addNotification(RESUME_AUTO_HIDE, {\n                        resumeHash: publishedResumeHash,\n                        autoHideTime: usedResume.autoHideTime[0].string,\n                    })\n                );\n                return;\n            }\n\n            if (askJobSearchStatus) {\n                dispatch(addNotification(JOB_SEARCH_STATUS_AFTER_RESPONSE, notificationParams, true));\n                return;\n            }\n\n            dispatch(addNotification(VACANCY_RESPONSE, notificationParams));\n        },\n        [usedResume, publishedResumeHash, dispatch]\n    );\n};\n\nexport default useDispatchAfterResponseNotification;\n","import { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column/index';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport bannerPropType from 'lux/components/Banner/BannerPropType';\nimport Clickme from 'lux/components/Clickme';\n\nimport { useTrackBannersClickEvent } from 'lux/components/VacancyView/useBannersAnalytics';\n\nconst VacancySidebarBanners = ({ rightColumnBanners, rightColumnClickmeBanners, adsVacancyParams }) => {\n    const containerRef = useRef(null);\n    useTrackBannersClickEvent({ containerRef });\n    return (\n        <div ref={containerRef}>\n            {rightColumnBanners?.length > 0 && (\n                <Column xs=\"0\" s=\"0\" m=\"4\" l=\"4\">\n                    {rightColumnBanners.map((banner) => (\n                        <AdsExternalBanner {...banner} key={banner.id} bannerAdTargeting={adsVacancyParams} />\n                    ))}\n                    <VSpacing base={6} />\n                </Column>\n            )}\n            {rightColumnClickmeBanners?.length > 0 && (\n                <Column xs=\"0\" s=\"0\" m=\"4\" l=\"4\">\n                    <div className=\"vacancy-sidebar-clickme-wrapper\">\n                        <Clickme banners={rightColumnClickmeBanners} />\n                    </div>\n                    <VSpacing base={6} />\n                </Column>\n            )}\n        </div>\n    );\n};\n\nVacancySidebarBanners.propTypes = {\n    rightColumnBanners: PropTypes.arrayOf(bannerPropType),\n    rightColumnClickmeBanners: PropTypes.arrayOf(bannerPropType),\n    adsVacancyParams: PropTypes.object,\n};\n\nexport default connect(({ banners, adsVacancyParams }) => ({\n    rightColumnBanners: banners['right-column'],\n    rightColumnClickmeBanners: banners['right-column-clickme'],\n    adsVacancyParams,\n}))(VacancySidebarBanners);\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\nconst Company = ({ visibleName, id, department, area }) => {\n    const areaContent = area ? `, ${area.name}` : null;\n    const content = (\n        <Fragment>\n            {visibleName}\n            {areaContent}\n        </Fragment>\n    );\n\n    if (!id) {\n        return content;\n    }\n\n    const departmentQuery = department && department['@code'] ? `?dpt=${department['@code']}` : '';\n\n    return (\n        <BlokoLink target=\"_blank\" kind={LinkKind.Secondary} to={`/employer/${id}${departmentQuery}`} Element={Link}>\n            {content}\n        </BlokoLink>\n    );\n};\n\nCompany.propTypes = {\n    visibleName: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    department: PropTypes.object,\n    area: PropTypes.object,\n};\n\nexport default Company;\n","import PropTypes from 'prop-types';\n\nimport Compensation from 'lux/components/Compensation';\n\nconst SuitableVacancyCompensation = ({ compensation }) => {\n    if (!compensation) {\n        return null;\n    }\n\n    return (\n        <div className=\"vacancy-of-the-day__salary\">\n            <Compensation {...compensation} />\n        </div>\n    );\n};\n\nSuitableVacancyCompensation.propTypes = {\n    compensation: PropTypes.object,\n};\n\nexport default SuitableVacancyCompensation;\n","import PropTypes from 'prop-types';\n\nimport vacancySuitableItemButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/vacancy_suitable_item_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Company from 'lux/components/SuitableVacancy/Company';\nimport Compensation from 'lux/components/SuitableVacancy/Compensation';\n\nconst SuitableVacancy = ({\n    compensation,\n    vacancyName,\n    vacancyId,\n    companyVisibleName,\n    area,\n    companyId,\n    companyDepartment,\n    renderIcon,\n    renderAdditional,\n    links,\n    isRedesign,\n}) => {\n    const isAnonymous = useSelector((state) => state.userType) === UserType.Anonymous;\n    const url = urlParser(links.desktop);\n    const hhtmFromLabel = isAnonymous ? 'similar_vacancies_sidebar' : 'suitable_vacancies_sidebar';\n    const vacancyViewId = useSelector((state) => state.vacancyView?.vacancyId);\n\n    const onNameClick = () => {\n        vacancySuitableItemButtonClick({\n            hhtmSourceLabel: 'vacancy_side_block',\n            vacancyId: vacancyViewId,\n            vacancyTargetId: vacancyId,\n        });\n    };\n\n    return (\n        <div className=\"recommended-vacancies__item recommended-vacancies__item_full\">\n            <Text size={isRedesign ? TextSize.Large : undefined}>\n                <div className={isRedesign ? undefined : 'vacancy-of-the-day'}>\n                    {renderIcon && renderIcon()}\n                    <BlokoLink\n                        kind={LinkKind.Tertiary}\n                        Element={Link}\n                        to={url.href}\n                        additionalQueryParams={{ hhtmFromLabel }}\n                        target=\"_blank\"\n                        onClick={onNameClick}\n                    >\n                        <span className=\"vacancy-of-the-day__title\">{vacancyName}</span>\n                        <Compensation compensation={compensation} />\n                    </BlokoLink>\n                    <span\n                        className={isRedesign ? 'vacancy-of-the-day-company-redesigned' : 'vacancy-of-the-day__company'}\n                    >\n                        <Company\n                            visibleName={companyVisibleName}\n                            id={companyId}\n                            department={companyDepartment}\n                            area={area}\n                        />\n                    </span>\n                    {renderAdditional && renderAdditional()}\n                </div>\n            </Text>\n        </div>\n    );\n};\n\nSuitableVacancy.propTypes = {\n    compensation: PropTypes.object,\n    vacancyName: PropTypes.string.isRequired,\n    companyVisibleName: PropTypes.string,\n    companyId: PropTypes.number,\n    vacancyId: PropTypes.number,\n    companyDepartment: PropTypes.object,\n    links: PropTypes.object,\n    area: PropTypes.object,\n    renderIcon: PropTypes.func,\n    renderAdditional: PropTypes.func,\n    isRedesign: PropTypes.bool,\n};\n\nexport default SuitableVacancy;\n","import { useRef, useCallback, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { H2Section } from 'bloko/blocks/header';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { format } from 'bloko/common/trl';\n\nimport scrollToElement from 'Utils/ScrollToElement';\nimport RelatedVacanciesTitle from 'lux/components/RelatedVacancies/Title';\nimport { RELATED_VACANCIES_TYPES } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\nimport SuitableVacancy from 'lux/components/SuitableVacancy';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE, NARROW_NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst RELATED_VACANCIES_SHOWN_COUNT = 2;\nconst SCROLL_OFFSET = -20;\n\nconst RelatedVacanciesPreview = ({ fullListRef, trls }) => {\n    const {\n        vacancies,\n        resultsFound: vacanciesCount,\n        type: relatedType,\n    } = useSelector((state) => state.relatedVacancies);\n    const vacanciesPreview = vacancies?.slice(0, RELATED_VACANCIES_SHOWN_COUNT);\n    const stickyPlaceRef = useRef();\n    const stickyElementRef = useRef();\n    const dummyRef = useRef();\n    const breakpoint = useBreakpoint(Breakpoint.L);\n    const isL = breakpoint === Breakpoint.L;\n    const [isVisible, setIsVisible] = useState(true);\n\n    const updateMetrics = useCallback(() => {\n        if (!isL || !fullListRef.current || !stickyElementRef.current || !stickyPlaceRef.current) {\n            return;\n        }\n        const fullListTop = fullListRef.current.offsetTop;\n        const stickyElementBottom = stickyPlaceRef.current.offsetTop + stickyElementRef.current.offsetHeight;\n        const diff = fullListTop - stickyElementBottom;\n        dummyRef.current.style.height = `${diff}px`;\n        setIsVisible(diff > 0);\n    }, [fullListRef, isL]);\n\n    useEffect(() => {\n        updateMetrics();\n        const intervalId = setInterval(() => {\n            updateMetrics();\n        }, 1000);\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [updateMetrics]);\n\n    const scrollToFullList = useCallback(() => {\n        if (fullListRef?.current) {\n            scrollToElement(fullListRef.current, {\n                centered: false,\n                topOffset: SCROLL_OFFSET,\n            });\n        }\n    }, [fullListRef]);\n\n    const isSuitable = relatedType === RELATED_VACANCIES_TYPES.SUITABLE;\n    const vacanciesCountFormatted = NumberFormatter.format(String(vacanciesCount), {\n        groupSeparator: NARROW_NON_BREAKING_SPACE,\n    });\n\n    if (!vacanciesPreview?.length || !isL) {\n        return null;\n    }\n\n    return (\n        <>\n            <div ref={stickyPlaceRef} />\n            <div\n                className={classnames('related-vacancies-preview', {\n                    'related-vacancies-preview_hidden': !isVisible,\n                })}\n                ref={stickyElementRef}\n            >\n                <H2Section Element=\"h3\">\n                    <RelatedVacanciesTitle type={relatedType} />\n                </H2Section>\n                <VSpacing base={2} />\n                <div className=\"recommended-vacancies\">\n                    {vacanciesPreview.map((vacancy) => (\n                        <SuitableVacancy\n                            vacancyName={vacancy.name}\n                            compensation={{\n                                from: vacancy.compensation.from,\n                                to: vacancy.compensation.to,\n                                currencyCode: vacancy.compensation.currencyCode,\n                            }}\n                            companyVisibleName={vacancy.company.visibleName}\n                            area={{ name: vacancy.area.name }}\n                            companyId={Number(vacancy.company.id)}\n                            vacancyId={vacancy.vacancyId}\n                            links={{ desktop: `/vacancy/${vacancy.vacancyId}` }}\n                            key={vacancy.vacancyId}\n                            isRedesign\n                        />\n                    ))}\n                </div>\n                <div className=\"related-vacancies-preview-switch\">\n                    <Link appearance={LinkAppearance.Pseudo} onClick={scrollToFullList}>\n                        {!isSuitable && vacanciesCountFormatted}\n                        {!isSuitable && NON_BREAKING_SPACE}\n                        <ConversionNumber\n                            value={vacanciesCount}\n                            format={(trl) => format(trl, { '{0}': vacanciesCountFormatted })}\n                            one={trls[RelatedVacanciesPreview.trls.moreVacancies[relatedType].one]}\n                            some={trls[RelatedVacanciesPreview.trls.moreVacancies[relatedType].some]}\n                            many={trls[RelatedVacanciesPreview.trls.moreVacancies[relatedType].many]}\n                            hasValue={false}\n                        />\n                    </Link>\n                </div>\n            </div>\n            <div ref={dummyRef} />\n        </>\n    );\n};\n\nRelatedVacanciesPreview.propTypes = {\n    fullListRef: PropTypes.object,\n    trls: PropTypes.object,\n};\n\nRelatedVacanciesPreview.trls = {\n    moreVacancies: {\n        similar: {\n            one: 'vacancy.similar.one',\n            some: 'vacancy.similar.some',\n            many: 'vacancy.similar.many',\n        },\n        suitable: {\n            one: 'vacancy.suitable.more.one',\n            some: 'vacancy.suitable.more.some',\n            many: 'vacancy.suitable.more.many',\n        },\n    },\n};\n\nexport default translation(RelatedVacanciesPreview);\n","import PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\n\nimport VacancyBlockEmployer from 'lux/components/VacancyView/VacancyBlock/Employer';\nimport VacancySidebarBanners from 'lux/components/VacancyView/VacancySidebarBanners';\n\nimport RelatedVacanciesPreview from 'lux/pages/VacancyView/components/RelatedVacanciesPreview';\n\nconst VacancySidebar = ({ fullListRef, vacancyBodyFooterNodeRef }) => {\n    return (\n        <div className=\"noprint\">\n            <VacancyBlockEmployer vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n            <div className=\"vacancy-sidebar-column\">\n                <VacancySidebarBanners />\n                <Column xs=\"0\" s=\"0\" m=\"0\" l=\"5\">\n                    <RelatedVacanciesPreview fullListRef={fullListRef} />\n                </Column>\n            </div>\n        </div>\n    );\n};\n\nVacancySidebar.propTypes = {\n    fullListRef: PropTypes.object,\n    vacancyBodyFooterNodeRef: PropTypes.node,\n};\n\nexport default VacancySidebar;\n","import { Fragment, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { VACANCY_VIEW_COUNT } from 'lux/components/Notifications/VacancyViewsCount';\nimport RelatedEmployerVacancies from 'lux/components/RelatedEmployerVacancies';\nimport RelatedVacancies from 'lux/components/RelatedVacancies';\nimport VacancyResponsePopup from 'lux/components/VacancyResponsePopup';\nimport CountriesProfileVisibilityAgreementPopup from 'lux/components/VacancyResponsePopup/CountriesProfileVisibilityAgreementPopup';\nimport RelocationWarningPopup from 'lux/components/VacancyResponsePopup/RelocationWarningPopup';\nimport VacancyDefaultContainer from 'lux/components/VacancyView/DefaultContainer';\nimport VacancyBodyRedesigned from 'lux/components/VacancyView/VacancyBodyRedesigned';\nimport VacancyBrandedBody from 'lux/components/VacancyView/VacancyBrandedBody';\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport useShowResponse from 'lux/components/VacancyView/useShowResponse';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport VacancySidebar from 'lux/pages/VacancyView/components/VacancySidebar';\n\nconst VacancyView = ({ vacancyView }) => {\n    const vacancyViewsCount = useSelector((state) => state.vacancyViewsCount);\n    const dispatch = useDispatch();\n    const relatedVacanciesRef = useRef();\n    const contactsNodeRef = useRef();\n    const vacancyBodyFooterNodeRef = useRef();\n    const { isBranded } = useBranding();\n    useShowResponse();\n\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    useEffect(() => {\n        if (vacancyViewsCount && !vacancyView.responseInfo?.doResponse) {\n            dispatch(addNotification(VACANCY_VIEW_COUNT));\n        }\n    }, [dispatch, vacancyView.responseInfo, vacancyViewsCount]);\n\n    const relatedVacanciesBlock = (\n        <div className=\"noprint\">\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"10\">\n                <RelatedEmployerVacancies isRedesign />\n            </Column>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"10\">\n                <RelatedVacancies blockRef={relatedVacanciesRef} />\n            </Column>\n        </div>\n    );\n\n    return (\n        <Fragment>\n            {isBranded ? (\n                <VacancyBrandedBody\n                    contactsNodeRef={contactsNodeRef}\n                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    bottomContent={relatedVacanciesBlock}\n                    isRedesign\n                />\n            ) : (\n                <VacancyDefaultContainer\n                    isRedesign\n                    rightColumn={\n                        <Column xs=\"0\" s=\"0\" m=\"0\" l=\"6\" container>\n                            <VacancySidebar\n                                fullListRef={relatedVacanciesRef}\n                                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            />\n                        </Column>\n                    }\n                >\n                    <VacancyBodyRedesigned\n                        contactsNodeRef={contactsNodeRef}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    />\n                    {relatedVacanciesBlock}\n                </VacancyDefaultContainer>\n            )}\n            <RelocationWarningPopup vacancyId={vacancyView.vacancyId} />\n            <CountriesProfileVisibilityAgreementPopup vacancyId={vacancyView.vacancyId} />\n            <VacancyResponsePopup\n                vacancyId={vacancyView.vacancyId}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                isXs={isXs}\n            />\n        </Fragment>\n    );\n};\n\nVacancyView.propTypes = {\n    vacancyView: VacancyViewPropTypes.vacancyView,\n};\n\nexport default VacancyView;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { responseStreakUpdate } from 'lux/models/applicantResponseStreaks';\nimport { JobSearchStatusTrigger } from 'lux/models/applicantUserStatuses';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport useDispatchAfterResponseNotification from 'lux/components/VacancyView/useDispatchAfterResponseNotification';\n\nexport default () => {\n    const dispatch = useDispatch();\n    const dispatchNotification = useDispatchAfterResponseNotification();\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const showResponse = useSelector((state) => state.vacancyView.responseInfo?.showResponse);\n    const topicId = useSelector((state) => state.vacancyView.responseInfo?.respondedWithTopicId);\n    const applicantUserStatusesTrigger = useSelector((state) => state.applicantUserStatusesTrigger);\n\n    useEffect(() => {\n        if (showResponse) {\n            dispatch(\n                responseStreakUpdate({\n                    vacancyId,\n                    data: {\n                        responsesCount: 1,\n                        responsesRequired: 10,\n                        vacancyId,\n                    },\n                })\n            );\n\n            dispatchNotification(applicantUserStatusesTrigger === JobSearchStatusTrigger.AfterVacancyResponse, {\n                readPercent: null,\n                topicId,\n                vacancyId,\n            });\n        }\n    }, [applicantUserStatusesTrigger, dispatch, dispatchNotification, topicId, showResponse, vacancyId]);\n};\n","import { Fragment, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { VACANCY_VIEW_COUNT } from 'lux/components/Notifications/VacancyViewsCount';\nimport RelatedEmployerVacancies from 'lux/components/RelatedEmployerVacancies';\nimport RelatedVacancies from 'lux/components/RelatedVacancies';\nimport VacancyResponsePopup from 'lux/components/VacancyResponsePopup';\nimport CountriesProfileVisibilityAgreementPopup from 'lux/components/VacancyResponsePopup/CountriesProfileVisibilityAgreementPopup';\nimport RelocationWarningPopup from 'lux/components/VacancyResponsePopup/RelocationWarningPopup';\nimport VacancyDefaultContainer from 'lux/components/VacancyView/DefaultContainer';\nimport VacancyBrandedBody from 'lux/components/VacancyView/VacancyBrandedBody';\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nconst VacancyViewConstructor = ({ vacancyView }) => {\n    const vacancyViewsCount = useSelector((state) => state.vacancyViewsCount);\n    const dispatch = useDispatch();\n    const relatedVacanciesRef = useRef();\n    const contactsNodeRef = useRef();\n    const vacancyBodyFooterNodeRef = useRef();\n\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    useEffect(() => {\n        if (vacancyViewsCount && !vacancyView.responseInfo?.doResponse) {\n            dispatch(addNotification(VACANCY_VIEW_COUNT));\n        }\n    }, [dispatch, vacancyView.responseInfo, vacancyViewsCount]);\n\n    return (\n        <Fragment>\n            <VacancyBrandedBody\n                contactsNodeRef={contactsNodeRef}\n                isRedesign\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                hasTopPadding\n            />\n            <VacancyDefaultContainer>\n                <div className=\"noprint\">\n                    <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                        <RelatedEmployerVacancies isRedesign />\n                    </Column>\n                    <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                        <RelatedVacancies blockRef={relatedVacanciesRef} />\n                    </Column>\n                </div>\n            </VacancyDefaultContainer>\n            <RelocationWarningPopup vacancyId={vacancyView.vacancyId} />\n            <CountriesProfileVisibilityAgreementPopup vacancyId={vacancyView.vacancyId} />\n            <VacancyResponsePopup\n                vacancyId={vacancyView.vacancyId}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                isXs={isXs}\n            />\n        </Fragment>\n    );\n};\n\nVacancyViewConstructor.propTypes = {\n    vacancyView: VacancyViewPropTypes.vacancyView,\n};\n\nexport default VacancyViewConstructor;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--m_24aEU7CkWfvAsXOf41\"};","import { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionBannerElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_banner_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport { H3 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport useAuctionCreationModal from 'lux/components/Auction/hooks/useAuctionCreationModal';\nimport { QS_PARAM_TO_OPEN_AUCTION } from 'lux/components/Auction/utils';\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport useRunEmployerVacancyAction from 'lux/hooks/useRunEmployerVacancyAction';\nimport { AuctionFieldName } from 'lux/models/auctionData';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.title',\n    description: 'auction.banner.description',\n    priceInfo: 'auction.banner.priceInfo',\n    configure: 'auction.banner.configure',\n};\n\nconst AuctionBanner: TranslatedComponent = ({ trls }) => {\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const minBudget = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Budget].minValue\n    );\n    const vacancyId = useSelectorNonNullable(({ auctionData }) => auctionData.vacancyId as string);\n    const campaignDraftId = useSelectorNonNullable(({ auctionData }) => auctionData.campaignDraft?.campaignDraftId);\n    const campaignCreationStatus = useSelectorNonNullable(({ auctionData }) => auctionData.campaignCreationStatus);\n    const { showAuctionCreationModal, renderAuctionCreationModal } = useAuctionCreationModal(\n        vacancyId,\n        campaignCreationStatus\n    );\n\n    useRunEmployerVacancyAction(QS_PARAM_TO_OPEN_AUCTION, showAuctionCreationModal);\n\n    return (\n        <>\n            <ElementShownAnchor\n                className={styles.wrapper}\n                fn={auctionBannerElementShown}\n                vacancyId={vacancyId}\n                campaignDraftId={campaignDraftId}\n                campaignCreationStatus={campaignCreationStatus}\n            >\n                <H3>{trls[TrlKeys.title]}</H3>\n                <VSpacing base={2} />\n                <Text>{trls[TrlKeys.description]}</Text>\n                <VSpacing base={4} />\n                <Text strong>\n                    {formatToReactComponent(trls[TrlKeys.priceInfo], {\n                        '{0}': (\n                            <FormatMoney currency={currency} inCents>\n                                {minBudget}\n                            </FormatMoney>\n                        ),\n                    })}\n                </Text>\n                <VSpacing base={6} />\n                <Button\n                    data-qa=\"open-create-auction-modal\"\n                    kind={ButtonKind.Primary}\n                    appearance={ButtonAppearance.Outlined}\n                    onClick={showAuctionCreationModal}\n                    stretched\n                >\n                    {trls[TrlKeys.configure]}\n                </Button>\n                {renderAuctionCreationModal()}\n            </ElementShownAnchor>\n        </>\n    );\n};\n\nexport default translation(AuctionBanner);\n","import { CAMPAIGN_CREATION_ENABLED_STATUSES } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst useAuctionCreationEnabled = (): boolean =>\n    useSelector(({ auctionData }) => CAMPAIGN_CREATION_ENABLED_STATUSES.includes(auctionData?.campaignCreationStatus));\n\nexport default useAuctionCreationEnabled;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    test: 'vacancy.has.test',\n};\n\nconst VacancyHasTestText: TranslatedComponent = ({ trls }) => {\n    return (\n        <div data-qa=\"vacancy-view-user-test\">\n            <div className=\"vacancy-icon-wrapper\">\n                <span className=\"vacancy-icon vacancy-icon-rounded vacancy-icon_user-test\" />\n                <span>{`${NON_BREAKING_SPACE}${trls[TrlKeys.test]}`}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(VacancyHasTestText);\n","// extracted by mini-css-extract-plugin\nexport default {\"vacancySystemInfo\":\"vacancy-system-info--MkzaunTmM0Ke9c19vk0G\",\"vacancySystemInfoItem\":\"vacancy-system-info-item--ySFJyM3SyDmYGDPCQpXL\",\"errorText\":\"error-text--RDLxeRYpF5rogEWdIY_g\"};","import { FC, ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport { NON_BREAKING_SPACE, MIDDLE_DOT } from 'lux/modules/symbols';\n\nimport styles from './vacancy-system-info.less';\n\ninterface SystemInfoItemProps {\n    text: string;\n    children: ReactNode;\n    dataQa: string;\n    color?: 'default' | 'error';\n}\n\nconst SystemInfoItem: FC<SystemInfoItemProps> = ({ text, children, dataQa, color = 'default' }) => (\n    <>\n        {MIDDLE_DOT}\n        <p\n            className={classnames(styles.vacancySystemInfoItem, { [styles.errorText]: color === 'error' })}\n            data-qa={dataQa}\n        >\n            {text}\n            {NON_BREAKING_SPACE}\n            {children}\n        </p>\n    </>\n);\n\nexport default SystemInfoItem;\n","export const DAYS_TO_EXPIRES = 4;\n\nexport const FEATURES = {\n    isPropertiesUsingEnabled: 'is_properties_using_enabled',\n};\n","import differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\n\nimport { toDate } from 'bloko/blocks/calendar/datesHelper';\nimport Conversion from 'bloko/blocks/conversion';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport HumanDate from 'lux/components/HumanDate';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SystemInfoItem from 'lux/components/VacancyView/VacancySystemInfo/SystemInfoItem';\nimport { DAYS_TO_EXPIRES, FEATURES } from 'lux/components/VacancyView/VacancySystemInfo/constants';\n\nimport styles from './vacancy-system-info.less';\n\nconst TrlKeys = {\n    archivedFrom: 'vacancy.view.archived.from',\n    published: 'employer.vacancy.changesHistory.publish',\n    expires: 'employer.vacancy.systemInfo.expires',\n    optionPrefix: 'vacancyMetallic.option.premium.prefix',\n    vacancyCode: 'employer.vacancy.changesHistory.vacancyCode',\n    freeRestoreDaysLeft: 'employer.vacancy.archive.freeRestoreDaysLeft',\n    days: {\n        one: 'employer.vacancies.archive.freeRestore.days.one',\n        some: 'employer.vacancies.archive.freeRestore.days.some',\n        many: 'employer.vacancies.archive.freeRestore.days.many',\n        zero: 'employer.vacancy.systemInfo.expires.days.zero',\n    },\n};\n\nconst VacancySystemInfo: TranslatedComponent = ({ trls }) => {\n    const vacancyView = useSelector(({ vacancyView }) => vacancyView);\n    const freeRestoreDays = useSelector((state) => state.vacancyInternalInfo?.freeRestoreDays);\n    const { publicationTypeTrl, systemInfo, validThroughTime } = vacancyView;\n\n    const isArchived = vacancyView.status.archived;\n    const isPropertiesUsingEnabled = useSelector(({ features }) => features[FEATURES.isPropertiesUsingEnabled]);\n\n    const days =\n        typeof systemInfo?.expirationTime === 'string'\n            ? differenceInCalendarDays(toDate(systemInfo.expirationTime), Date.now())\n            : -1;\n    const color = days <= DAYS_TO_EXPIRES ? 'error' : 'default';\n\n    const expireTitle = days === 0 ? trls[TrlKeys.days.zero] : format(trls[TrlKeys.expires], { '{0}': days });\n    const isShowExpireInfo = systemInfo?.expirationTime && days !== -1 && !isArchived;\n\n    const publicationType = isPropertiesUsingEnabled ? (\n        <>{vacancyView.properties?.typeTrl}</>\n    ) : (\n        <>\n            {vacancyView.properties?.hasOptionPremium && <>{trls[TrlKeys.optionPrefix]} </>}\n            {publicationTypeTrl}\n        </>\n    );\n\n    const freeRestoreInfo =\n        freeRestoreDays && freeRestoreDays > 0 ? (\n            <>\n                {NON_BREAKING_SPACE}\n                {formatToReactComponent(trls[TrlKeys.freeRestoreDaysLeft], {\n                    '{0}': (\n                        <Conversion\n                            value={freeRestoreDays}\n                            one={trls[TrlKeys.days.one]}\n                            some={trls[TrlKeys.days.some]}\n                            many={trls[TrlKeys.days.many]}\n                        />\n                    ),\n                })}\n            </>\n        ) : null;\n\n    return (\n        <Text importance={TextImportance.Tertiary}>\n            <div className={styles.vacancySystemInfo}>\n                <p data-qa=\"vacancy-info-publication-type\">\n                    {publicationType}\n                    {freeRestoreInfo}\n                </p>\n                {systemInfo?.publicationTime && (\n                    <SystemInfoItem text={trls[TrlKeys.published]} dataQa=\"vacancy-info-publication-time\">\n                        <HumanDate date={systemInfo?.publicationTime} />\n                    </SystemInfoItem>\n                )}\n                {vacancyView['@vacancyCode'] && (\n                    <SystemInfoItem text={trls[TrlKeys.vacancyCode]} dataQa=\"vacancy-info-code\">\n                        {vacancyView['@vacancyCode']}\n                    </SystemInfoItem>\n                )}\n                {isShowExpireInfo && (\n                    <SystemInfoItem text={expireTitle} color={color} dataQa=\"vacancy-info-expire\">\n                        <Conversion\n                            value={days}\n                            many={trls[TrlKeys.days.many]}\n                            some={trls[TrlKeys.days.some]}\n                            one={trls[TrlKeys.days.one]}\n                            hasValue={false}\n                        />\n                    </SystemInfoItem>\n                )}\n                {isArchived && validThroughTime && (\n                    <SystemInfoItem text={trls[TrlKeys.archivedFrom]} dataQa=\"vacancy-info-archived\">\n                        <HumanDate date={validThroughTime} />\n                    </SystemInfoItem>\n                )}\n            </div>\n        </Text>\n    );\n};\n\nexport default translation(VacancySystemInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"vacancyBreadcrumbs\":\"vacancy-breadcrumbs--cDz7sCSBviCl5ApJUCmn\",\"vacancyBreadcrumbsHere\":\"vacancy-breadcrumbs-here--PzZQedo7wGC0_Srpu7Bv\"};","import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Column, { ColumnsWrapper, ColumnsRow } from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { Breadcrumb, BreadcrumbsDivider } from 'lux/components/Breadcrumbs';\nimport translation from 'lux/components/translation';\n\nimport styles from './vacancy-breadcrumbs.less';\n\nconst TrlKeys = {\n    myVacancies: 'employer.vacancies.breadcrumbs.myVacancies',\n    myVacanciesArchive: 'employer.myVacancyes.archive',\n    mainPage: 'employer.vacancies.breadcrumbs.mainPage',\n};\n\nconst VacancyBreadcrumbs: TranslatedComponent = ({ trls }) => {\n    const vacancyName = useSelectorNonNullable((state) => state.vacancyView.name);\n    const company = useSelectorNonNullable((state) => state.vacancyView.company);\n    const archived = useSelectorNonNullable((state) => state.vacancyView.status.archived);\n    const employerId = useSelectorNonNullable((state) => state.employerId);\n\n    const breadcrumbProps =\n        Number(employerId) === company.id\n            ? {\n                  to: '/employer/vacancies',\n                  children: trls[TrlKeys.myVacancies],\n              }\n            : {\n                  to: '/',\n                  children: trls[TrlKeys.mainPage],\n              };\n\n    return (\n        <ColumnsWrapper>\n            <ColumnsRow>\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                    <div className={styles.vacancyBreadcrumbs}>\n                        <Breadcrumb {...breadcrumbProps} />\n                        <BreadcrumbsDivider />\n                        {archived && (\n                            <>\n                                <Breadcrumb to=\"/employer/vacancies/archived\">\n                                    {trls[TrlKeys.myVacanciesArchive]}\n                                </Breadcrumb>\n                                <BreadcrumbsDivider />\n                            </>\n                        )}\n                        <p className={styles.vacancyBreadcrumbsHere}>{vacancyName}</p>\n                    </div>\n                </Column>\n            </ColumnsRow>\n        </ColumnsWrapper>\n    );\n};\n\nexport default translation(VacancyBreadcrumbs);\n","import { CampaignCreationStatus } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst useAuctionEditingEnabled = (): boolean =>\n    useSelector(({ auctionData }) => auctionData?.campaignCreationStatus === CampaignCreationStatus.CampaignCreated);\n\nexport default useAuctionEditingEnabled;\n","import React from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport interface CompensationTypeProps {\n    from: number | null;\n    to: number | null;\n    gross: boolean;\n}\n\nconst TrlKeys = {\n    gross: 'beta.employer.statistics.salaries.type.gross',\n    net: 'beta.employer.statistics.salaries.type.net',\n};\n\nconst CompensationType: TranslatedComponent<CompensationTypeProps> = ({ from, to, gross, trls }) => {\n    if (gross === null || (!from && !to)) {\n        return null;\n    }\n    return <>{trls[TrlKeys[gross ? 'gross' : 'net']]}</>;\n};\n\nexport default translation(CompensationType);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--Ax5BHn51KT3pO_rOg3iO\",\"screenBreak\":\"screen-break--BKSfOpsF9p_cNWCRvQJx\",\"salaryRangeTitleGood\":\"salary-range-title_good--v46FXtqbtBKmyeIz_v79\",\"salaryRangeTitleBad\":\"salary-range-title_bad--B5vfMBo6UwwpbfkxQACQ\",\"salaryRangeCanvasWrapper\":\"salary-range-canvas-wrapper--bSOMYz8VwjCcxE_1DsIQ\",\"salaryRangeCanvasWrapperSmall\":\"salary-range-canvas-wrapper_small--JVKwP3H2ewySCAgWd5mp\",\"salaryRangeCanvas\":\"salary-range-canvas--uNZxHD7IvFZpXcW8Dyc_\",\"salaryRangeBar\":\"salary-range-bar--O_qQmQErjoF4xUjWOHkR\",\"salaryRangeBarSmall\":\"salary-range-bar_small--HBuNzni2fXZ2B73Bcp4L\",\"salaryRangeReal\":\"salary-range-real--w75nPbbzcJlDdUcsnO1J\",\"salaryRangeBorder\":\"salary-range-border--gfg_Yf84wjtP325YKC6N\",\"salaryRangeBorderOnlyFrom\":\"salary-range-border_only-from--SIBm1k4CGgvuxus1gv_D\",\"salaryRangeBorderOnlyTo\":\"salary-range-border_only-to--cuJmsSDdYly30caLrCw4\",\"vacancySalaryLabels\":\"vacancy-salary-labels--ETYXUsWPFEwVxdOCVPwQ\",\"vacancySalaryLabel\":\"vacancy-salary-label--WiSBwFBcPQuJF0WNcCvC\",\"vacancySalaryLegend\":\"vacancy-salary-legend--z0Y35XaPlJlNd4YqmSDd\",\"vacancySalaryLegendMarket\":\"vacancy-salary-legend_market--NVLg6WTrxvvrbD4v6PJ2\",\"vacancySalaryLegendCurrent\":\"vacancy-salary-legend_current--pJi5Arxxm0O0Ggrz6uRu\"};","import classnames from 'classnames';\n\nimport { HoverTip } from 'bloko/blocks/drop';\nimport { TipLayer } from 'bloko/blocks/drop/Tip';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { Placement } from 'bloko/common/metrics';\n\nimport Compensation from 'lux/components/Compensation';\nimport translation from 'lux/components/translation';\nimport { MarketRange } from 'lux/models/canvacVacancySalaryData';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport formatToInt from 'lux/modules/formatToInt';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    salaryHint: 'statportal.competitorAnalysisForVacancy.vacancySalaryDiagram.hint',\n    salaryMarketHint: 'statportal.competitorAnalysisForVacancy.vacancySalaryDiagram.marketHint',\n    from: 'statportal.competitorAnalysisForVacancy.vacancySalaryDiagram.from',\n    to: 'statportal.competitorAnalysisForVacancy.vacancySalaryDiagram.to',\n    currencyRUR: 'RUR',\n};\n\ninterface VacancySalaryRangeDiagramProps {\n    currentFrom: number | null;\n    currentTo: number | null;\n    marketRange: MarketRange | null;\n}\n\nconst getCoord = (start: number, min: number, delta: number) => ((start - min) / delta) * 100;\n\nconst VacancySalaryRangeDiagram: TranslatedComponent<VacancySalaryRangeDiagramProps> = ({\n    currentFrom,\n    currentTo,\n    marketRange,\n    trls,\n}) => {\n    let MAX_SALARY = 0;\n    let MIN_SALARY = Infinity;\n\n    if (marketRange) {\n        [currentFrom, currentTo, marketRange.bottom, marketRange.upper].filter(Boolean).forEach((num) => {\n            if (num && num > MAX_SALARY) {\n                MAX_SALARY = num;\n            }\n            if (num && num < MIN_SALARY) {\n                MIN_SALARY = num;\n            }\n        });\n    }\n\n    const host = !process.env.LUX_SERVER ? document.body : null;\n\n    const SALARIES_DELTA = MAX_SALARY - MIN_SALARY;\n\n    const CURRENT_FROM_COORD = marketRange && currentFrom ? getCoord(currentFrom, MIN_SALARY, SALARIES_DELTA) : null;\n    const CURRENT_TO_COORD = marketRange && currentTo ? getCoord(currentTo, MIN_SALARY, SALARIES_DELTA) : null;\n    const MARKET_BOTTOM_COORD = marketRange ? getCoord(marketRange.bottom, MIN_SALARY, SALARIES_DELTA) : null;\n    const MARKET_UPPER_COORD = marketRange ? 100 - getCoord(marketRange.upper, MIN_SALARY, SALARIES_DELTA) : null;\n\n    return (\n        <div className={classnames(styles.salaryRangeCanvasWrapper, styles.salaryRangeCanvasWrapperSmall)}>\n            <div className={classnames(styles.salaryRangeCanvas, styles.salaryRangeCanvasSmall)}>\n                {marketRange && (\n                    <HoverTip\n                        render={() => {\n                            return (\n                                <>\n                                    {trls[TrlKeys.salaryMarketHint]}:\n                                    <br />\n                                    {formatToInt(marketRange.bottom)} - {formatToInt(marketRange.upper)}{' '}\n                                    {trls[TrlKeys.currencyRUR]}\n                                </>\n                            );\n                        }}\n                        host={host}\n                        layer={TipLayer.OverlayContent}\n                        placement={Placement.Bottom}\n                    >\n                        <div\n                            className={classnames(styles.salaryRangeBar, styles.salaryRangeBarSmall)}\n                            style={{\n                                left: `${MARKET_BOTTOM_COORD || 0}%`,\n                                right: `${MARKET_UPPER_COORD || 0}%`,\n                            }}\n                        />\n                    </HoverTip>\n                )}\n                {marketRange && currentFrom !== null && currentTo !== null && (\n                    <HoverTip\n                        render={() => {\n                            return (\n                                <>\n                                    {trls[TrlKeys.salaryHint]}:\n                                    <br />\n                                    <Compensation\n                                        from={currentFrom}\n                                        to={currentTo}\n                                        currencyCode={CurrencyType.RUR}\n                                        dash\n                                    />\n                                </>\n                            );\n                        }}\n                        host={host}\n                        layer={TipLayer.OverlayContent}\n                    >\n                        <div\n                            className={styles.salaryRangeReal}\n                            style={{\n                                left: `${CURRENT_FROM_COORD !== null ? CURRENT_FROM_COORD : 0}%`,\n                                right: `${CURRENT_TO_COORD !== null ? 100 - CURRENT_TO_COORD : 0}%`,\n                            }}\n                        />\n                    </HoverTip>\n                )}\n                {marketRange && CURRENT_FROM_COORD !== null && (\n                    <HoverTip\n                        render={() => {\n                            return `${trls[TrlKeys.from]}\n                                ${formatToInt(currentFrom) || ''} ${trls[TrlKeys.currencyRUR]}`;\n                        }}\n                        host={host}\n                        layer={TipLayer.OverlayContent}\n                    >\n                        <div\n                            className={classnames(styles.salaryRangeBorder, {\n                                [styles.salaryRangeBorderOnlyFrom]: currentTo === null,\n                            })}\n                            style={{\n                                left: `${CURRENT_FROM_COORD}%`,\n                            }}\n                        />\n                    </HoverTip>\n                )}\n                {marketRange && CURRENT_TO_COORD !== null && (\n                    <HoverTip\n                        render={() => {\n                            return `${trls[TrlKeys.to]} ${formatToInt(currentTo) || ''} ${trls[TrlKeys.currencyRUR]}`;\n                        }}\n                        host={host}\n                        layer={TipLayer.OverlayContent}\n                    >\n                        <div\n                            className={classnames(styles.salaryRangeBorder, {\n                                [styles.salaryRangeBorderOnlyTo]: currentFrom === null,\n                            })}\n                            style={{\n                                left: `${CURRENT_TO_COORD}%`,\n                            }}\n                        />\n                    </HoverTip>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default translation(VacancySalaryRangeDiagram);\n","import { useEffect, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { SalaryRange } from '@hh.ru/types-hh-microcore';\nimport { H3 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { updateUrl } from 'Modules/url';\nimport Compensation from 'lux/components/Compensation';\nimport translation from 'lux/components/translation';\nimport { MarketRange, VacancyCompensation } from 'lux/models/canvacVacancySalaryData';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { EM_DASH } from 'lux/modules/symbols';\n\nimport CompensationType from 'lux/components/EmployerVacancySalaryCanvacBanner/CompensationType';\nimport VacancySalaryRangeDiagram from 'lux/components/EmployerVacancySalaryCanvacBanner/VacancySalaryRangeDiagram';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    marketLevel: 'statportal.competitorAnalysisForVacancy.vacancySalary.marketLevel',\n    currentSalary: 'statportal.competitorAnalysisForVacancy.vacancySalary.currentSalary',\n    salaryRangeIsUndefined: 'statportal.competitorAnalysisForVacancy.vacancySalary.salaryRangeIsUndefined',\n    currentVacancySalary: 'employer.competitorAnalysisVacancySalaryBanner.currentVacancySalary',\n    salaryRange: {\n        [SalaryRange.NotSpecified]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.NOT_SPECIFIED',\n        [SalaryRange.Undefined]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.UNDEFINED',\n        [SalaryRange.TooWide]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.TOO_WIDE',\n        [SalaryRange.TooLow]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.TOO_LOW',\n        [SalaryRange.Low]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.LOW',\n        [SalaryRange.MatchMarket]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.MATCH_MARKET',\n        [SalaryRange.High]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.HIGH',\n        [SalaryRange.TooHigh]: 'employer.competitorAnalysisVacancySalaryBanner.salaryRange.TOO_HIGH',\n    },\n    description: {\n        [SalaryRange.NotSpecified]: 'employer.competitorAnalysisVacancySalaryBanner.description.NOT_SPECIFIED',\n        [SalaryRange.Undefined]: '',\n        [SalaryRange.TooWide]: 'employer.competitorAnalysisVacancySalaryBanner.description.TOO_WIDE',\n        [SalaryRange.TooLow]: 'employer.competitorAnalysisVacancySalaryBanner.description.TOO_LOW',\n        [SalaryRange.Low]: 'employer.competitorAnalysisVacancySalaryBanner.description.LOW',\n        [SalaryRange.MatchMarket]: '',\n        [SalaryRange.High]: 'employer.competitorAnalysisVacancySalaryBanner.description.HIGH',\n        [SalaryRange.TooHigh]: 'employer.competitorAnalysisVacancySalaryBanner.description.TOO_HIGH',\n    },\n    link: 'employer.competitorAnalysisVacancySalaryBanner.link',\n};\n\ninterface EmployerVacancySalaryCanvacBannerProps {\n    vacancyCompensation: VacancyCompensation;\n    marketRange: MarketRange;\n    salaryRange: SalaryRange;\n    vacancyId: number;\n}\n\nconst COMPETITOR_ANALYSIS_URL_BASE = 'https://hh.ru/employer/statistics/competitor_analysis/vacancy/';\n\nconst EmployerVacancySalaryCanvacBanner: TranslatedComponent<EmployerVacancySalaryCanvacBannerProps> = ({\n    vacancyCompensation,\n    marketRange,\n    salaryRange,\n    vacancyId,\n    trls,\n}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (ref.current) {\n            Analytics.sendHHEventElementShown(ref.current, {\n                name: 'canvac_vacancy_salary_banner',\n                vacancyId,\n            });\n        }\n    }, [vacancyId]);\n\n    const url = useMemo(\n        () =>\n            updateUrl(COMPETITOR_ANALYSIS_URL_BASE + String(vacancyId), {\n                from: 'employer_vacancy',\n            }),\n        [vacancyId]\n    );\n\n    const handleCanvacLinkClick = () => {\n        Analytics.sendHHEventButtonClick('canvac_vacancy_salary_banner_link', {\n            from: 'employer_vacancy',\n            vacancyId,\n        });\n    };\n\n    return (\n        <div className={styles.wrapper} ref={ref}>\n            <H3>\n                {salaryRange !== SalaryRange.TooWide && salaryRange !== SalaryRange.Undefined && (\n                    <>{`${trls[TrlKeys.currentVacancySalary]} ${EM_DASH} `}</>\n                )}\n                <br className={styles.screenBreak} />\n                <span\n                    className={classNames(styles.salaryRangeTitle, {\n                        [styles.salaryRangeTitleBad]:\n                            salaryRange === SalaryRange.NotSpecified ||\n                            salaryRange === SalaryRange.Low ||\n                            salaryRange === SalaryRange.TooLow,\n                        [styles.salaryRangeTitleGood]:\n                            salaryRange === SalaryRange.MatchMarket ||\n                            salaryRange === SalaryRange.High ||\n                            salaryRange === SalaryRange.TooHigh,\n                    })}\n                >\n                    {trls[TrlKeys.salaryRange[salaryRange]]}\n                </span>\n            </H3>\n            {salaryRange !== SalaryRange.MatchMarket && salaryRange !== SalaryRange.Undefined && (\n                <>\n                    <VSpacing base={4} />\n                    {trls[TrlKeys.description[salaryRange]]}\n                </>\n            )}\n            <VSpacing base={6} />\n            <VacancySalaryRangeDiagram\n                currentFrom={vacancyCompensation.from}\n                currentTo={vacancyCompensation.to}\n                marketRange={marketRange}\n            />\n            <VSpacing base={6} />\n            {salaryRange !== SalaryRange.Undefined ? (\n                <div className={styles.vacancySalaryLabels}>\n                    {salaryRange !== SalaryRange.NotSpecified ? (\n                        <div className={styles.vacancySalaryLabel}>\n                            <div>\n                                <div\n                                    className={classNames(\n                                        styles.vacancySalaryLegend,\n                                        styles.vacancySalaryLegendCurrent\n                                    )}\n                                />\n                                <VSpacing base={2} />\n                                <Text strong>\n                                    <Compensation\n                                        from={vacancyCompensation.from || 0}\n                                        to={vacancyCompensation.to || 0}\n                                        currencyCode={vacancyCompensation.currency}\n                                        dash\n                                    />{' '}\n                                    <span className={styles.vacancySalaryCompensationType}>\n                                        <CompensationType\n                                            from={vacancyCompensation.from}\n                                            to={vacancyCompensation.to}\n                                            gross={vacancyCompensation.gross}\n                                        />\n                                    </span>\n                                </Text>\n                                <VSpacing base={2} />\n                            </div>\n                            <Text importance={TextImportance.Tertiary}>{trls[TrlKeys.currentSalary]}</Text>\n                        </div>\n                    ) : null}\n                    {salaryRange && (\n                        <div className={styles.vacancySalaryLabel}>\n                            <div>\n                                <div\n                                    className={classNames(styles.vacancySalaryLegend, styles.vacancySalaryLegendMarket)}\n                                />\n                                <VSpacing base={2} />\n                                <Text strong>\n                                    <Compensation\n                                        from={marketRange.bottom}\n                                        to={marketRange.upper}\n                                        currencyCode={CurrencyType.RUR}\n                                        dash\n                                    />{' '}\n                                    <span className={styles.vacancySalaryCompensationType}>\n                                        <CompensationType\n                                            from={vacancyCompensation.from}\n                                            to={vacancyCompensation.to}\n                                            gross={vacancyCompensation.gross}\n                                        />\n                                    </span>\n                                </Text>\n                                <VSpacing base={2} />\n                            </div>\n                            <Text importance={TextImportance.Tertiary}>{trls[TrlKeys.marketLevel]}</Text>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <Text size={TextSize.Medium}>{trls[TrlKeys.salaryRangeIsUndefined]}</Text>\n            )}\n            <VSpacing base={4} />\n            <BlokoLink Element={Link} disableVisited to={url} onClick={handleCanvacLinkClick} target=\"_blank\">\n                {trls[TrlKeys.link]}\n            </BlokoLink>\n        </div>\n    );\n};\n\nexport default translation(EmployerVacancySalaryCanvacBanner);\n","// extracted by mini-css-extract-plugin\nexport default {\"suitableVacanciesBanner\":\"suitable-vacancies-banner--yVC9xsoPygMhdi3yUOMG\",\"suitableVacanciesBannerHeading\":\"suitable-vacancies-banner-heading--_HwjvshZHmMLzsFknjHn\"};","import Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H3 } from 'bloko/blocks/header';\nimport Icon, { IconColor, IconScale, IconView, IconKind, IconDynamic } from 'bloko/blocks/icon';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport formatToInt from 'lux/modules/formatToInt';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './suitable-vacancies-banner.less';\n\ninterface SuitableVacanciesBannerProps {\n    vacancyId: string;\n}\n\nconst TrlKeys = {\n    title: 'employer.analytics.block.suitableVacancies.title',\n    text: 'employer.analytics.block.suitableVacancies.text',\n};\n\nconst SuitableVacanciesBanner: TranslatedComponent<SuitableVacanciesBannerProps> = ({ vacancyId, trls }) => {\n    const link = `${paths.resumeSearch}?vacancy_id=${vacancyId}&order_by=relevance&search_period=365&from=vacancy_view_banner&hhtmFromLabel=vacancy_view_banner`;\n    const resumesCount = useSelector((state) => state.resumeSearchResult.totalResults);\n\n    if (!resumesCount) {\n        return null;\n    }\n\n    const similarResumesCount = String(formatToInt(resumesCount));\n\n    const onClickLink = () => {\n        Analytics.sendHHEventButtonClick('new_employer_vacancy_promo_banner_suitable_resumes_link', {\n            vacancyId,\n        });\n    };\n\n    return (\n        <IconDynamic stretched>\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to={link}\n                target=\"_blank\"\n                kind={LinkKind.Tertiary}\n                onClick={onClickLink}\n            >\n                <div className={styles.suitableVacanciesBanner}>\n                    <div className={styles.suitableVacanciesBannerHeading}>\n                        <H3>{format(trls[TrlKeys.title], { '{0}': similarResumesCount })}</H3>\n                        <Icon\n                            view={IconView.Chevron}\n                            initial={IconColor.Gray60}\n                            scale={IconScale.Small}\n                            kind={IconKind.Right}\n                            highlighted={IconColor.Blue50}\n                        />\n                    </div>\n                    <Text size={TextSize.Medium}>{trls[TrlKeys.text]}</Text>\n                </div>\n            </BlokoLink>\n        </IconDynamic>\n    );\n};\n\nexport default translation(SuitableVacanciesBanner);\n","// extracted by mini-css-extract-plugin\nexport default {\"vacancyConversionInfo\":\"vacancy-conversion-info--FXWoX9eYwPwLDxhJuS9m\",\"columnBox\":\"column-box--HXOW5FyWHpz8jLgrWSvY\"};","import { FC } from 'react';\n\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport styles from './vacancy-conversion-info.less';\n\ninterface ColumnTextValueProps {\n    title: string;\n    value: string | null;\n}\n\nconst ColumnBox: FC<ColumnTextValueProps> = ({ title, value }) => (\n    <div className={styles.columnBox}>\n        <Text Element=\"span\" strong size={TextSize.Large}>\n            {value}\n        </Text>\n        <Text Element=\"span\">{title}</Text>\n    </div>\n);\n\nexport default ColumnBox;\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport HSpacingContainer from 'bloko/blocks/hSpacing/HSpacingContainer';\nimport { H3 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\n\nimport translation from 'lux/components/translation';\nimport formatToInt from 'lux/modules/formatToInt';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ColumnBox from 'lux/components/VacancyConversionInfo/ColumnBox';\n\nimport styles from './vacancy-conversion-info.less';\n\ninterface VacancyConversionInfoProps {\n    vacancyId: string;\n    fromUTM: string;\n    pageUTM: string;\n    eventCategory: string;\n}\n\nconst TrlKeys = {\n    title: 'employer.analytics.block.title.vacancyConversion',\n    viewCount: 'vacancy.stat.title.views',\n    responseCount: 'vacancy.stat.title.responses',\n    chartConversionLink: 'employer.analytics.block.chartConversionLink',\n    conversion: 'employer.analytics.block.title.conversion',\n};\n\nconst VacancyConversionInfo: TranslatedComponent<VacancyConversionInfoProps> = ({\n    trls,\n    vacancyId,\n    fromUTM,\n    pageUTM,\n    eventCategory,\n}) => {\n    const conversion = useSelector(({ vacancyAnalyticsConversion }) => vacancyAnalyticsConversion);\n    const conversionRef = useRef<HTMLDivElement | null>(null);\n\n    useEffect(() => {\n        if (conversion && conversionRef.current) {\n            Analytics.sendEventElementShown(conversionRef.current, eventCategory, 'shown-vacancy-analytics-conversion');\n        }\n    }, [conversion, eventCategory]);\n\n    if (!conversion) {\n        return null;\n    }\n\n    const linkToConversion = `/employer/statistics/vacancy_conversion/?vacancyId=${vacancyId}&from=${fromUTM}`;\n\n    const onClickLink = () => {\n        Analytics.sendHHEvent('widget_click', { goal: pageUTM });\n        Analytics.sendEvent(eventCategory, 'click-analytics-conversion');\n    };\n\n    const percentValue = NumberFormatter.format(String((conversion?.conversion || 0) * 100), {\n        decimalLength: 1,\n    });\n\n    return (\n        <div className={styles.vacancyConversionInfo} ref={conversionRef}>\n            <H3>{trls[TrlKeys.title]}</H3>\n            <HSpacingContainer base={3}>\n                <ColumnBox title={trls[TrlKeys.viewCount]} value={formatToInt(conversion?.viewCount ?? 0)} />\n                <ColumnBox title={trls[TrlKeys.responseCount]} value={formatToInt(conversion?.responseCount ?? 0)} />\n                <ColumnBox title={trls[TrlKeys.conversion]} value={`${percentValue}%`} />\n            </HSpacingContainer>\n            <Text size={TextSize.Medium}>\n                <BlokoLink disableVisited Element={Link} to={linkToConversion} target=\"_blank\" onClick={onClickLink}>\n                    {trls[TrlKeys.chartConversionLink]}\n                </BlokoLink>\n            </Text>\n        </div>\n    );\n};\n\nexport default translation(VacancyConversionInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"text--t2ewCULpf_82r3BmOJAS\",\"textAccountLowBalance\":\"text_account-low-balance--REa9BW8Rjyz82IHjIrdk\",\"textActive\":\"text_active--JzaJxNvptUtgIm6wXiIN\",\"textBlocked\":\"text_blocked--NiwpSBHCoUEU3zZrTApQ\",\"textCampaignLowBalance\":\"text_campaign-low-balance--xMUFNApPCyalGx99l6SJ\"};","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { AuctionCampaignStatus } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './campaign-status-text.less';\n\nconst TrlKeys = {\n    [AuctionCampaignStatus.AccountLowBalance]: 'label.no.money',\n    [AuctionCampaignStatus.Active]: 'label.active',\n    [AuctionCampaignStatus.Blocked]: 'label.pause',\n    [AuctionCampaignStatus.CampaignLowBalance]: 'label.limitReached',\n};\n\ninterface CampaignStatusTextProps {\n    dataQaPrefix: string;\n}\n\nconst CampaignStatusText: TranslatedComponent<CampaignStatusTextProps> = ({ dataQaPrefix, trls }) => {\n    const campaignStatus = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign?.campaignStatus);\n\n    if (!campaignStatus) {\n        return null;\n    }\n\n    return (\n        <div\n            data-qa={`${dataQaPrefix}-campaign-status-${campaignStatus}`}\n            className={classnames(styles.text, {\n                [styles.textAccountLowBalance]: campaignStatus === AuctionCampaignStatus.AccountLowBalance,\n                [styles.textActive]: campaignStatus === AuctionCampaignStatus.Active,\n                [styles.textBlocked]: campaignStatus === AuctionCampaignStatus.Blocked,\n                [styles.textCampaignLowBalance]: campaignStatus === AuctionCampaignStatus.CampaignLowBalance,\n            })}\n        >\n            {trls[TrlKeys[campaignStatus]]}\n        </div>\n    );\n};\n\nexport default translation(CampaignStatusText);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--_jQel8aDKZG_t3WiqNGN\",\"tip\":\"tip--e6qXeNE9uGtZBqdJQTpm\"};","import { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionEditingBannerElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_editing_banner_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport { H3 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport CampaignStatusText from 'lux/components/Auction/Common/CampaignStatus/CampaignStatusText';\nimport HoverWarningTipToEdit from 'lux/components/Auction/HoverWarningTipToEdit';\nimport useAuctionEditingModal from 'lux/components/Auction/hooks/useAuctionEditingModal';\nimport { QS_PARAM_TO_OPEN_AUCTION } from 'lux/components/Auction/utils';\nimport FlexibleRow from 'lux/components/FlexibleRow';\nimport translation from 'lux/components/translation';\nimport useRunEmployerVacancyAction from 'lux/hooks/useRunEmployerVacancyAction';\nimport { AuctionCampaignStatus } from 'lux/models/auctionData';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.title',\n    status: 'auction.banner.status',\n    clicks: 'auction.banner.clicks',\n    edit: 'auction.banner.edit',\n};\n\nconst AuctionStatistic: TranslatedComponent = ({ trls }) => {\n    const campaignCreationStatus = useSelectorNonNullable(({ auctionData }) => auctionData.campaignCreationStatus);\n    const campaignId = useSelectorNonNullable(({ auctionData }) =>\n        String(auctionData.currentVacancyAuctionCampaign?.campaignId)\n    );\n    const campaignStatus = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.currentVacancyAuctionCampaign?.campaignStatus\n    );\n\n    const isVacancyFromMainCabinet = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.currentVacancyAuctionCampaign?.campaignAccountInfo.isMain\n    );\n    const clicks = useSelectorNonNullable(({ auctionData }) => auctionData.auctionStatistics.clicks);\n    const vacancyId = useSelectorNonNullable(({ auctionData }) => auctionData.vacancyId as string);\n\n    const { showAuctionEditingModal, renderAuctionEditingModal } = useAuctionEditingModal(\n        String(campaignId),\n        campaignStatus as AuctionCampaignStatus,\n        campaignCreationStatus,\n        vacancyId\n    );\n\n    useRunEmployerVacancyAction(QS_PARAM_TO_OPEN_AUCTION, showAuctionEditingModal);\n\n    const buttonElement = (\n        <Button\n            data-qa=\"open-edit-auction-modal\"\n            disabled={isVacancyFromMainCabinet === false}\n            appearance={ButtonAppearance.Outlined}\n            kind={ButtonKind.Primary}\n            onClick={showAuctionEditingModal}\n        >\n            {trls[TrlKeys.edit]}\n        </Button>\n    );\n\n    return (\n        <>\n            <ElementShownAnchor\n                fn={auctionEditingBannerElementShown}\n                campaignId={campaignId}\n                campaignStatus={campaignStatus}\n                clicks={clicks}\n                vacancyId={vacancyId}\n            >\n                <div className={styles.wrapper} data-qa=\"auction-editing-banner\">\n                    <H3>{trls[TrlKeys.title]}</H3>\n                    <VSpacing base={6} />\n                    <FlexibleRow>\n                        <Text>{trls[TrlKeys.status]}</Text>\n                        <CampaignStatusText dataQaPrefix=\"auction-statistics-banner\" />\n                    </FlexibleRow>\n                    <VSpacing base={4} />\n                    <FlexibleRow>\n                        <Text>{trls[TrlKeys.clicks]}</Text>\n                        <Text data-qa=\"auction-editing-banner-clicks\">{clicks || '–'}</Text>\n                    </FlexibleRow>\n                    <VSpacing base={6} />\n                    {isVacancyFromMainCabinet === false ? (\n                        <HoverTip placement={TipPlacement.Bottom} render={() => <HoverWarningTipToEdit />}>\n                            <div className={styles.tip}>{buttonElement}</div>\n                        </HoverTip>\n                    ) : (\n                        buttonElement\n                    )}\n                </div>\n            </ElementShownAnchor>\n            {renderAuctionEditingModal()}\n        </>\n    );\n};\n\nexport default translation(AuctionStatistic);\n","// extracted by mini-css-extract-plugin\nexport default {\"competitorAnalysisBanner\":\"competitor-analysis-banner--jOgQJJBtbFyJpKPgWVns\",\"competitorAnalysisBannerHeader\":\"competitor-analysis-banner-header--i0U9jKr6z_k5jhukiPTK\",\"competitorAnalysisBannerText\":\"competitor-analysis-banner-text--s9_G0kPO41A_bJJdAeql\"};","import { useEffect, useRef, useMemo } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { H3 } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { updateUrl } from 'Modules/url';\nimport translation from 'lux/components/translation';\n\nimport styles from './competitor-analysis-banner.less';\n\nconst TrlKeys = {\n    header: 'employer.competitorAnalysisBanner.header',\n    text: 'employer.competitorAnalysisBanner.text',\n    button: 'employer.competitorAnalysisBanner.button',\n};\n\ninterface CompetitorAnalysisBannerProps {\n    vacancyId: number;\n}\n\nconst COMPETITOR_ANALYSIS_URL_BASE = 'https://hh.ru/employer/statistics/competitor_analysis/vacancy/';\n\nconst CompetitorAnalysisBanner: TranslatedComponent<CompetitorAnalysisBannerProps> = ({ vacancyId, trls }) => {\n    const bannerRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (bannerRef.current) {\n            Analytics.sendHHEventElementShown(bannerRef.current, {\n                name: 'competitor_analysis_banner',\n                from: 'employer_vacancy',\n            });\n        }\n    }, []);\n\n    const url = useMemo(\n        () =>\n            updateUrl(COMPETITOR_ANALYSIS_URL_BASE + String(vacancyId), {\n                from: 'employer_vacancy',\n            }),\n        [vacancyId]\n    );\n\n    const buttonClick = () => {\n        Analytics.sendHHEventButtonClick('competitor_analysis_banner_link', {\n            from: 'employer_vacancy',\n        });\n    };\n\n    return (\n        <>\n            <div className={styles.competitorAnalysisBanner} ref={bannerRef}>\n                <div className={styles.competitorAnalysisBannerHeader}>\n                    <H3>{trls[TrlKeys.header]}</H3>\n                </div>\n                <VSpacing base={3} />\n                <div className={styles.competitorAnalysisBannerText}>\n                    <Text size={TextSize.Medium}>{trls[TrlKeys.text]}</Text>\n                </div>\n                <VSpacing base={3} />\n                <Button\n                    appearance={ButtonAppearance.Outlined}\n                    kind={ButtonKind.Primary}\n                    Element=\"a\"\n                    href={url}\n                    target=\"_blank\"\n                    onClick={buttonClick}\n                >\n                    {trls[TrlKeys.button]}\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default translation(CompetitorAnalysisBanner);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button, { ButtonScale, ButtonKind } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport Modal, { ModalHeader, ModalTitle, ModalFooter, ModalContent, ModalError } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport {\n    CALL_TRACKING_DISABLE_SUCCESS,\n    CALL_TRACKING_ALREADY_DISABLED,\n} from 'lux/components/Notifications/DisableCallTracking';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { UserType } from 'lux/models/userType';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/call_tracking/disable': {\n            body: {\n                vacancyId: number;\n            };\n            queryParams: void;\n            response: {\n                status: string;\n            };\n        };\n    }\n}\n\nconst TrlKeys = {\n    disableCT: 'admin.callTracking.vacancy.disable',\n    disable: 'admin.callTracking.vacancy.disable.submit',\n    cancel: 'form.submit.cancel',\n    disableCTWarning: 'admin.callTracking.vacancy.disable.submit.warning',\n    defaultError: 'page.4xx.description',\n};\n\nconst DisableCallTracking: TranslatedComponent<{ vacancyId: number }> = ({ trls, vacancyId }) => {\n    const dispatch = useDispatch();\n    const userType = useSelector(({ userType }) => userType);\n    const canDisableCallTracking = useSelector(({ vacancyView }) => vacancyView.canDisableCallTracking);\n    const [isModalVisible, showModal, hideModal] = useOnOffState(false);\n    const [isBlockButtonDisabled, setBlockButtonDisabled] = useState(false);\n    const [callTrackingDisableError, setCallTrackingDisableError] = useState('');\n    const [isCallTrackingDisableSending, setCallTrackingDisableSending] = useState(false);\n\n    if (userType !== UserType.BackOffice || canDisableCallTracking === undefined) {\n        return null;\n    }\n\n    const closeModal = () => {\n        setCallTrackingDisableError('');\n        hideModal();\n    };\n\n    const onDisableCallTrackingClick = async () => {\n        if (isCallTrackingDisableSending) {\n            return;\n        }\n        setCallTrackingDisableSending(true);\n        setCallTrackingDisableError('');\n        let result;\n        try {\n            result = await fetcher.post('/shards/call_tracking/disable', { vacancyId });\n        } catch (error) {\n            setCallTrackingDisableError(trls[TrlKeys.defaultError]);\n            setCallTrackingDisableSending(false);\n            return;\n        }\n        dispatch(\n            addNotification(\n                result.data?.status === 'RULE_ALREADY_EXISTS'\n                    ? CALL_TRACKING_ALREADY_DISABLED\n                    : CALL_TRACKING_DISABLE_SUCCESS\n            )\n        );\n        setCallTrackingDisableSending(false);\n        setBlockButtonDisabled(true);\n        hideModal();\n    };\n\n    return (\n        <>\n            <VSpacing base={6} />\n            <Button\n                disabled={!canDisableCallTracking || isBlockButtonDisabled}\n                scale={ButtonScale.Small}\n                kind={ButtonKind.Primary}\n                onClick={showModal}\n            >\n                {trls[TrlKeys.disableCT]}\n            </Button>\n            <Modal visible={isModalVisible} onClose={closeModal}>\n                <ModalHeader>\n                    <ModalTitle>{trls[TrlKeys.disableCT]}</ModalTitle>\n                </ModalHeader>\n                <ModalContent>\n                    {format(trls[TrlKeys.disableCTWarning], {\n                        '{0}': vacancyId,\n                    })}\n                </ModalContent>\n                <ModalError visible={!!callTrackingDisableError}>{callTrackingDisableError}</ModalError>\n                <ModalFooter>\n                    <Button onClick={onDisableCallTrackingClick} kind={ButtonKind.Primary}>\n                        {trls[TrlKeys.disable]}\n                    </Button>\n                    <FormSpacer>\n                        <Button onClick={closeModal}>{trls[TrlKeys.cancel]}</Button>\n                    </FormSpacer>\n                </ModalFooter>\n            </Modal>\n        </>\n    );\n};\n\nexport default translation(DisableCallTracking);\n","import PropTypes from 'prop-types';\n\nimport { useBreakpoint } from '@hh.ru/magritte-ui';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport VSpacingContainer from 'bloko/blocks/vSpacing/VSpacingContainer';\n\nimport AuctionBanner from 'lux/components/Auction/Banner';\nimport useAuctionCreationEnabled from 'lux/components/Auction/hooks/useAuctionCreationEnabled';\nimport useAuctionEditingEnabled from 'lux/components/Auction/hooks/useAuctionEditingEnabled';\nimport EmployerVacancySalaryCanvacBanner from 'lux/components/EmployerVacancySalaryCanvacBanner';\nimport SuitableVacanciesBanner from 'lux/components/SuitableVacanciesBanner';\nimport VacancyConversionInfo from 'lux/components/VacancyConversionInfo';\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport { UserType } from 'lux/models/userType';\nimport { VacancyAdvice } from 'lux/models/vacancyCreate/vacancyAdvices.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AuctionStatistic from 'lux/pages/VacancyView/components/AuctionStatistic';\nimport CompetitorAnalysisBanner from 'lux/pages/VacancyView/components/CompetitorAnalysisBanner';\nimport DisableCallTracking from 'lux/pages/VacancyView/components/DisableCallTracking';\n\nconst PAGE_UTM = 'employer_analytics_conversion';\nconst FROM_UTM = 'vacancy_view';\nconst EVENT_CATEGORY = 'employer-vacancy';\n\nconst VacancyEmployerSidebar = ({ vacancyView, trls }) => {\n    const userType = useSelector((state) => state.userType);\n    const isBackofficeUser = userType === UserType.BackOffice;\n    const canEditAuction = useAuctionEditingEnabled();\n    const isZP = useIsZarplataPlatform();\n    const isHHru = useIsHhru();\n    const canvacVacancySalaryData = useSelector((state) => state.canvacVacancySalaryData);\n    const auctionCreationEnabled = useAuctionCreationEnabled();\n    const { isXS } = useBreakpoint();\n\n    const isAdviceSalaryExist = () => {\n        if (!canvacVacancySalaryData || !canvacVacancySalaryData?.advices) {\n            return false;\n        }\n\n        const hasSalaryAdvice = canvacVacancySalaryData.advices.some((advice) =>\n            [VacancyAdvice.SalaryCloserToMarker, VacancyAdvice.PublishSalary].includes(advice.advice)\n        );\n        return (\n            hasSalaryAdvice &&\n            canvacVacancySalaryData.calculationTime &&\n            canvacVacancySalaryData.marketRange &&\n            canvacVacancySalaryData.salaryRange\n        );\n    };\n\n    if (!vacancyView.systemInfo) {\n        return null;\n    }\n\n    return (\n        <div className=\"vacancy-history\">\n            <VSpacingContainer base={6}>\n                <SuitableVacanciesBanner vacancyId={vacancyView.vacancyId} />\n                <VacancyConversionInfo\n                    vacancyId={vacancyView.vacancyId}\n                    fromUTM={FROM_UTM}\n                    pageUTM={PAGE_UTM}\n                    eventCategory={EVENT_CATEGORY}\n                />\n                {auctionCreationEnabled && !isXS && <AuctionBanner />}\n                {canEditAuction && <AuctionStatistic />}\n                {!isZP && userType === UserType.Employer && isHHru && (\n                    <>\n                        {isAdviceSalaryExist() ? (\n                            <>\n                                <EmployerVacancySalaryCanvacBanner\n                                    vacancyCompensation={canvacVacancySalaryData.vacancyCompensation}\n                                    marketRange={canvacVacancySalaryData.marketRange}\n                                    salaryRange={canvacVacancySalaryData.salaryRange}\n                                    vacancyId={vacancyView.vacancyId}\n                                />\n                            </>\n                        ) : (\n                            <CompetitorAnalysisBanner vacancyId={vacancyView.vacancyId} />\n                        )}\n                    </>\n                )}\n            </VSpacingContainer>\n            {isBackofficeUser && (\n                <div>\n                    <BlokoLink\n                        Element={Link}\n                        disableVisited\n                        to={`/admin/vacancy/snapshot.do?vacancyId=${vacancyView.vacancyId}`}\n                        kind={LinkKind.Tertiary}\n                    >\n                        {trls[VacancyEmployerSidebar.trls.lastsnapshot]}\n                    </BlokoLink>\n                </div>\n            )}\n            <VSpacing base={3} />\n            <DisableCallTracking vacancyId={vacancyView.vacancyId} />\n            <VSpacing base={6} />\n        </div>\n    );\n};\n\nVacancyEmployerSidebar.propTypes = {\n    userType: PropTypes.string,\n    vacancyView: VacancyViewPropTypes.vacancyView,\n    trls: PropTypes.object,\n};\n\nVacancyEmployerSidebar.trls = {\n    published: 'employer.vacancy.changesHistory.publish',\n    created: 'employer.vacancy.changesHistory.create',\n    site: 'employer.vacancy.changesHistory.jobSite.HH',\n    expires: 'employer.vacancy.changesHistory.expires',\n    autoprolongation: 'employer.vacancies.autoProlongation.plannedBy',\n    code: 'vacancy.header.vacancyCode',\n    stat: 'vacancy.stat.link',\n    lastsnapshot: 'vacancy.lastVacancySnapshot.link',\n};\n\nexport default translation(VacancyEmployerSidebar);\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nconst DeleteAction = ({ Component, triggerType, trls, vacancyId, icon }) => {\n    const disabled = useRef(false);\n\n    const onTrigger = async () => {\n        // eslint-disable-next-line no-alert\n        if (disabled.current || !confirm(trls[DeleteAction.trls.confirm])) {\n            return;\n        }\n        disabled.current = true;\n        const params = { vacancyId };\n        try {\n            await fetcher.postFormData('/admin/moderator/vacancy/delete', params);\n        } catch (error) {\n            alert(trls[DeleteAction.trls.error]); // eslint-disable-line no-alert\n            disabled.current = false;\n        }\n        window.location.reload();\n    };\n\n    return (\n        <Component isPermitted onTrigger={onTrigger} triggerName=\"delete\" triggerType={triggerType} icon={icon}>\n            {trls[DeleteAction.trls.delete]}\n        </Component>\n    );\n};\n\nDeleteAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    icon: PropTypes.element,\n};\n\nDeleteAction.trls = {\n    delete: 'button.delete',\n    confirm: 'vacancy.moderator.delete.confirm',\n    error: 'vacancy.moderator.delete.error',\n};\n\nexport default translation(DeleteAction);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nconst HideAction = ({ Component, triggerType, trls, vacancyId, icon }) => {\n    const dispatch = useDispatch();\n\n    const onTrigger = async () => {\n        const params = { action: 'makeVacancyInvisible', vacancyId };\n        try {\n            await fetcher.get('/employer/vacancy-visibility', { params });\n        } catch (error) {\n            return;\n        }\n        const url = urlParser(window.location.href);\n        url.params.makeVacancyVisible = 'false';\n        dispatch(push(url.href));\n    };\n\n    return (\n        <Component isPermitted onTrigger={onTrigger} triggerName=\"hide\" triggerType={triggerType} icon={icon}>\n            {trls[HideAction.trls.hide]}\n        </Component>\n    );\n};\n\nHideAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    icon: PropTypes.element,\n};\n\nHideAction.trls = {\n    hide: 'employer.vacancyesArchive.deleteVacancy',\n};\n\nexport default translation(HideAction);\n","import PropTypes from 'prop-types';\n\nimport Icon, { IconView } from 'bloko/blocks/icon';\n\nimport translation from 'lux/components/translation';\n\nconst PrintAction = ({ Component, triggerType, trls, vacancyId }) => {\n    return (\n        <Component\n            triggerName=\"print\"\n            triggerType={triggerType}\n            triggerHref={`/vacancy/view?id=${vacancyId}&print=true`}\n        >\n            {triggerType === 'menu' && trls[PrintAction.trls.print]}\n            <Icon view={IconView.Printer} />\n        </Component>\n    );\n};\n\nPrintAction.propTypes = {\n    Component: PropTypes.elementType,\n    layoutCallback: PropTypes.func,\n    triggerType: PropTypes.string,\n    triggerName: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    buttonsContainerRef: PropTypes.object,\n};\n\nPrintAction.trls = {\n    print: 'vacancy.print',\n};\n\nexport default translation(PrintAction);\n","import { FC, ReactNode } from 'react';\n\nimport Badge, { BadgeAppearance } from 'bloko/blocks/badge';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { updateUrl } from 'Modules/url';\nimport { BasicTrigger } from 'lux/components/ControlsTrigger';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    applicants: 'applicants',\n};\n\ninterface ResponsesLinkActionProps {\n    Component: FC<BasicTrigger>;\n    triggerType: string;\n    vacancyId: number;\n    icon: ReactNode;\n}\n\nconst RESPONSES_LINK = '/employer/vacancyresponses';\n\nconst ResponsesLinkAction: TranslatedComponent<ResponsesLinkActionProps> = ({\n    Component,\n    vacancyId,\n    triggerType,\n    trls,\n}) => {\n    const negotiationsCount = useSelector((state) => state.employerNegotiations.count);\n    const responsesUrl = updateUrl(RESPONSES_LINK, { vacancyId });\n    const triggerName = 'responses-link';\n\n    return (\n        <Component triggerName={triggerName} triggerType={triggerType} triggerHref={responsesUrl}>\n            {trls[TrlKeys.applicants]}\n            {NON_BREAKING_SPACE}\n            <Badge value={negotiationsCount || 0} appearance={BadgeAppearance.Primary} hidden={!negotiationsCount} />\n        </Component>\n    );\n};\n\nexport default translation(ResponsesLinkAction);\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst RestoreAction = ({ Component, triggerType, trls, vacancyId, icon }) => (\n    <Component\n        isPermitted\n        triggerName=\"restore\"\n        triggerHref={`/employer/vacancy/restore/${vacancyId}`}\n        triggerType={triggerType}\n        icon={icon}\n    >\n        {trls[RestoreAction.trls.restore]}\n    </Component>\n);\n\nRestoreAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    icon: PropTypes.element,\n};\n\nRestoreAction.trls = {\n    restore: 'vacancy.tools.repostFromArchive',\n};\n\nexport default translation(RestoreAction);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport { VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR } from 'lux/components/Notifications/VacancyCreate';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst RestoreFastAction = ({ Component, triggerType, trls, vacancyId, icon }) => {\n    const dispatch = useDispatch();\n    const [isLoading, startLoading, stopLoading] = useOnOffState(false);\n    const [ignoreDuplicates, startIgnore] = useOnOffState(false);\n\n    const onTrigger = async () => {\n        let redirectUrl = null;\n\n        startLoading();\n        try {\n            const response = await fetcher.post(\n                `/employer/vacancy/restore_fast/${vacancyId}?ignoreDuplicates=${ignoreDuplicates}`\n            );\n            redirectUrl = response.data.redirect;\n        } catch (error) {\n            if (error.response?.data?.publicationResult?.publicationError.duplicationCheck) {\n                dispatch(addNotification(VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR));\n                startIgnore();\n            } else {\n                dispatch(showDefaultError(error));\n            }\n        } finally {\n            stopLoading();\n        }\n\n        if (redirectUrl) {\n            dispatch(push(redirectUrl));\n        }\n    };\n\n    return (\n        <Component\n            isPermitted\n            isLoading={isLoading}\n            onTrigger={onTrigger}\n            triggerName=\"restoreFast\"\n            triggerType={triggerType}\n            icon={icon}\n        >\n            {trls[RestoreFastAction.trls.restore]}\n        </Component>\n    );\n};\n\nRestoreFastAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    icon: PropTypes.element,\n};\n\nRestoreFastAction.trls = {\n    restore: 'vacancy.tools.repostFromArchive',\n};\n\nexport default translation(RestoreFastAction);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nconst RestoreToArchiveAction = ({ Component, triggerType, trls, vacancyId, icon }) => {\n    const dispatch = useDispatch();\n\n    const onTrigger = async () => {\n        const params = { action: 'makeVacancyVisible', vacancyId };\n        try {\n            await fetcher.get('/employer/vacancy-visibility', { params });\n        } catch (error) {\n            return;\n        }\n        const url = urlParser(window.location.href);\n        url.params.makeVacancyVisible = 'true';\n        dispatch(push(url.href));\n    };\n\n    return (\n        <Component\n            isPermitted\n            onTrigger={onTrigger}\n            triggerName=\"restoreToArchive\"\n            triggerType={triggerType}\n            icon={icon}\n        >\n            {trls[RestoreToArchiveAction.trls.restoreToArchive]}\n        </Component>\n    );\n};\n\nRestoreToArchiveAction.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    triggerType: PropTypes.string,\n    trls: PropTypes.object,\n    vacancyId: PropTypes.number,\n    icon: PropTypes.element,\n};\n\nRestoreToArchiveAction.trls = {\n    restoreToArchive: 'employer.vacancyesArchive.backToArchive',\n};\n\nexport default translation(RestoreToArchiveAction);\n","import Analytics, { VendorAnalytics } from '@hh.ru/analytics-js';\n\nconst EVENT_CATEGORY = 'employer-vacancy';\n\nexport const sendEventShownButton = (buttonsContainerRef, buttonRef, buttonName) => {\n    if (buttonsContainerRef?.current && buttonRef?.current) {\n        // Проверка ниже реализована для того, чтобы не отсылались события показа на элементах buttonRef,\n        // которые могут быть скрыты из-за того, что ширина контейнера не вмещает все кнопки в один ряд,\n        // а второй ряд скрывается, потому что у контейнера buttonsContainerRef (класс vacancy-actions__main)\n        // присутствует overflow: hidden; с заданной высотой.\n        // Второй ряд находится в верстке и имеет координаты, попадающие во вьюпорт,\n        // поэтому обычная проверка в sendEventElementShown с elementSpy не срабатывает\n        if (\n            buttonsContainerRef.current.getBoundingClientRect().bottom > buttonRef.current.getBoundingClientRect().top\n        ) {\n            Analytics.sendEventElementShown(\n                buttonRef.current,\n                EVENT_CATEGORY,\n                'shown-vacancy-action-button',\n                buttonName\n            );\n            Analytics.sendHHEventElementShown(buttonRef.current, {\n                name: 'employer_vacancy_action_button',\n                label: buttonName,\n            });\n        }\n    }\n};\n\nexport const sendEventShownMenuItems = (items) =>\n    items.forEach((item) => {\n        Analytics.sendEvent(EVENT_CATEGORY, 'shown-vacancy-action-menu', item);\n        Analytics.sendHHEvent('element_shown', {\n            name: 'employer_vacancy_action_menu',\n            label: item,\n        });\n    });\n\nexport const sendEventClickAction = (triggerType, triggerName, toStorage = false) => {\n    const event = `click-vacancy-action-${triggerType}`;\n    if (toStorage) {\n        VendorAnalytics.eventToStorage(EVENT_CATEGORY, event, triggerName);\n    } else {\n        Analytics.sendEvent(EVENT_CATEGORY, event, triggerName);\n    }\n    Analytics.sendHHEventButtonClick(`employer_vacancy_action_${triggerType}`, {\n        label: triggerName,\n    });\n};\n","import { useLayoutEffect, useRef } from 'react';\n\nimport throttle from 'bloko/common/throttle';\n\nconst useAdaptiveVacancyActions = (layoutCallback, triggerName) => {\n    const wrapperRef = useRef(null);\n\n    useLayoutEffect(() => {\n        const handleResize = () => {\n            if (wrapperRef.current !== null) {\n                layoutCallback(triggerName, wrapperRef.current.offsetTop === 0);\n            }\n        };\n\n        handleResize();\n\n        window.addEventListener('resize', throttle(handleResize, 400));\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [layoutCallback, triggerName, wrapperRef]);\n\n    return wrapperRef;\n};\n\nexport default useAdaptiveVacancyActions;\n","// extracted by mini-css-extract-plugin\nexport default {\"vacancyActionLayout\":\"vacancy-action-layout--WCkq1CGcyk4hmSSmRHGQ\",\"vacancyActionLayoutMenuItem\":\"vacancy-action-layout-menu-item--glqWqYJmxoU3qKFGY0sr\"};","import { FC, ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './vacancy-action-layout.less';\n\ninterface VactionActionLayoutProps {\n    children: ReactNode;\n    isMenu?: boolean;\n}\n\nconst VactionActionLayout: FC<VactionActionLayoutProps> = ({ children, isMenu = false }) => {\n    return (\n        <div className={classnames(styles.vacancyActionLayout, { [styles.vacancyActionLayoutMenuItem]: isMenu })}>\n            {children}\n        </div>\n    );\n};\n\nexport default VactionActionLayout;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useBreakpoint } from '@hh.ru/magritte-ui';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport { MenuItem } from 'bloko/blocks/drop';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\n\nimport { sendEventClickAction, sendEventShownButton } from 'lux/components/VacancyActions/sendVacancyActionsAnalytics';\nimport useAdaptiveVacancyActions from 'lux/components/VacancyActions/useAdaptiveVacancyActions';\nimport useRunEmployerVacancyAction from 'lux/hooks/useRunEmployerVacancyAction';\n\nimport VactionActionLayout from 'lux/pages/VacancyView/components/VacancyActionLayout';\n\nconst VacancyViewAction = ({\n    children,\n    isLoading,\n    layoutCallback,\n    onTrigger,\n    triggerHref,\n    triggerName,\n    triggerType,\n    buttonsContainerRef,\n    sendAnaliticsRef,\n    icon,\n}) => {\n    const wrapperRef = useAdaptiveVacancyActions(layoutCallback, triggerName);\n    const { isXS } = useBreakpoint();\n\n    useRunEmployerVacancyAction(triggerName, () => {\n        if (onTrigger) {\n            onTrigger();\n        }\n    });\n\n    useEffect(() => {\n        if (!sendAnaliticsRef.current.includes(triggerName)) {\n            sendEventShownButton(buttonsContainerRef, wrapperRef, triggerName);\n            sendAnaliticsRef.current.push(triggerName);\n        }\n    }, [buttonsContainerRef, sendAnaliticsRef, triggerName, wrapperRef]);\n\n    const onClick = () => {\n        sendEventClickAction(triggerType, triggerName, !!triggerHref);\n        if (onTrigger) {\n            onTrigger();\n        }\n    };\n\n    const targetProps = triggerName === 'print' ? { target: '_blank' } : {};\n\n    if (triggerType === 'button') {\n        const appearance = triggerName === 'responses-link' ? ButtonAppearance.Filled : ButtonAppearance.Outlined;\n        const kind = ['prolongate', 'responses-link'].includes(triggerName) ? { kind: ButtonKind.Primary } : {};\n        const stretched = isXS && triggerName === 'responses-link' ? { stretched: true } : {};\n        const otherProps = { ...targetProps, ...kind, ...stretched };\n\n        return (\n            <div className=\"vacancy-action\" ref={wrapperRef}>\n                <Button\n                    Element={triggerHref ? Link : undefined}\n                    data-qa={`vacancy-action-${triggerName}`}\n                    appearance={appearance}\n                    loading={isLoading ? <Loading initial={LoadingColor.Gray80} scale={LoadingScale.Small} /> : null}\n                    onClick={onClick}\n                    to={triggerHref}\n                    {...otherProps}\n                >\n                    <VactionActionLayout>\n                        {icon}\n                        {children}\n                    </VactionActionLayout>\n                </Button>\n            </div>\n        );\n    }\n\n    if (triggerType === 'menu') {\n        return (\n            <MenuItem data-qa={`vacancy-action-${triggerName}`} href={triggerHref} onClick={onClick} {...targetProps}>\n                <VactionActionLayout isMenu>\n                    {children}\n                    {icon}\n                </VactionActionLayout>\n            </MenuItem>\n        );\n    }\n\n    return null;\n};\n\nVacancyViewAction.propTypes = {\n    children: PropTypes.node,\n    isLoading: PropTypes.bool,\n    layoutCallback: PropTypes.func,\n    sendAnaliticsRef: PropTypes.object,\n    onTrigger: PropTypes.func,\n    triggerHref: PropTypes.string,\n    triggerName: PropTypes.string,\n    triggerType: PropTypes.string,\n    buttonsContainerRef: PropTypes.object,\n    icon: PropTypes.element,\n};\n\nexport default VacancyViewAction;\n","import { Fragment, useCallback, useMemo, useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport { useBreakpoint } from '@hh.ru/magritte-ui';\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport ClickMenu, { MenuPlacement } from 'bloko/blocks/drop/Menu/Click';\nimport Icon, { IconView, IconKind } from 'bloko/blocks/icon';\nimport Vspacing from 'bloko/blocks/vSpacing';\n\nimport useShowRisePage from 'lux/components/Rise/useShowRisePage';\nimport ArchiveAction from 'lux/components/VacancyActions/ArchiveAction';\nimport AutoProlongationAction from 'lux/components/VacancyActions/AutoProlongationAction';\nimport DeleteAction from 'lux/components/VacancyActions/DeleteAction';\nimport DuplicateAction from 'lux/components/VacancyActions/DuplicateAction';\nimport EditAction from 'lux/components/VacancyActions/EditAction';\nimport HideAction from 'lux/components/VacancyActions/HideAction';\nimport OptionAction from 'lux/components/VacancyActions/OptionAction';\nimport PrintAction from 'lux/components/VacancyActions/PrintAction';\nimport ProlongateAction from 'lux/components/VacancyActions/ProlongateAction';\nimport ProlongateActionRisePageExperiment from 'lux/components/VacancyActions/ProlongateActionRisePageExperiment';\nimport ResponsesLinkAction from 'lux/components/VacancyActions/ResponsesLinkAction';\nimport RestoreAction from 'lux/components/VacancyActions/RestoreAction';\nimport RestoreFastAction from 'lux/components/VacancyActions/RestoreFastAction';\nimport RestoreToArchiveAction from 'lux/components/VacancyActions/RestoreToArchiveAction';\nimport UpgradeAction from 'lux/components/VacancyActions/UpgradeAction';\nimport VideoInterviewAction from 'lux/components/VacancyActions/VideoInterviewAction';\nimport { sendEventShownMenuItems } from 'lux/components/VacancyActions/sendVacancyActionsAnalytics';\nimport VideoInterviewInfo from 'lux/components/VacancyView/VideoInterviewInfo';\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyAction from 'lux/pages/VacancyView/components/VacancyAction';\n\nconst VacancyEmployerActions = ({ checkedVacancies, dispatchModal, vacancyView, isBackoffice }) => {\n    const availableVacancyActions = useSelector((state) => state.availableVacancyActions);\n    const hasVideoInterview = useSelector((state) => state.hasVideoInterview);\n    const isPromoVacancy = useSelector((state) => state.isPromoVacancy);\n    const freeRestoreDays = useSelector((state) => state.vacancyInternalInfo?.freeRestoreDays);\n    const sendAnaliticsRef = useRef([]);\n\n    const dispatch = useDispatch();\n    const [menuItems, setMenuItems] = useState([]);\n    const [showMenu, setShowMenu] = useState(false);\n    const isShowRisePage = useShowRisePage();\n    const { isXS } = useBreakpoint();\n\n    const buttonsContainerRef = useRef(null);\n\n    const afterSuccessArchiveModal = useCallback(\n        (params) => {\n            const feedbackNotificationParam = params.isFeedbackSent ? '&feedbackSent=true' : '';\n            const query = params.responseQuery;\n\n            if (query) {\n                dispatch(push(`${location.pathname}${query}${feedbackNotificationParam}`));\n            } else {\n                window.location.reload();\n            }\n        },\n        [dispatch]\n    );\n\n    const layoutCallback = useCallback(\n        (triggerName, visible) => {\n            if (menuItems.includes(triggerName) && visible === true) {\n                setMenuItems(menuItems.filter((menuItem) => menuItem !== triggerName));\n            }\n            if (!menuItems.includes(triggerName) && visible === false) {\n                setMenuItems([triggerName, ...menuItems]);\n            }\n        },\n        [menuItems]\n    );\n\n    const controls = useMemo(\n        () => [\n            {\n                name: 'responses-link',\n                condition: vacancyView.canViewResponses && !isXS,\n                Component: ResponsesLinkAction,\n            },\n            {\n                name: 'update',\n                condition: availableVacancyActions.update,\n                Component: isShowRisePage ? ProlongateActionRisePageExperiment : ProlongateAction,\n                additionalProps: {\n                    freeRenewalInfo: vacancyView.properties.freeRenewalInfo,\n                },\n                icon: <Icon view={IconView.Arrow} kind={IconKind.Up} />,\n            },\n            {\n                name: 'option-toggle',\n                condition: availableVacancyActions.toggleOption,\n                Component: OptionAction,\n                additionalProps: {\n                    hasActiveOption: vacancyView.properties.hasOptionPremium,\n                },\n            },\n            {\n                name: 'edit',\n                condition: availableVacancyActions.edit,\n                Component: EditAction,\n                additionalProps: {\n                    iconOnly: isXS,\n                    ...(isBackoffice && { employerId: vacancyView.company.id }),\n                },\n            },\n            {\n                name: 'auto-prolongation-toggle',\n                condition:\n                    availableVacancyActions.enableAutoProlongation || availableVacancyActions.disableAutoProlongation,\n                Component: AutoProlongationAction,\n                additionalProps: {\n                    managerIds: [vacancyView.managerId],\n                    isAutoProlongationPlanned: availableVacancyActions.disableAutoProlongation,\n                    isPromoVacancy,\n                    additionalAnalyticsParams: {\n                        vacancy_id: vacancyView.vacancyId, // eslint-disable-line camelcase\n                    },\n                },\n            },\n            {\n                name: 'upgrade',\n                condition: availableVacancyActions.upgrade,\n                Component: UpgradeAction,\n                additionalProps: {\n                    employerId: vacancyView.company.id,\n                    from: 'from-vacancy',\n                },\n                icon: <Icon view={IconView.Arrow} kind={IconKind.Up} />,\n            },\n            {\n                name: 'archive',\n                condition: availableVacancyActions.archive,\n                Component: ArchiveAction,\n                additionalProps: {\n                    vacancyName: vacancyView.name,\n                    onArchiveSuccess: afterSuccessArchiveModal,\n                },\n            },\n            {\n                name: 'duplicate',\n                condition: availableVacancyActions.duplicate,\n                Component: DuplicateAction,\n            },\n            {\n                name: 'delete',\n                condition: availableVacancyActions.delete,\n                Component: DeleteAction,\n                icon: <Icon view={IconView.Trash} />,\n            },\n            {\n                name: 'restore',\n                condition: availableVacancyActions.restore,\n                Component: freeRestoreDays > 0 ? RestoreFastAction : RestoreAction,\n                icon: <Icon view={IconView.ArrowPath} kind={IconKind.Default} />,\n            },\n            {\n                name: 'hide',\n                condition: availableVacancyActions.hide,\n                Component: HideAction,\n                icon: <Icon view={IconView.Trash} />,\n            },\n            {\n                name: 'restoreToArchive',\n                condition: availableVacancyActions.restoreToArchive,\n                Component: RestoreToArchiveAction,\n                icon: <Icon view={IconView.Box} kind={IconKind.Arrow} />,\n            },\n            {\n                name: 'videointerview',\n                condition: hasVideoInterview,\n                Component: VideoInterviewAction,\n                additionalProps: {\n                    showInfo: !menuItems.includes('videointerview'),\n                    vacanciesIds: [vacancyView.vacancyId],\n                    labelEntry: 'vacancy',\n                },\n            },\n            {\n                name: 'print',\n                condition: availableVacancyActions.print,\n                Component: PrintAction,\n                additionalProps: { vacancyId: vacancyView.vacancyId },\n            },\n        ],\n        [\n            vacancyView.canViewResponses,\n            vacancyView.properties.freeRenewalInfo,\n            vacancyView.properties.hasOptionPremium,\n            vacancyView.company.id,\n            vacancyView.managerId,\n            vacancyView.vacancyId,\n            vacancyView.name,\n            isXS,\n            availableVacancyActions.update,\n            availableVacancyActions.toggleOption,\n            availableVacancyActions.edit,\n            availableVacancyActions.enableAutoProlongation,\n            availableVacancyActions.disableAutoProlongation,\n            availableVacancyActions.upgrade,\n            availableVacancyActions.archive,\n            availableVacancyActions.duplicate,\n            availableVacancyActions.delete,\n            availableVacancyActions.restore,\n            availableVacancyActions.hide,\n            availableVacancyActions.restoreToArchive,\n            availableVacancyActions.print,\n            isBackoffice,\n            isPromoVacancy,\n            afterSuccessArchiveModal,\n            freeRestoreDays,\n            hasVideoInterview,\n            menuItems,\n            isShowRisePage,\n        ]\n    );\n\n    const ControlComponent = useMemo(\n        () => (props) =>\n            (\n                <VacancyAction\n                    buttonsContainerRef={buttonsContainerRef}\n                    sendAnaliticsRef={sendAnaliticsRef}\n                    layoutCallback={layoutCallback}\n                    {...props}\n                />\n            ),\n        [layoutCallback]\n    );\n\n    const controlProps = useMemo(\n        () => ({\n            Component: ControlComponent,\n            checkedVacancies: checkedVacancies.current,\n            dispatchModal,\n            vacanciesIds: [vacancyView.vacancyId],\n            vacancyId: vacancyView.vacancyId,\n        }),\n        [ControlComponent, checkedVacancies, dispatchModal, vacancyView.vacancyId]\n    );\n\n    const renderMenuItems = useCallback(\n        () =>\n            controls.map(\n                ({ Component, name, condition, additionalProps, icon }) =>\n                    condition &&\n                    menuItems.includes(name) && (\n                        <Component key={name} triggerType=\"menu\" icon={icon} {...controlProps} {...additionalProps} />\n                    )\n            ),\n        [controls, controlProps, menuItems]\n    );\n\n    return (\n        <Fragment>\n            {isXS && (\n                <>\n                    <ResponsesLinkAction\n                        triggerType=\"button\"\n                        {...controlProps}\n                        Component={(props) => (\n                            <VacancyAction\n                                buttonsContainerRef={buttonsContainerRef}\n                                sendAnaliticsRef={sendAnaliticsRef}\n                                layoutCallback={() => undefined}\n                                {...props}\n                            />\n                        )}\n                    />\n                    <Vspacing base={3} />\n                </>\n            )}\n            <div className=\"vacancy-actions\">\n                <div className=\"vacancy-actions__main\" ref={buttonsContainerRef}>\n                    {controls.map(\n                        ({ Component, name, condition, additionalProps, icon }) =>\n                            condition && (\n                                <Component\n                                    key={name}\n                                    triggerType=\"button\"\n                                    icon={icon}\n                                    {...controlProps}\n                                    {...additionalProps}\n                                />\n                            )\n                    )}\n                </div>\n                {menuItems.length > 0 && (\n                    <div className=\"vacancy-actions__more\">\n                        <VideoInterviewInfo showInfo={hasVideoInterview && menuItems.includes('videointerview')}>\n                            <ClickMenu show={showMenu} placement={MenuPlacement.BottomEnd} render={renderMenuItems}>\n                                <Button\n                                    appearance={ButtonAppearance.Outlined}\n                                    onClick={() => {\n                                        if (!showMenu) {\n                                            sendEventShownMenuItems(menuItems);\n                                        }\n                                        setShowMenu(!showMenu);\n                                    }}\n                                >\n                                    …\n                                </Button>\n                            </ClickMenu>\n                        </VideoInterviewInfo>\n                    </div>\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nVacancyEmployerActions.propTypes = {\n    checkedVacancies: PropTypes.object,\n    dispatchModal: PropTypes.func,\n    vacancyView: VacancyViewPropTypes.vacancyView,\n    isBackoffice: PropTypes.bool,\n    trls: PropTypes.object,\n};\n\nexport default VacancyEmployerActions;\n","import PropTypes from 'prop-types';\n\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyEmployerActions from 'lux/pages/VacancyView/components/VacancyEmployerActions';\n\nconst VacancyHeader = ({ checkedVacancies, dispatchModal, vacancyView }) => {\n    const { availableVacancyActions, permissions, userType } = useSelector((state) => ({\n        availableVacancyActions: state.availableVacancyActions,\n        permissions: state.permissions,\n        userType: state.userType,\n    }));\n\n    const hasAvailableActions =\n        availableVacancyActions.update ||\n        availableVacancyActions.edit ||\n        availableVacancyActions.duplicate ||\n        availableVacancyActions.archive ||\n        availableVacancyActions.upgrade ||\n        availableVacancyActions.delete ||\n        availableVacancyActions.restore ||\n        availableVacancyActions.hide ||\n        availableVacancyActions.restoreToArchive ||\n        permissions.includes('ModerateVacancy') ||\n        permissions.includes('VacModerList');\n\n    if (!hasAvailableActions && !vacancyView.canViewResponses) {\n        return null;\n    }\n\n    return (\n        <div className=\"vacancy-header\">\n            {hasAvailableActions && (\n                <VacancyEmployerActions\n                    checkedVacancies={checkedVacancies}\n                    dispatchModal={dispatchModal}\n                    vacancyView={vacancyView}\n                    isBackoffice={userType === UserType.BackOffice}\n                />\n            )}\n        </div>\n    );\n};\n\nVacancyHeader.propTypes = {\n    checkedVacancies: PropTypes.object,\n    dispatchModal: PropTypes.func,\n    vacancyView: VacancyViewPropTypes.vacancyView,\n};\n\nexport default VacancyHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"timeline\":\"timeline--ZFkHpjFRWWW6rn7zWnWu\",\"timelineItem\":\"timeline-item--fYUmTVgSKSu4VRwZYgj5\",\"timelineItemDateTime\":\"timeline-item-date-time--n81ZL1pg0kTFsjeLT2pz\",\"timelineItemText\":\"timeline-item-text--I4eGJwA5TbnaCFZdXl92\",\"timelineRowSpacingSmall\":\"timeline-row-spacing-small--HlDH9UA9wxfwdxzLGHhj\",\"timelineRowSpacingDefault\":\"timeline-row-spacing-default--AgOAffgkryjw2_DveCwZ\",\"timelineNoData\":\"timeline-no-data--Ziyc6PySQX8h4Sg718ix\",\"timelineExpandButton\":\"timeline-expand-button--RmWKQjcJP8OIxATcVaiU\"};","import React from 'react';\nimport classnames from 'classnames';\n\nimport Button from 'bloko/blocks/button';\nimport Link from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport formatDate from 'Modules/formatDate';\nimport HumanDate from 'lux/components/HumanDate';\nimport translation from 'lux/components/translation';\nimport useToggleState from 'lux/hooks/useToggleState';\n\nimport styles from './timeline.less';\n\nconst TrlKeys = {\n    noData: 'timeline.noData',\n    expand: 'toggle.expand.all',\n    collapse: 'timeline.collapse',\n};\n\nconst DEFAULT_SHOW_ITEMS = 3;\n\nexport interface TimelineItem {\n    dateTime: string | number;\n    title: string;\n    text?: string;\n}\n\nexport type TimelineData = Array<TimelineItem & { id: number | string }>;\n\ninterface TimelineProps {\n    data: TimelineData;\n    rowSpacing?: 'small' | 'default';\n    showTime?: boolean;\n    onShowMoreCallback?: () => void;\n}\n\nconst Timeline: TranslatedComponent<TimelineProps> = ({\n    data,\n    rowSpacing = 'default',\n    onShowMoreCallback,\n    showTime = false,\n    trls,\n}) => {\n    const [visible, toggle] = useToggleState(false);\n\n    if (!data.length) {\n        return (\n            <div className={styles.timeline}>\n                <Text Element=\"span\" importance={TextImportance.Secondary}>\n                    <p className={styles.timelineNoData}>{trls[TrlKeys.noData]}</p>\n                </Text>\n            </div>\n        );\n    }\n\n    const showExpandButton = data.length > DEFAULT_SHOW_ITEMS;\n    const items = visible ? data : data.slice(0, DEFAULT_SHOW_ITEMS);\n\n    const onToggle = () => {\n        if (!visible) {\n            onShowMoreCallback?.();\n        }\n        toggle();\n    };\n\n    return (\n        <ul className={styles.timeline}>\n            {items.map((item) => (\n                <li\n                    className={classnames(styles.timelineItem, {\n                        [styles.timelineRowSpacingSmall]: rowSpacing === 'small',\n                        [styles.timelineRowSpacingDefault]: rowSpacing === 'default',\n                    })}\n                    key={item.id}\n                >\n                    <div className={styles.timelineItemDateTime}>\n                        <Text Element=\"span\" importance={TextImportance.Secondary}>\n                            <HumanDate date={item.dateTime} />\n                        </Text>\n                        {showTime && (\n                            <Text Element=\"span\" importance={TextImportance.Secondary}>\n                                {formatDate(item.dateTime, 'HH:mm')}\n                            </Text>\n                        )}\n                    </div>\n                    <div className={styles.timelineItemText}>\n                        <Text>{item.title}</Text>\n                        {Boolean(item.text) && <Text importance={TextImportance.Secondary}>{item.text}</Text>}\n                    </div>\n                </li>\n            ))}\n            {showExpandButton && (\n                <li className={styles.timelineExpandButton}>\n                    <Link Element={Button} onClick={onToggle} data-qa=\"add-comment\">\n                        {trls[visible ? TrlKeys.collapse : TrlKeys.expand]}\n                    </Link>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default translation(Timeline);\n","import Analytics from '@hh.ru/analytics-js';\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport getConversionType from 'bloko/common/getConversionType';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Timeline from 'lux/components/Timeline';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    aboutLink: 'employer.vacancy.history.mailings.aboutLink',\n    title: {\n        changes: 'employer.vacancy.history.changes.title',\n        mailings: 'employer.vacancy.history.mailings.title',\n    },\n    count: {\n        one: 'employer.vacancy.changesHistory.recipients.one',\n        some: 'employer.vacancy.changesHistory.recipients.many',\n        many: 'employer.vacancy.changesHistory.recipients.some',\n    },\n};\n\nconst VacancyHistoryTab: TranslatedComponent = ({ trls }) => {\n    const systemInfo = useSelector((state) => state.vacancyView.systemInfo);\n    const history = systemInfo?.history ?? [];\n    const mailings = systemInfo?.mailings ?? [];\n\n    const preparedHistoryData = history.map((record, ind) => ({\n        id: `${record.time}-${ind}`,\n        dateTime: record.time,\n        title: `${record.type}${record?.comment ? NON_BREAKING_SPACE + record?.comment : ''}`,\n        text: record.user,\n    }));\n\n    const preparedMailingData = mailings.map((record, ind) => {\n        const conversionCount = getConversionType({\n            one: trls[TrlKeys.count.one],\n            some: trls[TrlKeys.count.some],\n            many: trls[TrlKeys.count.many],\n            value: record.count,\n        });\n\n        return {\n            id: `${record.date}-${ind}`,\n            dateTime: record.date,\n            title: `${record.count}${NON_BREAKING_SPACE}${conversionCount}`,\n        };\n    });\n\n    const onShowMoreHitoryItems = () => {\n        Analytics.sendHHEventButtonClick('vacancy_view_history_tab_show_more_items');\n    };\n\n    return (\n        <ColumnsRow>\n            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                <Text strong>{trls[TrlKeys.title.changes]}</Text>\n                <VSpacing base={4} />\n                <Timeline data={preparedHistoryData} showTime onShowMoreCallback={onShowMoreHitoryItems} />\n                <VSpacing base={6} />\n                <Text strong>{trls[TrlKeys.title.mailings]}</Text>\n                <VSpacing base={4} />\n                <Timeline data={preparedMailingData} />\n                <VSpacing base={6} />\n            </Column>\n        </ColumnsRow>\n    );\n};\n\nexport default translation(VacancyHistoryTab);\n","import { useLayoutEffect, useRef } from 'react';\n\n/**\n * Вызывает переданную функцию один раз через useLayoutEffect\n */\nconst useLayoutMount = (fn: () => void): void => {\n    const mounted = useRef(false);\n\n    useLayoutEffect(() => {\n        if (!mounted.current) {\n            fn();\n            mounted.current = true;\n        }\n    }, [fn]);\n};\n\nexport default useLayoutMount;\n","import React, { ReactElement, MouseEvent } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport DropInfo, { InfoPlacement } from 'bloko/blocks/drop/Info';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport Storage from 'bloko/common/storage/LocalStorageWrapper';\n\nimport translation from 'lux/components/translation';\nimport useLayoutMount from 'lux/hooks/useLayoutMount';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface TooltipHistoryTabProps {\n    children: ReactElement;\n}\n\nconst TrlKeys = {\n    ok: 'employer.vacancy.tooltip.button.ok',\n    text: 'employer.vacancy.tooltip.text',\n};\n\nconst LS_KEY = 'vacancyHistoryTabTooltipShowed';\n\nconst TooltipHistoryTab: TranslatedComponent<TooltipHistoryTabProps> = ({ children, trls }) => {\n    const [show, onShow, onClose] = useOnOffState(false);\n    const employerManagerId = useSelector((state) => state.employerManager?.id);\n    const isBackofficeUser = useSelector(({ userType }) => userType === UserType.BackOffice);\n\n    const getLSValue = (): string[] => {\n        const vals = Storage.getItem(LS_KEY);\n        return vals ? (JSON.parse(vals) as string[]) : [];\n    };\n\n    const checkIsShowed = () => {\n        const vals = getLSValue();\n        return vals.includes(employerManagerId ?? '') || isBackofficeUser;\n    };\n\n    useLayoutMount(() => {\n        const isShowed = checkIsShowed();\n        if (!isShowed) {\n            onShow();\n        }\n    });\n\n    const setLSValue = () => {\n        const prev = getLSValue();\n        Storage.setItem(LS_KEY, JSON.stringify([...prev, employerManagerId]));\n    };\n\n    const hideTooltip = () => {\n        setLSValue();\n        onClose();\n        Analytics.sendHHEventButtonClick('vacancy_view_history_tab_onboarding_ok');\n    };\n\n    const onCloseHandler = (event: MouseEvent) => {\n        event.stopPropagation();\n        hideTooltip();\n    };\n\n    const tooltipContent = () => {\n        return (\n            <>\n                <Text>{trls[TrlKeys.text]}</Text>\n                <VSpacing base={3} />\n                <Button\n                    kind={ButtonKind.Inversed}\n                    appearance={ButtonAppearance.Outlined}\n                    scale={ButtonScale.Small}\n                    onClick={hideTooltip}\n                >\n                    {trls[TrlKeys.ok]}\n                </Button>\n            </>\n        );\n    };\n\n    return (\n        <DropInfo\n            show={show}\n            showCloseButton\n            closeByClickOutside={false}\n            placement={InfoPlacement.RightStart}\n            // В onClose отсутствует проп евента, но необходимо предотвратить дальнейшее распростронение event\n            // при закрытии тултипа, т.к. переходим на таб\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            onClose={onCloseHandler}\n            render={tooltipContent}\n        >\n            {children}\n        </DropInfo>\n    );\n};\n\nexport default translation(TooltipHistoryTab);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { replace } from 'connected-react-router';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Tabs, { Tab } from 'bloko/blocks/tabs';\nimport { TabIdType } from 'bloko/blocks/tabs/Tab';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport translation from 'lux/components/translation';\nimport { VacancyViewTab, setVacancyViewActiveTab } from 'lux/models/vacancyViewTab';\nimport { useSelector } from 'lux/modules/useSelector';\nimport TooltipHistoryTab from 'lux/pages/VacancyView/components/VacancyHistoryTab/TooltipHistoryTab';\n\nconst TrlKeys = {\n    tab: {\n        [VacancyViewTab.Main]: 'employer.vacancy.tab.main',\n        [VacancyViewTab.History]: 'employer.vacancy.tab.history',\n    },\n};\nconst VacancyTabs: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const activeTab = useSelector((state) => state.vacancyViewTab);\n\n    const onChangeTab = (tab: TabIdType) => {\n        const newLocation = urlParser(window.location.pathname + window.location.search);\n\n        if (tab === VacancyViewTab.Main) {\n            delete newLocation.params.activeTab;\n        } else {\n            newLocation.params.activeTab = tab;\n            Analytics.sendHHEventButtonClick('vacancy_view_history_tab_select');\n        }\n        dispatch(replace(newLocation.href, { tab }, { cancelFetchingData: true }));\n        dispatch(setVacancyViewActiveTab(tab as VacancyViewTab));\n    };\n\n    return (\n        <>\n            <Tabs onChange={onChangeTab}>\n                <Tab id={VacancyViewTab.Main} active={activeTab === VacancyViewTab.Main} data-qa=\"tab-main\">\n                    {trls[TrlKeys.tab.main]}\n                </Tab>\n                <Tab id={VacancyViewTab.History} active={activeTab === VacancyViewTab.History} data-qa=\"tab-history\">\n                    <TooltipHistoryTab>\n                        <span>{trls[TrlKeys.tab.history]}</span>\n                    </TooltipHistoryTab>\n                </Tab>\n            </Tabs>\n        </>\n    );\n};\n\nexport default translation(VacancyTabs);\n","// extracted by mini-css-extract-plugin\nexport default {\"tabPaneHide\":\"tab-pane-hide--UhTWcA2TixjSRQrXpAA9\"};","import React, { ReactNode, FC } from 'react';\n\nimport styles from './tab-pane.less';\n\ntype TabPaneProps = {\n    value: string | number | null;\n    index: string | number;\n    children: ReactNode;\n    destroyInactive?: boolean;\n};\n\nconst TabPane: FC<TabPaneProps> = ({ value, index, children, destroyInactive = false }) => {\n    const isActive = value === index;\n\n    if (destroyInactive) {\n        return isActive ? <div data-qa=\"tab-pane-content\">{children}</div> : null;\n    }\n\n    return (\n        <div data-qa=\"tab-pane-content\" className={isActive ? '' : styles.tabPaneHide}>\n            {children}\n        </div>\n    );\n};\n\nexport default TabPane;\n","import { Fragment, useCallback, useEffect, useReducer, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Column, { ColumnsWrapper, ColumnsRow } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport SendFloodlightConversion from 'HH/SendFloodlightConversion';\nimport AuctionBanner from 'lux/components/Auction/Banner';\nimport useAuctionCreationEnabled from 'lux/components/Auction/hooks/useAuctionCreationEnabled';\nimport ClickmeAutoCampaignModal from 'lux/components/ClickmeAutoCampaign';\nimport EmployerReviewsWidgetBig from 'lux/components/EmployerReviews/WidgetBig';\nimport VacancyNotifications from 'lux/components/Notifications/VacancyView';\nimport RelatedVacancies from 'lux/components/RelatedVacancies';\nimport Modals, { modalReducer } from 'lux/components/VacancyModals';\nimport { CLOSE_MODAL } from 'lux/components/VacancyModals/constants';\nimport VacancyBody from 'lux/components/VacancyView/VacancyBody';\nimport VacancyBrandedBody from 'lux/components/VacancyView/VacancyBrandedBody';\nimport VacancyHasTestText from 'lux/components/VacancyView/VacancyHasTestText';\nimport VacancySystemInfo from 'lux/components/VacancyView/VacancySystemInfo';\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\nimport VacancyViewPropTypes from 'lux/components/VacancyView/propTypes';\nimport { useAddEventPixelsRu } from 'lux/hooks/useAddEventPixelsRu';\nimport { useDV360Analytics } from 'lux/hooks/useDV360Analytics';\nimport { CountryId } from 'lux/models/countryId';\nimport { UserType } from 'lux/models/userType';\nimport { VacancyViewTab } from 'lux/models/vacancyViewTab';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyBreadcrumbs from 'lux/pages/VacancyView/components/VacancyBreadcrumbs';\nimport VacancyEmployerSidebar from 'lux/pages/VacancyView/components/VacancyEmployerSidebar';\nimport VacancyHeader from 'lux/pages/VacancyView/components/VacancyHeader';\nimport VacancyHistoryTab from 'lux/pages/VacancyView/components/VacancyHistoryTab';\nimport VacancyTabs from 'lux/pages/VacancyView/components/VacancyTabs';\nimport TabPane from 'lux/pages/VacancyView/components/VacancyTabs/TabPane';\n\nconst VacancyViewEmployer = ({ vacancyView }) => {\n    const activeTab = useSelector((state) => state.vacancyViewTab);\n    const { isBranded, isConstructor } = useBranding();\n\n    const checkedVacancies = useRef({ [vacancyView.managerId]: [vacancyView.vacancyId] });\n    const [modalData, dispatchModal] = useReducer(modalReducer, {});\n    const handleCloseModal = useCallback(() => dispatchModal({ type: CLOSE_MODAL }), []);\n\n    const isNewVacancy = useSelector(({ isNewVacancy }) => isNewVacancy);\n    const userType = useSelector(({ userType }) => userType);\n    const isTrustedEmployer = useSelector(\n        (state) => state.employerInfo.isTrusted || state.vacancyView.company['@trusted']\n    );\n    const systemInfo = useSelector((state) => state.vacancyView.systemInfo);\n    const sendDV360Analytics = useDV360Analytics();\n    const isShowTabs = systemInfo && Array.isArray(systemInfo?.history);\n\n    const CustomColumnsWrapper = useCallback(({ children }) => children, []);\n    const DescriptionWrapper = useCallback(\n        ({ children }) => <div className=\"vacancy-branded-employer-description-wrapper\">{children}</div>,\n        []\n    );\n    const AdditionalWrapper = useCallback(\n        ({ children }) => <div className=\"vacancy-branded-employer-additional-wrapper\">{children}</div>,\n        []\n    );\n    const countryId = useSelector((state) => state.countryId);\n    const addEventPixelsRu = useAddEventPixelsRu();\n\n    const auctionCreationEnabled = useAuctionCreationEnabled();\n\n    useEffect(() => {\n        if (isNewVacancy && userType === UserType.Employer) {\n            Analytics.sendEvent('employer', 'vacancy-publish');\n            addEventPixelsRu('B2B_VACANCY_COMPLETE');\n            sendDV360Analytics('VACANCY_SHOWN');\n\n            if (countryId === CountryId.Kazakhstan) {\n                SendFloodlightConversion({ type: 'hh_kz0', cat: 'new_v0' });\n            }\n        }\n    }, [isNewVacancy, userType, countryId, addEventPixelsRu, sendDV360Analytics]);\n\n    const vacancyHasTest = vacancyView?.userTestId && !vacancyView.status.archived && (\n        <>\n            <VacancyHasTestText />\n            <VSpacing base={6} />\n        </>\n    );\n\n    const vacancyLayoutHeader = (\n        <>\n            <ColumnsRow>\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                    <VacancyHeader\n                        checkedVacancies={checkedVacancies}\n                        dispatchModal={dispatchModal}\n                        vacancyView={vacancyView}\n                    />\n                    <VSpacing base={4} />\n                    <VacancySystemInfo />\n                    <VSpacing base={8} />\n                    {vacancyHasTest}\n                </Column>\n            </ColumnsRow>\n            {auctionCreationEnabled && (\n                <Column xs=\"4\" s=\"8\" m=\"0\" l=\"0\">\n                    <AuctionBanner />\n                    <VSpacing base={8} />\n                </Column>\n            )}\n            <ColumnsRow>\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                    {isShowTabs && <VacancyTabs />}\n                    <VSpacing base={6} />\n                </Column>\n            </ColumnsRow>\n        </>\n    );\n\n    const backofficeRelatedVacancies = (\n        <div className=\"vacancy-noprint\">\n            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"11\">\n                <RelatedVacancies />\n            </Column>\n        </div>\n    );\n\n    const employerReviews = isTrustedEmployer && !isConstructor && (\n        <Column xs=\"4\" s=\"8\" m=\"8\" l=\"11\">\n            <EmployerReviewsWidgetBig />\n        </Column>\n    );\n\n    return (\n        <Fragment>\n            <VacancyBreadcrumbs />\n            <VSpacing base={4} />\n            <VacancyNotifications dispatchModal={dispatchModal} />\n            {isBranded ? (\n                <>\n                    <ColumnsWrapper>\n                        <ColumnsRow>\n                            <Column xs=\"4\" s=\"8\" m=\"9\" l=\"11\" container>\n                                {vacancyLayoutHeader}\n                                <TabPane index={VacancyViewTab.Main} value={activeTab}>\n                                    <VacancyBrandedBody\n                                        CustomColumnsWrapper={CustomColumnsWrapper}\n                                        AdditionalWrapper={AdditionalWrapper}\n                                        DescriptionWrapper={DescriptionWrapper}\n                                        isEmployerView\n                                    />\n                                </TabPane>\n                                {isShowTabs && (\n                                    <TabPane index={VacancyViewTab.History} value={activeTab} destroyInactive>\n                                        <VacancyHistoryTab />\n                                    </TabPane>\n                                )}\n                            </Column>\n                            <Column xs=\"0\" s=\"0\" m=\"3\" l=\"5\">\n                                <VacancyEmployerSidebar vacancyView={vacancyView} />\n                            </Column>\n                        </ColumnsRow>\n                    </ColumnsWrapper>\n                    <ColumnsWrapper>\n                        <ColumnsRow>\n                            <Column xs=\"4\" s=\"8\" m=\"0\" l=\"0\">\n                                <VacancyEmployerSidebar vacancyView={vacancyView} />\n                            </Column>\n                            {activeTab === VacancyViewTab.Main && (\n                                <>\n                                    {employerReviews}\n                                    {backofficeRelatedVacancies}\n                                </>\n                            )}\n                        </ColumnsRow>\n                    </ColumnsWrapper>\n                </>\n            ) : (\n                <ColumnsWrapper>\n                    <ColumnsRow>\n                        <Column xs=\"4\" s=\"8\" m=\"8\" l=\"11\" container>\n                            {vacancyLayoutHeader}\n                            <TabPane index={VacancyViewTab.Main} value={activeTab}>\n                                <VacancyBody />\n                                {employerReviews}\n                                {backofficeRelatedVacancies}\n                            </TabPane>\n                            {isShowTabs && (\n                                <TabPane index={VacancyViewTab.History} value={activeTab} destroyInactive>\n                                    <VacancyHistoryTab />\n                                </TabPane>\n                            )}\n                        </Column>\n                        <Column xs=\"4\" s=\"8\" m=\"4\" l=\"5\">\n                            <VacancyEmployerSidebar vacancyView={vacancyView} />\n                        </Column>\n                    </ColumnsRow>\n                </ColumnsWrapper>\n            )}\n            <Modals\n                checkedVacancies={checkedVacancies.current}\n                dispatchModal={dispatchModal}\n                handleCloseModal={handleCloseModal}\n                modalData={modalData}\n            />\n            <ClickmeAutoCampaignModal />\n        </Fragment>\n    );\n};\n\nVacancyViewEmployer.propTypes = {\n    vacancyView: VacancyViewPropTypes.vacancyView,\n};\n\nexport default VacancyViewEmployer;\n","import { format } from 'bloko/common/trl';\n\nimport formatDate from 'Modules/formatDate';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface UseVacancyViewMetaParams {\n    trls: {\n        pageTitle: string;\n        jobIn: string;\n        archived: string;\n        archivedFrom: string;\n        inCompany: string;\n        titleCompensation: string;\n        noCompensation: string;\n        compensationFrom: string;\n        compensationTo: string;\n        workExperience: string;\n        publicationDate: string;\n        month: Record<string, string>;\n        currencies: Record<string, string>;\n        zp: {\n            title: string;\n            ogTitle: string;\n            description: string;\n            ogDescription: string;\n        };\n    };\n}\n\ninterface UseVacancyMetaResult {\n    title: string;\n    ogTitle?: string;\n    description: string;\n    ogDescription: string;\n    keywords: string;\n}\n\nconst useVacancyViewMeta = ({ trls }: UseVacancyViewMetaParams): UseVacancyMetaResult => {\n    const vacancyView = useSelector((state) => state.vacancyView);\n    const vacancyTranslations = vacancyView.translations as Record<string, string>;\n    const isZp = useIsZarplataPlatform();\n\n    if (isZp) {\n        const areaCatalogTitle = vacancyView.area?.areaCatalogTitle || '';\n        const title = format(trls.zp.title, {\n            '{vacancyName}': vacancyView.name,\n            '{companyName}': vacancyView.company.visibleName,\n            '{areaCatalogTitle}': areaCatalogTitle,\n        });\n        const ogTitle = format(trls.zp.ogTitle, {\n            '{areaCatalogTitle}': areaCatalogTitle,\n        });\n        const description = format(trls.zp.description, {\n            '{vacancyName}': vacancyView.name,\n            '{areaCatalogTitle}': areaCatalogTitle,\n        });\n        const ogDescription = format(trls.zp.ogDescription, {\n            '{areaCatalogTitle}': areaCatalogTitle,\n        });\n        return {\n            title,\n            ogTitle,\n            description,\n            ogDescription,\n            keywords: title,\n        };\n    }\n\n    // title part\n    let archivedVacancyTitlePart = '';\n    if (vacancyView?.status?.archived) {\n        if (vacancyView.validThroughTime) {\n            const dateObject = new Date(vacancyView.validThroughTime);\n\n            archivedVacancyTitlePart = ` (${trls.archivedFrom} ${dateObject.getDate()} ${\n                trls.month[dateObject.getMonth()]\n            } ${dateObject.getFullYear()})`;\n        } else {\n            archivedVacancyTitlePart = ` ${trls.archived}`;\n        }\n    }\n\n    const areaCatalogTitlePart = vacancyView?.area?.areaCatalogTitle ? ` ${vacancyView.area.areaCatalogTitle}` : '';\n    const title = `${trls.pageTitle} ${vacancyView.name}${areaCatalogTitlePart}, ${format(trls.jobIn, {\n        '{0}': vacancyView.company.visibleName,\n    })}${archivedVacancyTitlePart}`;\n\n    // description part\n    let compensationPart = '';\n    if (vacancyView.compensation.noCompensation) {\n        compensationPart = trls.noCompensation;\n    }\n    if (vacancyView.compensation.from) {\n        compensationPart = `${trls.compensationFrom} ${vacancyView.compensation.from} `;\n    }\n    if (vacancyView.compensation.to) {\n        compensationPart += `${trls.compensationTo} ${vacancyView.compensation.to} `;\n    }\n    if (vacancyView.compensation.currencyCode) {\n        compensationPart += trls.currencies[vacancyView.compensation.currencyCode].replace('.', '');\n    }\n    const areaPart = vacancyView.area?.name ? ` ${vacancyView.area.name}.` : '';\n    const workExperiencePart = ` ${trls.workExperience}: ${vacancyTranslations.workExperience}.`;\n    const employmentPart = ` ${vacancyTranslations.employment}.`;\n    const publicationDatePart = vacancyView?.publicationDate\n        ? ` ${trls.publicationDate}: ${formatDate(vacancyView.publicationDate, 'dd.MM.yyyy')}.`\n        : '';\n\n    const description =\n        `${trls.pageTitle} ${vacancyView.name} ${trls.inCompany} ${vacancyView.company.visibleName}. ` +\n        `${trls.titleCompensation}: ${compensationPart}.${areaPart}${workExperiencePart}${employmentPart}` +\n        `${publicationDatePart}`;\n\n    const ogDescription =\n        `${trls.titleCompensation}: ${compensationPart}.${areaPart}${workExperiencePart}${employmentPart}` +\n        `${publicationDatePart}`;\n\n    return { title, description, ogDescription, keywords: title };\n};\n\nexport default useVacancyViewMeta;\n","import PropTypes from 'prop-types';\n\nimport { AsyncHighlighterContext, getAsyncHighlighter } from 'lux/components/Markup/AsyncHighlighterModule';\nimport PageLayout, { EmptyLayout } from 'lux/components/PageLayout';\n// tempexp_27495_next_line\nimport VacancySignUpModal from 'lux/components/SignupModal/VacancySignUpModal';\nimport SnackbarRisePageExperiment from 'lux/components/VacancyActions/SnackbarRisePageExperiment';\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyView from 'lux/pages/VacancyView/VacancyView';\nimport VacancyViewConstructor from 'lux/pages/VacancyView/VacancyViewConstructor';\nimport VacancyViewEmployer from 'lux/pages/VacancyView/VacancyViewEmployer';\nimport useVacancyViewMeta from 'lux/pages/VacancyView/useVacancyViewMeta';\n\nconst getTranslations = (trls, trlsMapping) => {\n    return Object.keys(trlsMapping).reduce((acc, key) => {\n        acc[key] =\n            typeof trlsMapping[key] === 'object' ? getTranslations(trls, trlsMapping[key]) : trls[trlsMapping[key]];\n        return acc;\n    }, {});\n};\n\nconst VacancyViewRoute = ({ trls }) => {\n    const searchQuery = useSelector((state) => state.searchQuery);\n    const vacancyView = useSelector((state) => state.vacancyView);\n    const userType = useSelector((state) => state.userType);\n    const { isConstructor } = useBranding();\n    const pageMeta = useVacancyViewMeta({ trls: getTranslations(trls, VacancyViewRoute.trls) });\n\n    let vacancyPageContent = null;\n    if ([UserType.Employer, UserType.BackOffice].includes(userType)) {\n        vacancyPageContent = <VacancyViewEmployer vacancyView={vacancyView} />;\n    } else if (isConstructor) {\n        vacancyPageContent = <VacancyViewConstructor vacancyView={vacancyView} />;\n    } else {\n        vacancyPageContent = <VacancyView vacancyView={vacancyView} />;\n    }\n\n    return (\n        <AsyncHighlighterContext.Provider value={getAsyncHighlighter(searchQuery)}>\n            <PageLayout\n                title={pageMeta.title}\n                ogTitle={pageMeta.ogTitle}\n                description={pageMeta.description}\n                ogDescription={pageMeta.ogDescription}\n                keywords={pageMeta.keywords}\n                layout={EmptyLayout}\n            >\n                {vacancyPageContent}\n                {/* tempexp_27495_next_line */}\n                <VacancySignUpModal />\n                <SnackbarRisePageExperiment />\n            </PageLayout>\n        </AsyncHighlighterContext.Provider>\n    );\n};\n\nVacancyViewRoute.trls = {\n    pageTitle: 'vacancyview.title',\n    jobIn: 'vacancyview.title.jobin',\n    archived: 'vacancies.title.archived',\n    archivedFrom: 'vacancies.title.archived.from',\n    inCompany: 'title.incompany',\n    titleCompensation: 'vacancyview.titleCompensation',\n    noCompensation: 'vacancyview.titleNoCompensation',\n    compensationFrom: 'vacancyview.titleCompensationFrom',\n    compensationTo: 'vacancyview.titleCompensationTo',\n    workExperience: 'vacancyview.workExperience',\n    publicationDate: 'vacancyview.publicationDate',\n    month: {\n        0: 'calendar.genitive.month.0',\n        1: 'calendar.genitive.month.1',\n        2: 'calendar.genitive.month.2',\n        3: 'calendar.genitive.month.3',\n        4: 'calendar.genitive.month.4',\n        5: 'calendar.genitive.month.5',\n        6: 'calendar.genitive.month.6',\n        7: 'calendar.genitive.month.7',\n        8: 'calendar.genitive.month.8',\n        9: 'calendar.genitive.month.9',\n        10: 'calendar.genitive.month.10',\n        11: 'calendar.genitive.month.11',\n    },\n    currencies: {\n        AZN: 'AZN',\n        BYR: 'BYR',\n        EUR: 'EUR',\n        KZT: 'KZT',\n        RUR: 'RUR',\n        UAH: 'UAH',\n        USD: 'USD',\n        UZS: 'UZS',\n        GEL: 'GEL',\n        KGS: 'KGS',\n    },\n    zp: {\n        title: 'vacancyview.zp.title',\n        ogTitle: 'vacancyview.zp.ogTitle',\n        description: 'vacancyview.zp.description',\n        ogDescription: 'vacancyview.zp.ogDescription',\n    },\n};\n\nVacancyViewRoute.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport default translation(VacancyViewRoute);\n"],"names":["formatSeconds","seconds","date","Date","format","getHours","formatDate","getSeconds","Math","floor","getCurrentSeconds","now","IntervalMessages","humanDatesRules","humanDatesList","Object","keys","sort","a","b","sign","get","deltaTime","deltaSeconds","messageIndex","findIndex","i","translation","error","Debug","timeLeft","calculateDisabledDates","selectedDate","lastAvailableDate","isBefore","startOfMonth","start","max","addDays","end","endOfMonth","eachDayOfInterval","map","disabledDate","TrlKeys","HoverWarningTipToEdit","trls","title","useSelectorNonNullable","auctionData","currentVacancyAuctionCampaign","campaignAccountInfo","base","PropTypes","id","Breadcrumb","children","to","className","isSeoLink","hideOverflow","Link","classnames","importance","TextImportance","Element","BreadcrumbsDivider","kind","IconKind","view","IconView","initial","IconColor","scale","IconScale","Breadcrumbs","props","Index","isFetching","isClient","useIsClient","useRedesign","mode","MagritteButtonMode","icon","type","MagritteButtonType","disabled","style","MagritteButtonStyle","loading","size","ButtonSize","ButtonType","ButtonKind","LoadingColor","LoadingScale","RU","EN","Hhcaptcha","isMagritte","captchaTrl","useMemo","renewText","description","placeholder","lang","fetcher","getSecondsRemain","till","nowSeconds","secondsRemain","value","setValue","useState","useEffect","timeOutHandler","updateValue","setTimeout","clearTimeout","useTimeoutTimer","CONFIRM_CODE_BLOCKED","CONFIRM_CODE_BLOCKED_PHONE","default","CODE_NOT_FOUND","WRONG_CODE","CODE_EXPIRED","getErrorText","authType","key","nextConfirmTime","errorText","toLowerCase","formatToReactComponent","timestamp","CodeError","verification","errorKey","FormError","show","CodeSender","login","isSignupPage","url","otpType","operationType","recaptchaClassName","disableCaptcha","recaptchaValue","setRecaptchaValue","secondsUntilNextSend","useSelector","otp","recaptcha","hhcaptcha","sendTimer","setSendTimer","useTimer","dispatch","useDispatch","elementRef","useRef","captcha","useCaptcha","vacancyId","postponedActions","vacancy","useMagritte","linkProps","onClick","useCallback","async","captchaInput","current","querySelector","params","response","addCaptchaParams","Analytics","err","data","showDefaultError","updateCaptcha","link","appearance","LinkAppearance","ref","WrapperField","Fragment","isBot","FormSeparator","timer","suppressHydrationWarning","renderTime","scriptAppended","Recaptcha","siteKey","wrapper","element","widgetId","useContext","TranslationLangContext","timerId","script","document","createElement","src","body","appendChild","loadScript","checkToRender","window","grecaptcha","render","requestAnimationFrame","reset","sitekey","classList","remove","isRecaptcha","renderRecaptcha","content","name","propTypes","RecaptchaWithTRL","RecaptchaWrapper","isFirstRender","setError","RelatedVacanciesTitle","RELATED_VACANCIES_TYPES","titleSuitable","titleSimilar","VacancySerpBanner","isOdd","position","adsPositionInfo","bannerNum","isWebView","state","banners","adsVacancyParams","vacancyView","wrapperRef","bannerL","bannerSM","bannerXS","BannerPlace","getBannersMap","length","sendClickAnalytics","AdsExternalBanner","cId","bannerAdTargeting","positionInfo","RelatedVacancies","blockRef","relatedVacancies","searchSessionId","isLoading","setIsLoading","showLoadMore","setShowLoadMore","currentPageNumber","isXs","useBreakpoint","Breakpoint","loadMoreVacancies","page","then","actions","vacancies","userLabels","addUserLabelsForVacancies","labels","pushRelatedVacanciesAction","totalPages","catch","finally","resultsFound","onScrollHandler","throttle","Metrics","bottom","isScrolledPastThreshold","addEventListener","removeEventListener","renderBannerIfNeeded","index","itemsOnPage","bannerNumberOnPage","ceil","H1Section","VacancySearchItem","vacancySource","Source","hhtmFromLabel","top","ButtonScale","ButtonAppearance","useSpan","isHH","useIsHeadHunterPlatform","isRisePageExperiment","useExperiment","isRussia","useIsRussia","setSignupBackurl","backUrl","redirectToFinishSignup","location","assign","ArchiveAction","Component","triggerType","vacanciesIds","vacancyName","dispatchModal","additionalAnalyticsParams","actionType","onArchiveSuccess","onClose","triggerName","iconProps","getMenuButtonIconProps","openModal","ADD_MODAL","payload","modalType","MODAL_ARCHIVE","onTrigger","batchLength","isPermitted","memo","MODAL_AUTO_PROLONG","useTriggerAction","isAutoProlongationPlanned","isPromoVacancy","managerIds","vacancyAutoProlongation","setLoading","afterSuccessAction","action","disableAutoProlongation","modalParams","requirements","openModalWithRequirements","AutoProlongationAction","permissions","triggerActionParams","handleTrigger","includes","UPDATE_CREATE_PERMISSION","enable","disable","connect","router","DuplicateAction","triggerHref","duplicate","EditAction","employerId","iconOnly","urlParser","href","OPTION_ACTIONS","ACTION_ERROR_KEYS","OptionAction","hasActiveOption","MODAL_BUY_OPTION","toggleOption","pathname","match","push","query","refreshManagerVacancy","addNotification","TOGGLE_VACANCY_OPTION_SUCCESS","TOGGLE_VACANCY_OPTION_ERROR","errorInsufficiencyPrefix","errorInsufficiencyPostfix","typeStandardOne","typeStandardSome","typeStandardMany","typeStandardPlusOne","typeStandardPlusSome","typeStandardPlusMany","typePremiumOne","typePremiumSome","typePremiumMany","typeAnonymousOne","typeAnonymousSome","typeAnonymousMany","typeAdvertisingOne","typeAdvertisingSome","typeAdvertisingMany","errorNonProlongableVacanciesOne","errorNonProlongableVacanciesMany","ARCHIVED","STANDARD_PLUS_NOT_MINIMUM_DAYS_TO_PROLONGATION","STANDARD_PLUS_CLOSED","ACCESS_DENIED","getNonProlongableVacancies","prolongableVacancies","Array","isArray","reason","fetchUpdateInfoSuccess","makeSetStoreField","setEmployerVacanciesRise","ProlongateActionRisePageExperiment","freeRenewalInfo","displayInOwnColumn","breakpoint","canShowHoverTip","isFreeRenewalAvailable","lastFreeRenewal","freeRenewalInterval","loadUpdateInfo","updateInfo","unavailablePublications","spentPublications","promoPublicationInfo","vacancyIdsWithFreeRenewal","notNeedProlongation","cantBeProlongated","isSomethingPossible","hasPublicationsInsufficiency","nonProlongableVacancies","message","reduce","acc","curr","isLastIndex","vacancyDescription","vacancyServiceCode","MetallicVacancyType","count","getConversionType","one","some","many","validateResponse","success","VACANCY_ACTION_ERROR","placement","TipPlacement","FreeRenewalTip","host","PRICE_LIST_URL","SnackbarRisePageExperiment","isShowRisePage","useShowRisePage","employerVacanciesRise","addon","showClose","onAction","actionLabel","undefined","useHandleUpgrade","afterVacancyTypeHasBeenChanged","fetchVacancyUpgrades","from","MODAL_UPGRADE","UpgradeAction","text","triggerProps","modalShown","setModalShown","hash","improve","info","upgradeTitle","fail","cancel","VideoInterviewAction","labelEntry","showInfo","authToken","token","goal","MODAL_VIDEOINTERVIEW","VacancyBody","contactsNodeRef","vacancyBodyFooterNodeRef","resumeFormNodeRef","isVisibleBody","setIsVisibleBody","useIsVisibleBody","isHiddenSwitcher","setVisibilityBody","ColumnsRow","xs","s","m","l","NAME","VideoInterviewInfo","setShow","infoTip","Notices","InfoPlacement","specializations","profArea","trl","status","archived","area","areaCatalogTitle","company","visibleName","Verification","errorPageLogin","codePlaceholder","onCancel","cancelText","loginFormatted","formProps","renderInput","renderCodeError","renderCodeSender","renderSubmit","renderCancelButton","container","H2","isAutofocus","isStretched","onShownAnalytics","onSubmit","code","setCode","isSending","setIsSending","setVerification","autofocusRef","useAutofocus","updateCode","event","preventDefault","InputType","onChange","invalid","autoFocus","stretched","inputRef","selectionStart","focus","useAutofocusRenderOnce","refSetted","inputRefToFocus","setIsClient","useLayoutEffect","setTime","startTime","secondsPassed","secondsLeft","Number","isNaN","autoGeneratedReducer","VacancySignUpModal","opened","anonymousSignUpModalShow","SignupAnalytics","hhtmSource","closeAnonymousSignUpModal","onSignup","pageUrl","search","RelatedVacanciesType","RelatedEmployerVacancies","isRedesign","setIsLoadingOn","setIsLoadingOff","useOnOffState","relatedVacanciesForEmployer","pushRelatedVacanciesForEmployerAction","Heading","ElementShownAnchor","fn","vacancySimilarItemForEmployerElementShown","recommendationType","relatedVacancyId","VacancyBodyRedesigned","VacancyIsArchived","VacancyDescription","VacancyAdditionalAccepts","VacancyKeySkills","VacancyDriverLicense","VacancySkillSurvey","VacancyContacts","VacancyResponseQuestions","VacancyMap","VacancyPreviewTools","VacancySimilarResumes","VacancyFooter","withBanners","publishedResumeHash","publishedForResponseResumeHash","usedResume","responseInfo","respondedWithResume","askJobSearchStatus","notificationParams","autoHideTime","RESUME_AUTO_HIDE","resumeHash","string","JOB_SEARCH_STATUS_AFTER_RESPONSE","VACANCY_RESPONSE","VacancySidebarBanners","rightColumnBanners","rightColumnClickmeBanners","containerRef","useTrackBannersClickEvent","banner","Clickme","bannerPropType","Company","department","areaContent","departmentQuery","target","LinkKind","SuitableVacancyCompensation","compensation","Compensation","SuitableVacancy","companyVisibleName","companyId","companyDepartment","renderIcon","renderAdditional","links","isAnonymous","userType","UserType","desktop","vacancyViewId","TextSize","additionalQueryParams","vacancySuitableItemButtonClick","hhtmSourceLabel","vacancyTargetId","RelatedVacanciesPreview","fullListRef","vacanciesCount","relatedType","vacanciesPreview","slice","stickyPlaceRef","stickyElementRef","dummyRef","isL","isVisible","setIsVisible","updateMetrics","diff","offsetTop","offsetHeight","height","intervalId","setInterval","clearInterval","scrollToFullList","scrollToElement","centered","topOffset","isSuitable","vacanciesCountFormatted","NumberFormatter","String","groupSeparator","NARROW_NON_BREAKING_SPACE","H2Section","currencyCode","NON_BREAKING_SPACE","moreVacancies","hasValue","similar","suitable","VacancySidebar","VacancyView","vacancyViewsCount","relatedVacanciesRef","isBranded","useBranding","dispatchNotification","useDispatchAfterResponseNotification","showResponse","topicId","respondedWithTopicId","applicantUserStatusesTrigger","responseStreakUpdate","responsesCount","responsesRequired","JobSearchStatusTrigger","readPercent","useShowResponse","doResponse","VACANCY_VIEW_COUNT","relatedVacanciesBlock","VacancyBrandedBody","bottomContent","rightColumn","RelocationWarningPopup","CountriesProfileVisibilityAgreementPopup","VacancyResponsePopup","VacancyViewPropTypes","VacancyViewConstructor","hasTopPadding","AuctionBanner","currency","minBudget","controls","AuctionFieldName","minValue","campaignDraftId","campaignDraft","campaignCreationStatus","showAuctionCreationModal","renderAuctionCreationModal","useAuctionCreationModal","useRunEmployerVacancyAction","QS_PARAM_TO_OPEN_AUCTION","styles","auctionBannerElementShown","H3","strong","FormatMoney","inCents","CAMPAIGN_CREATION_ENABLED_STATUSES","VacancyHasTestText","SystemInfoItem","dataQa","color","MIDDLE_DOT","FEATURES","zero","VacancySystemInfo","freeRestoreDays","vacancyInternalInfo","publicationTypeTrl","systemInfo","validThroughTime","isArchived","isPropertiesUsingEnabled","features","days","expirationTime","differenceInCalendarDays","toDate","expireTitle","isShowExpireInfo","publicationType","properties","typeTrl","hasOptionPremium","freeRestoreInfo","publicationTime","HumanDate","VacancyBreadcrumbs","breadcrumbProps","ColumnsWrapper","CampaignCreationStatus","gross","net","getCoord","min","delta","VacancySalaryRangeDiagram","currentFrom","currentTo","marketRange","MAX_SALARY","MIN_SALARY","Infinity","upper","filter","Boolean","forEach","num","SALARIES_DELTA","CURRENT_FROM_COORD","CURRENT_TO_COORD","MARKET_BOTTOM_COORD","MARKET_UPPER_COORD","HoverTip","formatToInt","layer","TipLayer","Placement","left","right","CurrencyType","dash","SalaryRange","EmployerVacancySalaryCanvacBanner","vacancyCompensation","salaryRange","updateUrl","EM_DASH","classNames","disableVisited","SuitableVacanciesBanner","paths","resumesCount","resumeSearchResult","totalResults","similarResumesCount","IconDynamic","highlighted","ColumnBox","VacancyConversionInfo","fromUTM","pageUTM","eventCategory","conversion","vacancyAnalyticsConversion","conversionRef","linkToConversion","percentValue","decimalLength","viewCount","responseCount","AuctionCampaignStatus","CampaignStatusText","dataQaPrefix","campaignStatus","AuctionStatistic","campaignId","isVacancyFromMainCabinet","isMain","clicks","auctionStatistics","showAuctionEditingModal","renderAuctionEditingModal","useAuctionEditingModal","buttonElement","auctionEditingBannerElementShown","FlexibleRow","CompetitorAnalysisBanner","bannerRef","DisableCallTracking","canDisableCallTracking","isModalVisible","showModal","hideModal","isBlockButtonDisabled","setBlockButtonDisabled","callTrackingDisableError","setCallTrackingDisableError","isCallTrackingDisableSending","setCallTrackingDisableSending","closeModal","visible","ModalHeader","ModalTitle","ModalContent","ModalError","ModalFooter","result","CALL_TRACKING_ALREADY_DISABLED","CALL_TRACKING_DISABLE_SUCCESS","FormSpacer","VacancyEmployerSidebar","isBackofficeUser","canEditAuction","useAuctionEditingEnabled","isZP","useIsZarplataPlatform","isHHru","useIsHhru","canvacVacancySalaryData","auctionCreationEnabled","useAuctionCreationEnabled","isXS","advices","advice","VacancyAdvice","calculationTime","isAdviceSalaryExist","lastsnapshot","published","created","site","expires","autoprolongation","stat","DeleteAction","confirm","alert","reload","delete","HideAction","makeVacancyVisible","hide","PrintAction","print","layoutCallback","buttonsContainerRef","ResponsesLinkAction","negotiationsCount","employerNegotiations","responsesUrl","BadgeAppearance","hidden","RestoreAction","restore","RestoreFastAction","startLoading","stopLoading","ignoreDuplicates","startIgnore","redirectUrl","redirect","publicationResult","publicationError","duplicationCheck","VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR","RestoreToArchiveAction","restoreToArchive","EVENT_CATEGORY","handleResize","VactionActionLayout","isMenu","VacancyViewAction","sendAnaliticsRef","useAdaptiveVacancyActions","buttonRef","buttonName","getBoundingClientRect","label","sendEventShownButton","VendorAnalytics","sendEventClickAction","targetProps","otherProps","MenuItem","VacancyEmployerActions","checkedVacancies","isBackoffice","availableVacancyActions","hasVideoInterview","menuItems","setMenuItems","showMenu","setShowMenu","afterSuccessArchiveModal","feedbackNotificationParam","isFeedbackSent","responseQuery","menuItem","condition","canViewResponses","update","ProlongateAction","additionalProps","edit","enableAutoProlongation","managerId","vacancy_id","upgrade","archive","ControlComponent","VacancyAction","controlProps","renderMenuItems","MenuPlacement","item","VacancyHeader","hasAvailableActions","Timeline","rowSpacing","onShowMoreCallback","showTime","toggle","useToggleState","showExpandButton","items","dateTime","Button","changes","mailings","VacancyHistoryTab","history","preparedHistoryData","record","ind","time","comment","user","preparedMailingData","conversionCount","mounted","LS_KEY","TooltipHistoryTab","onShow","employerManagerId","employerManager","getLSValue","vals","Storage","JSON","parse","useLayoutMount","hideTooltip","prev","stringify","setLSValue","showCloseButton","closeByClickOutside","stopPropagation","VacancyViewTab","VacancyTabs","activeTab","vacancyViewTab","tab","newLocation","replace","cancelFetchingData","setVacancyViewActiveTab","Tab","active","main","TabPane","destroyInactive","isActive","VacancyViewEmployer","isConstructor","modalData","useReducer","modalReducer","handleCloseModal","CLOSE_MODAL","isNewVacancy","isTrustedEmployer","employerInfo","isTrusted","sendDV360Analytics","useDV360Analytics","isShowTabs","CustomColumnsWrapper","DescriptionWrapper","AdditionalWrapper","countryId","addEventPixelsRu","useAddEventPixelsRu","CountryId","SendFloodlightConversion","cat","vacancyHasTest","userTestId","vacancyLayoutHeader","backofficeRelatedVacancies","employerReviews","isEmployerView","ClickmeAutoCampaign","vacancyTranslations","translations","zp","ogTitle","ogDescription","keywords","archivedVacancyTitlePart","dateObject","archivedFrom","getDate","month","getMonth","getFullYear","areaCatalogTitlePart","pageTitle","jobIn","compensationPart","noCompensation","compensationFrom","compensationTo","currencies","areaPart","workExperiencePart","workExperience","employmentPart","employment","publicationDatePart","publicationDate","inCompany","titleCompensation","getTranslations","trlsMapping","VacancyViewRoute","searchQuery","pageMeta","useVacancyViewMeta","vacancyPageContent","getAsyncHighlighter","PageLayout","layout","EmptyLayout","AZN","BYR","EUR","KZT","RUR","UAH","USD","UZS","GEL","KGS"],"sourceRoot":""}