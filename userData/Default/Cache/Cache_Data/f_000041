{"version":3,"file":"92953.3f49483f09031c469e67.js","mappings":"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","sources":["xhh/./webapp-static/lux/components/SignupModal/Form/steps/verification/VerificationFormStep.jsx","xhh/./webapp-static/lux/components/SignupModal/ApplicantSignInSignUpFlow/index.jsx","xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-in/AgreementText.tsx","xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-in/SignInForm.jsx","webpack://xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-in/sign-in-step.less?1fde","xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-in/SignInStep.tsx","xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-up/SignUpForm.jsx","xhh/./webapp-static/lux/components/SignupModal/Form/steps/sign-up/SignUpStep.tsx","webpack://xhh/./webapp-static/lux/components/SignupModal/Form/steps/verification/verification-step.less?11e7","xhh/./webapp-static/lux/components/SignupModal/Form/steps/verification/VerificationStep.tsx","webpack://xhh/./webapp-static/lux/components/SignupModal/Form/sign-up-modal.less?c84f","xhh/./webapp-static/lux/components/SignupModal/Form/index.tsx","xhh/./webapp-static/lux/components/SignupModal/contexts/SignupAnalytics.tsx","xhh/./webapp-static/lux/components/SignupModal/contexts/SignupTrls.tsx"],"sourcesContent":["// tempexp_27495_file\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { loginBy } from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\nimport { useSignupAnalyticsContext } from 'lux/components/SignupModal/contexts/SignupAnalytics';\nimport DefaultVerification from 'lux/components/Verification/Verification';\nimport translation from 'lux/components/translation';\nimport formatAnalyticErrors from 'lux/modules/analytics/formatAnalyticErrors';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst VerificationFormStep = ({ Verification = DefaultVerification, isSignupPage, next, onSignup, ...props }) => {\n    const analitics = useSignupAnalyticsContext();\n    const dispatch = useDispatch();\n    const { login, authType } = useSelector(({ otp }) => otp);\n    const vacancyId = useSelector(({ postponedActions }) => postponedActions?.vacancy?.vacancyId);\n\n    const onShownAnalytics = (elementRef) => {\n        if (elementRef.current) {\n            Analytics.sendHHEventElementShown(elementRef.current, {\n                elementName: 'code_confirmation',\n                vacancyId,\n                authType: loginBy[authType] || 'unknown',\n                isSignupPage,\n                hhtmSource: analitics.hhtmSource,\n            });\n        }\n    };\n\n    const onSubmitAnalytics = (errorCode) => {\n        Analytics.sendHHEvent('form_submit', {\n            formName: 'code_confirmation',\n            vacancyId,\n            authType: loginBy[authType] || 'unknown',\n            errors: errorCode ? formatAnalyticErrors('code_verification', errorCode) : null,\n            isSignupPage,\n            hhtmSource: analitics.hhtmSource,\n        });\n    };\n\n    const onSubmit = async (setIsSending, setVerification, code) => {\n        let response;\n        setIsSending(true);\n\n        try {\n            response = await fetcher.postFormData('/account/login/by_code', {\n                username: login,\n                code,\n                remember: true,\n                accountType: 'APPLICANT',\n            });\n        } catch (error) {\n            setIsSending(false);\n            const errorCode = error?.response?.data?.error?.key;\n            const isMultiAccountCreation = error?.response?.data?.isMultiAccountCreation;\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' && isMultiAccountCreation) {\n                try {\n                    await fetcher.post('/multiaccount_grouping/reset_employer_password', {\n                        code,\n                    });\n                } catch {\n                    onSubmitAnalytics(errorCode);\n                    dispatch(push(error.response.data.employerLoginURL));\n                    return;\n                }\n\n                onSubmitAnalytics(errorCode);\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' || errorCode === 'UNEXPECTED_USER_TYPE') {\n                dispatch(push(error.response.data.employerLoginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'UNEXPECTED_USER_TYPE' || errorCode === 'ANONYMOUS_ONLY') {\n                dispatch(push(error.response.data.loginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'ACCOUNT_NOT_FOUND') {\n                onSubmitAnalytics();\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            onSubmitAnalytics('SERVER_ERROR');\n            dispatch(showDefaultError(error));\n            return;\n        }\n\n        const errorCode = response?.data?.success ? null : response?.data?.verification?.key;\n        onSubmitAnalytics(errorCode);\n        setIsSending(false);\n\n        if (response?.data?.success) {\n            onSignup?.();\n            return;\n        }\n\n        setVerification(response?.data?.verification);\n    };\n\n    return (\n        <Verification\n            onShownAnalytics={onShownAnalytics}\n            authType={authType}\n            login={login}\n            onSubmit={onSubmit}\n            {...props}\n        />\n    );\n};\n\nVerificationFormStep.propTypes = {\n    trls: PropTypes.object,\n    login: PropTypes.string,\n    next: PropTypes.func,\n    onSignup: PropTypes.func,\n    isSignupPage: PropTypes.bool,\n    Verification: PropTypes.elementType,\n};\n\nexport default translation(VerificationFormStep);\n","// tempexp_27495_file\nimport { useState, Fragment, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\n\nimport DefaultMultiAccountGrouping from 'lux/components/ApplicantSignInSignUpFlow/MultiAccountGroupingStep/MultiAccountGrouping';\nimport DefaultSignUp from 'lux/components/ApplicantSignInSignUpFlow/SignUpStep/SignUp';\nimport VerificationFormStep from 'lux/components/SignupModal/Form/steps/verification/VerificationFormStep';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst SIGN_IN = 'SIGN_IN';\nconst SIGN_UP = 'SIGN_UP';\nconst VERIFICATION = 'VERIFICATION';\nconst MULTIACCOUNT_GROUPING = 'MULTIACCOUNT_GROUPING';\n\nconst ApplicantSignInSignUpFlow = ({\n    SignIn,\n    Verification,\n    MultiAccountGrouping = DefaultMultiAccountGrouping,\n    SignUp = DefaultSignUp,\n    isSignupPage = false,\n    onSignup,\n    onNextStep = () => null,\n    isExpanded,\n    onClickByPassword,\n    errorPageLogin = false,\n}) => {\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n    const [step, setStep] = useState(vrResponseHash ? VERIFICATION : SIGN_IN);\n    const [code, setCode] = useState('');\n    const [password, setPassword] = useState('');\n    const signUpRef = useRef();\n    const isIframeView = useSelector((state) => state.router.location.query.iframe_view === 'true');\n\n    const Wrapper = isSignupPage ? Column : Fragment;\n    const wrapperProps = isSignupPage ? { l: '16', m: '12', s: '4', xs: '4', container: true } : {};\n\n    useEffect(() => {\n        if (!isIframeView) {\n            return;\n        }\n\n        function enableLinksAfterComponentInited() {\n            signUpRef.current.querySelectorAll('.vk-mini-apps-link-disable').forEach((e) => {\n                e.classList.remove('vk-mini-apps-link-disable');\n            });\n        }\n\n        enableLinksAfterComponentInited();\n    }, [isIframeView]);\n\n    return (\n        <div ref={signUpRef}>\n            {step === SIGN_IN && (\n                <SignIn\n                    next={() => {\n                        setStep(VERIFICATION);\n                        onNextStep();\n                    }}\n                    isSignupPage={isSignupPage}\n                    onSignup={onSignup}\n                    onClickByPassword={onClickByPassword}\n                    isExpanded={isExpanded}\n                />\n            )}\n            {step === VERIFICATION && (\n                <Wrapper {...wrapperProps}>\n                    <VerificationFormStep\n                        Verification={Verification}\n                        onSignup={onSignup}\n                        cancel={() => setStep(SIGN_IN)}\n                        isSignupPage={isSignupPage}\n                        next={(code, isMultiAccountCreation) => {\n                            setStep(isSignupPage && isMultiAccountCreation ? MULTIACCOUNT_GROUPING : SIGN_UP);\n                            setCode(code);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === MULTIACCOUNT_GROUPING && (\n                <Wrapper {...wrapperProps}>\n                    <MultiAccountGrouping\n                        isSignupPage={isSignupPage}\n                        next={(password) => {\n                            setStep(SIGN_UP);\n                            setPassword(password);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === SIGN_UP && (\n                <Wrapper {...wrapperProps}>\n                    <SignUp\n                        code={code}\n                        onSignup={onSignup}\n                        password={password}\n                        isSignupPage={isSignupPage}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n        </div>\n    );\n};\n\nApplicantSignInSignUpFlow.propTypes = {\n    SignIn: PropTypes.elementType,\n    Verification: PropTypes.elementType,\n    MultiAccountGrouping: PropTypes.elementType,\n    SignUp: PropTypes.elementType,\n    isSignupPage: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    onSignup: PropTypes.func,\n    onNextStep: PropTypes.func,\n    onClickByPassword: PropTypes.func,\n    errorPageLogin: PropTypes.bool,\n};\n\nexport default ApplicantSignInSignUpFlow;\n","// tempexp_27495_file\nimport { MouseEventHandler } from 'react';\nimport classnames from 'classnames';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface AgreementTextProps {\n    text?: string;\n    link?: string;\n    withSocial?: boolean;\n    isIframeView?: boolean;\n    target?: string;\n}\nconst TrlKeys = {\n    text: 'anonymous.signup.modal.signin.agreement.text',\n    personalLink: 'anonymous.signup.modal.signin.agreement.personal-data',\n    agreementLink: 'anonymous.signup.modal.signin.agreement.rule',\n};\n\nconst agreementDataQa = 'account-signup-agreement';\nconst personalDataQa = 'account-signup-personal-data-russia';\n\nconst AgreementText: TranslatedComponent<AgreementTextProps> = ({ trls, isIframeView = false, ...props }) => {\n    const agreementURL = useSelectorNonNullable((state) => state.authUrl['agreement-form']);\n    const isLightPage = useSelector(({ isLightPage }) => isLightPage);\n    const personalDataRussiaURL = useSelectorNonNullable((state) => state.authUrl['policy-url']);\n\n    const handleClickForVKminiApp: MouseEventHandler<HTMLAnchorElement> = (event) => {\n        if (!isIframeView) {\n            return;\n        }\n        event.preventDefault();\n        window.location.href = event.currentTarget.href;\n    };\n\n    const renderLink = (text: string, dataQa: string, to: string) => {\n        return (\n            <Link\n                {...props}\n                onClick={handleClickForVKminiApp}\n                className={classnames({ 'vk-mini-apps-link-disable': isIframeView })}\n                to={to}\n                data-qa={dataQa}\n            >\n                {text}\n            </Link>\n        );\n    };\n\n    return (\n        <div\n            className={classnames('account-agreement-text', {\n                'account-agreement-text_light-page': isLightPage,\n            })}\n        >\n            {formatToReactComponent(trls[TrlKeys.text], {\n                '{0}': renderLink(trls[TrlKeys.personalLink], personalDataQa, personalDataRussiaURL),\n                '{1}': renderLink(trls[TrlKeys.agreementLink], agreementDataQa, agreementURL),\n            })}\n        </div>\n    );\n};\n\nexport default translation(AgreementText);\n","// tempexp_27495_file\nimport { useEffect, useRef, useState } from 'react';\nimport { Field as FinalField, Form as FinalForm } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { useCaptcha } from '@hh.ru/hhcaptcha';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { ButtonScale } from 'bloko/blocks/button';\n\nimport Control from 'lux/components/ApplicantSignInSignUpFlow/Control';\nimport Submit from 'lux/components/ApplicantSignInSignUpFlow/Submit';\nimport VKAppListener from 'lux/components/ApplicantSignInSignUpFlow/VKAppListener';\nimport Form from 'lux/components/Form';\nimport Hhcaptcha from 'lux/components/Hhcaptcha';\nimport Recaptcha from 'lux/components/Recaptcha';\nimport { useSignupAnalyticsContext } from 'lux/components/SignupModal/contexts/SignupAnalytics';\nimport translation from 'lux/components/translation';\nimport useApplicantSignupFields from 'lux/hooks/useApplicantSignupFields';\nimport useAutofocus from 'lux/hooks/useAutofocus';\nimport useInitialFields from 'lux/hooks/useInitialFormFields';\nimport usePostponedVacancy from 'lux/hooks/usePostponedVacancy';\nimport useVkAppIntegrationFocus from 'lux/hooks/useVkAppIntegrationFocus';\nimport { SIGNUP_FORM } from 'lux/hooks/useVkAppIntegrationReady';\nimport formatAnalyticErrors from 'lux/modules/analytics/formatAnalyticErrors';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst otpAction = makeSetStoreField('otp');\nconst formFields = ['login'];\n\nexport const getFieldProps = ({ name, conditions }, { value, error } = {}) => ({\n    name,\n    maxLength: conditions.parts[0].maxLength,\n    value,\n    error,\n});\n\nexport const loginBy = { EMAIL: 'email', SMS: 'phone' };\n\nconst requiredValidator = (value) => (value?.trim?.() ? undefined : 'EMPTY');\n\nconst submitAnalytics = ({ errors, authType = null, vacancyId, isSignupPage, hhtmSource }) => {\n    Analytics.sendHHEvent('form_submit', {\n        formName: 'applicant_authorization',\n        authType: loginBy[authType] || 'unknown',\n        errors: formatAnalyticErrors('login', errors),\n        type: 'by_code',\n        vacancyId,\n        isSignupPage,\n        hhtmSource,\n    });\n};\n\nconst SignInForm = ({\n    backurl,\n    next,\n    render,\n    trls,\n    callbackSubmit,\n    isSignupPage,\n    isAutofocusEnabled = true,\n    dataQaModifier,\n}) => {\n    const analitics = useSignupAnalyticsContext();\n    const [isFetching, setFetching] = useState(false);\n    const [fieldsSignup, setFieldsSignup] = useState({});\n    const formElement = useRef(null);\n    const initialFields = useInitialFields(formElement, formFields);\n    const dispatch = useDispatch();\n    const currentVacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const { postponedVacancy, postponedVacancyInFavorites } = usePostponedVacancy();\n    const vacancyId = currentVacancyId || (postponedVacancyInFavorites ? null : postponedVacancy?.vacancyId);\n    const favoriteVacancyId = postponedVacancyInFavorites ? postponedVacancy?.vacancyId : null;\n    const enteredLogonValue = useSelector(({ authUrl }) => authUrl['login-field-value-entered']);\n    const lastLogonValue = useSelector(({ authUrl }) => authUrl['login-field-value'] || '');\n    const metaRole = useSelector(({ metaRole }) => metaRole);\n    const { prefilledLogin: urlLogin } = useSelector(({ router }) => router.location.query);\n    const analyticsVacancyId = vacancyId ?? favoriteVacancyId;\n\n    const autofocusRef = useAutofocus();\n    const focusHandle = useVkAppIntegrationFocus(SIGNUP_FORM);\n    const fields = useApplicantSignupFields();\n    const captcha = useCaptcha();\n\n    const login = isSignupPage ? urlLogin || null : enteredLogonValue || lastLogonValue;\n\n    useEffect(() => {\n        formElement.current &&\n            Analytics.sendHHEventElementShown(formElement.current, {\n                name: 'applicant_authorization',\n                type: 'by_code',\n                isSignupPage,\n                vacancyId: analyticsVacancyId,\n                hhtmSource: analitics.hhtmSource,\n            });\n    }, [isSignupPage, analyticsVacancyId, analitics.hhtmSource]);\n\n    if (fields === null) {\n        return null;\n    }\n\n    const submitForm = async () => {\n        setFetching(true);\n        let data;\n        try {\n            const formData = new FormData(formElement.current);\n            captcha.addCaptchaParams(formData);\n            const response = await fetcher.post('/account/otp_generate', formData);\n            data = response.data;\n        } catch (error) {\n            dispatch(showDefaultError(error));\n            setFetching(false);\n            const err = error.response ? error.response : showDefaultError(error);\n            callbackSubmit?.(error);\n            submitAnalytics({\n                errors: err,\n                isSignupPage,\n                vacancyId: analyticsVacancyId,\n                hhtmSource: analitics.hhtmSource,\n            });\n            return;\n        }\n\n        const errorKey = data.success ? null : data.key;\n        const errorKind = data.recaptcha?.isBot ? 'RECAPTCHA_IS_BOT' : errorKey;\n\n        setFetching(false);\n        callbackSubmit?.(!!errorKey && errorKey !== 'CODE_SEND_BLOCKED');\n        submitAnalytics({\n            errors: errorKind,\n            authType: data.otp?.authType,\n            isSignupPage,\n            vacancyId: analyticsVacancyId,\n            hhtmSource: analitics.hhtmSource,\n        });\n\n        captcha.updateCaptcha(data);\n\n        if (data.otp) {\n            dispatch(otpAction(data.otp));\n        }\n\n        if (data.redirectURL) {\n            dispatch(push(data.redirectURL));\n        }\n\n        if (data.key === '2FA_REQUIRED') {\n            return;\n        }\n\n        if (data.success || data.key === 'CODE_SEND_BLOCKED') {\n            next();\n        } else {\n            setFieldsSignup({ ...fieldsSignup, login: { ...fieldsSignup.login, error: data.key } });\n        }\n    };\n\n    const renderLogin = ({ validate, placeholder } = {}) => (\n        <FinalField\n            component={Control}\n            onFocus={focusHandle}\n            placeholder={placeholder ?? trls[SignInForm.trls.login]}\n            data-qa=\"account-signup-email\"\n            inputMode=\"email\"\n            validate={validate || requiredValidator}\n            inputRef={(isAutofocusEnabled && autofocusRef) || undefined}\n            {...getFieldProps(fields.login, fieldsSignup.login)}\n        />\n    );\n\n    const renderCaptcha = () => (\n        <>\n            <Recaptcha className=\"account-login-recaptcha\" />\n            <Hhcaptcha />\n        </>\n    );\n\n    const renderSubmitButton = (trl, additionalProps = {}) => (\n        <Submit text={trl} isFetching={isFetching} scale={ButtonScale.Large} {...additionalProps} />\n    );\n\n    return (\n        <FinalForm\n            onSubmit={submitForm}\n            initialValues={{\n                login: initialFields.login || login,\n                vacancyId,\n                favoriteVacancyId,\n            }}\n            render={({ handleSubmit, form }) => (\n                <VKAppListener form={form} fields={formFields}>\n                    <Form\n                        data-qa={classnames('account-signup', { [dataQaModifier]: dataQaModifier })}\n                        onSubmit={handleSubmit}\n                        ref={formElement}\n                        method=\"post\"\n                        action=\"/account/otp_generate\"\n                    >\n                        <input type=\"hidden\" name=\"backurl\" value={backurl} />\n                        <input type=\"hidden\" name=\"isSignupPage\" value={isSignupPage} />\n                        {metaRole && <input type=\"hidden\" name=\"role\" value={metaRole} />}\n                        {vacancyId && <input type=\"hidden\" name=\"vacancyId\" value={vacancyId} />}\n                        {favoriteVacancyId && (\n                            <input type=\"hidden\" name=\"favoriteVacancyId\" value={favoriteVacancyId} />\n                        )}\n                        {render({\n                            renderLogin,\n                            renderSubmitButton,\n                            renderCaptcha,\n                            isFetching,\n                        })}\n                    </Form>\n                </VKAppListener>\n            )}\n        />\n    );\n};\n\nSignInForm.trls = {\n    login: 'login.placeholder',\n};\n\nSignInForm.propTypes = {\n    backurl: PropTypes.string,\n    next: PropTypes.func,\n    render: PropTypes.func.isRequired,\n    trls: PropTypes.object,\n    callbackSubmit: PropTypes.func,\n    isSignupPage: PropTypes.bool,\n    isAutofocusEnabled: PropTypes.bool,\n    dataQaModifier: PropTypes.string,\n};\n\nSignInForm.defaultProps = {\n    callbackSubmit: () => {},\n};\n\nexport default translation(SignInForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"input-wrapper--MsbMQZmxztEEAQUgFoBZ\",\"buttonWrapper\":\"button-wrapper--PjrvIzmln4NVL0bNk5A9\",\"agreement\":\"agreement--IwU4MP0KrfQPAvToHSwq\"};","// tempexp_27495_file\nimport Text, { TextSize, TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { useSignupTrlsContextContext } from 'lux/components/SignupModal/contexts/SignupTrls';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AgreementText from 'lux/components/SignupModal/Form/steps/sign-in/AgreementText';\nimport SignInFormStep from 'lux/components/SignupModal/Form/steps/sign-in/SignInForm';\n\nimport styles from './sign-in-step.less';\n\nconst TrlKeys = {\n    header: 'anonymous.signup.modal.signin.title',\n    secondary: 'anonymous.signup.modal.signin.secondary',\n    submit: 'signupForm.create.submit',\n    inputPlaceholder: 'anonymous.signup.modal.signin.input.placeholder',\n};\n\nexport interface SignInStepProps {\n    callbackSubmit?: () => void;\n    next: () => void;\n}\n\nconst SignInStep: TranslatedComponent<SignInStepProps> = ({ next, trls, callbackSubmit }) => {\n    const backurl = useSelector(({ authUrl }) => authUrl?.backurl);\n    const singupTrls = useSignupTrlsContextContext();\n\n    return (\n        <>\n            <SignInFormStep\n                isAutofocusEnabled={false}\n                backurl={backurl}\n                next={next}\n                callbackSubmit={callbackSubmit}\n                render={({ renderLogin, renderSubmitButton, renderCaptcha }) => (\n                    <div>\n                        <Text size={TextSize.Large} strong>\n                            {singupTrls?.signin?.header || trls[TrlKeys.header]}\n                        </Text>\n                        <VSpacing base={1} />\n                        <Text size={TextSize.Medium} importance={TextImportance.Secondary}>\n                            {trls[TrlKeys.secondary]}\n                            <VSpacing base={4} />\n                        </Text>\n\n                        <div className={styles.inputWrapper}>\n                            {renderLogin({ placeholder: trls[TrlKeys.inputPlaceholder] })}\n                        </div>\n                        <VSpacing base={6} xs={1} />\n                        <div className={styles.buttonWrapper}>\n                            {renderSubmitButton(trls[TrlKeys.submit], {\n                                scale: undefined,\n                            })}\n                        </div>\n                        {renderCaptcha()}\n                        <VSpacing base={6} />\n                        <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                            <div className={styles.agreement}>\n                                <AgreementText />\n                            </div>\n                        </Text>\n                    </div>\n                )}\n            />\n        </>\n    );\n};\n\nexport default translation(SignInStep);\n","// tempexp_27495_file\nimport { useState, useRef, useEffect } from 'react';\nimport { Field as FinalField, Form as FinalForm } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { ButtonScale } from 'bloko/blocks/button';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport AccountDeleteInactive from 'lux/components/AccountDeleteInactive';\nimport AccountDeleteInactiveSelect, { DELETE_INACTIVE_TIME_DEFAULT } from 'lux/components/AccountDeleteInactive/Select';\nimport AdvertisementAgreementCheckbox from 'lux/components/AdvertisementAgreement/Checkbox';\nimport AdvertisementSubscriptionApplicant from 'lux/components/AdvertisementSubscription/AdvertisementSubscriptionApplicant';\nimport Control from 'lux/components/ApplicantSignInSignUpFlow/Control';\nimport { getFieldProps, loginBy } from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\nimport Submit from 'lux/components/ApplicantSignInSignUpFlow/Submit';\nimport VKAppListener from 'lux/components/ApplicantSignInSignUpFlow/VKAppListener';\nimport Form from 'lux/components/Form';\nimport { useSignupAnalyticsContext } from 'lux/components/SignupModal/contexts/SignupAnalytics';\nimport translation from 'lux/components/translation';\nimport useApplicantSignupFields from 'lux/hooks/useApplicantSignupFields';\nimport useAutofocus from 'lux/hooks/useAutofocus';\nimport { useDV360Analytics } from 'lux/hooks/useDV360Analytics';\nimport useFingerprints from 'lux/hooks/useFingerprints';\nimport { createUser } from 'lux/hooks/useOTPSignupFlow';\nimport usePostponedVacancy from 'lux/hooks/usePostponedVacancy';\nimport useVkAppIntegrationFocus from 'lux/hooks/useVkAppIntegrationFocus';\nimport { SIGNUP_FORM } from 'lux/hooks/useVkAppIntegrationReady';\nimport formatAnalyticErrors from 'lux/modules/analytics/formatAnalyticErrors';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst mapErrors = (errors) =>\n    errors.reduce((result, { key, description, field, error }) => {\n        result[key || field] = {\n            error: description || error,\n        };\n        return result;\n    }, {});\n\nconst SignUpForm = ({ trls, render, code, password, isSignupPage, isSignupMain, onSignup }) => {\n    const analitics = useSignupAnalyticsContext();\n    const { login, firstName, lastName, authType } = useSelector(({ otp }) => otp);\n    const dispatch = useDispatch();\n    const fields = useApplicantSignupFields();\n    const [fieldsSignup, setFieldsSignup] = useState({});\n    const formElement = useRef();\n    const [isFetching, setFetching] = useState(false);\n    const currentVacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const { postponedVacancy, postponedVacancyInFavorites } = usePostponedVacancy();\n    const postponedVacancyId = postponedVacancy?.vacancyId;\n    const vacancyId = currentVacancyId || (postponedVacancyInFavorites ? null : postponedVacancyId);\n    const focusHandle = useVkAppIntegrationFocus(SIGNUP_FORM);\n    const autofocusRef = useAutofocus();\n    const vrResponseFormSubmitted = useRef(false);\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n    const vrFingerPrints = useSelector(({ vrSignupLogin }) => vrSignupLogin.fingerprints);\n    const fingerprints = useFingerprints('applicant');\n    const sendDV360Analytics = useDV360Analytics();\n    const analyticsVacancyId = vacancyId ?? postponedVacancyId;\n\n    useEffect(() => {\n        Analytics.sendHHEvent('element_shown', {\n            elementName: `enter_full_name`,\n            vacancyId: analyticsVacancyId,\n            authType: loginBy[authType] || 'unknown',\n            isSignupPage,\n            hhtmSource: analitics.hhtmSource,\n        });\n    }, [analyticsVacancyId, login, isSignupPage, authType, analitics]);\n\n    const hideErrors = () => {\n        setFieldsSignup(\n            mapErrors([\n                { key: 'firstName', error: null },\n                { key: 'lastName', error: null },\n            ])\n        );\n    };\n\n    const sendAnalytics = (error) => {\n        Analytics.sendHHEvent('form_submit', {\n            formName: 'enter_full_name',\n            vacancyId: analyticsVacancyId,\n            authType: loginBy[authType] || 'unknown',\n            errors: formatAnalyticErrors('full_name', error?.response?.data?.errors, ['key', 'description']),\n            isSignupPage,\n            hhtmSource: analitics.hhtmSource,\n        });\n    };\n\n    const submitForm = async (values) => {\n        setFetching(true);\n        const props = {\n            ...values,\n            ...(vrResponseHash ? vrFingerPrints : fingerprints),\n            firstName: values.firstName || '',\n            lastName: values.lastName || '',\n            isSignupPage,\n            isSignupMain,\n            postponed: true,\n        };\n        try {\n            await createUser(props);\n        } catch (error) {\n            setFetching(false);\n            if (Array.isArray(error?.response?.data?.errors)) {\n                setFieldsSignup(mapErrors(error.response.data.errors));\n                sendAnalytics(error);\n                return;\n            }\n\n            dispatch(showDefaultError(error));\n            return;\n        }\n\n        sendAnalytics(null);\n        sendDV360Analytics('APPLICANT_REGISTERED');\n\n        hideErrors();\n        setFetching(false);\n        onSignup?.();\n    };\n    const vrFormSubmit = useRef(() =>\n        submitForm({\n            login,\n            code,\n        })\n    );\n\n    useEffect(() => {\n        if (vrResponseHash && !vrResponseFormSubmitted.current) {\n            vrResponseFormSubmitted.current = true;\n            vrFormSubmit.current();\n        }\n    }, [vrResponseHash]);\n\n    if (vrResponseHash) {\n        return <Loading scale={LoadingScale.Small} />;\n    }\n\n    const renderFirstNameField = () => {\n        return (\n            <FinalField\n                component={Control}\n                onFocus={focusHandle}\n                placeholder={trls[SignUpForm.trls.firstName]}\n                data-qa=\"account-signup-firstname\"\n                capitalize\n                inputRef={autofocusRef}\n                {...getFieldProps(fields.firstName, fieldsSignup.firstName)}\n            />\n        );\n    };\n\n    const renderLastNameField = () => {\n        return (\n            <FinalField\n                component={Control}\n                onFocus={focusHandle}\n                placeholder={trls[SignUpForm.trls.lastName]}\n                data-qa=\"account-signup-lastname\"\n                capitalize\n                {...getFieldProps(fields.lastName, fieldsSignup.lastName)}\n            />\n        );\n    };\n\n    const renderAccountDeleteInactive = () => {\n        return (\n            <AccountDeleteInactive\n                renderSelect={() => (\n                    <FinalField\n                        name=\"deleteInactiveTime\"\n                        type=\"select\"\n                        initialValue={DELETE_INACTIVE_TIME_DEFAULT}\n                        render={({ input }) => {\n                            return <AccountDeleteInactiveSelect {...input} />;\n                        }}\n                    />\n                )}\n                spacingAfter={<VSpacing base={4} />}\n            />\n        );\n    };\n\n    const renderSubmit = ({ isLarge } = {}) => {\n        return (\n            <Submit\n                text={trls[SignUpForm.trls.submit]}\n                isFetching={isFetching}\n                dataQa=\"account-signup-submit-applicant-info\"\n                scale={isLarge ? ButtonScale.Large : undefined}\n            />\n        );\n    };\n\n    const renderAdvertisementAgreement = () => {\n        return (\n            <FinalField\n                name=\"agreementAdv\"\n                type=\"checkbox\"\n                initialValue={false}\n                render={({ input }) => {\n                    return <AdvertisementAgreementCheckbox {...input} />;\n                }}\n            />\n        );\n    };\n\n    const renderAdvertisementSubscriptionApplicant = () => {\n        return (\n            <FinalField\n                name=\"agreementAdv\"\n                type=\"checkbox\"\n                initialValue={false}\n                render={AdvertisementSubscriptionApplicant}\n            />\n        );\n    };\n\n    return (\n        <FinalForm\n            onSubmit={submitForm}\n            initialValues={{\n                firstName,\n                lastName,\n                login,\n                code,\n                password,\n            }}\n            render={({ handleSubmit, form }) => (\n                <VKAppListener form={form}>\n                    <Form\n                        action=\"/account/signup\"\n                        method=\"POST\"\n                        data-qa=\"account-signup\"\n                        onSubmit={(event) => {\n                            event.preventDefault();\n                            handleSubmit(event);\n                        }}\n                        ref={formElement}\n                    >\n                        {render({\n                            renderFirstNameField,\n                            renderLastNameField,\n                            renderAccountDeleteInactive,\n                            renderSubmit,\n                            renderAdvertisementAgreement,\n                            renderAdvertisementSubscriptionApplicant,\n                        })}\n                    </Form>\n                </VKAppListener>\n            )}\n        />\n    );\n};\n\nSignUpForm.trls = {\n    header: 'otp.confirm.header.signup',\n    firstName: 'newApplicant.firstName',\n    lastName: 'newApplicant.lastName',\n    submit: 'signupForm.create.submit',\n};\n\nSignUpForm.propTypes = {\n    trls: PropTypes.object,\n    render: PropTypes.func,\n    onSignup: PropTypes.func,\n    afterSubmit: PropTypes.func,\n    code: PropTypes.string,\n    password: PropTypes.string,\n    backurl: PropTypes.string,\n    isSignupPage: PropTypes.bool,\n    isSignupMain: PropTypes.bool,\n    errorPageLogin: PropTypes.bool,\n};\n\nexport default translation(SignUpForm);\n","// tempexp_27495_file\nimport Column from 'bloko/blocks/column';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport useShowAdvertisementAgreement from 'lux/components/AdvertisementAgreement/useShowAdvertisementAgreement';\nimport translation from 'lux/components/translation';\n\nimport SignUpForm, { SignUpSignFormBaseProps } from 'lux/components/SignupModal/Form/steps/sign-up/SignUpForm';\n\nconst TrlKeys = {\n    header1: 'signUpStep.header.1',\n    header2: 'signUpStep.header.2',\n};\n\nexport type SignUpStepProps = SignUpSignFormBaseProps;\n\nconst SignUpStep: TranslatedComponent<SignUpSignFormBaseProps> = ({ trls, ...formProps }) => {\n    const showAdvertisementAgreement = useShowAdvertisementAgreement();\n\n    return (\n        <SignUpForm\n            render={({\n                renderFirstNameField,\n                renderLastNameField,\n                renderAccountDeleteInactive,\n                renderSubmit,\n                renderAdvertisementAgreement,\n            }) => {\n                return (\n                    <>\n                        <div>\n                            <Text size={TextSize.Large} strong>\n                                {trls[TrlKeys.header1]}\n                                <br />\n                                {trls[TrlKeys.header2]}\n                            </Text>\n                            <VSpacing base={4} />\n                            {renderFirstNameField()}\n                            <VSpacing base={4} />\n                            {renderLastNameField()}\n                            <VSpacing base={6} />\n                            {renderAccountDeleteInactive()}\n                            {renderSubmit()}\n                            {showAdvertisementAgreement && (\n                                <div>\n                                    <Column l=\"5\" m=\"5\" s=\"5\" xs=\"4\" container>\n                                        <VSpacing base={5} />\n                                        {renderAdvertisementAgreement()}\n                                    </Column>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                );\n            }}\n            isSignupMain\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(SignUpStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"form-container--fL7Zs4V92uiS6duL6NSO\",\"inputWrapper\":\"input-wrapper--DNMUDB2ztyO46E0mDBQG\",\"buttonWrapper\":\"button-wrapper--eOgvZj7aHpmu536Bmed5\"};","// tempexp_27495_file\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport VerificationForm, { VerificationFormBaseProps } from 'lux/components/Verification/VerificationForm';\nimport translation from 'lux/components/translation';\n\nimport styles from './verification-step.less';\n\nconst TrlKeys = {\n    header: 'signUpForm.verification.header',\n    phone: {\n        sent: 'signUpForm.verification.codeSent.phone',\n        description1: 'signUpForm.verification.codeSentDescription.1.phone',\n        description2: 'signUpForm.verification.codeSentDescription.2.phone',\n    },\n    email: {\n        sent: 'signUpForm.verification.codeSent.email',\n        description: 'otp.confirm.sub.header',\n    },\n};\n\nexport interface VerificationStepProps extends VerificationFormBaseProps {\n    onCancel?: () => void;\n    cancelText?: string;\n    codePlaceholder?: string;\n    errorPageLogin?: boolean;\n}\n\nconst VerificationStep: TranslatedComponent<VerificationStepProps> = ({\n    trls,\n    errorPageLogin,\n    codePlaceholder,\n    onCancel,\n    cancelText,\n    ...formProps\n}) => {\n    const { authType, login } = formProps;\n\n    return (\n        <VerificationForm\n            render={({ renderInput, renderCodeError, renderCodeSender, renderSubmit }) => {\n                return (\n                    <div>\n                        <>\n                            <Text size={TextSize.Large} strong>\n                                {trls[TrlKeys.header]}\n                            </Text>\n                            <VSpacing base={1} />\n                            <Text size={TextSize.Medium} importance={TextImportance.Secondary}>\n                                <p>\n                                    {formatToReactComponent(\n                                        trls[authType === 'EMAIL' ? TrlKeys.email.sent : TrlKeys.phone.sent],\n                                        {\n                                            '{0}': <strong>{login}</strong>,\n                                        }\n                                    )}\n                                </p>\n                                <VSpacing base={4} />\n                                {authType === 'EMAIL' ? (\n                                    <p>{trls[TrlKeys.email.description]}</p>\n                                ) : (\n                                    <>\n                                        <p>{trls[TrlKeys.phone.description1]}</p>\n                                        <p>{trls[TrlKeys.phone.description2]}</p>\n                                    </>\n                                )}\n                            </Text>\n                        </>\n                        <VSpacing base={4} />\n                        <div className={styles.formContainer}>\n                            <div className={styles.inputWrapper}>\n                                {renderInput({\n                                    placeholder: codePlaceholder,\n                                    isAutofocus: true,\n                                })}\n                            </div>\n                            {renderCodeError()}\n                            <VSpacing base={6} />\n                            <div className={styles.buttonWrapper}>{renderSubmit({ isStretched: true })}</div>\n                        </div>\n                        <div>\n                            <VSpacing base={3} />\n                            <Text importance={TextImportance.Tertiary}>{renderCodeSender()}</Text>\n                        </div>\n                    </div>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(VerificationStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--usrRioQk6mimfCTPJvi5\"};","// tempexp_27495_file\nimport { FC } from 'react';\n\nimport Modal from 'bloko/blocks/modal';\n\nimport ApplicantSignInSignUpFlow from 'lux/components/SignupModal/ApplicantSignInSignUpFlow';\n\nimport SignInStep from 'lux/components/SignupModal/Form/steps/sign-in/SignInStep';\nimport SignUpStep from 'lux/components/SignupModal/Form/steps/sign-up/SignUpStep';\nimport VerificationStep from 'lux/components/SignupModal/Form/steps/verification/VerificationStep';\n\nimport styles from './sign-up-modal.less';\n\nconst SignupModal: FC<{ opened: boolean; onClose: () => void; onSignup: () => void }> = ({\n    opened,\n    onClose,\n    onSignup,\n}) => {\n    return (\n        <div>\n            <Modal visible={opened} onClose={onClose} useBottomSheet>\n                <div className={styles.wrapper}>\n                    <ApplicantSignInSignUpFlow\n                        SignIn={SignInStep}\n                        SignUp={SignUpStep}\n                        Verification={VerificationStep}\n                        onSignup={onSignup}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default SignupModal;\n","import { createContext, useContext, FC, PropsWithChildren, useMemo } from 'react';\n\ntype SignupAnalyticsContextType = { hhtmSource: string };\n\nconst SignupAnalyticsContext = createContext<SignupAnalyticsContextType>({ hhtmSource: '' });\n\nexport const useSignupAnalyticsContext = (): SignupAnalyticsContextType => useContext(SignupAnalyticsContext);\n\nexport const SignupAnalyticsProvider: FC<PropsWithChildren<SignupAnalyticsContextType>> = ({\n    children,\n    hhtmSource,\n}) => {\n    const value = useMemo(() => ({ hhtmSource }), [hhtmSource]);\n    return <SignupAnalyticsContext.Provider value={value}>{children}</SignupAnalyticsContext.Provider>;\n};\n","import { createContext, useContext, FC, PropsWithChildren, useMemo } from 'react';\n\ntype SignupTrlsContextType = {\n    signin: {\n        header?: string;\n    };\n};\n\nconst SignupTrlsContext = createContext<SignupTrlsContextType>({ signin: {} });\n\nexport const useSignupTrlsContextContext = (): SignupTrlsContextType => useContext(SignupTrlsContext);\n\nexport const SignupTrlsContextProvider: FC<PropsWithChildren<SignupTrlsContextType>> = ({ children, signin }) => {\n    const value = useMemo(() => ({ signin }), [signin]);\n    return <SignupTrlsContext.Provider value={value}>{children}</SignupTrlsContext.Provider>;\n};\n"],"names":["VerificationFormStep","Verification","DefaultVerification","isSignupPage","next","onSignup","props","analitics","useSignupAnalyticsContext","dispatch","useDispatch","login","authType","useSelector","otp","vacancyId","postponedActions","vacancy","onSubmitAnalytics","errorCode","Analytics","formName","loginBy","errors","formatAnalyticErrors","hhtmSource","onShownAnalytics","elementRef","current","elementName","onSubmit","async","setIsSending","setVerification","code","response","fetcher","username","remember","accountType","error","data","key","isMultiAccountCreation","push","employerLoginURL","loginURL","showDefaultError","success","verification","propTypes","trls","PropTypes","translation","SIGN_IN","SIGN_UP","VERIFICATION","MULTIACCOUNT_GROUPING","ApplicantSignInSignUpFlow","SignIn","MultiAccountGrouping","DefaultMultiAccountGrouping","SignUp","DefaultSignUp","onNextStep","isExpanded","onClickByPassword","errorPageLogin","vrResponseHash","vrSignupLogin","step","setStep","useState","setCode","password","setPassword","signUpRef","useRef","isIframeView","state","router","location","query","iframe_view","Wrapper","Column","Fragment","wrapperProps","l","m","s","xs","container","useEffect","querySelectorAll","forEach","e","classList","remove","ref","cancel","TrlKeys","AgreementText","agreementURL","useSelectorNonNullable","authUrl","isLightPage","personalDataRussiaURL","handleClickForVKminiApp","event","preventDefault","window","href","currentTarget","renderLink","text","dataQa","to","Link","onClick","className","classnames","formatToReactComponent","otpAction","makeSetStoreField","formFields","getFieldProps","name","conditions","value","maxLength","parts","EMAIL","SMS","requiredValidator","trim","undefined","submitAnalytics","type","SignInForm","backurl","render","callbackSubmit","isAutofocusEnabled","dataQaModifier","isFetching","setFetching","fieldsSignup","setFieldsSignup","formElement","initialFields","useInitialFields","currentVacancyId","vacancyView","postponedVacancy","postponedVacancyInFavorites","usePostponedVacancy","favoriteVacancyId","enteredLogonValue","lastLogonValue","metaRole","prefilledLogin","urlLogin","analyticsVacancyId","autofocusRef","useAutofocus","focusHandle","useVkAppIntegrationFocus","SIGNUP_FORM","fields","useApplicantSignupFields","captcha","useCaptcha","renderLogin","validate","placeholder","component","Control","onFocus","inputMode","inputRef","renderCaptcha","Recaptcha","Hhcaptcha","renderSubmitButton","trl","additionalProps","Submit","scale","ButtonScale","formData","FormData","addCaptchaParams","err","errorKey","errorKind","recaptcha","isBot","updateCaptcha","redirectURL","initialValues","handleSubmit","form","VKAppListener","Form","method","action","defaultProps","SignInStep","singupTrls","useSignupTrlsContextContext","size","TextSize","strong","signin","header","base","importance","TextImportance","styles","mapErrors","reduce","result","description","field","SignUpForm","isSignupMain","firstName","lastName","postponedVacancyId","vrResponseFormSubmitted","vrFingerPrints","fingerprints","useFingerprints","sendDV360Analytics","useDV360Analytics","sendAnalytics","submitForm","values","postponed","createUser","Array","isArray","vrFormSubmit","LoadingScale","renderFirstNameField","capitalize","renderLastNameField","renderAccountDeleteInactive","AccountDeleteInactive","renderSelect","initialValue","DELETE_INACTIVE_TIME_DEFAULT","input","spacingAfter","renderSubmit","isLarge","submit","renderAdvertisementAgreement","renderAdvertisementSubscriptionApplicant","AdvertisementSubscriptionApplicant","afterSubmit","SignUpStep","formProps","showAdvertisementAgreement","useShowAdvertisementAgreement","sent","description1","description2","VerificationStep","codePlaceholder","onCancel","cancelText","VerificationForm","renderInput","renderCodeError","renderCodeSender","isAutofocus","isStretched","SignupModal","opened","onClose","visible","useBottomSheet","SignupAnalyticsContext","createContext","useContext","SignupAnalyticsProvider","children","useMemo","Provider","SignupTrlsContext","SignupTrlsContextProvider"],"sourceRoot":""}