{"version":3,"file":"ApplicantSuitableVacancies.392407bfbfe651173dc6.js","mappings":"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","sources":["xhh/./webapp-static/js/HH/LoadBannerOnVisibleModule.js","xhh/./webapp-static/js/Utils/VisibilityWatcher.js","xhh/./webapp-static/lux/components/ApplicantServices/common.ts","xhh/./webapp-static/lux/components/Banner/index.tsx","xhh/./webapp-static/lux/components/Banner/AdsExternalBanner.tsx","xhh/./webapp-static/lux/components/Breadcrumbs/Breadcrumb.tsx","xhh/./webapp-static/lux/components/Breadcrumbs/BreadcrumbsDivider.tsx","xhh/./webapp-static/lux/components/Breadcrumbs/index.tsx","xhh/./webapp-static/lux/components/PageErrorWrapper/index.tsx","xhh/./webapp-static/lux/components/PageHead/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/DefaultLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/EmptyLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/HeaderLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/SideBarLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/index.tsx","xhh/./webapp-static/lux/components/RelatedVacancies/Title.jsx","xhh/./webapp-static/lux/components/VacancySerpBanner/index.jsx","xhh/./webapp-static/lux/components/RelatedVacancies/index.jsx","xhh/./webapp-static/lux/components/RowContent/index.tsx","xhh/./webapp-static/lux/hooks/useIsClient.ts","xhh/./webapp-static/lux/models/banners.ts","xhh/./webapp-static/lux/pages/ApplicantSuitableVacancies/components/ApplicantSuitableVacanciesSuggest.jsx","xhh/./webapp-static/lux/pages/ApplicantSuitableVacancies/components/index.tsx","xhh/./webapp-static/lux/pages/ApplicantSuitableVacancies/ApplicantSuitableVacancies.route.jsx"],"sourcesContent":["import Banners from 'HHC/Banners';\nimport visibilityWatcher from 'Utils/VisibilityWatcher';\n/**\n * Подгружает баннер в ноду компонента, при видимости этой ноды.\n *\n * @param {String|Number}   id              ID баннера\n * @param {Array}           ids             ID баннеров, имеет приоритет перед id\n * @param {String}          [templateName]  Имя шаблона для баннера, если имя шаблона не указано, то баннер будет\n *                                          добавлен в текущую ноду без применения шаблонов\n *\n * @name HH/LoadBannerOnVisibleModule\n * @constructor\n */\nexport default (element, params) => {\n    window.requestIdleCallback(() => {\n        visibilityWatcher.init({\n            element,\n            onVisible() {\n                const { ids, id, templateName, adfoxParams } = params;\n                let banners = [id];\n                if (ids) {\n                    banners = ids;\n                }\n                Banners.create(element, banners, templateName, adfoxParams);\n            },\n        });\n    });\n};\n","/**\n * Утилита следит за видимостью элемента на странице, и запускает калбеки при изменении состояния. <br>\n *\n * @type {Object}\n * @exports Utils/VisibilityWatcher\n */\nconst visibilityWatcher = {\n    /**\n     * Инициализирует вотчер на элементе.\n     *\n     * @param {Object}   options\n     * @param {Element}  options.element   DOM элемент за которым наблюдаем\n     * @param {Function} options.onVisible Функция, которая будет вызвана, когда элемент отобразится\n     *\n     * @member\n     * @method\n     */\n    init(options) {\n        let visible = false;\n        const element = options.element;\n        const checkVisible = () => {\n            if (visible) {\n                return;\n            }\n            if (element.offsetWidth || element.offsetHeight || element.getClientRects().length) {\n                visible = true;\n                options.onVisible();\n                window.removeEventListener('resize', checkVisible);\n                window.removeEventListener('element-displayed', checkVisible);\n                element.dataset.listenersSetted = 'false';\n            } else {\n                visible = false;\n            }\n        };\n        if (options.element.dataset.listenersSetted !== 'true') {\n            window.addEventListener('resize', checkVisible);\n            window.addEventListener('element-displayed', checkVisible);\n            options.element.dataset.listenersSetted = 'true';\n        }\n        checkVisible();\n    },\n};\nexport default visibilityWatcher;\n","export enum ApplicantServices {\n    CompleteResume = 'COMPLETE_RESUME',\n    CompleteResumeConsultOnly = 'COMPLETE_RESUME_CONSULT_ONLY',\n    CompleteResumeInterviewPractice = 'COMPLETE_RESUME_INTERVIEW_PRACTICE',\n    CareerGuidance = 'CAREER_GUIDANCE',\n    ResumeRenewal = 'RESUME_RENEWAL',\n    ResumeMark = 'RESUME_MARK',\n    ResumeFastVacancies = 'RESUME_FAST_VACANCIES',\n    TargetAgencies = 'TARGET_AGENCIES',\n    TargetEmployer = 'TARGET_EMPLOYER',\n    VacancyResponsesSummary = 'VACANCY_RESPONSES_SUMMARY',\n}\n","import { Component, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, DefaultRootState } from 'react-redux';\n\nimport LoadBannerOnVisibleSignature from 'HH/LoadBannerOnVisibleModule.d';\nimport { YandexAdfoxBannerProps } from 'lux/models/banners/YandexAdfoxBanner.types';\nimport { UserTargeting } from 'lux/models/userTargeting';\n\nlet loadBannerOnVisible: typeof LoadBannerOnVisibleSignature | undefined;\n\nif (!process.env.LUX_SERVER) {\n    /* eslint @typescript-eslint/no-var-requires: \"off\" */\n    /* eslint @typescript-eslint/no-unsafe-member-access: \"off\" */\n    loadBannerOnVisible = require('HH/LoadBannerOnVisibleModule').default as typeof LoadBannerOnVisibleSignature;\n}\n\ninterface BannerProps {\n    /** Индификатор баннера */\n    id: string;\n    /** Название шаблона для баннера */\n    templateName?: string;\n    /** Нода в которую кладется баннер */\n    children?: ReactNode;\n    /** Флаг отмены отправки запросов в баннерную систему */\n    cancelFetchBanners?: boolean;\n    /** Строка текущих get параметров URL */\n    search?: string;\n    /** Строка текущего URL без параметров */\n    pathname?: string;\n    /** Параметры для Yandex adfox баннеров */\n    adfoxParams?: Omit<YandexAdfoxBannerProps, 'id'>;\n    /** Строит пустой див вместо баннера **/\n    isEmpty?: boolean;\n    userTargeting?: UserTargeting;\n}\n\nclass Banner extends Component<BannerProps> {\n    element: HTMLElement | null = null;\n    static defaultProps = {\n        templateName: 'HHC-Banners-Place-Template',\n    };\n\n    componentDidMount() {\n        this.element = this.props.isEmpty ? null : (ReactDOM.findDOMNode(this) as HTMLElement);\n        if (this.element) {\n            this.element.addEventListener('HH-Banners-Init', this.setAutoHeight.bind(this));\n            this.initBanners();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.element) {\n            this.initBanners();\n        }\n    }\n\n    componentWillUnmount() {\n        this.element?.removeEventListener('HH-Banners-Init', this.setAutoHeight);\n    }\n\n    shouldComponentUpdate(nextProps: BannerProps) {\n        if (nextProps.cancelFetchBanners) {\n            return false;\n        }\n        return nextProps.search !== this.props.search || nextProps.pathname !== this.props.pathname;\n    }\n\n    initBanners() {\n        const { id, templateName, adfoxParams, userTargeting } = this.props;\n        if (this.element) {\n            this.element.style.height = `${this.element.clientHeight}px`;\n            this.element.innerHTML = '';\n        }\n        let adfoxParamsProperty;\n        if (adfoxParams) {\n            adfoxParamsProperty = {\n                ...adfoxParams,\n                type: 'adfox',\n                bannerId: id,\n                place: id,\n                bannerCommonTargeting: userTargeting,\n                bannerAdTargeting: adfoxParams.bannerAdTargeting || {},\n            };\n        }\n        const bannerParams = {\n            id,\n            templateName,\n            adfoxParams: adfoxParamsProperty,\n        };\n\n        loadBannerOnVisible?.(this.element, bannerParams);\n    }\n\n    setAutoHeight = (): void => {\n        if (this.element) {\n            this.element.style.height = 'auto';\n        }\n    };\n\n    render() {\n        return this.props.children || <div />;\n    }\n}\n\nexport default connect((state: DefaultRootState) => ({\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    cancelFetchBanners: state.cancelFetchBanners,\n    userTargeting: state.userTargeting,\n}))(Banner);\n","import type { FC } from 'react';\n\nimport { isExternalBannersRestricted } from 'HHC/Banners';\nimport { useIsBelarus } from 'lux/hooks/useCountries';\nimport { AdsExternalBannerProps } from 'lux/models/banners/AdsExternalBanner.types';\n\nimport Banner from 'lux/components/Banner';\n\nconst AdsExternalBanner: FC<AdsExternalBannerProps> = ({ id, cId, pp, p2, ...adfoxParams }) => {\n    const enableAdfox = pp && p2;\n    const shouldHideExternalBanners = isExternalBannersRestricted(useIsBelarus());\n\n    if (!enableAdfox || shouldHideExternalBanners) {\n        return <Banner key={cId} id={id} isEmpty={shouldHideExternalBanners} />;\n    }\n\n    return (\n        <Banner\n            key={cId}\n            id={id}\n            templateName=\"\"\n            adfoxParams={{\n                pp,\n                p2,\n                cId,\n                ...adfoxParams,\n            }}\n        >\n            <div\n                id={cId}\n                className={`HHC-Banner-${id} HH-Banner-Adfox banner-place banner-place_${id} banner-place-adfox banner-place-adfox_${id}`}\n                data-banner-id={id}\n                data-empty-class=\"banner-place_hide\"\n                data-loaded-class=\"banner-place_show\"\n            />\n        </Banner>\n    );\n};\n\nexport default AdsExternalBanner;\n","import { ReactNode, FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Text, { TextImportance } from 'bloko/blocks/text';\n\ninterface BreadcrumbProps {\n    children: ReactNode;\n    to: string;\n    className?: string;\n    isSeoLink?: boolean;\n    hideOverflow?: boolean;\n}\n\nconst Breadcrumb: FC<BreadcrumbProps> = ({ children, to, className, isSeoLink = false, hideOverflow = false }) => (\n    <Link\n        to={to}\n        isSeoLink={isSeoLink}\n        className={classnames('breadcrumbs__item', className, { 'breadcrumbs__item_hide-overflow': hideOverflow })}\n    >\n        <Text importance={TextImportance.Tertiary} Element=\"span\">\n            {children}\n        </Text>\n    </Link>\n);\n\nexport default Breadcrumb;\n","import { FC } from 'react';\n\nimport Icon, { IconColor, IconKind, IconScale, IconView } from 'bloko/blocks/icon';\n\nconst BreadcrumbsDivider: FC = () => (\n    <div className=\"breadcrumbs__divider\">\n        <Icon kind={IconKind.Right} view={IconView.Arrow} initial={IconColor.Gray30} scale={IconScale.Small} />\n    </div>\n);\n\nexport default BreadcrumbsDivider;\n","import { FC, ComponentPropsWithoutRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Breadcrumb from 'lux/components/Breadcrumbs/Breadcrumb';\nimport BreadcrumbsDivider from 'lux/components/Breadcrumbs/BreadcrumbsDivider';\n\nconst Breadcrumbs: FC<ComponentPropsWithoutRef<'div'> & PropsWithChildren> = ({ children, className, ...props }) => (\n    <div {...props} className={classnames('breadcrumbs', className)}>\n        {children}\n    </div>\n);\n\nexport { Breadcrumb, BreadcrumbsDivider };\n\nexport default Breadcrumbs;\n","import Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { PageHead, PageTitle } from 'lux/components/PageHead';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    'error.400': 'error.400.message',\n    'error.403': 'error.403.message',\n    'error.404': 'error.404.message',\n    'error.500': 'error.500.tryagain',\n    'error.599': 'error.599.tryagain',\n    'error.default': 'error.500.tryagain',\n};\n\nconst PageErrorWrapper: TranslatedComponent = ({ children, trls }) => {\n    const errorCode = useSelector(({ errorCode }) => errorCode);\n    if (errorCode) {\n        const trlErrorCode = `error.${errorCode}`;\n        const trlCode = trlErrorCode in TrlKeys ? trlErrorCode : 'error.default';\n        const trl = trls[TrlKeys[trlCode as keyof typeof TrlKeys]];\n        return (\n            <>\n                <PageHead>\n                    <PageTitle>{trl}</PageTitle>\n                </PageHead>\n                <DefaultLayout>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        {trl}\n                    </Column>\n                </DefaultLayout>\n            </>\n        );\n    }\n\n    return <>{children}</>;\n};\n\nexport default translation(PageErrorWrapper);\n","import React, { Fragment } from 'react';\nimport { HeadProvider, Title, Meta, Link } from 'react-head';\n\nconst PageHead: React.FC<React.PropsWithChildren> = ({ children }) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return !process.env.LUX_SERVER ? <HeadProvider>{children}</HeadProvider> : <>{children}</>;\n};\n\ninterface PageDescriptionProps {\n    content: string;\n    openGraphContent?: string;\n}\n\nconst PageDescription: React.FC<PageDescriptionProps & React.PropsWithChildren> = ({ content, openGraphContent }) => {\n    return (\n        <Fragment>\n            <Meta name=\"description\" content={content} />\n            <Meta property=\"og:description\" content={openGraphContent || content} />\n        </Fragment>\n    );\n};\n\ninterface PageKeywordsProps {\n    content: string;\n}\n\nconst PageKeywords: React.FC<PageKeywordsProps & React.PropsWithChildren> = ({ content }) => {\n    return <Meta name=\"keywords\" content={content} />;\n};\n\nexport { PageHead, Title as PageTitle, Meta as PageMeta, PageDescription, PageKeywords, Link as PageLink };\n","import React from 'react';\n\nimport { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport RowContent from 'lux/components/RowContent';\n\ninterface DefaultLayoutProps {\n    /** Сжатый контент */\n    isShrinked?: boolean;\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps & React.PropsWithChildren> = ({ children, isShrinked }) => (\n    <ColumnsWrapper>\n        <RowContent isShrinked={isShrinked}>{children}</RowContent>\n    </ColumnsWrapper>\n);\n\nexport default DefaultLayout;\n","import React from 'react';\n\nconst EmptyLayout: React.FC<React.PropsWithChildren> = ({ children }) => <>{children}</>;\n\nexport default EmptyLayout;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport Gap from 'bloko/blocks/gap';\n\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nconst LightPageLayoutContent =\n    ({\n        error: ErrorComponent,\n        noContentPadding,\n        noBackground,\n    }: LightPageCommonProps): React.FC<React.PropsWithChildren> =>\n    ({ children }) =>\n        (\n            <Gap sTop sBottom mTop mBottom lTop lBottom>\n                {ErrorComponent && <ErrorComponent />}\n                <div\n                    className={classnames('light-page-content', {\n                        'light-page-content_no-padding': noContentPadding,\n                        'light-page-content_no-background': noBackground,\n                    })}\n                >\n                    {children}\n                </div>\n            </Gap>\n        );\n\nexport default LightPageLayoutContent;\n","import { Text, TextTypography, TextStyle, useBreakpoint } from '@hh.ru/magritte-ui';\nimport BlokoText, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport useMagritte from 'lux/hooks/useMagritte';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    copyright: {\n        [TopLevelSite.BY]: 'footer.tutby.copyrights',\n        general: 'index.footer.menuitem.copyright',\n    },\n};\n\ninterface FooterProps {\n    isContrast?: boolean;\n}\n\nconst LightPageLayoutFooter: TranslatedComponent<FooterProps> = ({ trls, isContrast }) => {\n    const isMagritte = useMagritte();\n    const topLevelSite = useSelector((store) => store.topLevelSite);\n    const { isXS } = useBreakpoint();\n\n    const content = (\n        <span suppressHydrationWarning>\n            {format(trls[TrlKeys.copyright[topLevelSite === TopLevelSite.BY ? TopLevelSite.BY : 'general']], {\n                '{0}': new Date().getFullYear().toString(),\n            })}\n        </span>\n    );\n\n    if (isMagritte) {\n        return (\n            <div className=\"light-page-footer\">\n                <div className=\"light-page-footer__copyright\">\n                    <Text\n                        style={isContrast && !isXS ? TextStyle.Contrast : TextStyle.Primary}\n                        typography={TextTypography.Label2Regular}\n                        data-qa=\"copyright\"\n                    >\n                        {content}\n                    </Text>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"light-page-footer\">\n            <div className=\"light-page-footer__copyright\">\n                <BlokoText size={TextSize.Small} data-qa=\"copyright\">\n                    {content}\n                </BlokoText>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(LightPageLayoutFooter);\n","import React from 'react';\n\nimport LightPageLayoutContent from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent';\nimport LightPageLayoutFooter from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter';\nimport LightPageLayoutHeader from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutHeader';\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nexport interface LightPageProps extends LightPageCommonProps {\n    children: React.FC<LightPageChildrenProps>;\n}\n\ninterface LightPageChildrenProps {\n    footer: React.ReactElement;\n    header: React.ReactElement;\n    Content: React.FC<React.PropsWithChildren>;\n}\n\nconst LightPage: React.FC<LightPageProps> = ({ children, noContentPadding, noBackground, promo, error }) => {\n    const Content = React.useMemo(\n        () => LightPageLayoutContent({ noContentPadding, noBackground, error }),\n        [noContentPadding, noBackground, error]\n    );\n\n    return children({\n        header: <LightPageLayoutHeader promo={promo} />,\n        Content,\n        footer: <LightPageLayoutFooter isContrast={!noBackground} />,\n    });\n};\n\nexport default LightPage;\n","import React from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H1 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface HeaderLayoutProps {\n    /** Обвязка содержимого страницы */\n    linkAboveHeader?: { to: string; trl: string };\n    /** Заголовок страницы */\n    title?: string;\n}\n\nconst HeaderLayout: React.FC<HeaderLayoutProps & React.PropsWithChildren> = ({ linkAboveHeader, children, title }) => (\n    <DefaultLayout>\n        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n            {linkAboveHeader && (\n                <BlokoLink disableVisited Element={Link} to={linkAboveHeader.to}>\n                    {linkAboveHeader.trl}\n                </BlokoLink>\n            )}\n            <H1>{title}</H1>\n            <VSpacing base={4} />\n        </Column>\n        {children}\n    </DefaultLayout>\n);\n\nexport default HeaderLayout;\n","import React, { ComponentType } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface SideBarLayoutProps {\n    sidebar: ComponentType;\n}\n\nconst SideBarLayout: React.FC<SideBarLayoutProps & React.PropsWithChildren> = ({\n    children,\n    sidebar: SideBarComponent,\n}) => (\n    <DefaultLayout>\n        <Column xs=\"4\" m=\"8\" l=\"11\" container>\n            {children}\n        </Column>\n        <Column xs=\"4\" m=\"4\" l=\"5\" container>\n            <SideBarComponent />\n        </Column>\n    </DefaultLayout>\n);\n\nexport default SideBarLayout;\n","import { useLayoutEffect } from 'react';\n\nimport PageErrorWrapper from 'lux/components/PageErrorWrapper';\nimport { PageHead, PageTitle, PageMeta, PageDescription, PageKeywords, PageLink } from 'lux/components/PageHead';\n\nimport FullPageLayout from 'lux/components/PageLayout/FullPageLayout';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport EmptyLayout from 'lux/components/PageLayout/Layouts/EmptyLayout';\nimport HeaderLayout from 'lux/components/PageLayout/Layouts/HeaderLayout';\nimport LightPageLayout from 'lux/components/PageLayout/Layouts/LightPageLayout';\nimport SideBarLayout from 'lux/components/PageLayout/Layouts/SideBarLayout';\nimport { PageLayoutWithCustomLayout } from 'lux/components/PageLayout/PageLayout.types';\n\nconst RSS_MIME = 'application/rss+xml';\n\nconst PageLayout: PageLayoutWithCustomLayout = ({\n    children,\n    layout: LayoutComponent = DefaultLayout,\n    errorWrapper: ErrorWrapperComponent = PageErrorWrapper,\n    ogTitle,\n    description,\n    ogDescription,\n    keywords,\n    canonical,\n    rssTitle,\n    rssHref,\n    removeTitle = false,\n    ...layoutProps\n}) => {\n    const { title } = layoutProps;\n\n    useLayoutEffect(() => {\n        if (removeTitle || title) {\n            const titleElement = document.querySelector('.HH-PageLayout-Title');\n            titleElement?.parentNode?.removeChild(titleElement);\n        }\n    }, [removeTitle, title]);\n\n    const content = (\n        <>\n            <PageHead>\n                {title && (\n                    <>\n                        <PageTitle>{title}</PageTitle>\n                        <PageMeta property=\"og:title\" content={ogTitle || title} />\n                    </>\n                )}\n                {description && <PageDescription content={description} openGraphContent={ogDescription} />}\n                {keywords && <PageKeywords content={keywords} />}\n                {canonical && <PageLink rel=\"canonical\" href={canonical} />}\n                {rssHref && (title || rssTitle) && (\n                    <PageLink title={rssTitle || title} type={RSS_MIME} rel=\"alternate\" href={rssHref} />\n                )}\n            </PageHead>\n            <LayoutComponent {...layoutProps}>{children}</LayoutComponent>\n        </>\n    );\n\n    return (\n        <FullPageLayout>\n            <ErrorWrapperComponent>{content}</ErrorWrapperComponent>\n        </FullPageLayout>\n    );\n};\n\nexport { EmptyLayout, DefaultLayout, SideBarLayout, LightPageLayout, HeaderLayout };\nexport default PageLayout;\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nimport { RELATED_VACANCIES_TYPES } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\n\nconst RelatedVacanciesTitle = ({ type, trls }) => {\n    if (type === RELATED_VACANCIES_TYPES.SUITABLE) {\n        return trls[RelatedVacanciesTitle.trls.titleSuitable];\n    }\n    return trls[RelatedVacanciesTitle.trls.titleSimilar];\n};\n\nRelatedVacanciesTitle.propTypes = {\n    type: PropTypes.string,\n    trls: PropTypes.object,\n};\n\nRelatedVacanciesTitle.trls = {\n    titleSimilar: 'vacancy.similarVacancy.title',\n    titleSuitable: 'vacancy.suitable.title',\n};\n\nexport default translation(RelatedVacanciesTitle);\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { BannerPlace } from 'lux/models/banners';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst getBannersMap = (banners, isOdd) => {\n    if (isOdd) {\n        return {\n            bannerL: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_L],\n            bannerSM: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_S_M],\n            bannerXS: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_ODD_XS],\n        };\n    }\n    return {\n        bannerL: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_L],\n        bannerSM: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_S_M],\n        bannerXS: banners[BannerPlace.VACANCY_VIEW_SERP_FIRST_XS],\n    };\n};\n\nconst VacancySerpBanner = ({ isOdd, position, adsPositionInfo, bannerNum }) => {\n    const isWebView = useSelector((state) => state.isWebView);\n    const banners = useSelector((state) => state.banners);\n    const adsVacancyParams = useSelector((state) => state.adsVacancyParams);\n    const vacancyId = useSelector((state) => state.vacancyView?.vacancyId);\n    const wrapperRef = useRef(null);\n\n    useEffect(() => {\n        if (isWebView) {\n            return;\n        }\n        if (wrapperRef.current) {\n            Analytics.sendHHEventElementShown(wrapperRef.current, {\n                name: 'clickme_banner',\n                vacancyId,\n                position: bannerNum + 4,\n            });\n        }\n    }, [bannerNum, isWebView, vacancyId]);\n\n    const { bannerL, bannerSM, bannerXS } = getBannersMap(banners, isOdd);\n    if (isWebView || (!bannerXS?.length && !bannerSM?.length && !bannerL?.length)) {\n        return null;\n    }\n\n    const sendClickAnalytics = () => {\n        Analytics.sendHHEventButtonClick('clickme_banner', {\n            vacancyId,\n            position: bannerNum + 4,\n        });\n    };\n\n    return (\n        <div ref={wrapperRef}>\n            {bannerL?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-l\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerL[0]}\n                            cId={position ? `position_${position}_${bannerL[0].cId}` : bannerL[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerSM?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-s-m\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerSM[0]}\n                            cId={position ? `position_${position}_${bannerSM[0].cId}` : bannerSM[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerXS?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-xs\">\n                    <div className=\"serp-special\" onClick={sendClickAnalytics}>\n                        <AdsExternalBanner\n                            {...bannerXS[0]}\n                            cId={position ? `position_${position}_${bannerXS[0].cId}` : bannerXS[0].cId}\n                            bannerAdTargeting={adsVacancyParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nVacancySerpBanner.propTypes = {\n    position: PropTypes.number,\n    isOdd: PropTypes.bool,\n    adsPositionInfo: PropTypes.string,\n    bannerNum: PropTypes.number,\n};\n\nexport default VacancySerpBanner;\n","import { useState, useCallback, useEffect, useRef, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Button, { ButtonScale, ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport { H1Section } from 'bloko/blocks/header';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport TranslateGuard from 'bloko/blocks/translateGuard';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport Metrics from 'bloko/common/metrics';\nimport throttle from 'bloko/common/throttle';\n\nimport VacancySearchItem from 'lux/components/VacancySearchItem';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport VacancySerpBanner from 'lux/components/VacancySerpBanner';\nimport translation from 'lux/components/translation';\nimport { pushRelatedVacanciesAction } from 'lux/models/relatedVacancies';\nimport { addUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport RelatedVacanciesTitle from 'lux/components/RelatedVacancies/Title';\n\nconst AUTO_LOAD_PAGES = 3;\nconst SCROLL_THROTTLE_DELAY_MS = 1000;\nconst SCROLL_BOTTOM_OFFSET = 500;\nconst BANNER_POSITION = 3;\n\nfunction isScrolledPastThreshold(currentPageNumber, totalPages, wrapper) {\n    const viewportBottom = Metrics.getViewportMetrics().bottom;\n    const contentBottom = Metrics.getRelativeMetrics(wrapper).bottom;\n    return (\n        viewportBottom + SCROLL_BOTTOM_OFFSET >= contentBottom &&\n        currentPageNumber < totalPages &&\n        currentPageNumber < AUTO_LOAD_PAGES\n    );\n}\n\nconst RelatedVacancies = ({ blockRef, trls }) => {\n    const relatedVacancies = useSelector((state) => state.relatedVacancies);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const searchSessionId = useSelector((state) => state.searchSessionId);\n    const [isLoading, setIsLoading] = useState(false);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    const currentPageNumber = useRef(1);\n    const wrapperRef = useRef();\n    const dispatch = useDispatch();\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    const loadMoreVacancies = useCallback(() => {\n        if (isLoading) {\n            return;\n        }\n\n        setIsLoading(true);\n        fetcher\n            .get('/shards/vacancy/related_vacancies', {\n                params: {\n                    vacancyId,\n                    page: currentPageNumber.current,\n                    type: relatedVacancies.type,\n                    searchSessionId,\n                },\n            })\n            .then((response) => {\n                const actions = response.vacancies.map(({ vacancyId, userLabels }) =>\n                    addUserLabelsForVacancies({ vacancyId, labels: userLabels })\n                );\n\n                dispatch([...actions, pushRelatedVacanciesAction(response.vacancies)]);\n                currentPageNumber.current += 1;\n                if (currentPageNumber.current >= relatedVacancies.totalPages) {\n                    setShowLoadMore(false);\n                } else if (currentPageNumber.current >= AUTO_LOAD_PAGES) {\n                    setShowLoadMore(true);\n                }\n            })\n            .catch((error) => {\n                dispatch(showDefaultError(error));\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [dispatch, isLoading, relatedVacancies, searchSessionId, vacancyId]);\n\n    useEffect(() => {\n        if (!relatedVacancies.resultsFound) {\n            return undefined;\n        }\n        const onScrollHandler = throttle(() => {\n            if (isLoading) {\n                return;\n            }\n            if (isScrolledPastThreshold(currentPageNumber.current, relatedVacancies.totalPages, wrapperRef.current)) {\n                loadMoreVacancies();\n            }\n        }, SCROLL_THROTTLE_DELAY_MS);\n\n        document.addEventListener('scroll', onScrollHandler);\n\n        return () => {\n            document.removeEventListener('scroll', onScrollHandler);\n        };\n    }, [isLoading, relatedVacancies, loadMoreVacancies, currentPageNumber, wrapperRef]);\n\n    if (!relatedVacancies.resultsFound) {\n        return null;\n    }\n\n    const renderBannerIfNeeded = (index) => {\n        if (index % relatedVacancies.itemsOnPage !== BANNER_POSITION) {\n            return null;\n        }\n        const isOdd = Math.floor((index - BANNER_POSITION) / relatedVacancies.itemsOnPage) % 2 !== 0;\n        const bannerNumberOnPage = Math.ceil(index / (BANNER_POSITION * 2));\n        return (\n            <VacancySerpBanner\n                isOdd={isOdd}\n                position={index}\n                adsPositionInfo={`${bannerNumberOnPage}_${index}`}\n                bannerNum={bannerNumberOnPage}\n            />\n        );\n    };\n\n    return (\n        <div className=\"vacancy-section\" ref={blockRef} data-qa=\"vacancy-view-vacancies-from-search\">\n            <H1Section Element=\"h2\">\n                <RelatedVacanciesTitle type={relatedVacancies.type} />\n            </H1Section>\n            <VSpacing base={4} />\n            <div ref={wrapperRef}>\n                {relatedVacancies?.vacancies?.map((vacancy, index) => (\n                    <Fragment key={vacancy.vacancyId}>\n                        {renderBannerIfNeeded(index)}\n                        <VacancySearchItem\n                            vacancy={vacancy}\n                            vacancySource={Source.RelatedVacancies}\n                            hhtmFromLabel={`${relatedVacancies.type}_vacancies`}\n                            isXs={isXs}\n                        />\n                    </Fragment>\n                ))}\n            </div>\n            {isLoading && (\n                <div className=\"related-vacancies-loading-indicator\">\n                    <Gap top>\n                        <Loading scale={LoadingScale.Small} />\n                    </Gap>\n                </div>\n            )}\n            {!isLoading && showLoadMore && (\n                <Gap top>\n                    <Button\n                        scale={ButtonScale.Small}\n                        kind={ButtonKind.Secondary}\n                        appearance={ButtonAppearance.Outlined}\n                        onClick={loadMoreVacancies}\n                    >\n                        <TranslateGuard useSpan>{trls[RelatedVacancies.trls.loadMoreVacancies]}</TranslateGuard>\n                    </Button>\n                </Gap>\n            )}\n        </div>\n    );\n};\n\nRelatedVacancies.trls = {\n    loadMoreVacancies: 'vacancy.related.loadMoreVacancies',\n};\n\nRelatedVacancies.propTypes = {\n    blockRef: PropTypes.object,\n    trls: PropTypes.object,\n};\n\nexport default translation(RelatedVacancies);\n","import { FC, PropsWithChildren } from 'react';\n\nconst RowContent: FC<\n    {\n        isShrinked?: boolean;\n    } & PropsWithChildren\n> = ({ children, isShrinked }) => {\n    const cls = isShrinked ? 'row-content_schrinked' : 'row-content';\n    return <div className={cls}>{children}</div>;\n};\n\nexport default RowContent;\n","import { useState, useLayoutEffect } from 'react';\n\nexport default function useIsClient(): boolean {\n    const [isClient, setIsClient] = useState(false);\n    useLayoutEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    return isClient;\n}\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface BannerObject {\n    id: string;\n    cId: string;\n    bannerAdTargeting?: Record<string, unknown>;\n}\n\n// Не забудь продублировать в константы в  places.py!!!\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum BannerPlace {\n    AFTER_4TH_TOPIC_L = 'after-4th-topic-l',\n    AFTER_4TH_TOPIC_M = 'after-4th-topic-m',\n    AFTER_4TH_TOPIC_S = 'after-4th-topic-s',\n    AFTER_4TH_TOPIC_XS = 'after-4th-topic-xs',\n    AFTER_PAYMENT_FORM_L = 'after-payment-form-l',\n    AFTER_PAYMENT_FORM_S_M = 'after-payment-form-s-m',\n    AFTER_PAYMENT_FORM_XS = 'after-payment-form-xs',\n    AFTER_VACANCY_RESPONSE = 'after-vacancy-response',\n    BOTTOM_DASHBOARD = 'bottom-dashboard',\n    BOTTOM_DASHBOARD_CLICKME = 'bottom-dashboard-clickme',\n    CALENDAR = 'calendar',\n    DASHBOARD = 'dashboard',\n    INDEX_BOTTOM = 'index-bottom',\n    INDEX_BOTTOM_MOBILE = 'index-bottom-mobile',\n    INDEX_BOTTOM_XS = 'index-bottom-xs',\n    INDEX_DASHBOARD_MOBILE = 'index-dashboard-mobile',\n    INDEX_HORIZONTAL = 'index-horizontal',\n    INDEX_UNDER_NEWS_BOX = 'index-under-news-box',\n    INDEX_UNDER_DASHBOARD_SMALL = 'index-under-dashboard-small',\n    INDEX_VOD = 'index-vod',\n    INDEX_UNDER_RAINBOW_MOBILE = 'index-under-rainbow-mobile',\n    INDEX_UNDER_NEWS_BOX_MOBILE = 'index-under-news-box-mobile',\n    INDEX_WORK_IN_COMPANY = 'index-work-in-company',\n    INDEX_WORK_IN_COMPANY_MOBILE = 'index-work-in-company-mobile',\n    LEFT_COLUMN_UNDER_TABS = 'left-column-under-tabs',\n    RIGHT_COLUMN = 'right-column',\n    RIGHT_COLUMN_CLICKME = 'right-column-clickme',\n    RIGHT_COLUMN_CLICKME_ADAPTIVE = 'right-column-clickme-adaptive',\n    SERP_FIFTH_L = 'serp-fifth-l',\n    SERP_FIFTH_M = 'serp-fifth-m',\n    SERP_FIFTH_S = 'serp-fifth-s',\n    SERP_FIFTH_XS = 'serp-fifth-xs',\n    SERP_FIRST = 'serp-first',\n    SERP_FIRST_SMALL = 'serp-first-small',\n    SERP_FIRST_L = 'serp-first-l',\n    SERP_FIRST_M = 'serp-first-m',\n    SERP_FIRST_S = 'serp-first-s',\n    SERP_FIRST_XS = 'serp-first-xs',\n    SERP_FOURTH_L = 'serp-fourth-l',\n    SERP_FOURTH_M = 'serp-fourth-m',\n    SERP_FOURTH_S = 'serp-fourth-s',\n    SERP_FOURTH_XS = 'serp-fourth-xs',\n    SERP_SECOND = 'serp-second',\n    SERP_SECOND_SMALL = 'serp-second-small',\n    SERP_SECOND_L = 'serp-second-l',\n    SERP_SECOND_M = 'serp-second-m',\n    SERP_SECOND_S = 'serp-second-s',\n    SERP_SECOND_XS = 'serp-second-xs',\n    SERP_THIRD_L = 'serp-third-l',\n    SERP_THIRD_M = 'serp-third-m',\n    SERP_THIRD_S = 'serp-third-s',\n    SERP_THIRD_XS = 'serp-third-xs',\n    UNDER_PAGINATION_SEARCH_RESULTS_L = 'under-pagination-search-results-l',\n    UNDER_PAGINATION_SEARCH_RESULTS_M = 'under-pagination-search-results-m',\n    UNDER_PAGINATION_SEARCH_RESULTS_S = 'under-pagination-search-results-s',\n    UNDER_PAGINATION_SEARCH_RESULTS_XS = 'under-pagination-search-results-xs',\n    UNDER_SEARCH_RESULTS_ROTATE = 'under-search-results-rotate',\n    UNDER_SEARCH_RESULTS_XS = 'under-search-results-xs',\n    VACANCY_PROMOTION = 'vacancy-promotion',\n    VACANCY_RECOMMENDATIONS = 'vacancy-recommendations',\n    VACANCY_RIGHT_TEASER = 'vacancy-right-teaser',\n    VACANCY_VIEW_SERP_FIRST_L = 'vacancy-view-serp-first-l',\n    VACANCY_VIEW_SERP_FIRST_S_M = 'vacancy-view-serp-first-s-m',\n    VACANCY_VIEW_SERP_FIRST_XS = 'vacancy-view-serp-first-xs',\n    VACANCY_VIEW_SERP_FIRST_ODD_L = 'vacancy-view-serp-first-odd-l',\n    VACANCY_VIEW_SERP_FIRST_ODD_S_M = 'vacancy-view-serp-first-odd-s-m',\n    VACANCY_VIEW_SERP_FIRST_ODD_XS = 'vacancy-view-serp-first-odd-xs',\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n// Не забудь продублировать в константы в  places.py!!!\n\nexport interface Banners {\n    dashboard?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM]?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_DASHBOARD_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_HORIZONTAL]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_RAINBOW_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_VOD]?: BannerObject[];\n}\n\nexport default autoGeneratedReducer<Banners>({});\n","import { useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H4Section } from 'bloko/blocks/header';\nimport BlokoLink, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport { ApplicantServices } from 'lux/components/ApplicantServices/common';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst PER_PAGE = 3;\n\nconst BLOCKS = [\n    'proftest',\n    'photo',\n    'keySkills',\n    'skills',\n    'salary',\n    'metro',\n    'language',\n    'additionalEducation',\n    'attestationEducation',\n    'certificates',\n    'birthday',\n    'gender',\n    'personalSite',\n    'experience',\n    'recommendation',\n    'portfolio',\n];\n\nconst getBlockLink = (field, fieldName, resumeHash) => {\n    if (fieldName === 'proftest') {\n        return field.value?.resultsReceived ? '/applicant/proforientation' : '/article/proforientation_promo';\n    }\n    return `/applicant/resumes/edit/${field.block}?resume=${resumeHash}#${fieldName}`;\n};\n\nconst getFields = (\n    resume,\n    metroCities,\n    applicantResumesIdentifiers,\n    resumeIdsProfTestAttached,\n    applicantPaymentServices\n) => {\n    return BLOCKS.reduce((acc, name) => {\n        const value = resume[name]?.value;\n        let show = !value;\n        if (\n            [\n                'photo',\n                'recommendation',\n                'portfolio',\n                'personalSite',\n                'experience',\n                'additionalEducation',\n                'attestationEducation',\n                'keySkills',\n            ].includes(name)\n        ) {\n            show = !value.length;\n        }\n        if (name === 'language') {\n            show = value.length < 2;\n        }\n        if (name === 'salary') {\n            show = !value?.amount;\n        }\n        if (name === 'metro') {\n            show = !value && metroCities.includes(`${resume.area.value?.id}`);\n        }\n        if (name === 'proftest') {\n            show =\n                !!applicantResumesIdentifiers.some(\n                    (identifier) => !resumeIdsProfTestAttached.includes(identifier['@id'])\n                ) && applicantPaymentServices.includes(ApplicantServices.CareerGuidance);\n        }\n        if (show) {\n            acc.push(name);\n        }\n        return acc;\n    }, []);\n};\n\nconst ApplicantSuitableVacanciesSuggest = ({ trls }) => {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const resume = useSelector((state) => state.resume);\n    const metroCities = useSelector((state) => state.metroCities);\n    const applicantResumesIdentifiers = useSelector((state) => state.applicantResumesIdentifiers);\n    const resumeIdsProfTestAttached = useSelector((state) => state.resumeIdsProfTestAttached);\n    const applicantPaymentServices = useSelector((state) => state.applicantPaymentServices);\n    const [fields] = useState(\n        getFields(resume, metroCities, applicantResumesIdentifiers, resumeIdsProfTestAttached, applicantPaymentServices)\n    );\n\n    const currentOffset = currentIndex * PER_PAGE;\n    const goToNextPage = () => setCurrentIndex((currentIndex + 1) % Math.ceil(fields.length / PER_PAGE));\n\n    return (\n        <>\n            <H4Section>{`${trls[ApplicantSuitableVacanciesSuggest.trls.title1]} ${\n                trls[ApplicantSuitableVacanciesSuggest.trls.title2]\n            }`}</H4Section>\n            <div className=\"suitablevacancies__suggest-list\">\n                {fields.map((name, index) => {\n                    if (index < currentOffset || index >= currentOffset + PER_PAGE) {\n                        return null;\n                    }\n                    return (\n                        <Link\n                            key={name}\n                            to={getBlockLink(resume[name], name, resume.hash)}\n                            className=\"suitablevacancies__suggest-item\"\n                        >\n                            <div className=\"suitablevacancies__suggest-icon-wrap\">\n                                <span\n                                    className={classnames([\n                                        'suitablevacancies__suggest-icon',\n                                        `suitablevacancies__suggest-icon_${name}`,\n                                    ])}\n                                />\n                            </div>\n                            <div\n                                className={classnames('suitablevacancies__suggest-text', {\n                                    'suitablevacancies__suggest-text_proftest': name === 'proftest',\n                                })}\n                            >\n                                <Text strong>{trls[ApplicantSuitableVacanciesSuggest.trls.fields[name]]}</Text>\n                            </div>\n                        </Link>\n                    );\n                })}\n            </div>\n            <div className=\"suitablevacancies__suggest-more\">\n                <Text size={TextSize.Small}>\n                    <BlokoLink appearance={LinkAppearance.Pseudo} kind={LinkKind.Secondary} onClick={goToNextPage}>\n                        {trls[ApplicantSuitableVacanciesSuggest.trls.more]}\n                    </BlokoLink>\n                </Text>\n            </div>\n        </>\n    );\n};\n\nApplicantSuitableVacanciesSuggest.trls = {\n    title1: 'suitableVacancies.suitable.make_more',\n    title2: 'suitableVacancies.suitable.make_more_2',\n    more: 'suitableVacancies.suggest.more',\n    fields: {\n        proftest: 'suitableVacancies.suggest.proftest',\n        photo: 'suitableVacancies.suggest.photo',\n        keySkills: 'suitableVacancies.suggest.keySkills',\n        skills: 'suitableVacancies.suggest.skills',\n        salary: 'suitableVacancies.suggest.salary',\n        metro: 'suitableVacancies.suggest.metro',\n        language: 'suitableVacancies.suggest.language',\n        additionalEducation: 'suitableVacancies.suggest.additionalEducation',\n        attestationEducation: 'suitableVacancies.suggest.attestationEducation',\n        certificates: 'suitableVacancies.suggest.certificate',\n        birthday: 'suitableVacancies.suggest.birthday',\n        gender: 'suitableVacancies.suggest.gender',\n        personalSite: 'suitableVacancies.suggest.personalSite',\n        experience: 'suitableVacancies.suggest.experience',\n        recommendation: 'suitableVacancies.suggest.recommendation',\n        portfolio: 'suitableVacancies.suggest.portfolio',\n    },\n};\n\nApplicantSuitableVacanciesSuggest.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport default translation(ApplicantSuitableVacanciesSuggest);\n","import { ReactNode, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\nimport { H2Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport RelatedVacancies from 'lux/components/RelatedVacancies';\nimport { RESUME_AUTO_HIDE } from 'lux/components/VacancyResponseForm/ResumeAutoHideNotification';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport Suggest from 'lux/pages/ApplicantSuitableVacancies/components/ApplicantSuitableVacanciesSuggest';\n\nconst renderPublishedHeading = (text: string, isPublished: boolean): ReactNode => {\n    if (!isPublished) {\n        return null;\n    }\n\n    return (\n        <div className=\"suitablevacancies__published\">\n            <H2Section lite>\n                <span className=\"suitablevacancies__published-head\">{text}</span>\n            </H2Section>\n            <VSpacing base={4} />\n        </div>\n    );\n};\n\nconst TrlKeys = {\n    resumePublished: 'suitableVacancies.resume_published',\n};\n\nconst ApplicantSuitableVacancies: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const resumeHash = useSelector((state) => state.resume?.hash);\n    const autoHideTime = useSelector((state) => state.resume?.autoHideTime);\n    const published = useSelector((state) => state.router.location.query.published);\n    const resumeStatus = useSelector((state) => state.resume?.status);\n    const isSuccessfulPublish = published !== '' && resumeStatus !== 'not_finished';\n\n    useEffect(() => {\n        if (!published || !resumeHash || !autoHideTime) {\n            return;\n        }\n\n        dispatch(\n            addNotification(RESUME_AUTO_HIDE, {\n                resumeHash,\n                autoHideTime,\n                isVacancyResponse: false,\n            })\n        );\n    }, [resumeHash, dispatch, published, autoHideTime]);\n\n    return (\n        <div className=\"suitablevacancies__body\">\n            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"12\">\n                {renderPublishedHeading(trls[TrlKeys.resumePublished], isSuccessfulPublish)}\n                <RelatedVacancies />\n            </Column>\n            <Column xs=\"4\" s=\"8\" m=\"4\" l=\"4\">\n                <Suggest />\n            </Column>\n        </div>\n    );\n};\n\nexport default translation(ApplicantSuitableVacancies);\n","import PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\n\nimport Breadcrumbs from 'lux/components/Breadcrumbs';\nimport Breadcrumb from 'lux/components/Breadcrumbs/Breadcrumb';\nimport PageLayout from 'lux/components/PageLayout';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ApplicantSuitableVacancies from 'lux/pages/ApplicantSuitableVacancies/components';\n\nconst getBackurl = (resumeHash) => {\n    return `/applicant/resumes/view?resume=${resumeHash}`;\n};\n\nconst ApplicantSuitableVacanciesPage = ({ trls }) => {\n    const resumeHash = useSelector((state) => state.router.location.query.resume);\n    return (\n        <PageLayout title={trls[ApplicantSuitableVacanciesPage.trls.title]}>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <Breadcrumbs>\n                        <Breadcrumb to={getBackurl(resumeHash)}>\n                            {trls[ApplicantSuitableVacanciesPage.trls.backToResume]}\n                        </Breadcrumb>\n                    </Breadcrumbs>\n                </Column>\n                <ApplicantSuitableVacancies />\n            </Column>\n        </PageLayout>\n    );\n};\n\nApplicantSuitableVacanciesPage.propTypes = {\n    trls: PropTypes.object,\n};\n\nApplicantSuitableVacanciesPage.trls = {\n    title: 'suitableVacancies.title',\n    backToResume: 'suitableVacancies.top.backToResume',\n};\n\nexport default translation(ApplicantSuitableVacanciesPage);\n"],"names":["element","params","window","requestIdleCallback","visibilityWatcher","onVisible","ids","id","templateName","adfoxParams","banners","Banners","init","options","visible","checkVisible","offsetWidth","offsetHeight","getClientRects","length","removeEventListener","dataset","listenersSetted","addEventListener","ApplicantServices","loadBannerOnVisible","require","Banner","Component","componentDidMount","this","props","isEmpty","ReactDOM","setAutoHeight","bind","initBanners","componentDidUpdate","componentWillUnmount","shouldComponentUpdate","nextProps","cancelFetchBanners","search","pathname","userTargeting","adfoxParamsProperty","style","height","clientHeight","innerHTML","type","bannerId","place","bannerCommonTargeting","bannerAdTargeting","bannerParams","render","children","connect","state","router","location","AdsExternalBanner","cId","pp","p2","enableAdfox","shouldHideExternalBanners","isExternalBannersRestricted","useIsBelarus","className","Breadcrumb","to","isSeoLink","hideOverflow","Link","classnames","importance","TextImportance","Element","BreadcrumbsDivider","kind","IconKind","view","IconView","initial","IconColor","scale","IconScale","Breadcrumbs","TrlKeys","PageErrorWrapper","trls","errorCode","useSelector","trlErrorCode","trl","xs","s","m","l","translation","PageHead","HeadProvider","PageDescription","content","openGraphContent","Fragment","Meta","name","property","PageKeywords","DefaultLayout","isShrinked","ColumnsWrapper","LightPageLayoutContent","error","ErrorComponent","noContentPadding","noBackground","sTop","sBottom","mTop","mBottom","lTop","lBottom","TopLevelSite","general","LightPageLayoutFooter","isContrast","isMagritte","useMagritte","topLevelSite","store","isXS","useBreakpoint","suppressHydrationWarning","format","Date","getFullYear","toString","Text","TextStyle","typography","TextTypography","size","TextSize","LightPage","promo","Content","React","header","LightPageLayoutHeader","footer","HeaderLayout","linkAboveHeader","title","disableVisited","H1","base","SideBarLayout","sidebar","SideBarComponent","container","PageLayout","layout","LayoutComponent","errorWrapper","ErrorWrapperComponent","ogTitle","description","ogDescription","keywords","canonical","rssTitle","rssHref","removeTitle","layoutProps","useLayoutEffect","titleElement","document","querySelector","parentNode","removeChild","rel","href","FullPageLayout","RelatedVacanciesTitle","RELATED_VACANCIES_TYPES","titleSuitable","titleSimilar","propTypes","PropTypes","VacancySerpBanner","isOdd","position","adsPositionInfo","bannerNum","isWebView","adsVacancyParams","vacancyId","vacancyView","wrapperRef","useRef","useEffect","current","Analytics","bannerL","bannerSM","bannerXS","BannerPlace","getBannersMap","sendClickAnalytics","ref","onClick","positionInfo","RelatedVacancies","blockRef","relatedVacancies","searchSessionId","isLoading","setIsLoading","useState","showLoadMore","setShowLoadMore","currentPageNumber","dispatch","useDispatch","isXs","Breakpoint","loadMoreVacancies","useCallback","fetcher","page","then","response","actions","vacancies","map","userLabels","addUserLabelsForVacancies","labels","pushRelatedVacanciesAction","totalPages","catch","showDefaultError","finally","resultsFound","onScrollHandler","throttle","wrapper","Metrics","bottom","isScrolledPastThreshold","renderBannerIfNeeded","index","itemsOnPage","Math","floor","bannerNumberOnPage","ceil","H1Section","vacancy","VacancySearchItem","vacancySource","Source","hhtmFromLabel","top","LoadingScale","ButtonScale","ButtonKind","appearance","ButtonAppearance","useSpan","RowContent","cls","useIsClient","isClient","setIsClient","autoGeneratedReducer","BLOCKS","ApplicantSuitableVacanciesSuggest","currentIndex","setCurrentIndex","resume","metroCities","applicantResumesIdentifiers","resumeIdsProfTestAttached","applicantPaymentServices","fields","reduce","acc","value","show","includes","amount","area","some","identifier","push","getFields","currentOffset","H4Section","title1","title2","field","fieldName","resumeHash","hash","resultsReceived","block","strong","LinkAppearance","LinkKind","more","proftest","photo","keySkills","skills","salary","metro","language","additionalEducation","attestationEducation","certificates","birthday","gender","personalSite","experience","recommendation","portfolio","ApplicantSuitableVacancies","autoHideTime","published","query","resumeStatus","status","isSuccessfulPublish","addNotification","RESUME_AUTO_HIDE","isVacancyResponse","text","isPublished","H2Section","lite","getBackurl","ApplicantSuitableVacanciesPage","backToResume"],"sourceRoot":""}