{"version":3,"file":"App.7bd88d7ec2cac1c6c66b.js","mappings":"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wB,CAAD,6UCAvB,GAAeA,GAAf,CAAwB,CAAD,gXCAvB,GAAeA,GAAf,CAAwB,CAAD,ufCAvB,GAAeA,GAAf,CAAwB,CAAD,gRCAvB,GAAeA,GAAf,CAAwB,CAAD,qVCAvB,GAAeA,GAAf,CAAwB,CAAD,4WCAvB,GAAeA,GAAf,CAAwB,CAAD,oaCAvB,GAAeA,GAAf,CAAwB,CAAD,6X,gBCAvB,SAAeA,GAAf,CAAwB,CAAD,4TCAvB,GAAeA,GAAf,CAAwB,CAAD,uWCAvB,GAAeA,GAAf,CAAwB,CAAD,yVCAvB,GAAeA,GAAf,CAAwB,CAAD,kmBCAvB,GAAeA,GAAf,CAAwB,CAAD,ywBCAvB,GAAeA,GAAf,CAAwB,CAAD,qeCAvB,GAAeA,GAAf,CAAwB,CAAD,opBCAvB,GAAeA,GAAf,CAAwB,CAAD,6kBCAvB,GAAeA,GAAf,CAAwB,CAAD,iiBCAvB,GAAeA,GAAf,CAAwB,CAAD,4XCAvB,GAAeA,GAAf,CAAwB,CAAD,ySCAvB,GAAeA,GAAf,CAAwB,CAAD,gQCAvB,GAAeA,GAAf,CAAwB,CAAD,+SCAvB,GAAeA,GAAf,CAAwB,CAAD,mYCAvB,GAAeA,GAAf,CAAwB,CAAD,oVCAvB,GAAeA,GAAf,CAAwB,CAAD,4QCAvB,GAAeA,GAAf,CAAwB,CAAD,sZCAvB,GAAeA,GAAf,CAAwB,CAAD,mgBCAvB,GAAeA,GAAf,CAAwB,CAAD,kOCAvB,GAAeA,GAAf,CAAwB,CAAD,6MCAvB,GAAeA,GAAf,CAAwB,CAAD,uPCAvB,GAAeA,GAAf,CAAwB,CAAD,qRCAvB,GAAeA,GAAf,CAAwB,CAAD,6WCAvB,GAAeA,GAAf,CAAwB,CAAD,grBCAvB,GAAeA,GAAf,CAAwB,CAAD,oSCAvB,GAAeA,GAAf,CAAwB,CAAD,kYCAvB,GAAeA,GAAf,CAAwB,CAAD,gUCAvB,GAAeA,GAAf,CAAwB,CAAD,+YCAvB,GAAeA,GAAf,CAAwB,CAAD,2XCAvB,GAAeA,GAAf,CAAwB,CAAD,mYCAvB,GAAeA,GAAf,CAAwB,CAAD,+dCAvB,GAAeA,GAAf,CAAwB,CAAD,kYCAvB,GAAeA,GAAf,CAAwB,CAAD,mcCAvB,GAAeA,GAAf,CAAwB,CAAD,8TCAvB,GAAeA,GAAf,CAAwB,CAAD,wTCAvB,GAAeA,GAAf,CAAwB,CAAD,2RCAvB,GAAeA,GAAf,CAAwB,CAAD,wXCAvB,GAAeA,GAAf,CAAwB,CAAD,4VCAvB,GAAeA,GAAf,CAAwB,CAAD,qXCAvB,GAAeA,GAAf,CAAwB,CAAD,gaCAvB,GAAeA,GAAf,CAAwB,CAAD,6RCAvB,GAAeA,GAAf,CAAwB,CAAD,gZCAvB,GAAeA,GAAf,CAAwB,CAAD,udCAvB,GAAeA,GAAf,CAAwB,CAAD,wYCAvB,GAAeA,GAAf,CAAwB,CAAD,kWCAvB,GAAeA,GAAf,CAAwB,CAAD,kXCAvB,GAAeA,GAAf,CAAwB,CAAD,keCAvB,GAAeA,GAAf,CAAwB,CAAD,0hBCAvB,GAAeA,GAAf,CAAwB,CAAD,+fCAvB,GAAeA,GAAf,CAAwB,CAAD,yjBCAvB,GAAeA,GAAf,CAAwB,CAAD,2TCAvB,GAAeA,GAAf,CAAwB,CAAD,knBCAvB,GAAeA,GAAf,CAAwB,CAAD,gmBCAvB,GAAeA,GAAf,CAAwB,CAAD,0jBCAvB,GAAeA,GAAf,CAAwB,CAAD,sTCAvB,GAAeA,GAAf,CAAwB,CAAD,4NCAvB,GAAeA,GAAf,CAAwB,CAAD,8QCAvB,GAAeA,GAAf,CAAwB,CAAD,ueCAvB,GAAeA,GAAf,CAAwB,CAAD,4QCAvB,GAAeA,GAAf,CAAwB,CAAD,yUCAvB,GAAeA,GAAf,CAAwB,CAAD,oiBCAvB,GAAeA,GAAf,CAAwB,CAAD,gOCAvB,GAAeA,GAAf,CAAwB,CAAD,guBCEvB,GAFkCA,GAAAA,CAAS,CAAD,kUCA1C,GAAeA,GAAf,CAAwB,CAAD,wXCAvB,GAAeA,GAAf,CAAwB,CAAD,2oBCAvB,GAAeA,GAAf,CAAwB,CAAD,2xBCAvB,GAAeA,GAAf,CAAwB,CAAD,yzBCAvB,GAAeA,GAAf,CAAwB,CAAD,2yBCAvB,GAAeA,GAAf,CAAwB,CAAD,+wBCAvB,GAAeA,GAAf,CAAwB,CAAD,8bCAvB,GAAeA,GAAf,CAAwB,CAAD,4rBCAvB,GAAeA,GAAf,CAAwB,CAAD,qPCAvB,GAAeA,GAAf,CAAwB,CAAD,8gBCAvB,GAAeA,GAAf,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KAASC,KAASC,yDAChBF,KAASC,KAASC,wDACnBF,KAASC,KAASC,sDACpBF,KAASC,KAASC,4DACZF,KAASC,KAASC,wDACtBF,KAASC,KAASC,8DACZF,KAASC,KAASC,wDACxBF,KAASC,KAASC,8DACZF,KAASC,KAASC,uDACzBF,KAASC,KAASC,6DACZF,KAASC,KAASC,uDACxBF,KAASC,KAASC,6DACZF,KAASC,KAASC,wDACvBF,KAASC,KAASC,oDACtBF,KAASC,KAASC,qEACDF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,yEACnBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,oEACpBF,KAASC,KAASC,oEAClBF,KAASC,KAASC,qEACjBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,uEACpBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,uEACnBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,4EACdF,KAASC,KAASC,0EAClBF,KAASC,KAASC,2EACjBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,4EAClBF,KAASC,KAASC,6EACjBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,4EAClBF,KAASC,KAASC,6EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,4EACjBF,KAASC,KAASC,6EACnBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,4EACjBF,KAASC,KAASC,qDAC3CF,KAASC,KAASC,kDACnBF,KAASC,KAASC,oDAChBF,KAASC,KAASC,oDAClBF,KAASC,KAASC,mDACnBF,KAASC,KAASC,mDAClBF,KAASC,KAASC,iEACJF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,oEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,oEACnBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,mEACpBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,mEACnBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,mDACnCF,KAASC,KAASC,mDAChBF,KAASC,KAASC,kDACnBF,KAASC,KAASC,gDACpBF,KAASC,KAASC,0DACRF,KAASC,KAASC,kDAC1BF,KAASC,KAASC,4DACRF,KAASC,KAASC,kDAC5BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iDAC7BF,KAASC,KAASC,2DACRF,KAASC,KAASC,iDAC5BF,KAASC,KAASC,2DACRF,KAASC,KAASC,kDAC3BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iEACfF,KAASC,KAASC,gEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,gEACrBF,KAASC,KAASC,+DACjBF,KAASC,KAASC,0EACTF,KAASC,KAASC,yEACjBF,KAASC,KAASC,kEAC3BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,iEAC9BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,mDAC5CF,KAASC,KAASC,mDAChBF,KAASC,KAASC,kDACnBF,KAASC,KAASC,gDACpBF,KAASC,KAASC,0DACRF,KAASC,KAASC,kDAC1BF,KAASC,KAASC,4DACRF,KAASC,KAASC,kDAC5BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iDAC7BF,KAASC,KAASC,2DACRF,KAASC,KAASC,iDAC5BF,KAASC,KAASC,2DACRF,KAASC,KAASC,kDAC3BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iEACfF,KAASC,KAASC,gEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,gEACrBF,KAASC,KAASC,+DACjBF,KAASC,KAASC,0EACTF,KAASC,KAASC,yEACjBF,KAASC,KAASC,kEAC3BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,iEAC9BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,2DACpCF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,0DACjBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,oEACRF,KAASC,KAASC,sEAChBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,sEACnBF,KAASC,KAASC,kEACtBF,KAASC,KAASC,wEACZF,KAASC,KAASC,kEACxBF,KAASC,KAASC,0EACZF,KAASC,KAASC,kFACVF,KAASC,KAASC,gFAClBF,KAASC,KAASC,sFACZF,KAASC,KAASC,sFAClBF,KAASC,KAASC,gFACxBF,KAASC,KAASC,kFAClBF,KAASC,KAASC,wFACZF,KAASC,KAASC,wFAClBF,KAASC,KAASC,mFACvBF,KAASC,KAASC,uFACZF,KAASC,KAASC,iFACxBF,KAASC,KAASC,yFACZF,KAASC,KAASC,4FACfF,KAASC,KAASC,oFAC1BF,KAASC,KAASC,kFAClBF,KAASC,KAASC,mFACjBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,oFACpBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,wEAC/BF,KAASC,KAASC,kFACRF,KAASC,KAASC,iFACnBF,KAASC,KAASC,yEAC5BF,KAASC,KAASC,iFACRF,KAASC,KAASC,gFACnBF,KAASC,KAASC,2EACzBF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,yFACbF,KAASC,KAASC,iGACRF,KAASC,KAASC,gGACnBF,KAASC,KAASC,wFAC5BF,KAASC,KAASC,gGACRF,KAASC,KAASC,+FACnBF,KAASC,KAASC,0FACzBF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,wFAC7BF,KAASC,KAASC,sFAClBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,gGACRF,KAASC,KAASC,gGAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,+FACnBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,uFAC5BF,KAASC,KAASC,qFAClBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+FACRF,KAASC,KAASC,+FAClBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,8FACnBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,yFACzBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,yFAC3BF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,yFAC3BF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,oEAChDF,KAASC,KAASC,4EACRF,KAASC,KAASC,2EACnBF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,0EACnBF,KAASC,KAASC,mEACzBF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,4EACRF,KAASC,KAASC,2EACnBF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,0EACnBF,KAASC,KAASC,mEACzBF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,0EACpBF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,yEAC5BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EACzBF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,yFACbF,KAASC,KAASC,mGACRF,KAASC,KAASC,kGACnBF,KAASC,KAASC,wFAC5BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FACzBF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,yEAC5CF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,wEAC5BF,KAASC,KAASC,kFACRF,KAASC,KAASC,iFACnBF,KAASC,KAASC,0EACzBF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,0EAC3BF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,0EAC3BF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,iFACpBF,KAASC,KAASC,2FACRF,KAASC,KAASC,0FACnBF,KAASC,KAASC,gFAC5BF,KAASC,KAASC,0FACRF,KAASC,KAASC,yFACnBF,KAASC,KAASC,kFACzBF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,2FACRF,KAASC,KAASC,0FACnBF,KAASC,KAASC,gFAC5BF,KAASC,KAASC,0FACRF,KAASC,KAASC,yFACnBF,KAASC,KAASC,kFACzBF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,8FACnBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,uFAC3BF,KAASC,KAASC,oFACrBF,KAASC,KAASC,oFAChBF,KAASC,KAASC,+EACvBF,KAASC,KAASC,iFAChBF,KAASC,KAASC,gGACHF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAChBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,6FACvBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,+FAChBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,iGAChBF,KAASC,KAASC,qGAChBF,KAASC,KAASC,gGACvBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,wFAC1BF,KAASC,KAASC,4FAChBF,KAASC,KAASC,qFACzBF,KAASC,KAASC,yEAC9BF,KAASC,KAASC,yEAChBF,KAASC,KAASC,uFACJF,KAASC,KAASC,uFAClBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,uFAChBF,KAASC,KAASC,iEACxCF,KAASC,KAASC,mEAChBF,KAASC,KAASC,yEACZF,KAASC,KAASC,2EAChBF,KAASC,KAASC,2FACFF,KAASC,KAASC,+FAChBF,KAASC,KAASC,iFAChCF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,qEAC7BF,KAASC,KAASC,mFACJF,KAASC,KAASC,mFAClBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,iEACrCF,KAASC,KAASC,+DACpBF,KAASC,KAASC,qEACZF,KAASC,KAASC,+DACxBF,KAASC,KAASC,qEACZF,KAASC,KAASC,+DACxBF,KAASC,KAASC,8EACHF,KAASC,KAASC,8EAClBF,KAASC,KAASC,oFACZF,KAASC,KAASC,8EACxBF,KAASC,KAASC,oFACZF,KAASC,KAASC,6EACzBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,mFAClBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,+EACtBF,KAASC,KAASC,8FACHF,KAASC,KAASC,wFACxBF,KAASC,KAASC,yEACjCF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,8DACrBF,KAASC,KAASC,+EACDF,KAASC,KAASC,4EACrBF,KAASC,KAASC,+EACfF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,0FACRF,KAASC,KAASC,8EAChCF,KAASC,KAASC,8EAClBF,KAASC,KAASC,uEACzBF,KAASC,KAASC,gEACvBF,KAASC,KAASC,0EACRF,KAASC,KAASC,+DAC7BF,KAASC,KAASC,yEACRF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,2EACRF,KAASC,KAASC,gEAC7BF,KAASC,KAASC,0EACRF,KAASC,KAASC,iEAC3BF,KAASC,KAASC,2EACRF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,8EACfF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,qFACVF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+EACxBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,+EACzBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,+EAC1BF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,gEACzCF,KAASC,KAASC,0EACRF,KAASC,KAASC,+DAC7BF,KAASC,KAASC,yEACRF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,2EACRF,KAASC,KAASC,gEAC7BF,KAASC,KAASC,0EACRF,KAASC,KAASC,iEAC3BF,KAASC,KAASC,2EACRF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,8EACfF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,qFACVF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+EACxBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,+EACzBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,+EAC1BF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,mFACtBF,KAASC,KAASC,2EAC5BF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,0EACjBF,KAASC,KAASC,wFACJF,KAASC,KAASC,0FAChBF,KAASC,KAASC,uFACrBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,mEACxCF,KAASC,KAASC,qEAChBF,KAASC,KAASC,+EACRF,KAASC,KAASC,kEAC/BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,oEAC3BF,KAASC,KAASC,8EACRF,KAASC,KAASC,kFACdF,KAASC,KAASC,oFAChBF,KAASC,KAASC,8FACRF,KAASC,KAASC,iFAC/BF,KAASC,KAASC,2FACRF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,mFAC3BF,KAASC,KAASC,6FACRF,KAASC,KAASC,qEAC1CF,KAASC,KAASC,sEACjBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,qEACnBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,oFACHF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,sFACnBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,iEACvCF,KAASC,KAASC,gEACjBF,KAASC,KAASC,gEAClBF,KAASC,KAASC,+DACnBF,KAASC,KAASC,+DAClBF,KAASC,KAASC,8EACHF,KAASC,KAASC,iFACjBF,KAASC,KAASC,iFAClBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,iEACjCF,KAASC,KAASC,gEACjBF,KAASC,KAASC,gEAClBF,KAASC,KAASC,+DACnBF,KAASC,KAASC,+DAClBF,KAASC,KAASC,8EACHF,KAASC,KAASC,iFACjBF,KAASC,KAASC,iFAClBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,2EACvBF,KAASC,KAASC,mEACxBF,KAASC,KAASC,qEAChBF,KAASC,KAASC,yEACdF,KAASC,KAASC,sEACrBF,KAASC,KAASC,oEACpBF,KAASC,KAASC,oEAClBF,KAASC,KAASC,sEAChBF,KAASC,KAASC,sFACFF,KAASC,KAASC,0EAChCF,KAASC,KAASC,2EACfF,KAASC,KAASC,gFACbF,KAASC,KAASC,oEAChCF,KAASC,KAASC,4EACRF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,2EACRF,KAASC,KAASC,mEAC1BF,KAASC,KAASC,6EACRF,KAASC,KAASC,mEAC5BF,KAASC,KAASC,6EACRF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,iFACdF,KAASC,KAASC,2FACRF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,0FACRF,KAASC,KAASC,kFAC1BF,KAASC,KAASC,iFACnBF,KAASC,KAASC,4FACPF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,kFAC5BF,KAASC,KAASC,4FACRF,KAASC,KAASC,gFAC9BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,+EAClBF,KAASC,KAASC,yFACRF,KAASC,KAASC,yFAClBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,iFAC3BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,kEAC3CF,KAASC,KAASC,4EACRF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,2EACRF,KAASC,KAASC,mEAC1BF,KAASC,KAASC,6EACRF,KAASC,KAASC,mEAC5BF,KAASC,KAASC,6EACRF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,iFACdF,KAASC,KAASC,2FACRF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,0FACRF,KAASC,KAASC,kFAC1BF,KAASC,KAASC,iFACnBF,KAASC,KAASC,4FACPF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,kFAC5BF,KAASC,KAASC,4FACRF,KAASC,KAASC,gFAC9BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,+EAClBF,KAASC,KAASC,yFACRF,KAASC,KAASC,yFAClBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,iFAC3BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qFACxBF,KAASC,KAASC,+FACVF,KAASC,KAASC,8FACnBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,+FACnBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,oFAC9BF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,mFACpBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,0EAC9BF,KAASC,KAASC,uEACnBF,KAASC,KAASC,yEAChBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,kFACTF,KAASC,KAASC,iFACnBF,KAASC,KAASC,mFAChBF,KAASC,KAASC,kFACnBF,KAASC,KAASC,mFACjBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,sFACfF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,sFACpBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,uFACnBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,gGACVF,KAASC,KAASC,gGAClBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,+FACpBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,gGACpBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,iGACnBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,oEAChDF,KAASC,KAASC,qEACnBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,oEACrBF,KAASC,KAASC,0EACVF,KAASC,KAASC,oEACxBF,KAASC,KAASC,qEACjBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,oEACpBF,KAASC,KAASC,mEACnBF,KAASC,KAASC,iFACJF,KAASC,KAASC,iFAClBF,KAASC,KAASC,kFACjBF,KAASC,KAASC,8EACtBF,KAASC,KAASC,2EACrBF,KAASC,KAASC,wEACvBF,KAASC,KAASC,0EACdF,KAASC,KAASC,iFACbF,KAASC,KAASC,iFAChBF,KAASC,KAASC,8EACrBF,KAASC,KAASC,gFAChBF,KAASC,KAASC,6FACLF,KAASC,KAASC,6FAClBF,KAASC,KAASC,8FACjBF,KAASC,KAASC,+FACjBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,4FACtBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,6FACjBF,KAASC,KAASC,8FACjBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,+FACjBF,KAASC,KAASC,yEACxCF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,0EAChBF,KAASC,KAASC,uFACLF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,sFACtBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,wFAClBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,oFACvBF,KAASC,KAASC,2EAC7BF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,0EAChBF,KAASC,KAASC,uFACLF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,sFACtBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,wFAClBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,mFAChBF,KAASC,KAASC,gFACrBF,KAASC,KAASC,kFAChBF,KAASC,KAASC,gGACJF,KAASC,KAASC,kGAChBF,KAASC,KAASC,+FACrBF,KAASC,KAASC,iGAChBF,KAASC,KAASC,oEAC/CF,KAASC,KAASC,yEACbF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,kEACzBF,KAASC,KAASC,kEAClBF,KAASC,KAASC,uFACCF,KAASC,KAASC,gFACzBF,KAASC,KAASC,6EACnBF,KAASC,KAASC,+EAChBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,4FACJF,KAASC,KAASC,4FAClBF,KAASC,KAASC,2FACnBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,4FACnBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,sEACxCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,wEAC9BF,KAASC,KAASC,sFACJF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uEACjCF,KAASC,KAASC,uEAClBF,KAASC,KAASC,yEAChBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,uFACHF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,6EACnBF,KAASC,KAASC,+EAChBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,2EACrBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,8EACfF,KAASC,KAASC,0EACtBF,KAASC,KAASC,gFACZF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8FACFF,KAASC,KAASC,8FAClBF,KAASC,KAASC,6EACnCF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,oFACzBF,KAASC,KAASC,sFAChBF,KAASC,KAASC,qFACrBF,KAASC,KAASC,sGACDF,KAASC,KAASC,iGACrBF,KAASC,KAASC,oGACfF,KAASC,KAASC,iGACrBF,KAASC,KAASC,2FACxBF,KAASC,KAASC,iFAC9BF,KAASC,KAASC,0FACPF,KAASC,KAASC,yFACrBF,KAASC,KAASC,6EAC5BF,KAASC,KAASC,qFACVF,KAASC,KAASC,8EACzBF,KAASC,KAASC,6FACHF,KAASC,KAASC,6FACpBF,KAASC,KAASC,0FACnBF,KAASC,KAASC,4FAChBF,KAASC,KAASC,2GACHF,KAASC,KAASC,2GAClBF,KAASC,KAASC,4GACjBF,KAASC,KAASC,2GACrBF,KAASC,KAASC,yGAClBF,KAASC,KAASC,0GACjBF,KAASC,KAASC,uGACrBF,KAASC,KAASC,wGACjBF,KAASC,KAASC,0GAChBF,KAASC,KAASC,qGACvBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,sGACjBF,KAASC,KAASC,mGACrBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,oGACjBF,KAASC,KAASC,iGACrBF,KAASC,KAASC,uEAC5CF,KAASC,KAASC,qFACJF,KAASC,KAASC,qFAClBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,mEACrCF,KAASC,KAASC,+EACJF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,mEACjCF,KAASC,KAASC,+EACJF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+FACLF,KAASC,KAASC,6EACpCF,KAASC,KAASC,6EAChBF,KAASC,KAASC,gFACfF,KAASC,KAASC,2FACPF,KAASC,KAASC,2FAClBF,KAASC,KAASC,mFAC1BF,KAASC,KAASC,qFAChBF,KAASC,KAASC,wFACfF,KAASC,KAASC,yEACnCF,KAASC,KAASC,2EACdF,KAASC,KAASC,2EAClBF,KAASC,KAASC,6EAChBF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2EAClCF,KAASC,KAASC,6EAChBF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,mFAChBF,KAASC,KAASC,2FACZF,KAASC,KAASC,wEACrCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,sEACjCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,yEAC9BF,KAASC,KAASC,wFACHF,KAASC,KAASC,0EAChCF,KAASC,KAASC,gFACZF,KAASC,KAASC,wHACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,yEACvBF,KAASC,KAASC,0EACjBF,KAASC,KAASC,0EAClBF,KAASC,KAASC,qEACvBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,wFACHF,KAASC,KAASC,sFAClBF,KAASC,KAASC,iFACvBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,2EACvBF,KAASC,KAASC,qFACRF,KAASC,KAASC,qFAClBF,KAASC,KAASC,gFACvBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,0EACvBF,KAASC,KAASC,oFACRF,KAASC,KAASC,kGACJF,KAASC,KAASC,kGAClBF,KAASC,KAASC,mGACjBF,KAASC,KAASC,8EACvCF,KAASC,KAASC,6FACHF,KAASC,KAASC,8EACjCF,KAASC,KAASC,6FACHF,KAASC,KAASC,sFACzBF,KAASC,KAASC,qGACHF,KAASC,KAASC,qFAClCF,KAASC,KAASC,iGACNF,KAASC,KAASC,gFACrCF,KAASC,KAASC,wFACRF,KAASC,KAASC,+EAC3BF,KAASC,KAASC,yFACRF,KAASC,KAASC,2EAChCF,KAASC,KAASC,qFACRF,KAASC,KAASC,6EAC1BF,KAASC,KAASC,uFACRF,KAASC,KAASC,2EAC9BF,KAASC,KAASC,qFACRF,KAASC,KAASC,gFACvBF,KAASC,KAASC,0FACRF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,yFACRF,KAASC,KAASC,6EAC9BF,KAASC,KAASC,uFACRF,KAASC,KAASC,6EAC5BF,KAASC,KAASC,uFACRF,KAASC,KAASC,4FACbF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,sGACRF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,6FAC3BF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,uGACRF,KAASC,KAASC,uGAClBF,KAASC,KAASC,uGAClBF,KAASC,KAASC,yFAChCF,KAASC,KAASC,yFAClBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,mGACRF,KAASC,KAASC,mGAClBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,2FAC1BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,yFAC9BF,KAASC,KAASC,yFAClBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,mGACRF,KAASC,KAASC,mGAClBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,8FACvBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,wGACRF,KAASC,KAASC,wGAClBF,KAASC,KAASC,wGAClBF,KAASC,KAASC,6FAC7BF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,uGACRF,KAASC,KAASC,uGAClBF,KAASC,KAASC,uGAClBF,KAASC,KAASC,2FAC9BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,2FAC5BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,wEAC/CF,KAASC,KAASC,yEACjBF,KAASC,KAASC,qEACtBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,qEACpBF,KAASC,KAASC,yEACdF,KAASC,KAASC,uEACpBF,KAASC,KAASC,0EACfF,KAASC,KAASC,uEACrBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,kFACRF,KAASC,KAASC,yEAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,qEAChCF,KAASC,KAASC,+EACRF,KAASC,KAASC,uEAC1BF,KAASC,KAASC,iFACRF,KAASC,KAASC,qEAC9BF,KAASC,KAASC,+EACRF,KAASC,KAASC,yEACxBF,KAASC,KAASC,mFACRF,KAASC,KAASC,uEAC9BF,KAASC,KAASC,iFACRF,KAASC,KAASC,0EACzBF,KAASC,KAASC,oFACRF,KAASC,KAASC,uEAC/BF,KAASC,KAASC,iFACRF,KAASC,KAASC,kFACjBF,KAASC,KAASC,gFACpBF,KAASC,KAASC,gGACFF,KAASC,KAASC,gGAClBF,KAASC,KAASC,qGACbF,KAASC,KAASC,qGAClBF,KAASC,KAASC,iGACtBF,KAASC,KAASC,8FACrBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,mGACbF,KAASC,KAASC,mGAClBF,KAASC,KAASC,+FACtBF,KAASC,KAASC,8EACnCF,KAASC,KAASC,4EACpBF,KAASC,KAASC,4FACFF,KAASC,KAASC,4FAClBF,KAASC,KAASC,0FACpBF,KAASC,KAASC,0FAClBF,KAASC,KAASC,6FACfF,KAASC,KAASC,2FACpBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,+EAClCF,KAASC,KAASC,2EACpBF,KAASC,KAASC,2FACFF,KAASC,KAASC,2FAClBF,KAASC,KAASC,4FACjBF,KAASC,KAASC,yFACrBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,yEACnCF,KAASC,KAASC,uEACpBF,KAASC,KAASC,uFACFF,KAASC,KAASC,uFAClBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,wFACfF,KAASC,KAASC,sFACpBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,iGACEF,KAASC,KAASC,iGACpBF,KAASC,KAASC,uEAC5CF,KAASC,KAASC,qFACFF,KAASC,KAASC,mFACpBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,4DAC1CF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,yGACfF,KAASC,KAASC,iGAC9BF,KAASC,KAASC,oDACnBF,KAASC,KAASC,kDACrBF,KAASC,KAASC,2CAClBF,KAASC,KAASC,+CACfF,KAASC,KAASC,iDAChBF,KAASC,KAASC,+CACnBF,KAASC,KAASC,oDACnBF,KAASC,KAASC,kDACrBF,KAASC,KAASC,2CAClBF,KAASC,KAASC,8CACfF,KAASC,KAASC,iDAChBF,KAASC,KAASC,+CACnBF,KAASC,KAASC,oDACnBF,KAASC,KAASC,kDACrBF,KAASC,KAASC,2CAClBF,KAASC,KAASC,8CACfF,KAASC,KAASC,iDAChBF,KAASC,KAASC,2CACvBF,KAASC,KAASC,2CAClBF,KAASC,KAASC,8CACfF,KAASC,KAASC,gDAChBF,KAASC,KAASC,+CACnBF,KAASC,KAASC,oDACnBF,KAASC,KAASC,oBAG3BE,eAAgB,0BCzuC3C,GAAgBL,IACZ,MAAOC,EAAOC,EAAOC,GAASH,EAAcznK,MAAM,KAwuClD,MAAO,CAAE6nK,aAvuCa,sEAEeH,KAASC,KAASC,yDAChBF,KAASC,KAASC,wDACnBF,KAASC,KAASC,sDACpBF,KAASC,KAASC,4DACZF,KAASC,KAASC,wDACtBF,KAASC,KAASC,8DACZF,KAASC,KAASC,wDACxBF,KAASC,KAASC,8DACZF,KAASC,KAASC,uDACzBF,KAASC,KAASC,6DACZF,KAASC,KAASC,uDACxBF,KAASC,KAASC,6DACZF,KAASC,KAASC,wDACvBF,KAASC,KAASC,oDACtBF,KAASC,KAASC,qEACDF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,sEACtBF,KAASC,KAASC,oEAClBF,KAASC,KAASC,qEACjBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,uEACpBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,uEACnBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,wEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,4EACfF,KAASC,KAASC,0EAClBF,KAASC,KAASC,2EACjBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,4EAClBF,KAASC,KAASC,6EACjBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,4EAClBF,KAASC,KAASC,6EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,4EACjBF,KAASC,KAASC,6EACnBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,4EACjBF,KAASC,KAASC,qDAC3CF,KAASC,KAASC,kDACnBF,KAASC,KAASC,oDAChBF,KAASC,KAASC,oDAClBF,KAASC,KAASC,mDACnBF,KAASC,KAASC,mDAClBF,KAASC,KAASC,iEACJF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,oEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,oEACnBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,mEACpBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,mEACnBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,mDACnCF,KAASC,KAASC,mDAChBF,KAASC,KAASC,kDACnBF,KAASC,KAASC,gDACpBF,KAASC,KAASC,0DACRF,KAASC,KAASC,kDAC1BF,KAASC,KAASC,4DACRF,KAASC,KAASC,kDAC5BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iDAC7BF,KAASC,KAASC,2DACRF,KAASC,KAASC,iDAC5BF,KAASC,KAASC,2DACRF,KAASC,KAASC,kDAC3BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iEACfF,KAASC,KAASC,gEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,gEACrBF,KAASC,KAASC,+DACjBF,KAASC,KAASC,0EACTF,KAASC,KAASC,yEACjBF,KAASC,KAASC,kEAC3BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,iEAC9BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,mDAC5CF,KAASC,KAASC,mDAChBF,KAASC,KAASC,kDACnBF,KAASC,KAASC,gDACpBF,KAASC,KAASC,0DACRF,KAASC,KAASC,kDAC1BF,KAASC,KAASC,4DACRF,KAASC,KAASC,kDAC5BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iDAC7BF,KAASC,KAASC,2DACRF,KAASC,KAASC,iDAC5BF,KAASC,KAASC,2DACRF,KAASC,KAASC,kDAC3BF,KAASC,KAASC,4DACRF,KAASC,KAASC,iEACfF,KAASC,KAASC,gEACjBF,KAASC,KAASC,mEACjBF,KAASC,KAASC,kEACjBF,KAASC,KAASC,kEACpBF,KAASC,KAASC,iEACjBF,KAASC,KAASC,gEACrBF,KAASC,KAASC,+DACjBF,KAASC,KAASC,0EACTF,KAASC,KAASC,yEACjBF,KAASC,KAASC,kEAC3BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,iEAC9BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,gEACjBF,KAASC,KAASC,2EACTF,KAASC,KAASC,0EACjBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,iEACjBF,KAASC,KAASC,4EACTF,KAASC,KAASC,2EACjBF,KAASC,KAASC,2DACpCF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,yDAClBF,KAASC,KAASC,0DACjBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,0DAClBF,KAASC,KAASC,oEACRF,KAASC,KAASC,sEAChBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,uEACjBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,sEACnBF,KAASC,KAASC,kEACtBF,KAASC,KAASC,wEACZF,KAASC,KAASC,kEACxBF,KAASC,KAASC,0EACZF,KAASC,KAASC,kFACVF,KAASC,KAASC,gFAClBF,KAASC,KAASC,sFACZF,KAASC,KAASC,sFAClBF,KAASC,KAASC,gFACxBF,KAASC,KAASC,kFAClBF,KAASC,KAASC,wFACZF,KAASC,KAASC,wFAClBF,KAASC,KAASC,mFACvBF,KAASC,KAASC,uFACZF,KAASC,KAASC,iFACxBF,KAASC,KAASC,yFACZF,KAASC,KAASC,4FACfF,KAASC,KAASC,oFAC1BF,KAASC,KAASC,kFAClBF,KAASC,KAASC,mFACjBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,oFACpBF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,wEAC/BF,KAASC,KAASC,kFACRF,KAASC,KAASC,iFACnBF,KAASC,KAASC,yEAC5BF,KAASC,KAASC,iFACRF,KAASC,KAASC,gFACnBF,KAASC,KAASC,2EACzBF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,yFACbF,KAASC,KAASC,iGACRF,KAASC,KAASC,gGACnBF,KAASC,KAASC,wFAC5BF,KAASC,KAASC,gGACRF,KAASC,KAASC,+FACnBF,KAASC,KAASC,0FACzBF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,wFAC7BF,KAASC,KAASC,sFAClBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,gGACRF,KAASC,KAASC,gGAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,+FACnBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,uFAC5BF,KAASC,KAASC,qFAClBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+FACRF,KAASC,KAASC,+FAClBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,8FACnBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,yFACzBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,yFAC3BF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,yFAC3BF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,iGACRF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,gGACnBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,oEAChDF,KAASC,KAASC,4EACRF,KAASC,KAASC,2EACnBF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,0EACnBF,KAASC,KAASC,mEACzBF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,kEAC5BF,KAASC,KAASC,4EACRF,KAASC,KAASC,2EACnBF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,0EACnBF,KAASC,KAASC,mEACzBF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,4EACnBF,KAASC,KAASC,0EACpBF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,yEAC5BF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,2EACzBF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,2EAC3BF,KAASC,KAASC,qFACRF,KAASC,KAASC,oFACnBF,KAASC,KAASC,yFACbF,KAASC,KAASC,mGACRF,KAASC,KAASC,kGACnBF,KAASC,KAASC,wFAC5BF,KAASC,KAASC,kGACRF,KAASC,KAASC,iGACnBF,KAASC,KAASC,0FACzBF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,0FAC3BF,KAASC,KAASC,oGACRF,KAASC,KAASC,mGACnBF,KAASC,KAASC,yEAC5CF,KAASC,KAASC,mFACRF,KAASC,KAASC,kFACnBF,KAASC,KAASC,wEAC5BF,KAASC,KAASC,kFACRF,KAASC,KAASC,iFACnBF,KAASC,KAASC,0EACzBF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,0EAC3BF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,0EAC3BF,KAASC,KAASC,oFACRF,KAASC,KAASC,mFACnBF,KAASC,KAASC,iFACpBF,KAASC,KAASC,2FACRF,KAASC,KAASC,0FACnBF,KAASC,KAASC,gFAC5BF,KAASC,KAASC,0FACRF,KAASC,KAASC,yFACnBF,KAASC,KAASC,kFACzBF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,2FACRF,KAASC,KAASC,0FACnBF,KAASC,KAASC,gFAC5BF,KAASC,KAASC,0FACRF,KAASC,KAASC,yFACnBF,KAASC,KAASC,kFACzBF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,2FACnBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,8FACnBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,uFAC3BF,KAASC,KAASC,oFACrBF,KAASC,KAASC,oFAChBF,KAASC,KAASC,+EACvBF,KAASC,KAASC,iFAChBF,KAASC,KAASC,gGACHF,KAASC,KAASC,gGAClBF,KAASC,KAASC,kGAChBF,KAASC,KAASC,kGAClBF,KAASC,KAASC,6FACvBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,+FAChBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,iGAChBF,KAASC,KAASC,qGAChBF,KAASC,KAASC,gGACvBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,wFAC1BF,KAASC,KAASC,4FAChBF,KAASC,KAASC,qFACzBF,KAASC,KAASC,yEAC9BF,KAASC,KAASC,yEAChBF,KAASC,KAASC,uFACJF,KAASC,KAASC,uFAClBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,uFAChBF,KAASC,KAASC,iEACxCF,KAASC,KAASC,mEAChBF,KAASC,KAASC,yEACZF,KAASC,KAASC,2EAChBF,KAASC,KAASC,2FACFF,KAASC,KAASC,+FAChBF,KAASC,KAASC,iFAChCF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,qEAC7BF,KAASC,KAASC,mFACJF,KAASC,KAASC,mFAClBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,iEACrCF,KAASC,KAASC,+DACpBF,KAASC,KAASC,qEACZF,KAASC,KAASC,+DACxBF,KAASC,KAASC,qEACZF,KAASC,KAASC,+DACxBF,KAASC,KAASC,8EACHF,KAASC,KAASC,8EAClBF,KAASC,KAASC,oFACZF,KAASC,KAASC,8EACxBF,KAASC,KAASC,oFACZF,KAASC,KAASC,6EACzBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,6EACxBF,KAASC,KAASC,mFACZF,KAASC,KAASC,mFAClBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,+EACtBF,KAASC,KAASC,8FACHF,KAASC,KAASC,wFACxBF,KAASC,KAASC,yEACjCF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,8DACrBF,KAASC,KAASC,+EACDF,KAASC,KAASC,4EACrBF,KAASC,KAASC,+EACfF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,0FACRF,KAASC,KAASC,8EAChCF,KAASC,KAASC,8EAClBF,KAASC,KAASC,uEACzBF,KAASC,KAASC,gEACvBF,KAASC,KAASC,0EACRF,KAASC,KAASC,+DAC7BF,KAASC,KAASC,yEACRF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,2EACRF,KAASC,KAASC,gEAC7BF,KAASC,KAASC,0EACRF,KAASC,KAASC,iEAC3BF,KAASC,KAASC,2EACRF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,8EACfF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,qFACVF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+EACxBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,+EACzBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,+EAC1BF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,gEACzCF,KAASC,KAASC,0EACRF,KAASC,KAASC,+DAC7BF,KAASC,KAASC,yEACRF,KAASC,KAASC,iEAC1BF,KAASC,KAASC,2EACRF,KAASC,KAASC,gEAC7BF,KAASC,KAASC,0EACRF,KAASC,KAASC,iEAC3BF,KAASC,KAASC,2EACRF,KAASC,KAASC,iEAC5BF,KAASC,KAASC,2EACRF,KAASC,KAASC,8EACfF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,6EACpBF,KAASC,KAASC,6EAClBF,KAASC,KAASC,8EACjBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,+EACjBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,8EACpBF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,qFACVF,KAASC,KAASC,qFAClBF,KAASC,KAASC,+EACxBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,sFACVF,KAASC,KAASC,sFAClBF,KAASC,KAASC,+EACzBF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,+EAC1BF,KAASC,KAASC,uFACVF,KAASC,KAASC,uFAClBF,KAASC,KAASC,mFACtBF,KAASC,KAASC,2EAC5BF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,0EACjBF,KAASC,KAASC,wFACJF,KAASC,KAASC,0FAChBF,KAASC,KAASC,uFACrBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,mEACxCF,KAASC,KAASC,qEAChBF,KAASC,KAASC,+EACRF,KAASC,KAASC,kEAC/BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,oEAC3BF,KAASC,KAASC,8EACRF,KAASC,KAASC,kFACdF,KAASC,KAASC,oFAChBF,KAASC,KAASC,8FACRF,KAASC,KAASC,iFAC/BF,KAASC,KAASC,2FACRF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,mFAC3BF,KAASC,KAASC,6FACRF,KAASC,KAASC,qEAC1CF,KAASC,KAASC,sEACjBF,KAASC,KAASC,sEAClBF,KAASC,KAASC,qEACnBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,oFACHF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,sFACnBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,iEACvCF,KAASC,KAASC,gEACjBF,KAASC,KAASC,gEAClBF,KAASC,KAASC,+DACnBF,KAASC,KAASC,+DAClBF,KAASC,KAASC,8EACHF,KAASC,KAASC,iFACjBF,KAASC,KAASC,iFAClBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,iEACjCF,KAASC,KAASC,gEACjBF,KAASC,KAASC,gEAClBF,KAASC,KAASC,+DACnBF,KAASC,KAASC,+DAClBF,KAASC,KAASC,8EACHF,KAASC,KAASC,iFACjBF,KAASC,KAASC,iFAClBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,2EACvBF,KAASC,KAASC,mEACxBF,KAASC,KAASC,qEAChBF,KAASC,KAASC,yEACdF,KAASC,KAASC,sEACrBF,KAASC,KAASC,oEACpBF,KAASC,KAASC,oEAClBF,KAASC,KAASC,sEAChBF,KAASC,KAASC,sFACFF,KAASC,KAASC,0EAChCF,KAASC,KAASC,2EACfF,KAASC,KAASC,gFACbF,KAASC,KAASC,oEAChCF,KAASC,KAASC,4EACRF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,2EACRF,KAASC,KAASC,mEAC1BF,KAASC,KAASC,6EACRF,KAASC,KAASC,mEAC5BF,KAASC,KAASC,6EACRF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,iFACdF,KAASC,KAASC,2FACRF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,0FACRF,KAASC,KAASC,kFAC1BF,KAASC,KAASC,iFACnBF,KAASC,KAASC,4FACPF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,kFAC5BF,KAASC,KAASC,4FACRF,KAASC,KAASC,gFAC9BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,+EAClBF,KAASC,KAASC,yFACRF,KAASC,KAASC,yFAClBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,iFAC3BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,kEAC3CF,KAASC,KAASC,4EACRF,KAASC,KAASC,iEAC7BF,KAASC,KAASC,2EACRF,KAASC,KAASC,mEAC1BF,KAASC,KAASC,6EACRF,KAASC,KAASC,mEAC5BF,KAASC,KAASC,6EACRF,KAASC,KAASC,kEAC7BF,KAASC,KAASC,4EACRF,KAASC,KAASC,mEAC3BF,KAASC,KAASC,6EACRF,KAASC,KAASC,iFACdF,KAASC,KAASC,2FACRF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,0FACRF,KAASC,KAASC,kFAC1BF,KAASC,KAASC,iFACnBF,KAASC,KAASC,4FACPF,KAASC,KAASC,2FACnBF,KAASC,KAASC,kFAC3BF,KAASC,KAASC,4FACRF,KAASC,KAASC,kFAC5BF,KAASC,KAASC,4FACRF,KAASC,KAASC,gFAC9BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,+EAClBF,KAASC,KAASC,yFACRF,KAASC,KAASC,yFAClBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,gFAC7BF,KAASC,KAASC,gFAClBF,KAASC,KAASC,0FACRF,KAASC,KAASC,0FAClBF,KAASC,KAASC,iFAC3BF,KAASC,KAASC,iFAClBF,KAASC,KAASC,2FACRF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qFACxBF,KAASC,KAASC,+FACVF,KAASC,KAASC,8FACnBF,KAASC,KAASC,gGAChBF,KAASC,KAASC,+FACnBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,oFAC9BF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,mFACpBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,qFACnBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,0EAC9BF,KAASC,KAASC,uEACnBF,KAASC,KAASC,yEAChBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,yEACjBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,kFACTF,KAASC,KAASC,iFACnBF,KAASC,KAASC,mFAChBF,KAASC,KAASC,kFACnBF,KAASC,KAASC,mFACjBF,KAASC,KAASC,mFAClBF,KAASC,KAASC,sFACfF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,sFACjBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,sFACpBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,uFACnBF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,gGACVF,KAASC,KAASC,gGAClBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,+FACpBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,gGACpBF,KAASC,KAASC,gGAClBF,KAASC,KAASC,iGACjBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,iGACnBF,KAASC,KAASC,iGAClBF,KAASC,KAASC,kGACjBF,KAASC,KAASC,oEAChDF,KAASC,KAASC,qEACnBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,uEAClBF,KAASC,KAASC,oEACrBF,KAASC,KAASC,0EACVF,KAASC,KAASC,oEACxBF,KAASC,KAASC,qEACjBF,KAASC,KAASC,qEAClBF,KAASC,KAASC,sEACjBF,KAASC,KAASC,oEACpBF,KAASC,KAASC,mEACnBF,KAASC,KAASC,iFACJF,KAASC,KAASC,iFAClBF,KAASC,KAASC,kFACjBF,KAASC,KAASC,8EACtBF,KAASC,KAASC,2EACrBF,KAASC,KAASC,wEACvBF,KAASC,KAASC,0EACdF,KAASC,KAASC,iFACbF,KAASC,KAASC,iFAChBF,KAASC,KAASC,8EACrBF,KAASC,KAASC,gFAChBF,KAASC,KAASC,6FACLF,KAASC,KAASC,6FAClBF,KAASC,KAASC,8FACjBF,KAASC,KAASC,+FACjBF,KAASC,KAASC,+FAClBF,KAASC,KAASC,gGACjBF,KAASC,KAASC,4FACtBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,6FACjBF,KAASC,KAASC,8FACjBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,+FACjBF,KAASC,KAASC,yEACxCF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,0EAChBF,KAASC,KAASC,uFACLF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,sFACtBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,wFAClBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,oFACvBF,KAASC,KAASC,2EAC7BF,KAASC,KAASC,2EAChBF,KAASC,KAASC,wEACrBF,KAASC,KAASC,0EAChBF,KAASC,KAASC,uFACLF,KAASC,KAASC,uFAClBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,sFACtBF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uFACjBF,KAASC,KAASC,wFACjBF,KAASC,KAASC,wFAClBF,KAASC,KAASC,yFACjBF,KAASC,KAASC,iFAC1BF,KAASC,KAASC,mFAChBF,KAASC,KAASC,gFACrBF,KAASC,KAASC,kFAChBF,KAASC,KAASC,gGACJF,KAASC,KAASC,kGAChBF,KAASC,KAASC,+FACrBF,KAASC,KAASC,iGAChBF,KAASC,KAASC,oEAC/CF,KAASC,KAASC,yEACbF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,yEAClBF,KAASC,KAASC,kEACzBF,KAASC,KAASC,kEAClBF,KAASC,KAASC,uFACCF,KAASC,KAASC,gFACzBF,KAASC,KAASC,6EACnBF,KAASC,KAASC,+EAChBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,4FACJF,KAASC,KAASC,4FAClBF,KAASC,KAASC,2FACnBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,4FACnBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,sEACxCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,wEAC9BF,KAASC,KAASC,sFACJF,KAASC,KAASC,sFAClBF,KAASC,KAASC,uEACjCF,KAASC,KAASC,uEAClBF,KAASC,KAASC,yEAChBF,KAASC,KAASC,wEACnBF,KAASC,KAASC,uFACHF,KAASC,KAASC,uFAClBF,KAASC,KAASC,8EAC3BF,KAASC,KAASC,6EACnBF,KAASC,KAASC,+EAChBF,KAASC,KAASC,8EACnBF,KAASC,KAASC,2EACrBF,KAASC,KAASC,2EAClBF,KAASC,KAASC,8EACfF,KAASC,KAASC,0EACtBF,KAASC,KAASC,gFACZF,KAASC,KAASC,8EACpBF,KAASC,KAASC,8FACFF,KAASC,KAASC,8FAClBF,KAASC,KAASC,6EACnCF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,oFACzBF,KAASC,KAASC,sFAChBF,KAASC,KAASC,qFACrBF,KAASC,KAASC,sGACDF,KAASC,KAASC,iGACrBF,KAASC,KAASC,oGACfF,KAASC,KAASC,iGACrBF,KAASC,KAASC,2FACxBF,KAASC,KAASC,iFAC9BF,KAASC,KAASC,0FACPF,KAASC,KAASC,yFACrBF,KAASC,KAASC,6EAC5BF,KAASC,KAASC,qFACVF,KAASC,KAASC,8EACzBF,KAASC,KAASC,6FACHF,KAASC,KAASC,6FACpBF,KAASC,KAASC,0FACnBF,KAASC,KAASC,4FAChBF,KAASC,KAASC,2GACHF,KAASC,KAASC,2GAClBF,KAASC,KAASC,4GACjBF,KAASC,KAASC,2GACrBF,KAASC,KAASC,yGAClBF,KAASC,KAASC,0GACjBF,KAASC,KAASC,uGACrBF,KAASC,KAASC,wGACjBF,KAASC,KAASC,0GAChBF,KAASC,KAASC,qGACvBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,sGACjBF,KAASC,KAASC,mGACrBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,oGACjBF,KAASC,KAASC,iGACrBF,KAASC,KAASC,uEAC5CF,KAASC,KAASC,qFACJF,KAASC,KAASC,qFAClBF,KAASC,KAASC,oFACnBF,KAASC,KAASC,mEACrCF,KAASC,KAASC,+EACJF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,mEACjCF,KAASC,KAASC,+EACJF,KAASC,KAASC,+EAClBF,KAASC,KAASC,gFACjBF,KAASC,KAASC,+FACLF,KAASC,KAASC,6EACpCF,KAASC,KAASC,6EAChBF,KAASC,KAASC,gFACfF,KAASC,KAASC,2FACPF,KAASC,KAASC,2FAClBF,KAASC,KAASC,mFAC1BF,KAASC,KAASC,qFAChBF,KAASC,KAASC,wFACfF,KAASC,KAASC,yEACnCF,KAASC,KAASC,2EACdF,KAASC,KAASC,2EAClBF,KAASC,KAASC,6EAChBF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2EAClCF,KAASC,KAASC,6EAChBF,KAASC,KAASC,2FACJF,KAASC,KAASC,2FAClBF,KAASC,KAASC,iFAC5BF,KAASC,KAASC,mFAChBF,KAASC,KAASC,2FACZF,KAASC,KAASC,wEACrCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,sEACjCF,KAASC,KAASC,oFACJF,KAASC,KAASC,oFAClBF,KAASC,KAASC,qFACjBF,KAASC,KAASC,yEAC9BF,KAASC,KAASC,wFACHF,KAASC,KAASC,0EAChCF,KAASC,KAASC,gFACZF,KAASC,KAASC,wHACpBF,KAASC,KAASC,8EAClBF,KAASC,KAASC,yEACvBF,KAASC,KAASC,0EACjBF,KAASC,KAASC,0EAClBF,KAASC,KAASC,qEACvBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,wFACHF,KAASC,KAASC,sFAClBF,KAASC,KAASC,iFACvBF,KAASC,KAASC,gFACnBF,KAASC,KAASC,gFAClBF,KAASC,KAASC,2EACvBF,KAASC,KAASC,qFACRF,KAASC,KAASC,qFAClBF,KAASC,KAASC,gFACvBF,KAASC,KAASC,+EACnBF,KAASC,KAASC,+EAClBF,KAASC,KAASC,0EACvBF,KAASC,KAASC,oFACRF,KAASC,KAASC,kGACJF,KAASC,KAASC,kGAClBF,KAASC,KAASC,mGACjBF,KAASC,KAASC,8EACvCF,KAASC,KAASC,6FACHF,KAASC,KAASC,8EACjCF,KAASC,KAASC,6FACHF,KAASC,KAASC,sFACzBF,KAASC,KAASC,qGACHF,KAASC,KAASC,qFAClCF,KAASC,KAASC,iGACNF,KAASC,KAASC,gFACrCF,KAASC,KAASC,wFACRF,KAASC,KAASC,+EAC3BF,KAASC,KAASC,yFACRF,KAASC,KAASC,2EAChCF,KAASC,KAASC,qFACRF,KAASC,KAASC,6EAC1BF,KAASC,KAASC,uFACRF,KAASC,KAASC,2EAC9BF,KAASC,KAASC,qFACRF,KAASC,KAASC,gFACvBF,KAASC,KAASC,0FACRF,KAASC,KAASC,+EAC7BF,KAASC,KAASC,yFACRF,KAASC,KAASC,6EAC9BF,KAASC,KAASC,uFACRF,KAASC,KAASC,6EAC5BF,KAASC,KAASC,uFACRF,KAASC,KAASC,4FACbF,KAASC,KAASC,4FAClBF,KAASC,KAASC,4FAClBF,KAASC,KAASC,sGACRF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,6FAC3BF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,uGACRF,KAASC,KAASC,uGAClBF,KAASC,KAASC,uGAClBF,KAASC,KAASC,yFAChCF,KAASC,KAASC,yFAClBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,mGACRF,KAASC,KAASC,mGAClBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,2FAC1BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,yFAC9BF,KAASC,KAASC,yFAClBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,mGACRF,KAASC,KAASC,mGAClBF,KAASC,KAASC,mGAClBF,KAASC,KAASC,8FACvBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,wGACRF,KAASC,KAASC,wGAClBF,KAASC,KAASC,wGAClBF,KAASC,KAASC,6FAC7BF,KAASC,KAASC,6FAClBF,KAASC,KAASC,6FAClBF,KAASC,KAASC,uGACRF,KAASC,KAASC,uGAClBF,KAASC,KAASC,uGAClBF,KAASC,KAASC,2FAC9BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,2FAC5BF,KAASC,KAASC,2FAClBF,KAASC,KAASC,2FAClBF,KAASC,KAASC,qGACRF,KAASC,KAASC,qGAClBF,KAASC,KAASC,qGAClBF,KAASC,KAASC,wEAC/CF,KAASC,KAASC,yEACjBF,KAASC,KAASC,qEACtBF,KAASC,KAASC,uEAChBF,KAASC,KAASC,qEACpBF,KAASC,KAASC,yEACdF,KAASC,KAASC,uEACpBF,KAASC,KAASC,0EACfF,KAASC,KAASC,uEACrBF,KAASC,KAASC,wEACjBF,KAASC,KAASC,kFACRF,KAASC,KAASC,yEAC3BF,KAASC,KAASC,mFACRF,KAASC,KAASC,qEAChCF,KAASC,KAASC,+EACRF,KAASC,KAASC,uEAC1BF,KAASC,KAASC,iFACRF,KAASC,KAASC,qEAC9BF,KAASC,KAASC,+EACRF,KAASC,KAASC,yEACxBF,KAASC,KAASC,mFACRF,KAASC,KAASC,uEAC9BF,KAASC,KAASC,iFACRF,KAASC,KAASC,0EACzBF,KAASC,KAASC,oFACRF,KAASC,KAASC,uEAC/BF,KAASC,KAASC,iFACRF,KAASC,KAASC,kFACjBF,KAASC,KAASC,gFACpBF,KAASC,KAASC,gGACFF,KAASC,KAASC,gGAClBF,KAASC,KAASC,qGACbF,KAASC,KAASC,qGAClBF,KAASC,KAASC,iGACtBF,KAASC,KAASC,8FACrBF,KAASC,KAASC,8FAClBF,KAASC,KAASC,mGACbF,KAASC,KAASC,mGAClBF,KAASC,KAASC,+FACtBF,KAASC,KAASC,8EACnCF,KAASC,KAASC,4EACpBF,KAASC,KAASC,4FACFF,KAASC,KAASC,4FAClBF,KAASC,KAASC,0FACpBF,KAASC,KAASC,0FAClBF,KAASC,KAASC,6FACfF,KAASC,KAASC,2FACpBF,KAASC,KAASC,6FAChBF,KAASC,KAASC,+EAClCF,KAASC,KAASC,2EACpBF,KAASC,KAASC,2FACFF,KAASC,KAASC,2FAClBF,KAASC,KAASC,4FACjBF,KAASC,KAASC,yFACrBF,KAASC,KAASC,yFAClBF,KAASC,KAASC,0FACjBF,KAASC,KAASC,yEACnCF,KAASC,KAASC,uEACpBF,KAASC,KAASC,uFACFF,KAASC,KAASC,uFAClBF,KAASC,KAASC,qFACpBF,KAASC,KAASC,qFAClBF,KAASC,KAASC,wFACfF,KAASC,KAASC,sFACpBF,KAASC,KAASC,6EAC3BF,KAASC,KAASC,iGACEF,KAASC,KAASC,iGACpBF,KAASC,KAASC,uEAC5CF,KAASC,KAASC,qFACFF,KAASC,KAASC,mFACpBF,KAASC,KAASC,oFACjBF,KAASC,KAASC,8DAC1CF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,sGAClBF,KAASC,KAASC,yGACfF,KAASC,KAASC,iGAC9BF,KAASC,KAASC,oDACnBF,KAASC,KAASC,kDACrBF,KAASC,KAASC,2CAClBF,KAASC,KAASC,+CACfF,KAASC,KAASC,iDAChBF,KAASC,KAASC,+C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","sources":["webpack://xhh/./webapp-static/lux/components/EmployerZpOnboarding/employer-zp-onboarding.less?496b","webpack://xhh/./webapp-static/lux/components/Footer/MobileAppButtons/mobile-app-buttons.less?d619","xhh/./webapp-static/js/HH/EmployerReviews/Acknowledge.ts","xhh/./webapp-static/js/HH/SendNotificationManagerAnalytics.ts","xhh/./webapp-static/js/HHC/ActiveOverlay.ts","xhh/./webapp-static/js/Modules/Notices.ts","xhh/./webapp-static/js/Modules/UserNotifications.ts","xhh/./webapp-static/js/Modules/VacancyAnalytics.ts","xhh/./webapp-static/js/Modules/VacancyToFavorite.ts","xhh/./webapp-static/js/Modules/formatDate.ts","xhh/./webapp-static/js/Modules/googleTranslateChecker.ts","xhh/./webapp-static/js/Utils/Media.ts","xhh/./webapp-static/js/Utils/ScrollTop.js","xhh/./webapp-static/js/Utils/Utils.ts","xhh/./webapp-static/lux/app.jsx","xhh/./webapp-static/lux/components/A11y/A11yConstants.ts","xhh/./webapp-static/lux/components/AppSmartBanner/utils.ts","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/ChangeForm.tsx","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/useMarkAsRead.tsx","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/useSetJobSearchStatus.ts","webpack://xhh/./webapp-static/lux/components/AreaSwitcher/Footer/area-switcher-footer.less?8dd5","xhh/./webapp-static/lux/components/AreaSwitcher/Footer/index.tsx","xhh/./webapp-static/lux/components/AreaSwitcher/Search/Icon.tsx","xhh/./webapp-static/lux/components/AreaSwitcher/Search/SuggestDomainItem.tsx","xhh/./webapp-static/lux/components/AreaSwitcher/Search/index.tsx","xhh/./webapp-static/lux/components/AreaSwitcher/index.tsx","xhh/./webapp-static/lux/components/AutoInviteModal/common/AutoInviteContext.ts","xhh/./webapp-static/lux/components/AutosearchMessengers/index.tsx","xhh/./webapp-static/lux/components/AutosearchMessengers/AutosearchMessengersModal.tsx","xhh/./webapp-static/lux/components/BillingCartActivationNotification/index.tsx","xhh/./webapp-static/lux/modules/getDomainByCountryId.ts","xhh/./webapp-static/lux/modules/getSiteByCountryId.ts","xhh/./webapp-static/lux/components/BrandingMakeupNotification/index.tsx","xhh/./webapp-static/lux/hooks/useSiteByEmployerCountryId.ts","xhh/./webapp-static/lux/components/ChatikIntegration/constants.ts","xhh/./webapp-static/lux/components/CodeInjector/ContainerForXSL.tsx","xhh/./webapp-static/lux/components/CodeInjector/Portal.tsx","xhh/./webapp-static/lux/components/CodeInjector/index.tsx","xhh/./webapp-static/lux/components/Currency/index.tsx","xhh/./webapp-static/lux/components/ElementShownAnchor/index.tsx","xhh/./webapp-static/lux/components/Employer/VacanciesGroupsByRegion/VacancyGroupsTypes.ts","xhh/./webapp-static/lux/components/Footer/MobileAppButtons/MobileAppButton.tsx","xhh/./webapp-static/lux/components/Form/index.tsx","xhh/./webapp-static/lux/components/FormatMoney/index.tsx","xhh/./webapp-static/lux/components/HumanDate/index.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/utils.ts","xhh/./webapp-static/lux/components/Infotip/ClearButton.tsx","xhh/./webapp-static/lux/components/Infotip/index.tsx","xhh/./webapp-static/lux/components/InterviewReminder/index.tsx","xhh/./webapp-static/lux/components/NoIndex/index.tsx","xhh/./webapp-static/lux/components/Notifications/AccountDelete.jsx","xhh/./webapp-static/lux/components/Notifications/AccountLoginResendError.tsx","xhh/./webapp-static/lux/components/Notifications/AddAuthPhoneSuccess.tsx","xhh/./webapp-static/lux/components/Notifications/ApplicantJobSearchStatusSuccess.tsx","xhh/./webapp-static/lux/components/Notifications/ApplicantNoCallAnswer.tsx","xhh/./webapp-static/lux/components/Notifications/ApplicantResumes.jsx","xhh/./webapp-static/lux/components/Notifications/ApplicantServicesPayment.jsx","xhh/./webapp-static/lux/components/Notifications/ArchiveVacancyApplicantsFeedbackSuccess.tsx","xhh/./webapp-static/lux/components/Notifications/AuthEmployer.tsx","xhh/./webapp-static/lux/components/Notifications/ChangeTopicError.tsx","xhh/./webapp-static/lux/components/Notifications/ClickmeAutoCampaign.tsx","xhh/./webapp-static/lux/components/Notifications/DefaultError.tsx","xhh/./webapp-static/lux/components/Notifications/DisableCallTracking.tsx","xhh/./webapp-static/lux/components/Notifications/EmailTemplate.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerAccountSwitcher.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerAddresses.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerAuction.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerCarts.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerChangePassword.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerConstructor.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerDocuments.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerFinancialDocuments.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerManagersPage.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerSidebar.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerSidebarEdit.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerSimpleEdit.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerStructure.jsx","xhh/./webapp-static/lux/components/Notifications/EmployerVacancies.tsx","xhh/./webapp-static/lux/components/Notifications/EmployerVacanciesDraft.jsx","xhh/./webapp-static/lux/components/Notifications/HiringPlan.tsx","xhh/./webapp-static/lux/components/Notifications/HistoryErrorFetchingNotification.jsx","xhh/./webapp-static/lux/components/Notifications/InvalidDateInterval.tsx","xhh/./webapp-static/lux/components/Notifications/InvoicePaymentForm.tsx","xhh/./webapp-static/lux/components/Notifications/MailtoLimitExceeded.tsx","xhh/./webapp-static/lux/components/Notifications/ManagerDeleteSuccess.tsx","xhh/./webapp-static/lux/components/Notifications/ManagerForm.tsx","xhh/./webapp-static/lux/components/Notifications/NetworkError.tsx","xhh/./webapp-static/lux/components/Notifications/PersonalManager.jsx","xhh/./webapp-static/lux/components/Notifications/PolitenessIndex.tsx","xhh/./webapp-static/lux/components/Notifications/PriceAddContacts.tsx","xhh/./webapp-static/lux/components/Notifications/PriceBranding.tsx","xhh/./webapp-static/lux/components/Notifications/PriceCartError.tsx","xhh/./webapp-static/lux/components/Notifications/PriceClickmeProducts.tsx","xhh/./webapp-static/lux/components/Notifications/PriceDBAccess.tsx","xhh/./webapp-static/lux/components/Notifications/PurchaseNotification.tsx","xhh/./webapp-static/lux/components/Notifications/PurchaseServices.tsx","webpack://xhh/./webapp-static/lux/components/Notifications/RegionClarification/supernova-region-clarification.less?1692","xhh/./webapp-static/lux/components/Notifications/RegionClarification/index.tsx","xhh/./webapp-static/lux/components/Notifications/ResponsesActions.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeBatchUpdate.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeComplaint.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeContactsError.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeFolders.jsx","xhh/./webapp-static/lux/components/Notifications/ResumeForm.jsx","xhh/./webapp-static/lux/components/Notifications/ResumeFormEditError.jsx","xhh/./webapp-static/lux/components/Notifications/ResumeSidebar.tsx","xhh/./webapp-static/lux/components/ResumeView/NotificationTemplate.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeView.tsx","xhh/./webapp-static/lux/components/Notifications/TalantixResumeImportFailedNotification.jsx","xhh/./webapp-static/lux/components/Notifications/TalantixResumeImportedNotification.jsx","xhh/./webapp-static/lux/components/Notifications/TalantixResumeImportedNotificationPromo.jsx","xhh/./webapp-static/lux/components/Notifications/ResumeViewHeader.jsx","xhh/./webapp-static/lux/components/Notifications/SearchPublicationSettings.tsx","xhh/./webapp-static/lux/components/Notifications/SmsError.tsx","xhh/./webapp-static/lux/components/Notifications/SubscribeForm.tsx","xhh/./webapp-static/lux/components/Notifications/TargetEmployerResumes.jsx","xhh/./webapp-static/lux/components/Notifications/VacancyActionError.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyBlocked.ts","xhh/./webapp-static/lux/components/Notifications/VacancyCreate.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyResponseAbort.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyResponseError.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyResponses.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyResponsesFiltersForm.jsx","xhh/./webapp-static/lux/components/Notifications/VacancySavedSearch.tsx","xhh/./webapp-static/lux/components/Notifications/VacancySearchItemContactsError.tsx","xhh/./webapp-static/lux/components/Notifications/VacancySearchSubscriptions.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyView.tsx","xhh/./webapp-static/lux/components/Notifications/VacancyViewsCount.jsx","xhh/./webapp-static/lux/components/Notifications/VideoInterviewModal.js","xhh/./webapp-static/lux/components/Notifications/VideoInterviewSearchModal.tsx","xhh/./webapp-static/lux/components/Notifications/VrVacancies.js","xhh/./webapp-static/lux/components/Notifications/vacancyFavoriteNotifyTypes.ts","xhh/./webapp-static/lux/components/NovaFilters/NovaFilterUpdateContext.tsx","xhh/./webapp-static/lux/components/NovaFilters/SearchType.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/shared.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/resume.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancy.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancyMap.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/index.ts","xhh/./webapp-static/lux/components/NovaFilters/fetchMapVacancies.ts","xhh/./webapp-static/lux/components/NovaFilters/fetchResume.ts","xhh/./webapp-static/lux/components/NovaFilters/fetchVacancies.ts","xhh/./webapp-static/lux/components/NovaFilters/fetchVacancyCounts.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/adjustSavedArea.ts","xhh/./webapp-static/lux/components/NovaFilters/actions/sendFilterForm/index.ts","xhh/./webapp-static/lux/components/NovaFilters/hooks/useSendFilterForm.ts","xhh/./webapp-static/lux/components/NovaFilters/novaFilterUtils.ts","webpack://xhh/./webapp-static/lux/components/AppSmartBanner/index.less?eefc","xhh/./webapp-static/lux/components/AppSmartBanner/index.tsx","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/types.ts","webpack://xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/found-on-hh-content.less?02d0","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/FoundOnHHContent.tsx","webpack://xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/offers-content.less?ed34","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/OffersContent.tsx","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/ReasonsContent.tsx","webpack://xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/what-confused-content.less?4296","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/WhatConfusedContent.tsx","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/useFetchPossibleJobOffers.ts","webpack://xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/post-change-modal.less?77e1","xhh/./webapp-static/lux/components/Applicant/JobSearchStatus/PostChangeModal/index.tsx","xhh/./webapp-static/lux/hooks/useIsWebView.ts","webpack://xhh/./webapp-static/lux/components/CookiesPolicy/banner.less?25cc","xhh/./webapp-static/lux/components/CookiesPolicy/Banner.tsx","webpack://xhh/./webapp-static/lux/components/CookiesPolicy/informer.less?8dd0","xhh/./webapp-static/lux/components/CookiesPolicy/Informer.tsx","webpack://xhh/./webapp-static/lux/components/ImportantNotifications/important-notifications.less?f6fd","xhh/./webapp-static/lux/components/ImportantNotifications/index.tsx","xhh/./webapp-static/lux/components/EmailVerification/index.tsx","webpack://xhh/./webapp-static/lux/components/EmployerInformer/employer-informer.less?e850","xhh/./webapp-static/lux/components/EmployerInformer/index.tsx","xhh/./webapp-static/lux/components/EmployerZpOnboarding/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/MobileBanner/footer-mobile-banner.less?cd84","xhh/./webapp-static/lux/components/Footer/MobileBanner/Content.tsx","xhh/./webapp-static/lux/components/Footer/MobileBanner/Image.tsx","xhh/./webapp-static/lux/components/Footer/MobileBanner/index.tsx","xhh/./webapp-static/lux/hooks/useUserTypeForMenu.ts","xhh/./webapp-static/lux/components/Footer/Copyright/index.tsx","xhh/./webapp-static/lux/components/Footer/analytics.ts","xhh/./webapp-static/lux/components/Footer/MobileAppButtons/index.tsx","xhh/./webapp-static/lux/components/Footer/NavItems/ChatBot.tsx","webpack://xhh/./webapp-static/lux/components/Footer/Icon/icon.less?1792","xhh/./webapp-static/lux/components/Footer/Icon/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/NavItems/lang.less?9780","xhh/./webapp-static/lux/components/Footer/NavItems/Lang.tsx","xhh/./webapp-static/lux/components/Footer/NavItems/NavItemLink.tsx","webpack://xhh/./webapp-static/lux/components/Footer/NavItems/index.less?99d3","xhh/./webapp-static/lux/components/Footer/NavItems/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/NavItems/docs-nav-items.less?05fc","xhh/./webapp-static/lux/components/Footer/NavItems/Docs.tsx","webpack://xhh/./webapp-static/lux/components/Footer/NavSeparator/nav-separator.less?0037","xhh/./webapp-static/lux/components/Footer/NavSeparator/index.tsx","xhh/./webapp-static/lux/components/Footer/RecommendTechInfo/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/Requisites/requisites.less?ff68","xhh/./webapp-static/lux/components/Footer/Requisites/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/SocialNetworks/social-networks.less?fb6f","xhh/./webapp-static/lux/components/Footer/SocialNetworks/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/nav.less?765e","xhh/./webapp-static/lux/components/Footer/Nav.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Item.tsx","webpack://xhh/./webapp-static/lux/components/Footer/Services/services.less?57d3","xhh/./webapp-static/lux/components/Footer/Services/index.tsx","webpack://xhh/./webapp-static/lux/components/Footer/footer.less?ef0f","xhh/./webapp-static/lux/components/Footer/index.tsx","webpack://xhh/./webapp-static/lux/components/LoyaltySurveyModal/Counter/counter.less?cd16","xhh/./webapp-static/lux/components/LoyaltySurveyModal/Counter/index.tsx","xhh/./webapp-static/lux/components/LoyaltySurveyModal/constants.ts","xhh/./webapp-static/lux/components/LoyaltySurveyModal/StepHeader.tsx","webpack://xhh/./webapp-static/lux/components/LoyaltySurveyModal/Steps/steps.less?76bf","xhh/./webapp-static/lux/components/LoyaltySurveyModal/Steps/index.tsx","webpack://xhh/./webapp-static/lux/components/LoyaltySurveyModal/loyalty-survey-modal.less?b228","xhh/./webapp-static/lux/components/LoyaltySurveyModal/index.tsx","webpack://xhh/./webapp-static/lux/components/SiteExceptions/site-exceptions.less?9722","xhh/./webapp-static/lux/components/SiteExceptions/SiteException.tsx","xhh/./webapp-static/lux/components/SiteExceptions/index.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/Overlay.ts","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/AreaSwitcher/MenuItem.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/analytics.ts","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/DefaultMenuItem.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/MainContent.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/ServiceItem.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/ApplicantServicesOverlay.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/AreaSwitcher/Overlay.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/RenderProjectSelectedItem.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/EmployerProjectsOverlay.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/OverlayContent.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/ServicesMenuItem.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/Switchers.tsx","xhh/./webapp-static/lux/components/SupernovaOverlayMenu/index.tsx","xhh/./webapp-static/lux/components/TopPromoBanner/useIsShowTopBanner.ts","webpack://xhh/./webapp-static/lux/components/TopPromoBanner/top-promo-banner.less?e751","xhh/./webapp-static/lux/components/TopPromoBanner/index.tsx","xhh/./webapp-static/lux/components/UnsupportedBrowser/index.tsx","xhh/./webapp-static/lux/components/PageLayout/FullPageLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutHeader.tsx","xhh/./webapp-static/lux/components/PageLayout/MainContentRefContext.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/AddButton.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/ConditionSelect.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/IndustrySelect.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectOption.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/posUtils.ts","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/PosSelect.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectTitle.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectorDrop.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/QueryConditions.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/IndustryXsSelector.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/BottomSheetSelector.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsSelector.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsModal.tsx","webpack://xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/search-query.less?333f","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsButton.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/RemoveButton.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/SearchQueryInput.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/SearchQuery.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/ShowConditions.tsx","xhh/./webapp-static/lux/components/ResumeAdvancedSearch/SearchQueries/index.tsx","xhh/./webapp-static/lux/components/ResumesCountriesVisibility/types.ts","xhh/./webapp-static/lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilityFormDescription.tsx","xhh/./webapp-static/lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilityForm.tsx","xhh/./webapp-static/lux/components/StaticImg/index.tsx","webpack://xhh/./webapp-static/lux/components/SubscriptionInformer/subscription-informer.less?a6cd","xhh/./webapp-static/lux/components/SubscriptionInformer/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Badge.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/IsDashboardContext.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Link.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdownContext.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupportChatMessengers.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Link/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Text/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/useDeleteNotification.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaCounter.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaIcon.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/ChatikActivator/index.tsx","webpack://xhh/./webapp-static/lux/components/ImportResumeModal/import-resume.less?bcca","xhh/./webapp-static/lux/components/ImportResumeModal/AuthStep.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/ChooseStep.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/ResumeList.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/CopyStep.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/ErrorStep.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/ImportStep.tsx","xhh/./webapp-static/lux/components/ImportResumeModal/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaButton.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaNaviItem.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/useGoogleAnalytics.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/CreateResume/index.tsx","xhh/./webapp-static/lux/components/AppleBusinessChat/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/AppleBusinessChatComponent.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/AppleBusinessChatContext.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/AccountActions.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/useTrackElementShown.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdownOption.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/AppleBusinessChatActivator.tsx","webpack://xhh/./webapp-static/lux/components/SupernovaMainMenu/AccountTypeBadge/account-type-badge.less?1365","xhh/./webapp-static/lux/components/SupernovaMainMenu/AccountTypeBadge/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/CurrentUserFullName.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdownSection.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/ApplicantInfo.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerAccountSwitcher.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerInfo.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/ClickmeBalance.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/Money.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/FormatCount.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/OpenContacts.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/ResumeAccess.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/TalantixDaysLeft.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/Vacancies.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/VideoInterview.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerBillingInfoSection/EmployerBillingInfoSection.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerPanel.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployersReviews.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Kakdela.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/LogoffSudoUser.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/LogoffUser.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/PersonalManager.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/PersonalManagerPhones.tsx","webpack://xhh/./webapp-static/lux/components/SupernovaMainMenu/SupportChatActivator/SupportChatActivator.less?da09","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupportChatActivator/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SwitchAccount.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserInfo.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Icon/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Notification/Layout.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Notification/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Spacer/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/ApplicantCalling.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/constants.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/ApplicantFindJob.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/AutoInviteDisabled.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/BillingCardsToCardId.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/BillingCartActivation.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/BillingInvoiceFinish.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/BrandingMakeup.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/CallTracking.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/CareerConsult.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/CareerConsultWaitingForCall.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/CompleteResume.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/CompleteResumeWaitingForCall.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/DefaultInvariant.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/Employer2fa.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerChangeEmailByManager.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerChangeEmailReminder.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerConstructor.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerLoyaltySurvey.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerReviewCanEnable.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerReviewFeedbackCreated.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/HHRating.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/HRElkaSpecial.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/HRSpace.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/InterviewPractice.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/InterviewPracticeWaitingForCall.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/KingdomOfVacancy.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/NegotiationInterview.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/ResumeRenewalExpired.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/ResumeRenewalSoonExpires.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoProlongation.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoPublication.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/checkPlaceholder.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoUpdate.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyBlocked.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyDraftPublicationReady.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyScheduledPublication.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/config.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmptyAutoSearchVacancy.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/variants/EmptyNotification.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Content/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/useNotifications.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Mobile/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdown.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserTypeSwitcher.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/DropdownContent.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerMenu.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/MultiAccountSwitchInfotip.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerProfile.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/NaviLink.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/EmployerSignup.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/FavVacancies.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Feedback.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/GenericNavItem.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Help.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Login.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/analytics.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/Logo.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/ChatikActivator/ChatikActivatorMobile.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/CreateResumeButton.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupernovaDropdownSectionHeader.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/AppleBusinessChatMobile.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/MobileScreen.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/MobileServices.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/Mobile/MenuItem.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Mobile.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/MyResumes.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/NavItemWithDropdown.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SearchTabs.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/NaviSearchEmployerButtons.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/NaviSearch.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Search.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Signup.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/AppleBusinessChatMenu.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/Support.tsx","xhh/./webapp-static/lux/components/SupportChat/useSupportChat.ts","xhh/./webapp-static/lux/components/SupernovaMainMenu/SupportChatProvider.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserNotifications/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/UserProfile.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/VacancyResponses.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/index.tsx","xhh/./webapp-static/lux/components/SupernovaMainMenu/useTrackClicks.ts","xhh/./webapp-static/lux/components/SupernovaSearch/AdvancedSearchButton.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/AreaSwitcherModal.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/EmployerSearchHiddenFields.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/ResumeSearchHiddenFields.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/HiddenFields.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SearchButton.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SearchNameSelect.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SearchInput.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/useSearchInputValue.ts","xhh/./webapp-static/lux/components/SupernovaSearch/SearchSuggest.tsx","xhh/./webapp-static/lux/hooks/useSetStateWithCallback.ts","xhh/./webapp-static/lux/components/SupernovaSearch/SmartSuggest/SmartSuggestItems.tsx","webpack://xhh/./webapp-static/lux/components/SupernovaSearch/SmartSuggest/mobile-suggest.less?81ad","xhh/./webapp-static/lux/components/SupernovaSearch/SmartSuggest/MobileSuggest.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SmartSuggest/index.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/SmartSuggest/useSendAnalytics.ts","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchButton.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/types.ts","webpack://xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/styles.less?009e","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchForm.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchInfo.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchSuccess.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySavedSearchButton/index.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/VacancySearchHiddenFields.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/AdvancedSearchIconButton.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/index.tsx","xhh/./webapp-static/lux/components/SupernovaSearch/useAdvancedSearchHref.ts","xhh/./webapp-static/lux/components/SupernovaSearch/useHiddenAreaList.ts","xhh/./webapp-static/lux/components/SupernovaSearch/useSearchBaseState.ts","xhh/./webapp-static/lux/components/SupernovaSearch/useSearchNavItemProps.ts","xhh/./webapp-static/lux/components/SupernovaSearch/useSendFormSubmitEvent.ts","webpack://xhh/./webapp-static/lux/components/SupportChatPlate/SupportChatPlate.less?a1b5","xhh/./webapp-static/lux/components/SupportChatPlate/index.tsx","xhh/./webapp-static/lux/models/vacancyCreate/vacancyCreate.types.ts","xhh/./webapp-static/lux/components/VacancyCreate/utils.ts","xhh/./webapp-static/lux/components/VacancyResponseError/index.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/JobSearchStatusNotification.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/ResumeAutoHideNotification.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/VacancyResponseNotification.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/AlreadyRespondedPlate.jsx","xhh/./webapp-static/lux/components/VacancyResponseForm/Inconsistencies.jsx","xhh/./webapp-static/lux/components/VacancyResponseForm/LastLetterLink.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/Letter.jsx","xhh/./webapp-static/lux/components/VacancyResponseForm/VisibilityHint.jsx","xhh/./webapp-static/lux/components/VacancyResponseForm/Resume.jsx","xhh/./webapp-static/lux/components/VacancyResponseForm/ResumeSelector.tsx","xhh/./webapp-static/lux/components/VacancyResponseForm/index.jsx","xhh/./webapp-static/lux/components/VacancyResponseLink/index.tsx","xhh/./webapp-static/lux/components/VacancyResponsePopup/BottomSheet/utils.ts","xhh/./webapp-static/lux/components/VacancyResponseLink/postVacancyResponsePopup.ts","xhh/./webapp-static/lux/components/VacancyResponseLink/useQuickResponse.ts","xhh/./webapp-static/lux/components/VacancyResponsePopup/AdvertisingPopup.tsx","xhh/./webapp-static/lux/components/VacancyScheduledPublicationNotification/index.tsx","xhh/./webapp-static/lux/components/VacancySearchContent/components/SearchViewSwitcher.tsx","xhh/./webapp-static/lux/components/VacancySearchItem/Source.ts","xhh/./webapp-static/lux/components/VacancyView/VacancyActionResponse.tsx","xhh/./webapp-static/lux/components/VacancyView/hooks/useResponseQuestion.ts","xhh/./webapp-static/lux/components/VacancyView/scrolling.ts","xhh/./webapp-static/lux/components/translation/index.tsx","xhh/./webapp-static/lux/hooks/useAddEventPixelsRu.ts","xhh/./webapp-static/lux/hooks/useCountries.ts","xhh/./webapp-static/lux/hooks/useExperiment.ts","xhh/./webapp-static/lux/hooks/useExperimentCheckFunction.ts","xhh/./webapp-static/lux/hooks/useFavorite.ts","xhh/./webapp-static/lux/hooks/useFeatureEnabled.ts","xhh/./webapp-static/lux/hooks/useIsHrZarplataDomain.ts","xhh/./webapp-static/lux/hooks/useIsMenuHidden.ts","xhh/./webapp-static/lux/hooks/useMagritte.ts","xhh/./webapp-static/lux/hooks/useOnOffState.ts","xhh/./webapp-static/lux/hooks/usePlatform.ts","xhh/./webapp-static/lux/hooks/useResumeIdResponseStatuses.ts","xhh/./webapp-static/lux/hooks/useSites.ts","xhh/./webapp-static/lux/hooks/useSkillVerificationMethodsBreadcrumbs.ts","xhh/./webapp-static/lux/hooks/useToggleState.ts","xhh/./webapp-static/lux/hooks/useUrl.ts","xhh/./webapp-static/lux/hooks/vacancies/useRegisterInteraction.ts","xhh/./webapp-static/lux/models/LoginForm.ts","xhh/./webapp-static/lux/models/accountHistory/accountHistoryMoney.ts","xhh/./webapp-static/lux/models/accountTemporarilyLocked/index.ts","xhh/./webapp-static/lux/models/anonymousSignUp/anonymousSignUpModalShow.ts","xhh/./webapp-static/lux/models/anonymousSignUp/extractRequestUrlFromForm.ts","xhh/./webapp-static/lux/models/anonymousSignUp/hooks.ts","xhh/./webapp-static/lux/models/anonymousSignUp/index.ts","xhh/./webapp-static/lux/models/anonymousSignUp/paginationSigUpStore.ts","xhh/./webapp-static/lux/models/appLink.ts","xhh/./webapp-static/lux/models/applicant/jobSearchStatus.ts","xhh/./webapp-static/lux/models/applicantBlacklistEmployers.ts","xhh/./webapp-static/lux/models/applicantBlacklistVacancy.ts","xhh/./webapp-static/lux/models/applicantNegotiations/applicantEmployerManagersActivity.ts","xhh/./webapp-static/lux/models/applicantNegotiations/applicantNegotiationsActionsData.ts","xhh/./webapp-static/lux/models/applicantPaymentServices/index.ts","xhh/./webapp-static/lux/models/applicantResponseStreaks/index.ts","xhh/./webapp-static/lux/models/applicantResumes/index.ts","xhh/./webapp-static/lux/models/applicantRsvVerification/index.ts","xhh/./webapp-static/lux/models/applicantServicesPayment.ts","xhh/./webapp-static/lux/models/applicantSkillsVerificationError/index.ts","xhh/./webapp-static/lux/models/applicantSkillsVerificationResult/index.ts","xhh/./webapp-static/lux/models/applicantUserStatuses.ts","xhh/./webapp-static/lux/models/applicantVacancyResponseStatuses/index.ts","xhh/./webapp-static/lux/models/articlePage/index.ts","xhh/./webapp-static/lux/models/articleRating.ts","xhh/./webapp-static/lux/models/assessments.ts","xhh/./webapp-static/lux/models/auctionConfirmationModal.ts","xhh/./webapp-static/lux/models/auctionData.ts","xhh/./webapp-static/lux/models/auctionHhtmSourceLabel.ts","xhh/./webapp-static/lux/models/authUrl/index.ts","xhh/./webapp-static/lux/models/autoInvite.tsx","xhh/./webapp-static/lux/models/blogPage/index.ts","xhh/./webapp-static/lux/models/candidatesList.ts","xhh/./webapp-static/lux/models/chatBot/index.ts","xhh/./webapp-static/lux/models/clickme/clickmeAutoCampaignPromotion.ts","xhh/./webapp-static/lux/models/clickme/clickmeProducts.ts","xhh/./webapp-static/lux/models/clickme/clickmeVacancyPage.ts","xhh/./webapp-static/lux/models/clickmeAutoCampaign.ts","xhh/./webapp-static/lux/models/complaintReasonTypes/index.ts","xhh/./webapp-static/lux/models/counters.ts","xhh/./webapp-static/lux/models/currencies.types.ts","xhh/./webapp-static/lux/models/displayType.ts","xhh/./webapp-static/lux/models/employer/employerInfo.ts","xhh/./webapp-static/lux/models/employer/employerLastSearches.ts","xhh/./webapp-static/lux/models/employer/employerLogo.ts","xhh/./webapp-static/lux/models/employer/resume/commentsByUser.ts","xhh/./webapp-static/lux/models/employer/resume/pinnedChatMessages.ts","xhh/./webapp-static/lux/models/employer/resume/resumeComments.ts","xhh/./webapp-static/lux/models/employer/structure/changelog/employerDivisionChangelog.ts","xhh/./webapp-static/lux/models/employer/vacancyresponses/checkedTopics.ts","xhh/./webapp-static/lux/models/employer/vacancyresponses/collections.types.ts","xhh/./webapp-static/lux/models/employerAddressesPage/index.ts","xhh/./webapp-static/lux/models/employerAutomation/employerAutomationVacanciesAutoAction.ts","xhh/./webapp-static/lux/models/employerAutomation/employerAutomationVacanciesAutoInvite.ts","xhh/./webapp-static/lux/models/employerButtons/index.ts","xhh/./webapp-static/lux/models/employerCarts.ts","xhh/./webapp-static/lux/models/employerCategories/index.ts","xhh/./webapp-static/lux/models/employerConstructor/index.ts","xhh/./webapp-static/lux/models/employerConstructor/settings.ts","xhh/./webapp-static/lux/models/employerContactsVisibility.ts","xhh/./webapp-static/lux/models/employerDivisions.ts","xhh/./webapp-static/lux/models/employerDocuments/employerDocuments.ts","xhh/./webapp-static/lux/models/employerInvoiceActivationInfo/index.ts","xhh/./webapp-static/lux/models/employerInvoiceFinish/index.ts","xhh/./webapp-static/lux/models/employerInvoicePayment/index.ts","xhh/./webapp-static/lux/models/employerInvoicePurchase.ts","xhh/./webapp-static/lux/models/employerMailTemplates.ts","xhh/./webapp-static/lux/models/employerManagerPersonalData.ts","xhh/./webapp-static/lux/models/employerManagersPage.ts","xhh/./webapp-static/lux/models/employerMarketSegmentType/index.ts","xhh/./webapp-static/lux/models/employerNegotiations/index.ts","xhh/./webapp-static/lux/models/employerNegotiationsChangeTopic/error.types.ts","xhh/./webapp-static/lux/models/employerNegotiationsChangeTopic/index.ts","xhh/./webapp-static/lux/models/employerRecommendedSkills.ts","xhh/./webapp-static/lux/models/employerSettingsPage/index.ts","xhh/./webapp-static/lux/models/employerStatus.ts","xhh/./webapp-static/lux/models/employerVacancies/draftsPurchaseInfo.ts","xhh/./webapp-static/lux/models/employerVacancies/managerVacancies.ts","xhh/./webapp-static/lux/models/employerVacancies/managerVacanciesGroups.ts","xhh/./webapp-static/lux/models/employerVacancies/suitableCounterByVacancy.ts","xhh/./webapp-static/lux/models/employerVacancies/vacanciesCount.ts","xhh/./webapp-static/lux/models/employerVacancies/vacancy.types.ts","xhh/./webapp-static/lux/models/employerVacancies/vacancyHiringPlans.ts","xhh/./webapp-static/lux/models/employerVacancies/vacancyUpgrades.ts","xhh/./webapp-static/lux/models/extraFilters.ts","xhh/./webapp-static/lux/models/financialDocumentDeeds/financialDocumentDeeds.ts","xhh/./webapp-static/lux/models/globalStatistics.ts","xhh/./webapp-static/lux/models/isRedesignOnboarding.ts","xhh/./webapp-static/lux/models/locale.types.ts","xhh/./webapp-static/lux/models/loyaltySurvey.ts","xhh/./webapp-static/lux/models/messengers.ts","xhh/./webapp-static/lux/models/microFrontends.ts","xhh/./webapp-static/lux/models/notifications/index.ts","xhh/./webapp-static/lux/models/novaFilters.ts","xhh/./webapp-static/lux/models/oldEmployer/oldEmployerUpdates.ts","xhh/./webapp-static/lux/models/pickVacancyOnResumeSearch.ts","xhh/./webapp-static/lux/models/price/priceData.ts","xhh/./webapp-static/lux/models/price/priceEmployerBrand.ts","xhh/./webapp-static/lux/models/price/priceRecommended.ts","xhh/./webapp-static/lux/models/price/priceZp.ts","xhh/./webapp-static/lux/models/price/productCodes.ts","xhh/./webapp-static/lux/models/price/profRolesPublications/index.ts","xhh/./webapp-static/lux/models/price/regionalPublications/index.ts","xhh/./webapp-static/lux/models/priceClickmeProducts/index.tsx","xhh/./webapp-static/lux/models/printVersion.ts","xhh/./webapp-static/lux/models/relatedVacancies.ts","xhh/./webapp-static/lux/models/relatedVacanciesForEmployer.ts","xhh/./webapp-static/lux/models/resume/index.ts","xhh/./webapp-static/lux/models/resume/resumeAccess.types.ts","xhh/./webapp-static/lux/models/resume/resumeCommon.types.ts","xhh/./webapp-static/lux/models/resumeForm/attributes.ts","xhh/./webapp-static/lux/models/resumeSavedSearch.ts","xhh/./webapp-static/lux/models/resumeSearchCriteria.ts","xhh/./webapp-static/lux/models/resumeVisibility/resumeVisibilityEmployerBlacklist.ts","xhh/./webapp-static/lux/models/resumeVisibility/resumeVisibilityEmployerWhitelist.ts","xhh/./webapp-static/lux/models/resumeVisibility/resumeVisibilitySearchResultsBlacklist.ts","xhh/./webapp-static/lux/models/resumeVisibility/resumeVisibilitySearchResultsWhitelist.ts","xhh/./webapp-static/lux/models/resumesRelevantExperience.ts","xhh/./webapp-static/lux/models/rsvUserCompetencies/index.ts","xhh/./webapp-static/lux/models/search/advancedSearch.ts","xhh/./webapp-static/lux/models/search/resume/resumeSearchResult.ts","xhh/./webapp-static/lux/models/search/resume/searchQueries.ts","xhh/./webapp-static/lux/models/search/searchCriteria.types.ts","xhh/./webapp-static/lux/models/searchCatalogList/index.ts","xhh/./webapp-static/lux/models/searchCatalogType.ts","xhh/./webapp-static/lux/models/searchClusters.ts","xhh/./webapp-static/lux/models/searchClustersOrder.ts","xhh/./webapp-static/lux/models/searchClustersTip.ts","xhh/./webapp-static/lux/models/suitableVacancies.ts","xhh/./webapp-static/lux/models/supernovaSearchName.ts","xhh/./webapp-static/lux/models/supernovaUserType.ts","xhh/./webapp-static/lux/models/topFilterCatalog.ts","xhh/./webapp-static/lux/models/topLevelSite.ts","xhh/./webapp-static/lux/models/topPromoBanner.ts","xhh/./webapp-static/lux/models/unpremoderatedVacancyList.ts","xhh/./webapp-static/lux/models/userLabelsForVacancies/userLabels.ts","xhh/./webapp-static/lux/models/userNotifications.ts","xhh/./webapp-static/lux/models/userStats.ts","xhh/./webapp-static/lux/models/userType.ts","xhh/./webapp-static/lux/models/vacanciesGroupsByRegion/index.ts","xhh/./webapp-static/lux/models/vacancy/templates.ts","xhh/./webapp-static/lux/models/vacancyCallsPage.ts","xhh/./webapp-static/lux/models/vacancyCreate/availablePublicationTypes.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyAdvices.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyAdvices.types.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyAnalysis.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyCreateInitialBody.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyResponsesFilters.ts","xhh/./webapp-static/lux/models/vacancyMessages/index.ts","xhh/./webapp-static/lux/models/vacancyResponseFlags.ts","xhh/./webapp-static/lux/models/vacancyResponsePopup/popupType.types.ts","xhh/./webapp-static/lux/models/vacancyResponseQuestions.ts","xhh/./webapp-static/lux/models/vacancyResponsesAutomation/autoAction.ts","xhh/./webapp-static/lux/models/vacancySavedSearch.ts","xhh/./webapp-static/lux/models/vacancySearch/vacancySearchDictionaries.ts","xhh/./webapp-static/lux/models/vacancySearch/vacancySearchResult.ts","xhh/./webapp-static/lux/models/vacancySearchCriteria.ts","xhh/./webapp-static/lux/models/vacancyView.ts","xhh/./webapp-static/lux/models/vacancyViewTab.tsx","xhh/./webapp-static/lux/models/verificationActs/verificationActs.ts","xhh/./webapp-static/lux/models/vrSignupLogin.ts","xhh/./webapp-static/lux/modules/checkedExperiments.ts","xhh/./webapp-static/lux/modules/domainsWhitelist.ts","xhh/./webapp-static/lux/modules/employer/adviceTypes.ts","xhh/./webapp-static/lux/modules/experiments.ts","xhh/./webapp-static/lux/modules/finalForm/scrollToFirstError.ts","xhh/./webapp-static/lux/modules/history.js","xhh/./webapp-static/lux/modules/humanReadableList.ts","xhh/./webapp-static/lux/modules/notifications/HRElkaSpecial.ts","xhh/./webapp-static/lux/modules/notifications/HRSpace.ts","xhh/./webapp-static/lux/modules/price/addContacts.ts","xhh/./webapp-static/lux/modules/resumeSearch/enrichResumeSearchSuggest.ts","xhh/./webapp-static/lux/modules/routePaths.ts","xhh/./webapp-static/lux/pages/AccountAddEmail/index.tsx","xhh/./webapp-static/lux/pages/AccountCaptcha/index.tsx","xhh/./webapp-static/lux/pages/AccountConnect/index.jsx","xhh/./webapp-static/lux/pages/AccountDelete/index.jsx","xhh/./webapp-static/lux/pages/AccountDeleteAffirmation/index.jsx","xhh/./webapp-static/lux/pages/AccountDeleteConfirmation/index.jsx","xhh/./webapp-static/lux/pages/AccountDeleteGratitude/index.jsx","xhh/./webapp-static/lux/pages/AccountHistory/index.jsx","xhh/./webapp-static/lux/pages/AccountLogin/index.jsx","xhh/./webapp-static/lux/pages/AccountPhoneVerification/index.jsx","xhh/./webapp-static/lux/pages/AdvancedResumeSearch/index.tsx","xhh/./webapp-static/lux/pages/AdvancedVacancySearch/index.tsx","xhh/./webapp-static/lux/pages/Agencies/index.tsx","xhh/./webapp-static/lux/pages/AnonymousEmployer/index.tsx","xhh/./webapp-static/lux/pages/ApplicantAddAuthPhone/index.tsx","xhh/./webapp-static/lux/pages/ApplicantBlacklistEmployers/index.tsx","xhh/./webapp-static/lux/pages/ApplicantBlacklistVacancy/index.tsx","xhh/./webapp-static/lux/pages/ApplicantCountriesVisibility/index.tsx","xhh/./webapp-static/lux/pages/ApplicantNegotiations/index.jsx","xhh/./webapp-static/lux/pages/ApplicantPhoneVerification/index.jsx","xhh/./webapp-static/lux/pages/ApplicantPortrait/index.tsx","xhh/./webapp-static/lux/pages/ApplicantResumes/index.jsx","xhh/./webapp-static/lux/pages/ApplicantRsvVerifications/index.tsx","xhh/./webapp-static/lux/pages/ApplicantServicesPayment/index.jsx","xhh/./webapp-static/lux/pages/ApplicantSignup/index.jsx","xhh/./webapp-static/lux/pages/ApplicantSkillVerificationsMethod/index.tsx","xhh/./webapp-static/lux/pages/ApplicantSkillVerificationsMethods/index.tsx","xhh/./webapp-static/lux/pages/ApplicantSuitableVacancies/index.jsx","xhh/./webapp-static/lux/pages/ApplicantVacancyResponsesSummaryPayment/index.jsx","xhh/./webapp-static/lux/pages/ApplicantVacancyResponsesSummarySuccess/index.jsx","xhh/./webapp-static/lux/pages/ApplyAgreement/index.tsx","xhh/./webapp-static/lux/pages/Article/index.tsx","xhh/./webapp-static/lux/pages/AuthEmployer/index.jsx","xhh/./webapp-static/lux/pages/AuthEmployerAlready/index.jsx","xhh/./webapp-static/lux/pages/AuthEmployerDuplicated/index.tsx","xhh/./webapp-static/lux/pages/Away/index.tsx","xhh/./webapp-static/lux/pages/Blog/index.tsx","xhh/./webapp-static/lux/pages/CareerMarathonPayment/index.jsx","xhh/./webapp-static/lux/pages/CareerMarathonSuccess/index.jsx","xhh/./webapp-static/lux/pages/EmployerAddresses/index.jsx","xhh/./webapp-static/lux/pages/EmployerAdvices/index.tsx","xhh/./webapp-static/lux/pages/EmployerAutomationInfo/index.tsx","xhh/./webapp-static/lux/pages/EmployerCarts/index.tsx","xhh/./webapp-static/lux/pages/EmployerChangePassword/index.tsx","xhh/./webapp-static/lux/pages/EmployerConstructorWebView/index.jsx","xhh/./webapp-static/lux/pages/EmployerContactsVisibility/index.tsx","xhh/./webapp-static/lux/pages/EmployerDocuments/index.jsx","xhh/./webapp-static/lux/pages/EmployerDocumentsManagement/index.jsx","xhh/./webapp-static/lux/pages/EmployerEmailTemplates/index.tsx","xhh/./webapp-static/lux/pages/EmployerFinancialDocuments/index.jsx","xhh/./webapp-static/lux/pages/EmployerInvoiceFinish/index.tsx","xhh/./webapp-static/lux/pages/EmployerInvoicePayment/index.tsx","xhh/./webapp-static/lux/pages/EmployerMakeupWebView/index.tsx","xhh/./webapp-static/lux/pages/EmployerManagers/index.tsx","xhh/./webapp-static/lux/pages/EmployerManagersCreate/index.tsx","xhh/./webapp-static/lux/pages/EmployerNegotiationsChangeTopic/index.tsx","xhh/./webapp-static/lux/pages/EmployerQuotaHistory/index.tsx","xhh/./webapp-static/lux/pages/EmployerReviewsSettings/index.tsx","xhh/./webapp-static/lux/pages/EmployerSearchPublication/index.tsx","xhh/./webapp-static/lux/pages/EmployerSettings/index.tsx","xhh/./webapp-static/lux/pages/EmployerSidebarEdit/index.jsx","xhh/./webapp-static/lux/pages/EmployerStructure/index.jsx","xhh/./webapp-static/lux/pages/EmployerStructureChangelog/index.tsx","xhh/./webapp-static/lux/pages/EmployerSubscription/index.tsx","xhh/./webapp-static/lux/pages/EmployerUnpremoderatedVacancyList/index.tsx","xhh/./webapp-static/lux/pages/EmployerVacancies/index.jsx","xhh/./webapp-static/lux/pages/EmployerVacanciesArchived/index.tsx","xhh/./webapp-static/lux/pages/EmployerVacanciesDrafts/index.jsx","xhh/./webapp-static/lux/pages/EmployerVacanciesPromotion/index.tsx","xhh/./webapp-static/lux/pages/EmployerVacanciesTemplates/index.jsx","xhh/./webapp-static/lux/pages/EmployerVerificationActs/index.tsx","xhh/./webapp-static/lux/pages/EmployerView/index.jsx","xhh/./webapp-static/lux/pages/EmployersCompany/index.tsx","xhh/./webapp-static/lux/pages/EmployersList/index.tsx","xhh/./webapp-static/lux/pages/ErrorPage/index.tsx","xhh/./webapp-static/lux/pages/FastVacanciesSubscription/index.jsx","xhh/./webapp-static/lux/pages/Feedback/index.tsx","xhh/./webapp-static/lux/pages/ForbiddenPage/index.jsx","xhh/./webapp-static/lux/pages/IndexPage/index.jsx","xhh/./webapp-static/lux/pages/LegacyPage/index.jsx","xhh/./webapp-static/lux/pages/Mailto/index.tsx","xhh/./webapp-static/lux/pages/OauthAuthorize/index.tsx","xhh/./webapp-static/lux/pages/OauthAuthorizeEmployer/index.tsx","xhh/./webapp-static/lux/pages/OauthMergeByCode/index.jsx","xhh/./webapp-static/lux/pages/PartTimeVacancies/index.jsx","xhh/./webapp-static/lux/pages/PersonalManager/index.jsx","xhh/./webapp-static/lux/pages/PriceAddContacts/index.tsx","xhh/./webapp-static/lux/pages/PriceBranding/index.tsx","xhh/./webapp-static/lux/pages/PriceClickmeProducts/index.tsx","xhh/./webapp-static/lux/pages/PriceDBAccess/index.jsx","xhh/./webapp-static/lux/pages/PriceEmployerBrand/index.tsx","xhh/./webapp-static/lux/pages/PriceProfRolesPublications/index.tsx","xhh/./webapp-static/lux/pages/PriceRecommended/index.tsx","xhh/./webapp-static/lux/pages/PriceRegionalPublications/index.tsx","xhh/./webapp-static/lux/pages/PriceZp/index.tsx","xhh/./webapp-static/lux/pages/ProxyExternalService/index.tsx","xhh/./webapp-static/lux/pages/PurchaseServices/index.tsx","xhh/./webapp-static/lux/pages/RememberPassword/index.tsx","xhh/./webapp-static/lux/pages/RestorePassword/index.tsx","xhh/./webapp-static/lux/pages/ResumeBuilderAdditional/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderContacts/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderCreds/index.tsx","xhh/./webapp-static/lux/pages/ResumeBuilderEducation/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderExperience/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderPersonal/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderPhoto/index.jsx","xhh/./webapp-static/lux/pages/ResumeBuilderPosition/index.jsx","xhh/./webapp-static/lux/pages/ResumeCompletion/index.jsx","xhh/./webapp-static/lux/pages/ResumeFolder/index.jsx","xhh/./webapp-static/lux/pages/ResumeFolders/index.jsx","xhh/./webapp-static/lux/pages/ResumeFoldersSearch/index.jsx","xhh/./webapp-static/lux/pages/ResumeSavedSearch/index.tsx","xhh/./webapp-static/lux/pages/ResumeSearch/index.jsx","xhh/./webapp-static/lux/pages/ResumeSearchCatalog/index.jsx","xhh/./webapp-static/lux/pages/ResumeView/index.jsx","xhh/./webapp-static/lux/pages/ResumeVisibility/index.jsx","xhh/./webapp-static/lux/pages/SalaryStat/index.tsx","xhh/./webapp-static/lux/pages/SearchCatalogList/index.tsx","xhh/./webapp-static/lux/pages/ShortResume/index.jsx","xhh/./webapp-static/lux/pages/Subscribe/index.tsx","xhh/./webapp-static/lux/pages/TargetAgenciesPayment/index.jsx","xhh/./webapp-static/lux/pages/TargetEmployerResumes/index.jsx","xhh/./webapp-static/lux/pages/Unsubscribe/index.tsx","xhh/./webapp-static/lux/pages/VacanciesProbationCatalog/index.jsx","xhh/./webapp-static/lux/pages/VacancyConstructor/index.jsx","xhh/./webapp-static/lux/pages/VacancyConstructorMobilePreview/index.jsx","xhh/./webapp-static/lux/pages/VacancyConstructorTemplatePreview/index.jsx","xhh/./webapp-static/lux/pages/VacancyCreate/index.jsx","xhh/./webapp-static/lux/pages/VacancyCreatePromo/index.jsx","xhh/./webapp-static/lux/pages/VacancyDuplicate/index.jsx","xhh/./webapp-static/lux/pages/VacancyEdit/index.jsx","xhh/./webapp-static/lux/pages/VacancyFavorite/index.jsx","xhh/./webapp-static/lux/pages/VacancyMetroCatalog/index.jsx","xhh/./webapp-static/lux/pages/VacancyMetroMain/index.tsx","xhh/./webapp-static/lux/pages/VacancyPreview/index.jsx","xhh/./webapp-static/lux/pages/VacancyPrint/index.jsx","xhh/./webapp-static/lux/pages/VacancyResponse/index.jsx","xhh/./webapp-static/lux/pages/VacancyResponses/index.jsx","xhh/./webapp-static/lux/pages/VacancyResponsesAutoAction/index.tsx","xhh/./webapp-static/lux/pages/VacancyResponsesAutoInvite/index.tsx","xhh/./webapp-static/lux/pages/VacancyResponsesCalls/index.tsx","xhh/./webapp-static/lux/pages/VacancyRestore/index.jsx","xhh/./webapp-static/lux/pages/VacancySavedSearch/index.tsx","xhh/./webapp-static/lux/pages/VacancySearch/index.jsx","xhh/./webapp-static/lux/pages/VacancySearchCatalog/index.jsx","xhh/./webapp-static/lux/pages/VacancySearchMap/index.jsx","xhh/./webapp-static/lux/pages/VacancyTemplate/index.jsx","xhh/./webapp-static/lux/pages/VacancyView/index.jsx","xhh/./webapp-static/lux/pages/VideoVacancy/index.tsx","xhh/./webapp-static/lux/pages/VrSignupLogin/index.tsx","xhh/./webapp-static/lux/pages/VrVacancies/index.jsx","xhh/./webapp-static/lux/pages/WantWorkPayment/index.jsx","xhh/./webapp-static/lux/modules/routes.js","xhh/./webapp-static/lux/modules/analytics/pageLocationForGA.ts","xhh/./webapp-static/lux/middlewares/locationChangeMiddleware.ts","xhh/./webapp-static/lux/models/accountConnect.ts","xhh/./webapp-static/lux/models/accountConnectResponse.ts","xhh/./webapp-static/lux/models/accountDelete/index.ts","xhh/./webapp-static/lux/models/accountHistory/accountHistoryExpenditures.ts","xhh/./webapp-static/lux/models/accountHistory/accountHistoryReplenishments.ts","xhh/./webapp-static/lux/models/accountHistory/accountHistoryServices.ts","xhh/./webapp-static/lux/models/accountHistoryActionsData.ts","xhh/./webapp-static/lux/models/accountPhone/verification.ts","xhh/./webapp-static/lux/models/agencies.ts","xhh/./webapp-static/lux/models/anonymousDashboard.ts","xhh/./webapp-static/lux/models/anonymousEmployer/index.ts","xhh/./webapp-static/lux/models/appleBusinessChat.ts","xhh/./webapp-static/lux/models/applicantActivity.ts","xhh/./webapp-static/lux/models/applicantEmployerPoliteness.ts","xhh/./webapp-static/lux/models/applicantNegotiations/applicantNegotiations.ts","xhh/./webapp-static/lux/models/applicantNegotiations/vacanciesShort.ts","xhh/./webapp-static/lux/models/applicantPortraitCategories.ts","xhh/./webapp-static/lux/models/applicantResumesStatistics/index.ts","xhh/./webapp-static/lux/models/applicantSettingsMenu.ts","xhh/./webapp-static/lux/models/applicantSignup/index.ts","xhh/./webapp-static/lux/models/applicantSubscriptions.ts","xhh/./webapp-static/lux/models/applyAgreement/index.ts","xhh/./webapp-static/lux/models/articleViews.ts","xhh/./webapp-static/lux/models/artifactRules/index.ts","xhh/./webapp-static/lux/models/authNewEmployerCategories.ts","xhh/./webapp-static/lux/models/authNewEmployerFields.ts","xhh/./webapp-static/lux/models/authNewEmployerInitialValues.ts","xhh/./webapp-static/lux/models/authPhone/index.ts","xhh/./webapp-static/lux/models/availableVacancyActions.ts","xhh/./webapp-static/lux/models/banners/adsSearchParams.ts","xhh/./webapp-static/lux/models/banners/adsVacancyParams.ts","xhh/./webapp-static/lux/models/banners/banners.ts","xhh/./webapp-static/lux/models/blogViews.ts","xhh/./webapp-static/lux/models/brandedVacancyTemplates.ts","xhh/./webapp-static/lux/models/brandingPromotion.ts","xhh/./webapp-static/lux/models/candidates.ts","xhh/./webapp-static/lux/models/canvacVacancySalaryData.ts","xhh/./webapp-static/lux/models/chatik/index.ts","xhh/./webapp-static/lux/models/companiesOfTheDay.ts","xhh/./webapp-static/lux/models/config.ts","xhh/./webapp-static/lux/models/contactPhones.ts","xhh/./webapp-static/lux/models/countriesProfileVisibilityAgreement/index.ts","xhh/./webapp-static/lux/models/crosslinks.ts","xhh/./webapp-static/lux/models/currencies.ts","xhh/./webapp-static/lux/models/device.ts","xhh/./webapp-static/lux/models/distances.ts","xhh/./webapp-static/lux/models/employer/registrationPresentsByCountryId.ts","xhh/./webapp-static/lux/models/employer/settingsMenu.ts","xhh/./webapp-static/lux/models/employer/structure/serviceAdditional.ts","xhh/./webapp-static/lux/models/employerAdvice/index.ts","xhh/./webapp-static/lux/models/employerAdvice/list.ts","xhh/./webapp-static/lux/models/employerAutomation/employerAutomationStatistics.ts","xhh/./webapp-static/lux/models/employerBillingInfo.ts","xhh/./webapp-static/lux/models/employerChangePassword/index.tsx","xhh/./webapp-static/lux/models/employerChecks/index.tsx","xhh/./webapp-static/lux/models/employerCompanyMenu.ts","xhh/./webapp-static/lux/models/employerConstructor/autoAddWidget.ts","xhh/./webapp-static/lux/models/employerConsumptionSegmentType/index.ts","xhh/./webapp-static/lux/models/employerDepartments.ts","xhh/./webapp-static/lux/models/employerDocuments/settings.ts","xhh/./webapp-static/lux/models/employerEdoList/index.tsx","xhh/./webapp-static/lux/models/employerEmailTemplates.ts","xhh/./webapp-static/lux/models/employerImplants.ts","xhh/./webapp-static/lux/models/employerIndexPage.ts","xhh/./webapp-static/lux/models/employerInsiders.ts","xhh/./webapp-static/lux/models/employerInvoiceCart/index.ts","xhh/./webapp-static/lux/models/employerManager.ts","xhh/./webapp-static/lux/models/employerManagersList.ts","xhh/./webapp-static/lux/models/employerQuotaHistory.ts","xhh/./webapp-static/lux/models/employerResumes/negotiationLinks.ts","xhh/./webapp-static/lux/models/employerSearchPublicationSettings.ts","xhh/./webapp-static/lux/models/employerVacanciesRise.ts","xhh/./webapp-static/lux/models/employerVacancyPromotion/index.ts","xhh/./webapp-static/lux/models/employersCompany.ts","xhh/./webapp-static/lux/models/employersList/index.ts","xhh/./webapp-static/lux/models/errorPage.ts","xhh/./webapp-static/lux/models/experiments/index.ts","xhh/./webapp-static/lux/models/favoriteVacancies.ts","xhh/./webapp-static/lux/models/feedbackRecipients/index.ts","xhh/./webapp-static/lux/models/financialDocumentDeeds/filters.ts","xhh/./webapp-static/lux/models/floodlightUtm.ts","xhh/./webapp-static/lux/models/folderContent.ts","xhh/./webapp-static/lux/models/giftedResumes.ts","xhh/./webapp-static/lux/models/langs.ts","xhh/./webapp-static/lux/models/linkCheck/index.ts","xhh/./webapp-static/lux/models/lowActivityVacancies.ts","xhh/./webapp-static/lux/models/mailto.ts","xhh/./webapp-static/lux/models/managerAnnouncementBanner.ts","xhh/./webapp-static/lux/models/managerCluster/index.ts","xhh/./webapp-static/lux/models/managerNegotiationStats/index.ts","xhh/./webapp-static/lux/models/negotiationsHistory/index.ts","xhh/./webapp-static/lux/models/newEmployerDashboardVacancy.ts","xhh/./webapp-static/lux/models/pageMetaData.ts","xhh/./webapp-static/lux/models/personalManager/index.ts","xhh/./webapp-static/lux/models/personalManagerMenu.ts","xhh/./webapp-static/lux/models/platformInfo.ts","xhh/./webapp-static/lux/models/politenessIndex.ts","xhh/./webapp-static/lux/models/postponedActions/index.tsx","xhh/./webapp-static/lux/models/price/priceBranding/index.ts","xhh/./webapp-static/lux/models/price/priceCart.ts","xhh/./webapp-static/lux/models/price/priceDbAccess.ts","xhh/./webapp-static/lux/models/price/pricePageMetaInfo.ts","xhh/./webapp-static/lux/models/priceAddContacts/index.tsx","xhh/./webapp-static/lux/models/probationCatalog.ts","xhh/./webapp-static/lux/models/professionalRoleCategoryCollection.ts","xhh/./webapp-static/lux/models/professionsList.ts","xhh/./webapp-static/lux/models/ratingTags/index.tsx","xhh/./webapp-static/lux/models/readOnlyBanner.ts","xhh/./webapp-static/lux/models/recommendedVacancies.ts","xhh/./webapp-static/lux/models/relocationWarning/index.ts","xhh/./webapp-static/lux/models/restorePasswordConditions/index.tsx","xhh/./webapp-static/lux/models/resumeFolders.ts","xhh/./webapp-static/lux/models/resumeForm/conditions.ts","xhh/./webapp-static/lux/models/resumeForm/defaults.ts","xhh/./webapp-static/lux/models/resumeForm/fields.ts","xhh/./webapp-static/lux/models/resumeForm/languages.ts","xhh/./webapp-static/lux/models/resumeForm/moderationNotes.ts","xhh/./webapp-static/lux/models/resumeForm/vacancy.ts","xhh/./webapp-static/lux/models/resumeLimits.ts","xhh/./webapp-static/lux/models/resumeSearchDictionaries.ts","xhh/./webapp-static/lux/models/resumeSearchQuery.ts","xhh/./webapp-static/lux/models/resumeShareButtons/index.ts","xhh/./webapp-static/lux/models/resumeViewHistory/index.ts","xhh/./webapp-static/lux/models/resumeZp.ts","xhh/./webapp-static/lux/models/resumesComplaint/index.tsx","xhh/./webapp-static/lux/models/salaryStat.ts","xhh/./webapp-static/lux/models/savedFilters.ts","xhh/./webapp-static/lux/models/scheduledInterviews.ts","xhh/./webapp-static/lux/models/search/advancedVacancySearch.ts","xhh/./webapp-static/lux/models/searchCatalog.ts","xhh/./webapp-static/lux/models/searchClustersSettings.ts","xhh/./webapp-static/lux/models/searchExplanation.ts","xhh/./webapp-static/lux/models/searchMapResponse.ts","xhh/./webapp-static/lux/models/session.ts","xhh/./webapp-static/lux/models/skillsSurveyTrls.ts","xhh/./webapp-static/lux/models/snippetAccessResume/snippetAccessResume.ts","xhh/./webapp-static/lux/models/socialNetworksLinks.ts","xhh/./webapp-static/lux/models/sortingFilters.ts","xhh/./webapp-static/lux/models/stayInTouch.ts","xhh/./webapp-static/lux/models/subscriptionInformer.ts","xhh/./webapp-static/lux/models/supernovaNaviMenu.ts","xhh/./webapp-static/lux/models/supportChat.ts","xhh/./webapp-static/lux/models/topicsCallHistory.ts","xhh/./webapp-static/lux/models/trl.ts","xhh/./webapp-static/lux/models/updateInfo/index.ts","xhh/./webapp-static/lux/models/userSearchPointsByResumeHash/index.ts","xhh/./webapp-static/lux/models/userTargeting.ts","xhh/./webapp-static/lux/models/vacanciesOfTheDay.ts","xhh/./webapp-static/lux/models/vacancy/templateForEdit.ts","xhh/./webapp-static/lux/models/vacancyAnalyticsConversion/index.ts","xhh/./webapp-static/lux/models/vacancyConstructorSettings/index.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyDiscountPromoControlsInfo.ts","xhh/./webapp-static/lux/models/vacancyCreate/vacancyPurchaseProducts.ts","xhh/./webapp-static/lux/models/vacancyCreate/withZpCrossPost.ts","xhh/./webapp-static/lux/models/vacancyCreate/index.ts","xhh/./webapp-static/lux/models/vacancyFeatures.ts","xhh/./webapp-static/lux/models/vacancyFull.ts","xhh/./webapp-static/lux/models/vacancyInternalInfo.ts","xhh/./webapp-static/lux/models/vacancyMetro/index.ts","xhh/./webapp-static/lux/models/vacancyOnlineUsersCounters.ts","xhh/./webapp-static/lux/models/vacancyResponsePopup/index.ts","xhh/./webapp-static/lux/models/vacancyResponseSummary/index.ts","xhh/./webapp-static/lux/models/vacancyResponsesFiltersDicts.ts","xhh/./webapp-static/lux/models/vacancySearch/novaSorts.ts","xhh/./webapp-static/lux/models/vacancyTests.ts","xhh/./webapp-static/lux/models/vacation.ts","xhh/./webapp-static/lux/models/vrVacancies/index.tsx","xhh/./webapp-static/lux/models/workInOtherCities.ts","xhh/./webapp-static/lux/modules/rootReducer.ts","xhh/./webapp-static/lux/modules/state/mutators.js","xhh/./webapp-static/lux/modules/state/trlMutator.js","xhh/./webapp-static/lux/modules/store.js","xhh/./webapp-static/lux/modules/symbols.ts","xhh/./webapp-static/lux/modules/typedStore.ts","xhh/./webapp-static/lux/modules/useSelector.ts","xhh/./webapp-static/lux/modules/userLabels.ts","xhh/./webapp-static/lux/modules/uxfeedback.ts","webpack://xhh/./webapp-static/lux/components/AppPromoBanner/ZPView/index.less?b4cf","xhh/./webapp-static/lux/components/AppPromoBanner/ZPView/index.tsx","xhh/./webapp-static/lux/components/AppPromoBanner/index.tsx","xhh/./webapp-static/lux/components/ChatikIntegration/utils/putNotificationToBell.tsx","xhh/./webapp-static/lux/components/Notifications/ResumeCreationScenario.tsx","xhh/./webapp-static/lux/components/ChatikIntegration/components/ResumeCreationScenario.tsx","xhh/./webapp-static/lux/components/Notifications/ChatikError.tsx","xhh/./webapp-static/lux/components/ChatikIntegration/hooks/useInitParams.ts","xhh/./webapp-static/lux/components/ChatikIntegration/hooks/useUnreadChatsCountTitleNotification.ts","xhh/./webapp-static/lux/modules/sendDebugDataToTestHH.ts","xhh/./webapp-static/lux/components/ChatikIntegration/utils/collectDebugData.ts","xhh/./webapp-static/lux/components/ChatikIntegration/utils/uxFeedback.ts","xhh/./webapp-static/lux/components/ChatikIntegration/utils/handlers.ts","xhh/./webapp-static/lux/components/ChatikIntegration/utils/shouldUseCounterUpdater.ts","xhh/./webapp-static/lux/components/ChatikIntegration/index.tsx","xhh/./webapp-static/lux/components/DeepLinkCommand/constants.ts","xhh/./webapp-static/lux/components/DeepLinkCommand/hooks/useOpenChatCommand.ts","xhh/./webapp-static/lux/components/DeepLinkCommand/types.ts","xhh/./webapp-static/lux/components/DeepLinkCommand/utils/getCommandFromQueryParams.ts","xhh/./webapp-static/lux/components/DeepLinkCommand/constants/deepLinkAccessiblePaths.ts","xhh/./webapp-static/lux/components/DeepLinkCommand/index.tsx","xhh/./webapp-static/lux/components/DeepLinkCommand/utils/isDeepLinkAccessible.ts","xhh/./webapp-static/lux/components/DevBuild/Loader.tsx","xhh/./webapp-static/lux/components/LinearProgress/index.jsx","xhh/./webapp-static/lux/themes/magritteHHDayTheme.ts","xhh/./webapp-static/lux/themes/magritteZPDayTheme.ts","xhh/./webapp-static/lux/components/MagritteThemeProvider/index.tsx","xhh/./webapp-static/lux/components/Notifications/NotificationAnalytics.tsx","xhh/./webapp-static/lux/components/Notifications/SimilarResumeForVacancies.jsx","xhh/./webapp-static/lux/components/VacancyFavorite/AllowReplacement.jsx","xhh/./webapp-static/lux/components/Notifications/VacancyFavoriteError.jsx","xhh/./webapp-static/lux/components/Notifications/VacancyFavoriteSuccess.jsx","xhh/./webapp-static/lux/components/Notifications/config.js","xhh/./webapp-static/lux/components/Notifications/index.jsx","webpack://xhh/./webapp-static/lux/components/ResumesCountriesVisibility/resumes-visibility-settings-modal.less?96ec","xhh/./webapp-static/lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilitySettingsModal.tsx","xhh/./webapp-static/lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilitySettingsModalContainer.tsx","xhh/./webapp-static/lux/components/SupernovaNotificationManager/index.tsx","xhh/./webapp-static/lux/components/UserNotifications/common/SynchronizedNotification.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/AdvertisementAgreement.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/ApplicantFeedbackAboutVacancy.tsx","webpack://xhh/./webapp-static/lux/components/UserNotifications/variants/ApplicantJobSearchStatus/applicant-job-search-status.less?abea","xhh/./webapp-static/lux/components/UserNotifications/variants/ApplicantJobSearchStatus/Content.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/ApplicantJobSearchStatus/index.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/BaseNotification.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/BillingCartActivation.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/BrandingMakeup.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/BuyEmployerPageConstructor.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/BuyVacancyPageConstructor.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/CallTracking.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/ClientDay.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmailVerificationErrorAgain.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmailVerificationWasSent.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmployerHhRatingResults.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmployerItAccreditation.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmployerOverspending.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmployerPricesIncrease.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EmployerYearResults.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/EsiaAccountNotLinked.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/FillEmployerPageConstructor.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/FillEmployerVacancyPageConstructor.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/GreetingsFromZarplata.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/HHRating.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/HRElkaSpecial.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/HRSpace.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/LoyaltySurvey.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/ScheduleInterview.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/SiteWasUnavailable.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/SkillVerificationExpiring.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/VacancyBlocked.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/VacancyDraftPublicationReady.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/VacancyDraftSaved.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/VacancyScheduledPublication.tsx","xhh/./webapp-static/lux/components/UserNotifications/variants/VideoInterview.tsx","xhh/./webapp-static/lux/components/UserNotifications/config.ts","xhh/./webapp-static/lux/components/UserNotifications/index.tsx","xhh/./webapp-static/lux/modules/findNotIsoDates.ts","xhh/./webapp-static/lux/pages/App/index.jsx","xhh/./webapp-static/lux/pages/EmployerConstructor/index.jsx","xhh/./webapp-static/lux/pages/EmployerSimpleEdit/index.jsx","xhh/./webapp-static/lux/requests/notifications/addNotification.ts","xhh/./webapp-static/lux/requests/notifications/showDefaultError.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"employerZpOnboardingFooterWrapper\":\"employer-zp-onboarding-footer-wrapper--wEpxwTgfrEoQqNKfyGcV\",\"employerZpOnboardingFooterControls\":\"employer-zp-onboarding-footer-controls--Pi0M1CIJVWmexCYj991v\",\"employerZpOnboardingImage\":\"employer-zp-onboarding-image--SfzvHo03_R6_VggZAg6I\",\"employerZpOnboardingImageStart\":\"employer-zp-onboarding-image_start--fuXsvjk3o06rXtFdWaFJ\",\"employerZpOnboardingImageActiveVacancies\":\"employer-zp-onboarding-image_active-vacancies--C3q4heasx05V0dYOwcxg\",\"employerZpOnboardingImageActiveVacanciesMore\":\"employer-zp-onboarding-image_active-vacancies-more--F7EQ53b2H3wF0BCo6yvD\",\"employerZpOnboardingImageArchivedVacancies\":\"employer-zp-onboarding-image_archived-vacancies--S89qjne1tQjoiaRfCGTE\",\"employerZpOnboardingImageOrders\":\"employer-zp-onboarding-image_orders--Fkpxf9x4rtv11V_8RwYk\",\"employerZpOnboardingImageClosingDocs\":\"employer-zp-onboarding-image_closing-docs--loiIbZDI6TEsFDi0I7YF\",\"employerZpOnboardingImageSubscriptions\":\"employer-zp-onboarding-image_subscriptions--Bi7btR18HvuDU_dJsd5V\",\"employerZpOnboardingImageFavourites\":\"employer-zp-onboarding-image_favourites--nzeUbcDw1M9NeXexm99w\",\"employerZpOnboardingImageEnd\":\"employer-zp-onboarding-image_end--v_Oq_cpwgkIA8LWZJTMX\"};","// extracted by mini-css-extract-plugin\nexport default {\"mobileAppButtons\":\"mobile-app-buttons--aUSZuHMH41kx1rbRl6PZ\",\"onlyButtons\":\"only-buttons--FORCpGXaOZRam2LCOMPl\",\"mobileAppButton\":\"mobile-app-button--GmJwG60xpK_HW3vngd_n\",\"mobileAppButtonAndroid\":\"mobile-app-button_android--iChEmjQ2ruzq428iV8r9\",\"mobileAppButtonIos\":\"mobile-app-button_ios--Zi1CXs86lebCiP24BZVN\",\"mobileAppButtonHuawei\":\"mobile-app-button_huawei--wUI9LROy4yDqzpL0C7iQ\",\"qrCode\":\"qr-code--BTnoAho8WzDAVxKaEH7A\",\"qr\":\"qr--zU4JKQg3d0782sVdiq1a\",\"qrApplicant\":\"qr-applicant--uUxuKwAodsu6ZElFjsNV\",\"qrEmployer\":\"qr-employer--zNyD71uZtXoSZFYYh9Fx\",\"qrApplicantRabotaby\":\"qr-applicant_rabotaby--pYPA3CYGRwqzIRnWlAdc\",\"qrEmployerRabotaby\":\"qr-employer_rabotaby--njOYm3swZGuuRL4UIIw9\"};","import Debug from 'HHC/Debug';\nimport fetcher from 'lux/modules/fetcher';\n\nconst NOTIFICATION_ACKNOWLEDGED_URL = '/applicant/reviews/acknowledged';\n\ndeclare global {\n    interface FetcherPostApi {\n        [NOTIFICATION_ACKNOWLEDGED_URL]: {\n            body: void;\n            queryParams: void;\n            response: void;\n        };\n    }\n}\n\nexport default (): void => {\n    fetcher.post(NOTIFICATION_ACKNOWLEDGED_URL).catch((error) => Debug.log('out error', error));\n};\n","import { DefaultRootState } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\nimport Metrics from 'bloko/common/metrics';\nimport { TypeElementMetrics } from 'bloko/common/types';\n\nconst MINIMUM_NOTIFICATIONS_COUNT_FOR_ANALYTICS = 2;\n\ninterface NotificationMetrics {\n    count: number;\n    viewportHeight: number;\n    notificationManagerBottom: number;\n    breakpoint: Breakpoint;\n    // tempexp_28215_start\n    notifications?: string[];\n    userNotifications?: string[];\n    // tempexp_28215_end\n}\n\nexport default function sendNotificationManagerAnalytics(\n    notificationManagerElement: Element,\n    getState?: () => DefaultRootState\n): void {\n    let notificationMetrics: NotificationMetrics;\n    let attemptsLeft = 3;\n\n    const setNotificationMetrics = () => {\n        const shownNotificationsCount = notificationManagerElement.children.length;\n        if (\n            shownNotificationsCount < MINIMUM_NOTIFICATIONS_COUNT_FOR_ANALYTICS ||\n            (notificationMetrics && notificationMetrics.count > shownNotificationsCount)\n        ) {\n            return;\n        }\n\n        notificationMetrics = {\n            count: shownNotificationsCount,\n            viewportHeight: Metrics.getViewportMetrics().height,\n            // Т.к. у Bloko-Notification-Manager нулевая высота - вычисляем bottom у последнего уведомления\n            notificationManagerBottom: Metrics.getMetrics(\n                notificationManagerElement.lastElementChild as TypeElementMetrics\n            ).bottom,\n            breakpoint: getBreakpoint(),\n        };\n        // tempexp_28215_start\n        if (getState) {\n            const { notifications, userNotifications } = getState();\n            notificationMetrics.notifications = notifications.map(({ type }) => type);\n            notificationMetrics.userNotifications = userNotifications.map(({ templateKey }) => templateKey);\n        }\n        // tempexp_28215_end\n    };\n\n    function sendNotificationMetricsAnalytics() {\n        setTimeout(() => {\n            attemptsLeft -= 1;\n            setNotificationMetrics();\n            if (attemptsLeft === 0) {\n                notificationMetrics && Analytics.sendHHEvent('initial-notifications-shown', notificationMetrics);\n                return;\n            }\n            sendNotificationMetricsAnalytics();\n        }, 3000);\n    }\n    sendNotificationMetricsAnalytics();\n}\n","const bodyHasActiveOverlayClass = 'has-active-overlay';\n\n// Ставит/снимает класс has-active-overlay у body\n//\n// Нужно использовать при показе или скрытии оверлеев\n// располагающихся в правом нижнем углу для избежания перекрытия\n//\n// При наличии этого класса активные элементы находящиеся\n// в правом нижнем углу скрываются\n//\n// Если нужно расположить активный элемент в правом нижнем углу\n// и избежать пересечений с оверлеями базирующимися там же,\n// то следеут скрывать его при наличии у родителя этого класса\n//\n// Например:\n// .my-awesome-activator {\n//     .has-active-overlay & {\n//         display: none;\n//     }\n// }\n//\n\nexport default {\n    overlayOpened: (): void => {\n        if (!document.body.classList.contains(bodyHasActiveOverlayClass)) {\n            document.body.classList.add(bodyHasActiveOverlayClass);\n        }\n    },\n    overlayClosed: (): void => {\n        if (document.body.classList.contains(bodyHasActiveOverlayClass)) {\n            document.body.classList.remove(bodyHasActiveOverlayClass);\n        }\n    },\n};\n","import axios from 'HHC/Axios';\n\nconst markAsViewed = (name: string, data?: unknown): void => {\n    axios.post('/notices/mark_as_viewed', { name, ...(data ? { data } : {}) }).catch(console.error);\n};\n\nexport enum MarkAsViewedEvent {\n    None = 'NONE',\n    OnShow = 'ON_SHOW',\n    OnHide = 'ON_HIDE',\n}\n\nexport default { markAsViewed };\n","import axios from 'HHC/Axios';\nimport Debug from 'HHC/Debug';\n\nexport const markUserNotificationsAsViewed = async (ids: number[] | string[] | string | number): Promise<void> => {\n    try {\n        await axios.post(\n            '/shards/notifications/mark_as_viewed',\n            Array.isArray(ids) ? ids.map(Number) : ([] as unknown[]).concat(ids).map(Number)\n        );\n    } catch (err) {\n        Debug.log('error', err);\n    }\n};\n","import Analytics from '@hh.ru/analytics-js';\nimport vacancyResponseAttemptExternal from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/vacancy_response_attempt';\n\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\n\n/**\n * Попытка отклика\n *\n * @param {object} params\n * @param {string | number} params.employerId\n * @param {string | number} params.vacancyId\n */\n\ninterface SendResponseAttemptProps {\n    employerId?: number;\n    vacancyId: number;\n    hhtmSourceLabel?: string;\n    sendExternal?: boolean;\n    topLevelSite?: TopLevelSite;\n    userType?: UserType;\n}\n\nexport const sendResponseAttempt = ({\n    employerId,\n    vacancyId,\n    hhtmSourceLabel,\n    sendExternal = false,\n    topLevelSite,\n    userType,\n}: SendResponseAttemptProps): void => {\n    Analytics.sendHHEvent('responseAttempt', {\n        vacancyId: Number(vacancyId),\n        employerId: Number(employerId) || null,\n        hhtmSourceLabel,\n    });\n    if (sendExternal && topLevelSite && userType) {\n        const category = userType === UserType.Applicant ? 'applicant' : 'anonymous';\n        // eslint-disable-next-line camelcase\n        vacancyResponseAttemptExternal({ category, params: { product_id: vacancyId } });\n        if (topLevelSite === TopLevelSite.RU) {\n            Analytics.addEventPixels('B2C_VACANCY_RESPONSE_CLICK');\n        }\n    }\n};\n","import axios from 'HHC/Axios';\n\nconst ADD_URL = '/applicant/favorite_vacancies/add';\nconst REMOVE_URL = '/applicant/favorite_vacancies/remove';\n\nexport const getDataQa = (inFavorites: boolean | null, isSearch = false, isNarrowCard = false): string => {\n    const prefix = isSearch ? 'vacancy-search' : 'vacancy-body';\n    const narrowCardPostfix = isNarrowCard ? '_narrow-card' : '';\n    return `${prefix}-mark-favorite_${inFavorites ? 'true' : 'false'}${narrowCardPostfix}`;\n};\n\nconst POSTPONE_URL = '/applicant/favorite_vacancies/postpone';\nconst POSTPONE_REDIRECT = '/account/login?postponed';\n\ninterface MakeToggleFavoriteAnonymous {\n    (): (props: { vacancyId: number; employerId?: number }) => Promise<null | typeof POSTPONE_REDIRECT>;\n}\nexport const makeToggleFavoriteAnonymous: MakeToggleFavoriteAnonymous = () => {\n    let requestHasBeenSent = false;\n\n    return async ({ vacancyId, employerId }) => {\n        if (requestHasBeenSent) {\n            return null;\n        }\n\n        try {\n            await axios.postFormData(POSTPONE_URL, {\n                vacancyId,\n                employerId,\n            });\n        } catch (error) {\n            requestHasBeenSent = false;\n            throw error;\n        }\n\n        requestHasBeenSent = false;\n        return POSTPONE_REDIRECT;\n    };\n};\n\ninterface MakeToggleFavorite {\n    (): (props: {\n        isFavoriteVacancy: boolean | null;\n        vacancyId: number;\n        employerId?: number;\n        cleanup: unknown;\n    }) => Promise<null | boolean>;\n}\nexport const makeToggleFavorite: MakeToggleFavorite = () => {\n    let requestHasBeenSent = false;\n\n    return async ({ isFavoriteVacancy, vacancyId, employerId, cleanup }) => {\n        if (requestHasBeenSent) {\n            return null;\n        }\n\n        requestHasBeenSent = true;\n\n        try {\n            await axios.postFormData(isFavoriteVacancy ? REMOVE_URL : ADD_URL, {\n                vacancyId,\n                employerId,\n                cleanup,\n            });\n        } catch (error) {\n            requestHasBeenSent = false;\n            throw error;\n        }\n\n        requestHasBeenSent = false;\n        return !isFavoriteVacancy;\n    };\n};\n","import format from 'date-fns/format';\nimport AZ from 'date-fns/locale/az';\nimport EN from 'date-fns/locale/en-US';\nimport KZ from 'date-fns/locale/kk';\nimport RU from 'date-fns/locale/ru';\nimport UA from 'date-fns/locale/uk';\nimport UZ from 'date-fns/locale/uz';\nimport parse from 'date-fns/parse';\nimport parseISO from 'date-fns/parseISO';\n\nconst DEFAULT_LOCALE = (typeof window !== 'undefined' && window.globalVars?.lang) || 'RU';\n// date-fns doesn't have kyrgyz language support yet\nconst LOCALES = { AZ, EN, KZ, RU, UA, UZ, KG: RU };\n\nexport const WINDOW_LOCALE = LOCALES[DEFAULT_LOCALE];\n\nexport const formatFromHyphenDateString = (\n    dateString: string,\n    formatOutput = 'dd.MM.yyyy',\n    formatInput = 'yyyy-MM-dd kk:mm:ss'\n): string => {\n    return format(parse(dateString, formatInput, new Date()), formatOutput);\n};\n\n/**\n * Wrapper function around date-fns/format\n *\n * for docs see https://date-fns.org/v2.10.0/docs/format\n *\n * @param {string|number|Date} date Date\n * @param {string} formatString Date format\n * @param {'AZ'|'EN'|'KZ'|'RU'|'UA'|'UZ'|'KG'} lang Locale\n *\n * @returns {String}\n */\n\nconst formatDate = (date: string | Date | number, formatString: string, lang = DEFAULT_LOCALE): string =>\n    format(typeof date === 'string' ? parseISO(date) : date, formatString, {\n        locale: LOCALES[lang],\n    });\n\nexport default formatDate;\n","export default (): boolean => {\n    return !!document.querySelector('html')?.className?.match('translated');\n};\n","import { Breakpoint, getBreakpoint } from 'bloko/common/media';\n\nconst isXsFriendly = (): boolean => {\n    return document.body.className.indexOf('xs-friendly') !== -1;\n};\n\n/**\n * Утилита для проверки текущего media breakpoint.\n *\n * @type {Object}\n * @exports Utils/Media\n */\nconst Media = {\n    /**\n     * Работает ли в текущий момент xs-breakpoint.\n     *\n     * @returns {Boolean}\n     *\n     * @member\n     * @method\n     */\n    isXs(): boolean {\n        return isXsFriendly() && getBreakpoint() === Breakpoint.XS;\n    },\n\n    isXsFriendly,\n\n    isS(): boolean {\n        return document.body.className.indexOf('s-friendly') !== -1 && getBreakpoint() === Breakpoint.S;\n    },\n};\nexport default Media;\n","import scrollTop from 'bloko/common/scrollTop';\n\nimport { qaState, SCROLL_PROCESSING } from 'Modules/qaState';\n\nexport default ({ animationStartCallback, animationEndCallback, ...params }) => {\n    scrollTop({\n        ...params,\n        animationStartCallback: () => {\n            qaState[SCROLL_PROCESSING] = true;\n            animationStartCallback && animationStartCallback();\n        },\n        animationEndCallback: () => {\n            qaState[SCROLL_PROCESSING] = false;\n            animationEndCallback && animationEndCallback();\n        },\n    });\n};\n","let count = 0;\n/**\n * Generates unique string with prefix.\n * @param {String} prefix\n * @returns {String} unique identifier\n */\n// eslint-disable-next-line no-plusplus\nexport const generateId = (prefix = 'uid'): string => `${prefix}${count++}`;\n\n/**\n * Generates unique ID for DOM element for IE returns native uniqID.\n * @param {Object} element DOM element\n * @returns {String} unique identifier\n */\nexport const getUniqueId = (element: HTMLElement & { uniqueID?: string }): string => {\n    if (!element.uniqueID) {\n        element.uniqueID = generateId();\n    }\n    return element.uniqueID;\n};\n\n/**\n * Замена <br> на символы новой строки\n * @param  {Element} element Элемент\n * @returns {String}\n */\nexport const br2nl = ({ childNodes }: Node): string =>\n    [...childNodes]\n        .map((node) => {\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.nodeValue?.replace(/\\n+/g, '');\n            }\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return node.nodeName === 'BR' ? '\\n' : br2nl(node);\n            }\n            return '';\n        })\n        .join('');\n\nexport const isObject = (val: unknown): val is Record<string, unknown> =>\n    val != null && !Array.isArray(val) && typeof val === 'object';\n\nexport const isString = (value: unknown): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isNumber = (value: unknown): value is number => {\n    return typeof value === 'number';\n};\n\n// Приводит объекты вида {foo: { bar: { baz: 123 } }} к {foo.bar.baz: 123} для получения ключей валидации\nexport const treeToKeys = (object: unknown, preKey = ''): Record<string, unknown> => {\n    if (!isObject(object)) {\n        return {\n            [preKey]: object,\n        };\n    }\n    return Object.entries(object).reduce((acc, [key, subObject]) => {\n        const newKey = `${preKey}${key}${isObject(subObject) ? '.' : ''}`;\n        const objectToMerge = treeToKeys(subObject, newKey);\n        return { ...acc, ...objectToMerge };\n    }, {});\n};\n","let initStart;\n\nif (!process.env.LUX_SERVER) {\n    initStart = performance.now();\n}\nconst { hydrateRoot, createRoot } = require('react-dom/client');\nconst { Provider } = require('react-redux');\nconst { ConnectedRouter } = require('connected-react-router');\nconst Loadable = require('react-loadable');\nconst PropTypes = require('prop-types');\nconst statsSender = require('HHC/Performance/StatsSender').default;\nconst Debug = require('HHC/Debug').default;\nconst getOrCreateStore = require('lux/modules/store').default;\nconst { getHistory } = require('lux/modules/history');\nconst domainsWhitelist = require('lux/modules/domainsWhitelist').default;\nconst App = require('lux/pages/App').default;\nconst { setLuxSentryBeforeSend } = require('HHC/LuxInit');\nconst Components = require('HHC/Components').default;\nconst { urlHelper } = require('@hh.ru/redux-spa-middleware');\nconst isGoogleTranslateEnv = require('Modules/googleTranslateChecker').default;\n\n// анонимная функция, потому что нужен return при ошибке инициализации\n(() => {\n    const reactRootNode = document.getElementById('HH-React-Root');\n    const reactErrorNode = document.getElementById('HH-React-Error');\n\n    if (!reactRootNode) {\n        console.error(new Error(\"React root node doesn't exist\"));\n        if (reactErrorNode !== null) {\n            reactErrorNode.style.display = 'block';\n        }\n        return;\n    }\n\n    if (reactRootNode.dataset.ssrStatus === 'fail') {\n        reactRootNode.dataset.qa = 'lux-server-render-failed';\n    }\n\n    let store;\n    try {\n        store = getOrCreateStore();\n    } catch (error) {\n        if (error.code !== 'REACT_INITIAL_STATE_ERROR') {\n            throw error;\n        }\n        console.error(error);\n        reactRootNode.style.display = 'none';\n        if (reactErrorNode !== null) {\n            reactErrorNode.style.display = 'block';\n        }\n        return;\n    }\n\n    urlHelper.setDomainWhitelist(domainsWhitelist);\n\n    setLuxSentryBeforeSend((event) => {\n        if (\n            Array.isArray(event.fingerprint) &&\n            event.fingerprint.some((value) => value.includes('The node to be removed is not a child of this node.'))\n        ) {\n            const pageName = event.extra.state.request?.luxPageName;\n            event.fingerprint = [pageName];\n        }\n    });\n\n    const RootComponent = ({ renderCallback } = { renderCallback: null }) => (\n        <Provider store={store}>\n            <ConnectedRouter history={getHistory()}>\n                <App renderCallback={renderCallback} />\n            </ConnectedRouter>\n        </Provider>\n    );\n\n    RootComponent.propTypes = {\n        renderCallback: PropTypes.func,\n    };\n\n    let renderStart;\n    let initEnd;\n\n    if (!process.env.LUX_SERVER) {\n        initEnd = performance.now();\n    }\n\n    const sendRenderTime = () => {\n        if (!process.env.LUX_SERVER) {\n            statsSender.sendMetrics({\n                report: 'lux-init-time',\n                renderTime: Math.floor(performance.now() - renderStart),\n                initTime: Math.floor(initEnd - initStart),\n            });\n        }\n    };\n\n    Loadable.preloadReady()\n        .then(() => {\n            if (!process.env.LUX_SERVER) {\n                renderStart = performance.now();\n            }\n\n            if (!reactRootNode.dataset.ssrFailedStatus) {\n                try {\n                    hydrateRoot(reactRootNode, <RootComponent renderCallback={sendRenderTime} />, {\n                        onRecoverableError: (error) => {\n                            if (!isGoogleTranslateEnv()) {\n                                Debug.log('error out', error);\n                            }\n                        },\n                    });\n                } catch (error) {\n                    Debug.log('error out', error);\n                    createRoot(reactRootNode).render(<RootComponent renderCallback={sendRenderTime} />);\n                }\n            } else {\n                createRoot(reactRootNode).render(<RootComponent renderCallback={sendRenderTime} />);\n            }\n\n            window.addEventListener('load', Components.buildDeferredComponents, { once: true });\n\n            return null;\n        })\n        .catch((error) => {\n            Debug.log('error out', error);\n        });\n})();\n","export const CONTENT_ID = 'a11y-main-content';\nexport const INPUT_ID = 'a11y-search-input';\n\nexport default CONTENT_ID;\n","export const ACTION_SMART_BANNER_LOADED = 'HH-SmartBanner-Loaded';\nexport const ACTION_SMART_BANNER_HIDE = 'HH-SmartBanner-Hide';\n","import { FormEvent, Fragment, useEffect, useRef, useState } from 'react';\n\nimport userStatusSelectButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_button_click';\nimport userStatusSelectElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_element_shown';\nimport { JobSearchStatus as JobSearchStatusAnalytics } from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_form_submit';\nimport Radio from 'bloko/blocks/radio';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport { JobSearchStatus, JobSearchStatusSetted, JobSearchStatusForm } from 'lux/models/applicantUserStatuses';\n\nimport useSetJobSearchStatus from 'lux/components/Applicant/JobSearchStatus/useSetJobSearchStatus';\n\nconst STATUSES = [\n    JobSearchStatus.ActiveSearch,\n    JobSearchStatus.LookingForOffers,\n    JobSearchStatus.HasJobOffer,\n    JobSearchStatus.AcceptedJobOffer,\n    JobSearchStatus.NotLookingForJob,\n] as const;\n\nconst TrlKeys = {\n    status: {\n        [JobSearchStatus.ActiveSearch]: 'jobSearchStatus.change.version2.active_search',\n        [JobSearchStatus.LookingForOffers]: 'jobSearchStatus.change.version2.looking_for_offers',\n        [JobSearchStatus.HasJobOffer]: 'jobSearchStatus.change.version2.has_job_offer',\n        [JobSearchStatus.AcceptedJobOffer]: 'jobSearchStatus.change.version2.accepted_job_offer',\n        [JobSearchStatus.NotLookingForJob]: 'jobSearchStatus.change.version2.not_looking_for_job',\n    },\n};\n\ninterface ChangeFormProps {\n    onSuccess: (status: JobSearchStatus) => void;\n    formId: JobSearchStatusForm;\n    currentStatus?: JobSearchStatus;\n    setDisabled?: (isDisabled: boolean) => void;\n    isCompact?: boolean;\n    statusesList?: JobSearchStatusSetted[];\n}\n\nconst ChangeForm: TranslatedComponent<ChangeFormProps> = ({\n    onSuccess,\n    currentStatus,\n    setDisabled,\n    isCompact,\n    statusesList,\n    formId,\n    trls,\n}) => {\n    const [newStatus, setNewStatus] = useState(currentStatus || JobSearchStatus.Unknown);\n    const setJobSearchStatus = useSetJobSearchStatus(formId);\n    const originalStatus = useRef(newStatus);\n    const formRef = useRef(null);\n\n    useEffect(() => {\n        if (formRef.current) {\n            userStatusSelectElementShown(formRef.current);\n        }\n    }, []);\n\n    const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n        setDisabled?.(true);\n        event.preventDefault();\n\n        setJobSearchStatus(newStatus)\n            .then(() => {\n                onSuccess(newStatus);\n            })\n            .catch(() => {\n                setDisabled?.(false);\n            });\n    };\n\n    const calculateDisabled = (newStatus: JobSearchStatus) => {\n        setDisabled?.(originalStatus.current === newStatus);\n    };\n\n    const onStatusChange = (status: JobSearchStatusSetted) => {\n        setNewStatus(status);\n        calculateDisabled(status);\n        userStatusSelectButtonClick({ jobSearchStatus: status.toUpperCase() as JobSearchStatusAnalytics });\n    };\n\n    const spacing = isCompact ? 3 : 4;\n    const statusesToChoose = statusesList || STATUSES;\n\n    return (\n        <Form\n            name=\"job-search-status-form\"\n            id={formId}\n            onSubmit={onSubmit}\n            data-qa=\"job-search-status-form\"\n            ref={formRef}\n        >\n            {statusesToChoose.map((status) => {\n                const checked = newStatus === status;\n                return (\n                    <Fragment key={status}>\n                        <Radio\n                            value={newStatus}\n                            checked={checked}\n                            wrapperProps={{\n                                'data-qa': `job-search-change_${status}`,\n                            }}\n                            onChange={() => onStatusChange(status)}\n                        >\n                            <Text>{trls[TrlKeys.status[status]]}</Text>\n                        </Radio>\n                        <VSpacing base={spacing} />\n                    </Fragment>\n                );\n            })}\n        </Form>\n    );\n};\n\nexport default translation(ChangeForm);\n","import { useCallback } from 'react';\n\nimport Debug from 'HHC/Debug';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\ndeclare global {\n    interface FetcherPutApi {\n        '/shards/user_statuses/job_search_status_notification_read': {\n            body: void;\n            queryParams: { triggerName: string };\n            response: void;\n        };\n    }\n}\n\nconst useMarkAsRead = (triggerNameParam?: string | null): (() => void) => {\n    const triggerNameState = useSelector((state) => state.applicantUserStatusesTrigger);\n    const triggerName = triggerNameParam || triggerNameState;\n\n    const markRead = useCallback(() => {\n        if (!triggerName) {\n            Debug.log('error out', 'No user status triggerName provided');\n            return;\n        }\n        void fetcher\n            .put('/shards/user_statuses/job_search_status_notification_read', undefined, {\n                params: {\n                    triggerName,\n                },\n            })\n            .catch(console.error);\n    }, [triggerName]);\n\n    return markRead;\n};\n\nexport default useMarkAsRead;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport userStatusSelectFormSubmit, {\n    FormSource,\n    JobSearchStatus as JobSearchStatusAnalytics,\n} from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_form_submit';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport { showPostChangeModal } from 'lux/models/applicant/jobSearchStatus';\nimport { JobSearchStatus, JobSearchStatusForm, JobSearchStatusSetted } from 'lux/models/applicantUserStatuses';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst FORM_ID_TO_SOURCE_MAPPING = {\n    [JobSearchStatusForm.VacancyResponseNotification]: 'RESPONSE_SENT',\n    [JobSearchStatusForm.RenewNotification]: 'USER_STATUS_NOTIFICATION',\n    [JobSearchStatusForm.MyResumesXsModal]: 'RESUME_LIST_XS',\n    [JobSearchStatusForm.MyResumesDesktop]: 'RESUME_LIST_LARGE',\n    [JobSearchStatusForm.ResponsesPageBanner]: 'RESPONSE_OFFER_USER_STATUS',\n} as const;\n\nconst formHasSource = (formId: JobSearchStatusForm): formId is keyof typeof FORM_ID_TO_SOURCE_MAPPING =>\n    formId in FORM_ID_TO_SOURCE_MAPPING;\n\nconst shouldShowSuccessNotification = (formId: JobSearchStatusForm) =>\n    ![JobSearchStatusForm.MyResumesDesktop, JobSearchStatusForm.MyResumesXsModal].includes(formId);\n\nconst applicantUserStatusesAction = makeSetStoreField('applicantUserStatuses');\n\ndeclare global {\n    interface FetcherPutApi {\n        '/shards/user_statuses/job_search_status': {\n            body: void;\n            queryParams: { status: string };\n            response: void;\n        };\n    }\n}\n\nconst getAnalyticsFormSource = (formId: JobSearchStatusForm): FormSource => {\n    if (formHasSource(formId)) {\n        return FORM_ID_TO_SOURCE_MAPPING[formId];\n    }\n\n    return 'RESUME_LIST_LARGE';\n};\n\nconst useSetJobSearchStatus = (formId: JobSearchStatusForm): ((newStatus: JobSearchStatus) => Promise<void>) => {\n    const dispatch = useDispatch();\n    const applicantUserStatuses = useSelector((state) => state.applicantUserStatuses);\n\n    return useCallback(\n        (newStatus: JobSearchStatus) => {\n            userStatusSelectFormSubmit({\n                jobSearchStatus: newStatus.toUpperCase() as JobSearchStatusAnalytics,\n                formSource: getAnalyticsFormSource(formId),\n            });\n            return fetcher\n                .put('/shards/user_statuses/job_search_status', undefined, {\n                    params: { status: newStatus },\n                })\n                .then(\n                    () => {\n                        dispatch(\n                            applicantUserStatusesAction({\n                                ...applicantUserStatuses,\n                                jobSearchStatus: { name: newStatus as JobSearchStatusSetted },\n                            })\n                        );\n                        if (newStatus === JobSearchStatus.AcceptedJobOffer) {\n                            dispatch(showPostChangeModal(shouldShowSuccessNotification(formId)));\n                        }\n                        if (newStatus === JobSearchStatus.HasJobOffer) {\n                            dispatch(showPostChangeModal(shouldShowSuccessNotification(formId)));\n                        }\n                    },\n                    (error) => {\n                        dispatch(showDefaultError(error));\n                        throw error;\n                    }\n                );\n        },\n        [applicantUserStatuses, dispatch, formId]\n    );\n};\n\nexport default useSetJobSearchStatus;\n","// extracted by mini-css-extract-plugin\nexport default {\"areaSwitcherFooter\":\"area-switcher-footer--rIAEC2pnRYHQpPEfR8C2\"};","import { RefObject } from 'react';\n\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport styles from './area-switcher-footer.less';\n\nconst TrlKeys = {\n    text: 'area.switcher.search.footerMessage',\n    link: 'area.switcher.search.footerLinkText',\n};\n\ninterface AreaSwitcherFooterProps {\n    searchInputRef: RefObject<HTMLInputElement>;\n}\n\nconst Footer: TranslatedComponent<AreaSwitcherFooterProps> = ({ searchInputRef, trls }) => {\n    const onClick = () => searchInputRef?.current?.focus();\n\n    return (\n        <div className={styles.areaSwitcherFooter}>\n            <VSpacing base={10} />\n            <Text>\n                {trls[TrlKeys.text]}\n                {NON_BREAKING_SPACE}\n                <BlokoLink appearance={LinkAppearance.Pseudo} onClick={onClick}>\n                    {trls[TrlKeys.link]}\n                </BlokoLink>\n            </Text>\n            <VSpacing base={10} />\n        </div>\n    );\n};\n\nexport default translation(Footer);\n","import { FC } from 'react';\n\nimport Icon, { IconAppearance, IconKind, IconScale, IconView } from 'bloko/blocks/icon';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nconst InputIcon: FC = () => {\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    if (isXs) {\n        return (\n            <span className=\"supernova-search-bold-icon\">\n                <span className=\"supernova-icon supernova-icon_search-primary\" />\n            </span>\n        );\n    }\n\n    return (\n        <Icon\n            view={IconView.Lupa}\n            kind={IconKind.Default}\n            appearance={IconAppearance.Outlined}\n            scale={IconScale.Small}\n        />\n    );\n};\n\nexport default InputIcon;\n","import { FC } from 'react';\n\nimport { DataProviderItem } from 'bloko/blocks/suggest/types';\nimport Text from 'bloko/blocks/text';\n\nexport interface SuggestDomainItemProps extends DataProviderItem {\n    href: string;\n    region?: string;\n}\n\nexport const suggestDomainItemKey = ({ text }: SuggestDomainItemProps): string => text;\n\nconst SuggestDomainItem: FC<SuggestDomainItemProps> = ({ text, region }) => {\n    return (\n        <>\n            <Text strong data-qa=\"area-switcher-autocomplete-city\">\n                {text}\n            </Text>\n            {region && <Text data-qa=\"area-switcher-autocomplete-region\">{region}</Text>}\n        </>\n    );\n};\n\nexport default SuggestDomainItem;\n","import { RefObject, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport InputText from 'bloko/blocks/inputText';\nimport Suggest from 'bloko/blocks/suggest';\nimport createRemoteDataProvider from 'bloko/blocks/suggest/createRemoteDataProvider';\nimport { DataProvider } from 'bloko/blocks/suggest/types';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport LayerCssClass from 'bloko/common/constants/layersCssClasses';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport InputIcon from 'lux/components/AreaSwitcher/Search/Icon';\nimport SuggestDomainItem, {\n    SuggestDomainItemProps,\n    suggestDomainItemKey,\n} from 'lux/components/AreaSwitcher/Search/SuggestDomainItem';\n\nconst TrlKeys = {\n    label: 'area.switcher.search.label',\n    placeholder: 'area.switcher.search.placeholder',\n};\n\nconst WILDCARD = '%QUERY%';\nconst REMOTE = `/shards/area_switcher/search?q=${WILDCARD}&backUrl=`;\n\ninterface AreaSwitcherSearchProps {\n    searchInputRef: RefObject<HTMLInputElement>;\n}\n\nconst Search: TranslatedComponent<AreaSwitcherSearchProps> = ({ searchInputRef, trls }) => {\n    const dispatch = useDispatch();\n    const { pathname, search } = useSelector((state) => state.router.location);\n\n    const dataProvider = useMemo(\n        () => createRemoteDataProvider(`${REMOTE}${encodeURIComponent(`${pathname}${search}`)}`, WILDCARD),\n        [pathname, search]\n    ) as DataProvider<SuggestDomainItemProps>;\n    const [value, setValue] = useState<SuggestDomainItemProps | undefined>(undefined);\n\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    const onChange = (item: SuggestDomainItemProps) => {\n        setValue(item);\n        item?.href && dispatch(push(item.href));\n    };\n\n    return (\n        <>\n            {!isXs && (\n                <>\n                    <Text>{trls[TrlKeys.label]}</Text>\n                    <VSpacing base={1} />\n                </>\n            )}\n            <Suggest\n                autoHighlightFirstSuggest={false}\n                selectOnBlur={false}\n                dataProvider={dataProvider}\n                itemContent={SuggestDomainItem}\n                itemKey={suggestDomainItemKey}\n                onChange={onChange}\n                value={value}\n                layer={LayerCssClass.AboveOverlayContent}\n            >\n                <InputText\n                    ref={searchInputRef}\n                    placeholder={trls[TrlKeys.placeholder]}\n                    icon={<InputIcon />}\n                    data-qa=\"area-search-input\"\n                />\n            </Suggest>\n        </>\n    );\n};\n\nexport default translation(Search);\n","import { useEffect, useRef, useState, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Column from 'bloko/blocks/column';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport Components from 'HHC/Components';\nimport { HHTM_FROM_HEADER } from 'Modules/hhtm';\nimport { REGION_CLARIFICATION } from 'lux/components/Notifications/RegionClarification';\nimport { removeNotificationByTypeAction } from 'lux/models/notifications';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Footer from 'lux/components/AreaSwitcher/Footer';\nimport Search from 'lux/components/AreaSwitcher/Search';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/area_switcher': {\n            response: string;\n            // eslint-disable-next-line camelcase\n            queryParams: { ajax?: boolean; backUrl?: string; for_current_domain?: boolean };\n        };\n    }\n}\n\ninterface AreaSwitcherContentProps {\n    isDropdown?: boolean;\n}\n\nconst AreaSwitcher: FC<AreaSwitcherContentProps> = ({ isDropdown }) => {\n    const dispatch = useDispatch();\n    const hhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n\n    const searchInputRef = useRef<HTMLInputElement>(null);\n    const xmlContainerRef = useRef<HTMLDivElement>(null);\n    const [content, setContent] = useState<string | null>(null);\n\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        dispatch(removeNotificationByTypeAction(REGION_CLARIFICATION));\n\n        if (!content) {\n            fetcher\n                .get('/area_switcher', {\n                    signal: controller.signal,\n                    params: {\n                        backUrl: window.location.href,\n                        // eslint-disable-next-line camelcase\n                        ...(isXs ? { ajax: true, for_current_domain: true } : {}),\n                    },\n                    headers: {\n                        [HHTM_FROM_HEADER]: hhtmSource,\n                    },\n                })\n                .then(setContent, console.error);\n        }\n\n        if (content && xmlContainerRef.current) {\n            xmlContainerRef.current.innerHTML = content;\n            void Components.init(xmlContainerRef.current);\n        }\n\n        return () => controller.abort();\n    }, [content, dispatch, hhtmSource, isXs, xmlContainerRef]);\n\n    return (\n        <div>\n            <Column xs=\"4\" s=\"7\" m=\"10\" l=\"10\" container={isXs}>\n                {content && <Search searchInputRef={searchInputRef} />}\n                {!content && (\n                    <div\n                        className={classnames({\n                            'supernova-dropdown-static-option': isDropdown,\n                        })}\n                    >\n                        <Loading scale={LoadingScale.Medium} />\n                    </div>\n                )}\n            </Column>\n            {content && (\n                <>\n                    <div ref={xmlContainerRef} />\n                    <Footer searchInputRef={searchInputRef} />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default AreaSwitcher;\n","import { createContext } from 'react';\n\nexport default createContext<(() => void) | null>(null);\n","import { useState, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonScale, ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Icon, {\n    Social,\n    IconColor,\n    SocialScale,\n    SocialAppearance,\n    IconView,\n    IconKind,\n    IconScale,\n} from 'bloko/blocks/icon';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport StaticImg from 'lux/components/StaticImg';\nimport translation from 'lux/components/translation';\nimport { ChatBotMessengerTypes } from 'lux/models/chatBot';\n\nconst TrlKeys = {\n    button: 'autosearch.messengers.button',\n    description: 'autosearch.messengers.description',\n    qrDescription: 'autosearch.messengers.qrDescription',\n    descriptionMobile: 'autosearch.messengers.descriptionMobile',\n    vk: 'autosearch.messengers.vk',\n    telegram: 'autosearch.messengers.telegram',\n    viber: 'autosearch.messengers.viber',\n};\n\nconst AutosearchMessengers: TranslatedComponent = ({ trls }) => {\n    const { messengers, page, genericUserType, source } = useSelectorNonNullable((store) => store.chatBot);\n    const [activeMessenger, setActiveMessenger] = useState<string | null>();\n\n    const breakpoint = useBreakpoint();\n    const isXS = breakpoint === Breakpoint.XS;\n\n    const switchActiveMessenger = useCallback(\n        (messengerType: ChatBotMessengerTypes) => {\n            setActiveMessenger(activeMessenger === messengerType ? null : messengerType);\n        },\n        [activeMessenger, setActiveMessenger]\n    );\n\n    return (\n        <>\n            {messengers.map(({ type, icon, href }, index) => (\n                <div\n                    className=\"autosearch-messengers-item\"\n                    onClick={() => {\n                        if (isXS) {\n                            window.open(href, '_blank');\n                        }\n                    }}\n                    key={type}\n                >\n                    <div className=\"autosearch-messengers-item-header-wrap\">\n                        <div\n                            className=\"autosearch-messengers-item-header\"\n                            onClick={() => {\n                                if (!isXS) {\n                                    switchActiveMessenger(type);\n                                }\n                            }}\n                            data-qa={`autosearch-messengers__item-header-${index}`}\n                        >\n                            {isXS ? (\n                                <>\n                                    <Social\n                                        view={icon}\n                                        appearance={SocialAppearance.Color}\n                                        scale={SocialScale.Medium}\n                                    />\n                                    <HSpacing base={4} />\n                                    {trls[TrlKeys[type]]}\n                                </>\n                            ) : (\n                                <>\n                                    <Social\n                                        view={icon}\n                                        initial={IconColor.Blue60}\n                                        appearance={SocialAppearance.Default}\n                                        scale={SocialScale.Small}\n                                    />\n                                    <Gap left>\n                                        <Link appearance={LinkAppearance.Pseudo}>{trls[TrlKeys[type]]}</Link>\n                                    </Gap>\n                                </>\n                            )}\n                        </div>\n                        {isXS && (\n                            <Icon\n                                view={IconView.Chevron}\n                                kind={IconKind.Right}\n                                initial={IconColor.Gray50}\n                                scale={IconScale.Medium}\n                            />\n                        )}\n                    </div>\n                    <div\n                        className={classNames('autosearch-messengers-content', {\n                            'autosearch-messengers-content_hidden': activeMessenger !== type,\n                        })}\n                        data-qa={`autosearch-messengers__content-${index}`}\n                    >\n                        <div>\n                            <p className=\"autosearch-messengers-description\">{trls[TrlKeys.description]}</p>\n                            <p className=\"autosearch-messengers-description-mobile\">\n                                {trls[TrlKeys.descriptionMobile]}\n                            </p>\n                            <div className=\"autosearch-messengers-bot-button\">\n                                <Button\n                                    Element=\"a\"\n                                    href={href}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    scale={ButtonScale.Small}\n                                    kind={ButtonKind.Primary}\n                                    appearance={ButtonAppearance.Outlined}\n                                >\n                                    {trls[TrlKeys.button]}\n                                </Button>\n                            </div>\n                            <p className=\"autosearch-messengers-qr-description\">{trls[TrlKeys.qrDescription]}</p>\n                        </div>\n                        <StaticImg\n                            className=\"autosearch-messengers-qr-img\"\n                            path={`/i/hh/chatbot/${page}/qr-${type}-${genericUserType}-${source}.png`}\n                            alt={`qr-code-${type}`}\n                        />\n                    </div>\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default translation(AutosearchMessengers);\n","import Button from 'bloko/blocks/button';\nimport Modal, { ModalHeader, ModalTitle, ModalFooter } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport AutosearchMessengers from 'lux/components/AutosearchMessengers';\n\nconst TrlKeys = {\n    title: 'autosearch.messengers.modal.title',\n    close: 'autosearch.messengers.modal.close',\n};\n\ninterface AutosearchMessengersModalProps {\n    handleCloseModal: () => void;\n    isVisible: boolean;\n}\n\nconst AutosearchMessengersModal: TranslatedComponent<AutosearchMessengersModalProps> = ({\n    trls,\n    handleCloseModal,\n    isVisible,\n}) => {\n    return (\n        <Modal visible={isVisible} onClose={handleCloseModal} useBottomSheet>\n            <ModalHeader>\n                <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n            </ModalHeader>\n            <div className=\"autosearch-messengers-modal-container\">\n                <AutosearchMessengers />\n            </div>\n            <div className=\"autosearch-messengers-modal-footer\">\n                <ModalFooter>\n                    <Button onClick={handleCloseModal} data-qa=\"autosearch-messengers-modal-close\">\n                        {trls[TrlKeys.close]}\n                    </Button>\n                </ModalFooter>\n            </div>\n        </Modal>\n    );\n};\n\nexport default translation(AutosearchMessengersModal);\n","import { Fragment } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport HumanDate, { ShowYear } from 'lux/components/HumanDate';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport translation from 'lux/components/translation';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationForbidden]: {\n        first: 'supernova.notification.billing.delayed.cart.activation.content.1',\n        second: 'supernova.notification.billing.delayed.cart.activation.content.2',\n        link: 'supernova.notification.billing.delayed.cart.activation.carts',\n        articleLink: 'supernova.notification.billing.delayed.cart.activation.details',\n    },\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationExpired]: {\n        first: 'supernova.notification.billing.delayed.cart.activation.expired.content.1',\n        link: 'supernova.notification.billing.delayed.cart.activation.carts',\n        articleLink: 'supernova.notification.billing.delayed.cart.activation.details',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst BillingCartActivationNotification: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const isHHRu = useIsHhru();\n    const key = notification.templateKey as TemplateKeys;\n    const articleId = notification.params.articleId;\n\n    return (\n        <Fragment>\n            <NotificationText>\n                {formatToReactComponent(trls[TrlKeys[key].first], {\n                    '{}': <HumanDate showYear={ShowYear.NotCurrent} date={notification.params.expirationDate} />,\n                })}\n            </NotificationText>\n\n            {key === ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationForbidden && (\n                <NotificationText>{trls[TrlKeys[key].second]}</NotificationText>\n            )}\n            <div className=\"supernova-notification-links\">\n                <div className=\"supernova-notification-links__link\">\n                    <NotificationLink to=\"/employer/carts\">{trls[TrlKeys[key].link]}</NotificationLink>\n                </div>\n                {articleId && (\n                    <div className=\"supernova-notification-links__link\">\n                        <NotificationLink\n                            to={`${\n                                isHHRu &&\n                                key === ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationExpired\n                                    ? `https://feedback.hh.ru/knowledge-base/article/${articleId}`\n                                    : `/article/${articleId}`\n                            }`}\n                        >\n                            {trls[TrlKeys[key].articleLink]}\n                        </NotificationLink>\n                    </div>\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default translation(BillingCartActivationNotification);\n","import { CountryId } from 'lux/models/countryId';\n\nexport default (countryId: CountryId | null): string => {\n    switch (countryId) {\n        case CountryId.Ukraine:\n            return 'grc.ua';\n        case CountryId.Kazakhstan:\n            return 'hh.kz';\n        case CountryId.Belarus:\n            return 'rabota.by';\n        case CountryId.Azerbaijan:\n            return 'hh1.az';\n        case CountryId.Uzbekistan:\n            return 'hh.uz';\n        case CountryId.Kirghizistan:\n            return 'headhunter.kg';\n        case CountryId.Georgia:\n            return 'headhunter.ge';\n        default:\n            return 'hh.ru';\n    }\n};\n","import { CountryId } from 'lux/models/countryId';\n\nimport getDomainByCountryId from 'lux/modules/getDomainByCountryId';\n\nexport default (countryId: CountryId | null): string => {\n    const domain = getDomainByCountryId(countryId);\n    return `https://${domain}/`;\n};\n","import { ComponentType, Fragment } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { NotificationLinkProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport useSiteByEmployerCountryId from 'lux/hooks/useSiteByEmployerCountryId';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.SuggestionVacancyMakeup]: {\n        content: 'branding.suggestion.vacancy.makeup.notification.part_1',\n        contentSecond: 'branding.suggestion.vacancy.makeup.notification.part_2',\n        contentThird: 'branding.suggestion.vacancy.makeup.notification.part_3',\n        link: 'branding.suggestion.buy.employer.page.constructor.notification.link',\n    },\n    [ComplexUserNotificationsTemplateKey.SuggestionEmployerMakeup]: {\n        content: 'branding.suggestion.employer.page.makeup.notification.part_1',\n        contentSecond: 'branding.suggestion.employer.page.makeup.notification.part_2',\n        contentThird: 'branding.suggestion.employer.page.makeup.notification.part_3',\n        link: 'branding.suggestion.employer.page.makeup.notification.link',\n    },\n};\n\nconst linkMap = {\n    [ComplexUserNotificationsTemplateKey.SuggestionVacancyMakeup]: 'article/brand',\n    [ComplexUserNotificationsTemplateKey.SuggestionEmployerMakeup]: 'article/brand',\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\ninterface BrandingMakeupProps {\n    LinkComponent: ComponentType<NotificationLinkProps>;\n    TextComponent: ComponentType | 'p';\n}\n\nconst BrandingMakeupNotification: TranslatedComponent<BrandingMakeupProps & ComplexUserNotification> = ({\n    LinkComponent,\n    TextComponent,\n    trls,\n    ...notification\n}) => {\n    const key = notification.templateKey as TemplateKeys;\n    const site = useSiteByEmployerCountryId();\n\n    return (\n        <Fragment>\n            <TextComponent>\n                {formatToReactComponent(trls[TrlKeys[key].content], {\n                    '{0}': <strong>{trls[TrlKeys[key].contentSecond]}</strong>,\n                    '{1}': <strong>{trls[TrlKeys[key].contentThird]}</strong>,\n                })}\n            </TextComponent>\n            <LinkComponent to={`${site}${linkMap[key]}`}>{trls[TrlKeys[key].link]}</LinkComponent>\n        </Fragment>\n    );\n};\n\nexport default translation(BrandingMakeupNotification);\n","import getSiteByCountryId from 'lux/modules/getSiteByCountryId';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport default (): string => {\n    const countryId = useSelector(({ employerStatus }) => employerStatus.countryId);\n    return getSiteByCountryId(countryId);\n};\n","export const ANON_SOCKET_COOKIE_NAME = 'chatik_anonymous_socket_connection';\nexport const RESUME_SCENARIO_NOTIFICATION_LS_KEY = '__chatik_resume_creation_scenario';\nexport const EXPIRATION_TIME_IN_HOURS = 24;\nexport const COLLECT_DEBUG_DATA_DELAY_MS = 20000;\n","import { useRef, useLayoutEffect, useContext, FC, memo, PropsWithChildren } from 'react';\n\nimport Debug from 'HHC/Debug';\nimport isGoogleTranslateEnv from 'Modules/googleTranslateChecker';\n\nimport { CodeInjectorContext, makeLuxDivider, DIVIDER_NODE_NAME } from 'lux/components/CodeInjector';\n\ninterface LuxDividerRendererProps {\n    styleClass?: string;\n    place: string;\n}\n\n/* Чистить кеш не нужно. Страницы где используется компонент ContainerForXSL\n * не поддерживают SPA, мы храним по сути ссылку на DOM который видит юзер.\n * */\nconst fallbackCacheIncorrectHydration: Record<string, string> = {};\n\n/* До инициализации JS данные уже находятся в DOM, но в случае ошибки гидрирования доступ\n * можно получить только в фазе рендера, сохраняю ссылки на DOM, только в browser окружении,\n * дабы при ошибке гидрирования вернуть контент обратно\n * */\nif (!process.env.LUX_SERVER) {\n    [...document.querySelectorAll('.HH-ContainerForXSL')].forEach((container) => {\n        if (container instanceof HTMLElement && container.dataset.place) {\n            fallbackCacheIncorrectHydration[container.dataset.place] = container.innerHTML;\n        }\n    });\n}\n\nconst ContainerForXSL: FC<LuxDividerRendererProps & PropsWithChildren> = ({ place, styleClass = '' }) => {\n    const containerElementRef = useRef<HTMLDivElement>(null);\n    const dividerContext = useContext(CodeInjectorContext);\n    const jsClass = `.HH-${place.toUpperCase()}-INVISIBLE`;\n    const selectorForHackHydration = `HH-ContainerForXSL-${place}`;\n\n    // Мы мутируем объект, который определяется в серверном рендере\n    // Аналогично тому, как это происходит в react-head, это позволяет за один проход рендера понять,\n    // что контент страницы нужно разделить на 2 части\n    if (process.env.LUX_SERVER) {\n        dividerContext.placesNamesForXSL.push(place);\n    }\n\n    useLayoutEffect(() => {\n        if (!containerElementRef.current) {\n            return;\n        }\n\n        const element = document.querySelector(jsClass);\n\n        if (element && element.classList.contains('g-invisible')) {\n            element.classList.remove('g-invisible');\n            containerElementRef.current.appendChild(element);\n        }\n\n        if (\n            containerElementRef.current.firstElementChild?.tagName?.toLowerCase?.() === DIVIDER_NODE_NAME &&\n            fallbackCacheIncorrectHydration[place]\n        ) {\n            containerElementRef.current.innerHTML = fallbackCacheIncorrectHydration[place];\n\n            if (!isGoogleTranslateEnv()) {\n                Debug.log('error out', new Error(`ContainerForXSL hydration warning. Place ${place}`));\n            }\n        }\n    });\n\n    return (\n        <div\n            ref={containerElementRef}\n            className={`${styleClass} HH-ContainerForXSL ${selectorForHackHydration}`}\n            data-place={place}\n            suppressHydrationWarning={true}\n            dangerouslySetInnerHTML={{\n                __html: process.env.LUX_SERVER\n                    ? makeLuxDivider(place)\n                    : document.querySelector(`.${selectorForHackHydration}`)?.firstElementChild?.innerHTML ??\n                      makeLuxDivider(place),\n            }}\n        />\n    );\n};\n\nexport default memo(ContainerForXSL, () => true);\n","import { FC, useState, useLayoutEffect, useRef, useContext, PropsWithChildren } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Debug from 'HHC/Debug';\n\nimport { CodeInjectorContext } from 'lux/components/CodeInjector';\n\ninterface InjectPortalProps {\n    place: string;\n    logLevel?: Parameters<typeof Debug.log>[0];\n}\n\nexport const makePortalDelimiter = (place: string, point: 'start' | 'end'): string =>\n    `lux-divide-portal-${place}-${point}`;\n\nconst InjectPortal: FC<InjectPortalProps & PropsWithChildren> = ({ children, place, logLevel = 'error out' }) => {\n    const [showPortal, setShowPortal] = useState(false);\n    const container = useRef<HTMLDivElement | null>(null);\n    const dividerContext = useContext(CodeInjectorContext);\n\n    useLayoutEffect(() => {\n        container.current = document.querySelector(`.HH-CodeInjectorPortal-Place-${place}`);\n\n        if (container.current) {\n            container.current.innerHTML = '';\n            setShowPortal(true);\n        } else {\n            Debug.log(logLevel, `CodeInjectorPortal not found DOM node. Place: ${place}`);\n        }\n    }, [logLevel, place]);\n\n    if (process.env.LUX_SERVER) {\n        dividerContext.portals.push(place);\n        const injectPortalStartDelimiter = makePortalDelimiter(place, 'start');\n        const injectPortalEndDelimiter = makePortalDelimiter(place, 'end');\n\n        return (\n            <>\n                {injectPortalStartDelimiter}\n                {children}\n                {injectPortalEndDelimiter}\n            </>\n        );\n    }\n\n    if (showPortal === false || container.current === null) {\n        return null;\n    }\n\n    return createPortal(children, container.current);\n};\n\nexport default InjectPortal;\n","import { createContext } from 'react';\n\ninterface CodeInjectorContextValue {\n    placesNamesForXSL: string[];\n    placesNamesForMicroFrontends: string[];\n    portals: string[];\n}\n\nexport const CodeInjectorContext = createContext<CodeInjectorContextValue>({\n    placesNamesForXSL: [],\n    placesNamesForMicroFrontends: [],\n    portals: [],\n});\n\nexport const DIVIDER_NODE_NAME = 'lux-divide-result-into-several-parts';\n\nexport const makeLuxDivider = (place: string): string => `<${DIVIDER_NODE_NAME} place='${place}' />`;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { CurrencyType } from 'lux/models/currencies.types';\n\ninterface CurrencyPros {\n    /** Префикс, добавляющийся перед выводом валюты*/\n    prefix?: string;\n    /** Валюта*/\n    value: CurrencyType;\n}\n\nconst TrlKeys = {\n    AZN: 'AZN',\n    BYR: 'BYR',\n    EUR: 'EUR',\n    KZT: 'KZT',\n    RUR: 'RUR',\n    UAH: 'UAH',\n    USD: 'USD',\n    UZS: 'UZS',\n    GEL: 'GEL',\n    KGS: 'KGS',\n};\n\nconst Currency: TranslatedComponent<CurrencyPros> = ({ trls, prefix, value }) => {\n    return (\n        <>\n            {prefix || ''}\n            {trls[TrlKeys[value]]}\n        </>\n    );\n};\n\nexport default translation(Currency);\n","import { FC, ReactNode, RefCallback, useEffect, useState, PropsWithChildren } from 'react';\n\nimport { ElementSpyInstance } from 'bloko/common/elementSpy';\n\ninterface ElementShownAnchorCommonProps {\n    /** Элемент используемый в качестве якоря */\n    Element?: 'div' | 'span' | 'p';\n    /** Имя класса для якоря */\n    className?: string;\n    /** Дочерние элементы */\n    children?: ReactNode;\n}\n\n/**\n * Общая сигнатура функции отправки аналитики при попадании элемента во вьюпорт\n */\ninterface GenericSendElementShown<E = HTMLElement> {\n    (element: E): ElementSpyInstance;\n    (element: E, params: unknown): ElementSpyInstance;\n}\n\n/**\n * Хелпер для создания интерфейса компонента из параметров аналитического метода\n */\ntype ElementShownAnchorPropsHelper<FN, E = HTMLElement> = FN extends (element: E, params: infer P) => ElementSpyInstance\n    ? { fn: FN } & P\n    : FN extends (element: E) => ElementSpyInstance\n    ? { fn: FN }\n    : never;\n\ninterface UseElementShown<E = HTMLElement> {\n    (fn: (element: E) => ElementSpyInstance): RefCallback<E>;\n    <P>(fn: (element: E, params: P) => ElementSpyInstance, params: P): RefCallback<E>;\n}\n\n/**\n * Хук для отправки события аналитики при попадании элемента во вьюпорт\n *\n * Возвращает ref-коллбек для размещения на нужном элементе\n *\n * При изменении параметров или маунте/анмаунте элемента событие переназначается\n */\nexport const useElementShown: UseElementShown = (...args: unknown[]) => {\n    const fn = args[0] as GenericSendElementShown;\n    const params = args[1] as Record<string, unknown> | undefined;\n    const [element, setElement] = useState<HTMLElement | null>(null);\n\n    // eslint-disable-next-line consistent-return\n    useEffect(() => {\n        if (element) {\n            const instance = fn(element, params);\n            return () => {\n                instance.stopSpying();\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, react-hooks/exhaustive-deps\n    }, [element, ...(params ? Object.values(params) : [])]);\n\n    return setElement;\n};\n\n/**\n * Компонент создаёт якорь для отправки аналитики при его попадании во вьюпорт\n *\n * Принимает типизированный аналитический метод и все его параметры в виде пропов\n *\n * При изменении изначений пропов событие инициализируется заново\n */\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\nconst ElementShownAnchor = <M extends unknown = GenericSendElementShown>({\n    Element = 'div',\n    className,\n    children,\n    fn,\n    ...params\n}: ElementShownAnchorCommonProps & ElementShownAnchorPropsHelper<M>): ReturnType<FC<PropsWithChildren>> => {\n    const ref = useElementShown(fn, params);\n    return (\n        <Element ref={ref} className={className}>\n            {children}\n        </Element>\n    );\n};\n\nexport default ElementShownAnchor;\n","import { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { ExperienceOption } from 'lux/models/search/searchCriteria.types';\n\nexport enum RegionTypes {\n    Current = 'currentRegion',\n    Other = 'otherRegions',\n}\n\nexport const REGION_PROP_NAMES = {\n    [RegionTypes.Current]: 'CURRENT',\n    [RegionTypes.Other]: 'OTHER',\n};\n\ninterface Company {\n    name: string;\n    id: number;\n    employerOrganizationFormId: number;\n    department: {\n        code: string;\n    } | null;\n    visibleName: string;\n}\n\nexport interface Address {\n    metroStations: {\n        metro: Array<{\n            line: {\n                color: string;\n            };\n            name: string;\n            id?: number;\n            '@cityId': number;\n            '@id': number;\n        }>;\n    } | null;\n}\nexport interface Vacancy {\n    vacancyId: number;\n    name: string;\n    company: Company;\n    insider: {\n        isVisible: boolean;\n        id: number;\n    } | null;\n    publicationTime: {\n        $: string;\n        '@timestamp': number;\n    };\n    area: {\n        name: string;\n    };\n    address: Address | null;\n    links: {\n        desktop: string;\n    };\n    compensation: {\n        currencyCode: CurrencyType;\n        from: number;\n        to: number;\n    };\n}\n\nexport interface ProfAreaCounts {\n    id: number;\n    profAreaId: number;\n    count: number;\n    hasNextPage: boolean;\n    name: string;\n    vacancies: Array<Vacancy>;\n    currentPage?: number;\n    expanded?: boolean;\n    firstPageLoaded?: boolean;\n}\n\ninterface CountsByProfCategory {\n    profCategoryId: number;\n    count: number;\n    hasNextPage: boolean;\n    name: string;\n    vacancies: Array<Vacancy>;\n    currentPage?: number;\n    expanded?: boolean;\n    firstPageLoaded?: boolean;\n}\n\nexport interface CountsByProfRole {\n    profRoleId: number;\n    count: number;\n    hasNextPage: boolean;\n    name: string;\n    vacancies: Array<Vacancy>;\n    currentPage?: number;\n    expanded?: boolean;\n    firstPageLoaded?: boolean;\n}\n\nexport interface Region {\n    name?: string;\n    areaId?: number;\n    count?: number;\n    countsByProfArea?: ProfAreaCounts[];\n    countsByProfCategory?: CountsByProfCategory[];\n    countsByProfRole?: CountsByProfRole[];\n    vacancies?: Array<Vacancy>;\n}\n\nexport interface VacancyGroupsState {\n    count?: number;\n    [RegionTypes.Current]: Region;\n    [RegionTypes.Other]?: Region;\n}\n\ninterface PayloadData {\n    profRoleId?: number;\n    profCategoryId?: number;\n    regionType: RegionTypes;\n}\nexport interface DataResponseVacancies {\n    count?: number;\n    hasNextPage: boolean;\n    vacancies: Array<Vacancy>;\n}\n\nexport interface DataCurrentPage extends DataResponseVacancies {\n    currentPage?: number;\n}\n\nexport interface VacanciesToProfRole extends PayloadData {\n    data: DataCurrentPage;\n}\n\nexport interface ProfRoleExpanded extends PayloadData {\n    expanded: boolean;\n    currentPage?: number;\n}\n\nexport interface FirstPageLoadedWithRoles extends PayloadData {\n    profRoleId: number;\n    regionType: RegionTypes;\n}\n\nexport interface VacanciesGroup {\n    count?: number;\n    countsByProfArea?: ProfAreaCounts[];\n    countsByProfCategory?: CountsByProfCategory[];\n    countsByProfRole?: CountsByProfRole[];\n    vacancies?: Array<Vacancy>;\n}\n\nexport interface FilterParams {\n    siteId?: string;\n    profArea?: string;\n    regionType?: RegionTypes;\n    groupByRegion?: boolean;\n    currentEmployerId: number;\n    area?: string[];\n    metro?: string;\n    employment?: EmploymentLower[];\n    schedule?: ScheduleCamelCase[];\n    // eslint-disable-next-line camelcase\n    professional_role?: string;\n    salary?: string;\n    // eslint-disable-next-line camelcase\n    currency_code?: string;\n    experience?: ExperienceOption[];\n    text?: string;\n    department?: string;\n}\n\nexport interface PayloadFilterParams {\n    detail: FilterParams;\n}\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Button, ButtonMode } from '@hh.ru/magritte-ui';\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport styles from './mobile-app-buttons.less';\n\ninterface Props {\n    name: string;\n    appLink: string;\n    onClickLink: () => void;\n}\n\nconst MobileAppButton: FC<Props> = ({ name, appLink, onClickLink }) => {\n    const icon = (\n        <div\n            className={classnames(styles.mobileAppButton, {\n                [styles.mobileAppButtonAndroid]: name === 'android',\n                [styles.mobileAppButtonIos]: name === 'ios',\n                [styles.mobileAppButtonHuawei]: name === 'huawei',\n            })}\n        />\n    );\n\n    return (\n        <Button\n            Element={Link}\n            to={appLink}\n            target=\"_blank\"\n            onClick={onClickLink}\n            mode={ButtonMode.Primary}\n            icon={icon}\n            hideLabel\n            ariaLabel={name}\n            data-qa={`mobile-app-link_${name}`}\n        >\n            {name}\n        </Button>\n    );\n};\n\nexport default MobileAppButton;\n","import { forwardRef } from 'react';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst Form = forwardRef<HTMLFormElement, React.ComponentPropsWithoutRef<'form'>>(\n    ({ children, method = 'POST', ...props }, ref) => {\n        const xsrfToken = useSelector(({ xsrfToken }) => xsrfToken);\n        return (\n            // eslint-disable-next-line react/forbid-elements\n            <form {...props} ref={ref} method={method}>\n                {method.toUpperCase() === 'POST' && <input type=\"hidden\" name=\"_xsrf\" value={xsrfToken} />}\n                {children}\n            </form>\n        );\n    }\n);\n\nexport default Form;\n","import { ReactNode, FC } from 'react';\n\nimport Strings from 'Utils/Strings';\nimport Currency from 'lux/components/Currency';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\ninterface FormatMoneyProps {\n    children: number | string;\n    currency: CurrencyType;\n    inCents?: boolean;\n    forceShowCents?: boolean;\n    render?: (amount: string, currencyNode: ReactNode) => JSX.Element;\n    groupSeparator?: string;\n}\nconst isNumber = (children: ReactNode): children is number => {\n    return typeof children === 'number';\n};\nconst isString = (children: ReactNode): children is string => {\n    return typeof children === 'string';\n};\n\nconst FormatMoney: FC<FormatMoneyProps> = ({\n    children,\n    currency,\n    inCents = false,\n    forceShowCents,\n    render = (amount, currencyNode) => (\n        <>\n            {amount}\n            {NON_BREAKING_SPACE}\n            {currencyNode}\n        </>\n    ),\n    groupSeparator,\n}) => {\n    let value = children;\n    if (isString(value)) {\n        value = parseFloat(value);\n    }\n    if (!isNumber(value)) {\n        return null;\n    }\n    const amount = inCents\n        ? Strings.formatCostInCents(value, groupSeparator, forceShowCents)\n        : Strings.formatCost(value, groupSeparator);\n    const currencyNode = <Currency value={currency} />;\n    return render(amount, currencyNode);\n};\n\nexport default FormatMoney;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport formatDate from 'Modules/formatDate';\nimport translation from 'lux/components/translation';\n\nconst YESTERDAY_MAX_MSECONDS = 48 * 60 * 60 * 1000;\n\nexport enum ShowYear {\n    Always = 'ALWAYS',\n    Never = 'NEVER',\n    NotCurrent = 'NOT_CURRENT',\n}\n\nconst TrlKeys = {\n    today: 'date.today.lowercase',\n    yesterday: 'date.yesterday.lowercase',\n    preposition: 'mobile.date.at',\n    months: {\n        0: 'calendar.genitive.month.0',\n        1: 'calendar.genitive.month.1',\n        2: 'calendar.genitive.month.2',\n        3: 'calendar.genitive.month.3',\n        4: 'calendar.genitive.month.4',\n        5: 'calendar.genitive.month.5',\n        6: 'calendar.genitive.month.6',\n        7: 'calendar.genitive.month.7',\n        8: 'calendar.genitive.month.8',\n        9: 'calendar.genitive.month.9',\n        10: 'calendar.genitive.month.10',\n        11: 'calendar.genitive.month.11',\n    },\n};\n\ninterface HumanDateProps {\n    textify?: boolean;\n    date: string | number;\n    showClock?: boolean;\n    showYear?: ShowYear;\n    preposition?: boolean;\n}\n\nconst isCorrectMonth = (month: number): month is keyof typeof TrlKeys.months => month in TrlKeys.months;\n\nconst HumanDate: TranslatedComponent<HumanDateProps> = ({\n    textify,\n    date,\n    showClock,\n    showYear = ShowYear.Always,\n    trls,\n    preposition,\n}) => {\n    if (!date) {\n        return null;\n    }\n\n    const currentDate = new Date();\n    const dateObject = new Date(date);\n    let text = null;\n\n    if (textify && Math.abs(currentDate.valueOf() - dateObject.valueOf()) < YESTERDAY_MAX_MSECONDS) {\n        if (currentDate.getDate() === dateObject.getDate()) {\n            text = trls[TrlKeys.today];\n        }\n\n        currentDate.setDate(currentDate.getDate() - 1);\n\n        if (currentDate.getDate() === dateObject.getDate()) {\n            text = trls[TrlKeys.yesterday];\n        }\n    }\n\n    const day = dateObject.getDate();\n\n    let content = text;\n\n    if (!text) {\n        const month = dateObject.getMonth();\n        if (isCorrectMonth(month)) {\n            content = `${day}\\u00a0${trls[TrlKeys.months[month]]}`;\n        }\n        if (\n            showYear === ShowYear.Always ||\n            (showYear === ShowYear.NotCurrent && dateObject.getFullYear() !== new Date().getFullYear())\n        ) {\n            content += `\\u00a0${dateObject.getFullYear()}`;\n        }\n    }\n\n    return (\n        <span suppressHydrationWarning>\n            {content}\n            {preposition && `\\u00a0${trls[TrlKeys.preposition]}`}\n            {showClock && `\\u00a0${formatDate(dateObject, 'HH:mm')}`}\n        </span>\n    );\n};\n\nexport default translation(HumanDate);\n","import { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\n// Hardcoded by default across all application and configs\nconst ZP_CLIENT_ID = 'M4OJP5EUM28VNV0E5RSC7JK21URA8FVL2LPIQFF2T36CUMF8PU3Q1MFGL866MJ06';\n\nexport function useHHAuth(): string {\n    const ZP_REDIRECT_URI = 'https://zarplata.ru';\n    return `https://hh.ru/oauth/authorize?response_type=code&client_id=${ZP_CLIENT_ID}&redirect_uri=${ZP_REDIRECT_URI}/zp_resume_import/oauth_success&role=applicant`;\n}\n\nexport type Steps = 'choose' | 'auth' | 'import' | 'copy' | 'error';\n\nexport interface StepProps {\n    step: Steps;\n    url: string;\n    setStep: (step: Steps) => void;\n    onClose: () => void;\n}\n\nexport interface Resume {\n    id: string;\n    title: string;\n}\n\nconst setVisibleZpImportResumeModal = makeSetStoreField('isZpImportResumeModalOpen');\n\nexport function useZpImportResumeModal(): [boolean, (status: boolean) => void] {\n    const dispatch = useDispatch();\n    const visible = useSelector((state) => state.isZpImportResumeModalOpen);\n\n    const setVisible = (status: boolean) => {\n        dispatch(setVisibleZpImportResumeModal(status));\n    };\n\n    return [visible, setVisible];\n}\n","import Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    clear: 'Clear',\n};\n\nconst ClearButton: TranslatedComponent<{ onClick: () => void }> = ({ trls, onClick }) => (\n    <>\n        <VSpacing base={4} />\n        <Button\n            appearance={ButtonAppearance.Outlined}\n            kind={ButtonKind.Inversed}\n            onClick={onClick}\n            scale={ButtonScale.Small}\n        >\n            {trls[TrlKeys.clear]}\n        </Button>\n        <VSpacing base={1} />\n    </>\n);\n\nexport default translation(ClearButton);\n","import { useCallback, useEffect, useState, memo, ReactNode, ReactElement, FC } from 'react';\nimport { Merge } from 'type-fest';\n\nimport Info, { InfoPlacement, InfoLayer, InfoTheme, InfoProps } from 'bloko/blocks/drop/Info';\n\nimport Notices, { MarkAsViewedEvent } from 'Modules/Notices';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ClearButton from 'lux/components/Infotip/ClearButton';\n\ninterface InfotipProps {\n    /** Название показываемого инфотипа */\n    name: string;\n    render: (hideInfotip: () => void) => ReactNode;\n    show?: boolean;\n    showClearButton?: boolean;\n    onSeen?: () => void;\n    onClose?: () => void;\n    markAsViewedEvent?: MarkAsViewedEvent;\n    children: ReactElement;\n    autoHide?: boolean;\n}\n\nconst Infotip: FC<Merge<InfotipProps, Omit<InfoProps, 'render'>>> = ({\n    name,\n    render,\n    show,\n    showClearButton,\n    onSeen,\n    autoHide = true,\n    onClose,\n    markAsViewedEvent = MarkAsViewedEvent.OnShow,\n    children,\n    ...otherProps\n}) => {\n    const [isVisible, setVisible] = useState(true);\n    const showInfoTip = useSelector(({ infoTip }) => show && infoTip.name === name);\n\n    const mark = useCallback(\n        (action: MarkAsViewedEvent) => {\n            if (markAsViewedEvent === action) {\n                Notices.markAsViewed(name);\n                onSeen?.();\n            }\n        },\n        [name, markAsViewedEvent, onSeen]\n    );\n\n    useEffect(() => {\n        if (showInfoTip && autoHide) {\n            mark(MarkAsViewedEvent.OnShow);\n        }\n    }, [autoHide, mark, showInfoTip]);\n\n    const hideInfotip = useCallback(() => {\n        mark(MarkAsViewedEvent.OnHide);\n        onClose?.();\n        setVisible(false);\n    }, [mark, onClose]);\n\n    const renderContent = useCallback(\n        () => (\n            <>\n                {render(hideInfotip)}\n                {showClearButton && <ClearButton onClick={hideInfotip} />}\n            </>\n        ),\n        [hideInfotip, render, showClearButton]\n    );\n\n    return (\n        <Info show={showInfoTip && isVisible} onClose={hideInfotip} render={renderContent} {...otherProps}>\n            {children}\n        </Info>\n    );\n};\n\nexport default memo(Infotip);\nexport { InfoPlacement, InfoLayer, InfoTheme };\n","import { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport SingleCalendarPicker from 'bloko/blocks/calendar/SingleCalendarPicker';\nimport { FormItem, FormError } from 'bloko/blocks/form';\nimport { H2, SubHeader } from 'bloko/blocks/header';\nimport Icon, { IconKind, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport Information from 'bloko/blocks/information';\nimport InputText, { InputType } from 'bloko/blocks/inputText';\nimport Modal from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport formatDate from 'Modules/formatDate';\nimport { dispatchNotLuxDataUpdate } from 'Modules/notLuxData';\nimport translation from 'lux/components/translation';\nimport { CurrentInterview, TopicNegotiationInterviewInfo } from 'lux/models/candidatesList';\nimport fetcher from 'lux/modules/fetcher';\n\nconst REMINDER_URL = '/shards/employer/resume/interview';\n\ndeclare global {\n    interface FetcherDeleteApi {\n        [REMINDER_URL]: {\n            queryParams: { negotiationInterviewId: number };\n            response: void;\n        };\n    }\n    interface FetcherPostApi {\n        [REMINDER_URL]: {\n            queryParams: void;\n            body: {\n                scheduledTime: string;\n                topicId: string;\n            };\n            response: CurrentInterview;\n        };\n    }\n    interface FetcherPutApi {\n        [REMINDER_URL]: {\n            queryParams: void;\n            body: {\n                scheduledTime: string;\n                negotiationInterviewId: number;\n            };\n            response: CurrentInterview;\n        };\n    }\n}\n\ninterface RemindModalProps {\n    remindInfo: TopicNegotiationInterviewInfo;\n    visible: boolean;\n    topicId: string;\n    onClose: () => void;\n    onChange: (interview: CurrentInterview) => void;\n    onDelete: () => void;\n    fromNotification?: boolean;\n}\n\nconst TrlKeys = {\n    title: 'resume.interview.schedule.title',\n    description: 'resume.interview.schedule.description',\n    alreadyNotified: 'resume.interview.schedule.alreadyNotified',\n    date: 'resume.interview.schedule.date.title.alt',\n    time: 'resume.interview.schedule.time.title.alt',\n    save: 'resume.interview.schedule.save.alt',\n    saveChanges: 'resume.interview.schedule.saveChanges',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    error: 'resume.interview.schedule.error.time.alt',\n};\n\nconst RemindModal: TranslatedComponent<RemindModalProps> = ({\n    trls,\n    visible,\n    topicId,\n    remindInfo: { currentInterview, allowedSchedulingParams },\n    fromNotification,\n    onClose,\n    onChange,\n    onDelete,\n}) => {\n    const [timeError, setTimeError] = useState(false);\n    const currentDate = new Date().toISOString();\n    const selectedDate = useRef<string>(currentInterview?.scheduledTime?.split('T')[0] || currentDate.split('T')[0]);\n    const timeRef = useRef<HTMLInputElement>(null);\n    const analyticsSentRef = useRef(false);\n    const elementRef = useRef<HTMLDivElement>(null);\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    const setReminder = () => {\n        if (!timeRef.current?.value) {\n            setTimeError(true);\n            return;\n        }\n        const scheduledTime = new Date(`${selectedDate.current}T${timeRef.current.value}`).toISOString();\n        const request = currentInterview\n            ? fetcher.put(REMINDER_URL, {\n                  negotiationInterviewId: currentInterview.negotiationInterviewId,\n                  scheduledTime,\n              })\n            : fetcher.post(REMINDER_URL, {\n                  topicId,\n                  scheduledTime,\n              });\n\n        request.then(\n            (response) => {\n                if (fromNotification) {\n                    Analytics.sendHHEventButtonClick('schedule_interview_submit', { from: 'notification' });\n                } else {\n                    onChange(response.data);\n                }\n                setTimeError(false);\n                onClose();\n            },\n            () => {\n                setTimeError(true);\n            }\n        );\n    };\n\n    const deleteReminder = () => {\n        void fetcher\n            .delete(REMINDER_URL, {\n                params: { negotiationInterviewId: currentInterview?.negotiationInterviewId || 0 },\n            })\n            .then(() => {\n                if (!fromNotification) {\n                    onDelete();\n                }\n                setTimeError(false);\n                onClose();\n            }, console.error);\n    };\n\n    useEffect(() => {\n        if (!analyticsSentRef.current && elementRef.current !== null) {\n            Analytics.sendHHEventElementShown(elementRef.current, {\n                name: 'interview_shedule',\n                labelType: 'create',\n            });\n            analyticsSentRef.current = true;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (visible) {\n            dispatchNotLuxDataUpdate({ enableShortCuts: false });\n        } else {\n            dispatchNotLuxDataUpdate({ enableShortCuts: true });\n        }\n    }, [visible]);\n\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <div\n                className={classnames('resume-interview-schedule', {\n                    'resume-interview-schedule_xs': isXs,\n                })}\n                ref={elementRef}\n            >\n                <div>\n                    <H2>\n                        {trls[TrlKeys.title]}\n                        <VSpacing base={2} />\n                        <SubHeader>{trls[TrlKeys.description]}</SubHeader>\n                    </H2>\n                    <VSpacing base={isXs ? 6 : 4} />\n                    {currentInterview?.applicantWasNotified && (\n                        <>\n                            <Information>{trls[TrlKeys.alreadyNotified]}</Information>\n                            <VSpacing base={4} />\n                        </>\n                    )}\n                    <div\n                        className={classnames('resume-interview-schedule__container', {\n                            'resume-interview-schedule__container_xs': isXs,\n                        })}\n                    >\n                        <div className=\"resume-interview-schedule__date-block\">\n                            <div className=\"resume-interview-schedule__sub-title\">\n                                <Text strong>{trls[TrlKeys.date]}</Text>\n                            </div>\n                            <SingleCalendarPicker\n                                initialDate={currentDate}\n                                highlighted={currentInterview?.scheduledTime || currentDate}\n                                disableDaysBeforeDate={currentDate}\n                                onDateClick={(date) => {\n                                    if (date) {\n                                        selectedDate.current = date;\n                                    }\n                                }}\n                            />\n                        </div>\n                        <div\n                            className={classnames('resume-interview-schedule__time-block', {\n                                'resume-interview-schedule__time-block_xs': isXs,\n                            })}\n                        >\n                            <VSpacing base={isXs ? 6 : 0} />\n                            <div\n                                className={classnames('resume-interview-schedule__sub-title', {\n                                    'resume-interview-schedule__sub-title_xs': isXs,\n                                })}\n                            >\n                                <Text strong>{trls[TrlKeys.time]}</Text>\n                            </div>\n                            <FormItem>\n                                <InputText\n                                    size={isXs ? undefined : 11}\n                                    ref={timeRef}\n                                    invalid={timeError}\n                                    type={InputType.Time}\n                                    icon={\n                                        <Icon\n                                            view={IconView.Clock}\n                                            initial={IconColor.Gray60}\n                                            kind={IconKind.Default}\n                                            scale={IconScale.Small}\n                                        />\n                                    }\n                                    defaultValue={formatDate(\n                                        currentInterview?.scheduledTime ||\n                                            allowedSchedulingParams.nearestAllowedScheduleTime,\n                                        'HH:mm'\n                                    )}\n                                />\n                            </FormItem>\n                            <FormError show={timeError}>{trls[TrlKeys.error]}</FormError>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    className={classnames('resume-interview-schedule__buttons', {\n                        'resume-interview-schedule__buttons_xs': isXs,\n                    })}\n                >\n                    <Button\n                        onClick={currentInterview ? deleteReminder : onClose}\n                        stretched={isXs}\n                        data-qa={`interview-reminder-${currentInterview ? 'delete' : 'close'}`}\n                    >\n                        {trls[currentInterview ? TrlKeys.delete : TrlKeys.cancel]}\n                    </Button>\n                    <VSpacing base={isXs ? 3 : 0} />\n                    <div\n                        className={classnames('resume-interview-schedule__primary-button-container', {\n                            'resume-interview-schedule__primary-button-container_xs': isXs,\n                        })}\n                    >\n                        <Button\n                            kind={ButtonKind.Primary}\n                            onClick={setReminder}\n                            stretched={isXs}\n                            data-qa=\"interview-reminder-submit\"\n                        >\n                            {trls[currentInterview ? TrlKeys.saveChanges : TrlKeys.save]}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default translation(RemindModal);\n","import { FC, PropsWithChildren } from 'react';\n\nconst NoIndex: FC<PropsWithChildren> = ({ children }) => (\n    <>\n        <span dangerouslySetInnerHTML={{ __html: '<!--noindex-->' }} />\n        {children}\n        <span dangerouslySetInnerHTML={{ __html: '<!--/noindex-->' }} />\n    </>\n);\n\nexport default NoIndex;\n","import PropTypes from 'prop-types';\n\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst AccountDeleteResumesSendSuccess = ({ trls, resumesCount, login }) => (\n    <>\n        <NotificationHeading>{trls[AccountDeleteResumesSendSuccess.trls.title]}</NotificationHeading>\n        <NotificationFooter>\n            {format(trls[AccountDeleteResumesSendSuccess.trls.message], {\n                '{0}': resumesCount,\n                '{1}': login,\n            })}\n        </NotificationFooter>\n    </>\n);\nAccountDeleteResumesSendSuccess.propTypes = {\n    trls: PropTypes.object,\n    resumesCount: PropTypes.number.isRequired,\n    login: PropTypes.string.isRequired,\n};\nAccountDeleteResumesSendSuccess.trls = {\n    title: 'deleteMePage.resume.notification.success.title',\n    message: 'deleteMePage.resume.notification.success.message',\n};\nexport const accountDeleteResumesSendSuccess = {\n    Element: translation(AccountDeleteResumesSendSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const ACCOUNT_DELETE_RESUMES_SEND_SUCCESS = 'ACCOUNT_DELETE_RESUMES_SEND_SUCCESS';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    resendCodeError: 'auth.twoFactor.error.resend',\n};\n\nconst ResendErrorNotification: TranslatedComponent = ({ trls }) => {\n    return <div>{trls[TrlKeys.resendCodeError]}</div>;\n};\n\nexport const resendErrorNotification = {\n    Element: translation(ResendErrorNotification),\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\n\nexport const RESEND_CODE_ERROR = 'RESEND_CODE_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nexport const ADD_AUTH_PHONE_SUCCESS = 'ADD_AUTH_PHONE_SUCCESS';\n\nconst TrlKeys = {\n    textNew: 'applicant.settings.phone.new.success',\n};\n\nconst AddAuthPhoneSuccess: TranslatedComponent<{ phoneNumber: string }> = ({ trls, phoneNumber }) => (\n    <>\n        {format(trls[TrlKeys.textNew], {\n            '{formattedPhone}': phoneNumber,\n        })}\n    </>\n);\n\nexport const addAuthPhoneSuccess = {\n    Element: translation(AddAuthPhoneSuccess),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 30000,\n};\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport format from 'bloko/common/format';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    success: 'notification.applicant.job.search.status.success',\n    statusSet: 'notification.applicant.job.search.status.success.status',\n    status: {\n        [JobSearchStatus.ActiveSearch]: 'jobSearchStatus.change.version2.active_search',\n        [JobSearchStatus.LookingForOffers]: 'jobSearchStatus.change.version2.looking_for_offers',\n        [JobSearchStatus.HasJobOffer]: 'jobSearchStatus.change.version2.has_job_offer',\n        [JobSearchStatus.AcceptedJobOffer]: 'jobSearchStatus.change.version2.accepted_job_offer',\n        [JobSearchStatus.NotLookingForJob]: 'jobSearchStatus.change.version2.not_looking_for_job',\n    },\n};\n\nexport const APPLICANT_JOB_SEARCH_STATUS_SUCCESS = 'APPLICANT_JOB_SEARCH_STATUS_SUCCESS';\n\nconst ApplicantJobSearchStatusSuccess: TranslatedComponent = ({ trls }) => {\n    const currentStatus = useSelector((state) => state.applicantUserStatuses?.jobSearchStatus?.name);\n\n    return (\n        <div data-qa=\"applicant-job-search-status-success-notification\">\n            {!currentStatus && <NotificationHeading>{trls[TrlKeys.success]}</NotificationHeading>}\n            {currentStatus && format(trls[TrlKeys.statusSet], { '{0}': trls[TrlKeys.status[currentStatus]] })}\n        </div>\n    );\n};\n\nexport default {\n    Element: translation(ApplicantJobSearchStatusSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'vacancyResponse.noCallAnswer.notification',\n};\n\nconst ApplicantNoCallAnswer: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.text]}</>;\n\nexport const applicantNoCallAnswer = {\n    Element: translation(ApplicantNoCallAnswer),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const APPLICANT_NO_CALL_ANSWER = 'APPLICANT_NO_CALL_ANSWER';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst ResumeSaveError = ({ trls }) => trls[ResumeSaveError.trls.error];\nResumeSaveError.trls = {\n    error: 'resume.error',\n};\nResumeSaveError.propTypes = {\n    trls: PropTypes.object,\n};\nexport const resumeSaveError = {\n    Element: translation(ResumeSaveError),\n    kind: 'error',\n};\nexport const RESUME_SAVE_ERROR = 'RESUME_SAVE_ERROR';\n\nconst ResumeSaveSuccess = ({ trls }) => trls[ResumeSaveSuccess.trls.save];\nResumeSaveSuccess.trls = {\n    save: 'applicant.universityMapping.saveSuccess',\n};\nResumeSaveSuccess.propTypes = {\n    trls: PropTypes.object,\n};\nexport const resumeSaveSuccess = {\n    Element: translation(ResumeSaveSuccess),\n    kind: 'ok',\n};\nexport const RESUME_SAVE_SUCCESS = 'RESUME_SAVE_SUCCESS';\n\nconst AnonymousConversionSuccess = ({ trls }) => trls[AnonymousConversionSuccess.trls.text];\nAnonymousConversionSuccess.trls = {\n    text: 'resumeList.resumesConvertedNotification.success',\n};\nAnonymousConversionSuccess.propTypes = {\n    trls: PropTypes.object,\n};\nexport const anonymousConversionSuccess = {\n    Element: translation(AnonymousConversionSuccess),\n    kind: 'ok',\n};\nexport const ANONYMOUS_CONVERSION_SUCCESS = 'ANONYMOUS_CONVERSION_SUCCESS';\n\nconst AnonymousConversionError = ({ trls }) => trls[AnonymousConversionError.trls.text];\nAnonymousConversionError.trls = {\n    text: 'resumeList.resumesConvertedNotification.error',\n};\nAnonymousConversionError.propTypes = {\n    trls: PropTypes.object,\n};\nexport const anonymousConversionError = {\n    Element: translation(AnonymousConversionError),\n    kind: 'error',\n};\nexport const ANONYMOUS_CONVERSION_ERROR = 'ANONYMOUS_CONVERSION_ERROR';\n\nconst ResumeLimitExceededError = ({ trls }) => trls[ResumeLimitExceededError.trls.text];\nResumeLimitExceededError.trls = {\n    text: 'supernova.navi.createResume.maxResumes',\n};\nResumeLimitExceededError.propTypes = {\n    trls: PropTypes.object,\n};\nexport const resumeLimitExceededError = {\n    Element: translation(ResumeLimitExceededError),\n    kind: 'error',\n};\nexport const RESUME_LIMIT_EXCEEDED_ERROR = 'RESUME_LIMIT_EXCEEDED_ERROR';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst PaymentFormError = ({ trls }) => trls[PaymentFormError.trls.message];\nPaymentFormError.trls = { message: 'applicant.services.payment.form.serverError' };\nPaymentFormError.propTypes = { trls: PropTypes.object };\nexport const paymentFormError = {\n    Element: translation(PaymentFormError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const APPLICANT_SERVICE_PAYMENT_ERROR = 'APPLICANT_SERVICE_PAYMENT_ERROR';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS = 'ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS';\n\nconst TrlKeys = {\n    header: 'employer.vacancy.archive.applicantsFeedback.notification.header',\n    text: 'employer.vacancy.archive.applicantsFeedback.notification.text',\n};\n\nconst ArchiveVacancyApplicantsFeedbackSuccess: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.header]}</NotificationHeading>\n        {trls[TrlKeys.text]}\n    </>\n);\n\nexport default {\n    Element: translation(ArchiveVacancyApplicantsFeedbackSuccess),\n    kind: 'ok',\n    autoClose: false,\n};\n","import { Fragment } from 'react';\n\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    accountDeletedEmail: {\n        title: 'notifications.account_deleted_email',\n        content: 'notifications.account_deleted_email.content',\n    },\n    resetPasswordEmailSuccess: {\n        message: 'employer.auth.resetPassword.mailSent.message',\n        title: 'employer.auth.resetPassword.mailSent.title',\n    },\n};\n\ninterface Props {\n    email: string;\n}\n\nconst AccountDeletedEmail: TranslatedComponent<Props> = ({ trls, email }) => (\n    <Fragment>\n        <NotificationHeading>{trls[TrlKeys.accountDeletedEmail.title]}</NotificationHeading>\n        <p>{format(trls[TrlKeys.accountDeletedEmail.content], { '{}': email })}</p>\n    </Fragment>\n);\n\nexport const authEmployerAccountDeletedEmail = {\n    Element: translation(AccountDeletedEmail),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const ACCOUNT_DELETED_EMAIL = 'ACCOUNT_DELETED_EMAIL';\n\nconst ResetPasswordEmailSuccess: TranslatedComponent<Props> = ({ trls, email }) => (\n    <>\n        <NotificationHeading>\n            {format(trls[TrlKeys.resetPasswordEmailSuccess.title], { '{0}': email })}\n        </NotificationHeading>\n        {trls[TrlKeys.resetPasswordEmailSuccess.message]}\n    </>\n);\n\nexport const resetPasswordEmailSuccess = {\n    Element: translation(ResetPasswordEmailSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESET_PASSWORD_EMAIL_SUCCESS = 'RESET_PASSWORD_EMAIL_SUCCESS';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport {\n    ChangeTopicActionError as Error,\n    isChangeTopicActionError,\n} from 'lux/models/employerNegotiationsChangeTopic/error.types';\n\nconst TrlKeys = {\n    [Error.ManagerLimit]: 'negotiations.changeTopic.errors.MANAGER_LIMIT_EXCEED',\n    [Error.EmployerLimit]: 'negotiations.changeTopic.errors.EMPLOYER_LIMIT_EXCEED',\n    [Error.ArchiveTopic]: 'negotiations.changeTopic.errors.CANT_CHANGE_ARCHIVE_TOPIC_STATE',\n    [Error.ReadOnlyTopic]: 'negotiations.changeTopic.errors.CANT_CHANGE_READ_ONLY_TOPIC',\n    [Error.InvitationLimit]: 'negotiations.changeTopic.errors.INVITATION_LIMIT_EXCEEDED',\n    [Error.CantInvite]: 'negotiations.changeTopic.errors.VACANCY_CANT_INVITE_TO',\n    [Error.ResumesUnavailable]: 'negotiations.changeTopic.errors.RESUMES_UNAVAILABLE',\n    [Error.VacancyUnavailable]: 'negotiations.changeTopic.errors.VACANCY_UNAVAILABLE',\n    [Error.NoFaService]: 'changeTopic.errors.NO_FA_SERVICE',\n    default: 'negotiations.changeTopic.errors.defaultErrorText',\n    title: {\n        [Error.ManagerLimit]: 'negotiations.changeTopic.errors.notification.title.MANAGER_LIMIT_EXCEED',\n        [Error.EmployerLimit]: 'negotiations.changeTopic.errors.notification.title.EMPLOYER_LIMIT_EXCEED',\n        [Error.NoFaService]: 'negotiations.changeTopic.errors.notification.title.NO_FA_SERVICE',\n    },\n    linkToPendingOrders: 'negotiations.changeTopic.errors.NO_FA_SERVICE.linkToPendingOrders',\n    linkToPrice: 'negotiations.changeTopic.errors.NO_FA_SERVICE.linkToPrice',\n};\n\nconst ChangeTopicError: TranslatedComponent<{ errorCode: Exclude<Error, Error.NoFaService> | string }> = ({\n    trls,\n    errorCode,\n}) => {\n    const titleKey = TrlKeys.title[errorCode as keyof typeof TrlKeys.title];\n    const textKey = isChangeTopicActionError(errorCode) ? TrlKeys[errorCode] : TrlKeys.default;\n    return (\n        <>\n            {titleKey && <NotificationHeading>{formatNewLine(trls[titleKey])}</NotificationHeading>}\n            {formatNewLine(trls[textKey])}\n        </>\n    );\n};\n\nexport const CHANGE_TOPIC_ERROR = 'CHANGE_TOPIC_ERROR';\n\nexport const changeTopicError = {\n    Element: translation(ChangeTopicError),\n    kind: 'error',\n};\n\nexport const CHANGE_TOPIC_ERROR_NO_FA = 'CHANGE_TOPIC_ERROR_NO_FA';\n\nconst ChangeTopicErrorNoFa: TranslatedComponent = ({ trls }) => {\n    return (\n        <>\n            <NotificationHeading>{trls[TrlKeys.title[Error.NoFaService]]}</NotificationHeading>\n            {formatNewLine(trls[TrlKeys[Error.NoFaService]])}{' '}\n            <Link to={'/employer/carts'}>{trls[TrlKeys.linkToPendingOrders]}</Link>\n            <VSpacing base={4} />\n            <Button Element={Link} to={'/price'} scale={ButtonScale.Small}>\n                {trls[TrlKeys.linkToPrice]}\n            </Button>\n        </>\n    );\n};\n\nexport const changeTopicErrorNoQa = {\n    Element: translation(ChangeTopicErrorNoFa),\n    kind: 'error',\n};\n","import NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    errorTitle: 'employer.VacancyCreate.clickme.autocampaign.form.saved.errorTitle',\n    errorText: 'employer.VacancyCreate.clickme.autocampaign.form.saved.errorText',\n};\n\nexport const SAVED_CLICKME_AUTOCAMPAIGN_INFO_ERROR = 'SAVED_CLICKME_AUTOCAMPAIGN_INFO_ERROR';\nconst SavedClickmeAutoCampaignError: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.errorTitle]}</NotificationHeading>\n        <NotificationFooter>{trls[TrlKeys.errorText]}</NotificationFooter>\n    </>\n);\n\nexport const savedClickmeAutoCampaignError = {\n    Element: translation(SavedClickmeAutoCampaignError),\n    kind: 'error',\n    autoClose: true,\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const DEFAULT_ERROR = 'DEFAULT_ERROR';\n\nconst TrlKeys = {\n    error: 'lux.error',\n};\n\nconst DefaultError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport default {\n    Element: translation(DefaultError),\n    kind: 'error',\n    autoClose: true,\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    success: 'admin.callTracking.vacancy.disable.notification.success',\n    alreadyDisabled: 'admin.callTracking.vacancy.disable.notification.already.disabled',\n};\nconst CallTrackingDisableSuccess: TranslatedComponent = ({ trls }) => {\n    return <p>{trls[TrlKeys.success]}</p>;\n};\n\nexport const callTrackingDisableSuccess = {\n    Element: translation(CallTrackingDisableSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const CALL_TRACKING_DISABLE_SUCCESS = 'CALL_TRACKING_DISABLE_SUCCESS';\n\nconst CallTrackingAlreadyDisabled: TranslatedComponent = ({ trls }) => {\n    return <p>{trls[TrlKeys.alreadyDisabled]}</p>;\n};\n\nexport const callTrackingAlreadyDisabled = {\n    Element: translation(CallTrackingAlreadyDisabled),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const CALL_TRACKING_ALREADY_DISABLED = 'CALL_TRACKING_ALREADY_DISABLED';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'employer.settings.email.saveSuccess',\n};\n\nconst NotificationContent: TranslatedComponent = ({ trls }) => (\n    <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n);\n\nexport const emailTemplateSaveSuccess = {\n    Element: translation(NotificationContent),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const EMAIL_TEMPLATE_SAVE_SUCCESS = 'EMAIL_TEMPLATE_SAVE_SUCCESS';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    error: 'employer.implants.switch.error',\n};\n\nexport const EmployerAccountSwitchError: TranslatedComponent = ({ trls }) => {\n    return <div>{trls[TrlKeys.error]}</div>;\n};\n\nexport const employerAccountSwitchError = {\n    Element: translation(EmployerAccountSwitchError),\n    type: 'error',\n};\n\nexport const EMPLOYER_ACCOUNT_SWITCH_ERROR = 'EMPLOYER_ACCOUNT_SWITCH_ERROR';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst EmployerAddressDeleted = ({ trls }) => trls[EmployerAddressDeleted.trls.message];\nEmployerAddressDeleted.trls = { message: 'employer.address.deleted.notification' };\nEmployerAddressDeleted.propTypes = { trls: PropTypes.object };\nexport const employerAddressDeleted = { Element: translation(EmployerAddressDeleted), kind: 'ok', autoClose: true };\nexport const EMPLOYER_ADDRESS_DELETED = 'EMPLOYER_ADDRESS_DELETED';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport enum AuctionErrorType {\n    AlreadyCreated = 'alreadyCreated',\n}\n\nconst TrlKeys = {\n    commonErrors: {\n        [AuctionErrorType.AlreadyCreated]: 'employerAuction.error.alreadyCreated',\n    },\n};\n\nconst AuctionError: TranslatedComponent<{ errorType: AuctionErrorType }> = ({ trls, errorType }) => (\n    <>{trls[TrlKeys.commonErrors[errorType]]}</>\n);\n\nexport const auctionError = {\n    Element: translation(AuctionError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const AUCTION_ERROR = 'AUCTION_ERROR';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport HumanDate, { ShowYear } from 'lux/components/HumanDate';\nimport translation from 'lux/components/translation';\nimport { EmployerCartsNotificationKind } from 'lux/models/employerCarts';\n\nexport const EMPLOYER_CARTS_DELAYED_CART_INFO = 'EMPLOYER_CARTS_DELAYED_CART_INFO';\n\nconst TrlKeys = {\n    [EmployerCartsNotificationKind.Activate]: {\n        title: 'notification.billing.delayed.cart.activation.title',\n        content: 'notification.billing.delayed.cart.content',\n    },\n    [EmployerCartsNotificationKind.Purchase]: {\n        title: 'notification.billing.delayed.cart.purchase.title',\n        content: 'notification.billing.delayed.cart.content',\n    },\n};\n\ninterface DelayedCartNotificationProps {\n    expirationDate: string;\n    kind: EmployerCartsNotificationKind;\n}\n\nconst DelayedCartNotification: TranslatedComponent<DelayedCartNotificationProps> = ({ expirationDate, kind, trls }) => (\n    <>\n        <NotificationHeading>\n            {formatToReactComponent(trls[TrlKeys[kind].title], {\n                '{0}': <HumanDate date={expirationDate} showYear={ShowYear.NotCurrent} />,\n            })}\n        </NotificationHeading>\n        {trls[TrlKeys[kind].content]}\n    </>\n);\n\nexport const employerCartsDelayedCartInfo = {\n    Element: translation(DelayedCartNotification),\n    notificationName: 'delayedCartActivationWarning',\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    success: 'password.change.success',\n};\n\nconst EmployerChangePaswordSuccess: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.success]}</>;\n\nexport const employerChangePasswordSuccess = {\n    Element: translation(EmployerChangePaswordSuccess),\n    kind: 'ok',\n};\n\nexport const EMPLOYER_CHANGE_PASSWORD_SUCCESS = 'EMPLOYER_CHANGE_PASSWORD_SUCCESS';\n","import PropTypes from 'prop-types';\n\nimport { format, formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst EditForbiddenError = ({ trls }) => formatNewLine(trls[EditForbiddenError.trls.message]);\nEditForbiddenError.trls = { message: 'company.constructor.edit.forbidden' };\nEditForbiddenError.propTypes = { trls: PropTypes.object };\nexport const employerConstructorEditForbiddenError = {\n    Element: translation(EditForbiddenError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_EDIT_FORBIDDEN = 'EMPLOYER_CONSTRUCTOR_EDIT_FORBIDDEN';\n\nconst PictureFileTooLarge = ({ trls }) => formatNewLine(trls[PictureFileTooLarge.trls.message]);\nPictureFileTooLarge.trls = { message: 'employerconstructor.notify.pictureFileTooLarge' };\nPictureFileTooLarge.propTypes = { trls: PropTypes.object };\nexport const employerConstructorPictureFileTooLarge = {\n    Element: translation(PictureFileTooLarge),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_PICTURE_FILE_TOO_LARGE = 'EMPLOYER_CONSTRUCTOR_PICTURE_FILE_TOO_LARGE';\n\nconst UnsupportedPictureFileFormat = ({ trls }) => formatNewLine(trls[UnsupportedPictureFileFormat.trls.message]);\nUnsupportedPictureFileFormat.trls = { message: 'employerconstructor.notify.unsupportedPictureFileFormat' };\nUnsupportedPictureFileFormat.propTypes = { trls: PropTypes.object };\nexport const employerConstructorUnsupportedPictureFileFormat = {\n    Element: translation(UnsupportedPictureFileFormat),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_UNSUPPORTED_PICTURE_FILE_FORMAT =\n    'EMPLOYER_CONSTRUCTOR_UNSUPPORTED_PICTURE_FILE_FORMAT';\n\nconst InvalidPictureSize = ({ trls, minimumWidth, minimumHeight }) =>\n    formatNewLine(\n        format(trls[InvalidPictureSize.trls.message], {\n            '{0}': minimumWidth,\n            '{1}': minimumHeight,\n        })\n    );\nInvalidPictureSize.trls = { message: 'employerconstructor.notify.invalidPictureSize' };\nInvalidPictureSize.propTypes = {\n    trls: PropTypes.object,\n    minimumWidth: PropTypes.number,\n    minimumHeight: PropTypes.number,\n};\nexport const employerConstructorInvalidPictureSize = {\n    Element: translation(InvalidPictureSize),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_INVALID_PICTURE_SIZE = 'EMPLOYER_CONSTRUCTOR_INVALID_PICTURE_SIZE';\n\nconst SaveTemplateOk = ({ trls }) => trls[SaveTemplateOk.trls.message];\nSaveTemplateOk.trls = { message: 'employerconstructor.notify.saveTemplateOk' };\nSaveTemplateOk.propTypes = { trls: PropTypes.object };\nexport const employerConstructorSaveTemplateOk = { Element: translation(SaveTemplateOk), kind: 'ok', autoClose: true };\nexport const EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_OK = 'EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_OK';\n\nconst SaveTemplateError = ({ trls }) => trls[SaveTemplateError.trls.message];\nSaveTemplateError.trls = { message: 'employerconstructor.notify.saveTemplateError' };\nSaveTemplateError.propTypes = { trls: PropTypes.object };\nexport const employerConstructorSaveTemplateError = {\n    Element: translation(SaveTemplateError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_ERROR = 'EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_ERROR';\n\nconst ImageUploaded = ({ trls }) => trls[ImageUploaded.trls.message];\nImageUploaded.trls = { message: 'employerconstructor.notify.imageUploaded' };\nImageUploaded.propTypes = { trls: PropTypes.object };\nexport const employerConstructorImageUploaded = { Element: translation(ImageUploaded), kind: 'ok', autoClose: true };\nexport const EMPLOYER_CONSTRUCTOR_IMAGE_UPLOADED = 'EMPLOYER_CONSTRUCTOR_IMAGE_UPLOADED';\n\nconst ImageResized = ({ trls }) => trls[ImageResized.trls.message];\nImageResized.trls = { message: 'employerconstructor.notify.imageResized' };\nImageResized.propTypes = { trls: PropTypes.object };\nexport const employerConstructorImageResized = { Element: translation(ImageResized), kind: 'ok', autoClose: true };\nexport const EMPLOYER_CONSTRUCTOR_IMAGE_RESIZED = 'EMPLOYER_CONSTRUCTOR_IMAGE_RESIZED';\n\nconst ResponseTimeOut = ({ trls }) => trls[ResponseTimeOut.trls.message];\nResponseTimeOut.trls = { message: 'employerconstructor.notify.responseTimeOut' };\nResponseTimeOut.propTypes = { trls: PropTypes.object };\nexport const employerConstructorResponseTimeOut = {\n    Element: translation(ResponseTimeOut),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_CONSTRUCTOR_RESPONSE_TIMEOUT = 'EMPLOYER_CONSTRUCTOR_RESPONSE_TIMEOUT';\n","import PropTypes from 'prop-types';\n\nimport { formatNewLine, format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst DeletedTemplateOk = ({ trls }) => trls[DeletedTemplateOk.trls.message];\nDeletedTemplateOk.trls = { message: 'employerDocuments.delete.success' };\nDeletedTemplateOk.propTypes = { trls: PropTypes.object };\nexport const deletedTemplateOk = {\n    Element: translation(DeletedTemplateOk),\n    kind: 'delete',\n    autoClose: true,\n    dataQa: 'employer-documents-notification-deleted-ok',\n};\nexport const EMPLOYER_DOCUMENT_DELETED_TEMPLATE_DELETE = 'EMPLOYER_DOCUMENT_DELETED_TEMPLATE_DELETE';\n\nconst UploadedTemplateOk = ({ trls }) => formatNewLine(trls[UploadedTemplateOk.trls.message]);\nUploadedTemplateOk.trls = { message: 'employerDocuments.upload.success.long' };\nUploadedTemplateOk.propTypes = { trls: PropTypes.object };\nexport const uploadedTemplateOk = {\n    Element: translation(UploadedTemplateOk),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 20000,\n    dataQa: 'employer-documents-notification-uploaded-ok',\n};\nexport const EMPLOYER_DOCUMENT_UPLOADED_TEMPLATE_OK = 'EMPLOYER_DOCUMENT_UPLOADED_TEMPLATE_OK';\n\nconst MaxFilesWarningTemplate = ({ trls }) => formatNewLine(trls[MaxFilesWarningTemplate.trls.message]);\nMaxFilesWarningTemplate.trls = { message: 'employerDocuments.warning.maxFiles' };\nMaxFilesWarningTemplate.propTypes = { trls: PropTypes.object };\nexport const maxFilesWarningTemplate = {\n    Element: translation(MaxFilesWarningTemplate),\n    kind: 'error',\n    autoClose: true,\n    dataQa: 'employer-documents-notification-max-files',\n};\nexport const EMPLOYER_DOCUMENT_MAX_FILES_TEMPLATE = 'EMPLOYER_DOCUMENT_MAX_FILES_TEMPLATE';\n\nconst MaxLengthFileTemplate = ({ trls, maxFileSize }) =>\n    formatNewLine(format(trls[MaxLengthFileTemplate.trls.message], { '{0}': maxFileSize }));\nMaxLengthFileTemplate.trls = { message: 'employerDocuments.warning.maxLengthFile' };\nMaxLengthFileTemplate.propTypes = {\n    trls: PropTypes.object,\n    maxFileSize: PropTypes.number,\n};\nexport const maxLengthFileTemplate = {\n    Element: translation(MaxLengthFileTemplate),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_DOCUMENT_MAX_FILE_LENGTH_TEMPLATE = 'EMPLOYER_DOCUMENT_MAX_FILE_LENGTH_TEMPLATE';\n\nconst UploadError = ({ trls }) => formatNewLine(trls[UploadError.trls.message]);\nUploadError.trls = { message: 'employerDocuments.err.notificationUploadError' };\nUploadError.propTypes = { trls: PropTypes.object };\nexport const uploadError = {\n    Element: translation(UploadError),\n    kind: 'error',\n    autoClose: true,\n    dataQa: 'employer-documents-notification-upload-error',\n};\nexport const EMPLOYER_DOCUMENT_UPLOAD_ERROR = 'EMPLOYER_DOCUMENT_UPLOAD_ERROR';\n\nconst DeleteError = ({ trls }) => formatNewLine(trls[DeleteError.trls.message]);\nDeleteError.trls = { message: 'employerDocuments.err.deleteError' };\nDeleteError.propTypes = { trls: PropTypes.object };\nexport const deleteError = {\n    Element: translation(DeleteError),\n    kind: 'error',\n    autoClose: true,\n    dataQa: 'employer-documents-notification-delete-error',\n};\nexport const EMPLOYER_DOCUMENT_DELETE_ERROR = 'EMPLOYER_DOCUMENT_DELETE_ERROR';\n","import PropTypes from 'prop-types';\n\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst OrderOriginalsSuccess = ({ trls }) => formatNewLine(trls[OrderOriginalsSuccess.trls.message]);\n\nOrderOriginalsSuccess.trls = {\n    message: 'employer.financial.documents.originals.success',\n};\n\nOrderOriginalsSuccess.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const orderOriginalsSuccess = {\n    Element: translation(OrderOriginalsSuccess),\n    kind: 'ok',\n    autoClose: true,\n    dataQa: 'employer-financial-documents-notification-order-originals-success',\n};\n\nexport const EMPLOYER_FINANCIAL_DOCUMENTS_ORDER_ORIGINALS_SUCCESS =\n    'EMPLOYER_FINANCIAL_DOCUMENTS_ORDER_ORIGINALS_SUCCESS';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    changeSuccess: 'employer.managers.MCPChanged.notification',\n    sudoForbidden: 'employer.managers.change.mcp.sudoSessionForbidden',\n};\nconst EmployerMCPChangedSuccess: TranslatedComponent<{ managerName: string }> = ({ trls, managerName }) => {\n    return <p>{format(trls[TrlKeys.changeSuccess], { '{0}': managerName })}</p>;\n};\n\nexport const MCPChangedSuccess = {\n    Element: translation(EmployerMCPChangedSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const MCP_CHANGED_SUCCESS = 'MCP_CHANGED_SUCCESS';\n\nconst EmployerMCPSudoForbidden: TranslatedComponent = ({ trls }) => {\n    return <p>{trls[TrlKeys.sudoForbidden]}</p>;\n};\n\nexport const MCPChangeSudoForbidden = {\n    Element: translation(EmployerMCPSudoForbidden),\n    kind: 'error',\n    autoClose: true,\n};\nexport const MCP_CHANGE_SUDO_FORBIDDEN = 'MCP_CHANGE_SUDO_FORBIDDEN';\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst FileTooLarge = ({ trls }) => formatNewLine(trls[FileTooLarge.trls.message]);\nFileTooLarge.trls = { message: 'employer.logo.upload.notify.fileTooLarge' };\nFileTooLarge.propTypes = { trls: PropTypes.object };\nexport const employerLogoFileTooLarge = { Element: translation(FileTooLarge), kind: 'error', autoClose: true };\nexport const EMPLOYER_LOGO_FILE_TOO_LARGE = 'EMPLOYER_LOGO_FILE_TOO_LARGE';\n\nconst UnsupportedFileFormat = ({ trls }) => formatNewLine(trls[UnsupportedFileFormat.trls.message]);\nUnsupportedFileFormat.trls = { message: 'employer.logo.upload.notify.unsupportedFileFormat' };\nUnsupportedFileFormat.propTypes = { trls: PropTypes.object };\nexport const employerLogoUnsupportedFileFormat = {\n    Element: translation(UnsupportedFileFormat),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_LOGO_UNSUPPORTED_FILE_FORMAT = 'EMPLOYER_LOGO_UNSUPPORTED_FILE_FORMAT';\n\nconst UploadSuccess = ({ trls }) => trls[UploadSuccess.trls.message];\nUploadSuccess.trls = { message: 'employer.logo.upload.notify.uploadSuccess' };\nUploadSuccess.propTypes = { trls: PropTypes.object };\nexport const employLogoUploadSuccess = { Element: translation(UploadSuccess), kind: 'ok', autoClose: true };\nexport const EMPLOYER_LOGO_UPLOAD_SUCCESS = 'EMPLOYER_LOGO_UPLOAD_SUCCESS';\n\nconst UploadTimeout = ({ trls }) => trls[UploadTimeout.trls.message];\nUploadTimeout.trls = { message: 'employer.logo.upload.notify.uploadTimeout' };\nUploadTimeout.propTypes = { trls: PropTypes.object };\nexport const employLogoUploadTimeout = { Element: translation(UploadTimeout), kind: 'error', autoClose: true };\nexport const EMPLOYER_LOGO_UPLOAD_TIMEOUT = 'EMPLOYER_LOGO_UPLOAD_TIMEOUT';\n\nconst AutosearchSaved = ({ trls }) => {\n    return (\n        <Fragment>\n            <NotificationHeading>{trls[AutosearchSaved.trls.title]}</NotificationHeading>\n            <div>{trls[AutosearchSaved.trls.message]}</div>\n        </Fragment>\n    );\n};\nAutosearchSaved.trls = {\n    message: 'vacancySearchResults.saveSearch.success.text',\n    title: 'vacancySearchResults.saveSearch.success.title',\n};\nAutosearchSaved.propTypes = { trls: PropTypes.object };\nexport const employerSidebarAutosearchSaved = {\n    Element: translation(AutosearchSaved),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED = 'EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED';\n\nconst AutosearchSavedApplicant = ({ trls }) => {\n    return (\n        <Fragment>\n            <NotificationHeading>\n                {trls[AutosearchSavedApplicant.trls.title]}{' '}\n                <BlokoLink disableVisited Element={Link} to=\"/applicant/autosearch\">\n                    {trls[AutosearchSavedApplicant.trls.teaser]}\n                </BlokoLink>\n            </NotificationHeading>\n            <div>{trls[AutosearchSavedApplicant.trls.message]}</div>\n        </Fragment>\n    );\n};\nAutosearchSavedApplicant.trls = {\n    title: 'serp.savedSearch.success.1',\n    teaser: 'serp.savedSearch.teaser.autosearch',\n    message: 'serp.savedSearch.success.2.vacancy',\n};\nAutosearchSavedApplicant.propTypes = { trls: PropTypes.object };\nexport const employerSidebarAutosearchSavedApplicant = {\n    Element: translation(AutosearchSavedApplicant),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED_APPLICANT = 'EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED_APPLICANT';\n\nconst AutosearchTooManyError = ({ trls }) => (\n    <Fragment>\n        <NotificationHeading>{trls[AutosearchTooManyError.trls.title]}</NotificationHeading>\n        <div>\n            {trls[AutosearchTooManyError.trls.message]}{' '}\n            <BlokoLink disableVisited Element={Link} to=\"/applicant/autosearch\">\n                {trls[AutosearchTooManyError.trls.teaser]}\n            </BlokoLink>\n        </div>\n    </Fragment>\n);\nAutosearchTooManyError.trls = {\n    title: 'employer.sidebar.subscribe.tooMany.title',\n    message: 'employer.sidebar.subscribe.tooMany.message',\n    teaser: 'employer.sidebar.subscribe.tooMany.teaser',\n};\nAutosearchTooManyError.propTypes = { trls: PropTypes.object };\nexport const employerSidebarAutosearchTooMany = {\n    Element: translation(AutosearchTooManyError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_SIDEBAR_AUTOSEARCH_TOO_MANY = 'EMPLOYER_SIDEBAR_AUTOSEARCH_TOO_MANY';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst SaveSidebarSuccess = ({ trls }) => trls[SaveSidebarSuccess.trls.text];\nSaveSidebarSuccess.trls = {\n    text: 'employer.page.sidebar.success',\n};\nSaveSidebarSuccess.propTypes = {\n    trls: PropTypes.object,\n};\nexport const employerSaveSidebarSuccess = {\n    Element: translation(SaveSidebarSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const EMPLOYER_SIDEBAR_SAVE_SUCCESS = 'EMPLOYER_SIDEBAR_SAVE_SUCCESS';\n\nconst SaveSidebarError = ({ trls }) => trls[SaveSidebarError.trls.text];\nSaveSidebarError.trls = {\n    text: 'employer.page.sidebar.error',\n};\nSaveSidebarError.propTypes = {\n    trls: PropTypes.object,\n};\nexport const employerSaveSidebarError = {\n    Element: translation(SaveSidebarError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const EMPLOYER_SIDEBAR_SAVE_ERROR = 'EMPLOYER_SIDEBAR_SAVE_ERROR';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst SaveDescriptionError = ({ trls, type }) => trls[SaveDescriptionError.trls[type]];\nSaveDescriptionError.trls = {\n    TEXT_TOO_LONG: 'employer.edit.description.error.text_too_long',\n    TEXT_TOO_SHORT: 'employer.edit.description.error.text_too_short',\n    TOO_MANY_CAPS: 'employer.edit.description.error.too_many_caps',\n    UNKNOWN: 'employer.edit.description.error.unknown',\n};\nSaveDescriptionError.propTypes = {\n    trls: PropTypes.object,\n    type: PropTypes.oneOf(['TEXT_TOO_LONG', 'TEXT_TOO_SHORT', 'TOO_MANY_CAPS', 'UNKNOWN']),\n};\nexport const employerSaveDescriptionError = {\n    Element: translation(SaveDescriptionError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const SAVE_EMPLOYER_DESCRIPTION_ERROR = 'SAVE_EMPLOYER_DESCRIPTION_ERROR';\n\nconst SaveDescriptionSuccess = ({ trls }) => trls[SaveDescriptionSuccess.trls.success];\nSaveDescriptionSuccess.trls = {\n    success: 'employer.edit.description.success',\n};\nSaveDescriptionSuccess.propTypes = {\n    trls: PropTypes.object,\n};\nexport const employerSaveDescriptionSuccess = {\n    Element: translation(SaveDescriptionSuccess),\n    kind: 'ok',\n    autoClose: true,\n    dataQa: 'save-description-success',\n};\nexport const SAVE_EMPLOYER_DESCRIPTION_SUCCESS = 'SAVE_EMPLOYER_DESCRIPTION_SUCCESS';\n","import PropTypes from 'prop-types';\n\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst DivisionCreated = ({ trls, divisionName }) => format(trls[DivisionCreated.trls.message], { '{0}': divisionName });\n\nDivisionCreated.trls = {\n    message: 'employerStructure.create.success',\n};\n\nDivisionCreated.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const createDivisionSuccess = {\n    Element: translation(DivisionCreated),\n    kind: 'ok',\n    autoClose: true,\n    dataQa: 'employer-division-create-success',\n};\n\nexport const DIVISION_CREATED = 'DIVISION_CREATED';\n","import { FC, Fragment, PropsWithChildren, useCallback } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nexport enum VacancyUpgradeMetallic {\n    Standard = 'standard',\n    StandardPlus = 'standard_plus',\n    Premium = 'premium',\n}\n\nexport enum VacancyToggleAction {\n    Enable = 'enable',\n    Disable = 'disable',\n}\n\nconst TrlKeys = {\n    ArchiveVacancySuccess: {\n        single: 'employer.vacancy.archive.result',\n        anyBegin: 'employer.vacancies.archive.result.new',\n        someEnd: 'vacancy.some',\n        manyEnd: 'vacancy.many',\n        descriptionOne: 'employer.vacancy.archive.result.description.one',\n        descriptionMany: 'employer.vacancy.archive.result.description.many',\n    },\n    VacancyUpgradeSuccess: {\n        [VacancyUpgradeMetallic.Standard]: 'employer.vacancy.upgrade.standard',\n        [VacancyUpgradeMetallic.StandardPlus]: 'employer.vacancy.upgrade.standard_plus', // eslint-disable-line camelcase\n        [VacancyUpgradeMetallic.Premium]: 'employer.vacancy.upgrade.premium',\n    },\n    VacancyUpdateSuccess: {\n        some: 'employer.myVacancies.up.some',\n        many: 'employer.myVacancies.up.many',\n        one: 'employer.myVacancies.up.one',\n        success: 'employer.vacancy.prolongate.success',\n    },\n    AutoProlongationPurchaseSuccess: {\n        message: 'employer.vacancies.autoprolongation.publicationPurchase.success',\n    },\n    AutoProlongationPurchaseSuccesses: {\n        message: 'employer.vacancies.autoprolongation.publicationPurchase.batch.success',\n    },\n    VacancyAutoProlongationSuccess: {\n        [VacancyToggleAction.Disable]: {\n            title: 'employer.vacancies.autoProlongation.disable.ok.title',\n            content: 'employer.vacancies.autoProlongation.disable.ok.content',\n        },\n        [VacancyToggleAction.Enable]: {\n            title: 'employer.vacancies.autoProlongation.enable.ok.title',\n            content: 'employer.vacancies.autoProlongation.enable.ok.content',\n        },\n    },\n    VacancyAutoProlongationSuccesses: {\n        title: 'employer.vacancies.autoProlongation.batch.enable.ok.title',\n        content: 'employer.vacancies.autoProlongation.batch.enable.ok.content',\n    },\n    VacancyAutoProlongationError: {\n        [VacancyToggleAction.Disable]: {\n            title: 'error.vacancy.autoProlongation.disable.unknownException.title',\n            content: 'error.vacancy.autoProlongation.disable.unknownException.content',\n        },\n        [VacancyToggleAction.Enable]: {\n            title: 'error.vacancy.autoProlongation.enable.unknownException.title',\n            content: 'error.vacancy.autoProlongation.enable.unknownException.content',\n        },\n    },\n    VacancyAutoProlongationErrors: {\n        content: 'error.vacancy.autoProlongation.batch.enable.unknownException.content',\n    },\n    VacancyDraftDeleteSuccess: {\n        onlyOne: 'employer.vacancies.draftDelete.ok.title.onlyOne',\n        multiple: 'employer.vacancies.draftDelete.ok.title.multiple',\n    },\n    VacancyDraftDeleteError: {\n        error: 'error.vacancy.draftDelete.unknownException',\n    },\n    VacancyDraftMoveSuccess: {\n        onlyOne: 'employer.vacancies.draftMove.ok.title.onlyOne',\n        multiple: 'employer.vacancies.draftMove.ok.title.multiple',\n    },\n    NotifyEmptyResult: {\n        empty: 'employer.vacanciesDashboard.ApplyFilterResultIsEmpty',\n    },\n    AutoUpdatesScheduled: {\n        success: 'vacancy.autoUpdate.scheduleSuccess',\n    },\n    AutoUpdatesRemoved: {\n        success: 'vacancy.autoUpdate.removeSuccess',\n    },\n    AutoUpdatesEdited: {\n        success: 'vacancy.autoUpdate.editSuccess',\n    },\n    AutoPublicationDisabled: {\n        text: 'vacancy.autoPublication.disableSuccess',\n    },\n    CancelScheduledPublicationSuccess: {\n        text: 'employer.vacancies.cancelScheduled.ok',\n    },\n    ToggleVacancyOptionSuccess: {\n        [VacancyToggleAction.Enable]: 'employer.vacancies.enableVacancyOption.ok',\n        [VacancyToggleAction.Disable]: 'employer.vacancies.disableVacancyOption.ok',\n    },\n    ToggleVacancyOptionError: {\n        FAILED_TO_DELETE_EXPIRED: 'employer.vacancies.toggleVacancyOption.FAILED_TO_DELETE_EXPIRED',\n        PREMIUM_ALREDY_SET: 'employer.vacancies.toggleVacancyOption.PREMIUM_ALREDY_SET',\n        PREMIUM_NOT_SET: 'employer.vacancies.toggleVacancyOption.PREMIUM_NOT_SET',\n        FAILED_TO_DELETE: 'employer.vacancies.toggleVacancyOption.FAILED_TO_DELETE',\n        NOT_ZP_VACANCY: 'employer.vacancies.toggleVacancyOption.NOT_ZP_VACANCY',\n        FAILED_TO_SPEND_SERVICE: 'employer.vacancies.toggleVacancyOption.FAILED_TO_SPEND_SERVICE',\n        FAILED_TO_RETURN_SERVICE: 'employer.vacancies.toggleVacancyOption.FAILED_TO_RETURN_SERVICE',\n        FAILED_TO_GET_SERVICE_COUNT: 'employer.vacancies.toggleVacancyOption.FAILED_TO_GET_SERVICE_COUNT',\n        NOT_ENOUGH_QUOTAS: 'employer.vacancies.toggleVacancyOption.NOT_ENOUGH_QUOTAS',\n        VACANCY_IS_NOT_ACTIVE: 'employer.vacancies.toggleVacancyOption.VACANCY_IS_NOT_ACTIVE',\n    },\n    ChangeVacancyVisibilitySuccess: {\n        closed: 'employer.vacancy.visibility.success.hide',\n        open: 'employer.vacancy.visibility.success.show',\n    },\n};\n\nconst SuccessQaWrapper: FC<PropsWithChildren> = ({ children }) => (\n    <div data-qa=\"vacancies-successMessage\">{children}</div>\n);\n\nconst ErrorQaWrapper: FC<PropsWithChildren> = ({ children }) => <div data-qa=\"vacancies-errorMessage\">{children}</div>;\n\ninterface ArchiveVacancySuccessProps {\n    name: string;\n    count?: number;\n    daysUntilReadOnly?: number;\n}\nconst ArchiveVacancySuccess: TranslatedComponent<ArchiveVacancySuccessProps> = ({\n    trls,\n    name,\n    count = 0,\n    daysUntilReadOnly = 0,\n}) => {\n    const countedBegin = `${\n        trls[TrlKeys.ArchiveVacancySuccess.anyBegin]\n    }${NON_BREAKING_SPACE}${count}${NON_BREAKING_SPACE}`;\n    const isDescriptionVisible = !!daysUntilReadOnly;\n    const NotificationTitle = isDescriptionVisible ? NotificationHeading : Fragment;\n\n    return (\n        <SuccessQaWrapper>\n            <NotificationTitle>\n                <ConversionNumber\n                    one={trls[TrlKeys.ArchiveVacancySuccess.single].replace('{0}', name)}\n                    some={`${countedBegin}${trls[TrlKeys.ArchiveVacancySuccess.someEnd]}`}\n                    many={`${countedBegin}${trls[TrlKeys.ArchiveVacancySuccess.manyEnd]}`}\n                    value={count}\n                    format={(trl) => format(trl, { '%s': count })}\n                    hasValue={false}\n                />\n            </NotificationTitle>\n            {isDescriptionVisible && (\n                <p>\n                    <ConversionNumber\n                        one={trls[TrlKeys.ArchiveVacancySuccess.descriptionOne]}\n                        some={trls[TrlKeys.ArchiveVacancySuccess.descriptionMany]}\n                        many={trls[TrlKeys.ArchiveVacancySuccess.descriptionMany]}\n                        value={daysUntilReadOnly}\n                        format={(trl) => format(trl, { '{0}': daysUntilReadOnly })}\n                        hasValue={false}\n                    />\n                </p>\n            )}\n        </SuccessQaWrapper>\n    );\n};\nexport const archiveVacancySuccess = {\n    Element: translation(ArchiveVacancySuccess),\n    kind: 'ok',\n};\nexport const ARCHIVE_VACANCY_SUCCESS = 'ARCHIVE_VACANCY_SUCCESS';\n\ninterface VacancyUpgradeSuccessProps {\n    name: string;\n    metallic: VacancyUpgradeMetallic;\n}\nconst VacancyUpgradeSuccess: TranslatedComponent<VacancyUpgradeSuccessProps> = ({\n    trls,\n    name,\n    metallic = VacancyUpgradeMetallic.Standard,\n}) => <SuccessQaWrapper>{format(trls[TrlKeys.VacancyUpgradeSuccess[metallic]], { '{}': name })}</SuccessQaWrapper>;\nexport const vacancyUpgradeSuccess = {\n    Element: translation(VacancyUpgradeSuccess),\n    kind: 'ok',\n};\nexport const VACANCY_UPGRADE_SUCCESS = 'VACANCY_UPGRADE_SUCCESS';\n\ninterface VacancyUpdateSuccessProps {\n    name: string;\n    count: number;\n}\nconst VacancyUpdateSuccess: TranslatedComponent<VacancyUpdateSuccessProps> = ({ trls, name, count }) => {\n    const formatMultipleUpdate = useCallback((trl: string) => format(trl, { '{0}': count }), [count]);\n    if (count > 1) {\n        return (\n            <SuccessQaWrapper>\n                <ConversionNumber\n                    hasValue={false}\n                    value={count}\n                    one={trls[TrlKeys.VacancyUpdateSuccess.one]}\n                    some={trls[TrlKeys.VacancyUpdateSuccess.some]}\n                    many={trls[TrlKeys.VacancyUpdateSuccess.many]}\n                    format={formatMultipleUpdate}\n                />\n            </SuccessQaWrapper>\n        );\n    }\n\n    return <SuccessQaWrapper>{format(trls[TrlKeys.VacancyUpdateSuccess.success], { '{0}': name })}</SuccessQaWrapper>;\n};\nexport const vacancyUpdateSuccess = {\n    Element: translation(VacancyUpdateSuccess),\n    kind: 'ok',\n};\nexport const VACANCY_UPDATE_SUCCESS = 'VACANCY_UPDATE_SUCCESS';\n\nconst AutoProlongationPurchaseSuccess: TranslatedComponent = ({ trls }) => (\n    <>{trls[TrlKeys.AutoProlongationPurchaseSuccess.message]}</>\n);\nexport const autoProlongationPurchaseSuccess = {\n    Element: translation(AutoProlongationPurchaseSuccess),\n    kind: 'ok',\n};\nexport const AUTO_PROLONGATION_PURCHASE_SUCCESS = 'AUTO_PROLONGATION_PURCHASE_SUCCESS';\n\nconst AutoProlongationPurchaseSuccesses: TranslatedComponent = ({ trls }) => (\n    <>{trls[TrlKeys.AutoProlongationPurchaseSuccesses.message]}</>\n);\nexport const autoProlongationPurchaseSuccesses = {\n    Element: translation(AutoProlongationPurchaseSuccesses),\n    kind: 'ok',\n};\nexport const AUTO_PROLONGATION_PURCHASE_SUCCESSES = 'AUTO_PROLONGATION_PURCHASE_SUCCESSES';\n\ninterface VacancyAutoProlongationSuccessProps {\n    name: string;\n    action: VacancyToggleAction;\n}\nconst VacancyAutoProlongationSuccess: TranslatedComponent<VacancyAutoProlongationSuccessProps> = ({\n    trls,\n    name,\n    action,\n}) => (\n    <SuccessQaWrapper>\n        <NotificationHeading>{trls[TrlKeys.VacancyAutoProlongationSuccess[action].title]}</NotificationHeading>\n        {format(trls[TrlKeys.VacancyAutoProlongationSuccess[action].content], { '{0}': name })}\n    </SuccessQaWrapper>\n);\nexport const vacancyAutoProlongationSuccess = {\n    Element: translation(VacancyAutoProlongationSuccess),\n    kind: 'ok',\n};\nexport const VACANCY_AUTO_PROLONGATION_SUCCESS = 'VACANCY_AUTO_PROLONGATION_SUCCESS';\n\nconst VacancyAutoProlongationSuccesses: TranslatedComponent = ({ trls }) => (\n    <SuccessQaWrapper>\n        <NotificationHeading>{trls[TrlKeys.VacancyAutoProlongationSuccesses.title]}</NotificationHeading>\n        {trls[TrlKeys.VacancyAutoProlongationSuccesses.content]}\n    </SuccessQaWrapper>\n);\nexport const vacancyAutoProlongationSuccesses = {\n    Element: translation(VacancyAutoProlongationSuccesses),\n    kind: 'ok',\n};\nexport const VACANCY_AUTO_PROLONGATION_SUCCESSES = 'VACANCY_AUTO_PROLONGATION_SUCCESSES';\n\ninterface VacancyAutoProlongationErrorProps {\n    name: string;\n    action: VacancyToggleAction;\n}\nconst VacancyAutoProlongationError: TranslatedComponent<VacancyAutoProlongationErrorProps> = ({\n    trls,\n    name,\n    action,\n}) => (\n    <ErrorQaWrapper>\n        <NotificationHeading>\n            {format(trls[TrlKeys.VacancyAutoProlongationError[action].title], { '{0}': name })}\n        </NotificationHeading>\n        {trls[TrlKeys.VacancyAutoProlongationError[action].content]}\n    </ErrorQaWrapper>\n);\nexport const vacancyAutoProlongationError = {\n    Element: translation(VacancyAutoProlongationError),\n    kind: 'error',\n};\nexport const VACANCY_AUTO_PROLONGATION_ERROR = 'VACANCY_AUTO_PROLONGATION_ERROR';\n\nconst VacancyAutoProlongationErrors: TranslatedComponent = ({ trls }) => (\n    <ErrorQaWrapper>{trls[TrlKeys.VacancyAutoProlongationErrors.content]}</ErrorQaWrapper>\n);\nexport const vacancyAutoProlongationErrors = {\n    Element: translation(VacancyAutoProlongationErrors),\n    kind: 'error',\n};\nexport const VACANCY_AUTO_PROLONGATION_ERRORS = 'VACANCY_AUTO_PROLONGATION_ERRORS';\n\ninterface VacancyDraftDeleteSuccessProps {\n    draftsIds: number[];\n}\nconst VacancyDraftDeleteSuccess: TranslatedComponent<VacancyDraftDeleteSuccessProps> = ({ trls, draftsIds }) => (\n    <SuccessQaWrapper>\n        {\n            trls[\n                draftsIds.length === 1\n                    ? TrlKeys.VacancyDraftDeleteSuccess.onlyOne\n                    : TrlKeys.VacancyDraftDeleteSuccess.multiple\n            ]\n        }\n    </SuccessQaWrapper>\n);\nexport const vacancyDraftDeleteSuccess = {\n    Element: translation(VacancyDraftDeleteSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const VACANCY_DRAFT_DELETE_SUCCESS = 'VACANCY_DRAFT_DELETE_SUCCESS';\n\nconst VacancyDraftDeleteError: TranslatedComponent = ({ trls }) => (\n    <ErrorQaWrapper>{trls[TrlKeys.VacancyDraftDeleteError.error]}</ErrorQaWrapper>\n);\nexport const vacancyDraftDeleteError = {\n    Element: translation(VacancyDraftDeleteError),\n    kind: 'error',\n};\nexport const VACANCY_DRAFT_DELETE_ERROR = 'VACANCY_DRAFT_DELETE_ERROR';\n\ninterface VacancyDraftMoveSuccessProps {\n    draftsIds: number[];\n}\nconst VacancyDraftMoveSuccess: TranslatedComponent<VacancyDraftMoveSuccessProps> = ({ trls, draftsIds }) => (\n    <SuccessQaWrapper>\n        {\n            trls[\n                draftsIds.length === 1\n                    ? TrlKeys.VacancyDraftMoveSuccess.onlyOne\n                    : TrlKeys.VacancyDraftMoveSuccess.multiple\n            ]\n        }\n    </SuccessQaWrapper>\n);\nexport const vacancyDraftMoveSuccess = {\n    Element: translation(VacancyDraftMoveSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const VACANCY_DRAFT_MOVE_SUCCESS = 'VACANCY_DRAFT_MOVE_SUCCESS';\n\nconst NotifyEmptyResult: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.NotifyEmptyResult.empty]}</>;\nexport const emptyFiltersResult = {\n    Element: translation(NotifyEmptyResult),\n    autoClose: true,\n};\nexport const EMPTY_FILTERS_RESULT = 'EMPTY_FILTERS_RESULT';\n\nconst AutoUpdatesScheduled: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.AutoUpdatesScheduled.success]}</>;\nexport const autoUpdatesScheduled = {\n    Element: translation(AutoUpdatesScheduled),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const AUTO_UPDATES_SCHEDULED = 'AUTO_UPDATES_SCHEDULED';\n\ninterface AutoUpdatesRemovedProps {\n    vacancyName: string;\n    vacancyId: number;\n}\nconst AutoUpdatesRemoved: TranslatedComponent<AutoUpdatesRemovedProps> = ({ trls, vacancyName, vacancyId }) =>\n    formatToReactComponent(trls[TrlKeys.AutoUpdatesRemoved.success], {\n        '{0}': (\n            <BlokoLink disableVisited Element={Link} to={`/vacancy/${vacancyId}`}>\n                {vacancyName}\n            </BlokoLink>\n        ),\n    });\nexport const autoUpdatesRemoved = {\n    Element: translation(AutoUpdatesRemoved),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const AUTO_UPDATES_REMOVED = 'AUTO_UPDATES_REMOVED';\n\nconst AutoUpdatesEdited: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.AutoUpdatesEdited.success]}</>;\nexport const autoUpdatesEdited = {\n    Element: translation(AutoUpdatesEdited),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const EDIT_AUTO_UPDATE_SCHEDULE = 'EDIT_AUTO_UPDATE_SCHEDULE';\n\nconst AutoPublicationDisabled: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.AutoPublicationDisabled.text]}</>;\nexport const autoPublicationDisabled = {\n    Element: translation(AutoPublicationDisabled),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const AUTO_PUBLICATION_DISABLED = 'AUTO_PUBLICATION_DISABLED';\n\nconst CancelScheduledPublicationSuccess: TranslatedComponent = ({ trls }) => (\n    <SuccessQaWrapper>{trls[TrlKeys.CancelScheduledPublicationSuccess.text]}</SuccessQaWrapper>\n);\nexport const cancelScheduledPublicationSuccess = {\n    Element: translation(CancelScheduledPublicationSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const CANCEL_SCHEDULED_PUBLICATION_SUCCESS = 'CANCEL_SCHEDULED_PUBLICATION_SUCCESS';\n\ninterface ToggleVacancyOptionSuccessProps {\n    vacancyName: string;\n    action: VacancyToggleAction;\n}\nconst ToggleVacancyOptionSuccess: TranslatedComponent<ToggleVacancyOptionSuccessProps> = ({\n    trls,\n    vacancyName,\n    action,\n}) => (\n    <SuccessQaWrapper>\n        {formatToReactComponent(trls[TrlKeys.ToggleVacancyOptionSuccess[action]], {\n            '{0}': <span>{vacancyName}</span>,\n        })}\n    </SuccessQaWrapper>\n);\nexport const toggleVacancyOptionSuccess = {\n    Element: translation(ToggleVacancyOptionSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const TOGGLE_VACANCY_OPTION_SUCCESS = 'TOGGLE_VACANCY_OPTION_SUCCESS';\n\ninterface ToggleVacancyOptionErrorProps {\n    errorKey: keyof typeof TrlKeys.ToggleVacancyOptionError;\n}\nconst ToggleVacancyOptionError: TranslatedComponent<ToggleVacancyOptionErrorProps> = ({ trls, errorKey }) => (\n    <ErrorQaWrapper>{trls[TrlKeys.ToggleVacancyOptionError[errorKey]]}</ErrorQaWrapper>\n);\nexport const toggleVacancyOptionError = {\n    Element: translation(ToggleVacancyOptionError),\n    kind: 'error',\n};\nexport const TOGGLE_VACANCY_OPTION_ERROR = 'TOGGLE_VACANCY_OPTION_ERROR';\n\ninterface ChangeVacancyVisibilitySuccessProps {\n    type: 'open' | 'closed';\n}\nconst ChangeVacancyVisibilitySuccess: TranslatedComponent<ChangeVacancyVisibilitySuccessProps> = ({ trls, type }) => (\n    <SuccessQaWrapper>{trls[TrlKeys.ChangeVacancyVisibilitySuccess[type]]}</SuccessQaWrapper>\n);\nexport const changeVacancyVisibilitySuccess = {\n    Element: translation(ChangeVacancyVisibilitySuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const CHANGE_VACANCY_VISIBILITY_SUCCESS = 'CHANGE_VACANCY_VISIBILITY_SUCCESS';\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\n\nimport translation from 'lux/components/translation';\n\nconst DraftMultiPublicationOk = ({ trls }) => (\n    <Fragment>\n        <NotificationHeading>{trls[DraftMultiPublicationOk.trls.title]}</NotificationHeading>\n        <div>{trls[DraftMultiPublicationOk.trls.message]}</div>\n    </Fragment>\n);\nDraftMultiPublicationOk.propTypes = { trls: PropTypes.object };\nDraftMultiPublicationOk.trls = {\n    title: 'employer.myVacancies.dashboard.draft.multiPublished.title',\n    message: 'employer.myVacancies.dashboard.draft.multiPublished.message',\n};\nexport const draftMultiPublicationOk = {\n    Element: translation(DraftMultiPublicationOk),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const DRAFT_MULTI_PUBLICATION_OK = 'DRAFT_MULTI_PUBLICATION_OK';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'hiringPlan.notification.title',\n    text: 'hiringPlan.notification.text',\n};\n\nconst NotificattionContent: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n        {trls[TrlKeys.text]}\n    </>\n);\n\nexport const hiringPlanUpdateSuccess = {\n    Element: translation(NotificattionContent),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const HIRING_PLAN_UPDATE_SUCCESS = 'HIRING_PLAN_UPDATE_SUCCESS';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst ResumeViewHistoryErrorFetchingNotification = ({ trls }) =>\n    trls[ResumeViewHistoryErrorFetchingNotification.trls.error];\nResumeViewHistoryErrorFetchingNotification.trls = {\n    error: 'resume.notallfunctions.warning',\n};\nResumeViewHistoryErrorFetchingNotification.propTypes = {\n    trls: PropTypes.object,\n};\nexport const showResumeViewHistoryErrorFetchingNotification = {\n    Element: translation(ResumeViewHistoryErrorFetchingNotification),\n    kind: 'error',\n    autoClose: false,\n};\nexport const RESUME_VIEW_HISTORY_ERROR_FETCHING = 'RESUME_VIEW_HISTORY_ERROR_FETCHING';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const INVALID_DATE_INTERVAL = 'INVALID_DATE_INTERVAL';\n\nconst TrlKeys = {\n    error: 'price.error.invalidDateInterval',\n};\n\nconst InvalidDateInterval: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport const invalidDateInterval = {\n    Element: translation(InvalidDateInterval),\n    kind: 'error',\n    autoClose: true,\n};\n","import { VFC } from 'react';\n\ninterface InvoicePaymentFormProps {\n    submitError: string;\n}\n\nconst InvoicePaymentForm: VFC<InvoicePaymentFormProps> = ({ submitError }) => {\n    return <>{submitError}</>;\n};\n\nexport const invoicePaymentFormError = {\n    Element: InvoicePaymentForm,\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\nexport const INVOICE_PAYMENT_FORM_ERROR = 'INVOICE_PAYMENT_FORM_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'employer.error.resumeViewLimitExceeded',\n};\n\nconst MailtoLimitExceeded: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.text]}</>;\n\nexport const mailtoLimitExceeded = {\n    Element: translation(MailtoLimitExceeded),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const MAIL_TO_LIMIT_EXCEEDED = 'MAIL_TO_LIMIT_EXCEEDED';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'employer.managers.delete.notification.title',\n    text: 'employer.managers.delete.notification.text',\n};\n\ninterface Props {\n    deleteFullName: string;\n}\n\nconst ManagerDeleteSuccess: TranslatedComponent<Props> = ({ trls, deleteFullName }) => (\n    <>\n        <NotificationHeading>{format(trls[TrlKeys.title], { '{0}': deleteFullName })}</NotificationHeading>\n        {trls[TrlKeys.text]}\n    </>\n);\n\nexport const managerDeleteSuccess = {\n    Element: translation(ManagerDeleteSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const MANAGER_DELETE_SUCCESS = 'MANAGER_DELETE_SUCCESS';\n","import React from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    success: 'employer.managerSettings.save.success',\n};\nconst ManagerEditSuccess: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.success]}</>;\n\nexport const managerEditSuccess = {\n    Element: translation(ManagerEditSuccess),\n    kind: 'ok',\n};\nexport const MANAGER_EDIT_SUCCESS = 'MANAGER_EDIT_SUCCESS';\n\nconst ManagerFormError: React.FC<{ text: string }> = ({ text }) => {\n    return <>{text}</>;\n};\n\nexport const MANAGER_FORM_ERROR = 'MANAGER_FORM_ERROR';\n\nexport const managerFormError = {\n    Element: translation(ManagerFormError),\n    kind: 'error',\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const NETWORK_ERROR = 'NETWORK_ERROR';\n\nconst TrlKeys = {\n    error: 'lux.error.network',\n};\n\nconst NetworkError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport default {\n    Element: translation(NetworkError),\n    kind: 'error',\n    autoClose: true,\n};\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst ManagerRatingOk = ({ trls }) => trls[ManagerRatingOk.trls.message];\nManagerRatingOk.trls = { message: 'personalManager.notification.success' };\nManagerRatingOk.propTypes = { trls: PropTypes.object };\nexport const personalManagerRatingSuccess = {\n    Element: translation(ManagerRatingOk),\n    kind: 'ok',\n    autoClose: true,\n    dataQa: 'personal-manager-rating-notification-ok',\n};\nexport const PERSONAL_MANAGER_RATING_SUCCESS = 'PERSONAL_MANAGER_RATING_SUCCESS';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'employer.discarded-notifier.politeness-index-info',\n};\n\nconst PolitenessIndex: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.text]}</>;\n\nexport const POLITENESS_INDEX = 'POLITENESS_INDEX';\n\nexport const politenessIndexNotification = {\n    Element: translation(PolitenessIndex),\n};\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { ADD_CONTACTS_ARTICLE_LINK } from 'lux/modules/price/addContacts';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    message: 'price.addContacts.error.maxContactsAmountExceeded',\n    readMore: 'price.addContacts.error.readMore',\n};\n\ninterface MaxContactsAmountExceededProps {\n    maxContactsAmount: string;\n}\n\nconst MaxContactsAmountExceeded: TranslatedComponent<MaxContactsAmountExceededProps> = ({\n    maxContactsAmount,\n    trls,\n}) => (\n    <>\n        {formatToReactComponent(trls[TrlKeys.message], {\n            '{0}': NumberFormatter.format(maxContactsAmount, { groupSeparator: NON_BREAKING_SPACE }),\n        })}\n        <NotificationFooter>\n            <Button scale={ButtonScale.Small} Element={Link} to={ADD_CONTACTS_ARTICLE_LINK}>\n                {trls[TrlKeys.readMore]}\n            </Button>\n        </NotificationFooter>\n    </>\n);\n\nexport const priceAddContactsMaxContactsAmountExceeded = {\n    Element: translation(MaxContactsAmountExceeded),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const PRICE_ADD_CONTACTS_MAX_CONTACTS_AMOUNT_EXCEEDED = 'PRICE_ADD_CONTACTS_MAX_CONTACTS_AMOUNT_EXCEEDED';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    applicationSuccess: 'employer.price.notice.applicationSuccess',\n    applicationDuplicate: 'employer.price.notice.applicationDuplicate',\n};\nconst ApplicationSuccess: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.applicationSuccess]}</>;\n\nexport const submitApplicationSuccess = { Element: translation(ApplicationSuccess), kind: 'ok', autoClose: true };\nexport const PRICE_BRANDING_SUBMIT_APPLICATION_SUCCESS = 'PRICE_BRANDING_SUBMIT_APPLICATION_SUCCESS';\n\nconst ApplicationDuplicate: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.applicationDuplicate]}</>;\nexport const submitApplicationDuplicate = {\n    Element: translation(ApplicationDuplicate),\n    kind: 'error',\n    autoClose: true,\n};\nexport const PRICE_BRANDING_SUBMIT_APPLICATION_DUPLICATE = 'PRICE_BRANDING_SUBMIT_APPLICATION_DUPLICATE';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    addToPriceCartError: 'add.to.price.cart.error',\n};\n\nconst AddToCartErrorNotification: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.addToPriceCartError]}</>;\n\nexport const addToCartErrorNotification = {\n    Element: translation(AddToCartErrorNotification),\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\n\nexport const ADD_TO_CART_ERROR_NOTIFICATION = 'ADD_TO_CART_ERROR_NOTIFICATION';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nenum NotificationsSuccess {\n    NotificationPayment = 'NOTIFICATION_PAYMENT',\n    NotificationFormats = 'NOTIFICATION_FORMATS',\n    NotificationPrice = 'NOTIFICATION_PRICE',\n    NotificationDetails = 'NOTIFICATION_DETAILS',\n}\n\nconst TrlKeys = {\n    [NotificationsSuccess.NotificationPayment]:\n        'employer.price.clickmeProducts.notice.paymentMessage.applicationSuccess',\n    [NotificationsSuccess.NotificationFormats]:\n        'employer.price.clickmeProducts.notice.formatsMessage.applicationSuccess',\n    [NotificationsSuccess.NotificationPrice]: 'employer.price.clickmeProducts.notice.priceMessage.applicationSuccess',\n    [NotificationsSuccess.NotificationDetails]:\n        'employer.price.clickmeProducts.notice.detailsMessage.applicationSuccess',\n    message: 'employer.price.clickmeProducts.notice.applicationDuplicate',\n};\n\nconst ClickmeProductsApplicationSuccess: TranslatedComponent<{ notification: NotificationsSuccess }> = ({\n    notification = NotificationsSuccess.NotificationDetails,\n    trls,\n}) => <>{trls[TrlKeys[notification]]}</>;\n\nexport const submitClickmeProductsApplicationSuccess = {\n    Element: translation(ClickmeProductsApplicationSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_SUCCESS = 'PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_SUCCESS';\n\nconst ClickmeProductsApplicationDuplicate: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.message]}</>;\n\nexport const submitClickmeProductsApplicationDuplicate = {\n    Element: translation(ClickmeProductsApplicationDuplicate),\n    kind: 'error',\n    autoClose: true,\n};\nexport const PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_DUPLICATE =\n    'PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_DUPLICATE';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'price.products.not.found.notificattion.heading',\n    text: 'price.products.not.found.notificattion.message',\n};\n\nconst NotificattionContent: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n        {trls[TrlKeys.text]}\n    </>\n);\n\nexport const priceDBAccessProductsNotFound = {\n    Element: translation(NotificattionContent),\n    kind: 'error',\n};\n\nexport const PRICE_DBACCESS_PRODUCTS_NOT_FOUND = 'PRICE_DBACCESS_PRODUCTS_NOT_FOUND';\n","interface ElementProps {\n    message: string;\n}\n\nexport const purchaseNotificationNotice = {\n    Element: ({ message }: ElementProps): JSX.Element => <>{message}</>,\n    autoClose: false,\n};\n\nexport const PURCHASE_NOTIFICATION_NOTICE = 'PURCHASE_NOTIFICATION_NOTICE';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ChangeActivationTypeErrorCode } from 'lux/models/employerInvoicePurchase';\n\nexport const EMPLOYER_INVOICE_PURCHASE_CHANGE_ACTIVATION_TYPE_ERROR =\n    'EMPLOYER_INVOICE_PURCHASE_CHANGE_ACTIVATION_TYPE_ERROR';\n\ninterface ChangeActivationTypeErrorProps {\n    code: ChangeActivationTypeErrorCode;\n}\n\nconst TrlKeys: Record<ChangeActivationTypeErrorCode, string> = {\n    [ChangeActivationTypeErrorCode.CartNotFound]:\n        'employer.invoice.purchase.activation.type.change.error.cart.not.found.text',\n    [ChangeActivationTypeErrorCode.UnknownActivationType]:\n        'employer.invoice.purchase.activation.type.change.error.unknown.activation.type.text',\n    [ChangeActivationTypeErrorCode.CartActivationTypeIsNotChangeable]:\n        'employer.invoice.purchase.activation.type.change.error.cart.activation.type.is.not.changeable.text',\n};\n\nconst ChangeActivationTypeError: TranslatedComponent<ChangeActivationTypeErrorProps> = ({ trls, code }) => (\n    <>{trls[TrlKeys[code]]}</>\n);\n\nexport const changeActivationTypeError = {\n    Element: translation(ChangeActivationTypeError),\n    kind: 'error',\n    autoClose: true,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--EKtLQ8gfVPpJJWgWwBlG\"};","import axios from 'axios';\n\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport sendHHAnalytics from 'HH/SendHHAnalytics';\nimport translation from 'lux/components/translation';\n\nimport styles from './supernova-region-clarification.less';\n\nconst TrlKeys = {\n    text: 'navi.regionClarification.text',\n    confirmButton: 'navi.regionClarification.confirm',\n    changeButton: 'navi.regionClarification.change',\n};\n\nexport const REGION_CLARIFICATION = 'REGION_CLARIFICATION';\n\nconst RegionClarification: TranslatedComponent<{\n    removeNotification: () => void;\n    onChangeClick: () => void;\n    translations: { area: string };\n    host: string;\n}> = ({ trls, removeNotification, onChangeClick, translations, host }) => {\n    return (\n        <div data-qa=\"region-clarification\">\n            {format(trls[TrlKeys.text], {\n                '{0}': translations.area,\n            })}\n            <NotificationFooter>\n                <div className={styles.wrapper}>\n                    <Button\n                        scale={ButtonScale.Small}\n                        kind={ButtonKind.Primary}\n                        data-qa=\"region-clarification-confirm\"\n                        onClick={async () => {\n                            try {\n                                await axios.post('/shards/region_clarified', null, {\n                                    params: { host },\n                                });\n                            } catch (exception) {} // eslint-disable-line no-empty\n                            removeNotification();\n                        }}\n                    >\n                        {trls[TrlKeys.confirmButton]}\n                    </Button>\n                    <FormSpacer />\n                    <Button\n                        scale={ButtonScale.Small}\n                        kind={ButtonKind.Primary}\n                        appearance={ButtonAppearance.Outlined}\n                        data-qa=\"region-clarification-clarify\"\n                        onClick={() => {\n                            removeNotification();\n                            onChangeClick();\n                        }}\n                    >\n                        {trls[TrlKeys.changeButton]}\n                    </Button>\n                </div>\n            </NotificationFooter>\n        </div>\n    );\n};\n\nexport default {\n    Element: translation(RegionClarification),\n    onClose: (): void => {\n        void sendHHAnalytics({ goal: 'region-clarification-close' });\n    },\n};\n","import ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    one: 'employer.vacancyResponses.batch.resumesMarkRead.one',\n    some: 'employer.vacancyResponses.batch.resumesMarkRead.some',\n    many: 'employer.vacancyResponses.batch.resumesMarkRead.many',\n};\n\ninterface BatchedReadProps {\n    count: number;\n}\n\nconst BathedResponsesRead: TranslatedComponent<BatchedReadProps> = ({ trls, count }) => {\n    return (\n        <ConversionNumber\n            hasValue={false}\n            many={trls[TrlKeys.many]}\n            one={trls[TrlKeys.one]}\n            some={trls[TrlKeys.some]}\n            value={count}\n            format={(trl) => format(trl, { '{0}': count })}\n        />\n    );\n};\n\nexport const batchedResponsesRead = {\n    Element: translation(BathedResponsesRead),\n    kind: 'info',\n    autoClose: true,\n};\nexport const BATCHED_RESPONSES_READ = 'BATCHED_RESPONSES_READ';\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    error: {\n        title: 'index.applicant.resumeBatchUpdate.notification.error.title',\n        content: 'index.applicant.resumeBatchUpdate.notification.error.content',\n    },\n    success: {\n        title: 'index.applicant.resumeBatchUpdate.notification.success.title',\n        content: 'index.applicant.resumeBatchUpdate.notification.success.content',\n    },\n};\n\nconst ResumeBatchUpdateSuccess: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.success.title]}</NotificationHeading>\n        <p>{trls[TrlKeys.success.content]}</p>\n    </>\n);\nexport const resumeBatchUpdateSuccess = {\n    Element: translation(ResumeBatchUpdateSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESUME_BATCH_UPDATE_SUCCESS = 'RESUME_BATCH_UPDATE_SUCCESS';\n\nconst ResumeBatchUpdateError: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.error.title]}</NotificationHeading>\n        <p>{trls[TrlKeys.error.content]}</p>\n    </>\n);\nexport const resumeBatchUpdateError = {\n    Element: translation(ResumeBatchUpdateError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const RESUME_BATCH_UPDATE_ERROR = 'RESUME_BATCH_UPDATE_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    successMessage: 'employer.applicantsBlacklist.success',\n    errorMessage: 'employer.applicantsBlacklist.error.BLACKLIST_EXCEEDED',\n    complaintReasonMessage: 'employer.vacancyResponses.complaintReason.postError',\n};\n\nconst CompletionBlacklistSuccess: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.successMessage]}</>;\n\nexport const completionBlacklistSuccess = {\n    Element: translation(CompletionBlacklistSuccess),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const COMPLETION_BLACK_LIST_SUCCESS = 'COMPLETION_BLACK_LIST_SUCCESS';\n\nconst CompletionBlacklistError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.errorMessage]}</>;\n\nexport const completionBlacklistError = {\n    Element: translation(CompletionBlacklistError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const COMPLETION_BLACK_LIST_ERROR = 'COMPLETION_BLACK_LIST_ERROR';\n\nconst CompletionDefaultError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.complaintReasonMessage]}</>;\n\nexport const completionDefaultError = {\n    Element: translation(CompletionDefaultError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const COMPLETION_DEFAULT_ERROR = 'COMPLETION_DEFAULT_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const RESUME_CONTACTS_ERROR = 'RESUME_CONTACTS_ERROR';\n\nconst TrlKeys = {\n    error: 'employer.resume.contacts.error',\n};\nconst ResumeContactsError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport default {\n    Element: translation(ResumeContactsError),\n    kind: 'error',\n    autoClose: true,\n};\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nexport const NAME_IS_EMPTY = 'NAME_IS_EMPTY';\n\nconst NameIsEmpty = ({ trls }) => trls[NameIsEmpty.trls.error];\n\nNameIsEmpty.trls = {\n    error: 'employer.resumeFolders.error.NAME_IS_EMPTY',\n};\n\nNameIsEmpty.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const nameIsEmptyError = {\n    Element: translation(NameIsEmpty),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const NAME_IS_TOO_LONG = 'NAME_IS_TOO_LONG';\n\nconst NameIsTooLong = ({ trls }) => trls[NameIsTooLong.trls.error];\n\nNameIsTooLong.trls = {\n    error: 'employer.resumeFolders.error.NAME_IS_TOO_LONG',\n};\n\nNameIsTooLong.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const nameIsTooLongError = {\n    Element: translation(NameIsTooLong),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const FOLDER_DELETE_ERROR = 'FOLDER_DELETE_ERROR';\nconst DeleteError = ({ trls, folderName }) => trls[DeleteError.trls.error].replace('{0}', folderName);\nDeleteError.trls = {\n    error: 'employer.resumeFolders.folder.delete.error',\n};\nDeleteError.propTypes = {\n    trls: PropTypes.object,\n};\nexport const folderDeleteError = {\n    Element: translation(DeleteError),\n    kind: 'error',\n    autoClose: true,\n};\n","import { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst MaxResumeLimit = ({ max, trls }) => (\n    <Fragment>\n        <NotificationHeading>{trls[MaxResumeLimit.trls.heading]}</NotificationHeading>\n        {format(trls[MaxResumeLimit.trls.text], { '{0}': max })}\n    </Fragment>\n);\n\nMaxResumeLimit.trls = {\n    heading: 'resumeForm.maxResumes.notification.1',\n    text: 'resumeForm.maxResumes.notification.2',\n};\n\nMaxResumeLimit.propTypes = {\n    max: PropTypes.number,\n    trls: PropTypes.object,\n};\n\nexport const maxResumeLimit = {\n    Element: connect((state) => ({ max: state.resumeLimits.max }))(translation(MaxResumeLimit)),\n    kind: 'error',\n};\n\nexport const MAX_RESUME_LIMIT = 'MAX_RESUME_LIMIT';\n\nconst ResumeFormVisibilityError = ({ trls }) => (\n    <Fragment>\n        <NotificationHeading>{trls[ResumeFormVisibilityError.trls.title]}</NotificationHeading>\n        {trls[ResumeFormVisibilityError.trls.content]}\n    </Fragment>\n);\n\nResumeFormVisibilityError.trls = {\n    title: 'resumeForm.error.visibility.title',\n    content: 'resumeForm.error.visibility.content',\n};\n\nResumeFormVisibilityError.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const resumeFormVisibilityError = {\n    Element: translation(ResumeFormVisibilityError),\n    kind: 'error',\n};\nexport const RESUME_FORM_VISIBILITY_ERROR = 'RESUME_FORM_VISIBILITY_ERRROR';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst EditErrorNotification = ({ trls }) => trls[EditErrorNotification.trls.showError];\n\nEditErrorNotification.trls = {\n    showError: 'rb.edit.photo.uploaderror',\n};\n\nEditErrorNotification.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const resumeFormArtifactsEditErrorNotification = {\n    Element: translation(EditErrorNotification),\n    kind: 'error',\n    autoClose: true,\n};\nexport const RESUME_FORM_ARTIFACTS_EDIT_ERROR_NOTIFICATION = 'RESUME_FORM_ARTIFACTS_EDIT_ERROR_NOTIFICATION';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    errorLoading: 'resume.employer.history.error.loading',\n};\n\nconst LoadError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.errorLoading]}</>;\nexport const negotiationsHistoryError = {\n    Element: translation(LoadError),\n    kind: 'error',\n};\nexport const HISTORY_LOAD_ERROR = 'HISTORY_LOAD_ERROR';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale, ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nexport enum Kind {\n    ContactInformationViewGeneric = 'contactInformationViewGeneric',\n    QuotaExceeded = 'quotaExceeded',\n    ResumeCountryMismatch = 'resumeCountryMismatch',\n    ResumeContentIsTooLarge = 'resumeContentIsTooLarge',\n    ResumeCommentAdd = 'resumeCommentAdd',\n    ResumeCommentEdit = 'resumeCommentEdit',\n    ResumeModerationCorrected = 'resumeModerationCorrected',\n    ResumeCommentAdded = 'resumeCommentAdded',\n    ContactInformationViewInfo = 'contactInformationViewInfo',\n}\n\ninterface PartialTrls {\n    heading: string;\n    footer: string;\n    text: string;\n}\n\nconst TrlKeys = {\n    [Kind.ContactInformationViewGeneric]: {\n        heading: 'resume.contacts.notification.civ.error.heading',\n        text: 'resume.contacts.notification.civ.error.content',\n    },\n    [Kind.QuotaExceeded]: {\n        heading: 'resume.contacts.notification.civ.quotaExceeded.heading',\n        text: 'resume.contacts.notification.civ.quotaExceeded.content',\n    },\n    [Kind.ResumeCountryMismatch]: {\n        heading: 'resume.contacts.notification.civ.resumeCountryMismatch.heading',\n        text: 'resume.contacts.notification.civ.resumeCountryMismatch.content',\n    },\n    [Kind.ResumeContentIsTooLarge]: {\n        text: 'resume.contacts.notification.civ.resumeContentIsTooLarge.content',\n    },\n    [Kind.ResumeCommentAdd]: {\n        heading: 'resume.comments.notification.add.title',\n    },\n    [Kind.ResumeCommentEdit]: {\n        heading: 'resume.comments.notification.edit.title',\n    },\n    [Kind.ResumeModerationCorrected]: {\n        text: 'rb.moderationCorrectedNotification',\n    },\n    [Kind.ResumeCommentAdded]: {\n        text: 'resume.comments.notification.add.title',\n    },\n    [Kind.ContactInformationViewInfo]: {\n        heading: 'resume.contacts.notification.civ.info.heading',\n        text: 'resume.contacts.notification.civ.info.content',\n        footer: 'resume.contacts.notification.civ.button.to.price',\n    },\n};\n\ninterface NotificationTemplateProps {\n    kind: Kind;\n    message?: string;\n    hasHeading?: boolean;\n    hasFooter?: boolean;\n    footerLink?: string;\n}\n\nconst NotificationTemplate: TranslatedComponent<NotificationTemplateProps> = ({\n    trls,\n    kind,\n    message,\n    hasHeading,\n    hasFooter,\n    footerLink,\n}) => (\n    <>\n        {hasHeading && (\n            <NotificationHeading>{formatNewLine(trls[(TrlKeys[kind] as PartialTrls).heading])}</NotificationHeading>\n        )}\n        {message || trls[(TrlKeys[kind] as PartialTrls).text]}\n        {hasFooter && footerLink && (\n            <NotificationFooter>\n                <Button\n                    scale={ButtonScale.Small}\n                    kind={ButtonKind.Primary}\n                    appearance={ButtonAppearance.Outlined}\n                    Element={Link}\n                    to={footerLink}\n                >\n                    {trls[(TrlKeys[kind] as PartialTrls).footer]}\n                </Button>\n            </NotificationFooter>\n        )}\n    </>\n);\n\nexport default translation(NotificationTemplate);\n","import NotificationTemplate, { Kind } from 'lux/components/ResumeView/NotificationTemplate';\n\nexport const CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY = 15000;\nexport const CONTACT_INFORMATION_VIEW_INFO_NOTIFICATION_DELAY = 30000;\n\nexport const contactInformationViewErrorMessage = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.ContactInformationViewGeneric} hasHeading />,\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY,\n};\nexport const CONTACT_INFORMATION_VIEW_ERROR_MESSAGE = 'CONTACT_INFORMATION_VIEW_ERROR_MESSAGE';\n\nexport const contactInformationViewInfoMessage = {\n    Element: (): JSX.Element => (\n        <NotificationTemplate\n            kind={Kind.ContactInformationViewInfo}\n            hasHeading\n            hasFooter\n            footerLink=\"/price/dbaccess\"\n        />\n    ),\n    autoClose: true,\n    autoCloseDelay: CONTACT_INFORMATION_VIEW_INFO_NOTIFICATION_DELAY,\n};\nexport const CONTACT_INFORMATION_VIEW_INFO_MESSAGE = 'CONTACT_INFORMATION_VIEW_INFO_MESSAGE';\n\nexport const contactInformationViewQuotaExceeded = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.QuotaExceeded} hasHeading />,\n    autoClose: true,\n    autoCloseDelay: CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY,\n};\nexport const CONTACT_INFORMATION_VIEW_QUOTA_EXCEEDED = 'CONTACT_INFORMATION_VIEW_QUOTA_EXCEEDED';\n\nexport const contactInformationViewResumeCountryMismatch = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.ResumeCountryMismatch} hasHeading />,\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY,\n};\nexport const CONTACT_INFORMATION_VIEW_RESUME_COUNTRY_MISMATCH = 'CONTACT_INFORMATION_VIEW_RESUME_COUNTRY_MISMATCH';\n\nexport const contactInformationViewResumeContentIsTooLarge = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.ResumeContentIsTooLarge} />,\n    kind: 'error',\n    autoClose: true,\n    autoCloseDelay: CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY,\n};\nexport const CONTACT_INFORMATION_VIEW_RESUME_CONTENT_IS_TOO_LARGE =\n    'CONTACT_INFORMATION_VIEW_RESUME_CONTENT_IS_TOO_LARGE';\n\nexport const resumeViewModerationCorrectedMessage = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.ResumeModerationCorrected} />,\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESUME_VIEW_MODERATION_CORRECTED_MESSAGE = 'RESUME_VIEW_MODERATION_CORRECTED_MESSAGE';\n\ninterface ElementProps {\n    message: string;\n}\nexport const resumeCommentEditMessage = {\n    Element: ({ message }: ElementProps): JSX.Element => (\n        <NotificationTemplate kind={Kind.ResumeCommentEdit} message={message} hasHeading />\n    ),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESUME_COMMENT_EDIT_MESSAGE = 'RESUME_COMMENT_EDIT_MESSAGE';\n\nexport const resumeCommentAddMessage = {\n    Element: ({ message }: ElementProps): JSX.Element => (\n        <NotificationTemplate kind={Kind.ResumeCommentAdd} message={message} hasHeading />\n    ),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESUME_COMMENT_ADD_MESSAGE = 'RESUME_COMMENT_ADD_MESSAGE';\n\nexport const resumeCommentAdded = {\n    Element: (): JSX.Element => <NotificationTemplate kind={Kind.ResumeCommentAdded} />,\n    kind: 'ok',\n    autoClose: true,\n};\nexport const RESUME_COMMENT_ADDED = 'RESUME_COMMENT_ADDED';\n","import { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\n\nimport translation from 'lux/components/translation';\n\nconst TalantixResumeImportFailedNotification = ({ type, trls }) => {\n    useEffect(() => {\n        Analytics.sendEvent('talantix', 'import_error', `show_error_${type}`);\n    }, [type]);\n\n    const trlKeys = TalantixResumeImportFailedNotification.trls[type] || {};\n    return (\n        <Fragment>\n            <NotificationHeading>{trls[trlKeys.title]}</NotificationHeading>\n            {trls[trlKeys.text]}\n            {trlKeys.mail !== undefined && (\n                <Fragment>\n                    {' '}\n                    <BlokoLink disableVisited Element={Link} to={`mailto:${trls[trlKeys.mail]}`}>\n                        {trls[trlKeys.mail]}\n                    </BlokoLink>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nTalantixResumeImportFailedNotification.propTypes = {\n    type: PropTypes.string,\n    trls: PropTypes.object,\n};\n\nTalantixResumeImportFailedNotification.trls = {\n    network: {\n        title: 'talantix.import.notification.error.network.title',\n        text: 'talantix.import.notification.error.network.text',\n    },\n    account: {\n        title: 'talantix.import.notification.error.account.title',\n        text: 'talantix.import.notification.error.account.text',\n    },\n    system: {\n        title: 'talantix.import.notification.error.system.title',\n        text: 'talantix.import.notification.error.system.text',\n        mail: 'talantix.import.notification.error.system.mail',\n    },\n    api: {\n        title: 'talantix.import.notification.error.api.title',\n        text: 'talantix.import.notification.error.api.text',\n    },\n    permission: {\n        title: 'talantix.import.notification.error.permission.title',\n        text: 'talantix.import.notification.error.permission.text',\n    },\n};\n\nexport default translation(TalantixResumeImportFailedNotification);\n","import { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport Link from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\n\nimport translation from 'lux/components/translation';\n\nconst TalantixResumeImportedNotification = ({ link, trls }) => {\n    useEffect(() => {\n        Analytics.sendEvent('talantix', 'import_success', 'show_saved_notification');\n    }, []);\n\n    return (\n        <Fragment>\n            <NotificationHeading>{trls[TalantixResumeImportedNotification.trls.title]}</NotificationHeading>\n            <div>{trls[TalantixResumeImportedNotification.trls.text]}</div>\n            <Gap top>\n                <Button\n                    data-qa=\"resume-talantix-import-button__success-link\"\n                    appearance={ButtonAppearance.Outlined}\n                    target=\"_blank\"\n                    Element={Link}\n                    href={link}\n                    onClick={() => {\n                        Analytics.sendEvent('talantix', 'import_success', 'click_go_to_talantix');\n                    }}\n                >\n                    {trls[TalantixResumeImportedNotification.trls.button]}\n                </Button>\n            </Gap>\n        </Fragment>\n    );\n};\n\nTalantixResumeImportedNotification.propTypes = {\n    link: PropTypes.string,\n    trls: PropTypes.object,\n};\n\nTalantixResumeImportedNotification.trls = {\n    title: 'talantix.import.notification.title',\n    text: 'talantix.import.notification.text',\n    button: 'talantix.import.notification.button',\n};\n\nexport default translation(TalantixResumeImportedNotification);\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport Link from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\n\nimport translation from 'lux/components/translation';\n\nconst TalantixResumeImportedNotificationPromo = ({ trls }) => {\n    useEffect(() => {\n        Analytics.sendEvent('talantix', 'import_promo', 'show_notification');\n    }, []);\n\n    return (\n        <>\n            <NotificationHeading>{trls[TalantixResumeImportedNotificationPromo.trls.title]}</NotificationHeading>\n            <div>{trls[TalantixResumeImportedNotificationPromo.trls.text]}</div>\n            <Gap top>\n                <Button\n                    data-qa=\"resume-talantix-import-button__success-link\"\n                    appearance={ButtonAppearance.Outlined}\n                    target=\"_blank\"\n                    Element={Link}\n                    href=\"https://talantix.ru/ats/extension\"\n                    onClick={() => {\n                        Analytics.sendEvent('talantix', 'import_promo', 'click_go_to_talantix');\n                    }}\n                >\n                    {trls[TalantixResumeImportedNotificationPromo.trls.button]}\n                </Button>\n            </Gap>\n        </>\n    );\n};\n\nTalantixResumeImportedNotificationPromo.propTypes = {\n    trls: PropTypes.object,\n};\n\nTalantixResumeImportedNotificationPromo.trls = {\n    title: 'talantix.import.notificationPromo.title',\n    text: 'talantix.import.notificationPromo.text',\n    button: 'talantix.import.notificationPromo.button',\n};\n\nexport default translation(TalantixResumeImportedNotificationPromo);\n","import Analytics from '@hh.ru/analytics-js';\n\nimport TalantixResumeImportFailedNotification from 'lux/components/Notifications/TalantixResumeImportFailedNotification';\nimport TalantixResumeImportedNotification from 'lux/components/Notifications/TalantixResumeImportedNotification';\nimport TalantixResumeImportedNotificationPromo from 'lux/components/Notifications/TalantixResumeImportedNotificationPromo';\n\nexport const TALANTIX_RESUME_IMPORTED = 'TALANTIX_RESUME_IMPORTED';\n\nexport const talantixResumeImported = {\n    Element: TalantixResumeImportedNotification,\n    kind: 'ok',\n    onClose: () => {\n        Analytics.sendEvent('talantix', 'import_success', 'close_saved');\n    },\n};\n\nexport const TALANTIX_RESUME_IMPORT_FAILED = 'TALANTIX_RESUME_IMPORT_FAILED';\n\nexport const talantixResumeImportFailed = {\n    Element: TalantixResumeImportFailedNotification,\n    kind: 'error',\n    onClose: (_, { type }) => {\n        Analytics.sendEvent('talantix', 'import_error', `close_error_${type}`);\n    },\n};\n\nexport const TALANTIX_RESUME_IMPORTED_PROMO = 'TALANTIX_RESUME_IMPORTED_PROMO';\n\nexport const talalantixResumeImportedPromo = {\n    Element: TalantixResumeImportedNotificationPromo,\n    kind: 'info',\n    onClose: (_, { onClose }) => {\n        onClose();\n        Analytics.sendEvent('talantix', 'import_promo', 'close');\n    },\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    success: 'employer.settings.message.ok.changed',\n    error: 'employer.settings.message.error',\n};\n\nconst EditSuccess: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.success]}</>;\n\nexport const searchPublicationEditSuccess = {\n    Element: translation(EditSuccess),\n    kind: 'ok',\n};\nexport const SEARCH_PUBLICATION_EDIT_SUCCESS = 'SEARCH_PUBLICATION_EDIT_SUCCESS';\n\nconst EditError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport const searchPublicationEditError = {\n    Element: translation(EditError),\n    kind: 'error',\n};\n\nexport const SEARCH_PUBLICATION_EDIT_ERROR = 'SEARCH_PUBLICATION_EDIT_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const SMS_ERROR = 'SMS_ERROR';\n\nconst TrlKeys = {\n    error: 'negotiations.changeTopic.sms.error',\n};\nconst SmsError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.error]}</>;\n\nexport default {\n    Element: translation(SmsError),\n    kind: 'error',\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'settings.subscribe.saved',\n};\nconst SubscribeFormSucces: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.text]}</>;\n\nexport const subscribeFormSuccess = {\n    Element: translation(SubscribeFormSucces),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\nexport const SUBSCRIBE_FORM_SUCCESS = 'SUBSCRIBE_FORM_SUCCESS';\n","import PropTypes from 'prop-types';\n\nimport Conversion from 'bloko/blocks/conversion';\n\nimport translation from 'lux/components/translation';\n\nconst TargetEmployerMarkedRead = ({ count, trls }) =>\n    count ? (\n        <Conversion\n            value={count}\n            one={trls[TargetEmployerMarkedRead.trls.one]}\n            some={trls[TargetEmployerMarkedRead.trls.some]}\n            many={trls[TargetEmployerMarkedRead.trls.many]}\n        />\n    ) : (\n        ''\n    );\n\nTargetEmployerMarkedRead.trls = {\n    one: 'employer.targetEmployer.markedRead.one',\n    some: 'employer.targetEmployer.markedRead.some',\n    many: 'employer.targetEmployer.markedRead.many',\n};\n\nTargetEmployerMarkedRead.propTypes = {\n    count: PropTypes.number,\n    trls: PropTypes.object,\n};\n\nexport const targetEmployerMarkedReadError = {\n    Element: translation(TargetEmployerMarkedRead),\n    kind: 'ok',\n    autoClose: true,\n    dataQa: 'target-employer-resumes-mark-read',\n};\nexport const TARGET_EMPLOYER_MARKED_READ = 'TARGET_EMPLOYER_MARKED_READ';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    message: 'employer.service.message.fail',\n};\n\nconst ErrorNotification: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.message]}</>;\nexport const vacancyActionErrorNotification = {\n    Element: translation(ErrorNotification),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_ACTION_ERROR = 'VACANCY_ACTION_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    save: 'auction.modal.title.notification.save',\n};\n\nconst VacancyAuctionSaveSuccessfullyModalNotification: TranslatedComponent = ({ trls }) => (\n    <span>{trls[TrlKeys.save]}</span>\n);\n\nexport const saveSuccessfullyAuctionModalNotification = {\n    Element: translation(VacancyAuctionSaveSuccessfullyModalNotification),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY = 'SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY';\n","export enum VacancyBlockedReason {\n    VacancyBlockedDuePaidServices = 'VACANCY_BLOCKED_DUE_PAID_SERVICES',\n    VacancyBlockedDueBadDescription = 'VACANCY_BLOCKED_DUE_BAD_DESCRIPTION',\n    VacancyBlockedDueTwoInOne = 'VACANCY_BLOCKED_DUE_TWO_IN_ONE',\n    VacancyBlockedDueTraining = 'VACANCY_BLOCKED_DUE_TRAINING',\n    VacancyBlockedDueCaptionMissing = 'VACANCY_BLOCKED_DUE_CAPTION_MISSING',\n    VacancyBlockedDueModerator = 'VACANCY_BLOCKED_DUE_MODERATOR',\n    VacancyBlockedDueRelocateFromBelarus = 'VACANCY_BLOCKED_DUE_RELOCATE_FROM_BELARUS',\n    VacancyBlockedDueReplacement = 'VACANCY_BLOCKED_DUE_REPLACEMENT',\n}\n","import { Fragment, useEffect, useMemo, useState } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { VACANCY_CREATE_GET_URL } from 'lux/components/VacancyCreate/utils';\nimport translation from 'lux/components/translation';\nimport useUrl from 'lux/hooks/useUrl';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    DraftLoadOk: {\n        message: 'employer.newVacancy.draftLoad.ok',\n        clear: 'employer.newVacancy.loaded.clear',\n    },\n    DraftLoadError: { message: 'employer.newVacancy.draftLoad.error' },\n    TemplateLoadOk: {\n        message: 'employer.newVacancy.templateLoad.ok',\n        clear: 'employer.newVacancy.loaded.clear',\n    },\n    TemplateLoadError: { message: 'employer.newVacancy.templateLoad.error' },\n    VacancySubmitGenericError: { message: 'employer.VacancyCreate.vacancySubmitGenericError' },\n    DraftSaveOk: { message: 'vacancy.create.autoSave.vacancySaved' },\n    DraftSaveError: { message: 'vacancy.create.autoSave.vacancySavingError' },\n    VacancySubmitDuplicateError: {\n        messagePre: 'employer.VacancyCreate.vacancySubmitDuplicateError.message.pre',\n        messageLink: 'employer.VacancyCreate.vacancySubmitDuplicateError.message.link',\n        messagePost: 'employer.VacancyCreate.vacancySubmitDuplicateError.message.post',\n        title: 'employer.VacancyCreate.vacancySubmitDuplicateError.title',\n    },\n    VacancySubmitPermissionError: { message: 'employer.VacancyCreate.vacancySubmitPermissionError' },\n    BillingSudoSpendMoneyError: { message: 'employer.VacancyCreate.billingSudoSpendMoneyError' },\n};\n\nconst autoCloseProps = {\n    autoClose: true,\n    autoCloseDelay: 30 * 1000,\n};\n\nconst useRemoveUponLeavingPage = (removeNotificationCallback: () => void, url: string) =>\n    useEffect(() => {\n        if (url && !url.includes(VACANCY_CREATE_GET_URL)) {\n            removeNotificationCallback();\n        }\n    }, [removeNotificationCallback, url]);\n\nconst DraftLoadOk: TranslatedComponent<{ removeNotification: () => void }> = ({ trls, removeNotification }) => {\n    const url = useSelector(({ router: { location } }) => location.pathname + location.search);\n\n    useRemoveUponLeavingPage(removeNotification, url);\n    const urlWithoutDraft = useMemo(() => {\n        const parsedUrl = urlParser(url);\n        parsedUrl.params.draftId = [];\n        return parsedUrl.href;\n    }, [url]);\n    return (\n        <Fragment>\n            {trls[TrlKeys.DraftLoadOk.message]}\n            <NotificationFooter>\n                <BlokoLink\n                    disableVisited\n                    Element={Link}\n                    onClick={removeNotification}\n                    to={urlWithoutDraft}\n                    cancelScrollCorrection\n                >\n                    {` ${trls[TrlKeys.DraftLoadOk.clear]}`}\n                </BlokoLink>\n            </NotificationFooter>\n        </Fragment>\n    );\n};\n\nexport const draftLoadOk = {\n    Element: translation(DraftLoadOk),\n    kind: 'ok',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_DRAFT_LOAD_OK = 'VACANCY_CREATE_DRAFT_LOAD_OK';\n\nconst DraftLoadError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.DraftLoadError.message]}</>;\nexport const draftLoadError = {\n    Element: translation(DraftLoadError),\n    kind: 'error',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_DRAFT_LOAD_ERROR = 'VACANCY_CREATE_DRAFT_LOAD_ERROR';\n\nconst TemplateLoadOk: TranslatedComponent<{ removeNotification: () => void }> = ({ trls, removeNotification }) => {\n    const url = useUrl();\n\n    useRemoveUponLeavingPage(removeNotification, url);\n    const templateName = useSelector(\n        ({ vacancyCreateTemplates, vacancyCreateTemplateId }) =>\n            vacancyCreateTemplates && vacancyCreateTemplates.find(({ id }) => id === vacancyCreateTemplateId)?.name\n    );\n\n    const preparedTemplateName = useSelector(\n        ({ preparedVacancyTemplates, vacancyCreatePreparedTemplateId }) =>\n            preparedVacancyTemplates &&\n            preparedVacancyTemplates.find(({ id }) => id === vacancyCreatePreparedTemplateId)?.name\n    );\n\n    // Имя шаблона не должно меняться в нотификации после маунта\n    const [name] = useState(templateName || preparedTemplateName || '');\n\n    const urlWithoutTemplate = useMemo(() => {\n        const parsedUrl = urlParser(url);\n        parsedUrl.params.templateId = [];\n        parsedUrl.params.preparedTemplateId = [];\n        return parsedUrl.href;\n    }, [url]);\n    return (\n        <Fragment>\n            {format(trls[TrlKeys.TemplateLoadOk.message], { '{name}': name.trim().replace(/\\s/g, NON_BREAKING_SPACE) })}\n            <NotificationFooter>\n                <BlokoLink\n                    disableVisited\n                    Element={Link}\n                    onClick={removeNotification}\n                    to={urlWithoutTemplate}\n                    cancelScrollCorrection\n                >\n                    {` ${trls[TrlKeys.TemplateLoadOk.clear]}`}\n                </BlokoLink>\n            </NotificationFooter>\n        </Fragment>\n    );\n};\n\nexport const templateLoadOk = {\n    Element: translation(TemplateLoadOk),\n    kind: 'ok',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_TEMPLATE_LOAD_OK = 'VACANCY_CREATE_TEMPLATE_LOAD_OK';\n\nconst TemplateLoadError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.TemplateLoadError.message]}</>;\n\nexport const templateLoadError = {\n    Element: translation(TemplateLoadError),\n    kind: 'error',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_TEMPLATE_LOAD_ERROR = 'VACANCY_CREATE_TEMPLATE_LOAD_ERROR';\n\nconst VacancySubmitGenericError: TranslatedComponent = ({ trls }) => (\n    <>{trls[TrlKeys.VacancySubmitGenericError.message]}</>\n);\nexport const vacancySubmitGenericError = {\n    Element: translation(VacancySubmitGenericError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_CREATE_SUBMIT_GENERIC_ERROR = 'VACANCY_CREATE_SUBMIT_GENERIC_ERROR';\n\nconst DraftSaveOk: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.DraftSaveOk.message]}</>;\nexport const draftSaveOk = {\n    Element: translation(DraftSaveOk),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const VACANCY_CREATE_DRAFT_SAVE_OK = 'VACANCY_CREATE_DRAFT_SAVE_OK';\n\nconst DraftSaveError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.DraftSaveError.message]}</>;\nexport const draftSaveError = {\n    Element: translation(DraftSaveError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_CREATE_DRAFT_SAVE_ERROR = 'VACANCY_CREATE_DRAFT_SAVE_ERROR';\n\nconst VacancySubmitDuplicateError: TranslatedComponent = ({ trls }) => (\n    <Fragment>\n        <NotificationHeading>{trls[TrlKeys.VacancySubmitDuplicateError.title]}</NotificationHeading>\n        <div>\n            {trls[TrlKeys.VacancySubmitDuplicateError.messagePre]}{' '}\n            <BlokoLink disableVisited Element={Link} to=\"/employer/vacancies\" target=\"_blank\">\n                {trls[TrlKeys.VacancySubmitDuplicateError.messageLink]}\n            </BlokoLink>{' '}\n            {trls[TrlKeys.VacancySubmitDuplicateError.messagePost]}\n        </div>\n    </Fragment>\n);\nexport const vacancySubmitDuplicateError = {\n    Element: translation(VacancySubmitDuplicateError),\n    kind: 'error',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR = 'VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR';\n\nconst VacancySubmitPermissionError: TranslatedComponent = ({ trls }) => (\n    <>{trls[TrlKeys.VacancySubmitPermissionError.message]}</>\n);\nexport const vacancySubmitPermissionError = {\n    Element: translation(VacancySubmitPermissionError),\n    kind: 'error',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_SUBMIT_PERMISSION_ERROR = 'VACANCY_CREATE_SUBMIT_PERMISSION_ERROR';\n\nconst BillingSudoSpendMoneyError: TranslatedComponent = ({ trls }) => (\n    <>{trls[TrlKeys.BillingSudoSpendMoneyError.message]}</>\n);\nexport const billingSudoSpendMoneyError = {\n    Element: translation(BillingSudoSpendMoneyError),\n    kind: 'error',\n    ...autoCloseProps,\n};\nexport const VACANCY_CREATE_BILLING_SUDO_SPEND_MONEY_ERROR = 'VACANCY_CREATE_BILLING_SUDO_SPEND_MONEY_ERROR';\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    errorText: 'vacancyResponseAbort.error',\n};\n\nexport const APPLICANT_RESPONSE_ABORT = 'APPLICANT_RESPONSE_ABORT';\nconst SubscriptionErrorNotificationError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.errorText]}</>;\nexport default {\n    Element: translation(SubscriptionErrorNotificationError),\n    kind: 'error',\n    autoClose: true,\n};\n","import VacancyResponseError from 'lux/components/VacancyResponseError';\n\nexport default {\n    Element: VacancyResponseError,\n    kind: 'error',\n};\n\nexport const APPLICANT_RESPONSE_ERROR = 'APPLICANT_RESPONSE_ERROR';\n","import Conversion from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    DiscardCandidates: {\n        one: 'employer.discarded-notifier.rejection-confirmation.one',\n        many: 'employer.discarded-notifier.rejection-confirmation.many',\n    },\n};\n\ninterface DiscardCandidatesProps {\n    count: number;\n}\n\nconst DiscardCandidates: TranslatedComponent<DiscardCandidatesProps> = ({ trls, count }) => {\n    return (\n        <Conversion\n            many={trls[TrlKeys.DiscardCandidates.many]}\n            some={trls[TrlKeys.DiscardCandidates.many]}\n            one={trls[TrlKeys.DiscardCandidates.one]}\n            value={count}\n        />\n    );\n};\n\nexport const discardCandidates = {\n    Element: translation(DiscardCandidates),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\nexport const DISCARD_CANDIDATES = 'DISCARD_CANDIDATES';\n","import PropTypes from 'prop-types';\n\nimport Button from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\n\nimport translation from 'lux/components/translation';\n\nconst BrokenFilters = ({ trls }) => {\n    const handleClick = () => {\n        window.location.reload();\n    };\n\n    return (\n        <>\n            <NotificationHeading>{trls[BrokenFilters.trls.title]}</NotificationHeading>\n            <div>{trls[BrokenFilters.trls.message]}</div>\n            <NotificationFooter>\n                <Button onClick={handleClick}>{trls[BrokenFilters.trls.reload]}</Button>\n            </NotificationFooter>\n        </>\n    );\n};\n\nBrokenFilters.trls = {\n    message: 'vacancyResponses.brokenFilters.notification.message',\n    reload: 'button.reload',\n    title: 'vacancyResponses.brokenFilters.notification.title',\n};\nBrokenFilters.propTypes = { trls: PropTypes.object };\nexport default {\n    Element: translation(BrokenFilters),\n    kind: 'error',\n    dataQa: 'filters_can_not_be_displayed',\n};\nexport const FILTERS_CAN_NOT_BE_DISPLAYED = 'FILTERS_CANNOT_BE_DISPLAYED';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nexport const EMAIL_VERIFICATION_WAS_SENT_AGAIN = 'email_verification_was_sent_again';\nexport const EMAIL_VERIFICATION_WAS_SENT_AGAIN_TOO_OFTEN = 'email_verification_was_sent_again_too_often';\nexport const EMAIL_VERIFICATION_WAS_SENT_AGAIN_ERROR = 'email_verification_was_sent_again_error';\n\nenum SendDoubleOptInResponse {\n    EmailVerificationWasSendAgain = 'email_verification_was_sent_again',\n    EmailVerificationWasSendAgainTooOften = 'email_verification_was_sent_again_too_often',\n    EmailVerificationWasSendAgainError = 'email_verification_was_sent_again_error',\n}\n\nconst TrlKeys: Record<SendDoubleOptInResponse, string> = {\n    [SendDoubleOptInResponse.EmailVerificationWasSendAgain]: 'notifications.email_verification_was_sent_again',\n    [SendDoubleOptInResponse.EmailVerificationWasSendAgainTooOften]:\n        'notifications.email_verification_was_sent_again_too_often',\n    [SendDoubleOptInResponse.EmailVerificationWasSendAgainError]:\n        'notifications.email_verification_was_sent_again_error',\n};\n\ninterface EmailVerificationSendErrorProps {\n    notification?: SendDoubleOptInResponse;\n}\n\ninterface EmailVerificationSendProps {\n    email: string;\n    mailerUrl: string;\n}\n\nconst EmailVerificationSendError: TranslatedComponent<EmailVerificationSendErrorProps> = ({ trls, notification }) => (\n    <>{trls[TrlKeys[notification || SendDoubleOptInResponse.EmailVerificationWasSendAgainError]]}</>\n);\n\nconst EmailVerificationSend: TranslatedComponent<EmailVerificationSendProps> = ({ trls, email, mailerUrl }) => (\n    <>\n        {formatToReactComponent(trls[TrlKeys[SendDoubleOptInResponse.EmailVerificationWasSendAgain]], {\n            '{0}': (\n                <BlokoLink disableVisited Element={Link} to={`${mailerUrl}`}>\n                    {email}\n                </BlokoLink>\n            ),\n        })}\n    </>\n);\n\nexport const emailVerificationSendError = {\n    Element: translation(EmailVerificationSendError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const emailVerificationSend = {\n    Element: translation(EmailVerificationSend),\n    kind: 'ok',\n    autoClose: true,\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    showError: 'vacancy.search.contacts.show.error',\n};\n\nconst ShowContactsError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.showError]}</>;\n\nexport const vacancySearchItemContactsError = {\n    Element: translation(ShowContactsError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_SEARCH_ITEM_CONTACTS_ERROR = 'VACANCY_SEARCH_ITEM_CONTACTS_ERROR';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport routePaths from 'lux/modules/routePaths';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    anonymous: {\n        title: 'vacancySearchResults.saveSearch.success.title',\n        mainText: 'vacancySearchResults.saveSearch.success.text',\n    },\n    applicant: {\n        title: 'serp.savedSearch.success.1',\n        linkText: 'serp.savedSearch.teaser.autosearch',\n        mainText: 'serp.savedSearch.success.2.vacancy',\n    },\n    fromButton: {\n        title: 'search.vacancy.savedSearch.notification.title',\n        alreadyTitle: 'search.vacancy.savedSearch.notification.alreadyTitle',\n        linkText: 'search.vacancy.savedSearch.notification.link',\n        mainText: 'search.vacancy.savedSearch.notification.description',\n    },\n    errorText: 'vacancySearchResults.saveSearch.error.title',\n    wrongEmail: 'vacancySearchResults.saveSearch.wrongEmail.text',\n    emailExist1: 'vacancy.serp.autosearch.searchSavedIn.emailExist.text1',\n    emailExist2: 'vacancy.serp.autosearch.searchSavedIn.emailExist.text2',\n    emailExist3: 'vacancy.serp.autosearch.searchSavedIn.emailExist.text3',\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR = 'VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR';\nconst SubscriptionErrorNotificationError: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.errorText]}</>;\nexport const vacancySavedSearchSubscriptionError = {\n    Element: translation(SubscriptionErrorNotificationError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_WRONG_EMAIL = 'VACANCY_SAVED_SEARCH_SUBSCRIPTION_WRONG_EMAIL';\nconst SubscriptionErrorNotificationWrongEmail: TranslatedComponent = ({ trls }) => <>{trls[TrlKeys.wrongEmail]}</>;\nexport const vacancySavedSearchSubscriptionWrongEmail = {\n    Element: translation(SubscriptionErrorNotificationWrongEmail),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_AUTHORIZATION = 'VACANCY_SAVED_SEARCH_SUBSCRIPTION_AUTHORIZATION';\nconst SubscriptionErrorNotificationAuthorisation: TranslatedComponent<{ email: string }> = ({ trls, email }) => {\n    const url = useSelector((state) => state.request.url);\n    return (\n        <>\n            <NotificationHeading>\n                {formatToReactComponent(trls[TrlKeys.emailExist1], {\n                    '{0}': (\n                        <Text Element=\"span\" strong>\n                            {email}\n                        </Text>\n                    ),\n                })}\n            </NotificationHeading>\n            <NotificationFooter>\n                <BlokoLink disableVisited Element={Link} to={`/account/login?backUrl=${url}`}>\n                    {trls[TrlKeys.emailExist2]}\n                </BlokoLink>\n                {trls[TrlKeys.emailExist3]}\n            </NotificationFooter>\n        </>\n    );\n};\nexport const vacancySavedSearchSubscriptionAuthorization = {\n    Element: translation(SubscriptionErrorNotificationAuthorisation),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_APPLICANT =\n    'VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_APPLICANT';\nconst SubscriptionSuccessApplicant: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>\n            <>\n                {`${trls[TrlKeys.applicant.title]}${NON_BREAKING_SPACE}`}\n                <BlokoLink Element={Link} to={routePaths.VacancySavedSearch}>\n                    {trls[TrlKeys.applicant.linkText]}\n                </BlokoLink>\n            </>\n        </NotificationHeading>\n        <NotificationFooter>{trls[TrlKeys.applicant.mainText]}</NotificationFooter>\n    </>\n);\nexport const vacancySavedSearchSubscriptionSuccessApplicant = {\n    Element: translation(SubscriptionSuccessApplicant),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_ANONYMOUS =\n    'VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_ANONYMOUS';\nconst SubscriptionSuccessAnonymous: TranslatedComponent = ({ trls }) => (\n    <>\n        <NotificationHeading>{trls[TrlKeys.anonymous.title]}</NotificationHeading>\n        <NotificationFooter>{trls[TrlKeys.anonymous.mainText]}</NotificationFooter>\n    </>\n);\nexport const vacancySavedSearchSubscriptionSuccessAnonymous = {\n    Element: translation(SubscriptionSuccessAnonymous),\n    kind: 'ok',\n    autoClose: true,\n};\n\nexport const VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON =\n    'VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON';\nconst SubscriptionSuccessFromButton: TranslatedComponent<{ email: string; alreadySaved: boolean }> = ({\n    trls,\n    email,\n    alreadySaved,\n}) => (\n    <>\n        <NotificationHeading>\n            {formatToReactComponent(trls[alreadySaved ? TrlKeys.fromButton.alreadyTitle : TrlKeys.fromButton.title], {\n                '{0}': <Link to=\"/applicant/autosearch\">{trls[TrlKeys.fromButton.linkText]}</Link>,\n            })}\n        </NotificationHeading>\n        <NotificationFooter>\n            {formatToReactComponent(trls[TrlKeys.fromButton.mainText], {\n                '{0}': (\n                    <Text Element=\"span\" strong>\n                        {email}\n                    </Text>\n                ),\n            })}\n        </NotificationFooter>\n    </>\n);\nexport const vacancySavedSearchSubscriptionSuccessFromButton = {\n    Element: translation(SubscriptionSuccessFromButton),\n    kind: 'ok',\n    autoClose: true,\n};\n","import { FC, Fragment, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ValueOf } from 'type-fest';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { ErrorIds, SuccessIds, VacancyMessageTypes } from 'lux/models/vacancyMessages';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport { ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS } from 'lux/components/Notifications/ArchiveVacancyApplicantsFeedbackSuccess';\nimport {\n    ARCHIVE_VACANCY_SUCCESS,\n    VACANCY_UPGRADE_SUCCESS,\n    VACANCY_UPDATE_SUCCESS,\n    VACANCY_AUTO_PROLONGATION_SUCCESS,\n    VACANCY_AUTO_PROLONGATION_ERROR,\n    TOGGLE_VACANCY_OPTION_SUCCESS,\n} from 'lux/components/Notifications/EmployerVacancies';\n\nconst TrlKeys = {\n    VacancyErrorMessage: {\n        [ErrorIds.F]: 'error.employer.vacancyAlreadyArchived',\n        [ErrorIds.D]: 'error.vacancy.archive.accessDenied',\n        [ErrorIds.EE1]: 'error.vacancy.prolongate.accessDenied',\n        [ErrorIds.EE2]: 'error.vacancy.prolongate.quotaExceeded',\n        [ErrorIds.EE3]: 'error.vacancy.prolongate.minimumProlongatePeriod',\n        [ErrorIds.EE4]: 'error.vacancy.prolongate.notEnoughPremiumVacancy',\n        [ErrorIds.EE5]: 'error.vacancy.prolongate.notEnoughAnonymousVacancy',\n        [ErrorIds.EE6]: 'error.vacancy.prolongate.notEnoughAdvertisingVacancy',\n        [ErrorIds.EE7]: 'error.vacancy.prolongate.notEnoughVacancyPost',\n        [ErrorIds.EE8]: 'error.vacancy.prolongate.archivedVacancy',\n        [ErrorIds.EE9]: 'error.vacancy.prolongate.notEnoughFpn',\n        [ErrorIds.EE11]: 'error.vacancy.prolongate.unknownException',\n        [ErrorIds.EE14]: 'error.vacancy.prolongate.notEnoughRenewalVacancy',\n        [ErrorIds.EE15]: 'error.vacancy.prolongate.notEnoughRegionalRenewalVacancy',\n        [ErrorIds.EE18]: 'error.vacancy.prolongate.notEnoughRegionalPremiumVacancy',\n        [ErrorIds.EE19]: 'error.vacancy.prolongate.notEnoughRegionalVacancy',\n        [ErrorIds.EE21]: 'error.vacancy.prolongate.notEnoughRegionalFPN',\n        [ErrorIds.EE22]: 'error.standardPlus.tooEarlyProlongation',\n        [ErrorIds.EE23]: 'error.standardPlus.closedProlongation',\n        [ErrorIds.EE24]: 'error.free.noRightsProlongation',\n        [ErrorIds.EE25]: 'error.vacancy.prolongate.vacancy.haveLeafRegion',\n        [ErrorIds.EE26]: 'error.vacancy.prolongate.area.postDisabled',\n        [ErrorIds.EE27]: 'error.vacancy.autoProlongation.enable.unknownException.content',\n        [ErrorIds.EE28]: 'error.vacancy.autoProlongation.disable.unknownException.content',\n        [ErrorIds.EE29]: 'error.vacancy.renewal.tooEarly',\n        [ErrorIds.ERR]: 'error.vacancy.nullSelection',\n        [ErrorIds.NA]: 'employer.vacancy.post.error.notAvailableVacancyArchiveNotifier',\n        [ErrorIds.EVU]: 'employer.vacancy.upgrade.error',\n        [SuccessIds.EA]: 'employer.vacancy.extends.result',\n    },\n    VacancyScheduled: {\n        scheduled: 'employer.vacancy.create.scheduledNotification',\n    },\n    VacancyPublished: {\n        published: 'vacancy.statInfo.publishedandsearchable',\n        closed: 'vacancy.statInfo.publish.closed',\n        untrusted: 'vacancy.statInfo.untrusted',\n        closedUntrusted: 'vacancy.statInfo.publish.closed.untrusted',\n        waiting: 'employer.vacancy.premoderate.status.wait',\n        needFix: 'employer.vacancy.premoderate.status.need_fix',\n    },\n    VacancyRestoredToArchive: {\n        restored: 'employer.vacancyesArchive.backToArchive.message.firstPart',\n        publish: 'employer.vacancyesArchive.backToArchive.message.secondPart',\n    },\n    VacancyBlacklistVacancyLimitError: {\n        limit: 'pageControls.Blacklist.Vacancy.limit',\n        clear: 'pageControls.Blacklist.clear',\n    },\n    VacancyBlacklistEmployerLimitError: {\n        limit: 'pageControls.Blacklist.Employer.limit',\n        clear: 'pageControls.Blacklist.clear',\n    },\n};\n\ninterface VacancyPublishedProps {\n    approved: boolean;\n    trusted: boolean;\n    status: { waiting: boolean; needFix: boolean };\n    type: string;\n}\n\nconst VacancyPublished: TranslatedComponent<VacancyPublishedProps> = ({ approved, trusted, status, type, trls }) => {\n    if (status.waiting) {\n        return <>{trls[TrlKeys.VacancyPublished.waiting]}</>;\n    }\n    if (status.needFix) {\n        return <>{trls[TrlKeys.VacancyPublished.needFix]}</>;\n    }\n    if (!approved && !trusted && type === 'closed') {\n        return <>{trls[TrlKeys.VacancyPublished.closedUntrusted]}</>;\n    }\n    if (!approved && !trusted) {\n        return <>{trls[TrlKeys.VacancyPublished.untrusted]}</>;\n    }\n    if (type === 'closed') {\n        return <>{trls[TrlKeys.VacancyPublished.closed]}</>;\n    }\n    return <>{trls[TrlKeys.VacancyPublished.published]}</>;\n};\n\nexport const vacancyPublished = {\n    Element: translation(VacancyPublished),\n    kind: 'ok',\n};\nexport const VACANCY_PUBLISHED = 'VACANCY_PUBLISHED';\n\ninterface VacancyRestoredToArchiveProps {\n    vacancyId: number;\n}\nconst VacancyRestoredToArchive: TranslatedComponent<VacancyRestoredToArchiveProps> = ({ trls, vacancyId }) => {\n    return (\n        <Fragment>\n            {trls[TrlKeys.VacancyRestoredToArchive.restored]}&nbsp;\n            <BlokoLink Element={Link} to={`/employer/vacancy/restore/${vacancyId}`}>\n                {trls[TrlKeys.VacancyRestoredToArchive.publish]}\n            </BlokoLink>\n        </Fragment>\n    );\n};\nexport const vacancyRestoredToArchive = {\n    Element: translation(VacancyRestoredToArchive),\n    kind: 'ok',\n};\nexport const VACANCY_RESTORED_TO_ARCHIVE = 'VACANCY_RESTORED_TO_ARCHIVE';\n\nconst VacancyBlacklistVacancyLimitError: TranslatedComponent = ({ trls }) => {\n    return (\n        <>\n            {trls[TrlKeys.VacancyBlacklistVacancyLimitError.limit]}&nbsp;\n            <BlokoLink Element={Link} to=\"/applicant/blacklist/vacancy\" target=\"_blank\">\n                {trls[TrlKeys.VacancyBlacklistVacancyLimitError.clear]}\n            </BlokoLink>\n        </>\n    );\n};\nexport const vacancyBlacklistVacancyLimitError = {\n    Element: translation(VacancyBlacklistVacancyLimitError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_BLACKLIST_VACANCY_LIMIT_ERROR = 'VACANCY_BLACKLIST_VACANCY_LIMIT_ERROR';\n\nconst VacancyBlacklistEmployerLimitError: TranslatedComponent = ({ trls }) => {\n    return (\n        <>\n            {trls[TrlKeys.VacancyBlacklistEmployerLimitError.limit]}&nbsp;\n            <BlokoLink Element={Link} to=\"/applicant/blacklist/employer\" target=\"_blank\">\n                {trls[TrlKeys.VacancyBlacklistEmployerLimitError.clear]}\n            </BlokoLink>\n        </>\n    );\n};\nexport const vacancyBlacklistEmployerLimitError = {\n    Element: translation(VacancyBlacklistEmployerLimitError),\n    kind: 'error',\n    autoClose: true,\n};\nexport const VACANCY_BLACKLIST_EMPLOYER_LIMIT_ERROR = 'VACANCY_BLACKLIST_EMPLOYER_LIMIT_ERROR';\n\ninterface VacancyErrorMessageProps {\n    id: ValueOf<typeof ErrorIds>;\n    name: string;\n}\nconst VacancyErrorMessage: TranslatedComponent<VacancyErrorMessageProps> = ({ id, name, trls }) => {\n    return <>{format(trls[TrlKeys.VacancyErrorMessage[id]], { '{0}': name })}</>;\n};\n\nexport const vacancyErrorMessage = {\n    Element: translation(VacancyErrorMessage),\n    type: 'error',\n};\nexport const VACANCY_ERROR_MESSAGE = 'VACANCY_ERROR_MESSAGE';\n\nconst VacancyScheduled: TranslatedComponent = ({ trls }) => {\n    return <>{trls[TrlKeys.VacancyScheduled.scheduled]}</>;\n};\nexport const vacancyScheduled = {\n    Element: translation(VacancyScheduled),\n    kind: 'ok',\n    autoClose: true,\n};\nexport const VACANCY_SCHEDULED = 'VACANCY_SCHEDULED';\n\ninterface VacancyNotificationsProps {\n    dispatchModal: () => void;\n}\nconst VacancyNotifications: FC<VacancyNotificationsProps> = ({ dispatchModal }) => {\n    const isNewVacancy = useSelector((state) => state.isNewVacancy);\n    const location = useSelector((state) => state.router.location);\n    const vacancyMessages = useSelector((state) => state.vacancyMessages);\n    const vacancyView = useSelector((state) => state.vacancyView);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // ignore change a tab in location by state on vacancy page\n        if (location.state && Object.hasOwn(location.state, 'tab')) {\n            return;\n        }\n\n        const { name, metallicId: metallic } = vacancyView;\n\n        vacancyMessages.forEach(({ id, type }) => {\n            if (id === SuccessIds.A) {\n                dispatch(\n                    addNotification(ARCHIVE_VACANCY_SUCCESS, {\n                        count: 1,\n                        name,\n                        daysUntilReadOnly: parseInt(location.query.adays, 10),\n                    })\n                );\n                if (location.query.feedbackSent) {\n                    dispatch(addNotification(ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS));\n                }\n            } else if (id === SuccessIds.VUS || id === SuccessIds.VUSP || id === SuccessIds.VUP) {\n                dispatch(addNotification(VACANCY_UPGRADE_SUCCESS, { name, metallic }));\n            } else if (id === SuccessIds.E) {\n                dispatch(addNotification(VACANCY_UPDATE_SUCCESS, { count: 1, name }));\n            } else if (id === SuccessIds.APE) {\n                dispatch(addNotification(VACANCY_AUTO_PROLONGATION_SUCCESS, { name, action: 'enable' }));\n            } else if (id === SuccessIds.APC) {\n                dispatch(addNotification(VACANCY_AUTO_PROLONGATION_SUCCESS, { name, action: 'disable' }));\n            } else if (id === ErrorIds.EE27) {\n                dispatch(addNotification(VACANCY_AUTO_PROLONGATION_ERROR, { name, action: 'enable' }));\n            } else if (id === ErrorIds.EE28) {\n                dispatch(addNotification(VACANCY_AUTO_PROLONGATION_ERROR, { name, action: 'disable' }));\n            } else if (id === SuccessIds.VOE) {\n                dispatch(addNotification(TOGGLE_VACANCY_OPTION_SUCCESS, { vacancyName: name, action: 'enable' }));\n            } else if (id === SuccessIds.VOD) {\n                dispatch(addNotification(TOGGLE_VACANCY_OPTION_SUCCESS, { vacancyName: name, action: 'disable' }));\n            } else if (type === VacancyMessageTypes.Error) {\n                dispatch(addNotification(VACANCY_ERROR_MESSAGE, { id, name }));\n            }\n        });\n\n        if (isNewVacancy) {\n            dispatch(\n                addNotification(VACANCY_PUBLISHED, {\n                    approved: vacancyView.approved,\n                    trusted: vacancyView.company['@trusted'],\n                    status: vacancyView.status,\n                    type: vacancyView.type,\n                })\n            );\n        }\n\n        if (location.query.makeVacancyVisible === 'true') {\n            dispatch(addNotification(VACANCY_RESTORED_TO_ARCHIVE, { vacancyId: vacancyView.vacancyId }));\n        }\n\n        if (location.query.successScheduled === 'true') {\n            dispatch(addNotification(VACANCY_SCHEDULED));\n        }\n    }, [dispatch, dispatchModal, isNewVacancy, location, vacancyMessages, vacancyView]);\n\n    return null;\n};\n\nexport default VacancyNotifications;\n","import PropTypes from 'prop-types';\n\nimport Button, { ButtonKind, ButtonAppearance, ButtonScale } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\n\nimport VacancyActionResponse, { VacancyActionResponseKind } from 'lux/components/VacancyView/VacancyActionResponse';\nimport translation from 'lux/components/translation';\n\nconst VacancyViewsCount = ({ trls, removeNotification }) => {\n    return (\n        <>\n            <div>{trls[VacancyViewsCount.trls.text]}</div>\n            <NotificationFooter>\n                <VacancyActionResponse\n                    responseButtonProps={{\n                        kind: ButtonKind.Inversed,\n                        appearance: ButtonAppearance.Outlined,\n                        scale: ButtonScale.Small,\n                    }}\n                    kind={VacancyActionResponseKind.Notification}\n                    isSecondary\n                />\n                <FormSpacer />\n                <Button\n                    kind={ButtonKind.Inversed}\n                    appearance={ButtonAppearance.Outlined}\n                    scale={ButtonScale.Small}\n                    onClick={() => {\n                        removeNotification();\n                    }}\n                >\n                    {trls[VacancyViewsCount.trls.close]}\n                </Button>\n            </NotificationFooter>\n        </>\n    );\n};\n\nVacancyViewsCount.trls = {\n    close: 'vacancyViewsCount.notice.close',\n    text: 'vacancyViewsCount.notice.text',\n};\n\nVacancyViewsCount.propTypes = {\n    trls: PropTypes.object,\n    removeNotification: PropTypes.func,\n};\n\nexport const vacancyViewsCount = {\n    Element: translation(VacancyViewsCount),\n    kind: 'message',\n    autoClose: false,\n};\nexport const VACANCY_VIEW_COUNT = 'VACANCY_VIEW_COUNT';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst LinkQuestionnaire = ({ trls }) => trls[LinkQuestionnaire.trls.message];\nLinkQuestionnaire.propTypes = { trls: PropTypes.object };\nLinkQuestionnaire.trls = { message: 'employer.videoInterview.linkQuestionnaire' };\nconst linkQuestionnaire = {\n    Element: translation(LinkQuestionnaire),\n    kind: 'ok',\n    autoClose: true,\n};\nconst LINK_QUESTIONNAIRE = 'linkQuestionnaire';\n\nconst UnlinkQuestionnaire = ({ trls }) => trls[UnlinkQuestionnaire.trls.message];\nUnlinkQuestionnaire.propTypes = { trls: PropTypes.object };\nUnlinkQuestionnaire.trls = { message: 'employer.videoInterview.unlinkQuestionnaire' };\nconst unlinkQuestionnaire = {\n    Element: translation(UnlinkQuestionnaire),\n    kind: 'ok',\n    autoClose: true,\n};\nconst UNLINK_QUESTIONNAIRE = 'unlinkQuestionnaire';\n\nconst DeleteQuestionnaire = ({ trls }) => trls[DeleteQuestionnaire.trls.message];\nDeleteQuestionnaire.propTypes = { trls: PropTypes.object };\nDeleteQuestionnaire.trls = { message: 'employer.videoInterview.deleteQuestionnaire' };\nconst deleteQuestionnaire = {\n    Element: translation(DeleteQuestionnaire),\n    kind: 'ok',\n    autoClose: true,\n};\nconst DELETE_QUESTIONNAIRE = 'deleteQuestionnaire';\n\nconst EditQuestionnaire = ({ trls }) => trls[EditQuestionnaire.trls.message];\nEditQuestionnaire.propTypes = { trls: PropTypes.object };\nEditQuestionnaire.trls = { message: 'employer.videoInterview.editQuestionnaire' };\nconst editQuestionnaire = {\n    Element: translation(EditQuestionnaire),\n    kind: 'ok',\n    autoClose: true,\n};\nconst EDIT_QUESTIONNAIRE = 'editQuestionnaire';\n\nconst AddQuestionnaire = ({ trls }) => trls[AddQuestionnaire.trls.message];\nAddQuestionnaire.propTypes = { trls: PropTypes.object };\nAddQuestionnaire.trls = { message: 'employer.videoInterview.addQuestionnaire' };\nconst addQuestionnaire = {\n    Element: translation(AddQuestionnaire),\n    kind: 'ok',\n    autoClose: true,\n};\nconst ADD_QUESTIONNAIRE = 'addQuestionnaire';\n\nexport const VIDEO_INTERVIEW_NOTIFICATIONS = {\n    [EDIT_QUESTIONNAIRE]: editQuestionnaire,\n    [LINK_QUESTIONNAIRE]: linkQuestionnaire,\n    [UNLINK_QUESTIONNAIRE]: unlinkQuestionnaire,\n    [DELETE_QUESTIONNAIRE]: deleteQuestionnaire,\n    [ADD_QUESTIONNAIRE]: addQuestionnaire,\n};\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\ninterface VideoInterviewSearchModalEnableProps {\n    fullName: string;\n}\n\nconst TrlKeys = {\n    candidate: 'resume.online.interview.candidate',\n    success: 'resume.online.interview.invite.success',\n};\n\nconst VideoInterviewSearchModalEnable: TranslatedComponent<VideoInterviewSearchModalEnableProps> = ({\n    fullName,\n    trls,\n}) => <>{`${fullName || trls[TrlKeys.candidate]} ${trls[TrlKeys.success]}`}</>;\n\nexport const videoInterviewSearchModalEnable = {\n    Element: translation(VideoInterviewSearchModalEnable),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\n\nexport const VIDEO_INTERVIEW_SEARCH_MODAL_ENABLE = 'VIDEO_INTERVIEW_SEARCH_MODAL_ENABLE';\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst LoadError = ({ trls }) => trls[LoadError.trls.errorLoading];\n\nLoadError.trls = {\n    errorLoading: 'employer.vrVacancies.report.error.loading',\n};\n\nLoadError.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const vrVacancyReportError = {\n    Element: translation(LoadError),\n    kind: 'error',\n    autoClose: true,\n};\n\nconst EmptyError = ({ trls }) => trls[EmptyError.trls.errorEmpty];\n\nEmptyError.trls = {\n    errorEmpty: 'employer.vrVacancies.report.error.empty',\n};\n\nEmptyError.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const vrVacancyEmptyError = {\n    Element: translation(EmptyError),\n    kind: 'error',\n    autoClose: true,\n};\n\nexport const VR_REPORT_ERROR = 'VR_REPORT_ERROR';\nexport const VR_REPORT_EMPTY = 'VR_REPORT_EMPTY';\n","export const FAVORITE_SUCCESS = 'FAVORITE_SUCCESS';\nexport const FAVORITE_ERROR = 'FAVORITE_ERROR';\n","import { FC, createContext, MutableRefObject, PropsWithChildren, useContext, useRef } from 'react';\n\nexport const NovaFilterUpdateContext = createContext<MutableRefObject<AbortController | null>>({ current: null });\n\ntype AbortAndGetUpdatedSignalFunction = () => AbortSignal;\n\nexport const useUpdateAbortController = (): AbortAndGetUpdatedSignalFunction => {\n    const abortControllerRef = useContext(NovaFilterUpdateContext);\n\n    return () => {\n        abortControllerRef.current?.abort();\n\n        const abortController = new AbortController();\n        abortControllerRef.current = abortController;\n\n        return abortController.signal;\n    };\n};\n\nconst NovaFilterUpdateContextProvider: FC<PropsWithChildren> = ({ children }) => {\n    const cancelNovaFilterUpdateRef = useRef(null);\n\n    return (\n        <NovaFilterUpdateContext.Provider value={cancelNovaFilterUpdateRef}>\n            {children}\n        </NovaFilterUpdateContext.Provider>\n    );\n};\n\nexport default NovaFilterUpdateContextProvider;\n","enum SearchType {\n    Resume = 'resume',\n    Vacancy = 'vacancy',\n    VacancyMap = 'vacancyMap',\n}\n\nexport default SearchType;\n","import { Entries, Primitive } from 'type-fest';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport { NOVAFILTERS_EXCLUDE_HIDDEN_INPUT, SORTS_WITH_DEFAULT_VALUE } from 'lux/components/NovaFilters/novaFilterUtils';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport NovaFilters, { NovaFilterKey } from 'lux/models/novaFilters';\nimport { LabelOption, SearchPeriodOption } from 'lux/models/resumeSearchCriteria';\nimport { CriteriaKey, OrderByOption } from 'lux/models/search/searchCriteria.types';\nimport { WITH_TOP_FILTER_CATALOG } from 'lux/models/topFilterCatalog';\n\nimport {\n    GetSearchParamsArgs,\n    GetSearchParamsFromFilterKeysType,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/types';\n\nconst typicalFilters = [\n    CriteriaKey.Area,\n    CriteriaKey.Citizenship,\n    CriteriaKey.District,\n    CriteriaKey.DriverLicenseTypes,\n    CriteriaKey.Employment,\n    CriteriaKey.ExcludedText,\n    CriteriaKey.Experience,\n    CriteriaKey.Education,\n    CriteriaKey.EducationLevel,\n    CriteriaKey.FilterExpIndustry,\n    CriteriaKey.FilterExpPeriodForIndustry,\n    CriteriaKey.University,\n    // industry and subIndustry\n    CriteriaKey.Industry,\n    CriteriaKey.JobSearchStatus,\n    CriteriaKey.Label,\n    CriteriaKey.Language,\n    CriteriaKey.VerifiedLanguages,\n    CriteriaKey.Metro,\n    CriteriaKey.PartTime,\n    CriteriaKey.ProfessionalRole,\n    CriteriaKey.Relocation,\n    CriteriaKey.Resume,\n    CriteriaKey.Schedule,\n    CriteriaKey.SearchField,\n    CriteriaKey.Skill,\n    CriteriaKey.VerifiedSkills,\n    CriteriaKey.VacancyId,\n    CriteriaKey.WorkTicket,\n    CriteriaKey.AcceptTemporary,\n] as const;\n\nexport type SharedSearchParams = GetSearchParamsFromFilterKeysType<(typeof typicalFilters)[number]> & {\n    [CriteriaKey.CurrencyCode]: CurrencyType;\n    [CriteriaKey.Text]: string | string[];\n    [CriteriaKey.SearchPeriod]?: null | SearchPeriodOption;\n    [CriteriaKey.OrderBy]?: OrderByOption;\n    ['L_save_area']?: boolean;\n};\n\ntype UntypedSearchParams = Record<string, Primitive | Primitive[]>;\n\nconst controlledLabels = [LabelOption.OnlyWithSalary, LabelOption.OnlyWithAge, LabelOption.OnlyWithGender];\n\nconst getSharedSearchParams = ({\n    criteriaCurrencyCode,\n    criteriaTextUpdated,\n    currencies,\n    router,\n    resumeSearchResult,\n    searchCatalogRedirect,\n    searchClusters,\n    searchType,\n    vacancySearchResult,\n}: GetSearchParamsArgs): SharedSearchParams => {\n    const searchParams = {} as SharedSearchParams;\n    const untypedSearchParams = {} as UntypedSearchParams;\n\n    typicalFilters.forEach(<Key extends keyof NovaFilters & keyof SharedSearchParams>(filter: Key) => {\n        if (searchClusters[filter]) {\n            const filterFromClusters = searchClusters[filter];\n            searchParams[filter] = filterFromClusters.selectedValues as SharedSearchParams[Key];\n        }\n    });\n\n    if (searchClusters[NovaFilterKey.Label]) {\n        const labels = searchClusters[NovaFilterKey.Label].selectedValues as string[];\n        searchParams.label = labels.filter((item) => !controlledLabels.includes(item)) as LabelOption[];\n    }\n\n    const { default: currencyCodeDefault } = currencies;\n    if (currencyCodeDefault !== criteriaCurrencyCode) {\n        searchParams[CriteriaKey.CurrencyCode] = criteriaCurrencyCode;\n    }\n\n    const { pathname, search } = router.location;\n    const urlParams = urlParser(pathname + search).params;\n\n    if (searchCatalogRedirect || urlParams[CriteriaKey.Text]) {\n        searchParams.text = criteriaTextUpdated;\n    }\n\n    // proxy other get params (like \"hhtmFrom\")\n    Object.entries(urlParams).forEach(([key, values]) => {\n        if (key !== WITH_TOP_FILTER_CATALOG && !NOVAFILTERS_EXCLUDE_HIDDEN_INPUT.includes(key)) {\n            untypedSearchParams[key] = values;\n        }\n    });\n\n    const criteria = searchType === SearchType.Resume ? resumeSearchResult.criteria : vacancySearchResult.criteria;\n\n    // proxy sorts without default values\n    const entries = Object.entries(SORTS_WITH_DEFAULT_VALUE) as Entries<typeof SORTS_WITH_DEFAULT_VALUE>;\n    entries.forEach(([key]) => {\n        if (!urlParams[key] && criteria?.[key]) {\n            untypedSearchParams[key] = criteria[key];\n        }\n    });\n\n    return {\n        ...untypedSearchParams,\n        ...searchParams,\n    };\n};\n\nexport default getSharedSearchParams;\n","import { Entries } from 'type-fest';\n\nimport { rangeKeys } from 'lux/components/NovaFilters/novaFilterUtils';\nimport { NovaFilterKey } from 'lux/models/novaFilters';\nimport { Gender } from 'lux/models/resume/resumeCommon.types';\nimport { LabelOption } from 'lux/models/resumeSearchCriteria';\nimport { ExpPeriodOption, LogicOption, PosOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport getSharedSearchParams, {\n    SharedSearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/shared';\nimport { GetSearchParamsArgs } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/types';\n\nexport interface ResumeSearchParams extends SharedSearchParams {\n    [CriteriaKey.AgeFrom]: string | number | null;\n    [CriteriaKey.AgeTo]: string | number | null;\n    [CriteriaKey.SalaryFrom]: string | number | null;\n    [CriteriaKey.SalaryTo]: string | number | null;\n    [CriteriaKey.ExpCompanySize]?: string[];\n    [CriteriaKey.Gender]: Gender;\n    [CriteriaKey.Logic]: LogicOption;\n    [CriteriaKey.Pos]: PosOption;\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption;\n}\n\nconst getResumeSearchParams = (args: GetSearchParamsArgs): ResumeSearchParams => {\n    const searchParams = getSharedSearchParams(args) as ResumeSearchParams;\n    const { searchCatalogRedirect, searchClusters } = args;\n\n    // range values\n    [NovaFilterKey.Age, NovaFilterKey.Salary].forEach((filter) => {\n        if (!searchClusters[filter]) {\n            return;\n        }\n        const { selectedValues } = searchClusters[filter];\n        rangeKeys.forEach((key) => {\n            const value = selectedValues[key];\n            if (value) {\n                searchParams[`${filter}_${key}`] = value;\n            }\n        });\n        if (selectedValues.onlyWith) {\n            const onlyWithStr = filter === NovaFilterKey.Age ? LabelOption.OnlyWithAge : LabelOption.OnlyWithSalary;\n            searchParams[CriteriaKey.Label] = [...(searchParams[CriteriaKey.Label] || []), onlyWithStr];\n        }\n    });\n\n    if (searchClusters[NovaFilterKey.Gender]) {\n        const { selectedValues } = searchClusters[NovaFilterKey.Gender];\n        searchParams[CriteriaKey.Gender] = selectedValues.value;\n        if (selectedValues.onlyWith) {\n            searchParams[CriteriaKey.Label] = [...(searchParams[CriteriaKey.Label] || []), LabelOption.OnlyWithGender];\n        }\n    }\n\n    if (searchClusters[NovaFilterKey.Etc]) {\n        const { selectedValues } = searchClusters[NovaFilterKey.Etc];\n        const entries = Object.entries(selectedValues) as Entries<typeof selectedValues>;\n        entries.forEach(([key, value]) => {\n            searchParams[key] = value;\n        });\n    }\n\n    // if we have metro and district, but don't have one region\n    // need delete metro and district\n    if (searchParams[CriteriaKey.Area]?.length !== 1) {\n        searchParams[CriteriaKey.Metro] = [];\n        searchParams[CriteriaKey.District] = [];\n    }\n\n    if (searchCatalogRedirect) {\n        searchParams[CriteriaKey.Logic] = LogicOption.Normal;\n        searchParams[CriteriaKey.Pos] = PosOption.FullText;\n        searchParams[CriteriaKey.ExpPeriod] = ExpPeriodOption.AllTime;\n    }\n\n    return searchParams;\n};\n\nexport default getResumeSearchParams;\n","import { NovaFilterSetting } from 'lux/components/NovaFilters/novaFilterUtils';\nimport NovaFilters, { NovaFilterKey } from 'lux/models/novaFilters';\nimport { LabelOption } from 'lux/models/resumeSearchCriteria';\nimport { CriteriaKey, OrderByOption } from 'lux/models/search/searchCriteria.types';\nimport { SearchPeriodOption } from 'lux/models/vacancySearchCriteria';\n\nimport getSharedSearchParams, {\n    SharedSearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/shared';\nimport { GetSearchParamsArgs } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/types';\n\nexport interface VacancySearchParams extends SharedSearchParams {\n    [NovaFilterSetting.EnableSnippets]: [boolean];\n    [CriteriaKey.EmployerId]: NovaFilters[typeof NovaFilterKey.Company]['selectedValues'];\n    [NovaFilterSetting.ForceFiltersSaving]?: 'true';\n    [CriteriaKey.Salary]?: string;\n    [LabelOption.OnlyWithSalary]?: 'true';\n}\n\nconst getVacancySearchParams = (args: GetSearchParamsArgs): VacancySearchParams => {\n    const searchParams = getSharedSearchParams(args) as VacancySearchParams;\n    const { enableVacancySnippets, novaSorts, searchClusters, vacancySearchResult } = args;\n\n    searchParams[NovaFilterSetting.EnableSnippets] = [enableVacancySnippets];\n\n    if (searchClusters[NovaFilterKey.Company]) {\n        searchParams[CriteriaKey.EmployerId] = searchClusters[NovaFilterKey.Company].selectedValues;\n    }\n\n    if (vacancySearchResult?.enableSimilarSavedSearch) {\n        searchParams[NovaFilterSetting.ForceFiltersSaving] = 'true';\n    }\n\n    if (searchClusters[NovaFilterKey.Compensation]) {\n        const { salary, onlyWithSalary } = searchClusters[NovaFilterKey.Compensation].selectedValues;\n        if (salary) {\n            searchParams[CriteriaKey.Salary] = salary;\n        }\n        if (onlyWithSalary) {\n            searchParams[LabelOption.OnlyWithSalary] = 'true';\n        }\n    }\n\n    if (searchParams[CriteriaKey.Area] && searchClusters[NovaFilterKey.Neighbours]) {\n        searchParams.area = [\n            ...(searchParams[CriteriaKey.Area] ?? []),\n            ...searchClusters[NovaFilterKey.Neighbours].selectedValues.map(Number),\n        ];\n    }\n\n    // if we have metro and district, but don't have one region (after add Neighbours)\n    // need delete metro and district\n    if (searchParams[CriteriaKey.Area]?.length !== 1) {\n        searchParams[CriteriaKey.Metro] = [];\n        searchParams[CriteriaKey.District] = [];\n    }\n\n    // sorts overrides\n    searchParams[CriteriaKey.OrderBy] = novaSorts.orderBy !== OrderByOption.Relevance ? novaSorts.orderBy : undefined;\n    searchParams[CriteriaKey.SearchPeriod] =\n        novaSorts.searchPeriod !== SearchPeriodOption.AllTime\n            ? (novaSorts.searchPeriod as SearchPeriodOption)\n            : undefined;\n\n    return searchParams;\n};\n\nexport default getVacancySearchParams;\n","import { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport { GetSearchParamsArgs } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/types';\nimport getVacancySearchParams, {\n    VacancySearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancy';\n\nexport interface VacancyMapSearchParams extends VacancySearchParams {\n    [CriteriaKey.BottomLeftLat]: string;\n    [CriteriaKey.BottomLeftLng]: string;\n    [CriteriaKey.GeocodeType]: string;\n    [CriteriaKey.Height]: string;\n    [CriteriaKey.ItemsOnPage]: string;\n    [CriteriaKey.Precision]: string;\n    [CriteriaKey.TopRightLat]: string;\n    [CriteriaKey.TopRightLng]: string;\n    [CriteriaKey.Width]: string;\n}\n\nconst getVacancyMapSearchParams = (args: GetSearchParamsArgs): VacancyMapSearchParams => {\n    const searchParams = getVacancySearchParams(args) as VacancyMapSearchParams;\n    return searchParams;\n};\n\nexport default getVacancyMapSearchParams;\n","import SearchType from 'lux/components/NovaFilters/SearchType';\n\nimport getResumeSearchParams, {\n    ResumeSearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/resume';\nimport { GetSearchParamsArgs } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/types';\nimport getVacancySearchParams, {\n    VacancySearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancy';\nimport getVacancyMapSearchParams, {\n    VacancyMapSearchParams,\n} from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancyMap';\n\nconst getSearchParams = (\n    props: GetSearchParamsArgs\n): VacancySearchParams | ResumeSearchParams | VacancyMapSearchParams => {\n    const { searchType } = props;\n\n    let searchParams = {} as VacancySearchParams | ResumeSearchParams | VacancyMapSearchParams;\n    if (searchType === SearchType.Resume) {\n        searchParams = getResumeSearchParams(props);\n    } else if (searchType === SearchType.Vacancy) {\n        searchParams = getVacancySearchParams(props);\n    } else if (searchType === SearchType.VacancyMap) {\n        searchParams = getVacancyMapSearchParams(props);\n    }\n\n    return searchParams;\n};\n\nexport default getSearchParams;\n","import { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport Debug from 'HHC/Debug';\nimport NovaFilters, { NovaFilterKey } from 'lux/models/novaFilters';\nimport {\n    setOrderArea,\n    setOrderDistrict,\n    setOrderIndustry,\n    setOrderMetro,\n    setOrderProfRole,\n    setOrderSubIndustry,\n} from 'lux/models/searchClustersOrder';\nimport { Vacancy, BBox, GeoCluster } from 'lux/models/searchMapResponse';\nimport { replaceVacancySearchResult, VacancySearchResult } from 'lux/models/vacancySearch/vacancySearchResult';\nimport fetcher from 'lux/modules/fetcher';\n\nconst URL = '/shards/vacancymap/searchvacancymap';\n\ninterface Response {\n    clusters: NovaFilters;\n    searchClustersOrder: Record<NovaFilterKey, string[]>;\n    found: number;\n    geoClusters: GeoCluster[];\n    mapInit: { bbox: BBox };\n    precision: number;\n    query: string;\n    sendAnalytics: boolean;\n    vacancySearchResult: VacancySearchResult;\n    vacancies: Vacancy[];\n    mapHasGeoClusters: boolean;\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        [URL]: {\n            queryParams: unknown;\n            response: Response;\n        };\n    }\n}\n\nconst searchClustersAction = makeSetStoreField('searchClusters');\nconst setShowSubscriptionButtonAction = makeSetStoreField('showSubscriptionButton');\nconst searchMapResponseAction = makeSetStoreField('searchMapResponse');\n\ninterface FetchVacanciesProps {\n    dispatch: Dispatch<unknown>;\n    query: string;\n    abortSignal?: AbortSignal;\n}\n\nconst fetchMapVacancies =\n    ({ dispatch, query, abortSignal }: FetchVacanciesProps) =>\n    async (): Promise<void> => {\n        let response;\n        try {\n            response = await fetcher.get<typeof URL>(`${URL}?${query}`, { signal: abortSignal, params: undefined });\n        } catch (error) {\n            Debug.log('error', error);\n            return;\n        }\n\n        const { clusters, searchClustersOrder, vacancySearchResult } = response;\n\n        window.dispatchEvent(new CustomEvent('HH-VacancySearchMapFilter-Changed', { detail: response }));\n\n        const actions: AnyAction[] = [\n            setOrderArea(searchClustersOrder?.[NovaFilterKey.Area] || []),\n            setOrderDistrict(searchClustersOrder?.[NovaFilterKey.District] || []),\n            setOrderMetro(searchClustersOrder?.[NovaFilterKey.Metro] || []),\n            setOrderProfRole(searchClustersOrder?.[NovaFilterKey.ProfessionalRole] || []),\n            setOrderIndustry(searchClustersOrder?.[NovaFilterKey.Industry] || []),\n            setOrderSubIndustry(searchClustersOrder?.[NovaFilterKey.SubIndustry] || []),\n            searchClustersAction(clusters),\n            replaceVacancySearchResult(vacancySearchResult),\n            setShowSubscriptionButtonAction(true),\n            searchMapResponseAction({\n                vacanciesFromResponse: response.vacancies,\n                geoClusters: response.geoClusters,\n                mapHasGeoClusters: response.mapHasGeoClusters,\n                query: response.vacancySearchResult.queries.map || '',\n                clusters: response.clusters,\n                vacancySearchResult,\n                sendResponse: true,\n            }),\n        ];\n        dispatch(actions);\n    };\n\nexport default fetchMapVacancies;\n","import { replace } from 'connected-react-router';\nimport { Dispatch, AnyAction } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport ModalHelper from 'bloko/common/modalHelper';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { Banner } from 'lux/models/banners/banners';\nimport { ResumeCommentsState } from 'lux/models/employer/resume/commentsByUser';\nimport { ResumeCommentState } from 'lux/models/employer/resume/resumeComments';\nimport { updateMicroFrontends, MicroFrontends } from 'lux/models/microFrontends';\nimport NovaFilters, { NovaFilterKey } from 'lux/models/novaFilters';\nimport { ResumeId } from 'lux/models/resume/resume.types';\nimport { VerifiedSkills } from 'lux/models/resume/resumeVerifiedSkills.types';\nimport { ResumesRelevantExperience, updateResumesRelevantExperience } from 'lux/models/resumesRelevantExperience';\nimport { ResumeSearchResult } from 'lux/models/search/resume/resumeSearchResult';\nimport {\n    setOrderArea,\n    setOrderProfRole,\n    setOrderSkill,\n    setOrderDriverLicenceTypes,\n    setOrderLabel,\n} from 'lux/models/searchClustersOrder';\nimport fetcher from 'lux/modules/fetcher';\n\nconst resumeSearchResultAction = makeSetStoreField('resumeSearchResult');\nconst searchClustersAction = makeSetStoreField('searchClusters');\nconst bannersAction = makeSetStoreField('banners');\nconst searchCountsAction = makeSetStoreField('searchCounts');\nconst resumeCommentsAction = makeSetStoreField('resumeComments');\nconst commentsByUserIdAction = makeSetStoreField('commentsByUserId');\nconst resumeVerifiedSkillsAction = makeSetStoreField('resumeVerifiedSkills');\n\ninterface SearchResumeResponse {\n    searchClusters: NovaFilters;\n    resumeSearchResult: ResumeSearchResult;\n    banners: Record<string, Banner[]>;\n    searchClustersOrder: Record<NovaFilterKey, string[]>;\n    resumeComments: ResumeCommentState;\n    commentsByUserId: ResumeCommentsState;\n    microFrontends?: MicroFrontends;\n    resumesRelevantExperience?: ResumesRelevantExperience;\n    resumeVerifiedSkills: Record<ResumeId, VerifiedSkills>;\n}\n\nconst RESUME_SEARCH_URL = '/shards/resume/search';\n\ndeclare global {\n    interface FetcherGetApi {\n        [RESUME_SEARCH_URL]: {\n            response: SearchResumeResponse;\n            queryParams: undefined;\n        };\n    }\n}\n\ninterface Params {\n    dispatch: Dispatch;\n    query: string;\n    abortSignal?: AbortSignal;\n}\n\ntype FetchResume = () => Promise<{ totalResults: number; redirect?: string }>;\n\nconst getFetchResume =\n    ({ dispatch, query, abortSignal }: Params): FetchResume =>\n    async () => {\n        let response;\n        try {\n            response = await fetcher.get(`${RESUME_SEARCH_URL}?${query}` as typeof RESUME_SEARCH_URL, {\n                signal: abortSignal,\n                params: undefined,\n            });\n        } catch (error) {\n            return Promise.reject(error);\n        }\n\n        // try to stable resume search with default cluster position\n        ModalHelper.disableScroll();\n\n        // get search data\n        const {\n            searchClusters,\n            resumeSearchResult,\n            banners,\n            searchClustersOrder,\n            resumeComments,\n            commentsByUserId,\n            microFrontends,\n            resumesRelevantExperience,\n            resumeVerifiedSkills,\n        } = response;\n\n        // update url\n        const { pathname } = location;\n        const parsedUrl = urlParser(`${pathname}?${query}`);\n        dispatch(replace(parsedUrl.href, undefined, { cancelFetchingData: true }));\n\n        // send search data\n        const actions: AnyAction[] = [\n            setOrderArea(searchClustersOrder?.[NovaFilterKey.Area] || []),\n            setOrderProfRole(searchClustersOrder?.[NovaFilterKey.ProfessionalRole] || []),\n            setOrderSkill(searchClustersOrder?.[NovaFilterKey.Skill] || []),\n            setOrderDriverLicenceTypes(searchClustersOrder?.[NovaFilterKey.DriverLicenseTypes] || []),\n            setOrderLabel(searchClustersOrder?.[NovaFilterKey.Label] || []),\n            searchClustersAction(searchClusters),\n            resumeSearchResultAction(resumeSearchResult),\n            bannersAction(banners),\n            resumeCommentsAction(resumeComments),\n            commentsByUserIdAction(commentsByUserId),\n            searchCountsAction({ isLoad: false, value: 0 }), // delete after use nova controls on resume search\n            resumeVerifiedSkillsAction(resumeVerifiedSkills),\n        ];\n        if (microFrontends) {\n            actions.push(updateMicroFrontends(microFrontends));\n        }\n        if (resumesRelevantExperience) {\n            actions.push(updateResumesRelevantExperience(resumesRelevantExperience));\n        }\n        dispatch(actions);\n\n        return { totalResults: resumeSearchResult.stats.totalUngroupedResults };\n    };\n\nexport default getFetchResume;\n","import { replace } from 'connected-react-router';\nimport { Dispatch } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { AdsSearchParams } from 'lux/models/banners/adsSearchParams';\nimport { Banner } from 'lux/models/banners/banners';\nimport { ChatBot } from 'lux/models/chatBot';\nimport NovaFilters, { NovaFilterKey } from 'lux/models/novaFilters';\nimport { SearchCatalog } from 'lux/models/searchCatalog';\nimport {\n    setOrderArea,\n    setOrderDistrict,\n    setOrderIndustry,\n    setOrderMetro,\n    setOrderProfRole,\n    setOrderSubIndustry,\n} from 'lux/models/searchClustersOrder';\nimport { replaceVacancySearchResult, VacancySearchResult } from 'lux/models/vacancySearch/vacancySearchResult';\nimport fetcher from 'lux/modules/fetcher';\nimport UserLabel from 'lux/modules/userLabels';\n\nconst searchCatalogAction = makeSetStoreField('searchCatalog');\nconst searchClustersAction = makeSetStoreField('searchClusters');\nconst bannersAction = makeSetStoreField('banners');\nconst userLabelsForVacanciesAction = makeSetStoreField('userLabelsForVacancies');\nconst adsSearchParamsAction = makeSetStoreField('adsSearchParams');\nconst chatBotAction = makeSetStoreField('chatBot');\nconst infoTipAction = makeSetStoreField('infoTip');\n\nconst VACANCY_SEARCH_URL = '/shards/vacancy/search';\n\ninterface SearchVacanciesResponse {\n    searchClustersOrder: Record<NovaFilterKey, string[]>;\n    banners: Record<string, Banner[]>;\n    chatBot: ChatBot;\n    redirectCatalogPath?: string;\n    searchCatalog: SearchCatalog | null;\n    searchClusters: NovaFilters;\n    vacancySearchResult: VacancySearchResult;\n    userLabelsForVacancies: Record<string, UserLabel[]>;\n    adsSearchParams: AdsSearchParams;\n    infoTip: { name: string };\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        [VACANCY_SEARCH_URL]: {\n            response: SearchVacanciesResponse;\n            queryParams: undefined;\n        };\n    }\n}\n\ninterface Params {\n    dispatch: Dispatch;\n    query: string;\n    abortSignal?: AbortSignal;\n}\n\ntype FetchVacancies = () => Promise<{ totalResults: number; redirect?: string }>;\n\nconst getFetchVacancies =\n    ({ dispatch, query, abortSignal }: Params): FetchVacancies =>\n    async () => {\n        let response;\n        try {\n            response = await fetcher.get(`${VACANCY_SEARCH_URL}?${query}` as typeof VACANCY_SEARCH_URL, {\n                signal: abortSignal,\n                params: undefined,\n            });\n        } catch (error) {\n            return Promise.reject(error);\n        }\n\n        // get search data\n        const {\n            searchCatalog,\n            searchClusters,\n            vacancySearchResult,\n            userLabelsForVacancies,\n            banners,\n            adsSearchParams,\n            redirectCatalogPath,\n            searchClustersOrder,\n            chatBot,\n            infoTip,\n        } = response;\n\n        // custom catalog redirect\n        if (redirectCatalogPath) {\n            return { totalResults: 0, redirect: redirectCatalogPath };\n        }\n\n        // update url\n        const { pathname } = location;\n        const parsedUrl = urlParser(`${pathname}?${query}`);\n        dispatch(replace(parsedUrl.href, undefined, { cancelFetchingData: true }));\n\n        // send search data\n        const actions = [\n            setOrderArea(searchClustersOrder?.[NovaFilterKey.Area] || []),\n            setOrderDistrict(searchClustersOrder?.[NovaFilterKey.District] || []),\n            setOrderMetro(searchClustersOrder?.[NovaFilterKey.Metro] || []),\n            setOrderProfRole(searchClustersOrder?.[NovaFilterKey.ProfessionalRole] || []),\n            setOrderIndustry(searchClustersOrder?.[NovaFilterKey.Industry] || []),\n            setOrderSubIndustry(searchClustersOrder?.[NovaFilterKey.SubIndustry] || []),\n            searchCatalogAction(searchCatalog),\n            searchClustersAction(searchClusters),\n            replaceVacancySearchResult(vacancySearchResult),\n            bannersAction(banners),\n            userLabelsForVacanciesAction(userLabelsForVacancies),\n            adsSearchParamsAction(adsSearchParams),\n            chatBotAction(chatBot),\n        ];\n        if (infoTip) {\n            actions.push(infoTipAction(infoTip));\n        }\n        dispatch(actions);\n\n        return { totalResults: vacancySearchResult.totalResults };\n    };\n\nexport default getFetchVacancies;\n","import { Dispatch } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport fetcher from 'lux/modules/fetcher';\n\nconst searchCountsAction = makeSetStoreField('searchCounts');\n\nconst VACANCY_COUNTS_URL = '/shards/vacancy/counts';\n\ndeclare global {\n    interface FetcherGetApi {\n        [VACANCY_COUNTS_URL]: {\n            response: { counts: number };\n            queryParams: undefined;\n        };\n    }\n}\n\ninterface Params {\n    dispatch: Dispatch;\n    query: string;\n    value: number;\n    abortSignal?: AbortSignal;\n}\n\ntype FetchVacancyCounts = () => Promise<number>;\n\nconst getFetchVacancyCounts =\n    ({ dispatch, query, value, abortSignal }: Params): FetchVacancyCounts =>\n    async () => {\n        dispatch(searchCountsAction({ isLoad: true, value }));\n        let response;\n        try {\n            response = await fetcher.get(`${VACANCY_COUNTS_URL}?${query}` as typeof VACANCY_COUNTS_URL, {\n                params: undefined,\n                signal: abortSignal,\n            });\n        } catch (error) {\n            dispatch(searchCountsAction({ isLoad: false, value: 0 }));\n            return Promise.reject(error);\n        }\n\n        // update search data\n        const { counts } = response;\n        dispatch(searchCountsAction({ isLoad: false, value: response.counts }));\n        return counts;\n    };\n\nexport default getFetchVacancyCounts;\n","import { Dispatch } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport { NovaFilterKey } from 'lux/models/novaFilters';\n\nimport { ResumeSearchParams } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/resume';\nimport { VacancySearchParams } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancy';\nimport { VacancyMapSearchParams } from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams/vacancyMap';\n\nconst updateSavedAreaIds = makeSetStoreField('savedAreaIds');\n\n// We force changing saved (detected) area when user changes area filter manually\nexport const adjustSavedArea = (\n    lastAppliedFilterName: NovaFilterKey | undefined,\n    searchType: SearchType,\n    isAdjustDetectedRegionResumeExpEnabled: boolean,\n    searchParams: VacancySearchParams | ResumeSearchParams | VacancyMapSearchParams,\n    dispatch: Dispatch\n): void => {\n    // if user changes any filter other than area, we don't touch detected area\n    if (lastAppliedFilterName !== NovaFilterKey.Area) {\n        return;\n    }\n\n    const isResumeSearch = searchType === SearchType.Resume;\n    // force writing detected area into link\n    // and update redux state (experiment adjust_detected_region_resume and always for vacancy search)\n    if (isAdjustDetectedRegionResumeExpEnabled || !isResumeSearch) {\n        // eslint-disable-next-line camelcase\n        searchParams.L_save_area = true;\n        dispatch(updateSavedAreaIds(searchParams.area?.map(String) ?? []));\n    }\n};\n","import { DefaultRootState } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Dispatch } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\nimport ModalHelper from 'bloko/common/modalHelper';\nimport urlParser from 'bloko/common/urlParser';\n\nimport Debug from 'HHC/Debug';\nimport { NETWORK_ERROR } from 'lux/components/Notifications/NetworkError';\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport fetchMapVacancies from 'lux/components/NovaFilters/fetchMapVacancies';\nimport getFetchResume from 'lux/components/NovaFilters/fetchResume';\nimport getFetchVacancies from 'lux/components/NovaFilters/fetchVacancies';\nimport getFetchVacancyCounts from 'lux/components/NovaFilters/fetchVacancyCounts';\nimport { NovaFilterKey } from 'lux/models/novaFilters';\nimport { DEFAULT_TIP_STATE } from 'lux/models/searchClustersTip';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport { adjustSavedArea } from 'lux/components/NovaFilters/actions/sendFilterForm/adjustSavedArea';\nimport getSearchParams from 'lux/components/NovaFilters/actions/sendFilterForm/getSearchParams';\n\nconst searchLoadingAction = makeSetStoreField('searchLoading');\nconst searchClustersTipAction = makeSetStoreField('searchClustersTip');\nconst searchPreferenceAction = makeSetStoreField('searchPreference');\nconst cancelFetchBannersAction = makeSetStoreField('cancelFetchBanners');\n\nlet tipTimeout: NodeJS.Timeout;\n\nconst isXsOrS = () => {\n    const breakpoint = getBreakpoint();\n    return [Breakpoint.XS, Breakpoint.S].includes(breakpoint);\n};\n\nexport interface SendFilterFormArgs {\n    abortSignal?: AbortSignal;\n    filter?: NovaFilterKey;\n    countsRequest?: boolean;\n    showClustersTip?: boolean;\n}\n\nexport interface SendFilterForm {\n    (args: SendFilterFormArgs): (dispatch: Dispatch, getState: () => DefaultRootState) => void;\n}\n\nconst sendFilterForm: SendFilterForm =\n    ({ filter, countsRequest = false, showClustersTip = true, abortSignal }) =>\n    (dispatch, getState) => {\n        const {\n            criteriaCurrencyCode,\n            criteriaTextUpdated,\n            currencies,\n            enableVacancySnippets,\n            novaSorts,\n            resumeSearchResult,\n            router,\n            searchCatalogRedirect,\n            searchClusters,\n            searchClustersSettings,\n            searchCounts,\n            vacancySearchResult,\n            isAdjustDetectedRegionResumeExpEnabled,\n            searchClustersLastAppliedFilter,\n        } = getState();\n        const { actionPath, type: searchType } = searchClustersSettings;\n\n        const searchParams = getSearchParams({\n            dispatch,\n            filter,\n            criteriaCurrencyCode,\n            criteriaTextUpdated,\n            currencies,\n            enableVacancySnippets,\n            router,\n            novaSorts,\n            resumeSearchResult,\n            searchCatalogRedirect,\n            searchClusters,\n            searchType,\n            vacancySearchResult,\n            isAdjustDetectedRegionResumeExpEnabled,\n        });\n\n        adjustSavedArea(\n            searchClustersLastAppliedFilter?.filterName,\n            searchType,\n            isAdjustDetectedRegionResumeExpEnabled,\n            searchParams,\n            dispatch\n        );\n        const query = urlParser.stringify(searchParams as never);\n\n        const sharedFetchArgs = { dispatch, query, abortSignal };\n\n        // map vacancy search\n        if (searchType === SearchType.VacancyMap) {\n            fetchMapVacancies(sharedFetchArgs)().catch((error) => {\n                Debug.log('out error', error, {\n                    query,\n                });\n            });\n            return;\n        }\n\n        // request for counts (only for vacancy search)\n        if (countsRequest) {\n            const fetchCountsRequest = getFetchVacancyCounts({\n                ...sharedFetchArgs,\n                value: searchCounts.value,\n            });\n            fetchCountsRequest().catch((error) => {\n                if (fetcher.isCancel(error)) {\n                    return;\n                }\n                dispatch(addNotification(NETWORK_ERROR));\n            });\n            return;\n        }\n\n        // catalog redirects (with debounce)\n        if (searchCatalogRedirect) {\n            dispatch(push(`${actionPath}?${query}`, { cancelScrollCorrection: true }));\n            return;\n        }\n\n        // request for search data's\n        const fetchResponse =\n            searchType === SearchType.Vacancy ? getFetchVacancies(sharedFetchArgs) : getFetchResume(sharedFetchArgs);\n\n        // loader and tip\n        dispatch([\n            searchLoadingAction(true),\n            searchClustersTipAction({ ...DEFAULT_TIP_STATE }),\n            cancelFetchBannersAction(true),\n        ]);\n\n        if (tipTimeout) {\n            clearTimeout(tipTimeout);\n        }\n\n        // after update search result\n        fetchResponse()\n            .then(({ totalResults, redirect }) => {\n                if (redirect) {\n                    dispatch(push(redirect, { cancelScrollCorrection: true }));\n                    return;\n                }\n                dispatch([cancelFetchBannersAction(false), searchLoadingAction(false)]);\n\n                // close xs/s form\n                if (isXsOrS()) {\n                    dispatch(searchPreferenceAction({ isShown: false }));\n                    return;\n                }\n\n                // show result tip on next tick\n                setTimeout(() => {\n                    dispatch(searchClustersTipAction({ show: showClustersTip, totalResults, filter }));\n                }, 60);\n                tipTimeout = setTimeout(() => {\n                    dispatch(searchClustersTipAction({ ...DEFAULT_TIP_STATE }));\n                }, 2000);\n            })\n            .catch((error) => {\n                if (fetcher.isCancel(error)) {\n                    return;\n                }\n                Debug.log('out error', error, { query });\n                dispatch(searchLoadingAction(false));\n                dispatch(addNotification(NETWORK_ERROR));\n            })\n            .finally(() => {\n                if (searchType === SearchType.Resume) {\n                    ModalHelper.enableScroll();\n                }\n            });\n    };\n\nexport default sendFilterForm;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport debounce from 'bloko/common/debounce';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\n\nimport { useUpdateAbortController } from 'lux/components/NovaFilters/NovaFilterUpdateContext';\nimport sendFilterForm, { SendFilterFormArgs } from 'lux/components/NovaFilters/actions/sendFilterForm';\n\nexport interface SendFilterFormWrapped {\n    (args?: SendFilterFormArgs): void;\n}\n\nconst searchCountsAction = makeSetStoreField('searchCounts');\n\nconst DEBOUNCE_DELAY_MS = 300;\n\nconst isDesktop = () => [Breakpoint.M, Breakpoint.L].includes(getBreakpoint());\n\nconst dispatchSendFilterForm = (dispatch: Dispatch, args: SendFilterFormArgs) => dispatch(sendFilterForm(args));\n\nconst debouncedDispatchSendFilterForm = debounce(\n    (dispatch: Dispatch, args: SendFilterFormArgs) => dispatch(sendFilterForm(args)),\n    DEBOUNCE_DELAY_MS\n);\n\nconst useSendFilterForm = (isDebounced?: boolean): SendFilterFormWrapped => {\n    const dispatch = useDispatch();\n    const abortAndGetUpdatedSignal = useUpdateAbortController();\n\n    const dispatchCallback = isDebounced ? debouncedDispatchSendFilterForm : dispatchSendFilterForm;\n\n    return (args) => {\n        const abortSignal = abortAndGetUpdatedSignal();\n        dispatchCallback(dispatch, { ...args, abortSignal });\n    };\n};\n\nexport const useDebouncedCountsRequest = (): (() => void) => {\n    const dispatch = useDispatch();\n    const debouncedSendFilterForm = useSendFilterForm(true);\n\n    return useCallback(() => {\n        if (isDesktop()) {\n            return;\n        }\n        dispatch(searchCountsAction({ isLoad: true, value: 0 }));\n        debouncedSendFilterForm({ countsRequest: true });\n    }, [debouncedSendFilterForm, dispatch]);\n};\n\nexport const useDebouncedSendFilterFormByBreakpoint = (): SendFilterFormWrapped => {\n    const debouncedSendFilterForm = useSendFilterForm(true);\n\n    return useCallback((args) => isDesktop() && debouncedSendFilterForm(args), [debouncedSendFilterForm]);\n};\n\nexport default useSendFilterForm;\n","import { MetroType, Range } from 'lux/models/novaFilters';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nexport enum NovaFilterSetting {\n    ShowClusters = 'show_clusters',\n    ForceFiltersSaving = 'forceFiltersSaving',\n    FromSearchLine = 'fromSearchLine',\n    EnableSnippets = 'enable_snippets',\n}\n\nconst PARAMS_BLACKLIST = [\n    CriteriaKey.EmployerManagerId,\n    CriteriaKey.ControlFlag,\n    CriteriaKey.SearchDebug,\n    NovaFilterSetting.ShowClusters,\n];\n\nexport const rangeKeys = [Range.From, Range.To];\n\nexport const NOVAFILTERS_CRITERIA_ETC_FILTERS = [CriteriaKey.ExpCompanySize] as const;\nexport const NOVAFILTERS_EXCLUDE_HIDDEN_INPUT = [\n    CriteriaKey.AcceptTemporary,\n    CriteriaKey.AgeFrom,\n    CriteriaKey.AgeTo,\n    CriteriaKey.Citizenship,\n    CriteriaKey.DriverLicenseTypes,\n    CriteriaKey.IsAutosearch,\n    CriteriaKey.Language,\n    CriteriaKey.Page,\n    CriteriaKey.Salary,\n    CriteriaKey.SalaryFrom,\n    CriteriaKey.SalaryTo,\n    CriteriaKey.ProfessionalRole,\n    CriteriaKey.WorkTicket,\n    ...PARAMS_BLACKLIST,\n    ...NOVAFILTERS_CRITERIA_ETC_FILTERS,\n    CriteriaKey.OnlyWithSalary,\n    CriteriaKey.EmployerId,\n    CriteriaKey.CurrencyCode,\n    CriteriaKey.Experience,\n    CriteriaKey.Label,\n    CriteriaKey.ExcludedText,\n    NovaFilterSetting.FromSearchLine,\n    CriteriaKey.Text,\n    NovaFilterSetting.ForceFiltersSaving,\n];\n\nexport const SORTS_WITH_DEFAULT_VALUE = {\n    [CriteriaKey.SearchPeriod]: null,\n    [CriteriaKey.OrderBy]: 'relevance',\n};\n\nexport const isMetroCheckedOrIndeterminate = (\n    id: string,\n    selectedMetro: string[],\n    color: string,\n    type: MetroType\n): { checked: boolean; indeterminate: boolean } => {\n    const checked = selectedMetro.includes(id);\n    let indeterminate = false;\n    if (!checked && type === MetroType.Line) {\n        indeterminate = selectedMetro.some((item) => item.split('.')[0] === id);\n    }\n    return {\n        checked,\n        indeterminate,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--YrxwBnM9p6l9oPnFSq2e\",\"title\":\"title--gGKsqmfJooPj6uKwI515\",\"close\":\"close--bqaBNV7A0QEzQEmCy1ec\",\"icon\":\"icon--XVkVzFeK2mAG9rO7Oetv\",\"iconHhIosApplicant\":\"icon_hh-ios-applicant--dFlxXx1ey3rz8wmHYgzd\",\"iconHhAndroidApplicant\":\"icon_hh-android-applicant--XvL9wulHkfYS9SPuCgUi\",\"iconHhHuaweiApplicant\":\"icon_hh-huawei-applicant--b1IHZp4LqI1FgVX7QZlP\",\"iconHhIosEmployer\":\"icon_hh-ios-employer--smaPQw46zOlAG6WyG0Z2\",\"iconHhAndroidEmployer\":\"icon_hh-android-employer--UrYBhGMJD2JYjGE62nzQ\",\"iconHhHuaweiEmployer\":\"icon_hh-huawei-employer--pbOP8TbClemZFo7ljDqH\",\"iconJtbIosApplicant\":\"icon_jtb-ios-applicant--PcKpAKzLxdPifokziTc7\",\"iconJtbAndroidApplicant\":\"icon_jtb-android-applicant--pzVaKMPb4F8wZDfPIQI7\",\"iconJtbIosEmployer\":\"icon_jtb-ios-employer--de8ToBfO3Mnkhj89NW08\",\"iconJtbAndroidEmployer\":\"icon_jtb-android-employer--oECsJGR0nEZ7VA7Gsx0R\",\"iconZpIosApplicant\":\"icon_zp-ios-applicant--NsgUO8moANz2jigSQunu\",\"iconZpAndroidApplicant\":\"icon_zp-android-applicant--tO_yxce82EXCtjtaxqLI\",\"iconZpHuaweiApplicant\":\"icon_zp-huawei-applicant--_HfLH09VpV8d0zj_TCQX\",\"content\":\"content--Q9T9XUT8ONLcTk_iJ2zA\"};","import { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport appInstallBannerButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/app_install/app_install_banner_button_click';\nimport appInstallBannerElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/app_install/app_install_banner_element_shown';\nimport { H3Section } from 'bloko/blocks/header';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport Storage from 'bloko/common/storage/LocalStorageWrapper';\n\nimport media from 'Utils/Media';\nimport scrollTop from 'Utils/ScrollTop';\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\nimport { AppLinkType } from 'lux/models/appLink';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { ACTION_SMART_BANNER_LOADED, ACTION_SMART_BANNER_HIDE } from 'lux/components/AppSmartBanner/utils';\n\nimport styles from './index.less';\n\nconst TrlKeys = {\n    title: 'mobile.app.smartbanner.text.anchor.universal',\n    storeLinks: {\n        ios: 'mobile.app.smartbanner.text.anchor.ios',\n        android: 'mobile.app.smartbanner.text.anchor.android',\n        winphone: 'mobile.app.smartbanner.text.anchor.winphone',\n        huawei: 'mobile.app.smartbanner.text.anchor.huawei',\n    },\n};\n\nconst sendLinkAnalytics = (userType: string) => {\n    Analytics.sendEvent(userType, 'click_hrmobile', 'main_banner');\n    appInstallBannerButtonClick();\n};\n\nconst DAYS_TO_HIDE_AFTER_CLOSE = 15;\nconst STORAGE_VARIABLE_NAME = 'HH-smartbanner-hidden-until';\nconst DAY = 86400000;\nconst XS_ONLY_LINK_PARAM = 'main_xs_banner';\nconst LINK_PARAM = 'main_banner';\n\nconst AppSmartBanner: TranslatedComponent = ({ trls }) => {\n    const appLink = useSelector((state) => state.appLink);\n    const device = useSelector((state) => state.device);\n    const userType = useSelector(({ userType }) => userType);\n    const isWebView = useSelector((state) => state.isWebView);\n    const isCookiesPolicyInformerVisible = useSelector((state) => state.isCookiesPolicyInformerVisible);\n    const isTopPromoBannerVisible = useSelector(({ topPromoBanner }) => topPromoBanner.isShow);\n    const isXs = useBreakpoint() === Breakpoint.XS;\n    const [isVisible, setIsVisible] = useState(false);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const isTopPromoBannerEnabled = useRef(isTopPromoBannerVisible);\n\n    useEffect(() => {\n        if ((isXs && isCookiesPolicyInformerVisible) || isTopPromoBannerEnabled.current) {\n            setIsVisible(false);\n            return;\n        }\n        if (isWebView || !appLink.detected || !device.type || !media.isXsFriendly()) {\n            setIsVisible(false);\n            return;\n        }\n        const hiddenUntil = Number(Storage.getItem(STORAGE_VARIABLE_NAME));\n        if (hiddenUntil && hiddenUntil > Date.now()) {\n            setIsVisible(false);\n            return;\n        }\n        setIsVisible(true);\n    }, [appLink.detected, device.type, isXs, isCookiesPolicyInformerVisible, isWebView, isTopPromoBannerVisible]);\n\n    useEffect(() => {\n        if (isVisible && wrapperRef.current) {\n            window.dispatchEvent(\n                new CustomEvent(ACTION_SMART_BANNER_LOADED, { detail: { height: wrapperRef.current.clientHeight } })\n            );\n            appInstallBannerElementShown(wrapperRef.current);\n        }\n    }, [isVisible]);\n\n    if (!isVisible) {\n        return null;\n    }\n\n    const linkParam = isXs ? XS_ONLY_LINK_PARAM : LINK_PARAM;\n    const link = `${appLink.href}?${linkParam}`;\n\n    const hide = () => {\n        if (!wrapperRef.current) {\n            return;\n        }\n        const bannerHeight = wrapperRef.current.offsetHeight;\n        scrollTop({\n            top: bannerHeight,\n            speed: 2500,\n            animationEndCallback() {\n                setIsVisible(false);\n                window.scrollTo(0, 0);\n                window.dispatchEvent(new CustomEvent(ACTION_SMART_BANNER_HIDE));\n            },\n        });\n        const hideUntil = Date.now() + DAY * DAYS_TO_HIDE_AFTER_CLOSE;\n\n        Storage.setItem(STORAGE_VARIABLE_NAME, String(hideUntil));\n    };\n\n    const onLinkClick = () => {\n        sendLinkAnalytics(userType);\n        hide();\n    };\n\n    return (\n        <NoIndex>\n            <div className={styles.wrapper} ref={wrapperRef} data-qa=\"app-smartbanner\">\n                <a\n                    className={classnames(styles.icon, {\n                        [styles.iconHhIosApplicant]: appLink.type === AppLinkType.HhIosApplicant,\n                        [styles.iconHhAndroidApplicant]: appLink.type === AppLinkType.HhAndroidApplicant,\n                        [styles.iconHhHuaweiApplicant]: appLink.type === AppLinkType.HhHuaweiApplicant,\n                        [styles.iconHhIosEmployer]: appLink.type === AppLinkType.HhIosEmployer,\n                        [styles.iconHhAndroidEmployer]: appLink.type === AppLinkType.HhAndroidEmployer,\n                        [styles.iconHhHuaweiEmployer]: appLink.type === AppLinkType.HhHuaweiEmployer,\n                        [styles.iconJtbIosApplicant]: appLink.type === AppLinkType.JtbIosApplicant,\n                        [styles.iconJtbAndroidApplicant]: appLink.type === AppLinkType.JtbAndroidApplicant,\n                        [styles.iconJtbIosEmployer]: appLink.type === AppLinkType.JtbIosEmployer,\n                        [styles.iconJtbAndroidEmployer]: appLink.type === AppLinkType.JtbAndroidEmployer,\n                        [styles.iconZpIosApplicant]: appLink.type === AppLinkType.ZpIosApplicant,\n                        [styles.iconZpAndroidApplicant]: appLink.type === AppLinkType.ZpAndroidApplicant,\n                        [styles.iconZpHuaweiApplicant]: appLink.type === AppLinkType.ZpHuaweiApplicant,\n                    })}\n                    onClick={onLinkClick}\n                    href={link}\n                    data-qa=\"app-smartbanner-img\"\n                />\n                <a className={styles.content} onClick={onLinkClick} href={link}>\n                    <div className={styles.title}>\n                        <H3Section Element=\"div\">{trls[TrlKeys.title]}</H3Section>\n                    </div>\n                    {!!device.type && (\n                        <span className={styles.link} data-qa=\"app-smartbanner-storelink\">\n                            {trls[TrlKeys.storeLinks[device.type]]}\n                        </span>\n                    )}\n                </a>\n                <button type=\"button\" className={styles.close} data-qa=\"app-smartbanner-close\" onClick={hide}>\n                    <Icon view={IconView.Cross} scale={IconScale.Medium} initial={IconColor.Gray80} />\n                </button>\n            </div>\n        </NoIndex>\n    );\n};\n\nexport default translation(AppSmartBanner);\n","export enum FoundOnHHVariants {\n    FoundOnHH = 'found_on_hh',\n    NotFoundOnHH = 'not_found_on_hh',\n}\n\nexport enum ReasonVariants {\n    WithoutResponse = 'got_message',\n    ContactedByMyself = 'message_myself',\n    Other = 'other',\n}\n\nexport enum ModalStep {\n    FoundOnHHStep = 'found-on-hh-step',\n    ChooseOfferStep = 'choose-offer-step',\n    ChooseReasonStep = 'choose-reason-step',\n    WriteWhatConfused = 'write-what-confused',\n}\n\nexport interface Offer {\n    employerId: number;\n    vacancyId: number;\n    resumeId: number;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"surveyItem\":\"survey-item--d9ReqJ3AroK_2hEuifUK\",\"delimiter\":\"delimiter--eyrkUSKBo1kw752mhZ9m\"};","import Radio from 'bloko/blocks/radio';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { FoundOnHHVariants } from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/types';\n\nimport styles from './found-on-hh-content.less';\n\nconst TrlKeys = {\n    [FoundOnHHVariants.FoundOnHH]: 'jobSearchStatus.postChangeModal.foundOnHH.yes',\n    [FoundOnHHVariants.NotFoundOnHH]: 'jobSearchStatus.postChangeModal.foundOnHH.no',\n};\n\ninterface FoundOnHHContentProps {\n    value: FoundOnHHVariants | null;\n    onSet: (value: FoundOnHHVariants) => void;\n}\n\nconst FoundOnHHContent: TranslatedComponent<FoundOnHHContentProps> = ({ value, onSet, trls }) => {\n    const renderRadio = (variant: FoundOnHHVariants) => (\n        <label className={styles.surveyItem}>\n            <Radio\n                checked={value === variant}\n                onChange={() => {\n                    onSet(variant);\n                }}\n            >\n                {trls[TrlKeys[variant]]}\n            </Radio>\n        </label>\n    );\n\n    return (\n        <>\n            <VSpacing base={0} xs={2} />\n            {renderRadio(FoundOnHHVariants.FoundOnHH)}\n            <VSpacing base={2} xs={4} />\n            <hr className={styles.delimiter} />\n            <VSpacing base={0} xs={4} />\n            {renderRadio(FoundOnHHVariants.NotFoundOnHH)}\n            <VSpacing base={0} xs={2} />\n        </>\n    );\n};\n\nexport default translation(FoundOnHHContent);\n","// extracted by mini-css-extract-plugin\nexport default {\"offersContentWrapper\":\"offers-content-wrapper--HuCEF8ms3thjURVQVxvl\",\"offersContentWrapperSelected\":\"offers-content-wrapper_selected--yVfOk4OZ6b75mCbCUUFS\",\"offersContentTextContainer\":\"offers-content-text-container--dSmuMyq_EKaBFbrXDBVY\",\"offersContentFlexbox\":\"offers-content-flexbox--MHnp0a3YBQEF5zOWiONS\",\"offersContentVacancies\":\"offers-content-vacancies--hunNaiSDrK45n7iFyqhs\",\"offersContentLogoWrapper\":\"offers-content-logo-wrapper--nZ3i9wBqo1fj6hOFQ0XI\",\"offersContentLogo\":\"offers-content-logo--uWSzvlit5iqSD5LkeMD3\"};","import { FC, Fragment, useEffect, useRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport userStatusSelectOfferCompanyElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_element_shown';\nimport userStatusSelectOfferCompanyScreenShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_screen_shown';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { CompanyLogo, LogoType } from 'lux/models/applicant/jobSearchStatus';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { Offer } from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/types';\n\nimport styles from './offers-content.less';\n\nconst ACCEPTABLE_LOGOS = [LogoType.VacancyPage, LogoType.Medium] as const;\n\ninterface OffersContentProps {\n    addOffer: (employerId: number, vacancyId: number, resumeId: number) => void;\n    selectedOffers: Offer[];\n}\n\nconst findAcceptableLogo: (logos: CompanyLogo[] | undefined) => string | null = (logos) => {\n    if (!logos) {\n        return null;\n    }\n\n    const logo = logos.find((logo) => ACCEPTABLE_LOGOS.includes(logo['@type']));\n\n    return logo?.['@url'] || null;\n};\n\nconst OffersContent: FC<OffersContentProps & PropsWithChildren> = ({ addOffer, selectedOffers }) => {\n    const possibleJobOffers = useSelector(({ applicantPossibleJobOffers }) => applicantPossibleJobOffers);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (wrapperRef.current && possibleJobOffers.length > 0) {\n            userStatusSelectOfferCompanyScreenShown();\n            userStatusSelectOfferCompanyElementShown(wrapperRef.current, {\n                type: 'full',\n                employerIdList: possibleJobOffers.map((offer) => offer.employerId).join(','),\n                vacancyIdList: possibleJobOffers\n                    .filter((offer) => Boolean(offer.vacancyId))\n                    .map((offer) => offer.vacancyId)\n                    .join(','),\n            });\n        }\n    }, [possibleJobOffers]);\n\n    if (possibleJobOffers.length === 0) {\n        return null;\n    }\n\n    const selectedVacanciesIds = selectedOffers.map(({ vacancyId }) => vacancyId);\n    return (\n        <div ref={wrapperRef}>\n            {possibleJobOffers.map((offer, index) => {\n                const logoUrl = findAcceptableLogo(offer.logos?.logo);\n                return (\n                    <Fragment key={offer.vacancyId}>\n                        <div\n                            className={classnames(styles.offersContentWrapper, {\n                                [styles.offersContentWrapperSelected]: selectedVacanciesIds.includes(offer.vacancyId),\n                            })}\n                            onClick={() => {\n                                addOffer(offer.employerId, offer.vacancyId || 0, offer.resumeId || 0);\n                            }}\n                        >\n                            <VSpacing base={2} />\n                            <div className={styles.offersContentFlexbox}>\n                                <div className={styles.offersContentTextContainer}>\n                                    <VSpacing base={2} />\n                                    <Text Element=\"div\" size={TextSize.Large} strong>\n                                        {offer.name}\n                                    </Text>\n                                    <VSpacing base={1} />\n                                    <Text Element=\"div\" importance={TextImportance.Secondary}>\n                                        <div className={styles.offersContentVacancies}>\n                                            {offer.vacancyNames.join(', ')}\n                                        </div>\n                                    </Text>\n                                    <VSpacing base={2} />\n                                </div>\n                                <div className={styles.offersContentLogoWrapper}>\n                                    {logoUrl && (\n                                        <img className={styles.offersContentLogo} src={logoUrl} alt={offer.name} />\n                                    )}\n                                </div>\n                            </div>\n                            <VSpacing base={2} />\n                        </div>\n                        {index < possibleJobOffers.length - 1 && <VSpacing base={3} />}\n                    </Fragment>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default OffersContent;\n","import { useEffect, useRef } from 'react';\n\nimport userStatusSelectOfferCompanyElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_element_shown';\nimport userStatusSelectOfferCompanyScreenShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_screen_shown';\nimport Radio from 'bloko/blocks/radio';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { ReasonVariants } from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/types';\n\nconst TrlKeys = {\n    [ReasonVariants.WithoutResponse]: 'jobSearchStatus.postChangeModal.notOnHH.reason.withoutResponse',\n    [ReasonVariants.ContactedByMyself]: 'jobSearchStatus.postChangeModal.notOnHH.reason.contactedByMyself',\n    [ReasonVariants.Other]: 'jobSearchStatus.postChangeModal.notOnHH.reason.other',\n    description: 'jobSearchStatus.postChangeModal.notOnHH.description',\n};\n\ninterface ReasonsContentProps {\n    value: ReasonVariants | null;\n    onSet: (value: ReasonVariants) => void;\n}\n\nconst ReasonsContent: TranslatedComponent<ReasonsContentProps> = ({ value, onSet, trls }) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (wrapperRef.current) {\n            userStatusSelectOfferCompanyScreenShown();\n            userStatusSelectOfferCompanyElementShown(wrapperRef.current, { type: 'nothing', employerIdList: '' });\n        }\n    }, []);\n\n    const renderRadio = (variant: ReasonVariants) => (\n        <Radio checked={value === variant} onChange={() => onSet(variant)}>\n            {trls[TrlKeys[variant]]}\n        </Radio>\n    );\n\n    return (\n        <div ref={wrapperRef}>\n            <Text>{trls[TrlKeys.description]}</Text>\n            <VSpacing base={5} />\n            {renderRadio(ReasonVariants.WithoutResponse)}\n            <VSpacing base={2} />\n            {renderRadio(ReasonVariants.ContactedByMyself)}\n            <VSpacing base={2} />\n            {renderRadio(ReasonVariants.Other)}\n        </div>\n    );\n};\n\nexport default translation(ReasonsContent);\n","// extracted by mini-css-extract-plugin\nexport default {\"whatConfusedContentTip\":\"what-confused-content-tip--XblKczwbdBQv5FPIU90s\"};","import Text, { TextImportance } from 'bloko/blocks/text';\nimport Textarea from 'bloko/blocks/textarea';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport styles from './what-confused-content.less';\n\nconst TrlKeys = {\n    subTitle: 'jobSearchStatus.postChangeModal.step.writeWhatConfused.subTitle',\n};\n\ninterface WhatConfusedContentProps {\n    value: string;\n    setValue: (text: string) => void;\n}\n\nconst MAX_LEN = 150;\n\nconst WhatConfusedContent: TranslatedComponent<WhatConfusedContentProps> = ({ trls, value, setValue }) => {\n    return (\n        <>\n            <Text Element=\"div\">{trls[TrlKeys.subTitle]}</Text>\n            <VSpacing base={5} />\n            <Textarea\n                name=\"text\"\n                maxLength={MAX_LEN}\n                minLength={10}\n                rows={4}\n                noresize\n                value={value}\n                onChange={(event) => setValue(event.target.value)}\n            />\n            <VSpacing base={2} />\n            <div className={styles.whatConfusedContentTip}>\n                <Text importance={TextImportance.Secondary}>\n                    {value.length}/{MAX_LEN}\n                </Text>\n            </div>\n        </>\n    );\n};\n\nexport default translation(WhatConfusedContent);\n","import { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios, { Canceler } from 'axios';\n\nimport { PossibleJobOffers, setApplicantPossibleJobOffers } from 'lux/models/applicant/jobSearchStatus';\nimport fetcher from 'lux/modules/fetcher';\n\nimport { ModalStep } from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/types';\n\ntype FetchOffersFunction = (args: { setModalStep: (step: ModalStep) => void }) => void;\n\ntype UseFetchPossibleJobOffersHook = () => {\n    loading: boolean;\n    fetchOffers: FetchOffersFunction;\n    cancelFetch: () => void;\n};\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/applicant/negotiations/possible_job_offers': {\n            queryParams: unknown;\n            response: {\n                possibleJobOffers?: PossibleJobOffers;\n            };\n        };\n    }\n}\n\nconst useFetchPossibleJobOffers: UseFetchPossibleJobOffersHook = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const cancelFetchRef = useRef<Canceler | null>(null);\n\n    const cancelFetch = () => {\n        cancelFetchRef.current?.();\n    };\n\n    const fetchOffers: FetchOffersFunction = async ({ setModalStep }) => {\n        setLoading(true);\n        dispatch(setApplicantPossibleJobOffers([]));\n\n        cancelFetchRef.current?.();\n        const cancelToken = new axios.CancelToken((cancel: Canceler) => {\n            cancelFetchRef.current = cancel;\n        });\n\n        let data = null;\n        try {\n            data = await fetcher.get('/shards/applicant/negotiations/possible_job_offers', {\n                params: {},\n                cancelToken,\n            });\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n\n        if (!data || !data.possibleJobOffers || data.possibleJobOffers.length === 0) {\n            setModalStep(ModalStep.ChooseReasonStep);\n            return;\n        }\n\n        setModalStep(ModalStep.ChooseOfferStep);\n        dispatch(setApplicantPossibleJobOffers(data.possibleJobOffers));\n    };\n\n    return { loading, fetchOffers, cancelFetch };\n};\n\nexport default useFetchPossibleJobOffers;\n","// extracted by mini-css-extract-plugin\nexport default {\"postChangeModalContent\":\"post-change-modal-content--CLXk0IAtKRKe1tb4M0UQ\"};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport userStatusSelectOfferCompanyButtonClick, {\n    JobSearchStatus as JobSearchStatusAnalytics,\n} from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_button_click';\nimport userStatusSelectOfferCompanyEmptyButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_offer_company_empty_button_click';\nimport userStatusSelectSendWhatConfused from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_send_what_confused_button_click';\nimport userStatusSelectWhereFoundButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_where_found_button_click';\nimport userStatusSelectWhereFoundScreenShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_where_found_screen_shown';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport { IconColor } from 'bloko/blocks/icon';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport Modal, { ModalContent, ModalFooter, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { LangTrls, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport { APPLICANT_JOB_SEARCH_STATUS_SUCCESS } from 'lux/components/Notifications/ApplicantJobSearchStatusSuccess';\nimport translation from 'lux/components/translation';\nimport { hidePostChangeModal } from 'lux/models/applicant/jobSearchStatus';\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport FoundOnHHContent from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/FoundOnHHContent';\nimport OffersContent from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/OffersContent';\nimport ReasonsContent from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/ReasonsContent';\nimport WhatConfusedContent from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/WhatConfusedContent';\nimport {\n    FoundOnHHVariants,\n    ModalStep,\n    ReasonVariants,\n    Offer,\n} from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/types';\nimport useFetchPossibleJobOffers from 'lux/components/Applicant/JobSearchStatus/PostChangeModal/useFetchPossibleJobOffers';\n\nimport styles from './post-change-modal.less';\n\nconst TrlKeys = {\n    title: {\n        [ModalStep.FoundOnHHStep]: {\n            [JobSearchStatus.HasJobOffer]: 'jobSearchStatus.postChangeModal.step.foundOnHH.has_job_offer',\n            others: 'jobSearchStatus.postChangeModal.step.foundOnHH',\n        },\n        [ModalStep.ChooseOfferStep]: {\n            [JobSearchStatus.HasJobOffer]: 'jobSearchStatus.postChangeModal.step.ChooseOfferStep.has_job_offer',\n            others: 'jobSearchStatus.postChangeModal.step.ChooseOfferStep.others',\n        },\n        [ModalStep.ChooseReasonStep]: {\n            [JobSearchStatus.HasJobOffer]: 'jobSearchStatus.postChangeModal.step.ChooseOfferStep.has_job_offer',\n            others: 'jobSearchStatus.postChangeModal.step.ChooseOfferStep.others',\n        },\n        [ModalStep.WriteWhatConfused]: 'jobSearchStatus.postChangeModal.step.writeWhatConfused',\n    },\n    footer: {\n        close: 'jobSearchStatus.postChangeModal.footer.close',\n        anotherAnswer: 'jobSearchStatus.postChangeModal.footer.anotherAnswer',\n        finish: 'jobSearchStatus.postChangeModal.footer.finish',\n        answer: 'jobSearchStatus.postChangeModal.footer.answer',\n        continue: 'jobSearchStatus.postChangeModal.footer.continue',\n        done: 'jobSearchStatus.postChangeModal.footer.done',\n    },\n};\n\nconst getModalTitle = (\n    step: ModalStep,\n    trls: LangTrls,\n    topLevelDomain: string | null,\n    userStatus: JobSearchStatus\n): string => {\n    if (step === ModalStep.WriteWhatConfused) {\n        return trls[TrlKeys.title[step]];\n    }\n    const statusKey = userStatus === JobSearchStatus.HasJobOffer ? JobSearchStatus.HasJobOffer : 'others';\n    if (step === ModalStep.FoundOnHHStep) {\n        return format(trls[TrlKeys.title[ModalStep.FoundOnHHStep][statusKey]], {\n            '{0}': topLevelDomain ?? TopLevelSite.RU,\n        });\n    }\n    return trls[TrlKeys.title[step][statusKey]];\n};\n\nconst PostChangeModal: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const [foundOnHHValue, setFoundOnHHValue] = useState<FoundOnHHVariants | null>(null);\n    const [reasonValue, setReasonValue] = useState<ReasonVariants | null>(null);\n    const [modalStep, setModalStep] = useState<ModalStep>(ModalStep.FoundOnHHStep);\n    const { loading, fetchOffers, cancelFetch } = useFetchPossibleJobOffers();\n    const modalVisible = useSelector((state) => state.jobSearchStatusPostChangeModal?.visible);\n    const showStatusChangeNotification = useSelector(\n        (state) => state.jobSearchStatusPostChangeModal?.showStatusChangeNotification\n    );\n    const topLevelDomain = useSelector((state) => state.topLevelDomain);\n\n    const userStatuses = useSelector((state) => state.applicantUserStatuses);\n    const userStatus = userStatuses?.jobSearchStatus?.name || JobSearchStatus.AcceptedJobOffer;\n    const userStatusAnalytics = userStatus.toUpperCase() as JobSearchStatusAnalytics;\n    const [selectedOffers, setSelectedOffers] = useState<Offer[]>([]);\n    const [whatConfusedText, setWhatConfusedText] = useState<string>('');\n    const breakpoint = useBreakpoint(Breakpoint.XS);\n    const isXs = breakpoint === Breakpoint.XS;\n\n    useEffect(() => {\n        if (modalVisible) {\n            setFoundOnHHValue(null);\n            setReasonValue(null);\n            setModalStep(ModalStep.FoundOnHHStep);\n            setSelectedOffers([]);\n            setWhatConfusedText('');\n            userStatusSelectWhereFoundScreenShown();\n        }\n    }, [modalVisible]);\n\n    const hideModal = () => {\n        dispatch(hidePostChangeModal());\n        if (showStatusChangeNotification) {\n            dispatch(addNotification(APPLICANT_JOB_SEARCH_STATUS_SUCCESS));\n        }\n    };\n\n    const handleClose = () => {\n        cancelFetch();\n        hideModal();\n    };\n\n    const finishFirstStep = () => {\n        userStatusSelectWhereFoundButtonClick({ offerFromHH: foundOnHHValue === FoundOnHHVariants.FoundOnHH });\n\n        if (foundOnHHValue === FoundOnHHVariants.NotFoundOnHH) {\n            handleClose();\n            return;\n        }\n\n        fetchOffers({ setModalStep });\n    };\n\n    const finishChooseReason = () => {\n        if (reasonValue) {\n            userStatusSelectOfferCompanyEmptyButtonClick({ type: reasonValue });\n        }\n\n        handleClose();\n    };\n\n    const finishChooseOffers = (offers: Offer[]) => {\n        offers.forEach(({ employerId, vacancyId, resumeId }) => {\n            userStatusSelectOfferCompanyButtonClick({\n                employerId: employerId.toString(),\n                type: 'full',\n                vacancyId: `${vacancyId}`,\n                resumeId: `${resumeId}`,\n                jobSearchStatus: userStatusAnalytics,\n            });\n        });\n        hideModal();\n    };\n\n    // if HasJobOffer => can be multi choise, else (AcceptedJobOffer) => single offer only\n    const addOffer = (employerId: number, vacancyId: number, resumeId: number) => {\n        if (userStatus === JobSearchStatus.AcceptedJobOffer) {\n            const offers = [{ employerId, vacancyId, resumeId }];\n            setSelectedOffers([{ employerId, vacancyId, resumeId }]);\n\n            // for single choice, close bottom sheet at once\n            if (userStatus === JobSearchStatus.AcceptedJobOffer && isXs) {\n                finishChooseOffers(offers);\n            }\n            return;\n        }\n        let newValue;\n        if (selectedOffers.map((offer) => offer.vacancyId).includes(vacancyId)) {\n            newValue = selectedOffers.filter((offer) => offer.vacancyId !== vacancyId);\n        } else {\n            newValue = [...selectedOffers, { employerId, vacancyId, resumeId }];\n        }\n        setSelectedOffers(newValue);\n    };\n\n    const sendWhatConfused = () => {\n        userStatusSelectSendWhatConfused({ text: whatConfusedText });\n\n        hideModal();\n    };\n\n    const closeButton = (\n        <Button stretched={isXs} onClick={handleClose}>\n            {trls[TrlKeys.footer.close]}\n        </Button>\n    );\n\n    const STEP_CONTENT = {\n        [ModalStep.FoundOnHHStep]: {\n            content: <FoundOnHHContent value={foundOnHHValue} onSet={setFoundOnHHValue} />,\n            footer: {\n                mainAction: (\n                    <Button\n                        disabled={!foundOnHHValue}\n                        onClick={finishFirstStep}\n                        kind={ButtonKind.Primary}\n                        stretched={isXs}\n                        loading={loading && <Loading scale={LoadingScale.Small} initial={IconColor.White} />}\n                    >\n                        {trls[TrlKeys.footer.continue]}\n                    </Button>\n                ),\n                secondaryAction: closeButton,\n            },\n        },\n        [ModalStep.ChooseReasonStep]: {\n            content: <ReasonsContent value={reasonValue} onSet={setReasonValue} />,\n            footer: {\n                mainAction: (\n                    <Button\n                        stretched={isXs}\n                        disabled={!reasonValue}\n                        onClick={finishChooseReason}\n                        kind={ButtonKind.Primary}\n                    >\n                        {trls[TrlKeys.footer.done]}\n                    </Button>\n                ),\n                secondaryAction: closeButton,\n            },\n        },\n        [ModalStep.ChooseOfferStep]: {\n            content: <OffersContent addOffer={addOffer} selectedOffers={selectedOffers} />,\n            footer: {\n                mainAction: (\n                    <>\n                        {!(userStatus === JobSearchStatus.AcceptedJobOffer && isXs) && (\n                            <Button\n                                stretched={isXs}\n                                kind={ButtonKind.Primary}\n                                disabled={selectedOffers.length === 0}\n                                onClick={() => {\n                                    finishChooseOffers(selectedOffers);\n                                }}\n                            >\n                                {trls[TrlKeys.footer.finish]}\n                            </Button>\n                        )}\n                    </>\n                ),\n                secondaryAction: (\n                    <Button\n                        stretched={isXs}\n                        onClick={() => {\n                            setModalStep(ModalStep.WriteWhatConfused);\n                        }}\n                    >\n                        {trls[TrlKeys.footer.anotherAnswer]}\n                    </Button>\n                ),\n            },\n        },\n        [ModalStep.WriteWhatConfused]: {\n            content: <WhatConfusedContent value={whatConfusedText} setValue={setWhatConfusedText} />,\n            footer: {\n                mainAction: (\n                    <Button stretched={isXs} kind={ButtonKind.Primary} onClick={sendWhatConfused}>\n                        {trls[TrlKeys.footer.answer]}\n                    </Button>\n                ),\n                secondaryAction: closeButton,\n            },\n        },\n    };\n\n    return (\n        <Modal useBottomSheet visible={modalVisible} onClose={handleClose}>\n            <ModalHeader>\n                <ModalTitle>{getModalTitle(modalStep, trls, topLevelDomain, userStatus)}</ModalTitle>\n            </ModalHeader>\n            <ModalContent>\n                <div className={styles.postChangeModalContent}>{STEP_CONTENT[modalStep].content}</div>\n            </ModalContent>\n            <ModalFooter>\n                {STEP_CONTENT[modalStep].footer.secondaryAction}\n                {isXs ? <VSpacing base={3} /> : <HSpacing base={2} />}\n                {STEP_CONTENT[modalStep].footer.mainAction}\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(PostChangeModal);\n","import { PlatformInfo } from 'lux/models/platformInfo';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const usePlatformInfo = (): PlatformInfo => useSelector(({ platformInfo }) => platformInfo);\n\nexport const useIsIosJTBApplicantWebView = (): boolean => {\n    const platformInfo = usePlatformInfo();\n    return (\n        platformInfo.userPlatform === 'IOS' && platformInfo.appType === 'applicant' && platformInfo.appDomain === 'JTB'\n    );\n};\n\nexport const useIsIosEmployerWebViewSpecificVersion = (applicationVersion: string): boolean => {\n    const platformInfo = usePlatformInfo();\n    return (\n        platformInfo.userPlatform === 'IOS' &&\n        platformInfo.appType === 'employer' &&\n        Boolean(applicationVersion) &&\n        platformInfo.appVersion === applicationVersion\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--UoVd0bARnLk6i1cGGWzB\",\"content\":\"content--V8yIaDLsPlKqz1lLwCb1\",\"text\":\"text--iBmRhF_fFHks7atU5Z3Z\",\"buttons\":\"buttons--AtDWJEIKBhb0O_BCBIvr\"};","import { useEffect, useRef, useState } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button from 'bloko/blocks/button';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Cookies from 'bloko/common/Cookies';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport { COOKIE_SUBSCRIPTION_INFORMER_NAME } from 'lux/components/SubscriptionInformer';\nimport translation from 'lux/components/translation';\nimport { useIsBelarus } from 'lux/hooks/useCountries';\nimport { useIsIosEmployerWebViewSpecificVersion, useIsIosJTBApplicantWebView } from 'lux/hooks/useIsWebView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport {\n    COOKIE_AGREEMENT_NAME,\n    RESELECT_PARAMETER,\n    COOKIE_EXPIRE_TIME,\n    LOCALSTORAGE_KEY,\n    clearCookies,\n    checkUrlAndReload,\n    setTopLevelCookie,\n} from 'lux/components/CookiesPolicy/utils';\n\nimport styles from './banner.less';\n\nconst TrlKeys = {\n    accept: 'cookiePolicy.banner.accept',\n    decline: 'cookiePolicy.banner.decline',\n    text: 'cookiePolicy.banner.text',\n    more: 'cookiePolicy.banner.more',\n};\n\nconst Features = {\n    cookiesPolicyBanner: 'cookies_policy_banner',\n    criticalCookiesRegexpList: 'critical_cookies_regexp_list',\n    cookiesPolicyExcludedAppVersion: 'cookies_policy_excluded_app_version',\n};\n\nconst CookiesPolicy: TranslatedComponent = ({ trls }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const isBelarus = useIsBelarus();\n    const topLevelDomain = useSelector((state) => state.topLevelDomain);\n    const isCookiesPolicyBannerEnabled = useSelector((state) => state.features[Features.cookiesPolicyBanner]);\n    const excludedAppVersion = useSelector(\n        (state) => state.features[Features.cookiesPolicyExcludedAppVersion]\n    ) as string;\n    const criticalCookiesRegexpList = useSelector(\n        (state) => (state.features[Features.criticalCookiesRegexpList] as string) || ''\n    );\n    const criticalCookiesRegexpString = useRef<string>(criticalCookiesRegexpList.split(/\\r\\n|\\n|\\r/).join('|'));\n    const reselectCookiePolicy = useSelector((state) => state.router.location.query?.[RESELECT_PARAMETER] === 'true');\n    const isIosJTBApplicantWebView = useIsIosJTBApplicantWebView();\n    const isExcludedAppVersion = useIsIosEmployerWebViewSpecificVersion(excludedAppVersion);\n    const shouldShow = isCookiesPolicyBannerEnabled && isBelarus && !isIosJTBApplicantWebView && !isExcludedAppVersion;\n\n    useEffect(() => {\n        if (!shouldShow) {\n            return;\n        }\n\n        const cookieAgreementValue = Cookies.get(COOKIE_AGREEMENT_NAME);\n        const isAlreadyAnswered = cookieAgreementValue !== null;\n        const needToClear = !isAlreadyAnswered || LocalStorageWrapper.getItem(LOCALSTORAGE_KEY);\n\n        setIsVisible(!isAlreadyAnswered || reselectCookiePolicy);\n\n        if (needToClear) {\n            clearCookies(topLevelDomain as string, criticalCookiesRegexpString.current);\n            LocalStorageWrapper.removeItem(LOCALSTORAGE_KEY);\n        }\n    }, [shouldShow, reselectCookiePolicy, topLevelDomain]);\n\n    if (!isVisible || !shouldShow) {\n        return null;\n    }\n\n    const setAgreed = () => {\n        setTopLevelCookie(COOKIE_AGREEMENT_NAME, 'true', COOKIE_EXPIRE_TIME);\n        setTopLevelCookie(COOKIE_SUBSCRIPTION_INFORMER_NAME, 'true', 1);\n        setIsVisible(false);\n        checkUrlAndReload();\n    };\n\n    const setDeclined = () => {\n        setTopLevelCookie(COOKIE_AGREEMENT_NAME, 'false', COOKIE_EXPIRE_TIME);\n        clearCookies(topLevelDomain as string, criticalCookiesRegexpString.current);\n        LocalStorageWrapper.setItem(LOCALSTORAGE_KEY, 'true');\n        setIsVisible(false);\n        checkUrlAndReload();\n    };\n\n    return (\n        <NoIndex>\n            <div className={styles.wrapper}>\n                <ColumnsWrapper>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        <div className={styles.content}>\n                            <div className={styles.text}>\n                                {trls[TrlKeys.text]}{' '}\n                                <Link to=\"/article/cookie_policy\" target=\"_blank\">\n                                    {trls[TrlKeys.more]}\n                                </Link>\n                            </div>\n                            <div className={styles.buttons}>\n                                <Button onClick={setDeclined} stretched>\n                                    {trls[TrlKeys.decline]}\n                                </Button>\n                                <Button onClick={setAgreed} stretched>\n                                    {trls[TrlKeys.accept]}\n                                </Button>\n                            </div>\n                        </div>\n                    </Column>\n                </ColumnsWrapper>\n            </div>\n        </NoIndex>\n    );\n};\n\nexport default translation(CookiesPolicy);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--Rig1AxQH8u2lNIsOqeDg\",\"content\":\"content--hBoUSbJDqRH4ckoAMooa\",\"text\":\"text--WoDDytZXbawqYJLLsZFA\",\"textDesktop\":\"text_desktop--D0SbacKBrOHJpxU72UiA\",\"textMobile\":\"text_mobile--Prf34HOdNZOEB2YYrq0p\",\"buttons\":\"buttons--rsxVkXYwWxeySpkbMj0J\"};","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport cookiesBannerAcceptButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/notifications/cookies_banner_accept_button_click';\nimport cookiesBannerElementShown from '@hh.ru/analytics-js-events/build/xhh/common/notifications/cookies_banner_element_shown';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport BlokoLink, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Cookies from 'bloko/common/Cookies';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsIosEmployerWebViewSpecificVersion } from 'lux/hooks/useIsWebView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { COOKIE_AGREEMENT_NAME, COOKIE_EXPIRE_TIME, setTopLevelCookie } from 'lux/components/CookiesPolicy/utils';\n\nimport styles from './informer.less';\n\nconst TrlKeys = {\n    accept: 'cookiePolicy.informer.accept',\n    text: 'cookiePolicy.informer.text',\n    textShort: 'cookiePolicy.informer.textShort',\n    linkText: 'cookiePolicy.informer.more',\n    linkTextShort: 'cookiePolicy.informer.moreShort',\n};\n\nconst Features = {\n    enableCookiePolicyInformer: 'enable_cookie_policy_informer',\n    cookiesPolicyExcludedAppVersion: 'cookies_policy_excluded_app_version',\n};\n\nconst COOKIE_POLICY_ARTICLE_LINK = '/article/cookie_policy';\nconst COOKIE_POLICY_BANNER_ENABLED_CLASS = 'cookie-policy-banner-enabled';\n\nconst isCookiesPolicyInformerVisibleAction = makeSetStoreField('isCookiesPolicyInformerVisible');\n\nconst CookiesPolicyInformer: TranslatedComponent = ({ trls }) => {\n    const enableCookiePolicyInformer = useFeatureEnabled(Features.enableCookiePolicyInformer);\n    const excludedAppVersion = useSelector(\n        (state) => state.features[Features.cookiesPolicyExcludedAppVersion]\n    ) as string;\n    const isRussia = useIsRussia();\n    const isExcludedAppVersion = useIsIosEmployerWebViewSpecificVersion(excludedAppVersion);\n    const isCookiesPolicyInformerVisible = useSelector((state) => state.isCookiesPolicyInformerVisible);\n    const dispatch = useDispatch();\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!isRussia || !enableCookiePolicyInformer || isExcludedAppVersion) {\n            return;\n        }\n\n        const cookieAgreementValue = Cookies.get(COOKIE_AGREEMENT_NAME);\n\n        dispatch(isCookiesPolicyInformerVisibleAction(cookieAgreementValue === null));\n    }, [dispatch, enableCookiePolicyInformer, isExcludedAppVersion, isRussia]);\n\n    useEffect(() => {\n        if (isCookiesPolicyInformerVisible && wrapperRef.current) {\n            cookiesBannerElementShown(wrapperRef.current);\n            document.body.classList.add(COOKIE_POLICY_BANNER_ENABLED_CLASS);\n        }\n\n        if (!isCookiesPolicyInformerVisible && document.body.classList.contains(COOKIE_POLICY_BANNER_ENABLED_CLASS)) {\n            document.body.classList.remove(COOKIE_POLICY_BANNER_ENABLED_CLASS);\n        }\n    }, [isCookiesPolicyInformerVisible]);\n\n    if (!isCookiesPolicyInformerVisible) {\n        return null;\n    }\n\n    const setAgreed = () => {\n        cookiesBannerAcceptButtonClick();\n        setTopLevelCookie(COOKIE_AGREEMENT_NAME, 'true', COOKIE_EXPIRE_TIME);\n        dispatch(isCookiesPolicyInformerVisibleAction(false));\n    };\n\n    return (\n        <NoIndex>\n            <div ref={wrapperRef} className={styles.wrapper} data-qa=\"cookies-policy-informer\">\n                <ColumnsWrapper>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        <div className={styles.content}>\n                            <div className={classnames(styles.text, styles.textDesktop)}>\n                                {trls[TrlKeys.text]}\n                                <br />\n                                <Link\n                                    to={COOKIE_POLICY_ARTICLE_LINK}\n                                    target=\"_blank\"\n                                    data-qa=\"cookies-policy-informer-link-desktop\"\n                                >\n                                    {trls[TrlKeys.linkText]}\n                                </Link>\n                            </div>\n                            <div className={classnames(styles.text, styles.textMobile)}>\n                                {trls[TrlKeys.textShort]}{' '}\n                                <BlokoLink\n                                    to={COOKIE_POLICY_ARTICLE_LINK}\n                                    Element={Link}\n                                    kind={LinkKind.Tertiary}\n                                    appearance={LinkAppearance.Underlined}\n                                    target=\"_blank\"\n                                    data-qa=\"cookies-policy-informer-link-mobile\"\n                                >\n                                    {trls[TrlKeys.linkTextShort]}\n                                </BlokoLink>\n                            </div>\n                            <div className={styles.buttons}>\n                                <Button\n                                    onClick={setAgreed}\n                                    kind={ButtonKind.Primary}\n                                    data-qa=\"cookies-policy-informer-accept\"\n                                >\n                                    {trls[TrlKeys.accept]}\n                                </Button>\n                            </div>\n                        </div>\n                    </Column>\n                </ColumnsWrapper>\n            </div>\n        </NoIndex>\n    );\n};\n\nexport default translation(CookiesPolicyInformer);\n","// extracted by mini-css-extract-plugin\nexport default {\"importantNotifications\":\"important-notifications--KwjY3GMbm2FeClfZhOKM\",\"importantNotificationsKindWarning\":\"important-notifications-kind-warning--tln1QwBIQCL3xUz9BY60\",\"importantNotificationsKindOk\":\"important-notifications-kind-ok--o626F2qCXWjlInq7cUo4\"};","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport styles from './important-notifications.less';\n\nexport enum ImportantNotificationsKind {\n    Ok,\n    Warning,\n}\n\nconst ImportantNotifications: FC<\n    {\n        kind?: ImportantNotificationsKind;\n        hasDefaultLayout?: boolean;\n    } & PropsWithChildren\n> = ({ children, kind, hasDefaultLayout = true }) => {\n    const content = hasDefaultLayout ? (\n        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n            {children}\n        </Column>\n    ) : (\n        <>{children}</>\n    );\n\n    return (\n        <div\n            className={classnames(styles.importantNotifications, {\n                [styles.importantNotificationsKindOk]: kind === ImportantNotificationsKind.Ok,\n                [styles.importantNotificationsKindWarning]: kind === ImportantNotificationsKind.Warning,\n            })}\n        >\n            <ColumnsWrapper>\n                <VSpacing base={3} />\n                {content}\n                <VSpacing base={3} />\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default ImportantNotifications;\n","import { useState } from 'react';\n\nimport Link, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport ImportantNotifications from 'lux/components/ImportantNotifications';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'emailVerificationInfo.notVerified',\n    send: 'emailVerificationInfo.send',\n    success: 'emailVerificationInfo.success',\n    check: 'emailVerificationInfo.check',\n    canGet: 'emailVerificationInfo.cantGet',\n    error: 'emailVerificationInfo.error',\n    tryAgain: 'emailVerificationInfo.tryAgain',\n};\n\nconst EmailVerification: TranslatedComponent = ({ trls }) => {\n    const { needVerification, email, mailURL } = useSelector(({ emailVerification }) => emailVerification);\n    const [isSuccess, setSuccess] = useState(false);\n    const [hasError, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n\n    if (!needVerification) {\n        return null;\n    }\n\n    const sendData = () => {\n        setLoading(true);\n\n        fetcher\n            .post('/shards/email_verification_send')\n            .then(() => {\n                setSuccess(true);\n                setError(false);\n            })\n            .catch(() => {\n                setSuccess(false);\n                setError(true);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <ImportantNotifications>\n            {!isSuccess && !hasError && (\n                <>\n                    {format(trls[TrlKeys.content], { '{0}': email || '' })}{' '}\n                    {!isLoading && (\n                        <Link appearance={LinkAppearance.Pseudo} kind={LinkKind.Inversed} onClick={sendData}>\n                            {trls[TrlKeys.send]}\n                        </Link>\n                    )}\n                    {isLoading && <Loading initial={LoadingColor.White} scale={LoadingScale.Small} />}\n                </>\n            )}\n            {isSuccess && (\n                <div>\n                    {trls[TrlKeys.success]}\n                    <Link href={mailURL} target=\"_blank\" kind={LinkKind.Inversed}>\n                        {trls[TrlKeys.check]}\n                    </Link>{' '}\n                    <Link href=\"/article/email_faq\" target=\"_blank\" kind={LinkKind.Inversed}>\n                        {trls[TrlKeys.canGet]}\n                    </Link>\n                    ?\n                </div>\n            )}\n            {hasError && (\n                <div>\n                    {trls[TrlKeys.error]}{' '}\n                    {!isLoading && (\n                        <Link appearance={LinkAppearance.Pseudo} kind={LinkKind.Inversed} onClick={sendData}>\n                            {trls[TrlKeys.tryAgain]}\n                        </Link>\n                    )}\n                    {isLoading && <Loading initial={LoadingColor.White} scale={LoadingScale.Small} />}\n                </div>\n            )}\n        </ImportantNotifications>\n    );\n};\n\nexport default translation(EmailVerification);\n","// extracted by mini-css-extract-plugin\nexport default {\"employerInfo\":\"employer-info--BONPgIFFovIoawXIG0Qm\",\"employerInfoButton\":\"employer-info-button--zzR6TLUdjyQMh16uAVXL\"};","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale, ButtonKind } from 'bloko/blocks/button';\nimport Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ImportantNotifications, { ImportantNotificationsKind } from 'lux/components/ImportantNotifications';\nimport translation from 'lux/components/translation';\nimport { EmployerSuspiciousState } from 'lux/models/employerStatus';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './employer-informer.less';\n\nconst TrlKeys = {\n    suspiciousContent: 'inform.employer.restricted.1',\n    suspiciousContentTwo: 'inform.employer.restricted.2',\n    load: 'inform.button.load',\n    pending: 'inform.employer.pending.1',\n    pendingTwo: 'inform.employer.pending.2',\n};\n\nconst EmployerInformer: TranslatedComponent = ({ trls }) => {\n    const suspiciousState = useSelector(({ employerStatus }) => employerStatus.suspiciousState);\n    let kind;\n\n    if (\n        suspiciousState === EmployerSuspiciousState.NotSuspicious ||\n        suspiciousState === EmployerSuspiciousState.TrustedSuspicious\n    ) {\n        return null;\n    }\n\n    let content;\n\n    switch (suspiciousState) {\n        case EmployerSuspiciousState.Suspicious:\n            kind = ImportantNotificationsKind.Warning;\n            content = (\n                <>\n                    <Column xs=\"4\" s=\"6\" m=\"10\" l=\"14\">\n                        <div className={styles.employerInfo}>\n                            <span>\n                                {trls[TrlKeys.suspiciousContent]}\n                                &#160;\n                            </span>\n                            <span>{trls[TrlKeys.suspiciousContentTwo]}</span>\n                        </div>\n                    </Column>\n                    <Column xs=\"4\" s=\"2\" m=\"2\" l=\"2\">\n                        <div className={styles.employerInfoButton}>\n                            <Button\n                                Element={Link}\n                                to=\"/employer/documents\"\n                                scale={ButtonScale.Small}\n                                kind={ButtonKind.Inversed}\n                            >\n                                {trls[TrlKeys.load]}\n                            </Button>\n                        </div>\n                    </Column>\n                </>\n            );\n            break;\n        case EmployerSuspiciousState.SuspiciousRemovalPending:\n            kind = ImportantNotificationsKind.Ok;\n            content = (\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <div className={styles.employerInfo}>\n                        <span>\n                            {trls[TrlKeys.pending]}\n                            &#160;\n                        </span>\n                        <span>{trls[TrlKeys.pendingTwo]}</span>\n                    </div>\n                </Column>\n            );\n            break;\n        default:\n            content = null;\n    }\n\n    return (\n        <ImportantNotifications kind={kind} hasDefaultLayout={false}>\n            {content}\n        </ImportantNotifications>\n    );\n};\n\nexport default translation(EmployerInformer);\n","import { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport BlokoLink from 'bloko/blocks/link';\nimport Modal, { ModalHeader, ModalTitle, ModalFooter } from 'bloko/blocks/modal';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport format from 'bloko/common/format';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Notices from 'Modules/Notices';\nimport translation from 'lux/components/translation';\n\nimport styles from './employer-zp-onboarding.less';\n\nconst TrlKeys = {\n    nextBtnStart: 'employer.zpOnboardingModal.nextBtnStart',\n    nextBtnContinue: 'employer.zpOnboardingModal.nextBtnContinue',\n    nextBtnEnd: 'employer.zpOnboardingModal.nextBtnEnd',\n    backBtn: 'employer.zpOnboardingModal.backBtn',\n    startHeader: 'employer.zpOnboardingModal.start.header',\n    startText: 'employer.zpOnboardingModal.start.text',\n    activeVacanciesHeader: 'employer.zpOnboardingModal.activeVacancies.header',\n    activeVacanciesText: 'employer.zpOnboardingModal.activeVacancies.text',\n    activeVacanciesMoreHeader: 'employer.zpOnboardingModal.activeVacanciesMore.header',\n    activeVacanciesMoreText: 'employer.zpOnboardingModal.activeVacanciesMore.text',\n    archivedVacanciesHeader: 'employer.zpOnboardingModal.archivedVacancies.header',\n    archivedVacanciesText: 'employer.zpOnboardingModal.archivedVacancies.text',\n    ordersHeader: 'employer.zpOnboardingModal.orders.header',\n    ordersText: 'employer.zpOnboardingModal.orders.text',\n    closingDocsHeader: 'employer.zpOnboardingModal.closingDocs.header',\n    closingDocsText: 'employer.zpOnboardingModal.closingDocs.text',\n    subscriptionsHeader: 'employer.zpOnboardingModal.subscriptions.header',\n    subscriptionText: 'employer.zpOnboardingModal.subscriptions.text',\n    favouritesHeader: 'employer.zpOnboardingModal.favourites.header',\n    favouritesText: 'employer.zpOnboardingModal.favourites.text',\n    endHeader: 'employer.zpOnboardingModal.end.header',\n    endText: 'employer.zpOnboardingModal.end.text',\n    endAdditionalInfoText: 'employer.zpOnboardingModal.end.additionalInfoText',\n    fromSteps: 'employer.zpOnboardingModal.fromSteps',\n};\n\ninterface EmployerZpOnboardingStepsConfig {\n    header: string;\n    text: string;\n    imageName: string;\n    additionalInfo?: {\n        link: string;\n        text: string;\n    };\n}\n\nconst stepsConfig: EmployerZpOnboardingStepsConfig[] = [\n    {\n        header: TrlKeys.startHeader,\n        text: TrlKeys.startText,\n        imageName: 'Start',\n    },\n    {\n        header: TrlKeys.activeVacanciesHeader,\n        text: TrlKeys.activeVacanciesText,\n        imageName: 'ActiveVacancies',\n    },\n    {\n        header: TrlKeys.activeVacanciesMoreHeader,\n        text: TrlKeys.activeVacanciesMoreText,\n        imageName: 'ActiveVacanciesMore',\n    },\n    {\n        header: TrlKeys.archivedVacanciesHeader,\n        text: TrlKeys.archivedVacanciesText,\n        imageName: 'ArchivedVacancies',\n    },\n    {\n        header: TrlKeys.ordersHeader,\n        text: TrlKeys.ordersText,\n        imageName: 'Orders',\n    },\n    {\n        header: TrlKeys.closingDocsHeader,\n        text: TrlKeys.closingDocsText,\n        imageName: 'ClosingDocs',\n    },\n    {\n        header: TrlKeys.subscriptionsHeader,\n        text: TrlKeys.subscriptionText,\n        imageName: 'Subscriptions',\n    },\n    {\n        header: TrlKeys.favouritesHeader,\n        text: TrlKeys.favouritesText,\n        imageName: 'Favourites',\n    },\n    {\n        header: TrlKeys.endHeader,\n        text: TrlKeys.endText,\n        additionalInfo: {\n            link: 'https://feedback.hh.ru/zp/knowledge-base/articles/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BE%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%BC_1',\n            text: TrlKeys.endAdditionalInfoText,\n        },\n        imageName: 'End',\n    },\n];\n\nconst EMPLOYER_ZP_ONBOARDING_MODAL = 'employerZpOnboardingModal';\n\nconst getNextButtonTrl = (isStart: boolean, isEnd: boolean): string => {\n    let nextButtonTrl = '';\n    if (isStart) {\n        nextButtonTrl = TrlKeys.nextBtnStart;\n    } else if (isEnd) {\n        nextButtonTrl = TrlKeys.nextBtnEnd;\n    } else {\n        nextButtonTrl = TrlKeys.nextBtnContinue;\n    }\n    return nextButtonTrl;\n};\n\nconst EmployerZpOnboarding: TranslatedComponent = ({ trls }) => {\n    const [showModal, setShowModal] = useState(true);\n    const [step, setStep] = useState(0);\n    const isStart = step === 0;\n    const isEnd = step === stepsConfig.length - 1;\n    const breakpoint = useBreakpoint();\n    const isAllowedScreen = breakpoint !== Breakpoint.XS;\n    const onClose = () => {\n        setShowModal(false);\n        if (!isEnd) {\n            Notices.markAsViewed(EMPLOYER_ZP_ONBOARDING_MODAL);\n        }\n    };\n    const next = () => (isEnd ? onClose() : setStep(step + 1));\n    const back = () => (isStart ? undefined : setStep(step - 1));\n\n    useEffect(() => {\n        if (isEnd) {\n            Notices.markAsViewed(EMPLOYER_ZP_ONBOARDING_MODAL);\n        }\n    }, [isEnd]);\n\n    if (!isAllowedScreen) {\n        return null;\n    }\n\n    const nextBtnTrl = getNextButtonTrl(isStart, isEnd);\n    const { header, text, imageName, additionalInfo } = stepsConfig[step];\n\n    return (\n        <Modal visible={showModal} onClose={onClose}>\n            <ModalHeader>\n                <ModalTitle data-qa=\"employerZpOnboarding-modal-header\">{trls[header]}</ModalTitle>\n                <VSpacing base={5} />\n                <Text size={TextSize.Large}>\n                    {trls[text]}\n                    {additionalInfo && (\n                        <BlokoLink href={additionalInfo.link} target=\"_blank\">\n                            {trls[additionalInfo.text]}\n                        </BlokoLink>\n                    )}\n                </Text>\n            </ModalHeader>\n            <div\n                className={classnames(styles.employerZpOnboardingImage, [\n                    styles[`employerZpOnboardingImage${imageName}`],\n                ])}\n                data-qa=\"employerZpOnboarding-modal-img\"\n            />\n            <ModalFooter>\n                <div className={styles.employerZpOnboardingFooterWrapper}>\n                    <Text size={TextSize.Medium} data-qa=\"employerZpOnboarding-modal-slideCount\">\n                        {format(trls[TrlKeys.fromSteps], {\n                            '{0}': step + 1,\n                            '{1}': stepsConfig.length,\n                        })}\n                    </Text>\n                    <div className={styles.employerZpOnboardingFooterControls}>\n                        {!isStart && !isEnd && (\n                            <>\n                                <Button onClick={back} data-qa=\"employerZpOnboarding-modal-backBtn\">\n                                    {trls[TrlKeys.backBtn]}\n                                </Button>\n                                <FormSpacer />\n                            </>\n                        )}\n                        <Button kind={ButtonKind.Primary} onClick={next} data-qa=\"employerZpOnboarding-modal-nextBtn\">\n                            {trls[nextBtnTrl]}\n                        </Button>\n                    </div>\n                </div>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(EmployerZpOnboarding);\n","// extracted by mini-css-extract-plugin\nexport default {\"footerMobileBanner\":\"footer-mobile-banner--par3SXLB_uSowWs6TIXu\",\"footerMobileBannerApp\":\"footer-mobile-banner-app--SBgdBMeY8tNl8VKhf6Ib\",\"footerMobileBannerHeader\":\"footer-mobile-banner-header--gLeYF3IPPINVEOQkrIzr\",\"footerMobileBannerDescription\":\"footer-mobile-banner-description--W93uUYmrDfn1ZKyZiU5v\",\"footerMobileBannerDescriptionAdditional\":\"footer-mobile-banner-description-additional--nYCnA9mj_mTgZPqPzvCL\",\"footerMobileBannerAppButton\":\"footer-mobile-banner-app-button--FfTs5kSxknGfT1r51b5s\",\"footerMobileBannerImage\":\"footer-mobile-banner-image--_IMH8Tukewfi_PQRHPyT\",\"footerMobileBannerImagePhone\":\"footer-mobile-banner-image-phone--Q5LvFX1IVQFGPgZWeHP2\",\"footerMobileBannerImageInvite\":\"footer-mobile-banner-image-invite--mSIIEY8JZqHrFEg_9RQW\",\"footerMobileBannerImageApp\":\"footer-mobile-banner-image-app--UonazigzqA_sIYP3oCxE\",\"footerMobileBannerQrCode\":\"footer-mobile-banner-qr-code--eHrP3ykySgVonlzfRteG\",\"footerMobileBannerQrCodeJtb\":\"footer-mobile-banner-qr-code-jtb--ehBfPVxhXWVot6s9Y6vJ\"};","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { H1 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './footer-mobile-banner.less';\n\nconst TrlKeys = {\n    header: 'supernova.footer.mobile.banner.header',\n    description: 'supernova.footer.mobile.banner.description.qr',\n    additional: 'supernova.footer.mobile.banner.description.additional',\n    appButton: 'supernova.footer.mobile.banner.appButton',\n};\n\ninterface MobileBannerContentProps {\n    href: string;\n    hasAppLink: boolean;\n}\n\nconst MobileBannerContent: TranslatedComponent<MobileBannerContentProps> = ({ trls, href, hasAppLink }) => {\n    const hhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n    const url = urlParser(href);\n    url.params = { ...url.params, [`footer_banner`]: [hhtmSource] };\n\n    return (\n        <>\n            <div className={styles.footerMobileBannerHeader}>\n                <H1 Element=\"div\" lite>\n                    {trls[TrlKeys.header]}\n                </H1>\n                <VSpacing base={4} />\n            </div>\n            <div className={styles.footerMobileBannerDescription}>\n                {trls[TrlKeys.description]}{' '}\n                {!hasAppLink && (\n                    <div className={styles.footerMobileBannerDescriptionAdditional}>{trls[TrlKeys.additional]}</div>\n                )}\n            </div>\n\n            {hasAppLink && (\n                <div className={styles.footerMobileBannerAppButton}>\n                    <Button Element={Link} kind={ButtonKind.Primary} stretched to={url.href}>\n                        {trls[TrlKeys.appButton]}\n                    </Button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default translation(MobileBannerContent);\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './footer-mobile-banner.less';\n\ninterface MobileBannerImageProps {\n    hasAppLink: boolean;\n}\n\nconst MobileBannerImage: FC<MobileBannerImageProps & PropsWithChildren> = ({ hasAppLink }) => (\n    <div\n        className={classnames(styles.footerMobileBannerImage, {\n            [styles.footerMobileBannerImageApp]: hasAppLink,\n        })}\n    >\n        <div className={styles.footerMobileBannerImagePhone}>\n            <div className={styles.footerMobileBannerImageInvite}></div>\n        </div>\n    </div>\n);\n\nexport default MobileBannerImage;\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport MobileBannerContent from 'lux/components/Footer/MobileBanner/Content';\nimport MobileBannerImage from 'lux/components/Footer/MobileBanner/Image';\n\nimport styles from './footer-mobile-banner.less';\n\nconst MobileBanner: FC = () => {\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n    const appLink = useSelector(({ appLink }) => appLink);\n\n    const content = appLink.detected ? (\n        <>\n            <Column xs=\"4\" s=\"4\" m=\"5\" l=\"5\">\n                <MobileBannerContent href={appLink.href} hasAppLink />\n            </Column>\n            <Column xs=\"0\" s=\"0\" m=\"2\" l=\"2\" />\n            <Column xs=\"4\" s=\"4\" m=\"5\" l=\"5\">\n                <MobileBannerImage hasAppLink />\n            </Column>\n        </>\n    ) : (\n        <>\n            <Column xs=\"0\" s=\"3\" m=\"5\" l=\"5\">\n                <MobileBannerContent href={appLink.href} hasAppLink={false} />\n            </Column>\n            <Column xs=\"0\" s=\"2\" m=\"2\" l=\"2\">\n                <div\n                    className={classnames(styles.footerMobileBannerQrCode, {\n                        [styles.footerMobileBannerQrCodeJtb]: topLevelSite === TopLevelSite.BY,\n                    })}\n                />\n            </Column>\n            <Column xs=\"0\" s=\"0\" m=\"1\" l=\"1\" />\n            <Column xs=\"0\" s=\"3\" m=\"4\" l=\"5\">\n                <MobileBannerImage hasAppLink={false} />\n            </Column>\n        </>\n    );\n\n    return (\n        <div\n            className={classnames(styles.footerMobileBanner, {\n                [styles.footerMobileBannerApp]: appLink.detected,\n            })}\n        >\n            <ColumnsWrapper>\n                <Column xs=\"0\" s=\"0\" m=\"0\" l=\"2\"></Column>\n                {content}\n                <Column xs=\"0\" s=\"0\" m=\"0\" l=\"1\"></Column>\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default MobileBanner;\n","import { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst useUserTypeForMenu = (userTypeForCheck: SupernovaUserType): boolean => {\n    const userType = useSelector(({ userType }) => userType);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n\n    if (userTypeForCheck === SupernovaUserType.Applicant) {\n        return userType === UserType.Applicant || SupernovaUserType.Applicant === supernovaUserType;\n    }\n\n    return userType === UserType.Employer || SupernovaUserType.Employer === supernovaUserType;\n};\n\nexport default useUserTypeForMenu;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'index.footer.menuitem.copyright',\n};\n\nconst currentYear = new Date().getFullYear();\n\nconst FooterCopyright: TranslatedComponent = ({ trls }) => {\n    return (\n        <span suppressHydrationWarning>\n            {format(trls[TrlKeys.title], {\n                '{0}': currentYear,\n            })}\n        </span>\n    );\n};\n\nexport default translation(FooterCopyright);\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const applicationItemClick = (item: string): void =>\n    Analytics.sendHHEventButtonClick(`footer_application_item_${item}`);\n\nexport const applicationItemsShown = (element: HTMLElement, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: 'footer_application_items',\n        item: items,\n    });\n};\n\nexport const navigationItemClick = (item: string): void =>\n    Analytics.sendHHEventButtonClick(`footer_navigation_item_${item}`);\n\nexport const navigationItemsShown = (element: HTMLElement, section: string, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: 'footer_navigation_items',\n        section,\n        item: items,\n    });\n};\n\nexport const servicesItemClick = (item: string): void => {\n    Analytics.sendHHEventButtonClick(item);\n};\n\nexport const servicesItemShown = (element: HTMLElement, params: Record<string, string>): void => {\n    Analytics.sendHHEventElementShown(element, params);\n};\n\nexport const socialNetworkItemsShown = (element: HTMLElement, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: 'footer_social_network_items',\n        item: items,\n    });\n};\n\nexport default {\n    applicationItemClick,\n    applicationItemsShown,\n    navigationItemClick,\n    navigationItemsShown,\n    servicesItemClick,\n    servicesItemShown,\n    socialNetworkItemsShown,\n};\n","import { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Text, TextTypography, VSpacing } from '@hh.ru/magritte-ui';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport footerAnalytics from 'lux/components/Footer/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport MobileAppButton from 'lux/components/Footer/MobileAppButtons/MobileAppButton';\n\nimport styles from './mobile-app-buttons.less';\n\nconst TrlKeys = {\n    title: 'supernova.navi.footer.mobileApps',\n};\n\nconst getAppLinkHref = (appHref: string, mobilePage: string | null) => {\n    if (mobilePage) {\n        return `${mobilePage}?from=footer&hhtmFromLabel=footer`;\n    }\n\n    const parsedUrl = urlParser(appHref);\n    parsedUrl.params = { ...parsedUrl.params, footer: '' };\n\n    return parsedUrl.href;\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\ninterface MobileAppLinksProps {\n    isApplicant: boolean;\n    showHeader?: boolean;\n    desktopView?: 'qr' | 'buttons';\n}\n\nconst getQrCodeDataQa = (isEmployer: boolean, isRabotaBy: boolean): string => {\n    let dataQa = 'footer-mobile-app-qr-code';\n\n    dataQa += isEmployer ? '_empl' : '_appl';\n\n    if (isRabotaBy) {\n        dataQa += '_rabotaby';\n    }\n\n    return dataQa;\n};\n\nconst MobileAppLinks: TranslatedComponent<MobileAppLinksProps> = ({\n    trls,\n    isApplicant,\n    showHeader = true,\n    desktopView = 'qr',\n}) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const applicationItemsRef = useRef(null);\n    const { mobilePage, apps } = useSelector((state) => state.stayInTouch);\n    const userType = useSelector(({ userType }) => userType);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const device = useSelector(({ device }) => device);\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && apps?.length && applicationItemsRef.current) {\n            footerAnalytics.applicationItemsShown(\n                applicationItemsRef.current,\n                apps.map((item) => item.name)\n            );\n        }\n    }, [apps, employerMainPageAnalyticsEnabled]);\n\n    const isRabotaBy = topLevelSite === TopLevelSite.BY;\n    const isEmployer = !isApplicant;\n\n    if (!apps.length) {\n        return null;\n    }\n\n    return (\n        <div ref={applicationItemsRef}>\n            {showHeader && (\n                <>\n                    <Text typography={TextTypography.Label2Regular}>{trls[TrlKeys.title]}</Text>\n\n                    <VSpacing default={12} />\n                </>\n            )}\n\n            <div\n                className={classNames(styles.mobileAppButtons, {\n                    [styles.onlyButtons]: desktopView === 'buttons',\n                })}\n            >\n                {apps.map(({ href, name }) => (\n                    <MobileAppButton\n                        key={name}\n                        name={name}\n                        appLink={getAppLinkHref(href, device?.type ? null : mobilePage)}\n                        onClickLink={() => {\n                            if (userType === UserType.Employer || supernovaUserType === SupernovaUserType.Employer) {\n                                Analytics.sendEvent(userType, 'click_hrmobile', 'footer');\n                            }\n                            if (employerMainPageAnalyticsEnabled) {\n                                footerAnalytics.applicationItemClick(name);\n                            }\n                        }}\n                    />\n                ))}\n            </div>\n\n            {desktopView === 'qr' && (\n                <div className={styles.qrCode}>\n                    <div\n                        className={classNames(styles.qr, {\n                            [styles.qrApplicant]: isApplicant,\n                            [styles.qrEmployer]: isEmployer,\n                            [styles.qrApplicantRabotaby]: isRabotaBy && isApplicant,\n                            [styles.qrEmployerRabotaby]: isRabotaBy && isEmployer,\n                        })}\n                        data-qa={getQrCodeDataQa(isEmployer, isRabotaBy)}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default translation(MobileAppLinks);\n","import { FC, PropsWithChildren } from 'react';\n\nimport { HSpacingContainer, VSpacing, Button, ButtonMode, Text, TextTypography } from '@hh.ru/magritte-ui';\nimport { TelegramSize24, ViberSize24, VkSize24 } from '@hh.ru/magritte-ui/service';\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nconst EnumChatBotInvariants = {\n    Telegram: 'chatBotTelegram',\n    Viber: 'chatBotViber',\n    Vk: 'chatBotVk',\n};\n\nconst Icon = {\n    [EnumChatBotInvariants.Telegram]: <TelegramSize24 />,\n    [EnumChatBotInvariants.Viber]: <ViberSize24 />,\n    [EnumChatBotInvariants.Vk]: <VkSize24 />,\n};\n\nconst NavItemsChatBot: FC<NavItem & PropsWithChildren> = ({ subItems, translations }) => {\n    return (\n        <>\n            <Text typography={TextTypography.Label2Regular}>{translations.name}</Text>\n\n            <VSpacing default={8} />\n\n            <HSpacingContainer default={16}>\n                {subItems?.map(({ url, name }) => (\n                    <Button\n                        mode={ButtonMode.Secondary}\n                        Element={Link}\n                        to={url}\n                        target=\"_blank\"\n                        key={name}\n                        hideLabel\n                        icon={Icon[name]}\n                        ariaLabel={name}\n                    >\n                        {name}\n                    </Button>\n                ))}\n            </HSpacingContainer>\n        </>\n    );\n};\n\nexport default NavItemsChatBot;\n","// extracted by mini-css-extract-plugin\nexport default {\"footerIcon\":\"footer-icon--n1aiaZYDlWYBMGkp0UXy\",\"footerIconLangEn\":\"footer-icon_lang-en--rgBuNdC64720KoixcvAq\",\"footerIconLangRu\":\"footer-icon_lang-ru--e8GX6NpXNHExVJlJrok7\",\"footerIconLangUa\":\"footer-icon_lang-ua--WyYtq3mpmMMU4r24UiRj\",\"footerIconLangKz\":\"footer-icon_lang-kz--wqKwvu1fQKKmh7htggIe\",\"footerIconLangUz\":\"footer-icon_lang-uz--MkQ909E7Lwq6LSn7wkjb\",\"footerIconLangAz\":\"footer-icon_lang-az--upnGpq7R6gu27edZS0MC\",\"footerIconLangKg\":\"footer-icon_lang-kg--tjzmJZb8X2pW1lMlqfZA\",\"footerIconEmployer\":\"footer-icon_employer--KWdFGMr_fLZ54Au6Z12F\"};","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './icon.less';\n\nexport enum FooterIconKind {\n    LangRU,\n    LangUA,\n    LangUZ,\n    LangKZ,\n    LangAZ,\n    LangEN,\n    LangKG,\n    Employer,\n}\n\ninterface IconProps {\n    kind: FooterIconKind;\n}\n\nconst Icon: FC<IconProps> = ({ kind }) => (\n    <span\n        className={classnames(styles.footerIcon, {\n            [styles.footerIconLangRu]: kind === FooterIconKind.LangRU,\n            [styles.footerIconLangUa]: kind === FooterIconKind.LangUA,\n            [styles.footerIconLangUz]: kind === FooterIconKind.LangUZ,\n            [styles.footerIconLangKz]: kind === FooterIconKind.LangKZ,\n            [styles.footerIconLangAz]: kind === FooterIconKind.LangAZ,\n            [styles.footerIconLangEn]: kind === FooterIconKind.LangEN,\n            [styles.footerIconLangKg]: kind === FooterIconKind.LangKG,\n            [styles.footerIconEmployer]: kind === FooterIconKind.Employer,\n        })}\n    />\n);\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport default {\"lang\":\"lang--N5GSKUyI3fBf0bLLxFVh\"};","import { VendorAnalytics } from '@hh.ru/analytics-js';\nimport { Link, LinkStyle, TextTypography } from '@hh.ru/magritte-ui';\nimport { Link as SPALink } from '@hh.ru/redux-spa-middleware';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport FooterIcon, { FooterIconKind } from 'lux/components/Footer/Icon';\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\nimport { SiteLanguages } from 'lux/models/locale.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './lang.less';\n\nconst TrlKeys = {\n    [SiteLanguages.RU]: 'navi.lang.switch.RU',\n    [SiteLanguages.UA]: 'navi.lang.switch.UA',\n    [SiteLanguages.AZ]: 'navi.lang.switch.AZ',\n    [SiteLanguages.KZ]: 'navi.lang.switch.KZ',\n    [SiteLanguages.EN]: 'navi.lang.switch.EN',\n    [SiteLanguages.UZ]: 'navi.lang.switch.UZ',\n    [SiteLanguages.KG]: 'navi.lang.switch.KG',\n};\n\ninterface LangProps {\n    isMobileFriendly: boolean;\n    onClick?: () => void;\n}\n\nconst buildLocaleUrl = (language: keyof typeof SiteLanguages, backUrl: string): string => {\n    const url = urlParser('/locale');\n    url.params = {\n        language,\n        backUrl,\n    };\n    return url.href;\n};\n\nconst Lang: TranslatedComponent<LangProps> = ({ trls, isMobileFriendly, onClick }) => {\n    const availableLanguages = useSelector(({ locale }) => locale.availableLanguages);\n    const siteLanguage = useSelector(({ locale }) => locale.siteLanguage);\n    const languagesToSwitch = availableLanguages.filter((lang) => lang !== siteLanguage);\n\n    const backUrl = useSelector((state) => state.request.url);\n\n    return (\n        <>\n            {languagesToSwitch.map((lang) => (\n                <li key={lang} className={styles.lang}>\n                    <NoIndex />\n                    <Link\n                        Element={SPALink}\n                        data-qa={`change-locale-${lang}${isMobileFriendly ? '-xs' : ''}`}\n                        to={buildLocaleUrl(lang, backUrl)}\n                        onClick={() => {\n                            VendorAnalytics.eventToStorage('Change_language', lang, siteLanguage);\n                            onClick && onClick();\n                        }}\n                        isSeoLink\n                        style={LinkStyle.Neutral}\n                        typography={TextTypography.Label3Regular}\n                    >\n                        {trls[TrlKeys[lang]]}\n                        <FooterIcon kind={FooterIconKind[`Lang${lang}`]} />\n                    </Link>\n\n                    <NoIndex />\n                </li>\n            ))}\n        </>\n    );\n};\n\nexport default translation(Lang);\n","import { FC, PropsWithChildren } from 'react';\n\nimport SupernovaLink, { SupernovaLinkKind } from 'lux/components/SupernovaMainMenu/Link';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\ninterface NaviItemLinkProps extends NavItem {\n    dataQa: string;\n    kind: SupernovaLinkKind;\n    onClick?: () => void;\n}\n\nconst NaviItemLink: FC<NaviItemLinkProps & PropsWithChildren> = ({\n    name,\n    url,\n    translations,\n    target,\n    dataQa,\n    kind,\n    onClick,\n}) => {\n    const targetProps = target ? { target } : {};\n\n    if (!url) {\n        return null;\n    }\n\n    return (\n        <SupernovaLink\n            to={url}\n            kind={kind}\n            data-page-analytics-event={`footer_link.${name}`}\n            data-qa={dataQa}\n            onClick={onClick}\n            {...targetProps}\n        >\n            {translations.name}\n        </SupernovaLink>\n    );\n};\n\nexport default NaviItemLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"navItemsWrapper\":\"nav-items-wrapper--M4V_LouiNBk0mVbJKsEu\",\"horizontal\":\"horizontal--e4P3glF6UVRWqDFChuUh\"};","import { FC, useRef, useEffect, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport { Text, TextTypography, VSpacing } from '@hh.ru/magritte-ui';\n\nimport footerAnalytics from 'lux/components/Footer/analytics';\nimport { SupernovaLinkKind } from 'lux/components/SupernovaMainMenu/Link';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport ChatBot from 'lux/components/Footer/NavItems/ChatBot';\nimport Lang from 'lux/components/Footer/NavItems/Lang';\nimport NavItemLink from 'lux/components/Footer/NavItems/NavItemLink';\n\nimport styles from './index.less';\n\ninterface NaviItemsProps {\n    nav?: NavItem;\n    showHeader?: boolean;\n    isMobileFriendly?: boolean;\n    linkKind?: SupernovaLinkKind;\n    direction?: 'vertical' | 'horizontal';\n    spacing?: ReactNode;\n}\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst NaviItems: FC<NaviItemsProps> = ({\n    nav,\n    showHeader = false,\n    isMobileFriendly = false,\n    linkKind = SupernovaLinkKind.MagritteNeutralSecondary,\n    direction = 'vertical',\n    spacing,\n}) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const navLinksRef = useRef(null);\n    const items = nav?.subItems || [];\n    const navName = nav?.name || '';\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && items?.length && navLinksRef.current) {\n            footerAnalytics.navigationItemsShown(\n                navLinksRef.current,\n                navName,\n                items.map((item) => item.name)\n            );\n        }\n    }, [employerMainPageAnalyticsEnabled, items, navName]);\n\n    if (!nav || items?.length === 0) {\n        return null;\n    }\n\n    return (\n        <>\n            {showHeader && (\n                <>\n                    <Text typography={TextTypography.Label2Regular}>{nav.translations.name}</Text>\n                    <VSpacing default={12} />\n                </>\n            )}\n\n            <ul\n                ref={navLinksRef}\n                className={classNames(styles.navItemsWrapper, {\n                    [styles.horizontal]: direction === 'horizontal',\n                })}\n            >\n                {items?.map((menu) => {\n                    let content = null;\n\n                    switch (menu.name) {\n                        case 'lang':\n                            return (\n                                <Lang\n                                    isMobileFriendly={isMobileFriendly}\n                                    key={menu.name}\n                                    onClick={\n                                        employerMainPageAnalyticsEnabled\n                                            ? () => footerAnalytics.navigationItemClick(menu.name)\n                                            : undefined\n                                    }\n                                    {...menu}\n                                />\n                            );\n                        case 'chatBot':\n                            content = <ChatBot {...menu} />;\n                            break;\n                        default:\n                            content = (\n                                <NavItemLink\n                                    dataQa={`footer_${menu.name}${isMobileFriendly ? '-xs' : ''}`}\n                                    kind={linkKind}\n                                    onClick={\n                                        employerMainPageAnalyticsEnabled\n                                            ? () => footerAnalytics.navigationItemClick(menu.name)\n                                            : undefined\n                                    }\n                                    {...menu}\n                                />\n                            );\n                    }\n\n                    return <li key={menu.name}>{content}</li>;\n                })}\n            </ul>\n\n            {spacing}\n        </>\n    );\n};\n\nexport default NaviItems;\n","// extracted by mini-css-extract-plugin\nexport default {\"navItemsWrapper\":\"nav-items-wrapper--J7ILJtfwlRmekKD57gXu\",\"navItem\":\"nav-item--l9yngXUbepc_YZACduhQ\"};","import { FC, useRef, useEffect } from 'react';\n\nimport footerAnalytics from 'lux/components/Footer/analytics';\nimport { SupernovaLinkKind } from 'lux/components/SupernovaMainMenu/Link';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport NavItemLink from 'lux/components/Footer/NavItems/NavItemLink';\n\nimport styles from './docs-nav-items.less';\n\ninterface NaviItemsProps {\n    nav?: NavItem;\n    isMobileFriendly?: boolean;\n    linkKind?: SupernovaLinkKind;\n}\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst NavItemsDocs: FC<NaviItemsProps> = ({\n    nav,\n    isMobileFriendly = false,\n    linkKind = SupernovaLinkKind.MagritteNeutralSecondary,\n}) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const navLinksRef = useRef(null);\n    const items = nav?.subItems || [];\n    const navName = nav?.name || '';\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && items?.length && navLinksRef.current) {\n            footerAnalytics.navigationItemsShown(\n                navLinksRef.current,\n                navName,\n                items.map((item) => item.name)\n            );\n        }\n    }, [employerMainPageAnalyticsEnabled, items, navName]);\n\n    return (\n        <ul ref={navLinksRef} className={styles.navItemsWrapper}>\n            {items?.map((menu) => (\n                <li key={menu.name} className={styles.navItem}>\n                    <NavItemLink\n                        key={menu.url}\n                        dataQa={`footer_${menu.name}${isMobileFriendly ? '-xs' : ''}`}\n                        kind={linkKind}\n                        onClick={\n                            employerMainPageAnalyticsEnabled\n                                ? () => footerAnalytics.navigationItemClick(menu.name)\n                                : undefined\n                        }\n                        {...menu}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default NavItemsDocs;\n","// extracted by mini-css-extract-plugin\nexport default {\"footerNavSeparator\":\"footer-nav-separator--eVvYxaAPfbr72eutG9Tq\",\"abstractLinkLoading\":\"abstract-link-loading--qVPQsnNj_61Cmm8_HUqk\"};","import { FC, PropsWithChildren } from 'react';\n\nimport styles from './nav-separator.less';\n\nconst NavSeparator: FC<PropsWithChildren> = ({ children }) => {\n    return <div className={styles.footerNavSeparator}>{children}</div>;\n};\n\nexport default NavSeparator;\n","import Link from '@hh.ru/redux-spa-middleware/lib/Link';\nimport BlokoLink, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    info: 'index.footer.menuitem.recommendTechInfo',\n    link: 'index.footer.menuitem.recommendTechInfo.link',\n};\n\nconst FooterRecommendTechInfo: TranslatedComponent = ({ trls }) => {\n    return (\n        <span data-qa=\"footer-recommendTechInfo\">\n            {formatToReactComponent(trls[TrlKeys.info], {\n                '{link}': (\n                    <BlokoLink\n                        Element={Link}\n                        disableVisited\n                        to=\"/article/recommendation_technologies\"\n                        kind={LinkKind.Secondary}\n                        appearance={LinkAppearance.Underlined}\n                    >\n                        {trls[TrlKeys.link]}\n                    </BlokoLink>\n                ),\n            })}\n        </span>\n    );\n};\n\nexport default translation(FooterRecommendTechInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"requisitesImg\":\"requisites-img--GNS9u6DkNRVu9DZQmACU\",\"requisitesImgMastercard\":\"requisites-img-mastercard--NRqchpH3OQHvwxwFM7fR\",\"requisitesImgVisa\":\"requisites-img-visa--jnZd3c36nBBdvaWLJ48H\",\"requisitesImgBelcard\":\"requisites-img-belcard--iRCVFBPa4vRVXdaZz6v5\",\"requisitesImgInternetparol\":\"requisites-img-internetparol--Q60ba7OtmqQB33nm_bQe\",\"requisitesImgMir\":\"requisites-img-mir--Ha_tE2IujWfOxeb2CWLu\",\"requisitesImgMirAccept\":\"requisites-img-mir-accept--RgyVrAkSSCBcUQayLBuE\"};","import VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './requisites.less';\n\nconst TrlKeys = {\n    requisites: 'index.footer.requisites',\n    bankRequisites: 'index.footer.bankRequisites',\n    requisitesAdditional: 'index.footer.requisites.additional',\n    bankRequisitesAdditional: 'index.footer.bankRequisites.additional',\n};\n\nconst FooterRequisites: TranslatedComponent = ({ trls }) => {\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n    const staticHost = useSelector(({ config }) => config.staticHost);\n\n    if (topLevelSite !== TopLevelSite.BY) {\n        return null;\n    }\n\n    return (\n        <>\n            <p>{formatNewLine(trls[TrlKeys.requisites])}</p>\n            <VSpacing base={2}></VSpacing>\n            <p>{formatNewLine(trls[TrlKeys.bankRequisites])}</p>\n            <VSpacing base={6}></VSpacing>\n            <p>\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgMastercard}`}\n                    src={`${staticHost}/images/creditcards/grey-mastercard.svg?v=22042022`}\n                    alt=\"mastercard\"\n                />\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgVisa}`}\n                    src={`${staticHost}/images/creditcards/grey-visa.svg?v=22042022`}\n                    alt=\"visa\"\n                />\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgBelcard}`}\n                    src={`${staticHost}/images/creditcards/grey-belcart.svg?v=28122023`}\n                    alt=\"belcart\"\n                />\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgInternetparol}`}\n                    src={`${staticHost}/images/creditcards/grey-belcart-internetparol.svg?v=28122023`}\n                    alt=\"belcart-internetparol\"\n                />\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgMir}`}\n                    src={`${staticHost}/images/creditcards/grey-mir.svg`}\n                    alt=\"mir\"\n                />\n                <img\n                    loading=\"lazy\"\n                    className={`${styles.requisitesImg} ${styles.requisitesImgMirAccept}`}\n                    src={`${staticHost}/images/creditcards/grey-mir-accept.svg`}\n                    alt=\"mir-accept\"\n                />\n            </p>\n        </>\n    );\n};\n\nexport default translation(FooterRequisites);\n","// extracted by mini-css-extract-plugin\nexport default {\"footerSocial\":\"footer-social--eSzykTzMxkLTYvNSPHx2\",\"spin\":\"spin--GLntWKMUH3Irsw6pskAP\"};","import { FC, PropsWithChildren, useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Button, ButtonMode } from '@hh.ru/magritte-ui';\nimport {\n    VkSize24,\n    FacebookSize24,\n    OkSize24,\n    TwitterSize24,\n    InstagramDefaultSize24,\n    TelegramSize24,\n    ViberSize24,\n    DzenSize24,\n} from '@hh.ru/magritte-ui/service';\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport footerAnalytics from 'lux/components/Footer/analytics';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './social-networks.less';\n\nconst socialIconsMap = {\n    vk: <VkSize24 />,\n    fb: <FacebookSize24 />,\n    ok: <OkSize24 />,\n    twitter: <TwitterSize24 />,\n    instagram: <InstagramDefaultSize24 />,\n    telegram: <TelegramSize24 />,\n    viber: <ViberSize24 />,\n    dzen: <DzenSize24 />,\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst SocialNetworks: FC<PropsWithChildren> = () => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const links = useSelector(({ socialNetworksLinks }) => socialNetworksLinks);\n    const socialNetworkItemsRef = useRef(null);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && links?.length && socialNetworkItemsRef.current) {\n            footerAnalytics.socialNetworkItemsShown(\n                socialNetworkItemsRef.current,\n                links.map((item) => item.name)\n            );\n        }\n    }, [employerMainPageAnalyticsEnabled, links]);\n\n    return (\n        <div ref={socialNetworkItemsRef} className={styles.footerSocial}>\n            {links?.map((link) => (\n                <Button\n                    mode={ButtonMode.Tertiary}\n                    Element={Link}\n                    to={link.url}\n                    target=\"_blank\"\n                    key={link.name}\n                    hideLabel\n                    icon={socialIconsMap[link.name]}\n                    ariaLabel={link.name}\n                    rel=\"noopener noreferrer nofollow\"\n                    onClick={() => {\n                        Analytics.sendHHEventButtonClick(`footer_${link.name}`, {\n                            goal: `/virtual/click/social/${link.name}`,\n                        });\n                    }}\n                >\n                    {link.name}\n                </Button>\n            ))}\n        </div>\n    );\n};\n\nexport default SocialNetworks;\n","// extracted by mini-css-extract-plugin\nexport default {\"footerNav\":\"footer-nav--RzoDGjZx5zMrrftgyjCV\",\"bottomSectionWrapper\":\"bottom-section-wrapper--Ov4LC8GI2QzZJPvcwvPE\",\"bottomSection\":\"bottom-section--j1pX_ONKVq2ldJYF_7Vt\",\"abstractLinkLoading\":\"abstract-link-loading--ONS7lYehqEQ00LYznSvB\"};","import { FC } from 'react';\n\nimport {\n    Text,\n    TextTypography,\n    TextStyle,\n    GridColumn,\n    GridRow,\n    GridLayout,\n    useBreakpoint,\n    VSpacing,\n} from '@hh.ru/magritte-ui';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport useUserTypeForMenu from 'lux/hooks/useUserTypeForMenu';\nimport { NavItems } from 'lux/models/supernovaNaviMenu';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport FooterCopyright from 'lux/components/Footer/Copyright';\nimport MobileAppButtons from 'lux/components/Footer/MobileAppButtons';\nimport FooterNavItems from 'lux/components/Footer/NavItems';\nimport NavItemsDocs from 'lux/components/Footer/NavItems/Docs';\nimport FooterNavSeparator from 'lux/components/Footer/NavSeparator';\nimport FooterRecommendTechInfo from 'lux/components/Footer/RecommendTechInfo';\nimport FooterRequisites from 'lux/components/Footer/Requisites';\nimport FooterSocialNetworks from 'lux/components/Footer/SocialNetworks';\n\nimport styles from './nav.less';\n\ninterface FooterNavProps {\n    items?: NavItems;\n}\n\nconst FooterNav: FC<FooterNavProps> = ({ items }) => {\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const isApplicant = useUserTypeForMenu(SupernovaUserType.Applicant);\n    const isZarplata = useIsZarplataPlatform();\n    const isHhru = useIsHhru();\n    const { isXS } = useBreakpoint();\n\n    if (!items) {\n        return null;\n    }\n\n    const additional = items.find(({ name }) => name === 'additional');\n    const site = items.find(({ name }) => name === 'site');\n    const articles = items.find(({ name }) => name === 'articles');\n    const forTeens = items.find(({ name }) => name === 'forTeens');\n    const about = items.find(({ name }) => name === 'about');\n    const misc = items.find(({ name }) => name === 'misc');\n    const applicantServices = items.find(({ name }) => name === 'applicantServices');\n    const employerServices = items.find(({ name }) => name === 'employerServices');\n    const bottom = items.find(({ name }) => name === 'bottom');\n    const docs = items.find(({ name }) => name === 'docs');\n\n    const additionalMenu = additional?.subItems?.map((subItem, index) => (\n        <FooterNavItems isMobileFriendly={isXS} key={`${subItem.name}.${index}`} nav={subItem} />\n    ));\n\n    const needCustomTemplate =\n        topLevelSite === TopLevelSite.KZ ||\n        topLevelSite === TopLevelSite.AZ ||\n        topLevelSite === TopLevelSite.UZ ||\n        topLevelSite === TopLevelSite.KG ||\n        topLevelSite === TopLevelSite.GE;\n\n    /**\n     * Показываем кнопки сторов вместо QR-кода на соискательской zp,\n     * так как у zp нет подходящей разводящей для моб. приложения\n     */\n    const isApplicantZarplata = isZarplata && isApplicant;\n\n    return (\n        <div className={styles.footerNav}>\n            <GridLayout>\n                <GridRow>\n                    <GridColumn xs={4} s={8} m={6} l={4}>\n                        <FooterNavItems\n                            isMobileFriendly={isXS}\n                            nav={site}\n                            showHeader={isApplicant}\n                            spacing={<VSpacing default={40} gteL={0} />}\n                        />\n                        <FooterNavItems\n                            isMobileFriendly={isXS}\n                            nav={about}\n                            spacing={<VSpacing default={40} gteL={0} />}\n                        />\n                    </GridColumn>\n\n                    {!needCustomTemplate && (\n                        <GridColumn xs={4} s={8} m={6} l={4}>\n                            <FooterNavItems\n                                isMobileFriendly={isXS}\n                                nav={applicantServices}\n                                showHeader={isApplicant}\n                                spacing={<VSpacing default={40} />}\n                            />\n                            <FooterNavItems\n                                isMobileFriendly={isXS}\n                                nav={employerServices}\n                                showHeader={isApplicant}\n                                spacing={<VSpacing default={40} />}\n                            />\n                            <FooterNavItems\n                                isMobileFriendly={isXS}\n                                nav={articles}\n                                showHeader={isApplicant}\n                                spacing={<VSpacing default={40} gteM={0} />}\n                            />\n                            <FooterNavItems\n                                isMobileFriendly={isXS}\n                                nav={misc}\n                                spacing={<VSpacing default={40} gteM={0} />}\n                            />\n                        </GridColumn>\n                    )}\n\n                    <GridColumn xs={4} s={8} m={6} l={4}>\n                        <FooterNavItems\n                            isMobileFriendly={isXS}\n                            nav={forTeens}\n                            showHeader={isApplicant}\n                            spacing={<VSpacing default={40} />}\n                        />\n                        {additionalMenu}\n                        <VSpacing default={additional?.subItems?.length ? 40 : 0} />\n                        {!isApplicantZarplata && <MobileAppButtons isApplicant={isApplicant} />}\n                    </GridColumn>\n                </GridRow>\n\n                {isApplicantZarplata && (\n                    <MobileAppButtons isApplicant={isApplicant} showHeader={false} desktopView=\"buttons\" />\n                )}\n\n                {docs?.subItems?.length ? (\n                    <>\n                        <VSpacing default={64} xs={40} />\n\n                        <GridRow>\n                            <Text typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                                <NavItemsDocs nav={docs} isMobileFriendly={isXS} />\n                            </Text>\n                        </GridRow>\n\n                        <VSpacing default={24} />\n                    </>\n                ) : null}\n\n                <GridRow>\n                    <GridColumn xs={4} s={8} m={12}>\n                        <Text typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                            {(isHhru || (isZarplata && supernovaUserType !== SupernovaUserType.Employer)) && (\n                                <FooterRecommendTechInfo />\n                            )}\n\n                            <FooterRequisites />\n                        </Text>\n                    </GridColumn>\n                </GridRow>\n\n                <GridRow>\n                    <GridColumn xs={4} s={8} m={12} l={12}>\n                        <FooterNavSeparator />\n\n                        <div className={styles.bottomSectionWrapper}>\n                            <FooterSocialNetworks />\n\n                            <Text typography={TextTypography.Label3Regular}>\n                                <div className={styles.bottomSection}>\n                                    <FooterNavItems isMobileFriendly={isXS} nav={bottom} direction=\"horizontal\" />\n                                    <FooterCopyright />\n                                </div>\n                            </Text>\n                        </div>\n                    </GridColumn>\n                </GridRow>\n            </GridLayout>\n        </div>\n    );\n};\n\nexport default FooterNav;\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport talantixLinkContactsHideButtonClick from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_button_click';\nimport talantixLinkContactsHideElementShown from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_element_shown';\nimport Gap from 'bloko/blocks/gap';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport footerAnalytics from 'lux/components/Footer/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsRabotaBy } from 'lux/hooks/useSites';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Badge from 'lux/components/SupernovaMainMenu/Badge';\nimport SupernovaLink, { SupernovaLinkKind } from 'lux/components/SupernovaMainMenu/Link';\n\ninterface SupernovaMenuItemProps {\n    name: string;\n    url: string;\n    type: string;\n    translations: Record<string, string>;\n    badge?: string;\n    onClick?: (name: string) => void;\n    onClose?: () => void;\n}\n\nconst sendAnalytics = (name: string, needSendAnalytics = false) => {\n    let buttonEventName;\n    let eventData = null;\n\n    switch (name) {\n        case 'videoInterview':\n            buttonEventName = 'videointerview_footer';\n            break;\n        case 'talantix':\n            buttonEventName = name;\n            eventData = {\n                label: 'footer_click',\n                category: 'talantix',\n                action: 'footer',\n            };\n            break;\n        // tempexp_23996-start\n        case 'hrLink':\n            buttonEventName = `${name}_footer`;\n            break;\n        // tempexp_23996-end\n        default:\n            buttonEventName = name;\n            break;\n    }\n\n    if (name === 'talantix') {\n        talantixLinkContactsHideButtonClick({ hhtmSourceLabel: 'footer' });\n        return;\n    }\n\n    // tempexp_23996-start\n    if (name === 'hrLink') {\n        footerAnalytics.servicesItemClick(buttonEventName);\n        return;\n    }\n    // tempexp_23996-end\n\n    if (needSendAnalytics && buttonEventName !== null) {\n        footerAnalytics.servicesItemClick(buttonEventName);\n    }\n\n    if (eventData !== null) {\n        Analytics.sendEvent(eventData.category, eventData.action, eventData.label);\n    }\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n    supervonaItemsAnalyticsForCountriesEnabled: 'supervona_items_analytics_for_countries_enabled',\n};\n\nconst SupernovaMenuItem: TranslatedComponent<SupernovaMenuItemProps> = ({\n    name,\n    url,\n    type,\n    translations,\n    badge,\n    onClose,\n}) => {\n    const isRabotaBy = useIsRabotaBy();\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const supervonaItemsAnalyticsForCountriesEnabled = useFeatureEnabled(\n        Features.supervonaItemsAnalyticsForCountriesEnabled\n    );\n    const superNovauserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const userType = useSelector(({ userType }) => userType);\n\n    const isBelarusEmployer =\n        isRabotaBy && (superNovauserType === SupernovaUserType.Employer || userType === UserType.Employer);\n\n    const needSendAnalytics =\n        (isBelarusEmployer && supervonaItemsAnalyticsForCountriesEnabled) || employerMainPageAnalyticsEnabled;\n\n    const menuItemRef = useRef(null);\n\n    useEffect(() => {\n        if (menuItemRef.current) {\n            if (name === 'talantix') {\n                talantixLinkContactsHideElementShown(menuItemRef.current, { hhtmSourceLabel: 'footer' });\n                // tempexp_23996-start\n            } else if (name === 'hrLink') {\n                footerAnalytics.servicesItemShown(menuItemRef.current, {\n                    name: `${name}_footer`,\n                    hhtmSourceLabel: type,\n                });\n                // tempexp_23996-end\n            } else if (employerMainPageAnalyticsEnabled) {\n                footerAnalytics.servicesItemShown(menuItemRef.current, { name, hhtmSourceLabel: type });\n            }\n        }\n    }, [employerMainPageAnalyticsEnabled, menuItemRef, name, type]);\n\n    return (\n        <Gap bottom>\n            <div ref={menuItemRef} className=\"supernova-link-wrapper\">\n                <SupernovaLink\n                    kind={SupernovaLinkKind.Primary}\n                    to={url}\n                    onClick={() => {\n                        sendAnalytics(name, needSendAnalytics);\n                        if (onClose) {\n                            setTimeout(() => onClose(), 1000);\n                        }\n                    }}\n                    data-page-analytics-event={`service.${type}`}\n                >\n                    <Text Element=\"span\" size={TextSize.Large} data-qa={`supernova.navi.${name}`}>\n                        {translations.name}\n                        {badge && <Badge badge=\"absolute\">{badge}</Badge>}\n                    </Text>\n                </SupernovaLink>\n            </div>\n            <p>{translations.description}</p>\n        </Gap>\n    );\n};\n\nexport default translation(SupernovaMenuItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"footerServices\":\"footer-services--zU9aMY_fvLZna2m4JTqO\",\"xsFriendly\":\"xs-friendly--JE_lVOyY5UN_8t_IwsDX\",\"footerServicesHideMobile\":\"footer-services_hide-mobile--upqZHm2HqCxgJ8BEvLL6\",\"abstractLinkLoading\":\"abstract-link-loading--OpxomXKRfzif2F6MQOd6\"};","import { FC, Fragment, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport SupernovaMenuItem from 'lux/components/SupernovaMainMenu/Item';\nimport { NavItems } from 'lux/models/supernovaNaviMenu';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './services.less';\n\ninterface ServicesProps {\n    items?: NavItems;\n}\n\nconst Services: FC<ServicesProps & PropsWithChildren> = ({ items }) => {\n    const hide = useSelector(({ hideFooterServices }) => hideFooterServices);\n    const userType = useSelector(({ userType }) => userType);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n\n    if (!items?.length || hide) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames(styles.footerServices, {\n                [styles.footerServicesHideMobile]: userType === UserType.Anonymous,\n            })}\n        >\n            <ColumnsWrapper>\n                {items.map((menu) => {\n                    const menuItem = <SupernovaMenuItem {...menu} type=\"footer\" key={menu.name} />;\n                    if (userType === UserType.Employer || supernovaUserType === SupernovaUserType.Employer) {\n                        return (\n                            <Fragment key={menu.name}>\n                                <Column xs=\"4\" s=\"3\" m=\"3\" l=\"4\">\n                                    {menuItem}\n                                </Column>\n                                <Column xs=\"0\" s=\"1\" m=\"1\" l=\"1\" />\n                            </Fragment>\n                        );\n                    }\n\n                    return (\n                        <Fragment key={menu.name}>\n                            <Column xs=\"4\" s=\"3\" m=\"3\" l=\"3\">\n                                {menuItem}\n                            </Column>\n                            <Column xs=\"0\" s=\"1\" m=\"1\" l=\"1\" />\n                        </Fragment>\n                    );\n                })}\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default Services;\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer--AGgS1QnFH5Vv6tYWS4_F\",\"lLite\":\"l-lite--Q4dUqWkM934qIxtyCXoX\",\"xsFriendly\":\"xs-friendly--kOq90aJmkpRB03QLe_R9\",\"abstractLinkLoading\":\"abstract-link-loading--KD6dl0Hlx_YcOVhQCDwk\"};","import { FC } from 'react';\n\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport FooterMobileBanner from 'lux/components/Footer/MobileBanner';\nimport FooterNav from 'lux/components/Footer/Nav';\nimport FooterServices from 'lux/components/Footer/Services';\n\nimport styles from './footer.less';\n\ninterface FooterProps {\n    withSpacing: boolean;\n}\n\nconst Footer: FC<FooterProps> = ({ withSpacing }) => {\n    const isWebView = useSelector(({ isWebView }) => isWebView);\n    const hideLayout = useSelector(({ hideLayout }) => hideLayout);\n    const isIFrameView = useSelector(({ isIFrame }) => isIFrame);\n    const query = useSelector(({ router }) => router.location.query);\n    const footer = useSelector(({ footer }) => footer);\n    const { pathname } = useSelector(({ router }) => router.location);\n\n    if (hideLayout || isWebView || query?.print !== undefined || isIFrameView || pathname === paths.vacancySearchMap) {\n        return null;\n    }\n\n    const renderFooter = () =>\n        footer.map(({ name, subItems }) => {\n            switch (name) {\n                case 'footerServices':\n                    return <FooterServices key={name} items={subItems} />;\n                case 'footerMobileBanner':\n                    return <FooterMobileBanner key={name} />;\n                case 'footerNav':\n                    return <FooterNav key={name} items={subItems} />;\n            }\n\n            return null;\n        });\n\n    return (\n        <div className={styles.footer} data-cms=\"footer\" data-qa=\"footer\">\n            {withSpacing && <VSpacing base={4} />}\n            {renderFooter()}\n        </div>\n    );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"counter\":\"counter--Es31lnxFozFSaKNucGAC\"};","import { FC, PropsWithChildren } from 'react';\n\nimport styles from './counter.less';\n\nconst Counter: FC<PropsWithChildren> = ({ children }) => (\n    <div className={styles.counter} data-qa=\"loyalty-survey-survey-popup-counter\">\n        {children}\n    </div>\n);\nexport default Counter;\n","export const SKIP_ANSWER_VALUE = '99';\nexport const FINAL_STEP = 3;\n\nexport enum FormSteps {\n    First = 'first',\n    Second = 'second',\n    Third = 'third',\n    Fourth = 'fourth',\n}\n\nexport interface SurveyResultType {\n    [FormSteps.First]?: string;\n    [FormSteps.Second]?: string;\n    [FormSteps.Third]?: string;\n    [FormSteps.Fourth]?: string;\n}\n\nexport const FORM_STEPS_ARRAY = [FormSteps.Third, FormSteps.Fourth, FormSteps.First, FormSteps.Second];\n\nexport const DEFAULT_ANSWER_CONFIG = {\n    [FormSteps.First]: SKIP_ANSWER_VALUE,\n    [FormSteps.Second]: SKIP_ANSWER_VALUE,\n    [FormSteps.Third]: SKIP_ANSWER_VALUE,\n    [FormSteps.Fourth]: '',\n};\n","import { H3 } from 'bloko/blocks/header';\nimport Vspacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { LoyaltySurveyType } from 'lux/models/loyaltySurvey';\n\nimport Counter from 'lux/components/LoyaltySurveyModal/Counter';\nimport { SKIP_ANSWER_VALUE } from 'lux/components/LoyaltySurveyModal/constants';\n\ninterface StepHeaderProps {\n    step: number;\n    total: number;\n    type: LoyaltySurveyType;\n    answers: string[];\n}\n\nconst TrlKeys = {\n    stepsRadio: {\n        '2': {\n            [LoyaltySurveyType.Adv]: 'surveys.loyalty.ADV.popup.steps.1.header',\n            [LoyaltySurveyType.Branding]: 'surveys.loyalty.BRANDING.popup.steps.1.header',\n            [LoyaltySurveyType.Clickme]: 'surveys.loyalty.CLICKME.popup.steps.1.header',\n            [LoyaltySurveyType.MainServices]: 'surveys.loyalty.MAIN_SERVICES.popup.steps.1.header',\n        },\n        '3': {\n            [LoyaltySurveyType.Adv]: 'surveys.loyalty.ADV.popup.steps.2.header',\n            [LoyaltySurveyType.Branding]: 'surveys.loyalty.BRANDING.popup.steps.2.header',\n            [LoyaltySurveyType.Clickme]: 'surveys.loyalty.CLICKME.popup.steps.2.header',\n            [LoyaltySurveyType.MainServices]: 'surveys.loyalty.MAIN_SERVICES.popup.steps.2.header',\n        },\n        '0': {\n            [LoyaltySurveyType.Adv]: 'surveys.loyalty.ADV.popup.steps.3.header',\n            [LoyaltySurveyType.Branding]: 'surveys.loyalty.BRANDING.popup.steps.3.header',\n            [LoyaltySurveyType.Clickme]: 'surveys.loyalty.CLICKME.popup.steps.3.header',\n            [LoyaltySurveyType.MainServices]: 'surveys.loyalty.MAIN_SERVICES.popup.steps.3.header',\n        },\n    },\n    stepText: {\n        rate: 'surveys.loyalty.popup.steps.4.rate',\n        max: {\n            [LoyaltySurveyType.Adv]: 'surveys.loyalty.ADV.popup.steps.4.question.option.1',\n            [LoyaltySurveyType.Branding]: 'surveys.loyalty.BRANDING.popup.steps.4.question.option.1',\n            [LoyaltySurveyType.Clickme]: 'surveys.loyalty.CLICKME.popup.steps.4.question.option.1',\n            [LoyaltySurveyType.MainServices]: 'surveys.loyalty.MAIN_SERVICES.popup.steps.4.question.option.1',\n        },\n        min: {\n            [LoyaltySurveyType.Adv]: 'surveys.loyalty.ADV.popup.steps.4.question.option.2',\n            [LoyaltySurveyType.Branding]: 'surveys.loyalty.BRANDING.popup.steps.4.question.option.2',\n            [LoyaltySurveyType.Clickme]: 'surveys.loyalty.CLICKME.popup.steps.4.question.option.2',\n            [LoyaltySurveyType.MainServices]: 'surveys.loyalty.MAIN_SERVICES.popup.steps.4.question.option.2',\n        },\n    },\n    lastQuestion: 'surveys.loyalty.popup.lastQuestion',\n    counterPart: 'surveys.loyalty.popup.counterPart',\n};\n\nconst StepHeader: TranslatedComponent<StepHeaderProps> = ({ trls, step, total, type, answers }) => {\n    const indexStep = step.toString() as '0' | '3' | '2';\n    const stepRadio = TrlKeys.stepsRadio[indexStep];\n\n    const answerSkipped = answers[step - 1] === SKIP_ANSWER_VALUE;\n    const title = stepRadio ? (\n        <H3>{trls[stepRadio[type]]}</H3>\n    ) : (\n        <H3>\n            {!answerSkipped && `${trls[TrlKeys.stepText.rate]} ${answers[step - 1]}.`}\n            <p>{trls[TrlKeys.stepText[parseInt(answers[step - 1], 10) >= 9 ? 'max' : 'min'][type]]}</p>\n        </H3>\n    );\n\n    const counter = step < total - 1 ? `${step + 1} ${trls[TrlKeys.counterPart]} ${total}` : trls[TrlKeys.lastQuestion];\n\n    return (\n        <>\n            <Counter>{counter}</Counter>\n            {title}\n            <Vspacing base={4}></Vspacing>\n        </>\n    );\n};\nexport default translation(StepHeader);\n","// extracted by mini-css-extract-plugin\nexport default {\"stepsSelector\":\"steps-selector--PhnoxLPLig1uqL_LILKE\",\"stepsSelectorLabel\":\"steps-selector-label--W24KXyEZnl4QgIiqCwpc\",\"stepsSelectorRadio\":\"steps-selector-radio--HDDroWu5nsCNI2O_8K_z\",\"stepsSelectorDescription\":\"steps-selector-description--deF73LiVQsUDtoonWDCt\",\"stepsSelectorDescriptionMin\":\"steps-selector-description-min--UgaYhf8lgNDbsYr7c6r2\",\"stepsSelectorDescriptionMax\":\"steps-selector-description-max--ZwQBmdvHEMWcPbsZv20A\"};","import { FormItem } from 'bloko/blocks/form';\nimport Radio from 'bloko/blocks/radio';\nimport Textarea from 'bloko/blocks/textarea';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { FORM_STEPS_ARRAY, SKIP_ANSWER_VALUE } from 'lux/components/LoyaltySurveyModal/constants';\nimport translation from 'lux/components/translation';\n\nimport styles from './steps.less';\n\ninterface StepProps {\n    step: number;\n    answers: string[];\n}\n\nconst MAX_LENGTH = 2000;\n\nconst TrlKeys = {\n    steps: {\n        '2': {\n            '1': 'surveys.loyalty.popup.steps.1.1',\n            '2': 'surveys.loyalty.popup.steps.1.2',\n            '3': 'surveys.loyalty.popup.steps.1.3',\n            '4': 'surveys.loyalty.popup.steps.1.4',\n            '5': 'surveys.loyalty.popup.steps.1.5',\n        },\n        '3': {\n            '1': 'surveys.loyalty.popup.steps.2.1',\n            '2': 'surveys.loyalty.popup.steps.2.2',\n            '3': 'surveys.loyalty.popup.steps.2.3',\n            '4': 'surveys.loyalty.popup.steps.2.4',\n            '5': 'surveys.loyalty.popup.steps.2.5',\n        },\n        '0': {\n            min: 'surveys.loyalty.popup.steps.3.min',\n            max: 'surveys.loyalty.popup.steps.3.max',\n        },\n    },\n};\n\nconst SELECTOR_VALUES = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nconst VALUES_FIRST_SECOND_QUESTIONS: Array<'1' | '2' | '3' | '4' | '5'> = ['5', '4', '3', '2', '1'];\n\nconst Steps: TranslatedComponent<StepProps> = ({ trls, step, answers }) => {\n    switch (step) {\n        case 2:\n        case 3:\n            return (\n                <>\n                    {VALUES_FIRST_SECOND_QUESTIONS.map((value) => (\n                        <FormItem key={`${step}-${value}`}>\n                            <Radio name={FORM_STEPS_ARRAY[step]} value={value} defaultChecked={answers[step] === value}>\n                                {trls[TrlKeys.steps[step][value]]}\n                            </Radio>\n                        </FormItem>\n                    ))}\n                </>\n            );\n        case 0:\n            return (\n                <>\n                    <div className={styles.stepsSelector}>\n                        {SELECTOR_VALUES.map((index) => (\n                            <div className={styles.stepsSelectorRadio} key={index}>\n                                <Radio\n                                    name={FORM_STEPS_ARRAY[step]}\n                                    value={index}\n                                    defaultChecked={answers[step] === index}\n                                >\n                                    <div className={styles.stepsSelectorLabel} data-qa=\"loyalty-survey-selector\">\n                                        {index}\n                                    </div>\n                                </Radio>\n                            </div>\n                        ))}\n                    </div>\n                    <div className={styles.stepsSelectorDescription}>\n                        <div className={styles.stepsSelectorDescriptionMin}>{trls[TrlKeys.steps[step].min]}</div>\n                        <div className={styles.stepsSelectorDescriptionMax}>{trls[TrlKeys.steps[step].max]}</div>\n                    </div>\n                </>\n            );\n        case 1: {\n            return (\n                <Textarea\n                    defaultValue={answers[step] === SKIP_ANSWER_VALUE ? '' : answers[step]}\n                    autoFocus\n                    name=\"fourth\"\n                    noresize\n                    data-qa=\"loyalty-survey-textarea\"\n                    rows={6}\n                    maxLength={MAX_LENGTH}\n                />\n            );\n        }\n        default:\n            return null;\n    }\n};\nexport default translation(Steps);\n","// extracted by mini-css-extract-plugin\nexport default {\"loyaltySurveyModalBody\":\"loyalty-survey-modal-body--TRO7uC7V1w4i9R4tgxF3\",\"loyaltySurveyModalFooter\":\"loyalty-survey-modal-footer--cTbPAU1fo_9Hid3zhEDz\",\"loyaltySurveyModalFooterLink\":\"loyalty-survey-modal-footer-link--tgCykt9PGVrilPvkOMgT\",\"loyaltySurveyModalFooterButtonsWrapper\":\"loyalty-survey-modal-footer-buttons-wrapper--VnZfGkO3Fvu3uMHZ8WCb\",\"loyaltySurveyModalFooterTipHelper\":\"loyalty-survey-modal-footer-tip-helper--iMGvSVf90mVCY4sV5OSh\"};","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport HoverTip from 'bloko/blocks/drop/Tip/HoverTip';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport Modal, { ModalError, ModalFooter, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport Notification, { NotificationKind } from 'bloko/blocks/notificationManager/Notification';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport { runLoyaltySurvey } from 'lux/models/loyaltySurvey';\nimport { ComplexUserNotificationsTemplateKey, deleteUserNotification } from 'lux/models/userNotifications';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport StepHeader from 'lux/components/LoyaltySurveyModal/StepHeader';\nimport Steps from 'lux/components/LoyaltySurveyModal/Steps';\nimport {\n    DEFAULT_ANSWER_CONFIG,\n    FINAL_STEP,\n    FORM_STEPS_ARRAY,\n    FormSteps,\n    SKIP_ANSWER_VALUE,\n    SurveyResultType,\n} from 'lux/components/LoyaltySurveyModal/constants';\n\nimport styles from './loyalty-survey-modal.less';\n\nconst TrlKeys = {\n    button: 'notification.employer.loyaltySurvey.button',\n    loadError: 'notification.employer.loyaltySurvey.questionsLoadingError',\n    saveError: 'notification.employer.loyaltySurvey.answersSaveError',\n    thankYou: 'notification.employer.loyaltySurvey.thankYou',\n    submit: 'surveys.loyalty.popup.submit',\n    back: 'surveys.loyalty.popup.back',\n    next: 'surveys.loyalty.popup.next',\n    skip: 'surveys.loyalty.popup.skip',\n    counterPart: 'surveys.loyalty.popup.counterPart',\n    popupHeader: 'surveys.loyalty.popup.header',\n    droptip: 'surveys.loyalty.popup.droptip',\n};\n\nconst SURVEY_URL = '/surveys/loyalty';\nconst SURVEY_FINISH_URL = '/surveys/loyalty/finish';\n\ndeclare global {\n    interface FetcherGetApi {\n        [SURVEY_URL]: {\n            queryParams: { sid: number };\n            response: SurveyResultType;\n        };\n    }\n    interface FetcherPostApi {\n        [SURVEY_URL]: {\n            queryParams: void;\n            body: { answers: string; sid: number };\n            response: SurveyResultType;\n        };\n        [SURVEY_FINISH_URL]: {\n            queryParams: void;\n            body: { sid: number };\n            response: void;\n        };\n    }\n}\n\nconst LoyaltySurveyModal: TranslatedComponent = ({ trls }) => {\n    const params = useSelector(({ loyaltySurvey }) => loyaltySurvey);\n    const [showError, setShowError] = useState(false);\n    const [surveyLoadError, setSurveyLoadError] = useState(false);\n    const [surveySaveError, setSurveySaveError] = useState(false);\n    const [surveySuccessSave, setSurveySuccessSave] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [surveyResult, setSurveyResult] = useState<SurveyResultType>({});\n    const formRef = useRef<HTMLFormElement>(null);\n    const [step, setStep] = useState(0);\n    const [disableSubmit, setDisableSubmit] = useState(false);\n    const dispatch = useDispatch();\n    const userNotifications = useSelector(({ userNotifications }) => userNotifications);\n\n    const answers = FORM_STEPS_ARRAY.map((variant) => surveyResult[variant] ?? DEFAULT_ANSWER_CONFIG[variant]);\n\n    const finishSurvey = useCallback(\n        async (sid: number) => {\n            userNotifications.forEach((el) => {\n                if (ComplexUserNotificationsTemplateKey.EmployerLoyaltySurvey === el.templateKey) {\n                    dispatch(deleteUserNotification(el.id));\n                }\n            });\n\n            try {\n                await fetcher.postFormData(SURVEY_FINISH_URL, {\n                    sid,\n                });\n            } catch (error) {\n                setSurveySaveError(true);\n                return;\n            }\n\n            Analytics.sendEvent('employer', 'finish-loyalty-survey', params.type);\n            setSurveySuccessSave(true);\n            setShowModal(false);\n        },\n        [dispatch, params.type, userNotifications]\n    );\n\n    const fetchSurvey = useCallback(async () => {\n        if (params.id === undefined || !params.runSurvey) {\n            return;\n        }\n\n        let survey: SurveyResultType | undefined;\n\n        try {\n            survey = await fetcher.get(SURVEY_URL, {\n                params: {\n                    sid: params.id,\n                },\n            });\n        } catch (error) {\n            setSurveyLoadError(true);\n            return;\n        }\n\n        let passedStepsCount = Object.keys(survey).length;\n        if (passedStepsCount === 1 && survey[FORM_STEPS_ARRAY[0]] === SKIP_ANSWER_VALUE) {\n            passedStepsCount = 2;\n        } else if (passedStepsCount === 2 && survey[FORM_STEPS_ARRAY[2]]) {\n            passedStepsCount = 3;\n        } else if (passedStepsCount === 2 && survey[FORM_STEPS_ARRAY[1]] === '') {\n            passedStepsCount = 1;\n        }\n\n        setSurveyResult(survey);\n\n        setShowModal(true);\n        setStep(Math.min(FINAL_STEP, passedStepsCount));\n        Analytics.sendEvent('employer', 'open-loyalty-survey-popup', params.type);\n    }, [params.id, params.runSurvey, params.type]);\n\n    const saveAnswers = useCallback(\n        async (useFormData: boolean, stepChange: number, shouldFinish = false) => {\n            if (!params.id || formRef.current === null) {\n                return;\n            }\n\n            setDisableSubmit(true);\n\n            let answer: SurveyResultType = {};\n            if (useFormData) {\n                const data = new FormData(formRef.current);\n                const stepVariant = [...data.keys()].find((el) => FORM_STEPS_ARRAY.includes(el)) as FormSteps;\n                if (stepVariant) {\n                    const value = (data.get(stepVariant) as string) || DEFAULT_ANSWER_CONFIG[stepVariant];\n                    answer = { [stepVariant]: value };\n                    setSurveyResult({ ...surveyResult, ...answer });\n                }\n            } else {\n                answer = { [FORM_STEPS_ARRAY[step]]: SKIP_ANSWER_VALUE };\n                setSurveyResult({ ...surveyResult, ...answer });\n            }\n\n            try {\n                await fetcher.postFormData(SURVEY_URL, {\n                    sid: params.id,\n                    answers: JSON.stringify({ ...surveyResult, ...answer }),\n                });\n            } catch (ignore) {\n                setShowError(true);\n                return;\n            } finally {\n                setDisableSubmit(false);\n            }\n\n            if (shouldFinish) {\n                await finishSurvey(params.id);\n                return;\n            }\n\n            const newStep = step + stepChange;\n            if (newStep >= 0 && newStep <= FINAL_STEP) {\n                setStep(step + stepChange);\n            }\n        },\n        [finishSurvey, params.id, step, surveyResult]\n    );\n\n    const closeModal = useCallback(() => {\n        void saveAnswers(true, 0);\n        dispatch(runLoyaltySurvey(false));\n        setShowModal(false);\n    }, [dispatch, saveAnswers]);\n\n    const handleNext = () => {\n        setShowError(false);\n        void saveAnswers(true, 1, step === FINAL_STEP);\n    };\n\n    const handlePrevious = () => {\n        void saveAnswers(true, step === 2 && answers[0] === SKIP_ANSWER_VALUE ? -2 : -1);\n    };\n\n    const handleSkip = () => {\n        void saveAnswers(false, step === 0 ? 2 : 1, step === FINAL_STEP);\n    };\n\n    useEffect(() => {\n        void fetchSurvey();\n    }, [fetchSurvey]);\n\n    useEffect(() => {\n        if (surveyResult[FORM_STEPS_ARRAY[step]] === SKIP_ANSWER_VALUE || !surveyResult[FORM_STEPS_ARRAY[step]]) {\n            setDisableSubmit(true);\n        } else {\n            setDisableSubmit(false);\n        }\n    }, [step, setDisableSubmit, surveyResult]);\n\n    if (surveyLoadError) {\n        return (\n            <Notification kind={NotificationKind.Error} autoClose>\n                {trls[TrlKeys.loadError]}\n            </Notification>\n        );\n    }\n\n    if (surveySaveError) {\n        return (\n            <Notification kind={NotificationKind.Error} autoClose>\n                {trls[TrlKeys.saveError]}\n            </Notification>\n        );\n    }\n\n    if (surveySuccessSave) {\n        return (\n            <Notification kind={NotificationKind.Ok} autoClose>\n                {trls[TrlKeys.thankYou]}\n            </Notification>\n        );\n    }\n\n    const submitButton = (\n        <div className={styles.loyaltySurveyModalFooterTipHelper}>\n            <Button\n                disabled={disableSubmit}\n                data-qa=\"loyalty-survey-next-question\"\n                stretched\n                kind={ButtonKind.Primary}\n                onClick={handleNext}\n            >\n                {trls[step !== FINAL_STEP ? TrlKeys.next : TrlKeys.submit]}\n            </Button>\n        </div>\n    );\n\n    return (\n        <Modal onClose={closeModal} visible={showModal}>\n            <ModalHeader>\n                <ModalTitle>{trls[TrlKeys.popupHeader]}</ModalTitle>\n            </ModalHeader>\n            <div className={styles.loyaltySurveyModalBody} data-qa=\"loyalty-survey-popup-body\">\n                <Form\n                    method=\"POST\"\n                    action={SURVEY_URL}\n                    ref={formRef}\n                    onChange={() => {\n                        setDisableSubmit(false);\n                    }}\n                >\n                    {params.type && (\n                        <StepHeader step={step} total={FORM_STEPS_ARRAY.length} type={params.type} answers={answers} />\n                    )}\n                    <div data-qa=\"loyalty-survey-step\">\n                        <Steps step={step} answers={answers} />\n                    </div>\n                </Form>\n            </div>\n            <ModalError visible={showError}>{trls[TrlKeys.saveError]}</ModalError>\n            <ModalFooter>\n                <div className={styles.loyaltySurveyModalFooter}>\n                    <div className={styles.loyaltySurveyModalFooterLink}>\n                        <Link\n                            appearance={LinkAppearance.Pseudo}\n                            data-qa=\"loyalty-survey-skip-question\"\n                            onClick={handleSkip}\n                        >\n                            {trls[TrlKeys.skip]}\n                        </Link>\n                    </div>\n                    <div className={styles.loyaltySurveyModalFooterButtonsWrapper}>\n                        {step > 0 && (\n                            <Button\n                                data-qa=\"loyalty-survey-previous-question\"\n                                stretched\n                                appearance={ButtonAppearance.Outlined}\n                                onClick={handlePrevious}\n                            >\n                                {trls[TrlKeys.back]}\n                            </Button>\n                        )}\n                        {disableSubmit && (\n                            <HoverTip render={() => trls[TrlKeys.droptip]}>\n                                <span>{submitButton}</span>\n                            </HoverTip>\n                        )}\n                        {!disableSubmit && submitButton}\n                    </div>\n                </div>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(LoyaltySurveyModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"siteExceptionsContent\":\"site-exceptions-content--So4tdJl6mxPzNDrHNWKJ\"};","import { FC, useState, PropsWithChildren } from 'react';\n\nimport Icon, { IconLink, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport Text from 'bloko/blocks/text';\nimport Cookies from 'bloko/common/Cookies';\n\nimport ImportantNotifications from 'lux/components/ImportantNotifications';\n\nimport styles from './site-exceptions.less';\n\ninterface SiteExceptionProps {\n    hasRemoveIcon?: boolean;\n    cookieName?: string;\n}\n\nconst HIDE_PERIOD_IN_MINUTES = 15;\n\nconst SiteException: FC<SiteExceptionProps & PropsWithChildren> = ({ children, hasRemoveIcon, cookieName }) => {\n    const needShow = process.env.LUX_SERVER ? false : !!cookieName && Cookies.get(cookieName) !== 'true';\n\n    const [show, setShow] = useState(hasRemoveIcon ? needShow : true);\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        <ImportantNotifications>\n            <div className={styles.siteExceptionsContent}>\n                <Text>{children}</Text>\n                {hasRemoveIcon && (\n                    <IconLink\n                        Element=\"button\"\n                        type=\"button\"\n                        onClick={() => {\n                            Cookies.set('ignoreException', 'true', HIDE_PERIOD_IN_MINUTES / 60);\n                            setShow(false);\n                        }}\n                    >\n                        <Icon view={IconView.Cross} initial={IconColor.White} scale={IconScale.Small} />\n                    </IconLink>\n                )}\n            </div>\n        </ImportantNotifications>\n    );\n};\n\nexport default SiteException;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SiteException from 'lux/components/SiteExceptions/SiteException';\n\nconst TrlKeys = {\n    notSafeSession: 'index.firstpage.not.safe.session',\n    noScript: 'index.firstpage.noscript',\n    anonymous: 'exceptions.session.anonymous',\n};\n\nconst SiteExceptions: TranslatedComponent = ({ trls }) => {\n    const session = useSelector(({ session }) => session);\n\n    return (\n        <>\n            {session.isFallback && (\n                <SiteException hasRemoveIcon cookieName={'ignoreException'}>\n                    {trls[TrlKeys.anonymous]}\n                </SiteException>\n            )}\n            {session.securityCheckFailed && <SiteException>{trls[TrlKeys.notSafeSession]}</SiteException>}\n            <NoIndex>\n                <noscript>\n                    <SiteException>{trls[TrlKeys.noScript]}</SiteException>\n                </noscript>\n            </NoIndex>\n        </>\n    );\n};\n\nexport default translation(SiteExceptions);\n","export enum OverlayTypes {\n    EmployerOverlay,\n    ApplicantOverlay,\n    AreaSwitcherOverlay,\n    None,\n}\n\nexport interface OverlayTypeSetterFunc {\n    (type: OverlayTypes): void;\n}\n","import { FC, useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\nimport { OverlayTypes } from 'lux/components/SupernovaOverlayMenu/Overlay';\n\nconst MenuItem: FC<MenuItemRendererProps> = ({ menuItem, showOverlay }) => {\n    const handleClick = useCallback(() => {\n        showOverlay(OverlayTypes.AreaSwitcherOverlay);\n\n        Analytics.sendHHEventButtonClick('vacancy_search_region');\n    }, [showOverlay]);\n\n    return (\n        <div\n            className=\"supernova-navi-item\n                    supernova-navi-item_lvl-1\n                    supernova-navi-item_area-switcher\n                    HH-Supernova-RegionClarification-Container\"\n        >\n            <NoIndex>\n                <Link\n                    data-qa=\"mainmenu_areaSwitcher\"\n                    appearance={LinkAppearance.Pseudo}\n                    title={menuItem.translations.name}\n                    onClick={handleClick}\n                >\n                    <span className=\"supernova-navi-item_area-switcher-button\">{menuItem.translations.name}</span>\n                </Link>\n            </NoIndex>\n        </div>\n    );\n};\n\nexport default MenuItem;\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const overlayMenuItemShown = (element: HTMLElement, item: string): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: `overlay_menu_item_${item}`,\n    });\n};\n\nexport default {\n    overlayMenuItemShown,\n};\n","import { FC, useRef, useEffect } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport useTrackClicks from 'lux/components/SupernovaMainMenu/useTrackClicks';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\n\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\nimport overlayMenuAnalytics from 'lux/components/SupernovaOverlayMenu/analytics';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst DefaultMenuItem: FC<MenuItemRendererProps> = ({ menuItem }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const menuItemRef = useRef(null);\n    const handleClick = useTrackClicks(menuItem.name, menuItem.trackClicks);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && menuItemRef.current) {\n            overlayMenuAnalytics.overlayMenuItemShown(menuItemRef.current, menuItem.name);\n        }\n    }, [employerMainPageAnalyticsEnabled, menuItem.name]);\n\n    return (\n        <div ref={menuItemRef} className=\"supernova-navi-item supernova-navi-item_lvl-1\">\n            {menuItem.active ? (\n                menuItem.translations.name\n            ) : (\n                <Link\n                    isSeoLink={menuItem.external}\n                    to={menuItem.url}\n                    data-qa={`mainmenu_${menuItem.name}`}\n                    className=\"supernova-link supernova-link_dimmed\"\n                    data-page-analytics-event={\n                        [SupernovaUserType.Employer, SupernovaUserType.Applicant].includes(menuItem.name)\n                            ? `switch_role_${menuItem.name}_header.desktop`\n                            : undefined\n                    }\n                    onClick={handleClick}\n                >\n                    {menuItem.translations.name}\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default DefaultMenuItem;\n","import { FC } from 'react';\n\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\n\nconst MainContent: FC<MenuItemRendererProps> = ({ menuItem, renderer, showOverlay }) => {\n    if (menuItem.subItems === undefined) {\n        return null;\n    }\n\n    return (\n        <div className=\"supernova-navi supernova-navi_lvl-1 supernova-navi_main-content\">\n            {menuItem.subItems.map((menuItem) => renderer(menuItem, showOverlay))}\n        </div>\n    );\n};\n\nexport default MainContent;\n","import { FC, useCallback, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport talantixLinkContactsHideButtonClick from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsRabotaBy } from 'lux/hooks/useSites';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Badge from 'lux/components/SupernovaMainMenu/Badge';\n\ninterface SupernovaMenuServiceItemProps {\n    name: string;\n    url: string;\n    type: string;\n    translations: Record<string, string>;\n    badge?: string;\n    external?: boolean;\n    onClick?: (name: string) => void;\n}\n\nenum MenuServiceItemBadge {\n    Lightning = 'lightning',\n}\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n    supervonaItemsAnalyticForCountriesEnabled: 'supervona_items_analytics_for_countries_enabled',\n};\n\nconst SupernovaMenuItem: FC<SupernovaMenuServiceItemProps> = ({\n    url,\n    type,\n    translations,\n    external,\n    badge,\n    name,\n    onClick,\n}) => {\n    let badgeElement = null;\n    const ref = useRef(null);\n\n    const isRabotaBy = useIsRabotaBy();\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const supervonaItemsAnalyticForCountriesEnabled = useFeatureEnabled(\n        Features.supervonaItemsAnalyticForCountriesEnabled\n    );\n    const superNovauserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const userType = useSelector(({ userType }) => userType);\n\n    const needSendAnalytic =\n        isRabotaBy &&\n        (employerMainPageAnalyticsEnabled || supervonaItemsAnalyticForCountriesEnabled) &&\n        (superNovauserType === SupernovaUserType.Employer || userType === UserType.Employer);\n\n    const handleClick = useCallback(() => {\n        onClick && onClick(name);\n        if (name === 'talantix') {\n            talantixLinkContactsHideButtonClick({ hhtmSourceLabel: 'menu_new' });\n        }\n\n        if (needSendAnalytic) {\n            Analytics.sendHHEventButtonClick(name);\n        }\n    }, [name, onClick, needSendAnalytic]);\n    if (badge) {\n        switch (badge) {\n            case MenuServiceItemBadge.Lightning:\n                badgeElement = <Icon initial={IconColor.Yellow50} view={IconView.Bolt} scale={IconScale.Small} />;\n                break;\n            default:\n                badgeElement = <Badge badge={'absolute'}>{badge}</Badge>;\n        }\n    }\n\n    return (\n        <div className=\"supernova-link-wrapper\">\n            <BlokoLink\n                ref={ref}\n                isSeoLink={external}\n                Element={Link}\n                disableVisited\n                onClick={handleClick}\n                to={url}\n                data-page-analytics-event={`service.${type}`}\n                target={external ? '_blank' : undefined}\n            >\n                <Text Element=\"span\" size={TextSize.Large}>\n                    {translations.name}\n                </Text>\n                {badgeElement && ' '}\n                {badgeElement}\n            </BlokoLink>\n            {translations.description && <p className=\"supernova-link-description\">{translations.description}</p>}\n        </div>\n    );\n};\n\nexport default SupernovaMenuItem;\n","import { Fragment } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport { H1, H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaMenuItem from 'lux/components/SupernovaMainMenu/Item';\nimport SupernovaMenuServiceItem from 'lux/components/SupernovaMainMenu/ServiceItem';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nenum SubItems {\n    Advancement = 'advancementServices',\n    Education = 'educationServices',\n    Beginner = 'beginnerServices',\n    Beta = 'beta',\n}\ntype SubItemsTitles = Exclude<SubItems, SubItems.Advancement>;\n\nconst TrlKeys: Record<SubItemsTitles | 'header', string> = {\n    header: 'supernova.navi.applicantServices.header',\n    [SubItems.Education]: 'supernova.navi.educationServices',\n    [SubItems.Beginner]: 'supernova.navi.beginnerServices',\n    [SubItems.Beta]: 'supernova.navi.beta',\n};\n\nconst APPLICANT_SERVICES_MENU_ITEM_NAME = 'applicantServices';\n\nconst ApplicantServicesOverlay: TranslatedComponent = ({ trls }) => {\n    const services = useSelector(({ headerMenu }) =>\n        headerMenu.find((item) => item.name === APPLICANT_SERVICES_MENU_ITEM_NAME)\n    );\n\n    if (!services) {\n        return null;\n    }\n\n    return (\n        <>\n            <Column s=\"8\" m=\"12\" l=\"16\">\n                <VSpacing base={6} />\n                <H1 Element=\"h2\">{trls[TrlKeys.header]}</H1>\n                <VSpacing base={10} />\n            </Column>\n\n            {services.subItems?.map((menu) => {\n                if (!menu.subItems?.length) {\n                    return null;\n                }\n                switch (menu.name) {\n                    case SubItems.Advancement:\n                        return (\n                            <Fragment key={menu.name}>\n                                {menu.subItems.map((item) => (\n                                    <Fragment key={item.name}>\n                                        <Column xs=\"4\" s=\"3\" m=\"3\" l=\"3\">\n                                            <SupernovaMenuItem {...item} type=\"overlay\" />\n                                        </Column>\n                                        <Column xs=\"0\" s=\"1\" m=\"1\" l=\"1\" />\n                                    </Fragment>\n                                ))}\n                            </Fragment>\n                        );\n                    case SubItems.Education:\n                    case SubItems.Beginner:\n                        return (\n                            <Fragment key={menu.name}>\n                                <Column s=\"8\" m=\"12\" l=\"16\">\n                                    <VSpacing base={6} />\n                                    <H2 Element=\"h3\" lite>\n                                        {trls[TrlKeys[menu.name]]}\n                                    </H2>\n                                    <VSpacing base={4} />\n                                </Column>\n\n                                {menu.subItems.map((item) => (\n                                    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\" key={item.name}>\n                                        <SupernovaMenuServiceItem {...item} type=\"small\" />\n                                    </Column>\n                                ))}\n                                <VSpacing base={6} />\n                            </Fragment>\n                        );\n                    default:\n                        return (\n                            <Fragment key={menu.name}>\n                                <Column s=\"4\" m=\"5\" l=\"4\" container>\n                                    <Column s=\"4\" m=\"5\" l=\"4\">\n                                        <VSpacing base={6} />\n                                        <H2 Element=\"h3\" lite>\n                                            {trls[TrlKeys[menu.name as SubItemsTitles]]}\n                                        </H2>\n                                        <VSpacing base={4} />\n                                    </Column>\n\n                                    {menu.subItems.map((item) => (\n                                        <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\" key={item.name}>\n                                            <SupernovaMenuServiceItem {...item} type=\"small\" />\n                                        </Column>\n                                    ))}\n                                </Column>\n                                <Column s=\"0\" m=\"1\" l=\"0\" />\n                            </Fragment>\n                        );\n                }\n            })}\n        </>\n    );\n};\n\nexport default translation(ApplicantServicesOverlay);\n","import { FC } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport AreaSwitcher from 'lux/components/AreaSwitcher';\n\nconst Overlay: FC = () => {\n    return (\n        <Column s=\"8\" m=\"12\" l=\"16\" container>\n            <VSpacing base={6} />\n            <AreaSwitcher />\n        </Column>\n    );\n};\n\nexport default Overlay;\n","import { Fragment } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\nimport SupernovaMenuItem from 'lux/components/SupernovaMainMenu/Item';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport { OverlayTypes, OverlayTypeSetterFunc } from 'lux/components/SupernovaOverlayMenu/Overlay';\n\nconst COMPETENCY_MAPS = 'competencyMaps';\n\ninterface RenderProjectSelectedItemProps {\n    item: NavItem;\n    setOverlay: OverlayTypeSetterFunc;\n}\nconst RenderProjectSelectedItem = ({ item, setOverlay }: RenderProjectSelectedItemProps): JSX.Element => {\n    const isCompetencyMap = item.name === COMPETENCY_MAPS;\n\n    if (isCompetencyMap) {\n        return (\n            <Fragment key={item.name}>\n                <Column xs=\"4\" s=\"4\" m=\"5\" l=\"4\">\n                    <SupernovaMenuItem\n                        {...item}\n                        type=\"overlay\"\n                        onClose={() => {\n                            setOverlay(OverlayTypes.None);\n                        }}\n                    />\n                </Column>\n                <Column xs=\"0\" s=\"0\" m=\"1\" l=\"0\" />\n            </Fragment>\n        );\n    }\n    return (\n        <Fragment>\n            <Column xs=\"4\" s=\"4\" m=\"5\" l=\"4\">\n                <SupernovaMenuItem {...item} type=\"overlay\" />\n            </Column>\n            <Column xs=\"0\" s=\"0\" m=\"1\" l=\"0\" />\n        </Fragment>\n    );\n};\n\nexport default RenderProjectSelectedItem;\n","import { Fragment } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport { H1, H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaMenuServiceItem from 'lux/components/SupernovaMainMenu/ServiceItem';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { OverlayTypeSetterFunc } from 'lux/components/SupernovaOverlayMenu/Overlay';\nimport RenderProjectSelectedItem from 'lux/components/SupernovaOverlayMenu/RenderProjectSelectedItem';\n\nenum SubItems {\n    Selected = 'employerProjects.selected',\n    Search = 'employerProjects.search',\n    Advertising = 'employerProjects.advertising',\n    Responses = 'employerProjects.responses',\n    Automation = 'employerProjects.automation',\n    Education = 'employerProjects.education',\n    Research = 'employerProjects.research',\n    Beta = 'beta',\n}\ntype SubItemsTitles = Exclude<SubItems, SubItems.Selected>;\n\nconst TrlKeys: Record<SubItemsTitles | 'header', string> = {\n    header: 'supernova.navi.employerProjects.header',\n    [SubItems.Search]: 'supernova.navi.employerProjects.search',\n    [SubItems.Advertising]: 'supernova.navi.employerProjects.advertising',\n    [SubItems.Responses]: 'supernova.navi.employerProjects.responses',\n    [SubItems.Automation]: 'supernova.navi.employerProjects.automation',\n    [SubItems.Education]: 'supernova.navi.employerProjects.education',\n    [SubItems.Research]: 'supernova.navi.employerProjects.research',\n    [SubItems.Beta]: 'supernova.navi.beta',\n};\n\nconst EMPLOYER_PROJECTS_MENU_ITEM_NAME = 'employerProjects';\n\ninterface EmployerProjectsOverlayProps {\n    setOverlay: OverlayTypeSetterFunc;\n}\n\nconst EmployerProjectsOverlay: TranslatedComponent<EmployerProjectsOverlayProps> = ({ trls, setOverlay }) => {\n    const projects = useSelector(({ headerMenu }) =>\n        headerMenu.find((item) => item.name === EMPLOYER_PROJECTS_MENU_ITEM_NAME)\n    );\n    if (!projects) {\n        return null;\n    }\n\n    return (\n        <>\n            <Column s=\"8\" m=\"12\" l=\"16\">\n                <VSpacing base={6} />\n                <H1 Element=\"h2\">{trls[TrlKeys.header]}</H1>\n                <VSpacing base={10} />\n            </Column>\n\n            {projects.subItems?.map((menu) => {\n                if (!menu.subItems?.length) {\n                    return null;\n                }\n                switch (menu.name) {\n                    case SubItems.Selected:\n                        return (\n                            <Fragment key={menu.name}>\n                                {menu.subItems.map((item) => (\n                                    <RenderProjectSelectedItem item={item} setOverlay={setOverlay} key={item.name} />\n                                ))}\n                                <div className=\"supernova-overlay-separator\" />\n                            </Fragment>\n                        );\n                    default:\n                        return (\n                            <Fragment key={menu.name}>\n                                <Column s=\"4\" m=\"5\" l=\"4\" container>\n                                    <Column s=\"4\" m=\"5\" l=\"4\">\n                                        <VSpacing base={6} />\n                                        <H2 Element=\"h3\" lite>\n                                            {trls[TrlKeys[menu.name as SubItemsTitles]]}\n                                        </H2>\n                                        <VSpacing base={4} />\n                                    </Column>\n\n                                    {menu.subItems.map((item) => (\n                                        <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\" key={item.name}>\n                                            <SupernovaMenuServiceItem {...item} type=\"small\" />\n                                        </Column>\n                                    ))}\n                                </Column>\n                                <Column s=\"0\" m=\"1\" l=\"0\" />\n                            </Fragment>\n                        );\n                }\n            })}\n        </>\n    );\n};\n\nexport default translation(EmployerProjectsOverlay);\n","import { FC } from 'react';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport translation from 'lux/components/translation';\n\nimport ApplicantServicesOverlay from 'lux/components/SupernovaOverlayMenu/ApplicantServicesOverlay';\nimport AreaSwitcherOverlay from 'lux/components/SupernovaOverlayMenu/AreaSwitcher/Overlay';\nimport EmployerProjectsOverlay from 'lux/components/SupernovaOverlayMenu/EmployerProjectsOverlay';\nimport { OverlayTypes, OverlayTypeSetterFunc } from 'lux/components/SupernovaOverlayMenu/Overlay';\n\ninterface OverlayContentProps {\n    overlayType: OverlayTypes;\n    setOverlayType: OverlayTypeSetterFunc;\n}\n\nconst OverlayContent: FC<OverlayContentProps> = ({ overlayType, setOverlayType }) => {\n    if (overlayType === OverlayTypes.None) {\n        return null;\n    }\n\n    let overlay: React.ReactNode = null;\n\n    switch (overlayType) {\n        case OverlayTypes.ApplicantOverlay:\n            overlay = <ApplicantServicesOverlay />;\n            break;\n        case OverlayTypes.EmployerOverlay:\n            overlay = <EmployerProjectsOverlay setOverlay={setOverlayType} />;\n            break;\n        case OverlayTypes.AreaSwitcherOverlay:\n            overlay = <AreaSwitcherOverlay />;\n            break;\n        default:\n            return null;\n    }\n\n    return (\n        <div className=\"supernova-overlay__content\">\n            <ColumnsWrapper>\n                <div className=\"supernova-overlay-closer-wrapper\">\n                    <Column s=\"8\" m=\"12\" l=\"16\">\n                        <button\n                            className=\"supernova-overlay-closer\"\n                            onClick={() => setOverlayType(OverlayTypes.None)}\n                            type=\"button\"\n                        >\n                            ✕\n                        </button>\n                    </Column>\n                </div>\n\n                {overlay}\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default translation(OverlayContent);\n","import { FC, useEffect, useRef } from 'react';\n\nimport menuHeaderButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/header/menu_header_button_click';\n\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\n\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\nimport { OverlayTypes } from 'lux/components/SupernovaOverlayMenu/Overlay';\nimport overlayMenuAnalytics from 'lux/components/SupernovaOverlayMenu/analytics';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst ServicesMenuItem: FC<MenuItemRendererProps> = ({ menuItem, showOverlay }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const menuItemRef = useRef(null);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && menuItemRef.current) {\n            overlayMenuAnalytics.overlayMenuItemShown(menuItemRef.current, menuItem.name);\n        }\n    }, [employerMainPageAnalyticsEnabled, menuItem.name]);\n\n    return (\n        <div\n            ref={menuItemRef}\n            className=\"supernova-navi-item supernova-navi-item_lvl-1 supernova-navi-item_overlay-toggle\"\n        >\n            <span className=\"supernova-icon-services-dynamic\">\n                <button\n                    className=\"supernova-icon-link-switch HH-Supernova-Overlay-Toggle\"\n                    onClick={() => {\n                        showOverlay(\n                            menuItem.name === 'applicantServices'\n                                ? OverlayTypes.ApplicantOverlay\n                                : OverlayTypes.EmployerOverlay\n                        );\n                        if (menuItem.name === 'employerProjects') {\n                            menuHeaderButtonClick();\n                        }\n                    }}\n                    data-qa={`mainmenu_${menuItem.name}`}\n                    data-overlay-name=\"overlay\"\n                >\n                    <span className=\"supernova-link-switch supernova-link-switch_dimmed\">\n                        {menuItem.translations.name}\n                    </span>\n                    <span>&#160;</span>\n                    <span className=\"supernova-icon-services\" />\n                </button>\n            </span>\n        </div>\n    );\n};\n\nexport default ServicesMenuItem;\n","import { FC } from 'react';\n\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\n\nconst Switchers: FC<MenuItemRendererProps> = ({ menuItem, renderer, showOverlay }) => {\n    if (menuItem.subItems === undefined) {\n        return null;\n    }\n\n    return <div className=\"supernova-navi\">{menuItem.subItems.map((menuItem) => renderer(menuItem, showOverlay))}</div>;\n};\n\nexport default Switchers;\n","import { ComponentType, useCallback, useEffect, useLayoutEffect, useRef, useState, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Metrics from 'bloko/common/metrics';\nimport ModalHelper from 'bloko/common/modalHelper';\n\nimport { REGION_CLARIFICATION } from 'lux/components/Notifications/RegionClarification';\nimport { addNotificationAction } from 'lux/models/notifications';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AreaSwitcherMenuItem from 'lux/components/SupernovaOverlayMenu/AreaSwitcher/MenuItem';\nimport DefaultMenuItem from 'lux/components/SupernovaOverlayMenu/DefaultMenuItem';\nimport MainContent from 'lux/components/SupernovaOverlayMenu/MainContent';\nimport { MenuItemRendererProps } from 'lux/components/SupernovaOverlayMenu/MenuItemRendererProps';\nimport { OverlayTypes, OverlayTypeSetterFunc } from 'lux/components/SupernovaOverlayMenu/Overlay';\nimport OverlayContent from 'lux/components/SupernovaOverlayMenu/OverlayContent';\nimport ServicesMenuItem from 'lux/components/SupernovaOverlayMenu/ServicesMenuItem';\nimport Switchers from 'lux/components/SupernovaOverlayMenu/Switchers';\n\nconst CLARIFICATION_ID = 'REGION_CLARIFICATION_NOTIFICATION_ID';\n\nconst setRegionClarification = makeSetStoreField('regionClarification');\n\nconst renderOverlayMenuItem = (item: NavItem, showOverlay: OverlayTypeSetterFunc) => {\n    const menuItemTypeToComponentMapping: Record<string, ComponentType<MenuItemRendererProps>> = {\n        mainContent: MainContent,\n        switchers: Switchers,\n        fill: () => <div className=\"supernova-navi-fill\" />,\n        employerProjects: ServicesMenuItem,\n        applicantServices: ServicesMenuItem,\n        areaSwitcher: AreaSwitcherMenuItem,\n        default: DefaultMenuItem,\n    };\n\n    const Component =\n        item.name in menuItemTypeToComponentMapping\n            ? menuItemTypeToComponentMapping[item.name]\n            : menuItemTypeToComponentMapping.default;\n\n    return <Component menuItem={item} renderer={renderOverlayMenuItem} key={item.name} showOverlay={showOverlay} />;\n};\n\nconst SupernovaOverlayMenu: FC = () => {\n    const dispatch = useDispatch();\n\n    const regionClarification = useSelector(({ regionClarification }) => regionClarification);\n    const headerMenu = useSelector(({ headerMenu }) => headerMenu);\n\n    const { bgColor, subItems } = { ...headerMenu.find((menuItem) => menuItem.name === 'menuLvl1') };\n    const [overlay, setOverlay] = useState<OverlayTypes>(OverlayTypes.None);\n    const overlayRef = useRef<HTMLDivElement>(null);\n    const showOverlay = useCallback<OverlayTypeSetterFunc>(\n        (type) => {\n            setOverlay((overlay) => {\n                if (overlay === type) {\n                    ModalHelper.enableScroll();\n                    return OverlayTypes.None;\n                }\n\n                if (type === OverlayTypes.None) {\n                    ModalHelper.enableScroll();\n                } else {\n                    ModalHelper.disableScroll();\n                }\n                return type;\n            });\n        },\n        [setOverlay]\n    );\n\n    useEffect(() => {\n        const container = document.querySelector<HTMLElement>('.HH-Supernova-RegionClarification-Container');\n\n        if (!regionClarification || !container || (container.offsetWidth === 0 && container.offsetHeight === 0)) {\n            return;\n        }\n\n        dispatch(\n            addNotificationAction({\n                type: REGION_CLARIFICATION,\n                uniqueType: true,\n                id: CLARIFICATION_ID,\n                props: {\n                    ...regionClarification,\n                    onChangeClick: () => showOverlay(OverlayTypes.AreaSwitcherOverlay),\n                },\n            })\n        );\n        // Сбрасываем поле, чтобы больше не показалась нотификация\n        dispatch(setRegionClarification(null));\n    }, [dispatch, regionClarification, showOverlay]);\n\n    useLayoutEffect(() => {\n        if (overlayRef.current === null || typeof ResizeObserver === 'undefined') {\n            return () => undefined;\n        }\n\n        const resizeObserver = new ResizeObserver(() => {\n            if (overlayRef.current !== null) {\n                if (overlay !== OverlayTypes.None) {\n                    overlayRef.current.style.paddingRight =\n                        overlayRef.current.clientHeight === overlayRef.current.scrollHeight\n                            ? `${Metrics.getScrollbarWidth()}px`\n                            : '';\n                } else {\n                    overlayRef.current.style.paddingRight = '';\n                }\n            }\n        });\n\n        resizeObserver.observe(overlayRef.current);\n\n        return () => {\n            resizeObserver.disconnect();\n        };\n    }, [overlay]);\n\n    if (subItems === undefined) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames('supernova-overlay', { 'supernova-overlay_visible': overlay !== OverlayTypes.None })}\n            ref={overlayRef}\n        >\n            <div\n                className={classnames('supernova-overlay__navi', {\n                    [`supernova-overlay__navi_${bgColor as string}`]: bgColor,\n                })}\n            >\n                <ColumnsWrapper>\n                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                        <div className=\"supernova-navi supernova-navi_lvl-1\">\n                            {subItems.map((menuItem) => renderOverlayMenuItem(menuItem, showOverlay))}\n                        </div>\n                    </Column>\n                </ColumnsWrapper>\n            </div>\n            <OverlayContent overlayType={overlay} setOverlayType={showOverlay} />\n        </div>\n    );\n};\n\nexport default SupernovaOverlayMenu;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport Cookies from 'bloko/common/Cookies';\n\nimport { COOKIE_AGREEMENT_NAME, RESELECT_PARAMETER } from 'lux/components/CookiesPolicy/utils';\nimport { useIsBelarus, useIsRussia } from 'lux/hooks/useCountries';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const useIsShowTopBanner = (): boolean => {\n    const [isShow, setShowState] = useState(false);\n    const enableCookiePolicyInformer = useFeatureEnabled('enable_cookie_policy_informer');\n    const isCookiesPolicyBannerEnabled = useFeatureEnabled('cookies_policy_banner');\n    const isRussia = useIsRussia();\n    const isBelarus = useIsBelarus();\n    const reselectCookiePolicy = useSelector((state) => state.router.location.query?.[RESELECT_PARAMETER] === 'true');\n    const isCookiesPolicyInformerVisible = useSelector((state) => state.isCookiesPolicyInformerVisible);\n    const isShowTopPromoBanner = useSelector(({ topPromoBanner }) => topPromoBanner.isShow);\n\n    const isCookiesPolicyInformerShown = useCallback(() => {\n        if (!isRussia || !enableCookiePolicyInformer) {\n            return false;\n        }\n\n        const cookieAgreementValue = Cookies.get(COOKIE_AGREEMENT_NAME);\n\n        return cookieAgreementValue === null;\n    }, [enableCookiePolicyInformer, isRussia]);\n\n    const isCookiesBannerShown = useCallback(() => {\n        if (isCookiesPolicyInformerVisible) {\n            return true;\n        }\n\n        if (!(isCookiesPolicyBannerEnabled && isBelarus)) {\n            return false;\n        }\n\n        const cookieAgreementValue = Cookies.get(COOKIE_AGREEMENT_NAME);\n        const isAlreadyAnswered = cookieAgreementValue !== null;\n\n        return !isAlreadyAnswered || reselectCookiePolicy;\n    }, [isBelarus, isCookiesPolicyBannerEnabled, isCookiesPolicyInformerVisible, reselectCookiePolicy]);\n\n    useEffect(() => {\n        if (isShowTopPromoBanner && !(isCookiesBannerShown() || isCookiesPolicyInformerShown())) {\n            setShowState(true);\n        } else {\n            setShowState(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isShowTopPromoBanner]);\n\n    return isShow;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container--AJZAzpxEk4hW_07YQlGw\",\"banner\":\"banner--zessgp8C_Ab5_ifYuXcg\",\"wrapper\":\"wrapper--s3VK7hD3CG3b38rcTcAi\",\"close\":\"close--mMlK_GpoGKuEepXnEePF\",\"contentDesktop\":\"content_desktop--PA00RyhIoPjaz9oLEPNY\",\"contentMobile\":\"content_mobile--llw3WvQh1FuZ0Q6rLTpA\"};","import { MouseEventHandler, useEffect, FC, ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useElementShown } from '@hh.ru/analytics-js';\nimport topPromoBannerClosed from '@hh.ru/analytics-js-events/build/xhh/common/top_promo_banner/top_promo_banner_closed';\nimport topPromoBannerShown from '@hh.ru/analytics-js-events/build/xhh/common/top_promo_banner/top_promo_banner_shown';\nimport topPromoBannerVisited from '@hh.ru/analytics-js-events/build/xhh/common/top_promo_banner/top_promo_banner_visited';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport { H3Section } from 'bloko/blocks/header';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport { hideTopPromoBanner } from 'lux/models/topPromoBanner';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { useIsShowTopBanner } from 'lux/components/TopPromoBanner/useIsShowTopBanner';\n\nimport styles from './top-promo-banner.less';\n\nconst BANNER_SHOWN_URL = '/top_promo_banner/banner_shown';\nconst BANNER_CLOSED_URL = '/top_promo_banner/close';\nconst BANNER_VISITED_URL = '/top_promo_banner/visit';\n\ndeclare global {\n    interface FetcherPostApi {\n        [BANNER_SHOWN_URL]: {\n            queryParams: void;\n            body: {\n                // eslint-disable-next-line camelcase\n                banner_name: string;\n            };\n            response: void;\n        };\n        [BANNER_VISITED_URL]: {\n            queryParams: void;\n            body: {\n                // eslint-disable-next-line camelcase\n                banner_name: string;\n            };\n            response: void;\n        };\n        [BANNER_CLOSED_URL]: {\n            queryParams: void;\n            body: {\n                // eslint-disable-next-line camelcase\n                banner_name: string;\n            };\n            response: void;\n        };\n    }\n}\n\nconst SEO_QUERIES = {\n    hhtmFromLabel: 'top_banner',\n};\n\nconst TopPromoBanner: FC = () => {\n    const isShowBanner = useIsShowTopBanner();\n    const dispatch = useDispatch();\n    const userType = useSelector(({ userType }) => userType);\n    const { isFirstShow, link, translations, name } = useSelector(({ topPromoBanner }) => topPromoBanner);\n    const showBannerRef = useElementShown(topPromoBannerShown, {\n        // eslint-disable-next-line camelcase\n        banner_name: name,\n        // eslint-disable-next-line camelcase\n        is_first_shown: isFirstShow,\n    });\n    const isMobile = useBreakpoint(Breakpoint.L) === Breakpoint.XS;\n\n    useEffect(() => {\n        if (!isShowBanner) {\n            return;\n        }\n\n        // eslint-disable-next-line camelcase\n        fetcher.post(BANNER_SHOWN_URL, { banner_name: name }).catch(console.error);\n    }, [isFirstShow, isShowBanner, userType, name]);\n\n    const handleClose: MouseEventHandler<HTMLDivElement> = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        // eslint-disable-next-line camelcase\n        topPromoBannerClosed({ banner_name: name });\n        // eslint-disable-next-line camelcase\n        fetcher.post(BANNER_CLOSED_URL, { banner_name: name }).catch(console.error);\n        dispatch(hideTopPromoBanner());\n    };\n\n    const handleVisit = () => {\n        // eslint-disable-next-line camelcase\n        topPromoBannerVisited({ banner_name: name });\n        // eslint-disable-next-line camelcase\n        fetcher.post(BANNER_VISITED_URL, { banner_name: name }).catch(console.error);\n        dispatch(hideTopPromoBanner());\n    };\n\n    const renderContent = (content: ReactElement) => {\n        if (isMobile) {\n            return (\n                <div className={styles.banner} ref={showBannerRef}>\n                    <div className={styles.container}>{content}</div>\n                </div>\n            );\n        }\n\n        return (\n            <Link className={styles.container} to={link} target=\"_blank\" additionalQueryParams={SEO_QUERIES}>\n                <div className={styles.banner} onClick={handleVisit} ref={showBannerRef}>\n                    {content}\n                </div>\n            </Link>\n        );\n    };\n\n    if (!isShowBanner) {\n        return null;\n    }\n\n    return (\n        <NoIndex>\n            {renderContent(\n                <ColumnsWrapper>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        <div className={styles.wrapper}>\n                            <div className={styles.contentDesktop}>\n                                {!!translations.desktop.description && (\n                                    <H3Section>{translations.desktop.description}</H3Section>\n                                )}\n                                {!!translations.desktop.description && !!translations.desktop.link && (\n                                    <HSpacing base={6} />\n                                )}\n                                {!!translations.desktop.link && (\n                                    <Button kind={ButtonKind.Inversed} scale={ButtonScale.Small}>\n                                        {translations.desktop.link}\n                                    </Button>\n                                )}\n                            </div>\n                            <div className={styles.contentMobile}>\n                                {!!translations.mobile.description && (\n                                    <H3Section>{translations.mobile.description}</H3Section>\n                                )}\n                                {!!translations.mobile.desctiption && !!translations.mobile.link && (\n                                    <VSpacing base={2} />\n                                )}\n                                {!!translations.mobile.link && (\n                                    <>\n                                        <VSpacing base={4} />\n                                        <Button\n                                            Element={Link}\n                                            to={link}\n                                            onClick={handleVisit}\n                                            kind={ButtonKind.Inversed}\n                                            scale={ButtonScale.Small}\n                                        >\n                                            {translations.mobile.link}\n                                        </Button>\n                                    </>\n                                )}\n                            </div>\n                            <HSpacing base={6} />\n                            <div className={styles.close} onClick={handleClose}>\n                                <Icon view={IconView.Cross} scale={IconScale.Small} initial={IconColor.White} />\n                            </div>\n                        </div>\n                    </Column>\n                </ColumnsWrapper>\n            )}\n        </NoIndex>\n    );\n};\n\nexport default TopPromoBanner;\n","import { useEffect, useState } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ImportantNotifications from 'lux/components/ImportantNotifications';\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    content: 'unsupportedBrowser.text',\n    link: 'unsupportedBrowser.linkText',\n};\n\ninterface UserAgentDetails {\n    isSupported: true;\n}\n\nconst UnsupportedBrowser: TranslatedComponent = ({ trls }) => {\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        if (typeof window?.bloko?.getUserAgentDetails === 'function') {\n            const userAgentDetails = window.bloko.getUserAgentDetails(window.navigator.userAgent) as UserAgentDetails;\n\n            if (!userAgentDetails?.isSupported) {\n                setShow(true);\n            }\n        }\n    }, []);\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        <NoIndex>\n            <ImportantNotifications>\n                {[trls[TrlKeys.content]]}\n                &nbsp;\n                <BlokoLink to=\"/article/176\" Element={Link} kind={LinkKind.Inversed}>\n                    {trls[TrlKeys.link]}\n                </BlokoLink>\n            </ImportantNotifications>\n        </NoIndex>\n    );\n};\n\nexport default translation(UnsupportedBrowser);\n","import { FC, PropsWithChildren, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport AppSmartBanner from 'lux/components/AppSmartBanner';\nimport PostChangeModal from 'lux/components/Applicant/JobSearchStatus/PostChangeModal';\nimport Portal from 'lux/components/CodeInjector/Portal';\nimport CookiesPolicyBanner from 'lux/components/CookiesPolicy/Banner';\nimport CookiesPolicyInformer from 'lux/components/CookiesPolicy/Informer';\nimport EmailVerification from 'lux/components/EmailVerification';\nimport EmployerInformer from 'lux/components/EmployerInformer';\nimport EmployerZpOnboarding from 'lux/components/EmployerZpOnboarding';\nimport Footer from 'lux/components/Footer';\nimport LoyaltySurveyModal from 'lux/components/LoyaltySurveyModal';\nimport SiteExceptions from 'lux/components/SiteExceptions';\nimport SubscriptionInformer from 'lux/components/SubscriptionInformer';\nimport SupernovaMainMenu from 'lux/components/SupernovaMainMenu';\nimport IsDashboardContext from 'lux/components/SupernovaMainMenu/IsDashboardContext';\nimport SupernovaOverlayMenu from 'lux/components/SupernovaOverlayMenu';\nimport TopPromoBanner from 'lux/components/TopPromoBanner';\nimport UnsupportedBrowser from 'lux/components/UnsupportedBrowser';\nimport useIsMenuHidden from 'lux/hooks/useIsMenuHidden';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport LightPageLayoutHeader from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutHeader';\nimport MainContentRefContext from 'lux/components/PageLayout/MainContentRefContext';\n\nconst checkIsDashboard = (userType: UserType, pathname: string) => {\n    const dashboardMenuRules = [\n        { userType: UserType.Anonymous, pathname: '/' },\n        { userType: UserType.BackOffice, pathname: '/' },\n        { userType: UserType.NedoUser, pathname: '/' },\n    ];\n\n    return dashboardMenuRules.some((rule) => rule.userType === userType && rule.pathname === pathname);\n};\n\nconst FullPageLayout: FC<PropsWithChildren> = ({ children }) => {\n    const { pathname } = useLocation();\n    const errorCode = useSelector(({ errorCode }) => errorCode);\n    const isLightPage = useSelector(({ isLightPage }) => isLightPage);\n    const isLegacyPage = useSelector(({ request }) => request.luxPageName === 'LegacyPage');\n    const mainContentRef = useRef(null);\n    const mainContentVisible = useSelector(({ mainContentVisible }) => mainContentVisible);\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n    const showZpEmployerOnboardingModal = useSelector(\n        ({ zpEmployerOnboarding }) => zpEmployerOnboarding?.showOnboardingModal\n    );\n    const userType = useSelector(({ userType }) => userType);\n    const isMenuHidden = useIsMenuHidden();\n    const isDashboardMenu = checkIsDashboard(userType, pathname);\n    const useXhhLayout = useSelector(({ useXhhLayout }) => useXhhLayout);\n\n    if (isLightPage) {\n        return (\n            <>\n                {isLegacyPage && !isMenuHidden && (\n                    /* Параметр logLevel=\"info\" выстален намеренно:\n                     * так как на некоторых страницах могут некорректно обрабатываться ошибки FailFast\n                     * из-за чего не будет правильно выстален шаблон xsl, но реакт попытается отрисовать портал\n                     */\n                    <Portal place=\"light-page-menu\" logLevel={errorCode ? 'info' : undefined}>\n                        <LightPageLayoutHeader />\n                    </Portal>\n                )}\n                {children}\n                {showZpEmployerOnboardingModal && <EmployerZpOnboarding />}\n            </>\n        );\n    }\n\n    const isBroadMainContent = !isLightPage && !isDashboardMenu && !isMenuHidden;\n    return (\n        <>\n            <AppSmartBanner />\n            <TopPromoBanner />\n            <CookiesPolicyBanner />\n            <CookiesPolicyInformer />\n            <SiteExceptions />\n            <UnsupportedBrowser />\n            <SubscriptionInformer />\n            <EmailVerification />\n            {!isMenuHidden && (\n                <>\n                    <SupernovaOverlayMenu />\n                    <IsDashboardContext.Provider value={isDashboardMenu}>\n                        <SupernovaMainMenu />\n                    </IsDashboardContext.Provider>\n                </>\n            )}\n            {userType === UserType.Employer && <LoyaltySurveyModal />}\n            {topLevelSite !== TopLevelSite.BY && <EmployerInformer />}\n            {showZpEmployerOnboardingModal && <EmployerZpOnboarding />}\n            {userType === UserType.Applicant && <PostChangeModal />}\n            <div\n                className={classnames('HH-MainContent HH-Supernova-MainContent', {\n                    'g-hidden': !mainContentVisible,\n                })}\n            >\n                <MainContentRefContext.Provider value={mainContentRef}>\n                    <div\n                        className={classnames('main-content', {\n                            'main-content_broad': isBroadMainContent && !useXhhLayout,\n                            'main-content_broad-spacing': isBroadMainContent && useXhhLayout,\n                        })}\n                        ref={mainContentRef}\n                    >\n                        {children}\n                    </div>\n                </MainContentRefContext.Provider>\n                <Footer withSpacing={useXhhLayout} />\n            </div>\n        </>\n    );\n};\n\nexport default FullPageLayout;\n","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaMainMenu from 'lux/components/SupernovaMainMenu';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nconst TrlKeys = {\n    logoTitle: 'navi.logo.title',\n};\n\nconst LightPageLayoutHeader: TranslatedComponent<LightPageCommonProps> = ({ trls, promo }) => {\n    const logoDomain = useSelector(({ logos }) => logos.logoDomain);\n\n    return (\n        <div className=\"light-page-header\">\n            <div className=\"light-page-header__xs\">\n                <SupernovaMainMenu />\n            </div>\n            <div className=\"light-page-header__content\">\n                <a href=\"/\">\n                    <span className=\"light-page-header__img\">\n                        <span\n                            className={classnames('supernova-logo', {\n                                'supernova-logo_inversed': promo,\n                                [`supernova-logo_${logoDomain}`]: logoDomain,\n                            })}\n                            title={trls[TrlKeys.logoTitle]}\n                        />\n                    </span>\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(LightPageLayoutHeader);\n","import { createContext, RefObject } from 'react';\n\nexport default createContext<RefObject<HTMLDivElement> | null>(null);\n","import Column from 'bloko/blocks/column';\nimport FormItem from 'bloko/blocks/form/FormItem';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    addField: 'resumesSearch.advanced.addField',\n};\n\nconst AddButton: TranslatedComponent<{ addQuery: () => void }> = ({ trls, addQuery }) => {\n    return (\n        <Column xs=\"4\" s=\"8\" m=\"3\" l=\"4\">\n            <FormItem>\n                <Link appearance={LinkAppearance.Pseudo} onClick={addQuery} data-qa=\"resumes-search-wizard-add-item\">\n                    {trls[TrlKeys.addField]}\n                </Link>\n            </FormItem>\n        </Column>\n    );\n};\n\nexport default translation(AddButton);\n","import CustomSelect, {\n    CustomSelectLayer,\n    CustomSelectOption,\n    CustomSelectOptionSecondaryText,\n} from 'bloko/blocks/customSelect';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SearchQueryKeys, ExpCompanySizeOption, SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [ExpCompanySizeOption.Small]: 'resumeSearch.company_size.count.small',\n    [ExpCompanySizeOption.Medium]: 'resumeSearch.company_size.count.medium',\n    [ExpCompanySizeOption.Large]: 'resumeSearch.company_size.count.large',\n};\n\ninterface ConditionSelectProps {\n    name: SearchQueryKeys;\n    query: SearchQueries;\n    setQuery: (value: SearchQueries) => void;\n    isHidden?: boolean;\n}\n\nconst ConditionSelect: TranslatedComponent<ConditionSelectProps> = ({ trls, name, query, setQuery, isHidden }) => {\n    const preparedTrls = useSelector((state) => state.searchQueries?.trls);\n    const options = useSelector((state) => state.resumeSearchDictionaries?.[name]);\n\n    if (isHidden) {\n        return <input type=\"hidden\" name={name} value={query[name].join(',')} />;\n    }\n\n    if (!preparedTrls) {\n        return null;\n    }\n\n    return (\n        <CustomSelect\n            name={name}\n            value={query[name][0]}\n            onChange={(newValue) => setQuery({ ...query, [name]: [newValue] })}\n            wrapperProps={{ 'data-qa': `resumes-search-wizard-${name}-switcher` }}\n            layer={CustomSelectLayer.AboveOverlayContent}\n            light\n        >\n            {options.map((option) => {\n                const trlsList = preparedTrls[name];\n                const optionText = trlsList[option as keyof typeof trlsList];\n                return (\n                    <CustomSelectOption value={option} key={option} data-qa={`resumes-search-wizard-${name}-${option}`}>\n                        {optionText}\n                        {name === CriteriaKey.ExpCompanySize && (\n                            <CustomSelectOptionSecondaryText>\n                                {option !== ExpCompanySizeOption.Any\n                                    ? trls[TrlKeys[option as keyof typeof TrlKeys]]\n                                    : ''}\n                            </CustomSelectOptionSecondaryText>\n                        )}\n                    </CustomSelectOption>\n                );\n            })}\n        </CustomSelect>\n    );\n};\n\nexport default translation(ConditionSelect);\n","import { useMemo, HTMLProps } from 'react';\n\nimport CompositeSelection from 'bloko/blocks/compositeSelection';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport Link, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { fromTree } from 'bloko/common/tree/treeCollectionHelper';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'fied.header.title.mobile',\n    anyIndustry: 'resumesSearch.industry.any',\n    oneIndustry: 'resumesSearch.industry.one',\n    someIndustry: 'resumesSearch.industry.some',\n    manyIndustry: 'resumesSearch.industry.many',\n    save: 'treeselector.save',\n    cancel: 'treeselector.cancel',\n    placeholder: 'treeselector.quicksearch',\n    notFound: 'treeselector.notFound',\n};\n\ninterface IndustrySelectProps {\n    value: string[];\n    setValue: (value: string[]) => void;\n    isNaviSearch?: boolean;\n    isHidden?: boolean;\n}\n\nconst SpanWrapper = (props: HTMLProps<HTMLSpanElement>) => <span {...props}>{props.children}</span>;\n\nconst IndustrySelect: TranslatedComponent<IndustrySelectProps> = ({\n    trls,\n    value,\n    setValue,\n    isNaviSearch,\n    isHidden,\n}) => {\n    const industryTree = useSelector((state) => state.industriesTree);\n    const industryTreeTreeCollection = useMemo(() => fromTree(industryTree), [industryTree]);\n\n    const defaultValues = useSelector((state) => state.searchQueries?.default[CriteriaKey.ExpIndustry]) || [];\n    const selectedValues = value.toString() === defaultValues.toString() ? [] : value;\n\n    const selectedValuesTrl = useMemo(() => {\n        if (selectedValues.length === 0) {\n            return trls[TrlKeys.anyIndustry];\n        }\n        const formatValue = { '{0}': selectedValues.length };\n        return (\n            <ConversionNumber\n                one={format(trls[TrlKeys.oneIndustry], formatValue)}\n                some={format(trls[TrlKeys.someIndustry], formatValue)}\n                many={format(trls[TrlKeys.manyIndustry], formatValue)}\n                value={selectedValues.length}\n                hasValue={false}\n            />\n        );\n    }, [selectedValues.length, trls]);\n\n    return (\n        <>\n            <input\n                type=\"hidden\"\n                name={CriteriaKey.ExpIndustry}\n                value={selectedValues.length > 0 ? selectedValues.join(',') : defaultValues.join(',')}\n            />\n            {!isHidden && (\n                <CompositeSelection\n                    collection={industryTreeTreeCollection}\n                    value={selectedValues}\n                    onChange={(values) => setValue(values.length === 0 ? defaultValues : values)}\n                    title={trls[TrlKeys.title]}\n                    trl={{\n                        submit: trls[TrlKeys.save],\n                        cancel: trls[TrlKeys.cancel],\n                        searchPlaceholder: trls[TrlKeys.placeholder],\n                        notFound: trls[TrlKeys.notFound],\n                    }}\n                >\n                    {({ showTreeSelectorPopup }) => (\n                        <div\n                            className=\"condition-select-industry\"\n                            data-qa={`resumes-search-wizard-${CriteriaKey.ExpIndustry}-switcher`}\n                        >\n                            <Link\n                                kind={LinkKind.Tertiary}\n                                appearance={isNaviSearch ? undefined : LinkAppearance.Pseudo}\n                                Element={SpanWrapper}\n                                onClick={industryTree.length ? showTreeSelectorPopup : () => null}\n                                icon={\n                                    industryTree.length ? (\n                                        <Icon view={IconView.Bars} initial={IconColor.Gray50} scale={IconScale.Small} />\n                                    ) : (\n                                        <Loading scale={LoadingScale.Small} />\n                                    )\n                                }\n                            >\n                                {selectedValuesTrl}\n                            </Link>\n                        </div>\n                    )}\n                </CompositeSelection>\n            )}\n        </>\n    );\n};\n\nexport default translation(IndustrySelect);\n","import { FC } from 'react';\n\nimport Checkbox from 'bloko/blocks/checkbox';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { PosOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface PosSelectOptionProps {\n    option: PosOption;\n    checked: boolean;\n    indeterminate?: boolean;\n    handleChange: (option: PosOption, checked: boolean) => void;\n}\n\nconst PosSelectOption: FC<PosSelectOptionProps> = ({ option, checked, indeterminate = false, handleChange }) => {\n    const preparedTrls = useSelector((state) => state.searchQueries?.trls[CriteriaKey.Pos]);\n\n    if (!preparedTrls) {\n        return null;\n    }\n\n    return (\n        <>\n            <Checkbox\n                checked={checked}\n                indeterminate={indeterminate}\n                onChange={({ target }) => handleChange(option, target.checked)}\n                data-qa={`resumes-search-wizard-${CriteriaKey.Pos}-${option}`}\n            >\n                {preparedTrls[option]}\n            </Checkbox>\n            <VSpacing base={4} />\n        </>\n    );\n};\n\nexport default PosSelectOption;\n","import {\n    PosOption,\n    SearchQueries,\n    ExpCompanySizeOption,\n    ExpPeriodOption,\n} from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nexport const EXTERNAL_OPTIONS = [PosOption.Position, PosOption.Education, PosOption.Keywords, PosOption.Workplaces];\nexport const WORKPLACE_OPTIONS = [\n    PosOption.WorkplaceOrganization,\n    PosOption.WorkplacePosition,\n    PosOption.WorkplaceDescription,\n];\n\nexport const includesSome = (a: unknown[], b: unknown[]): boolean => {\n    return b.some((item) => a.includes(item));\n};\n\nexport const includesEvery = (a: unknown[], b: unknown[]): boolean => {\n    return b.every((item) => a.includes(item));\n};\n\nexport const getStateWithDefaultValues = (state: SearchQueries, values: PosOption[]): SearchQueries => {\n    if (values.length === 1 && values.every((item) => item === PosOption.FullText)) {\n        state[CriteriaKey.ExpCompanySize] = [ExpCompanySizeOption.Any];\n        state[CriteriaKey.ExpIndustry] = ['any'];\n        state[CriteriaKey.ExpPeriod] = [ExpPeriodOption.AllTime];\n    }\n    return state;\n};\n\nexport const getHasWorkplaceOptions = (values: PosOption[]): boolean => {\n    return includesSome(values, [PosOption.Workplaces, ...WORKPLACE_OPTIONS]);\n};\n","import { FC, Fragment } from 'react';\n\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { PosOption } from 'lux/models/search/resume/searchQueries';\n\nimport PosSelectOption from 'lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectOption';\nimport {\n    EXTERNAL_OPTIONS,\n    WORKPLACE_OPTIONS,\n    includesSome,\n    includesEvery,\n} from 'lux/components/ResumeAdvancedSearch/SearchQueries/posUtils';\n\ninterface PosSelectProps {\n    selectedValues: PosOption[];\n    setSelectedValues: (value: PosOption[]) => void;\n}\n\nconst PosSelect: FC<PosSelectProps> = ({ selectedValues, setSelectedValues }) => {\n    const isZarplataPlatform = useIsZarplataPlatform();\n    const workPlaceOptionsFiltered = isZarplataPlatform\n        ? WORKPLACE_OPTIONS.filter((item) => item !== PosOption.WorkplaceOrganization)\n        : [...WORKPLACE_OPTIONS];\n\n    const handleChange = (option: PosOption, checked: boolean) => {\n        let newValues: PosOption[];\n        if (checked) {\n            // было выбрано \"везде\", а теперь выбрали что-то другое - возвращаем только выбранный пункт\n            if (selectedValues.includes(PosOption.FullText)) {\n                newValues = [option];\n            } else {\n                newValues = [...selectedValues, option];\n            }\n            if (includesEvery(newValues, WORKPLACE_OPTIONS)) {\n                // указали все три чайлда от \"в опыте работы\" - снимаем галки с чайлдов, ставим только паренту\n                newValues = [...newValues.filter((value) => !WORKPLACE_OPTIONS.includes(value)), PosOption.Workplaces];\n            } else if (option === PosOption.Workplaces) {\n                // указали \"в опыте работы\" - снимаем галки с чайлдов\n                newValues = [...newValues.filter((value) => !WORKPLACE_OPTIONS.includes(value))];\n            }\n            // указали все пункты или выбрали \"Везде\" - ставим галочку только на \"Везде\"\n            if (includesEvery(newValues, EXTERNAL_OPTIONS) || option === PosOption.FullText) {\n                newValues = [PosOption.FullText];\n            }\n        } else if (WORKPLACE_OPTIONS.includes(option) && selectedValues.includes(PosOption.Workplaces)) {\n            // был выбран вариант \"в опыте работы\", сняли галочку у его чайлда - снимаем с \"в опыте работы\", проставляем всем чайлдам кроме выбранного\n            newValues = [\n                ...selectedValues.filter((value) => value !== PosOption.Workplaces),\n                ...WORKPLACE_OPTIONS.filter((value) => value !== option),\n            ];\n        } else if (selectedValues.length === 1) {\n            // была всего одна галочка и мы ее отжали - ставим галочку на \"Везде\"\n            newValues = [PosOption.FullText];\n        } else {\n            newValues = selectedValues.filter((value) => value !== option);\n        }\n        setSelectedValues(newValues);\n    };\n\n    return (\n        <>\n            {[PosOption.FullText, ...EXTERNAL_OPTIONS].map((option) => (\n                <Fragment key={option}>\n                    <div className=\"options-selector-item\">\n                        <PosSelectOption\n                            option={option}\n                            checked={selectedValues.includes(option)}\n                            indeterminate={\n                                option === PosOption.Workplaces && includesSome(selectedValues, WORKPLACE_OPTIONS)\n                            }\n                            handleChange={handleChange}\n                        />\n                        {option === PosOption.Workplaces &&\n                            workPlaceOptionsFiltered.map((option) => (\n                                <div className=\"options-selector-item\" key={option}>\n                                    <PosSelectOption\n                                        option={option}\n                                        checked={\n                                            selectedValues.includes(option) ||\n                                            selectedValues.includes(PosOption.Workplaces)\n                                        }\n                                        handleChange={handleChange}\n                                    />\n                                </div>\n                            ))}\n                    </div>\n                    {option === PosOption.FullText && (\n                        <>\n                            <div className=\"horizontal-divider\" />\n                            <VSpacing base={4} />\n                        </>\n                    )}\n                </Fragment>\n            ))}\n        </>\n    );\n};\n\nexport default PosSelect;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { PosOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { WORKPLACE_OPTIONS } from 'lux/components/ResumeAdvancedSearch/SearchQueries/posUtils';\n\nconst TrlKeys = {\n    selectedValuesTitle: 'resumesSearch.searchByFields.label',\n};\n\nconst PosSelectOption: TranslatedComponent<{ values: PosOption[] }> = ({ trls, values }) => {\n    const preparedTrls = useSelector((state) => state.searchQueries?.trls[CriteriaKey.Pos]);\n\n    if (!preparedTrls) {\n        return null;\n    }\n\n    if (values.length === 1) {\n        return <>{preparedTrls[values[0]]}</>;\n    }\n    const valuesCount = values.includes(PosOption.Workplaces)\n        ? values.length - 1 + WORKPLACE_OPTIONS.length\n        : values.length;\n    return <>{format(trls[TrlKeys.selectedValuesTitle], { '{0}': valuesCount })}</>;\n};\n\nexport default translation(PosSelectOption);\n","import Button, { ButtonScale } from 'bloko/blocks/button';\nimport ButtonSelect from 'bloko/blocks/button/ButtonSelect';\nimport ClickDown, { DownLayer, DownPlacement } from 'bloko/blocks/drop/Down/Click';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { PosOption, SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport PosSelect from 'lux/components/ResumeAdvancedSearch/SearchQueries/PosSelect';\nimport PosSelectTitle from 'lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectTitle';\nimport {\n    getHasWorkplaceOptions,\n    getStateWithDefaultValues,\n} from 'lux/components/ResumeAdvancedSearch/SearchQueries/posUtils';\n\nconst TrlKeys = {\n    submit: 'resumesSearch.advanced.apply',\n};\n\ninterface PosSelectorDropProps {\n    query: SearchQueries;\n    setQuery: (value: SearchQueries) => void;\n    setHasWorkplaceOptions: (hasWorkplaceOptions: boolean) => void;\n}\n\nconst PosSelectorDrop: TranslatedComponent<PosSelectorDropProps> = ({\n    trls,\n    query,\n    setQuery,\n    setHasWorkplaceOptions,\n}) => {\n    const handlePosChange = (values: PosOption[]) => {\n        setHasWorkplaceOptions(getHasWorkplaceOptions(values));\n        setQuery(getStateWithDefaultValues({ ...query, [CriteriaKey.Pos]: values }, values));\n    };\n\n    return (\n        <>\n            <input type=\"hidden\" name={CriteriaKey.Pos} value={query[CriteriaKey.Pos].join(',')} />\n            <ClickDown\n                render={(close) => (\n                    <>\n                        <PosSelect selectedValues={query[CriteriaKey.Pos]} setSelectedValues={handlePosChange} />\n                        <Button scale={ButtonScale.Small} onClick={close} data-qa=\"resumes-search-wizard-pos-close\">\n                            {trls[TrlKeys.submit]}\n                        </Button>\n                    </>\n                )}\n                placement={DownPlacement.BottomStart}\n                layer={DownLayer.AboveOverlayContent}\n            >\n                <ButtonSelect data-qa={`resumes-search-wizard-${CriteriaKey.Pos}-switcher`} flexible light>\n                    <PosSelectTitle values={query[CriteriaKey.Pos]} />\n                </ButtonSelect>\n            </ClickDown>\n        </>\n    );\n};\n\nexport default translation(PosSelectorDrop);\n","import { useState, FC, useContext, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport AutoInviteContext from 'lux/components/AutoInviteModal/common/AutoInviteContext';\nimport { useIsHeadHunterPlatform } from 'lux/hooks/usePlatform';\nimport { SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport ConditionSelect from 'lux/components/ResumeAdvancedSearch/SearchQueries/ConditionSelect';\nimport IndustrySelect from 'lux/components/ResumeAdvancedSearch/SearchQueries/IndustrySelect';\nimport PosSelectorDrop from 'lux/components/ResumeAdvancedSearch/SearchQueries/PosSelectorDrop';\nimport { getHasWorkplaceOptions } from 'lux/components/ResumeAdvancedSearch/SearchQueries/posUtils';\n\ninterface QueryConditionsProps {\n    query: SearchQueries;\n    setQuery: (value: SearchQueries) => void;\n    isNaviSearch?: boolean;\n    autoInvite?: boolean;\n}\n\nconst QueryConditions: FC<QueryConditionsProps> = ({ query, setQuery, isNaviSearch, autoInvite }) => {\n    const [hasWorkplaceOptions, setHasWorkplaceOptions] = useState(getHasWorkplaceOptions(query[CriteriaKey.Pos]));\n    const isHeadHunterPlatform = useIsHeadHunterPlatform();\n    const autoInviteHandlerFormChange = useContext(AutoInviteContext);\n\n    useEffect(() => {\n        autoInviteHandlerFormChange?.();\n    }, [autoInviteHandlerFormChange, query]);\n\n    return (\n        <div\n            className={classnames('condition-group', {\n                'condition-group_inline': isNaviSearch,\n            })}\n        >\n            <div className=\"condition-row\">\n                <ConditionSelect name={CriteriaKey.Logic} query={query} setQuery={setQuery} />\n                <PosSelectorDrop query={query} setQuery={setQuery} setHasWorkplaceOptions={setHasWorkplaceOptions} />\n                <ConditionSelect\n                    name={CriteriaKey.ExpPeriod}\n                    query={query}\n                    setQuery={setQuery}\n                    isHidden={!hasWorkplaceOptions}\n                />\n            </div>\n            {isHeadHunterPlatform && (\n                <div className=\"condition-row\">\n                    <ConditionSelect\n                        name={CriteriaKey.ExpCompanySize}\n                        query={query}\n                        setQuery={setQuery}\n                        isHidden={!hasWorkplaceOptions}\n                    />\n                    {autoInvite && (\n                        <IndustrySelect\n                            value={query[CriteriaKey.ExpIndustry]}\n                            setValue={(values: string[]) => setQuery({ ...query, [CriteriaKey.ExpIndustry]: values })}\n                            isNaviSearch={isNaviSearch}\n                            isHidden={!hasWorkplaceOptions}\n                        />\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default QueryConditions;\n","import { useMemo } from 'react';\n\nimport CompositeSelection from 'bloko/blocks/compositeSelection';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport InputText from 'bloko/blocks/inputText';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport getConversionType from 'bloko/common/getConversionType';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { fromTree } from 'bloko/common/tree/treeCollectionHelper';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'fied.header.title.mobile',\n    selectIndustry: 'resumesSearch.industry.mobile.any',\n    oneIndustry: 'resumesSearch.industry.mobile.one',\n    someIndustry: 'resumesSearch.industry.mobile.some',\n    manyIndustry: 'resumesSearch.industry.mobile.many',\n    save: 'treeselector.save',\n    cancel: 'treeselector.cancel',\n    placeholder: 'treeselector.quicksearch',\n    notFound: 'treeselector.notFound',\n};\n\ninterface IndustryXsSelectorProps {\n    values: string[];\n    setValues: (value: string[]) => void;\n}\n\nconst IndustryXsSelector: TranslatedComponent<IndustryXsSelectorProps> = ({ trls, values, setValues }) => {\n    const industryTree = useSelector((state) => state.industriesTree);\n    const industryTreeTreeCollection = useMemo(() => fromTree(industryTree), [industryTree]);\n\n    const defaultValue = useSelector((state) => state.searchQueries?.default[CriteriaKey.ExpIndustry]) || [];\n    const selectedValues = values.toString() === defaultValue.toString() ? [] : values;\n\n    const selectedValuesTrl = useMemo(() => {\n        if (selectedValues.length === 0) {\n            return trls[TrlKeys.selectIndustry];\n        }\n        const conversionTrl = getConversionType({\n            one: trls[TrlKeys.oneIndustry],\n            some: trls[TrlKeys.someIndustry],\n            many: trls[TrlKeys.manyIndustry],\n            value: selectedValues.length,\n        });\n        return format(conversionTrl, { '{0}': selectedValues.length });\n    }, [selectedValues.length, trls]);\n\n    return (\n        <>\n            <Text strong>{trls[TrlKeys.title]}</Text>\n            <VSpacing base={3} />\n            <CompositeSelection\n                collection={industryTreeTreeCollection}\n                value={selectedValues}\n                onChange={(values) => setValues(values.length === 0 ? defaultValue : values)}\n                title={trls[TrlKeys.title]}\n                trl={{\n                    submit: trls[TrlKeys.save],\n                    cancel: trls[TrlKeys.cancel],\n                    searchPlaceholder: trls[TrlKeys.placeholder],\n                    notFound: trls[TrlKeys.notFound],\n                }}\n            >\n                {({ showTreeSelectorPopup, renderTagList }) => (\n                    <>\n                        <InputText\n                            onClick={() => showTreeSelectorPopup()}\n                            value={selectedValuesTrl}\n                            icon={\n                                <Icon\n                                    view={IconView.Bars}\n                                    scale={IconScale.Small}\n                                    initial={IconColor.Gray50}\n                                    highlighted={IconColor.Gray60}\n                                />\n                            }\n                        />\n                        <VSpacing base={1} />\n                        {renderTagList({ stretched: true, removable: true })}\n                    </>\n                )}\n            </CompositeSelection>\n        </>\n    );\n};\n\nexport default translation(IndustryXsSelector);\n","import { H2Section } from 'bloko/blocks/header';\nimport Modal, { ModalHeader, ModalContent } from 'bloko/blocks/modal';\nimport Radio from 'bloko/blocks/radio';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ExpCompanySizeOption, ExpPeriodOption, LogicOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [CriteriaKey.Logic]: {\n        [LogicOption.Normal]: 'resumesSearch.logic.mobile.normal',\n        [LogicOption.Any]: 'resumesSearch.logic.any',\n        [LogicOption.Phrase]: 'resumesSearch.logic.phrase',\n        [LogicOption.Except]: 'resumesSearch.logic.except',\n    },\n    [CriteriaKey.ExpPeriod]: {\n        [ExpPeriodOption.AllTime]: 'resumeSearch.experience_period.all_time',\n        [ExpPeriodOption.LastYear]: 'resumeSearch.experience_period.last_year',\n        [ExpPeriodOption.LastThreeYears]: 'resumeSearch.experience_period.last_three_years',\n        [ExpPeriodOption.LastSixYears]: 'resumeSearch.experience_period.last_six_years',\n    },\n    [CriteriaKey.ExpCompanySize]: {\n        [ExpCompanySizeOption.Any]: 'resumeSearch.company_size.mobile.any',\n        [ExpCompanySizeOption.Small]: 'resumeSearch.company_size.mobile.small',\n        [ExpCompanySizeOption.Medium]: 'resumeSearch.company_size.mobile.medium',\n        [ExpCompanySizeOption.Large]: 'resumeSearch.company_size.mobile.large',\n    },\n    companySizeHint: {\n        [ExpCompanySizeOption.Small]: 'resumeSearch.company_size.count.small',\n        [ExpCompanySizeOption.Medium]: 'resumeSearch.company_size.count.medium',\n        [ExpCompanySizeOption.Large]: 'resumeSearch.company_size.count.large',\n    },\n};\n\ninterface QueryParamMap {\n    [CriteriaKey.Logic]: LogicOption;\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption;\n    [CriteriaKey.ExpCompanySize]: ExpCompanySizeOption;\n}\n\ninterface BottomSheetSelectorProps {\n    name: keyof QueryParamMap;\n    title: string;\n    currentOption: QueryParamMap[keyof QueryParamMap];\n    setCurrentOption: (value: QueryParamMap[keyof QueryParamMap]) => void;\n    modalIsVisible: boolean;\n    setModalIsVisible: (value: boolean) => void;\n}\n\nconst BottomSheetSelector: TranslatedComponent<BottomSheetSelectorProps> = ({\n    trls,\n    name,\n    title,\n    currentOption,\n    setCurrentOption,\n    modalIsVisible,\n    setModalIsVisible,\n}) => {\n    const options = useSelector((state) => state.resumeSearchDictionaries?.[name]);\n    const optionsTrl = TrlKeys[name];\n\n    return (\n        <Modal visible={modalIsVisible} onClose={() => setModalIsVisible(false)} useBottomSheet>\n            <ModalHeader>\n                <H2Section>{title}</H2Section>\n                <VSpacing base={1} />\n            </ModalHeader>\n            <ModalContent>\n                {options.map((item) => (\n                    <Radio\n                        key={item}\n                        checked={item === currentOption}\n                        onChange={() => {\n                            setCurrentOption(item);\n                            setModalIsVisible(false);\n                        }}\n                        reversed\n                    >\n                        <VSpacing base={3} />\n                        {trls[optionsTrl[item as keyof typeof optionsTrl]]}\n                        {name === CriteriaKey.ExpCompanySize && (\n                            <Text importance={TextImportance.Tertiary}>\n                                {item !== ExpCompanySizeOption.Any\n                                    ? trls[TrlKeys.companySizeHint[item as keyof typeof TrlKeys.companySizeHint]]\n                                    : ''}\n                            </Text>\n                        )}\n                        <VSpacing base={3} />\n                    </Radio>\n                ))}\n            </ModalContent>\n        </Modal>\n    );\n};\n\nexport default translation(BottomSheetSelector);\n","import { useState } from 'react';\n\nimport Select, { Option } from 'bloko/blocks/select';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport {\n    ExpCompanySizeOption,\n    ExpPeriodOption,\n    LogicOption,\n    SearchQueries,\n} from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport BottomSheetSelector from 'lux/components/ResumeAdvancedSearch/SearchQueries/BottomSheetSelector';\n\nconst TrlKeys = {\n    titles: {\n        [CriteriaKey.Logic]: 'resumesSearch.logic.title',\n        [CriteriaKey.ExpPeriod]: 'resumesSearch.exp_period.title',\n        [CriteriaKey.ExpCompanySize]: 'resumesSearch.exp_company_size.title',\n    },\n    [CriteriaKey.Logic]: {\n        [LogicOption.Normal]: 'resumesSearch.logic.mobile.normal',\n        [LogicOption.Any]: 'resumesSearch.logic.any',\n        [LogicOption.Phrase]: 'resumesSearch.logic.phrase',\n        [LogicOption.Except]: 'resumesSearch.logic.except',\n    },\n    [CriteriaKey.ExpPeriod]: {\n        [ExpPeriodOption.AllTime]: 'resumeSearch.experience_period.all_time',\n        [ExpPeriodOption.LastYear]: 'resumeSearch.experience_period.last_year',\n        [ExpPeriodOption.LastThreeYears]: 'resumeSearch.experience_period.last_three_years',\n        [ExpPeriodOption.LastSixYears]: 'resumeSearch.experience_period.last_six_years',\n    },\n    [CriteriaKey.ExpCompanySize]: {\n        [ExpCompanySizeOption.Any]: 'resumeSearch.company_size.mobile.any',\n        [ExpCompanySizeOption.Small]: 'resumeSearch.company_size.mobile.small',\n        [ExpCompanySizeOption.Medium]: 'resumeSearch.company_size.mobile.medium',\n        [ExpCompanySizeOption.Large]: 'resumeSearch.company_size.mobile.large',\n    },\n};\n\ninterface QuerySettingsXsSelectorProps {\n    name: typeof CriteriaKey.Logic | typeof CriteriaKey.ExpPeriod | typeof CriteriaKey.ExpCompanySize;\n    query: SearchQueries;\n    setQuery: (value: SearchQueries) => void;\n}\n\nconst QuerySettingsXsSelector: TranslatedComponent<QuerySettingsXsSelectorProps> = ({\n    trls,\n    name,\n    query,\n    setQuery,\n}) => {\n    const [modalIsVisible, setModalVisible] = useState(false);\n    const optionValue = query[name][0];\n    const optionsTrls = TrlKeys[name];\n\n    return (\n        <div>\n            <Text strong>{trls[TrlKeys.titles[name]]}</Text>\n            <VSpacing base={3} />\n            <Select\n                name={name}\n                onClick={() => {\n                    setModalVisible(true);\n                }}\n            >\n                <Option hidden value={optionValue}>\n                    {trls[optionsTrls[optionValue as keyof typeof optionsTrls]]}\n                </Option>\n            </Select>\n            <VSpacing base={6} />\n            <BottomSheetSelector\n                name={name}\n                title={trls[TrlKeys.titles[name]]}\n                currentOption={optionValue}\n                setCurrentOption={(value) => setQuery({ ...query, [name]: [value] })}\n                modalIsVisible={modalIsVisible}\n                setModalIsVisible={setModalVisible}\n            />\n        </div>\n    );\n};\n\nexport default translation(QuerySettingsXsSelector);\n","import { useState } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonKind, ButtonType } from 'bloko/blocks/button';\nimport { H2Section } from 'bloko/blocks/header';\nimport Modal, { ModalContent, ModalFooter, ModalHeader } from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { PosOption, SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport IndustryXsSelector from 'lux/components/ResumeAdvancedSearch/SearchQueries/IndustryXsSelector';\nimport PosSelect from 'lux/components/ResumeAdvancedSearch/SearchQueries/PosSelect';\nimport QuerySettingsXsSelector from 'lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsSelector';\nimport { getHasWorkplaceOptions } from 'lux/components/ResumeAdvancedSearch/SearchQueries/posUtils';\n\nconst HIDDEN_FIELDS = [CriteriaKey.ExpPeriod, CriteriaKey.ExpCompanySize, CriteriaKey.ExpIndustry] as const;\n\nconst TrlKeys = {\n    applyButton: 'resumesSearch.advanced.apply',\n    modalTitle: 'resumesSearch.novaFilters.conditions',\n    posTitle: 'resumesSearch.pos.title',\n};\n\ninterface QuerySettingsXsModalProps {\n    currentQuery: SearchQueries;\n    setCurrentQuery: (value: SearchQueries) => void;\n    isVisible: boolean;\n    onClose: () => void;\n    autoInvite?: boolean;\n}\n\nconst QuerySettingsXsModal: TranslatedComponent<QuerySettingsXsModalProps> = ({\n    trls,\n    currentQuery,\n    setCurrentQuery,\n    isVisible,\n    onClose,\n    autoInvite,\n}) => {\n    const [query, setQuery] = useState(currentQuery);\n    const searchQueryDefault = useSelectorNonNullable((state) => state.searchQueries.default);\n    const [hasWorkplaceOptions, setHasWorkplaceOptions] = useState(getHasWorkplaceOptions(query[CriteriaKey.Pos]));\n\n    const handlePosChange = (values: PosOption[]) => {\n        let newValue = { ...query, [CriteriaKey.Pos]: values };\n        if (getHasWorkplaceOptions(values)) {\n            setHasWorkplaceOptions(true);\n        } else {\n            setHasWorkplaceOptions(false);\n            HIDDEN_FIELDS.forEach((field) => {\n                newValue = { ...newValue, [field]: searchQueryDefault[field] };\n            });\n        }\n        setQuery(newValue);\n    };\n\n    const handleSubmit = () => {\n        setCurrentQuery(query);\n        onClose();\n    };\n\n    const handleClose = () => {\n        setQuery(currentQuery);\n        setHasWorkplaceOptions(getHasWorkplaceOptions(currentQuery[CriteriaKey.Pos]));\n        onClose();\n    };\n\n    return (\n        <Modal visible={isVisible} closeButtonShow escapePress={false} onClose={handleClose}>\n            <ModalHeader>\n                <H2Section>{trls[TrlKeys.modalTitle]}</H2Section>\n            </ModalHeader>\n            <ModalContent>\n                <VSpacing base={4} />\n                <QuerySettingsXsSelector name={CriteriaKey.Logic} query={query} setQuery={setQuery} />\n                <div>\n                    <Text strong>{trls[TrlKeys.posTitle]}</Text>\n                    <VSpacing base={4} />\n                    <PosSelect selectedValues={query[CriteriaKey.Pos]} setSelectedValues={handlePosChange} />\n                    <VSpacing base={3} />\n                </div>\n                {hasWorkplaceOptions && (\n                    <>\n                        <QuerySettingsXsSelector name={CriteriaKey.ExpPeriod} query={query} setQuery={setQuery} />\n                        <QuerySettingsXsSelector name={CriteriaKey.ExpCompanySize} query={query} setQuery={setQuery} />\n                        {autoInvite && (\n                            <IndustryXsSelector\n                                values={query[CriteriaKey.ExpIndustry]}\n                                setValues={(values: string[]) =>\n                                    setQuery({ ...query, [CriteriaKey.ExpIndustry]: values })\n                                }\n                            />\n                        )}\n                    </>\n                )}\n            </ModalContent>\n            <ModalFooter>\n                <Button type={ButtonType.Button} kind={ButtonKind.Primary} stretched onClick={handleSubmit}>\n                    {trls[TrlKeys.applyButton]}\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(QuerySettingsXsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"settingsButtonWrapper\":\"settings-button-wrapper--xGZ4IxcQw4neVt8vVxio\"};","import { useState } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Badge, { BadgeAppearance } from 'bloko/blocks/badge';\nimport Button, { ButtonAppearance, ButtonType } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SearchQueries, SEARCH_QUERY_KEYS } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nimport QuerySettingsXsModal from 'lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsModal';\n\nimport styles from './search-query.less';\n\ninterface QuerySettingsXsButtonProps {\n    query: SearchQueries;\n    setQuery: (value: SearchQueries) => void;\n    autoInvite?: boolean;\n}\n\nconst QuerySettingsXsButton: TranslatedComponent<QuerySettingsXsButtonProps> = ({ query, setQuery, autoInvite }) => {\n    const [modalIsVisible, setModalIsVisible] = useState(false);\n\n    const searchQueryDefault = useSelectorNonNullable((state) => state.searchQueries.default);\n    const settingsCount = [...SEARCH_QUERY_KEYS, ...(autoInvite ? [CriteriaKey.ExpIndustry] : [])].reduce(\n        (count, name) => {\n            if (query[name].toString() === searchQueryDefault[name].toString()) {\n                return count;\n            }\n            return count + 1;\n        },\n        0\n    );\n\n    return (\n        <div className={styles.settingsButtonWrapper}>\n            <Button\n                appearance={ButtonAppearance.Filled}\n                type={ButtonType.Button}\n                stretched\n                onClick={() => {\n                    setModalIsVisible(true);\n                }}\n            >\n                <Icon view={IconView.Funnel} initial={IconColor.Black} scale={IconScale.Small} />\n                {settingsCount > 0 && (\n                    <>\n                        <HSpacing base={2} />\n                        <Badge value={settingsCount} appearance={BadgeAppearance.Primary} />\n                    </>\n                )}\n            </Button>\n            <QuerySettingsXsModal\n                currentQuery={query}\n                setCurrentQuery={setQuery}\n                isVisible={modalIsVisible}\n                onClose={() => setModalIsVisible(false)}\n                autoInvite={autoInvite}\n            />\n        </div>\n    );\n};\n\nexport default translation(QuerySettingsXsButton);\n","import { FC } from 'react';\n\nimport FormItem from 'bloko/blocks/form/FormItem';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Icon, { IconDynamic, IconLink, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\n\nconst RemoveButton: FC<{ onRemove: () => void }> = ({ onRemove }) => {\n    return (\n        <>\n            <HSpacing base={3} />\n            <FormItem baseline>\n                <IconDynamic>\n                    <IconLink\n                        Element=\"button\"\n                        type=\"button\"\n                        onClick={onRemove}\n                        data-qa=\"resumes-search-wizard-item-remove\"\n                    >\n                        <Icon\n                            view={IconView.Cross}\n                            initial={IconColor.Gray50}\n                            highlighted={IconColor.Gray60}\n                            scale={IconScale.Small}\n                        />\n                    </IconLink>\n                </IconDynamic>\n            </FormItem>\n        </>\n    );\n};\n\nexport default RemoveButton;\n","import { useState, useMemo, useCallback, ReactNode, useContext, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Tip, { TipPlacement } from 'bloko/blocks/drop/Tip';\nimport InputText from 'bloko/blocks/inputText';\nimport { SuggestLayer } from 'bloko/blocks/suggest';\nimport SuggestPickerItems from 'bloko/blocks/suggest/SuggestPickerItems';\nimport createRemoteDataProvider from 'bloko/blocks/suggest/createRemoteDataProvider';\nimport createStaticDataProvider from 'bloko/blocks/suggest/createStaticDataProvider';\nimport { DataProviderItem } from 'bloko/blocks/suggest/types';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { dispatchNotLuxDataUpdate } from 'Modules/notLuxData';\nimport AutoInviteContext from 'lux/components/AutoInviteModal/common/AutoInviteContext';\nimport SmartSuggest from 'lux/components/SupernovaSearch/SmartSuggest';\nimport useSendSuggestAnalytics from 'lux/components/SupernovaSearch/SmartSuggest/useSendAnalytics';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport enrichResumeSearchSuggest, { removeDuplicates } from 'lux/modules/resumeSearch/enrichResumeSearchSuggest';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface SearchQueryProps {\n    query: SearchQueries;\n    setFromSuggest: (value: boolean) => void;\n}\n\nconst TrlKeys = {\n    searchQueryPlaceholder: 'supernova.search.placeholder.resumeSearch',\n    tooLongQuery: 'query.length.moreThanMax',\n    apply: 'Apply',\n};\n\nconst WILDCARD = '%QUERY%';\nconst RESUME_REMOTE = `/vacancysuggest/?q=${WILDCARD}`;\nconst MAX_QUERY_LENGTH = 400;\n\nconst updateLastSearchQueryText = makeSetStoreField('lastUpdatedSearchQueryText');\n\nconst SearchQuery: TranslatedComponent<SearchQueryProps> = ({ trls, query, setFromSuggest }) => {\n    const criteriaTextUpdated = useSelector(({ criteriaTextUpdated }) => criteriaTextUpdated);\n    const dispatch = useDispatch();\n    const { sendSuggestShownAnalytics, sendSuggestItemClickAnalytics } = useSendSuggestAnalytics();\n\n    // set criteriaTextUpdated for catalog\n    const [text, setText] = useState(\n        query.text[0] || (Array.isArray(criteriaTextUpdated) ? criteriaTextUpdated[0] : criteriaTextUpdated) || ''\n    );\n    const [tipVisible, showTip, hideTip] = useOnOffState(false);\n    const lastSearches = useSelector((state) => state.employerLastSearches);\n\n    const remoteDataProvider = useMemo(() => createRemoteDataProvider(RESUME_REMOTE, WILDCARD), []);\n    const staticDataProvider = useMemo(() => createStaticDataProvider(removeDuplicates(lastSearches)), [lastSearches]);\n    const autoInviteHandlerFormChange = useContext(AutoInviteContext);\n\n    const dataProvider = useCallback(\n        (query: string) => enrichResumeSearchSuggest(query, remoteDataProvider, staticDataProvider, lastSearches),\n        [lastSearches, remoteDataProvider, staticDataProvider]\n    );\n\n    const updateText = (text: string) => {\n        setText(text);\n        dispatch(updateLastSearchQueryText(text));\n        dispatchNotLuxDataUpdate({ inputValue: text });\n    };\n\n    useEffect(() => {\n        autoInviteHandlerFormChange?.();\n    }, [autoInviteHandlerFormChange, text]);\n\n    const handleInputChange = (value: string) => {\n        if (value.length < MAX_QUERY_LENGTH) {\n            updateText(value);\n        } else {\n            showTip();\n            setTimeout(hideTip, 2000);\n        }\n    };\n\n    const onDesktopSuggestShown = useCallback(\n        (node: HTMLDivElement) => {\n            if (node) {\n                sendSuggestShownAnalytics();\n            }\n        },\n        [sendSuggestShownAnalytics]\n    );\n\n    const handleSmartSuggestChange = (item: DataProviderItem) => {\n        if (item) {\n            sendSuggestItemClickAnalytics(item);\n            updateText(item.text);\n            setFromSuggest(true);\n        }\n    };\n\n    return (\n        <Tip\n            show={tipVisible}\n            onExternalClose={hideTip}\n            placement={TipPlacement.Top}\n            render={() => trls[TrlKeys.tooLongQuery]}\n        >\n            <SmartSuggest\n                dataProvider={dataProvider}\n                defaultSearch={text}\n                selectOnBlur={false}\n                suggestStartInputLength={lastSearches.length > 0 ? 0 : undefined}\n                onChange={handleSmartSuggestChange}\n                onSubmit={handleInputChange as (v: string) => void}\n                submitButtonTitle={trls[TrlKeys.apply]}\n                renderItems={(items, renderItem: (item: DataProviderItem, index: number) => ReactNode) => (\n                    <div ref={onDesktopSuggestShown}>\n                        <SuggestPickerItems>{items.map((item, index) => renderItem(item, index))}</SuggestPickerItems>\n                    </div>\n                )}\n                inputValue={text}\n                onMobileSuggestShown={sendSuggestShownAnalytics}\n                layer={SuggestLayer.AboveOverlayContent}\n            >\n                <InputText\n                    name=\"text\"\n                    value={text}\n                    onChange={handleInputChange}\n                    placeholder={trls[TrlKeys.searchQueryPlaceholder]}\n                    data-qa=\"resumes-search-wizard-item-keyword\"\n                    autoComplete=\"off\"\n                />\n            </SmartSuggest>\n        </Tip>\n    );\n};\n\nexport default translation(SearchQuery);\n","import { FC, useState } from 'react';\n\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\nimport { SearchQueries } from 'lux/models/search/resume/searchQueries';\n\nimport QueryConditions from 'lux/components/ResumeAdvancedSearch/SearchQueries/QueryConditions';\nimport QuerySettingsXsButton from 'lux/components/ResumeAdvancedSearch/SearchQueries/QuerySettingsXsButton';\nimport RemoveButton from 'lux/components/ResumeAdvancedSearch/SearchQueries/RemoveButton';\nimport SearchQueryInput from 'lux/components/ResumeAdvancedSearch/SearchQueries/SearchQueryInput';\n\ninterface SearchQueryProps {\n    query: SearchQueries;\n    queries: SearchQueries[];\n    onRemove: (index: number) => void;\n    setFromSuggest: (value: boolean) => void;\n    isNaviSearch?: boolean;\n    autoInvite?: boolean;\n}\n\nconst SearchQuery: FC<SearchQueryProps> = ({ query, queries, onRemove, setFromSuggest, isNaviSearch, autoInvite }) => {\n    const [searchQuery, setSearchQuery] = useState(query);\n\n    return (\n        <div data-qa=\"resumesearch__block\">\n            <div className=\"resume-search-form\">\n                <SearchQueryInput query={searchQuery} setFromSuggest={setFromSuggest} />\n                {/* ToDo: добавить xs={0}, когда получим от дизайнеров апрув на добавление такого пропа в ДС https://mattermost.pyn.ru/hhru/pl/txuy1m7a7td3txtcjfrdybk9so */}\n                <HSpacing base={2} />\n                <QuerySettingsXsButton query={searchQuery} setQuery={setSearchQuery} autoInvite={autoInvite} />\n                {queries.length > 1 && <RemoveButton onRemove={() => onRemove(searchQuery.id)} />}\n            </div>\n            <QueryConditions\n                query={searchQuery}\n                setQuery={setSearchQuery}\n                isNaviSearch={isNaviSearch}\n                autoInvite={autoInvite}\n            />\n            <VSpacing base={4} />\n        </div>\n    );\n};\n\nexport default translation(SearchQuery);\n","import { useState, ChangeEvent, useCallback } from 'react';\n\nimport Checkbox from 'bloko/blocks/checkbox';\nimport Column from 'bloko/blocks/column';\nimport FormItem from 'bloko/blocks/form/FormItem';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport Infotip from 'lux/components/Infotip';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    showConditions: 'employer.resumesSearch.showConditions',\n    infotipContent: 'infotips.content.resumeSearchConditionsCheckbox',\n};\n\nconst ShowConditions: TranslatedComponent = ({ trls }) => {\n    const showSearchConditions = useSelector((state) => state.advancedSearch.showSearchConditions);\n    const [checked, setChecked] = useState(showSearchConditions);\n\n    const onChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n        setChecked(event.target.checked);\n    }, []);\n    return (\n        <Column xs=\"4\" s=\"8\" m=\"5\" l=\"7\">\n            <Infotip\n                name=\"resumeSearchConditionsCheckbox\"\n                render={() => trls[TrlKeys.infotipContent]}\n                markAsViewedEvent={MarkAsViewedEvent.OnHide}\n                show\n            >\n                <FormItem>\n                    {!checked && <input type=\"hidden\" name=\"show_conditions\" value=\"false\" />}\n                    <Checkbox\n                        name=\"show_conditions\"\n                        value=\"true\"\n                        checked={checked}\n                        onChange={onChange}\n                        data-qa=\"resumesearch__show_conditions\"\n                    >\n                        {trls[TrlKeys.showConditions]}\n                    </Checkbox>\n                </FormItem>\n            </Infotip>\n        </Column>\n    );\n};\n\nexport default translation(ShowConditions);\n","import { useState, FC, MutableRefObject, PropsWithChildren, useContext } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport AutoInviteContext from 'lux/components/AutoInviteModal/common/AutoInviteContext';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AddButton from 'lux/components/ResumeAdvancedSearch/SearchQueries/AddButton';\nimport SearchQuery from 'lux/components/ResumeAdvancedSearch/SearchQueries/SearchQuery';\nimport ShowConditionsCheckbox from 'lux/components/ResumeAdvancedSearch/SearchQueries/ShowConditions';\n\nconst Wrapper: FC<\n    {\n        isNaviSearch: boolean;\n        isModal?: boolean;\n    } & PropsWithChildren\n> = ({ isNaviSearch, children, isModal }) => {\n    if (isNaviSearch) {\n        return <>{children}</>;\n    }\n\n    return (\n        <Column xs=\"4\" s=\"8\" m=\"8\" l={isModal ? '10' : '11'}>\n            {children}\n        </Column>\n    );\n};\n\ninterface NaviSearchProps {\n    isNaviSearch: true;\n    addQueryRef: MutableRefObject<(() => void) | undefined>;\n}\n\ninterface AdvancedSearchProps {\n    isNaviSearch: false;\n}\n\nconst SearchQueries: FC<(NaviSearchProps | AdvancedSearchProps) & { autoInvite?: boolean }> = (props) => {\n    const searchQueries = useSelector((state) => state.searchQueries);\n    const autoInviteQueries = useSelector((state) => state.autoInvite?.filters.searchQueries);\n    const isEmployer = useSelector(({ userType }) => UserType.Employer === userType);\n    const [queries, setQueries] = useState(\n        (props.autoInvite && autoInviteQueries ? autoInviteQueries : searchQueries?.values) || []\n    );\n    const [fromSuggest, setFromSuggest] = useState(false);\n    const autoInviteHandlerFormChange = useContext(AutoInviteContext);\n\n    if (!searchQueries) {\n        return null;\n    }\n\n    const addQuery = () => {\n        const lastElementId = queries[queries.length - 1].id;\n        setQueries([...queries, { ...searchQueries.default, id: lastElementId + 1 }]);\n        autoInviteHandlerFormChange?.();\n    };\n    if (props.isNaviSearch) {\n        props.addQueryRef.current = addQuery;\n    }\n    const removeQuery = (id: number) => {\n        setQueries(queries.filter((query) => query.id !== id));\n        autoInviteHandlerFormChange?.();\n    };\n\n    return (\n        <>\n            <Wrapper isNaviSearch={props.isNaviSearch} isModal={props.autoInvite}>\n                {queries.map((searchQuery) => (\n                    <SearchQuery\n                        key={searchQuery.id}\n                        query={searchQuery}\n                        queries={queries}\n                        onRemove={removeQuery}\n                        setFromSuggest={setFromSuggest}\n                        isNaviSearch={props.isNaviSearch}\n                        autoInvite={props.autoInvite}\n                    />\n                ))}\n                {fromSuggest && !props.autoInvite && <input type=\"hidden\" name=\"from\" value=\"suggest_post\" />}\n            </Wrapper>\n            {!props.isNaviSearch && (\n                <>\n                    <AddButton addQuery={addQuery} />\n                    {!props.autoInvite && (\n                        <>\n                            {isEmployer && <ShowConditionsCheckbox />}\n                            <VSpacing base={6} />\n                            {isEmployer && (\n                                <>\n                                    <div className=\"horizontal-divider\" />\n                                    <VSpacing base={6} />\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default SearchQueries;\n","export const DATA_QA_ATTR_PREFIX = 'resumes-countries-visibility-settings';\n\nexport type CountrySelection = 'common' | 'uzbekistan';\nexport type DataQaKey = 'modal' | 'page';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport { CountrySelection, DataQaKey, DATA_QA_ATTR_PREFIX } from 'lux/components/ResumesCountriesVisibility/types';\n\nconst TrlKeys = {\n    common: 'settings.countries_visible.common_countries_description.applicant',\n    uzbekistan: 'settings.countries_visible.uzbekistan_description.applicant',\n    descriptionEnd: 'settings.countries_visible.description_end.applicant',\n    conditions: 'settings.countries_visible.condition.applicant',\n    rules: 'settings.countries_visible.rules.applicant',\n};\n\nconst ARTICLES = {\n    uzbekistan: {\n        conditions: 'https://rabota.by/article/31423',\n        rules: 'https://rabota.by/article/31423?hash=#clause1',\n    },\n    common: {\n        conditions: 'https://rabota.by/article/31422',\n        rules: 'https://rabota.by/article/31422?hash=#clause1',\n    },\n};\n\ninterface ResumesCountriesVisibilityFormDescriptionProps {\n    dataQaKey: DataQaKey;\n    country: CountrySelection;\n    conditionsClickHandler?: (country: CountrySelection) => void;\n    rulesClickHandler?: (country: CountrySelection) => void;\n}\n\nconst ResumesCountriesVisibilityFormDescription: TranslatedComponent<\n    ResumesCountriesVisibilityFormDescriptionProps\n> = ({ dataQaKey, country, conditionsClickHandler, rulesClickHandler, trls }) => {\n    const conditionsOnClick = () => conditionsClickHandler?.(country);\n    const rulesOnClick = () => rulesClickHandler?.(country);\n\n    return (\n        <Text\n            size={TextSize.Small}\n            importance={TextImportance.Secondary}\n            data-qa={`${DATA_QA_ATTR_PREFIX}-description-${country}-${dataQaKey}`}\n        >\n            {trls[TrlKeys[country]]}\n            {NON_BREAKING_SPACE}\n            <BlokoLink\n                Element={Link}\n                onClick={conditionsOnClick}\n                data-qa={`${DATA_QA_ATTR_PREFIX}-conditions-${country}-${dataQaKey}`}\n                disableVisited\n                to={ARTICLES[country].conditions}\n                target=\"_blank\"\n            >\n                {trls[TrlKeys.conditions]}\n            </BlokoLink>\n            . {trls[TrlKeys.descriptionEnd]}\n            {NON_BREAKING_SPACE}\n            <BlokoLink\n                Element={Link}\n                onClick={rulesOnClick}\n                data-qa={`${DATA_QA_ATTR_PREFIX}-rules-${country}-${dataQaKey}`}\n                disableVisited\n                to={ARTICLES[country].rules}\n                target=\"_blank\"\n            >\n                {trls[TrlKeys.rules]}\n            </BlokoLink>\n            .\n        </Text>\n    );\n};\nexport default translation(ResumesCountriesVisibilityFormDescription);\n","import Checkbox from 'bloko/blocks/checkbox';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ResumeCountriesVisibilitySettings } from 'lux/models/resumeCountriesVisibility';\n\nimport ResumesCountriesVisibilityFormDescription from 'lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilityFormDescription';\nimport { CountrySelection, DataQaKey, DATA_QA_ATTR_PREFIX } from 'lux/components/ResumesCountriesVisibility/types';\n\nconst TrlKeys = {\n    common: 'settings.countries_visible.common_countries.applicant',\n    uzbekistan: 'settings.countries_visible.uzbekistan.applicant',\n};\n\ninterface ResumesCountriesVisibilityFormProps {\n    isFetching: boolean;\n    settings: ResumeCountriesVisibilitySettings;\n    handleChange: (name: keyof ResumeCountriesVisibilitySettings, value: boolean) => void;\n    dataQaKey: DataQaKey;\n    conditionsClickHandler?: (country: CountrySelection) => void;\n    rulesClickHandler?: (country: CountrySelection) => void;\n}\n\nconst ResumesCountriesVisibilityForm: TranslatedComponent<ResumesCountriesVisibilityFormProps> = ({\n    isFetching,\n    settings,\n    handleChange,\n    dataQaKey,\n    conditionsClickHandler,\n    rulesClickHandler,\n    trls,\n}) => {\n    return (\n        <>\n            <Checkbox\n                data-qa={`${DATA_QA_ATTR_PREFIX}-checkbox-common-${dataQaKey}`}\n                disabled={isFetching}\n                checked={settings.visibleForCommonCountries}\n                onChange={() => handleChange('visibleForCommonCountries', !settings.visibleForCommonCountries)}\n            >\n                <div data-qa={`${DATA_QA_ATTR_PREFIX}-title-common-${dataQaKey}`}> {trls[TrlKeys.common]}</div>\n                <ResumesCountriesVisibilityFormDescription\n                    dataQaKey={dataQaKey}\n                    country={'common'}\n                    conditionsClickHandler={conditionsClickHandler}\n                    rulesClickHandler={rulesClickHandler}\n                />\n            </Checkbox>\n            <VSpacing base={4} />\n            <Checkbox\n                data-qa={`${DATA_QA_ATTR_PREFIX}-checkbox-uzbekistan-${dataQaKey}`}\n                disabled={isFetching}\n                checked={settings.visibleForUzbekistan}\n                onChange={() => handleChange('visibleForUzbekistan', !settings.visibleForUzbekistan)}\n            >\n                <div data-qa={`${DATA_QA_ATTR_PREFIX}-title-uzbekistan-${dataQaKey}`}>{trls[TrlKeys.uzbekistan]}</div>\n                <ResumesCountriesVisibilityFormDescription\n                    dataQaKey={dataQaKey}\n                    country={'uzbekistan'}\n                    conditionsClickHandler={conditionsClickHandler}\n                    rulesClickHandler={rulesClickHandler}\n                />\n            </Checkbox>\n        </>\n    );\n};\nexport default translation(ResumesCountriesVisibilityForm);\n","import React, { forwardRef, ComponentPropsWithoutRef } from 'react';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface StaticImgProps extends ComponentPropsWithoutRef<'img'> {\n    path: string;\n}\n\nconst StaticImg = forwardRef<HTMLImageElement, StaticImgProps>(({ path, ...imgProps }, ref) => {\n    const staticHost = useSelector(({ config }) => config.staticHost);\n    return <img src={`${staticHost}${path}`} {...imgProps} ref={ref} />;\n});\n\nexport default StaticImg;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--zPRreBYaAHDKNvFSmgic\",\"content\":\"content--Y1b9pqSAkHFiRJr5261S\",\"text\":\"text--s6LLjiSWvy9vTCwzmYgl\",\"buttons\":\"buttons--caLFiCBiKjPmrHw4IoN7\",\"hint\":\"hint--YNvQIIjjoKHKB3BhPe8C\"};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport BlokoLink from 'bloko/blocks/link';\nimport Cookies from 'bloko/common/Cookies';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SUBSCRIBE_FORM_SUCCESS } from 'lux/components/Notifications/SubscribeForm';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport fetcher from 'lux/modules/fetcher';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport styles from './subscription-informer.less';\n\nconst TrlKeys = {\n    accept: 'subscription.informer.accept',\n    decline: 'subscription.informer.decline',\n    title: 'subscription.informer.title',\n    description: 'subscription.informer.description',\n    hintText: 'subscription.informer.hint.text',\n    hintConditionsLink: 'subscription.informer.hint.link.conditions',\n    hintRightsLink: 'subscription.informer.hint.link.rights',\n};\n\nexport const COOKIE_SUBSCRIPTION_INFORMER_NAME = 'subscription_informer_declined';\n\nconst SubscriptionInformer: TranslatedComponent = ({ trls }) => {\n    const location = useLocation();\n    const [isVisible, setIsVisible] = useState(true);\n    const dispatch = useDispatch();\n    const {\n        isShow: isShowSubscriptionInformer,\n        applicantSubscriptions,\n        employerSubscriptions,\n    } = useSelector(({ subscriptionInformer }) => subscriptionInformer);\n    const xsrfToken = useSelector(({ xsrfToken }) => xsrfToken);\n    const userType = useSelector(({ userType }) => userType);\n\n    useEffect(() => {\n        if ([paths.subscribe, paths.employerSubscription].includes(location.pathname)) {\n            setIsVisible(false);\n        }\n    }, [location]);\n\n    const handleDecline = () => {\n        Cookies.set(COOKIE_SUBSCRIPTION_INFORMER_NAME, String(true), 24 * 30);\n        setIsVisible(false);\n    };\n\n    const handleSubscribe = async () => {\n        try {\n            const formData = new FormData();\n\n            formData.append('_xsrf', xsrfToken);\n\n            if (userType === UserType.Applicant) {\n                Object.keys(applicantSubscriptions).forEach((key) => {\n                    applicantSubscriptions[key].subscription.forEach((subscription) => {\n                        if (subscription.state) {\n                            formData.append(`${key}Subscription`, subscription.type);\n                        }\n                    });\n                });\n\n                formData.append('agreementAdv', 'true');\n                formData.append('emailSubscription', 'DIGEST');\n\n                await fetcher.postFormData('/subscribe', formData);\n            }\n\n            if (userType === UserType.Employer) {\n                const { mailingSubscriptionTypes, ...emailEmployerSubscriptions } = employerSubscriptions.email;\n                const subscriptions = { ...emailEmployerSubscriptions, ...employerSubscriptions.sms };\n\n                Object.keys(subscriptions).forEach((key) => {\n                    if (subscriptions[key]) {\n                        formData.append(key, JSON.stringify(subscriptions[key]));\n                    }\n                });\n\n                mailingSubscriptionTypes?.[0]?.mailingSubscriptionType.forEach((type) => {\n                    formData.append('mailingSubscriptionTypes', JSON.stringify(type));\n                });\n                formData.append('mailingSubscriptionTypes', '2');\n\n                await fetcher.postFormData('/employer/settings/subscription', formData);\n            }\n\n            dispatch(addNotification(SUBSCRIBE_FORM_SUCCESS));\n            setIsVisible(false);\n        } catch (error) {\n            dispatch(showDefaultError(error));\n        }\n    };\n\n    if (\n        !isVisible ||\n        !isShowSubscriptionInformer ||\n        !(userType === UserType.Employer || userType === UserType.Applicant)\n    ) {\n        return null;\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <div className={styles.content}>\n                        <div>\n                            <div className={styles.text}>{trls[TrlKeys.title]}</div>\n                            <div className={styles.text}>{trls[TrlKeys.description]}</div>\n                            <div className={styles.hint}>\n                                {formatToReactComponent(trls[TrlKeys.hintText], {\n                                    '{conditions}': (\n                                        <BlokoLink disableVisited Element={Link} to=\"/article/31297\" target=\"_blank\">\n                                            {trls[TrlKeys.hintConditionsLink]}\n                                        </BlokoLink>\n                                    ),\n                                    '{rights}': (\n                                        <BlokoLink\n                                            disableVisited\n                                            Element={Link}\n                                            to=\"/article/30901#clause1\"\n                                            target=\"_blank\"\n                                        >\n                                            {trls[TrlKeys.hintRightsLink]}\n                                        </BlokoLink>\n                                    ),\n                                })}\n                            </div>\n                        </div>\n                        <div className={styles.buttons}>\n                            <Button onClick={handleSubscribe} kind={ButtonKind.Primary} stretched>\n                                {trls[TrlKeys.accept]}\n                            </Button>\n                            <Button onClick={handleDecline} stretched>\n                                {trls[TrlKeys.decline]}\n                            </Button>\n                        </div>\n                    </div>\n                </Column>\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default translation(SubscriptionInformer);\n","import React from 'react';\n\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst EMPLOYER_REVIEW_SETTING = 'employerReviewsSettings';\n\nconst badgeType = {\n    new: 'new',\n    enabled: 'enabled',\n    absolute: 'absolute',\n};\n\nconst TrlKeys = {\n    [badgeType.new]: 'supernova.navi.badge.new',\n    [badgeType.enabled]: 'supernova.navi.badge.enabled',\n};\ninterface BadgeProps {\n    badge?: string;\n    name?: string;\n}\n\nconst BadgeElement: TranslatedComponent<BadgeProps> = ({ trls, badge, name, children }) => {\n    const hasForceReloadDreamJob = useSelector((state) => state.hasForceReloadDreamJob);\n    if (!badge || !badgeType.hasOwnProperty(badge)) {\n        return null;\n    }\n    const badgeTypeName: string =\n        hasForceReloadDreamJob && name === EMPLOYER_REVIEW_SETTING\n            ? badgeType.enabled\n            : badgeType[badge as keyof typeof badgeType];\n\n    return (\n        <Text size={TextSize.Small} Element={'span'}>\n            <span className={`supernova-dropdown-badge supernova-dropdown-badge_${badgeTypeName}`}>\n                {badgeTypeName !== badgeType.absolute ? trls[TrlKeys[badgeTypeName as keyof typeof TrlKeys]] : children}\n            </span>\n        </Text>\n    );\n};\n\nexport default translation(BadgeElement);\n","import { createContext } from 'react';\n\nexport default createContext(false);\n","import { FC, ComponentPropsWithoutRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nexport enum SupernovaLinkKind {\n    Primary,\n    Secondary,\n    Dimmed,\n    OnWhite,\n    WithLine,\n    /**\n     * Временно, пока не подвезли magritte neutral secondary link\n     * https://jira.hh.ru/browse/HH-208392\n     */\n    MagritteNeutralSecondary,\n}\n\ninterface SupernovaLink {\n    to: string;\n    kind?: SupernovaLinkKind;\n    onClick?: React.MouseEventHandler;\n}\n\nconst SupernovaLink: FC<SupernovaLink & ComponentPropsWithoutRef<'a'> & PropsWithChildren> = ({\n    children,\n    kind,\n    ...props\n}) => {\n    return (\n        <Link\n            isSeoLink\n            {...props}\n            className={classnames('supernova-link', {\n                'supernova-link_primary': kind === SupernovaLinkKind.Primary,\n                'supernova-link_secondary': kind === SupernovaLinkKind.Secondary,\n                'supernova-link_dimmed': kind === SupernovaLinkKind.Dimmed,\n                'supernova-link_on-white': kind === SupernovaLinkKind.OnWhite,\n                'supernova-link_with-line': kind === SupernovaLinkKind.WithLine,\n                'supernova-link_magritte-neutral-secondary': kind === SupernovaLinkKind.MagritteNeutralSecondary,\n            })}\n        >\n            {children}\n        </Link>\n    );\n};\n\nexport default SupernovaLink;\n","import React, { MutableRefObject } from 'react';\n\nconst SupernovaDropdownContext = React.createContext<{\n    sort: MutableRefObject<((arr: string[]) => string[]) | null>;\n    elements: Record<string, HTMLElement | null>;\n}>({ sort: { current: null }, elements: {} });\n\nexport default SupernovaDropdownContext;\n","import React from 'react';\n\nimport { MessengerType } from 'lux/models/messengers';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { sendSupportAnalytics } from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\nconst MESSENGERS = [\n    {\n        href: 'https://telegram.me/hh_applicant_bot',\n        messenger: 'telegram',\n    },\n    {\n        href: 'https://chats.viber.com/headhunter',\n        messenger: 'viber',\n    },\n];\n\nconst EMPLOYER_MESSENGERS = [\n    {\n        href: 'https://telegram.me/hh_ru_bot',\n        messenger: 'telegram',\n    },\n    {\n        href: 'https://chats.viber.com/headhunter',\n        messenger: 'viber',\n    },\n];\n\nconst NEW_EMPLOYER_MESSENGERS = [\n    {\n        href: 'https://telegram.me/reg_hh_bot',\n        messenger: 'telegram',\n    },\n    {\n        href: 'https://chats.viber.com/headhunter',\n        messenger: 'viber',\n    },\n];\n\ntype Props = {\n    onClick?: (userType: string, messenger: string) => void;\n};\nconst SupportChatMessengers: React.VFC<Props> = ({ onClick = sendSupportAnalytics }) => {\n    const { employerStatus, messengers, userType, supernovaUserType } = useSelector(\n        ({ employerStatus, messengers, userType, supernovaUserType }) => ({\n            employerStatus,\n            messengers,\n            userType,\n            supernovaUserType,\n        })\n    );\n\n    let messengersToRender;\n    if (userType === UserType.Employer || supernovaUserType === SupernovaUserType.Employer) {\n        messengersToRender = EMPLOYER_MESSENGERS;\n        if (employerStatus.state === 'NEW') {\n            const whatsapp = messengers.find(({ messengerType }) => messengerType === MessengerType.Whatsapp);\n            if (whatsapp) {\n                messengersToRender = [\n                    ...NEW_EMPLOYER_MESSENGERS,\n                    {\n                        href: `https://wa.me/${whatsapp.country}${whatsapp.city}${whatsapp.number}`,\n                        messenger: 'whatsapp',\n                    },\n                ];\n            }\n        }\n    } else {\n        messengersToRender = MESSENGERS;\n    }\n\n    return (\n        <React.Fragment>\n            {messengersToRender.map(({ href, messenger }) => {\n                return (\n                    <a\n                        className={`helpphone-messenger helpphone-messenger_supernova helpphone-messenger_${messenger}`}\n                        href={href}\n                        key={messenger}\n                        onClick={() => onClick(userType, messenger)}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    />\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default SupportChatMessengers;\n","import { useMemo, useCallback, useContext, forwardRef } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport urlParser from 'bloko/common/urlParser';\n\nimport SupernovaDropdownContext from 'lux/components/SupernovaMainMenu/SupernovaDropdownContext';\nimport { NotificationLinkProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\n\nlet linkId = 0;\n\nconst NotificationLink = forwardRef<HTMLAnchorElement, NotificationLinkProps>(\n    ({ children, to, onClick, ...props }, ref) => {\n        const url = urlParser(to);\n        url.params = { ...url.params, from: 'user_notification', hhtmFromLabel: 'user_notification' };\n\n        const id = useMemo(() => (linkId += 1), []);\n        const { elements: dropdownContext } = useContext(SupernovaDropdownContext);\n        const updateRef = useCallback(\n            (element: HTMLAnchorElement) => {\n                dropdownContext[`notificationLink${id}`] = element;\n                if (ref) {\n                    if (typeof ref === 'function') {\n                        ref(element);\n                    } else {\n                        ref.current = element;\n                    }\n                }\n            },\n            [dropdownContext, id, ref]\n        );\n\n        return (\n            <BlokoLink\n                {...props}\n                data-qa=\"notification-link\"\n                Element={Link}\n                to={url.href}\n                disableVisited\n                onClick={onClick}\n                ref={updateRef}\n            >\n                {children}\n            </BlokoLink>\n        );\n    }\n);\n\nexport default NotificationLink;\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\ninterface NotificationTextProps {\n    multiline?: boolean;\n}\n\nconst NotificationText: FC<NotificationTextProps & PropsWithChildren> = ({ children, multiline }) => {\n    return (\n        <div\n            className={classnames('supernova-notification-text', {\n                'supernova-notification-text_multiline': multiline,\n            })}\n            data-qa=\"notification-content\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default NotificationText;\n","import { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteUserNotification, UserNotificationId } from 'lux/models/userNotifications';\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherDeleteApi {\n        '/shards/notifications': {\n            queryParams: {\n                id: number;\n            };\n            response: void;\n        };\n    }\n}\n\nconst useDeleteUserNotificationById = (id: UserNotificationId): [boolean, () => Promise<boolean>] => {\n    const [isProgressRemove, setProgressRemove] = useState(false);\n    const dispatch = useDispatch();\n\n    const deleteNotification = useCallback(async () => {\n        setProgressRemove(true);\n\n        try {\n            await fetcher.delete('/shards/notifications', {\n                params: { id },\n            });\n        } catch (e) {\n            setProgressRemove(false);\n            return false;\n        }\n\n        setProgressRemove(false);\n        dispatch(deleteUserNotification(id));\n        return true;\n    }, [dispatch, id]);\n\n    return [isProgressRemove, deleteNotification];\n};\n\nexport default useDeleteUserNotificationById;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport Text from 'bloko/blocks/text';\n\ninterface SupernovaCounterProps {\n    children?: number | string;\n    clear?: boolean;\n    dotOnly?: boolean;\n    dropdown?: boolean;\n    forIcon?: boolean;\n    hidden?: boolean;\n    light?: boolean;\n    primary?: boolean;\n    large?: boolean;\n}\n\nconst SupernovaCounter: React.VFC<SupernovaCounterProps> = ({\n    clear,\n    children,\n    dotOnly,\n    dropdown,\n    forIcon,\n    hidden,\n    light,\n    primary,\n    large,\n    ...props\n}) => {\n    let content = children;\n\n    if (typeof children === 'number') {\n        if (children > 1000) {\n            content = `${Math.floor(children / 1000)}K`;\n        } else if (children > 99) {\n            content = '99+';\n        }\n    }\n\n    if (dropdown) {\n        return (\n            <span className=\"supernova-dropdown-counter\" {...props}>\n                <Text strong>{content}</Text>\n            </span>\n        );\n    }\n\n    return (\n        <span\n            className={classnames('supernova-navi-counter', {\n                'supernova-navi-counter_clear': clear,\n                'supernova-navi-counter_dot-only': dotOnly,\n                'supernova-navi-counter_for-icon': forIcon,\n                'supernova-navi-counter_light': light,\n                'supernova-navi-counter_primary': primary,\n                'supernova-navi-counter_large': large,\n                'g-hidden': hidden,\n            })}\n            {...props}\n        >\n            {content}\n        </span>\n    );\n};\n\nexport default SupernovaCounter;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { DocumentedPropsWithChildren } from 'bloko/common/helpers/types';\n\nimport { NavItemAnalytics } from 'lux/models/supernovaNaviMenu';\n\nimport useTrackClicks, { TrackClicksProps } from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\nexport enum SupernovaIconView {\n    Chatik = 'chatik',\n    Favorites = 'favorites',\n    Mobile = 'mobile',\n    Profile = 'profile',\n    Search = 'search',\n    SearchPrimary = 'search-primary',\n    Services = 'services',\n    UserNotifications = 'user-notifications',\n}\n\ninterface SupernovaIconProps extends TrackClicksProps {\n    active?: boolean;\n    onClick?: React.MouseEventHandler;\n    name: string;\n    url?: string;\n    analytics?: NavItemAnalytics;\n    view: SupernovaIconView;\n}\n\nconst ACTIVE_ATTRS = {\n    disabled: true,\n    tabIndex: -1,\n};\n\nconst SupernovaIcon = React.forwardRef<HTMLElement, DocumentedPropsWithChildren<SupernovaIconProps>>(\n    ({ active, children, name, onClick, url, view, trackClicks, analytics, ...props }, forwardedRef) => {\n        const handleClick = useTrackClicks(name, trackClicks, onClick, analytics);\n\n        const icon = <span className={classnames('supernova-icon', { [`supernova-icon_${view}`]: view })} />;\n\n        let wrapper;\n        if (url) {\n            wrapper = (\n                <Link\n                    className=\"supernova-icon-link-switch\"\n                    onClick={handleClick}\n                    ref={forwardedRef as React.Ref<HTMLAnchorElement>}\n                    to={url}\n                    {...(active ? ACTIVE_ATTRS : {})}\n                    {...props}\n                >\n                    {icon}\n                    {children}\n                </Link>\n            );\n        } else {\n            wrapper = (\n                <button\n                    className=\"supernova-icon-link-switch\"\n                    onClick={handleClick}\n                    ref={forwardedRef as React.ForwardedRef<HTMLButtonElement>}\n                    type=\"button\"\n                    {...(active ? ACTIVE_ATTRS : {})}\n                    {...props}\n                >\n                    {icon}\n                    {children}\n                </button>\n            );\n        }\n\n        return <div className=\"supernova-icon-dynamic\">{wrapper}</div>;\n    }\n);\n\nexport default SupernovaIcon;\n","import { useContext, useEffect, FC } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { useChatik } from '@hh.ru/chatik-integration';\nimport { addSocketEventListener } from '@hh.ru/chatik-integration/lib/Websocket';\n\nimport IsDashboardContext from 'lux/components/SupernovaMainMenu/IsDashboardContext';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ChatikActivator: FC<NavItem> = ({ name, trackClicks }) => {\n    const isDashboard = useContext(IsDashboardContext);\n    const unreadCount = useSelector(({ chatikCounters }) => chatikCounters.unreadCount);\n    const { isChatikOpen, closeChatik, openChatik } = useChatik();\n\n    const handleToggleChatik = () => {\n        if (isChatikOpen) {\n            closeChatik();\n\n            return;\n        }\n\n        openChatik({ hhtmFromLabel: 'chat_list_header', view: 'medium' });\n        Analytics.sendHHEventButtonClick('chat_list_header', { unreadChatCount: unreadCount });\n    };\n\n    useEffect(() => {\n        addSocketEventListener('chat_message_create', (eventData) => {\n            if (!isChatikOpen && eventData.actions?.find(({ type }) => type === 'FORCE_OPEN')) {\n                openChatik({ chatId: eventData.chatId, view: 'medium' });\n            }\n        });\n    }, [isChatikOpen, openChatik]);\n\n    return (\n        <div\n            className={classnames('supernova-navi-item supernova-navi-item_lvl-2 supernova-navi-item_chatik', {\n                'supernova-navi-item_dashboard': isDashboard,\n                'supernova-navi-item_chatik-active': isChatikOpen,\n            })}\n        >\n            <SupernovaIcon\n                data-qa=\"chatik-activator\"\n                name={name}\n                onClick={handleToggleChatik}\n                trackClicks={trackClicks}\n                view={SupernovaIconView.Chatik}\n            >\n                <SupernovaCounter data-qa=\"chatik-unread-count\" hidden={!unreadCount} primary large forIcon>\n                    {unreadCount || 0}\n                </SupernovaCounter>\n            </SupernovaIcon>\n            <div className=\"supernova-navi-underline supernova-navi-underline_for-icon\" />\n        </div>\n    );\n};\n\nexport default ChatikActivator;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content--z155e38GRELEdEs1M9Hc\",\"center\":\"center--syuy5ex0VHoMwjXY1uHA\",\"row\":\"row--NXmlrSkLDWnHExjeAUM4\",\"stack\":\"stack--dPlaonEirsAtzLku_tFV\",\"space\":\"space--mk4gQAMI9QRkr1_wbH7n\",\"notMobile\":\"not-mobile--qbHGgHQvbPDBR7gGfNAU\",\"resumeFooter\":\"resume-footer--OWF5I13FWPluNdjTh9RT\"};","import { useCallback, useEffect, useRef } from 'react';\n\nimport { Loader, Text } from '@hh.ru/magritte-ui';\nimport { ModalContent } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { StepProps, useHHAuth } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\nconst TrlKeys = {\n    loading: 'zp.importResume.auth.loading',\n};\n\nconst AuthStep: TranslatedComponent<StepProps> = ({ trls, setStep }) => {\n    const _authWindow = useRef<Window | null>(null);\n    const timer = useRef(0);\n    const authUri = useHHAuth();\n\n    const check = useCallback(() => {\n        if (\n            !_authWindow.current ||\n            !_authWindow.current.top ||\n            _authWindow.current.closed ||\n            _authWindow.current?.location?.pathname === '/close'\n        ) {\n            _authWindow.current?.close();\n            clearInterval(timer.current);\n            setStep('import');\n        }\n    }, [setStep]);\n\n    useEffect(() => {\n        timer.current = setInterval(check, 1000) as unknown as number;\n        _authWindow.current = window.open(authUri, 'Авторизация', 'location=0,width=750,height=550,popup=true');\n        setTimeout(() => _authWindow.current?.focus(), 100);\n    }, [authUri, check]);\n\n    useEffect(() => () => clearInterval(timer.current), []);\n\n    return (\n        <ModalContent>\n            <div className={styles.center}>\n                <Loader size={24} />\n                <Text>{trls[TrlKeys.loading]}</Text>\n            </div>\n        </ModalContent>\n    );\n};\n\nexport default translation(AuthStep);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { Cell, CellText, Divider } from '@hh.ru/magritte-ui';\nimport Icon, { IconScale, IconView, IconKind } from 'bloko/blocks/icon';\nimport { ModalContent } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { StepProps } from 'lux/components/ImportResumeModal/utils';\n\nconst TrlKeys = {\n    createTitle: 'zp.importResume.choose.createTitle',\n    createDesc: 'zp.importResume.choose.createDesc',\n    importTitle: 'zp.importResume.choose.importTitle',\n    importDesc: 'zp.importResume.choose.importDesc',\n    copyTitle: 'zp.importResume.choose.copyTitle',\n    copyDesc: 'zp.importResume.choose.copyDesc',\n};\n\nconst ChooseStep: TranslatedComponent<StepProps> = ({ trls, url, setStep }) => {\n    const dispatch = useDispatch();\n\n    const onCreate = () => {\n        dispatch(push(url));\n    };\n\n    const onImport = () => {\n        setStep('auth');\n    };\n\n    const onCopy = () => {\n        setStep('copy');\n    };\n\n    return (\n        <ModalContent>\n            <Cell\n                right={<Icon view={IconView.Chevron} scale={IconScale.Medium} kind={IconKind.Right} />}\n                onClick={onCreate}\n                data-qa={'import_resume-choose-create_cell'}\n            >\n                <CellText>{trls[TrlKeys.createTitle]}</CellText>\n                <CellText type=\"subtitle\">{trls[TrlKeys.createDesc]}</CellText>\n            </Cell>\n            <Divider marginTop={12} marginBottom={12} />\n            <Cell\n                right={<Icon view={IconView.Chevron} scale={IconScale.Medium} kind={IconKind.Right} />}\n                onClick={onImport}\n                data-qa={'import_resume-choose-import_cell'}\n            >\n                <CellText>{trls[TrlKeys.importTitle]}</CellText>\n                <CellText type=\"subtitle\">{trls[TrlKeys.importDesc]}</CellText>\n            </Cell>\n            <Divider marginTop={12} marginBottom={12} />\n            <Cell\n                right={<Icon view={IconView.Chevron} scale={IconScale.Medium} kind={IconKind.Right} />}\n                onClick={onCopy}\n                data-qa={'import_resume-choose-copy_cell'}\n            >\n                <CellText>{trls[TrlKeys.copyTitle]}</CellText>\n                <CellText type=\"subtitle\">{trls[TrlKeys.copyDesc]}</CellText>\n            </Cell>\n        </ModalContent>\n    );\n};\n\nexport default translation(ChooseStep);\n","import { ChangeEvent } from 'react';\n\nimport { Divider } from '@hh.ru/magritte-ui';\nimport Radio from 'bloko/blocks/radio';\nimport { Option } from 'bloko/blocks/select';\nimport SelectWithPlaceholder from 'bloko/blocks/select/SelectWithPlaceholder';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { Resume } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\nconst TrlKeys = {\n    placeholder: 'zp.importResume.resume.placeholder',\n};\n\ninterface ResumeListProps {\n    resumes: Resume[];\n    value: string;\n    onChange: (event: ChangeEvent<HTMLSelectElement> | ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ResumeList: TranslatedComponent<ResumeListProps> = ({ trls, resumes, value, onChange }) => {\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    return isXs ? (\n        <div className={styles.stack}>\n            <VSpacing base={2} />\n            {resumes.map((resume) => (\n                <div key={resume.id}>\n                    <Radio\n                        value={resume.id}\n                        key={resume.id}\n                        data-qa={`import_resume-resume-option_${resume.id}`}\n                        checked={value === resume.id}\n                        onChange={onChange}\n                    >\n                        {resume.title}\n                    </Radio>\n                    <Divider marginTop={8} marginBottom={8} />\n                </div>\n            ))}\n        </div>\n    ) : (\n        <SelectWithPlaceholder\n            value={value}\n            onChange={onChange}\n            placeholder={trls[TrlKeys.placeholder]}\n            data-qa=\"import_resume-resume-select\"\n        >\n            <Option value=\"\" />\n            {resumes.map((resume) => (\n                <Option value={resume.id} key={resume.id} data-qa={`import_resume-resume-option_${resume.id}`}>\n                    {resume.title}\n                </Option>\n            ))}\n        </SelectWithPlaceholder>\n    );\n};\n\nexport default translation(ResumeList);\n","import { ChangeEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { Text, TextTypography } from '@hh.ru/magritte-ui';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { ModalContent, ModalFooter } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ResumeList from 'lux/components/ImportResumeModal/ResumeList';\nimport { StepProps } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/applicant/resumes/clone': {\n            body: null;\n            queryParams: {\n                resume: string;\n            };\n            response: {\n                url: string;\n            };\n        };\n    }\n}\n\nconst TrlKeys = {\n    title: 'zp.importResume.copy.title',\n    placeholder: 'zp.importResume.copy.placeholder',\n    again: 'zp.importResume.copy.again',\n    cancel: 'zp.importResume.copy.cancel',\n    okay: 'zp.importResume.copy.okay',\n    cant: 'zp.importResume.copy.cant',\n};\n\nconst CopyStep: TranslatedComponent<StepProps> = ({ trls, onClose }) => {\n    const dispatch = useDispatch();\n\n    const [value, setValue] = useState('');\n    const [error, setError] = useState(false);\n\n    const rawResumes = useSelector((state) => state.applicantResumes);\n    const resumes = rawResumes.map((resume) => ({ id: resume._attributes.hash, title: resume.title[0]?.string || '' }));\n\n    const onChange = (e: ChangeEvent<HTMLSelectElement> | ChangeEvent<HTMLInputElement>) => {\n        const id = e.target.value;\n        setValue(id);\n    };\n\n    const onAgain = () => {\n        setValue('');\n        setError(false);\n    };\n\n    const onSelect = async () => {\n        if (!value) {\n            return;\n        }\n        try {\n            const result = await fetcher.post(`/applicant/resumes/clone`, null, { params: { resume: value } });\n            const url = result.data.url;\n            onClose();\n            dispatch(push(url));\n        } catch (e) {\n            setError(true);\n        }\n    };\n\n    if (error) {\n        return (\n            <ModalContent>\n                <div className={styles.stack}>\n                    <Text typography={TextTypography.Subtitle1Semibold}>{trls[TrlKeys.cant]}</Text>\n                    <Button appearance={ButtonAppearance.Filled} kind={ButtonKind.Primary} onClick={onAgain}>\n                        {trls[TrlKeys.again]}\n                    </Button>\n                </div>\n            </ModalContent>\n        );\n    }\n\n    return (\n        <>\n            <ModalContent>\n                <Text typography={TextTypography.Subtitle1Semibold}>{trls[TrlKeys.title]}</Text>\n                <VSpacing base={2} />\n                <ResumeList resumes={resumes} value={value} onChange={onChange} />\n            </ModalContent>\n            <ModalFooter>\n                <div className={styles.resumeFooter}>\n                    <div className={styles.space} />\n                    <Button appearance={ButtonAppearance.Outlined} onClick={onClose} className={styles.notMobile}>\n                        {trls[TrlKeys.cancel]}\n                    </Button>\n                    <Button\n                        appearance={ButtonAppearance.Filled}\n                        kind={ButtonKind.Primary}\n                        onClick={onSelect}\n                        data-qa=\"import_resume-copy-okay_button\"\n                        disabled={!value}\n                    >\n                        {trls[TrlKeys.okay]}\n                    </Button>\n                </div>\n            </ModalFooter>\n        </>\n    );\n};\n\nexport default translation(CopyStep);\n","import { Text, TextTypography } from '@hh.ru/magritte-ui';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { ModalContent, ModalFooter } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { StepProps } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\nconst TrlKeys = {\n    fail: 'zp.importResume.error.fail',\n    again: 'zp.importResume.error.again',\n    auth: 'zp.importResume.error.auth',\n    choose: 'zp.importResume.error.choose',\n};\n\nconst ErrorStep: TranslatedComponent<StepProps> = ({ trls, setStep }) => {\n    const onAuth = () => {\n        setStep('auth');\n    };\n    const onChoose = () => {\n        setStep('choose');\n    };\n\n    return (\n        <>\n            <ModalContent>\n                <Text typography={TextTypography.Subtitle1Semibold}>{trls[TrlKeys.fail]}</Text>\n                <VSpacing base={2} />\n                <Text>{trls[TrlKeys.again]}</Text>\n            </ModalContent>\n            <ModalFooter>\n                <div className={styles.row}>\n                    <Button appearance={ButtonAppearance.Filled} kind={ButtonKind.Primary} onClick={onAuth}>\n                        {trls[TrlKeys.auth]}\n                    </Button>\n                    <Button appearance={ButtonAppearance.Outlined} onClick={onChoose}>\n                        {trls[TrlKeys.choose]}\n                    </Button>\n                </div>\n            </ModalFooter>\n        </>\n    );\n};\n\nexport default translation(ErrorStep);\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport { Text, TextTypography } from '@hh.ru/magritte-ui';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { ModalContent, ModalFooter } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nimport ResumeList from 'lux/components/ImportResumeModal/ResumeList';\nimport { StepProps, Resume } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/zp_resume_import/hh_resumes': {\n            queryParams: void;\n            response: {\n                items: Resume[];\n            };\n        };\n    }\n    interface FetcherPostApi {\n        '/zp_resume_import/import_resume': {\n            queryParams: void;\n            body: {\n                resumeHash: string;\n            };\n            response: {\n                resumeHash: string;\n            };\n        };\n    }\n}\n\nconst TrlKeys = {\n    title: 'zp.importResume.import.title',\n    placeholder: 'zp.importResume.import.placeholder',\n    again: 'zp.importResume.import.again',\n    another: 'zp.importResume.import.another',\n    cancel: 'zp.importResume.import.cancel',\n    okay: 'zp.importResume.import.okay',\n    cant: 'zp.importResume.import.cant',\n};\n\nconst ImportStep: TranslatedComponent<StepProps> = ({ trls, setStep, onClose }) => {\n    const dispatch = useDispatch();\n\n    const [value, setValue] = useState('');\n    const [error, setError] = useState(false);\n    const [resumes, setResumes] = useState<Resume[]>([]);\n\n    useEffect(() => {\n        void (async () => {\n            try {\n                const data = await fetcher.get('/zp_resume_import/hh_resumes');\n                setResumes(data.items);\n            } catch (e) {\n                setStep('error');\n            }\n        })();\n    }, [setStep]);\n\n    const onAuth = () => {\n        setStep('auth');\n    };\n\n    const onChange = (e: ChangeEvent<HTMLSelectElement> | ChangeEvent<HTMLInputElement>) => {\n        const id = e.target.value;\n        setValue(id);\n    };\n\n    const onAgain = () => {\n        setValue('');\n        setError(false);\n    };\n\n    const onSelect = async () => {\n        if (!value) {\n            return;\n        }\n        try {\n            const result = await fetcher.post('/zp_resume_import/import_resume', { resumeHash: value });\n            const resumeHash = result.data.resumeHash;\n            onClose();\n            dispatch(push(`/resume/${resumeHash}`));\n        } catch (e) {\n            setError(true);\n        }\n    };\n\n    if (error) {\n        return (\n            <ModalContent>\n                <div className={styles.stack}>\n                    <Text typography={TextTypography.Subtitle1Semibold}>{trls[TrlKeys.cant]}</Text>\n                    <Button appearance={ButtonAppearance.Filled} kind={ButtonKind.Primary} onClick={onAgain}>\n                        {trls[TrlKeys.again]}\n                    </Button>\n                </div>\n            </ModalContent>\n        );\n    }\n\n    return (\n        <>\n            <ModalContent>\n                <Text typography={TextTypography.Subtitle1Semibold}>{trls[TrlKeys.title]}</Text>\n                <VSpacing base={2} />\n                <ResumeList resumes={resumes} value={value} onChange={onChange} />\n            </ModalContent>\n            <ModalFooter>\n                <div className={styles.resumeFooter}>\n                    <Button appearance={ButtonAppearance.Flat} kind={ButtonKind.Primary} onClick={onAuth}>\n                        {trls[TrlKeys.another]}\n                    </Button>\n                    <div className={styles.space} />\n                    <Button appearance={ButtonAppearance.Outlined} onClick={onClose} className={styles.notMobile}>\n                        {trls[TrlKeys.cancel]}\n                    </Button>\n                    <Button\n                        appearance={ButtonAppearance.Filled}\n                        kind={ButtonKind.Primary}\n                        onClick={onSelect}\n                        data-qa=\"import_resume-resume-import_button\"\n                        disabled={!value}\n                    >\n                        {trls[TrlKeys.okay]}\n                    </Button>\n                </div>\n            </ModalFooter>\n        </>\n    );\n};\n\nexport default translation(ImportStep);\n","import { FC, useState } from 'react';\n\nimport Modal, { ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport AuthStep from 'lux/components/ImportResumeModal/AuthStep';\nimport ChooseStep from 'lux/components/ImportResumeModal/ChooseStep';\nimport CopyStep from 'lux/components/ImportResumeModal/CopyStep';\nimport ErrorStep from 'lux/components/ImportResumeModal/ErrorStep';\nimport ImportStep from 'lux/components/ImportResumeModal/ImportStep';\nimport { StepProps, Steps } from 'lux/components/ImportResumeModal/utils';\n\nimport styles from './import-resume.less';\n\ninterface ImportResumeModalProps {\n    onClose: () => void;\n    visible: boolean;\n    url: string;\n}\n\nconst TrlKeys = {\n    title: 'zp.importResume.title',\n};\n\nexport const steps = {\n    choose: ChooseStep as unknown as FC<StepProps>,\n    auth: AuthStep as unknown as FC<StepProps>,\n    import: ImportStep as unknown as FC<StepProps>,\n    copy: CopyStep as unknown as FC<StepProps>,\n    error: ErrorStep as unknown as FC<StepProps>,\n} as Record<Steps, FC<StepProps>>;\n\nconst ImportResumeModal: TranslatedComponent<ImportResumeModalProps> = ({ onClose, visible, trls, url }) => {\n    const [step, setStep] = useState<Steps>('choose');\n\n    const handleClose = () => {\n        setStep('choose');\n        onClose();\n    };\n\n    const Step = steps[step];\n\n    return (\n        <Modal visible={visible} onClose={handleClose} useBottomSheet>\n            <div className={styles.content}>\n                <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n                <VSpacing base={4} />\n                <Step url={url} step={step} setStep={setStep} onClose={handleClose} />\n            </div>\n        </Modal>\n    );\n};\n\nexport default translation(ImportResumeModal);\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport useTrackClicks, { TrackClicksProps } from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\ninterface SupernovaButtonProps extends TrackClicksProps {\n    active?: boolean;\n    disabled?: boolean;\n    name: string;\n    onClick?: React.MouseEventHandler;\n    primary?: boolean;\n    secondary?: boolean;\n    tinted?: boolean;\n    url?: string;\n    rel?: 'nofollow';\n}\n\nconst ACTIVE_ATTRS = {\n    disabled: true,\n    tabIndex: -1,\n};\n\nconst SupernovaButton: React.FC<SupernovaButtonProps & React.PropsWithChildren> = ({\n    active,\n    children,\n    disabled,\n    name,\n    onClick,\n    primary,\n    secondary,\n    tinted,\n    trackClicks,\n    url,\n    ...props\n}) => {\n    const className = classnames('supernova-button', {\n        'supernova-button_primary': primary,\n        'supernova-button_secondary': secondary,\n        'supernova-button_tinted': tinted,\n    });\n\n    const handleClick = useTrackClicks(name, trackClicks, onClick);\n\n    if (url) {\n        return (\n            <Link className={className} onClick={handleClick} to={url} {...(active ? ACTIVE_ATTRS : {})} {...props}>\n                {children}\n            </Link>\n        );\n    }\n\n    return (\n        <span\n            className={className}\n            // @ts-expect-error стили миксина bloko-button завязаны на атрибут disabled\n            disabled={disabled}\n            onClick={handleClick}\n            {...(active ? ACTIVE_ATTRS : {})}\n            {...props}\n        >\n            {children}\n        </span>\n    );\n};\n\nexport default SupernovaButton;\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport IsDashboardContext from 'lux/components/SupernovaMainMenu/IsDashboardContext';\n\ninterface SupernovaNaviItemProps {\n    active?: boolean;\n    desktop?: boolean;\n    isButton?: boolean;\n    mobile?: boolean;\n    noMobile?: boolean;\n    noSmallScreen?: boolean;\n    noTabletScreen?: boolean;\n    smallScreen?: boolean;\n    userTypeSwitcher?: boolean;\n    arrowed?: boolean;\n}\n\nconst SupernovaNaviItem: React.FC<SupernovaNaviItemProps & React.PropsWithChildren> = ({\n    active,\n    children,\n    desktop,\n    isButton,\n    mobile,\n    noMobile,\n    noSmallScreen,\n    smallScreen,\n    noTabletScreen,\n    userTypeSwitcher,\n    arrowed = false,\n}) => {\n    const { pathname } = useLocation();\n    const isDashboard = useContext(IsDashboardContext);\n\n    return (\n        <div\n            className={classnames('supernova-navi-item', 'supernova-navi-item_lvl-2', {\n                'supernova-navi-item_active': active,\n                'supernova-navi-item_button': isButton,\n                'supernova-navi-item_desktop': desktop,\n                'supernova-navi-item_mobile': mobile,\n                'supernova-navi-item_no-mobile': noMobile,\n                'supernova-navi-item_no-small-screen': noSmallScreen,\n                'supernova-navi-item_small-screen': smallScreen,\n                'supernova-navi-item_no-tablet-screen': noTabletScreen,\n                'supernova-navi-item_user-type-switcher': userTypeSwitcher,\n                'supernova-navi-item_dashboard': isDashboard || pathname === '/employer',\n                'supernova-navi-item_arrow': arrowed,\n            })}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default SupernovaNaviItem;\n","import React from 'react';\n\nimport { VendorAnalytics } from '@hh.ru/analytics-js';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst useGoogleAnalytics = (label: string, onClick?: () => void): (() => void) => {\n    const userType = useSelector(({ userType }) => userType);\n\n    return React.useCallback(() => {\n        onClick && onClick();\n        VendorAnalytics.eventToStorage(userType, 'header_new', label);\n    }, [label, onClick, userType]);\n};\n\nexport default useGoogleAnalytics;\n","import { useCallback } from 'react';\n\nimport resumeCreationButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/resume/creation/resume_creation_button_click';\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport ImportResumeModal from 'lux/components/ImportResumeModal';\nimport { useZpImportResumeModal } from 'lux/components/ImportResumeModal/utils';\nimport SupernovaButton from 'lux/components/SupernovaMainMenu/SupernovaButton';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport useGoogleAnalytics from 'lux/components/SupernovaMainMenu/useGoogleAnalytics';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    maxResumes: 'resumeList.maxResumes',\n};\n\nconst CreateResume: TranslatedComponent<NavItem> = ({ active, name, translations, trackClicks, trls, url }) => {\n    const applicantInfo = useSelector(({ applicantInfo }) => applicantInfo);\n    const resumeLimits = useSelector(({ resumeLimits }) => resumeLimits);\n    const userType = useSelector(({ userType }) => userType);\n    const isZp = useIsZarplataPlatform();\n\n    const [visible, setVisible] = useZpImportResumeModal();\n\n    const handleClick = useGoogleAnalytics('create_resume', () => {\n        resumeCreationButtonClick({\n            hhtmSourceLabel: 'resume_creation_header',\n        });\n    });\n\n    const handleZpClick = () => {\n        setVisible(true);\n    };\n\n    const renderMaxResumesWarning = useCallback(() => {\n        if (!resumeLimits) {\n            return null;\n        }\n        return (\n            <span data-qa=\"max-resume-warning\">{format(trls[TrlKeys.maxResumes], { '{0}': resumeLimits.max })}</span>\n        );\n    }, [resumeLimits, trls]);\n\n    const zpButton = (\n        <SupernovaButton\n            active={active}\n            data-qa={`mainmenu_${name}`}\n            name={name}\n            onClick={handleZpClick}\n            secondary={userType !== UserType.NedoUser}\n            tinted\n            trackClicks={trackClicks}\n        >\n            {translations.name}\n        </SupernovaButton>\n    );\n\n    const hhButton = (\n        <SupernovaButton\n            active={active}\n            data-qa={`mainmenu_${name}`}\n            name={name}\n            onClick={handleClick}\n            secondary={userType !== UserType.NedoUser}\n            tinted\n            rel=\"nofollow\"\n            trackClicks={trackClicks}\n            url={url}\n        >\n            {translations.name}\n        </SupernovaButton>\n    );\n\n    let content;\n    if (resumeLimits && resumeLimits.remaining === 0) {\n        content = (\n            <HoverTip placement={TipPlacement.Bottom} render={renderMaxResumesWarning}>\n                <div className=\"supernova-button-wrapper\">\n                    <SupernovaButton\n                        active={active}\n                        data-qa={`mainmenu_${name}`}\n                        disabled\n                        name={name}\n                        secondary\n                        tinted\n                        trackClicks={trackClicks}\n                    >\n                        {translations.name}\n                    </SupernovaButton>\n                </div>\n            </HoverTip>\n        );\n    } else {\n        content = isZp ? zpButton : hhButton;\n    }\n\n    return (\n        <SupernovaNaviItem active={active} isButton noMobile noSmallScreen={applicantInfo.total > 0}>\n            {content}\n            <ImportResumeModal visible={visible} onClose={() => setVisible(false)} url={url} />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default translation(CreateResume);\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface AppleBusinessChatProps {\n    sendIconClickAnalytics?: () => void;\n    sendLinkClickAnalytics?: () => void;\n    supernova?: boolean;\n}\n\nconst TrlKeys = {\n    letsCommunicate: 'apple.business.chat.letsCommunicate',\n    messageAppOnAppleDevice: 'apple.business.chat.messageAppOnAppleDevice',\n    moscowTime: 'apple.business.chat.moscowTime',\n    workingHoursWeekday: 'apple.business.chat.workingHoursWeekday',\n    workingHoursWorkday: 'apple.business.chat.workingHoursWorkday',\n    workScheduleSpecialists: 'apple.business.chat.workScheduleSpecialists',\n};\n\nconst AppleBusinessChat: TranslatedComponent<AppleBusinessChatProps> = ({\n    sendIconClickAnalytics,\n    sendLinkClickAnalytics,\n    supernova,\n    trls,\n}) => {\n    const { workday, weekend, href } = useSelector(({ appleBusinessChat }) => appleBusinessChat);\n\n    return (\n        <React.Fragment>\n            <div className=\"apple-business-chat\">\n                <div>\n                    <p>\n                        <Link href={href} disableVisited target=\"_blank\" onClick={sendLinkClickAnalytics}>\n                            {trls[TrlKeys.letsCommunicate]}\n                        </Link>\n                    </p>\n                    {trls[TrlKeys.messageAppOnAppleDevice]}\n                </div>\n                {!supernova && (\n                    <Link href={href} target=\"_blank\">\n                        <span className=\"apple-business-chat-img\" onClick={sendIconClickAnalytics} />\n                    </Link>\n                )}\n            </div>\n            <div\n                className={classnames({\n                    'apple-business-chat-schedule': !supernova,\n                    'supernova-apple-business-chat-schedule': supernova,\n                })}\n            >\n                <p>{trls[TrlKeys.workScheduleSpecialists]}</p>\n                {workday != null && (\n                    <p>\n                        {format(trls[TrlKeys.workingHoursWorkday], {\n                            '{0}': workday.timeFrom,\n                            '{1}': workday.timeTo,\n                        })}\n                    </p>\n                )}\n                {weekend != null && (\n                    <p>\n                        {format(trls[TrlKeys.workingHoursWeekday], {\n                            '{0}': weekend.timeFrom,\n                            '{1}': weekend.timeTo,\n                        })}\n                    </p>\n                )}\n                <p>{trls[TrlKeys.moscowTime]}</p>\n            </div>\n            {supernova && (\n                <Link href={href} target=\"_blank\">\n                    <span className=\"apple-business-chat-img\" onClick={sendIconClickAnalytics} />\n                </Link>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(translation(AppleBusinessChat));\n","import React from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport AppleBusinessChat from 'lux/components/AppleBusinessChat';\n\nconst sendIconClickAnalytics = () => {\n    Analytics.sendHHEventButtonClick('supernova_menu_apple_business_chat_icon_click');\n};\n\nconst sendLinkClickAnalytics = () => {\n    Analytics.sendHHEventButtonClick('supernova_menu_apple_business_chat_text_click');\n};\n\nconst AppleBusinessChatComponent: React.VFC = () => {\n    return (\n        <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n            <Gap top>\n                <AppleBusinessChat\n                    sendIconClickAnalytics={sendIconClickAnalytics}\n                    sendLinkClickAnalytics={sendLinkClickAnalytics}\n                    supernova\n                />\n            </Gap>\n        </Column>\n    );\n};\n\nexport default AppleBusinessChatComponent;\n","import React from 'react';\n\nexport type AppleBusinessChatType = [boolean, (value: boolean) => void];\n\nconst AppleBusinessChatContext = React.createContext<AppleBusinessChatType>([false, () => undefined]);\n\nexport default AppleBusinessChatContext;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nconst AccountActions: React.FC<NavItem & React.PropsWithChildren> = ({ children }) => {\n    return <div className=\"supernova-account-actions\">{children}</div>;\n};\n\nexport default AccountActions;\n","import React from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nexport interface TrackElementShownProps {\n    trackElementShown?: boolean;\n}\n\nconst useTrackElementShown = (\n    elementRef: React.RefObject<HTMLElement>,\n    name: string,\n    trackElementShown?: boolean,\n    refCallback?: (ref: React.RefObject<HTMLElement>) => void\n): void => {\n    React.useLayoutEffect(() => {\n        refCallback && refCallback(elementRef);\n        if (elementRef.current !== null) {\n            refCallback && refCallback(elementRef);\n            if (trackElementShown) {\n                Analytics.sendHHEventElementShown(elementRef.current, { name: `menu_item_${name}` });\n            }\n        }\n    }, [elementRef, name, refCallback, trackElementShown]);\n};\n\nexport default useTrackElementShown;\n","import React, { MouseEventHandler, useCallback } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport useExperimentCheckFunction from 'lux/hooks/useExperimentCheckFunction';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport { NavItemAnalytics } from 'lux/models/supernovaNaviMenu';\nimport { UserStat } from 'lux/models/userStats';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Badge from 'lux/components/SupernovaMainMenu/Badge';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdownContext from 'lux/components/SupernovaMainMenu/SupernovaDropdownContext';\nimport useTrackClicks, { TrackClicksProps } from 'lux/components/SupernovaMainMenu/useTrackClicks';\nimport useTrackElementShown, { TrackElementShownProps } from 'lux/components/SupernovaMainMenu/useTrackElementShown';\n\ninterface SupernovaDropdownOptionProps extends TrackClicksProps, TrackElementShownProps {\n    Element?: 'button' | 'div';\n    badge?: string;\n    counter?: UserStat;\n    'data-qa'?: string;\n    disabled?: boolean;\n    external?: boolean;\n    highlight?: OptionHighlight;\n    name: string;\n    onClick?: React.MouseEventHandler;\n    supportUnavailable?: boolean;\n    tab?: boolean;\n    analytics?: NavItemAnalytics;\n    toggled?: boolean;\n    url?: string;\n}\n\nexport enum OptionHighlight {\n    Primary = 'primary',\n    Warning = 'warning',\n}\n\nconst SupernovaDropdownOption: React.FC<SupernovaDropdownOptionProps & React.PropsWithChildren> = ({\n    Element = 'button',\n    badge,\n    children,\n    counter,\n    disabled,\n    external,\n    highlight,\n    name,\n    'data-qa': dataQa = `mainmenu_${name}`,\n    onClick,\n    supportUnavailable,\n    tab,\n    analytics,\n    toggled,\n    trackClicks,\n    trackElementShown,\n    url,\n}) => {\n    const { elements: dropdownContext } = React.useContext(SupernovaDropdownContext);\n\n    const elementRef = React.useRef(null);\n\n    const trackClick = useTrackClicks(name, trackClicks, onClick, analytics);\n\n    const userStat = useSelector(({ userStats }) => counter && userStats?.[counter]);\n\n    const isPrice = name === 'pricelist';\n    const sendCheck = useExperimentCheckFunction(isPrice);\n    const isHHRu = useIsHhru();\n\n    const handleClick = useCallback<MouseEventHandler>(\n        (event) => {\n            trackClick(event);\n\n            if (isPrice && isHHRu) {\n                sendCheck('employer_header_price_list_b');\n                sendCheck('employer_header_price_list_c');\n            }\n        },\n        [isHHRu, isPrice, sendCheck, trackClick]\n    );\n\n    useTrackElementShown(elementRef, name, trackElementShown, (ref) => {\n        if (ref.current !== null) {\n            dropdownContext[name] = ref.current;\n        }\n    });\n\n    const className = classnames('supernova-dropdown-option', {\n        [`supernova-dropdown-option_highlight-${highlight as OptionHighlight}`]: highlight,\n        'supernova-dropdown-option_tab': tab,\n        'supernova-dropdown-option_toggled': toggled,\n        'supernova-dropdown-option_support-unavailable': supportUnavailable,\n    });\n\n    if (url) {\n        return (\n            <Link\n                className={className}\n                data-qa={dataQa}\n                onClick={handleClick}\n                target={external ? '_blank' : undefined}\n                ref={elementRef}\n                to={url}\n            >\n                {children}\n                {!!userStat && <SupernovaCounter dropdown>{userStat}</SupernovaCounter>}\n                <Badge badge={badge} name={name} />\n            </Link>\n        );\n    }\n\n    return (\n        <Element className={className} data-qa={dataQa} disabled={disabled} onClick={handleClick} ref={elementRef}>\n            {children}\n            {!!userStat && <SupernovaCounter dropdown>{userStat}</SupernovaCounter>}\n            <Badge badge={badge} name={name} />\n        </Element>\n    );\n};\n\nexport default SupernovaDropdownOption;\n","import React from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport AppleBusinessChatContext from 'lux/components/SupernovaMainMenu/AppleBusinessChatContext';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\n\nconst sendShowAnalytics = () => {\n    Analytics.sendHHEventButtonClick('help_menu_apple_business_chat_show');\n};\n\nconst AppleBusinessChatActivator: React.VFC<NavItem> = ({ name, trackClicks, trackElementShown, translations }) => {\n    const [visible, setVisible] = React.useContext(AppleBusinessChatContext);\n\n    const handleClick = React.useCallback(() => {\n        if (!visible) {\n            sendShowAnalytics();\n        }\n        setVisible(!visible);\n    }, [visible, setVisible]);\n\n    return (\n        <SupernovaDropdownOption\n            name={name}\n            onClick={handleClick}\n            toggled={visible}\n            trackClicks={trackClicks}\n            trackElementShown={trackElementShown}\n        >\n            {translations.name}\n            <span className=\"supernova-arrow-right-icon\" />\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default AppleBusinessChatActivator;\n","// extracted by mini-css-extract-plugin\nexport default {\"badge\":\"badge--z08ZJ9IZbLTaXAOr5vYk\"};","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './account-type-badge.less';\n\nconst TrlKeys = {\n    employer: 'account.type.badge.employer',\n    applicant: 'account.type.badge.applicant',\n};\n\nconst AccountTypeBadge: TranslatedComponent = ({ trls }) => {\n    const userType = useSelector((state) => state.userType);\n\n    if (userType !== UserType.Applicant && userType !== UserType.Employer) {\n        return null;\n    }\n\n    return (\n        <span data-qa={`account-type-badge-${userType}`} className={styles.badge}>\n            {trls[TrlKeys[userType]]}\n        </span>\n    );\n};\n\nexport default translation(AccountTypeBadge);\n","import React from 'react';\n\nimport { Account } from 'lux/models/account';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst render = (account: Account) => {\n    const { firstName, middleName, lastName } = account;\n    return <React.Fragment>{[firstName, middleName, lastName].join(' ')}</React.Fragment>;\n};\n\nconst allFieldsEmpty = ({ firstName, middleName, lastName }: Account) =>\n    firstName === null && middleName === null && lastName === null;\n\nconst CurrentUserFullName: React.VFC = () => {\n    const { account, actualAccount, hhidAccount, userType } = useSelector(\n        ({ account, actualAccount, hhidAccount, userType }) => ({\n            account,\n            actualAccount,\n            hhidAccount,\n            userType,\n        })\n    );\n\n    if (account && !allFieldsEmpty(account)) {\n        return render(account);\n    } else if (actualAccount && !allFieldsEmpty(actualAccount)) {\n        return render(actualAccount);\n    } else if (userType === UserType.NedoUser && hhidAccount && !allFieldsEmpty(hhidAccount)) {\n        return render(hhidAccount);\n    }\n\n    return null;\n};\n\nexport default CurrentUserFullName;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SupernovaDropdownSectionProps {\n    mainContent?: boolean;\n    services?: boolean;\n    support?: boolean;\n    supportUnavailable?: boolean;\n    notification?: boolean;\n    flex?: boolean;\n}\n\nconst SupernovaDropdownSection: React.FC<SupernovaDropdownSectionProps & React.PropsWithChildren> = ({\n    children,\n    mainContent,\n    services,\n    support,\n    supportUnavailable,\n    notification,\n    flex,\n    ...props\n}) => {\n    return (\n        <div\n            className={classnames('supernova-dropdown-section', {\n                'supernova-dropdown-section_main-content': mainContent,\n                'supernova-dropdown-section_services': services,\n                'supernova-dropdown-section_support': support,\n                'supernova-dropdown-section_support-unavailable': supportUnavailable,\n                'supernova-dropdown-section_notification': notification,\n                'supernova-dropdown-section_flex': flex,\n            })}\n            {...props}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default SupernovaDropdownSection;\n","import React from 'react';\n\nimport Text from 'bloko/blocks/text';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AccountTypeBadge from 'lux/components/SupernovaMainMenu/AccountTypeBadge';\nimport CurrentUserFullName from 'lux/components/SupernovaMainMenu/CurrentUserFullName';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nconst ApplicantInfo: React.FC<NavItem & React.PropsWithChildren> = ({\n    children,\n    name,\n    trackClicks,\n    trackElementShown,\n}) => {\n    const isMultiAccount = useSelector((state) => state.session.isMultiAccount);\n    return (\n        <SupernovaDropdownSection>\n            {isMultiAccount && (\n                <div className=\"supernova-dropdown-static-option\">\n                    <AccountTypeBadge />\n                </div>\n            )}\n            <SupernovaDropdownOption\n                name={name}\n                trackClicks={trackClicks}\n                trackElementShown={trackElementShown}\n                url=\"/applicant/settings?from=header_new&hhtmFromLabel=header_new\"\n            >\n                <Text Element=\"span\" strong>\n                    <CurrentUserFullName />\n                </Text>\n            </SupernovaDropdownOption>\n            {children}\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default ApplicantInfo;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport { EMPLOYER_ACCOUNT_SWITCH_ERROR } from 'lux/components/Notifications/EmployerAccountSwitcher';\nimport { EmployerDivision } from 'lux/models/employerDivisions';\nimport { EmployerImplants } from 'lux/models/employerImplants';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/employer/implants/get_implants': {\n            queryParams: void;\n            response: EmployerImplants;\n        };\n        '/shards/employer/divisions': {\n            queryParams: void;\n            response: {\n                employerCurrentDivision: EmployerDivision;\n                employerDivisions: Record<number, EmployerDivision>;\n            };\n        };\n    }\n    interface FetcherPostApi {\n        '/employer/implants/switch': {\n            body: void;\n            queryParams: { hhid: string };\n            response: void;\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/employer/divisions/change': {\n            body: void;\n            queryParams: { divisionId: string };\n            response: void;\n        };\n    }\n}\n\nenum EmployerAccountType {\n    Implant = 'implant',\n    Division = 'division',\n}\n\ninterface EmployerAccountSwitcherProps {\n    employerName: string;\n    hasDivisions: boolean;\n    hasImplants: boolean;\n}\n\nconst employerCurrentDivisionAction = makeSetStoreField('employerCurrentDivision');\nconst employerDivisionsAction = makeSetStoreField('employerDivisions');\nconst employerImplantsAction = makeSetStoreField('employerImplants');\n\nconst EmployerAccountSwitcher: React.FC<EmployerAccountSwitcherProps & React.PropsWithChildren> = ({\n    employerName,\n    hasDivisions,\n    hasImplants,\n}) => {\n    const dispatch = useDispatch();\n\n    const currentDivision = useSelector((store) => store.employerCurrentDivision);\n    const divisions = useSelector((store) => store.employerDivisions);\n    const implants = useSelector((store) => store.employerImplants);\n\n    React.useEffect(() => {\n        if (hasDivisions && Object.keys(divisions).length === 0) {\n            fetcher.get('/shards/employer/divisions').then((data) => {\n                dispatch(employerCurrentDivisionAction(data.employerCurrentDivision));\n                dispatch(employerDivisionsAction(data.employerDivisions));\n            }, console.error);\n        }\n\n        if (hasImplants && implants === null) {\n            fetcher.get('/employer/implants/get_implants').then((data) => {\n                dispatch(employerImplantsAction(data));\n            }, console.error);\n        }\n    }, [dispatch, divisions, hasDivisions, hasImplants, implants]);\n\n    const handleChange = React.useCallback(\n        (event: React.ChangeEvent<HTMLSelectElement>) => {\n            const option = [...event.target.options].find((option) => option.value === event.target.value);\n            if (!option) {\n                return;\n            }\n\n            const request = (() => {\n                switch (option.dataset.type) {\n                    case EmployerAccountType.Division:\n                        return fetcher.put('/shards/employer/divisions/change', undefined, {\n                            params: { divisionId: event.target.value },\n                        });\n                    case EmployerAccountType.Implant:\n                        return fetcher.post('/employer/implants/switch', undefined, {\n                            params: { hhid: event.target.value },\n                        });\n                    default:\n                        return null;\n                }\n            })();\n\n            request?.then(\n                () => {\n                    window.location.reload();\n                },\n                () => {\n                    dispatch(addNotification(EMPLOYER_ACCOUNT_SWITCH_ERROR));\n                }\n            );\n        },\n        [dispatch]\n    );\n\n    return (\n        <div className=\"supernova-employer-name\">\n            <select className=\"supernova-employer-name-select\" data-qa=\"implants-switcher\" onChange={handleChange}>\n                <option>\n                    {employerName}\n                    {currentDivision && ` (${currentDivision.divisionName})`}\n                </option>\n                {hasDivisions &&\n                    Object.values(divisions).map(\n                        ({ divisionId, divisionName }) =>\n                            divisionId !== currentDivision?.divisionId && (\n                                <option data-type={EmployerAccountType.Division} key={divisionId} value={divisionId}>\n                                    {employerName} ({divisionName})\n                                </option>\n                            )\n                    )}\n                {hasImplants &&\n                    implants?.extraAccounts.map(({ employer, hhid }) => (\n                        <option data-type={EmployerAccountType.Implant} key={hhid} value={hhid}>\n                            {employer.name}\n                        </option>\n                    ))}\n            </select>\n            <div className=\"supernova-employer-name-text\">\n                {employerName}\n                {currentDivision && ` (${currentDivision.divisionName})`}\n            </div>\n        </div>\n    );\n};\n\nexport default EmployerAccountSwitcher;\n","import { FormItem } from 'bloko/blocks/form';\nimport { H3Section } from 'bloko/blocks/header';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AccountTypeBadge from 'lux/components/SupernovaMainMenu/AccountTypeBadge';\nimport CurrentUserFullName from 'lux/components/SupernovaMainMenu/CurrentUserFullName';\nimport EmployerAccountSwitcher from 'lux/components/SupernovaMainMenu/EmployerAccountSwitcher';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nconst TrlKeys = {\n    client: 'navi.client',\n};\n\nconst EmployerInfo: TranslatedComponent<NavItem> = ({ children, name, trls }) => {\n    const employerId = useSelector((state) => state.employerId);\n    const employerName = useSelector((state) => state.employerName);\n    const hasDivisions = useSelector((state) => state.employerHasDivisions);\n    const hasImplants = useSelector((state) => state.session.hasExtraAccounts);\n    const isMultiAccount = useSelector((state) => state.session.isMultiAccount);\n\n    return (\n        <SupernovaDropdownSection>\n            <div className=\"supernova-dropdown-static-option\">\n                {isMultiAccount && (\n                    <>\n                        <AccountTypeBadge />\n                        <VSpacing base={5} />\n                    </>\n                )}\n                {hasDivisions || hasImplants ? (\n                    <EmployerAccountSwitcher\n                        employerName={employerName}\n                        hasDivisions={hasDivisions}\n                        hasImplants={hasImplants}\n                    />\n                ) : (\n                    <H3Section>{employerName}</H3Section>\n                )}\n                <FormItem />\n                <Text data-qa={`mainmenu_${name}`} importance={TextImportance.Secondary}>\n                    <CurrentUserFullName />\n                    {` – ${trls[TrlKeys.client]} ${employerId}`}\n                </Text>\n            </div>\n            {children}\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default translation(EmployerInfo);\n","import { FC, ReactNode } from 'react';\n\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\ninterface SupernovaDropdownStaticOptionProps {\n    title: ReactNode;\n    value: ReactNode;\n    'data-qa'?: string;\n}\n\nconst SupernovaDropdownStaticOption: FC<SupernovaDropdownStaticOptionProps> = (props) => {\n    const { title, value } = props;\n    return (\n        <div className=\"supernova-dropdown-static-option\">\n            <Text importance={TextImportance.Secondary}>{title}</Text>\n            <VSpacing base={2} />\n            <Text strong data-qa={props['data-qa']}>\n                {value}\n            </Text>\n        </div>\n    );\n};\n\nexport default SupernovaDropdownStaticOption;\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport { EmployerBillingInfo } from 'lux/models/employerBillingInfo';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/employer/billing_info': {\n            queryParams: void;\n            response: EmployerBillingInfo;\n        };\n    }\n}\n\nconst billingInfoAction = makeSetStoreField('employerBillingInfo');\n\nconst useEmployerBillingInfo = (): EmployerBillingInfo => {\n    const billingInfo = useSelector(({ employerBillingInfo }) => employerBillingInfo);\n    const dispatch = useDispatch();\n\n    const fetchBillingInfo = useCallback(async () => {\n        if (!billingInfo?.employer) {\n            try {\n                const data = await fetcher.get('/shards/employer/billing_info');\n                dispatch(billingInfoAction(data));\n            } catch (e) {\n                //\n            }\n        }\n    }, [billingInfo, dispatch]);\n\n    useEffect(() => {\n        void fetchBillingInfo();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [billingInfo]);\n\n    return billingInfo;\n};\n\nexport default useEmployerBillingInfo;\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Link from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst TrlKeys = {\n    clickmeBalance: 'supernova.billingInfo.clickme.balance',\n    clickmeLinkLabel: 'supernova.billingInfo.clickme.link',\n    clickmeBonus: {\n        one: 'supernova.billingInfo.clickme.bonus.one',\n        some: 'supernova.billingInfo.clickme.bonus.some',\n        many: 'supernova.billingInfo.clickme.bonus.many',\n    },\n};\n\nconst clickmeUrl =\n    'https://clickme.hh.ru/new/dashboard?utm_source=hh.ru&utm_medium=referral&utm_campaign=main_menu_balance';\n\nconst onClickmeClick = () => {\n    Analytics.sendEvent('employer', 'click-clickme-link-in-menu');\n    Analytics.sendHHEventButtonClick('clickme_link_in_menu');\n};\n\nconst ClickmeBalance: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n    const isZp = useIsZarplataPlatform();\n    const currency = billingInfo?.billingSummary?.currency || CurrencyType.RUR;\n    const clickmeLinkRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (clickmeLinkRef.current) {\n            Analytics.sendEventElementShown(clickmeLinkRef.current, 'employer', 'shown-clickme-link-in-menu');\n            Analytics.sendHHEventElementShown(clickmeLinkRef.current, { name: 'clickme_link_in_menu' });\n        }\n    }, [billingInfo.talantixTariffDaysLeft]);\n\n    if (!billingInfo.clickme || isZp) {\n        return null;\n    }\n\n    return (\n        <SupernovaDropdownStaticOption\n            data-qa=\"clickme-balance\"\n            title={\n                <>\n                    {trls[TrlKeys.clickmeBalance]}\n                    {NON_BREAKING_SPACE}\n                    <Link\n                        ref={clickmeLinkRef}\n                        onClick={onClickmeClick}\n                        href={clickmeUrl}\n                        target=\"_blank\"\n                        disableVisited\n                    >\n                        {trls[TrlKeys.clickmeLinkLabel]}\n                    </Link>\n                </>\n            }\n            value={\n                <>\n                    <FormatMoney currency={currency}>{billingInfo.clickme.realBalance}</FormatMoney>\n                    {billingInfo.clickme.bonusBalance > 0 && (\n                        <>\n                            <VSpacing base={2} />\n                            <ConversionNumber\n                                hasValue\n                                one={trls[TrlKeys.clickmeBonus.one]}\n                                some={trls[TrlKeys.clickmeBonus.some]}\n                                many={trls[TrlKeys.clickmeBonus.many]}\n                                value={billingInfo.clickme.bonusBalance}\n                            />\n                        </>\n                    )}\n                </>\n            }\n        />\n    );\n};\n\nexport default translation(ClickmeBalance);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst TrlKeys = {\n    available: 'supernova.billingInfo.available',\n    reserved: 'supernova.billingInfo.reserved',\n};\n\nconst Money: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n    const currency = billingInfo?.billingSummary?.currency || CurrencyType.RUR;\n\n    if (!billingInfo.billingSummary) {\n        return null;\n    }\n\n    return (\n        <>\n            <SupernovaDropdownStaticOption\n                data-qa=\"total_money\"\n                title={trls[TrlKeys.available]}\n                value={\n                    <FormatMoney currency={currency}>\n                        {billingInfo.billingSummary.availableWithoutBlockedMoney}\n                    </FormatMoney>\n                }\n            />\n            <SupernovaDropdownStaticOption\n                data-qa=\"reserved_money\"\n                title={trls[TrlKeys.reserved]}\n                value={<FormatMoney currency={currency}>{billingInfo.billingSummary.blockedMoney}</FormatMoney>}\n            />\n        </>\n    );\n};\n\nexport default translation(Money);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport numberFormatter from 'bloko/common/numberFormatter';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\ninterface FormatCountProps {\n    children: number | string;\n}\n\nconst TrlKeys = {\n    countPostfix: 'employer.price2.pcs',\n};\n\nconst FormatCount: TranslatedComponent<FormatCountProps> = ({ trls, children }) => {\n    return (\n        <>\n            {numberFormatter.format(String(children), {\n                groupSeparator: NON_BREAKING_SPACE,\n            })}\n            {NON_BREAKING_SPACE}\n            {trls[TrlKeys.countPostfix]}\n        </>\n    );\n};\n\nexport default translation(FormatCount);\n","import { useMemo } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { ServiceEmployerDescription } from 'lux/models/oldEmployer/employerBillingSummary';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nimport FormatCount from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/FormatCount';\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nexport const isContactsViewService = (service: ServiceEmployerDescription): boolean =>\n    service.code === ServiceItemCode.ContactsView;\n\nconst TrlKeys = {\n    contactsTotal: 'supernova.billingInfo.opening.contacts.total',\n    contactsQuotas: 'supernova.billingInfo.contactsQuotas',\n};\n\nconst OpenContacts: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n\n    const contactsTotal = useMemo(() => {\n        return (\n            billingInfo?.employer?.serviceDescription\n                ?.filter(isContactsViewService)\n                .reduce((total, service) => total + Number(service.count), 0) || 0\n        );\n    }, [billingInfo]);\n\n    return (\n        <>\n            {(!!contactsTotal || contactsTotal === 0) && (\n                <SupernovaDropdownStaticOption\n                    data-qa=\"opening-contacts-total\"\n                    title={trls[TrlKeys.contactsTotal]}\n                    value={<FormatCount>{contactsTotal}</FormatCount>}\n                />\n            )}\n\n            {!!billingInfo?.quotas?.contactsQuotas && (\n                <SupernovaDropdownStaticOption\n                    data-qa=\"contacts-quotas\"\n                    title={trls[TrlKeys.contactsQuotas]}\n                    value={<FormatCount>{billingInfo.quotas.contactsQuotas}</FormatCount>}\n                />\n            )}\n        </>\n    );\n};\n\nexport default translation(OpenContacts);\n","import { useMemo } from 'react';\n\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\n\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst TrlKeys = {\n    resumeAccess: 'supernova.billingInfo.access',\n    days: {\n        one: 'index.employer.billing.days.one',\n        some: 'index.employer.billing.days.some',\n        many: 'index.employer.billing.days.many',\n    },\n    access: {\n        one: 'index.employer.billing.access.one',\n        some: 'index.employer.billing.access.some',\n        many: 'index.employer.billing.access.many',\n    },\n};\n\nconst ResumeAccess: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n    const resumeAccessCodes = billingInfo?.billingSummary?.serviceCategories?.resumeAccessCodes;\n\n    const accessCount = useMemo(() => {\n        const defaultCount = (\n            <ConversionNumber\n                hasValue\n                one={trls[TrlKeys.days.one]}\n                some={trls[TrlKeys.days.many]}\n                many={trls[TrlKeys.days.some]}\n                zero={`0 ${trls[TrlKeys.days.some]}`}\n                value={0}\n            />\n        );\n\n        if (!resumeAccessCodes) {\n            return defaultCount;\n        }\n        const { count, remainingDays, days } = resumeAccessCodes;\n        if (remainingDays) {\n            return (\n                <ConversionNumber\n                    hasValue\n                    one={trls[TrlKeys.days.one]}\n                    some={trls[TrlKeys.days.many]}\n                    many={trls[TrlKeys.days.some]}\n                    value={remainingDays}\n                />\n            );\n        }\n        if (days) {\n            return (\n                <ConversionNumber\n                    hasValue\n                    one={trls[TrlKeys.days.one]}\n                    some={trls[TrlKeys.days.many]}\n                    many={trls[TrlKeys.days.some]}\n                    value={days}\n                />\n            );\n        }\n        if (count) {\n            return (\n                <ConversionNumber\n                    hasValue\n                    one={trls[TrlKeys.access.one]}\n                    some={trls[TrlKeys.access.many]}\n                    many={trls[TrlKeys.access.some]}\n                    value={count}\n                />\n            );\n        }\n        return defaultCount;\n    }, [resumeAccessCodes, trls]);\n\n    return (\n        <SupernovaDropdownStaticOption\n            data-qa=\"resume-access-count\"\n            title={trls[TrlKeys.resumeAccess]}\n            value={accessCount}\n        />\n    );\n};\n\nexport default translation(ResumeAccess);\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport talantixLinkContactsHideButtonClick from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_button_click';\nimport talantixLinkContactsHideElementShown from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_element_shown';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst TrlKeys = {\n    talantixTariffDaysLeftZero: 'supernova.billingInfo.talantixTariffDaysLeft.zero',\n    accessToTalantix: 'supernova.billingInfo.accessTo',\n    talantixLabel: 'supernova.billingInfo.talantix',\n    days: {\n        one: 'index.employer.billing.days.one',\n        some: 'index.employer.billing.days.some',\n        many: 'index.employer.billing.days.many',\n    },\n};\n\nconst talantixUrl = 'https://talantix.ru/ats/vacancies?utm_source=hh.ru&utm_medium=referral&utm_campaign=tariff_days';\n\nconst onTalantixTariffDaysLeftLinkClick = () => {\n    Analytics.sendEvent('talantix', 'tariffDaysLeftLinkClick', undefined, undefined, true);\n    talantixLinkContactsHideButtonClick({ hhtmSourceLabel: 'menu_item' });\n};\n\nconst TalantixDaysLeft: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n    const talantixLinkRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (talantixLinkRef.current) {\n            Analytics.sendEventElementShown(talantixLinkRef.current, 'talantix', 'tariffDaysLeftLinkShow');\n            talantixLinkContactsHideElementShown(talantixLinkRef.current, { hhtmSourceLabel: 'menu_item' });\n        }\n    }, [billingInfo.talantixTariffDaysLeft]);\n\n    if (!billingInfo.talantixTariffDaysLeft && billingInfo.talantixTariffDaysLeft !== 0) {\n        return null;\n    }\n\n    return (\n        <SupernovaDropdownStaticOption\n            data-qa=\"talantix_days\"\n            title={\n                <>\n                    {trls[TrlKeys.accessToTalantix]}\n                    {NON_BREAKING_SPACE}\n                    <Link\n                        ref={talantixLinkRef}\n                        onClick={onTalantixTariffDaysLeftLinkClick}\n                        href={talantixUrl}\n                        target=\"_blank\"\n                        disableVisited\n                    >\n                        {trls[TrlKeys.talantixLabel]}\n                    </Link>\n                </>\n            }\n            value={\n                <>\n                    {billingInfo.talantixTariffDaysLeft === 0 && trls[TrlKeys.talantixTariffDaysLeftZero]}\n                    {billingInfo.talantixTariffDaysLeft > 0 && (\n                        <ConversionNumber\n                            hasValue\n                            one={trls[TrlKeys.days.one]}\n                            some={trls[TrlKeys.days.many]}\n                            many={trls[TrlKeys.days.some]}\n                            value={billingInfo.talantixTariffDaysLeft}\n                        />\n                    )}\n                </>\n            }\n        />\n    );\n};\n\nexport default translation(TalantixDaysLeft);\n","import { useMemo } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\nimport FormatCount from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/FormatCount';\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst TrlKeys = {\n    vacanciesCount: 'supernova.billingInfo.vacancies',\n    vacanciesQuotas: 'supernova.billingInfo.vacanciesQuotas',\n};\n\nconst Vacancies: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n    const isZp = useIsZarplataPlatform();\n    const serviceCategories = billingInfo?.billingSummary?.serviceCategories;\n\n    const vacanciesCount = useMemo(() => {\n        if (!serviceCategories) {\n            return null;\n        }\n        const { nonFreeVacancyPublicationsCodes, freeVacancyPublicationsCodes } = serviceCategories;\n        if (isZp) {\n            return nonFreeVacancyPublicationsCodes?.count || 0;\n        }\n        return (freeVacancyPublicationsCodes?.count || 0) + (nonFreeVacancyPublicationsCodes?.count || 0);\n    }, [isZp, serviceCategories]);\n\n    return (\n        <>\n            {(!!vacanciesCount || vacanciesCount === 0) && (\n                <SupernovaDropdownStaticOption\n                    data-qa=\"vacancies_count\"\n                    title={trls[TrlKeys.vacanciesCount]}\n                    value={<FormatCount>{vacanciesCount}</FormatCount>}\n                />\n            )}\n\n            {!!billingInfo?.quotas?.vacanciesQuotas && (\n                <SupernovaDropdownStaticOption\n                    data-qa=\"vacancies-quotas\"\n                    title={trls[TrlKeys.vacanciesQuotas]}\n                    value={<FormatCount>{billingInfo.quotas.vacanciesQuotas}</FormatCount>}\n                />\n            )}\n        </>\n    );\n};\n\nexport default translation(Vacancies);\n","import { useMemo } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaDropdownStaticOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownStaticOption';\nimport translation from 'lux/components/translation';\nimport { ServiceEmployerDescription } from 'lux/models/oldEmployer/employerBillingSummary';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nimport FormatCount from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/FormatCount';\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nexport const isVideoInterviewService = (service: ServiceEmployerDescription): boolean =>\n    service.code === ServiceItemCode.VideoInterview;\n\nconst TrlKeys = {\n    videoInterview: 'supernova.billingInfo.videoInterview',\n};\n\nconst VideoInterview: TranslatedComponent = ({ trls }) => {\n    const billingInfo = useEmployerBillingInfo();\n\n    const videoInterviewTotal = useMemo(() => {\n        return billingInfo?.employer?.serviceDescription\n            ?.filter(isVideoInterviewService)\n            .reduce((total, service) => total + Number(service.count), 0);\n    }, [billingInfo]);\n\n    if (!videoInterviewTotal) {\n        return null;\n    }\n\n    return (\n        <SupernovaDropdownStaticOption\n            data-qa=\"video-interview-count\"\n            title={trls[TrlKeys.videoInterview]}\n            value={<FormatCount>{videoInterviewTotal}</FormatCount>}\n        />\n    );\n};\n\nexport default translation(VideoInterview);\n","import { FC } from 'react';\n\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\n\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nimport ClickmeBalance from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/ClickmeBalance';\nimport Money from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/Money';\nimport OpenContacts from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/OpenContacts';\nimport ResumeAccess from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/ResumeAccess';\nimport TalantixDaysLeft from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/TalantixDaysLeft';\nimport Vacancies from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/Vacancies';\nimport VideoInterview from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/VideoInterview';\nimport useEmployerBillingInfo from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/useEmployerBillingInfo';\n\nconst EmployerBillingInfoSection: FC = () => {\n    const billingInfo = useEmployerBillingInfo();\n    const isInfoExist = !!billingInfo?.employer;\n\n    if (!isInfoExist) {\n        return (\n            <SupernovaDropdownSection>\n                <Loading scale={LoadingScale.Small} />\n            </SupernovaDropdownSection>\n        );\n    }\n\n    return (\n        <SupernovaDropdownSection>\n            <Money />\n            <Vacancies />\n            <ResumeAccess />\n            <OpenContacts />\n            <VideoInterview />\n            <ClickmeBalance />\n            <TalantixDaysLeft />\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default EmployerBillingInfoSection;\n","import { PropsWithChildren } from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport EmployerBillingInfoSection from 'lux/components/SupernovaMainMenu/EmployerBillingInfoSection/EmployerBillingInfoSection';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nconst EmployerPanel: React.FC<NavItem & PropsWithChildren> = ({ children }) => {\n    return (\n        <div className=\"supernova-employer-panel\">\n            <SupernovaDropdownSection mainContent>{children}</SupernovaDropdownSection>\n            <EmployerBillingInfoSection />\n        </div>\n    );\n};\n\nexport default EmployerPanel;\n","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Acknowledge from 'HH/EmployerReviews/Acknowledge';\nimport translation from 'lux/components/translation';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\n\nconst TrlKeys = {\n    employerReviews: 'applicant.employerReviews.supernova.menuItem',\n};\n\nconst handleClick = () => {\n    Analytics.sendHHEventButtonClick('employer_review_status_waiting', { type: 'profile' });\n    Acknowledge();\n};\n\nconst employerReviewsApplicantProfileBadgeAction = makeSetStoreField('employerReviewsApplicantProfileBadge');\n\nconst EmployersReviews: TranslatedComponent<NavItem> = ({ name, trls, ...props }) => {\n    const analyticsSentRef = useRef(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!analyticsSentRef.current) {\n            Analytics.sendHHEvent('element_shown', {\n                elementName: 'employer_review_list_button',\n                hhtmSourceLabel: 'profile_menu',\n            });\n            dispatch(employerReviewsApplicantProfileBadgeAction(false));\n            analyticsSentRef.current = true;\n        }\n    }, [dispatch]);\n\n    return (\n        <SupernovaDropdownOption onClick={handleClick} name={name} {...props}>\n            {trls[TrlKeys.employerReviews]}\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default translation(EmployersReviews);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\n\nconst TrlKeys = {\n    kakdela: 'supernova.navi.kakdelaFeedbackPlatform.employerMenu',\n};\n\nconst Kakdela: TranslatedComponent<NavItem> = ({ name, trls, ...props }) => {\n    return (\n        <SupernovaDropdownOption name={name} {...props}>\n            {trls[TrlKeys.kakdela]}\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default translation(Kakdela);\n","import React from 'react';\n\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\n\nimport Form from 'lux/components/Form';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nconst LogoffSudoUser: React.VFC<NavItem> = ({ name, url, translations }) => {\n    return (\n        <div className=\"supernova-dropdown-static-option\">\n            <Form action={url}>\n                <Link appearance={LinkAppearance.Pseudo} data-qa={`mainmenu_${name}`} type=\"submit\">\n                    {translations.name}\n                </Link>\n            </Form>\n        </div>\n    );\n};\n\nexport default LogoffSudoUser;\n","import React from 'react';\n\nimport Form from 'lux/components/Form';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaDropdownOption, { OptionHighlight } from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nconst LogoffUser: React.VFC<NavItem> = ({ name, trackClicks, translations, url }) => {\n    return (\n        <SupernovaDropdownSection mainContent>\n            <Form action={url}>\n                <SupernovaDropdownOption name={name} trackClicks={trackClicks} highlight={OptionHighlight.Warning}>\n                    <span>{translations.name}</span>\n                </SupernovaDropdownOption>\n            </Form>\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default LogoffUser;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\n\nconst PersonalManager: React.VFC<NavItem> = ({\n    external,\n    name,\n    trackClicks,\n    trackElementShown,\n    translations,\n    url,\n    analytics,\n}) => {\n    const isAssigned = useSelector(({ personalManagerMenu }) => personalManagerMenu.isAssigned);\n\n    if (!isAssigned) {\n        return null;\n    }\n\n    return (\n        <SupernovaDropdownOption\n            external={external}\n            name={name}\n            trackClicks={trackClicks}\n            trackElementShown={trackElementShown}\n            url={url}\n            analytics={analytics}\n        >\n            {translations.name}\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default PersonalManager;\n","import FormItem from 'bloko/blocks/form/FormItem';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\nconst TrlKeys = {\n    city: 'personalManager.region.city',\n    mobile: 'personalManager.region.mobile',\n    msk: 'personalManager.region.msk',\n    other: 'personalManager.region.other',\n    regions: 'personalManager.region.regions',\n    spb: 'personalManager.region.spb',\n    zarplata: 'personalManager.region.zarplata',\n};\n\nconst PersonalManagerPhones: TranslatedComponent = ({ trls }) => {\n    const contactPhones = useSelector(({ contactPhones }) => contactPhones);\n    const userType = useSelector(({ userType }) => userType);\n    const vacation = useSelector(({ vacation }) => vacation);\n    const isZarplata = useIsZarplataPlatform();\n\n    if (vacation !== null && !isZarplata) {\n        return null;\n    }\n\n    return (\n        <SupernovaDropdownSection data-qa=\"personal-manager-contacts-container\">\n            {contactPhones.map(({ country, city, number, postfix }, index) => {\n                return (\n                    <div key={index} className=\"supernova-dropdown-static-option\">\n                        {isZarplata && userType === UserType.Anonymous ? (\n                            trls[TrlKeys.zarplata]\n                        ) : (\n                            <Text importance={TextImportance.Secondary}>\n                                {isZarplata ? trls[TrlKeys.zarplata] : trls[TrlKeys[postfix]]}\n                            </Text>\n                        )}\n                        <FormItem />\n                        <Text strong>{`${country} ${city} ${number}`}</Text>\n                    </div>\n                );\n            })}\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default translation(PersonalManagerPhones);\n","// extracted by mini-css-extract-plugin\nexport default {\"supportChatPlate\":\"support-chat-plate--Y7O4Y5gVQBXBAbn72ucI\",\"messengers\":\"messengers--Xbb7GLhQywp7x018zb95\"};","import { FC } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupportChatMessengers from 'lux/components/SupernovaMainMenu/SupportChatMessengers';\nimport SupportChatPlate from 'lux/components/SupportChatPlate';\nimport translation from 'lux/components/translation';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './SupportChatActivator.less';\n\nexport interface SupportChatActivatorProps {\n    close?: () => void;\n}\n\nconst logMessengerClick = (_: string, messenger: string) => {\n    Analytics.sendHHEventButtonClick('menu_support_item', { item: messenger });\n};\n\nconst SupportChatActivator: FC<SupportChatActivatorProps> = ({ close }) => {\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n\n    return (\n        <SupernovaDropdownSection>\n            <div className={styles.supportChatPlate}>\n                <SupportChatPlate fromLabel=\"menu_support\" onClick={close} />\n            </div>\n\n            {topLevelSite !== TopLevelSite.BY && (\n                <div className={styles.messengers}>\n                    <SupportChatMessengers onClick={logMessengerClick} />\n                </div>\n            )}\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default translation(SupportChatActivator);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AxiosError } from 'axios';\nimport { push } from 'connected-react-router';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport FormSpacer from 'bloko/blocks/form/FormSpacer';\nimport Icon, { IconKind, IconScale, IconView, IconColor } from 'bloko/blocks/icon';\n\nimport { EMPLOYER_ACCOUNT_SWITCH_ERROR } from 'lux/components/Notifications/EmployerAccountSwitcher';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport SupernovaDropdownOption, { OptionHighlight } from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\n\ndeclare global {\n    interface FetcherPutApi {\n        '/account/switch': {\n            body: void;\n            response: void;\n            queryParams: void;\n        };\n    }\n}\nconst SwitchAccount: React.FC<NavItem> = ({ name, trackClicks, translations, analytics }) => {\n    const dispatch = useDispatch();\n    const loginUrl = useSelectorNonNullable(({ authUrl }) => authUrl['login-url']);\n\n    const onClickHandler = React.useCallback(() => {\n        fetcher.put('/account/switch')?.then(\n            () => {\n                dispatch(push('/'));\n            },\n            (error: AxiosError) => {\n                const errorCode = error?.response?.status;\n                if (errorCode === 403 && loginUrl) {\n                    dispatch(push(loginUrl));\n                }\n                dispatch(addNotification(EMPLOYER_ACCOUNT_SWITCH_ERROR));\n            }\n        );\n    }, [dispatch, loginUrl]);\n\n    return (\n        <SupernovaDropdownSection>\n            <SupernovaDropdownOption\n                name={name}\n                trackClicks={trackClicks}\n                highlight={OptionHighlight.Primary}\n                onClick={onClickHandler}\n                analytics={analytics}\n            >\n                <div className=\"supernova-switch-account-content\">\n                    {translations.name}\n                    <FormSpacer>\n                        <Icon\n                            view={IconView.Arrow}\n                            scale={IconScale.Small}\n                            kind={IconKind.Right}\n                            initial={IconColor.Blue50}\n                        />\n                    </FormSpacer>\n                </div>\n            </SupernovaDropdownOption>\n        </SupernovaDropdownSection>\n    );\n};\n\nexport default SwitchAccount;\n","import React from 'react';\n\nimport Text from 'bloko/blocks/text';\n\nimport CurrentUserFullName from 'lux/components/SupernovaMainMenu/CurrentUserFullName';\n\nconst UserInfo: React.VFC = () => {\n    return (\n        <div className=\"supernova-dropdown-static-option\">\n            <Text Element=\"span\" strong>\n                <CurrentUserFullName />\n            </Text>\n        </div>\n    );\n};\n\nexport default UserInfo;\n","import { FC, PropsWithChildren } from 'react';\n\nexport enum SupernovaUserNotificationsIconKind {\n    Warning = 'warning',\n    Empty = 'empty',\n    Info = 'info',\n    Mail = 'mail',\n    New = 'new',\n    Question = 'question',\n    Calendar = 'calendar',\n    Success = 'success',\n    ChristmasTree = 'christmas-tree',\n}\n\ninterface SupernovaUserNotificationsIconProps {\n    kind: SupernovaUserNotificationsIconKind;\n}\n\nconst SupernovaUserNotificationsIcon: FC<SupernovaUserNotificationsIconProps & PropsWithChildren> = ({ kind }) => {\n    return <div className={`supernova-notification-icon supernova-notification-icon_${kind}`}></div>;\n};\n\nexport default SupernovaUserNotificationsIcon;\n","import { FC, ReactNode, PropsWithChildren } from 'react';\n\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaUserNotificationsIcon, {\n    SupernovaUserNotificationsIconKind,\n} from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\n\nexport interface NotificationLayoutProps {\n    iconKind?: SupernovaUserNotificationsIconKind;\n    dataQa?: DataQaInvariants;\n    removeComponent?: ReactNode;\n}\n\nconst NotificationLayout: FC<NotificationLayoutProps & PropsWithChildren> = ({\n    children,\n    dataQa,\n    iconKind,\n    removeComponent,\n    ...props\n}) => (\n    <SupernovaDropdownSection notification>\n        <div className=\"supernova-notification\" data-qa={`notification ${dataQa || 'notification_warning'}`} {...props}>\n            <SupernovaUserNotificationsIcon kind={iconKind || SupernovaUserNotificationsIconKind.Warning} />\n            <div className=\"supernova-notification-content\" data-qa=\"notification-content-wrapper\">\n                {children}\n            </div>\n            {removeComponent && (\n                <div className=\"supernova-notification-close\" data-qa=\"notification-close\">\n                    {removeComponent}\n                </div>\n            )}\n        </div>\n    </SupernovaDropdownSection>\n);\n\nexport default NotificationLayout;\n","import { FC, MouseEvent, useContext, useCallback, PropsWithChildren } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Icon, { IconDynamic, IconLink, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\n\nimport SupernovaDropdownContext from 'lux/components/SupernovaMainMenu/SupernovaDropdownContext';\nimport useDeleteUserNotificationById from 'lux/components/SupernovaMainMenu/UserNotifications/useDeleteNotification';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nimport NotificationLayout, {\n    NotificationLayoutProps,\n} from 'lux/components/SupernovaMainMenu/UserNotifications/Notification/Layout';\n\nexport interface UserNotificationProps extends NotificationLayoutProps, ComplexUserNotification {\n    onRemove?: () => void;\n}\n\nconst sortFunc = (arr: string[]) => {\n    const closeButtonIndexes = arr.reduce<number[]>(\n        (result, item, index) => (item.startsWith('notificationClose') ? [...result, index] : result),\n        [-1]\n    );\n\n    const result = [];\n    for (let i = 1; i < closeButtonIndexes.length; i += 1) {\n        result.push(arr[closeButtonIndexes[i]], ...arr.slice(closeButtonIndexes[i - 1] + 1, closeButtonIndexes[i]));\n    }\n\n    result.push(...arr.slice(closeButtonIndexes[closeButtonIndexes.length - 1] + 1));\n\n    return result;\n};\n\nconst Notification: FC<UserNotificationProps & PropsWithChildren> = ({\n    children,\n    dataQa,\n    iconKind,\n    onRemove,\n    ...notification\n}) => {\n    const [isProgressRemove, deleteNotification] = useDeleteUserNotificationById(notification.id);\n    const { elements: dropdownContext, sort } = useContext(SupernovaDropdownContext);\n    sort.current = sortFunc;\n    const updateRef = useCallback(\n        (element: HTMLElement) => (dropdownContext[`notificationClose${notification.id}`] = element),\n        [dropdownContext, notification.id]\n    );\n\n    return (\n        <NotificationLayout\n            dataQa={dataQa}\n            iconKind={iconKind}\n            data-notification-id={notification.id}\n            data-notification-template-key={notification.templateKey}\n            removeComponent={\n                <>\n                    {' '}\n                    {isProgressRemove ? (\n                        <Loading scale={LoadingScale.Small} />\n                    ) : (\n                        <IconDynamic>\n                            <IconLink\n                                onClick={async (event: MouseEvent) => {\n                                    event.stopPropagation();\n                                    onRemove?.();\n\n                                    if (await deleteNotification()) {\n                                        const buttonName = notification.templateKey\n                                            .split('.')\n                                            .join('_')\n                                            .concat('_delete');\n                                        Analytics.sendHHEventButtonClick(buttonName);\n                                    }\n                                }}\n                                innerRef={updateRef}\n                            >\n                                <Icon\n                                    view={IconView.Trash}\n                                    initial={IconColor.Gray50}\n                                    highlighted={IconColor.Blue60}\n                                    scale={IconScale.Small}\n                                />\n                            </IconLink>\n                        </IconDynamic>\n                    )}\n                </>\n            }\n        >\n            {children}\n        </NotificationLayout>\n    );\n};\n\nexport default Notification;\n","import { FC, PropsWithChildren } from 'react';\n\nconst NotificationSpacer: FC<PropsWithChildren> = ({ children }) => {\n    return <div className=\"supernova-notification-content-spacer\">{children}</div>;\n};\n\nexport default NotificationSpacer;\n","import Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport routePaths from 'lux/modules/routePaths';\n\nconst TrlKeys = {\n    first: 'applicant.callOnVacancy.notification.text1',\n    second: 'applicant.callOnVacancy.notification.text2',\n    link: 'applicant.callOnVacancy.notification.link',\n};\n\nconst UserNotificationsApplicantCalling: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification iconKind={SupernovaUserNotificationsIconKind.Empty} {...notification}>\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': <Text strong>{notification.params.vacancyName}</Text>,\n            })}\n            <NotificationSpacer>{trls[TrlKeys.second]}</NotificationSpacer>\n            <NotificationLink to={routePaths.applicantNegotiations}>{trls[TrlKeys.link]}</NotificationLink>\n        </NotificationSpacer>\n    </Notification>\n);\n\nexport default translation(UserNotificationsApplicantCalling);\n","export enum DataQaInvariants {\n    Empty = 'notification_empty',\n    Info = 'notification_info',\n    Success = 'notification_success',\n    CareerConsultPaid = 'notification_career_consult_paid',\n    CareerConsultWaitingForCall = 'notification_career_consult_waiting_for_call',\n    CompleteResumeWorkDone = 'notification_complete_resume_work_done',\n    CompleteResumeWaitingForCall = 'notification_complete_resume_waiting_for_call',\n    EmployerReviewCanEnable = 'notification_employer_reviews_can_enable',\n    EmployerReviewFeedbackCreated = 'notification_employer_reviews_feedback_created',\n    InterviewPracticePaid = 'notification_interview_practice_paid',\n    InterviewPracticeWaitingForCall = 'notification_interview_practice_waiting_for_call',\n    ResumeTargetEmployerDiscount = 'notification_resume_targetEmployer_discount',\n    ResumeRenewalExpired = 'notification_resume_renewal_expired',\n    ResumeRenewalSoonExpires = 'notification_resume_renewal_soon_expires',\n    Question = 'notification_question',\n    Mail = 'notification_mail',\n    ChristmasTree = 'notification_christmas-tree',\n}\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    content: 'applicant.notification.specify.work.address.title',\n    link: 'applicant.notification.specify.work.address.link',\n};\n\nconst ApplicantFindJob: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification iconKind={SupernovaUserNotificationsIconKind.Info} dataQa={DataQaInvariants.Info} {...notification}>\n        <NotificationSpacer>{trls[TrlKeys.content]}</NotificationSpacer>\n        <NotificationLink to=\"/applicant/settings#address\" target=\"_blank\" data-qa=\"notification-link\">\n            {trls[TrlKeys.link]}\n        </NotificationLink>\n    </Notification>\n);\n\nexport default translation(ApplicantFindJob);\n","import NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { DisableReason } from 'lux/models/autoInvite';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    header: 'employer.candidates.autoinvite.notification.header',\n    vacancy: 'employer.candidates.autoinvite.notification.vacancy',\n    disableReason: {\n        noServices: 'employer.candidates.autoinvite.notification.disableReason.noServices',\n        noQuotas: 'employer.candidates.autoinvite.notification.disableReason.noQuotas',\n        finished: 'employer.candidates.autoinvite.notification.disableReason.finished',\n    },\n};\nconst AutoInviteDisable: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const getDisableReasonTrl = (disableReason?: DisableReason) => {\n        if (disableReason === DisableReason.NoAvailableService) {\n            return trls[TrlKeys.disableReason.noServices];\n        } else if (disableReason === DisableReason.QuotaExceeded) {\n            return trls[TrlKeys.disableReason.noQuotas];\n        } else if (disableReason === DisableReason.Finished) {\n            return trls[TrlKeys.disableReason.finished];\n        }\n        return null;\n    };\n\n    return (\n        <Notification iconKind={SupernovaUserNotificationsIconKind.Warning} {...notification}>\n            <NotificationHeading>{trls[TrlKeys.header]}</NotificationHeading>\n            <NotificationSpacer>\n                {getDisableReasonTrl(notification.params.disableReason as DisableReason)}\n            </NotificationSpacer>\n            {trls[TrlKeys.vacancy]}\n            {NON_BREAKING_SPACE}\n            <NotificationLink to={`/employer/vacancyresponses/autoinvite?vacancyId=${notification.params.vacancyId}`}>\n                {notification.params.vacancyTitle}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(AutoInviteDisable);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport { formatFromHyphenDateString } from 'Modules/formatDate';\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.BillingCartInsufficientFunds]: {\n        first: 'notification.messages.billing.cart.insufficient.funds.message.part1',\n        second: 'notification.messages.billing.cart.insufficient.funds.message.part2',\n        link: 'notification.messages.billing.cart.insufficient.funds.link.cart',\n    },\n    [ComplexUserNotificationsTemplateKey.BillingCartIrrelevantStatus]: {\n        first: 'notification.messages.billing.cart.irrelevant.status.message.part1',\n        second: 'notification.messages.billing.cart.irrelevant.status.message.part2',\n        link: 'notification.messages.billing.cart.irrelevant.status.link.cart',\n    },\n    [ComplexUserNotificationsTemplateKey.BillingCartError]: {\n        first: 'notification.messages.billing.cart.system.error.message.part1',\n        second: 'notification.messages.billing.cart.system.error.message.part2',\n        link: 'notification.messages.billing.cart.system.error.link.cart',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst BillingCardsToCardId: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Info}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationSpacer>\n                {trls[TrlKeys[key].first]}{' '}\n                <NotificationLink\n                    to={`/employer/carts?cartId=${notification.params.cart_id}&code=${key}`}\n                    target=\"_blank\"\n                    data-qa=\"notification-link\"\n                >\n                    <span suppressHydrationWarning>\n                        {format(trls[TrlKeys[key].link], {\n                            '{0}': formatFromHyphenDateString(notification.params.purchase_date),\n                        })}\n                    </span>\n                </NotificationLink>{' '}\n                {trls[TrlKeys[key].second]}\n            </NotificationSpacer>\n        </Notification>\n    );\n};\n\nexport default translation(BillingCardsToCardId);\n","import { FC, PropsWithChildren } from 'react';\n\nimport BillingCartActivationNotification from 'lux/components/BillingCartActivationNotification';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst BillingCartActivation: FC<ComplexUserNotification & PropsWithChildren> = (props) => {\n    return (\n        <Notification {...props}>\n            <BillingCartActivationNotification {...props} />\n        </Notification>\n    );\n};\n\nexport default BillingCartActivation;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport { formatFromHyphenDateString } from 'Modules/formatDate';\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.BillingCartActivated]: {\n        first: 'notification.messages.billing.cart.activated.message.part1',\n        second: 'notification.messages.billing.cart.activated.message.part2',\n        upgrade: 'notification.messages.billing.cart.activated.UPGRADE.message.part2',\n        restore: 'notification.messages.billing.cart.activated.RESTORE.message.part2',\n        link: 'notification.messages.billing.cart.activated.link.order',\n    },\n    [ComplexUserNotificationsTemplateKey.BillingCartActivationReady]: {\n        first: 'notification.messages.billing.cart.activation.ready.message.part1',\n        second: 'notification.messages.billing.cart.activation.ready.message.part2',\n        link: 'notification.messages.billing.cart.activation.ready.link.cart',\n        linkActivation: 'notification.messages.billing.cart.activation.ready.link.activation',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst BillingInvoiceFinish: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    const showUpgradeOrRestoreContent = notification.params.UPGRADE || notification.params.RESTORE;\n    let upgradeOrRestoreContent = null;\n    const linkURL = `/employer/invoice/finish?cartId=${notification.params.cart_id}&code=${key}`;\n\n    if (showUpgradeOrRestoreContent && key === ComplexUserNotificationsTemplateKey.BillingCartActivated) {\n        upgradeOrRestoreContent = (\n            <>\n                {notification.params.UPGRADE ? trls[TrlKeys[key].upgrade] : trls[TrlKeys[key].restore]}\n                <NotificationLink to=\"{param[@key = 'UPGRADE' or @key = 'RESTORE']/@value}\">\n                    {notification.params.vacancy_name}\n                </NotificationLink>\n            </>\n        );\n    }\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Info}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationSpacer>\n                {trls[TrlKeys[key].first]}{' '}\n                <NotificationLink to={linkURL}>\n                    <span suppressHydrationWarning>\n                        {format(trls[TrlKeys[key].link], {\n                            '{0}': formatFromHyphenDateString(notification.params.purchase_date),\n                        })}\n                    </span>\n                </NotificationLink>{' '}\n                {showUpgradeOrRestoreContent ? upgradeOrRestoreContent : trls[TrlKeys[key].second]}{' '}\n                {key === ComplexUserNotificationsTemplateKey.BillingCartActivationReady ? (\n                    <NotificationLink to={linkURL}>{trls[TrlKeys[key].linkActivation]}</NotificationLink>\n                ) : null}\n            </NotificationSpacer>\n        </Notification>\n    );\n};\n\nexport default translation(BillingInvoiceFinish);\n","import { FC, PropsWithChildren } from 'react';\n\nimport BrandingMakeupNotification from 'lux/components/BrandingMakeupNotification';\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst BrandingMakeup: FC<ComplexUserNotification & PropsWithChildren> = (props) => {\n    return (\n        <Notification iconKind={SupernovaUserNotificationsIconKind.Info} dataQa={DataQaInvariants.Info} {...props}>\n            <BrandingMakeupNotification LinkComponent={NotificationLink} TextComponent={NotificationText} {...props} />\n        </Notification>\n    );\n};\n\nexport default BrandingMakeup;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    content: 'vacancy.call.tracking.tele2owners.warning.notification',\n    link: 'vacancy.call.tracking.tele2owners.warning.link',\n};\n\nconst CallTracking: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification {...notification}>\n        <NotificationSpacer>\n            <NotificationSpacer>{trls[TrlKeys.content]}</NotificationSpacer>\n            <NotificationLink to=\"/article/28992\">{trls[TrlKeys.link]}</NotificationLink>\n        </NotificationSpacer>\n    </Notification>\n);\n\nexport default translation(CallTracking);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'supernova.notification.career.consult.paid',\n    second: 'supernova.notification.career.consult.paid.service.link',\n    link: 'supernova.notification.career.consult.paid.fill.link',\n};\n\nconst CareerConsultPaid: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification dataQa={DataQaInvariants.CareerConsultPaid} {...notification}>\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': <NotificationLink to=\"/career_consult\">{trls[TrlKeys.second]}</NotificationLink>,\n            })}\n        </NotificationSpacer>\n        <NotificationLink\n            to={`/applicant-services/complete_resume_consult_only/order/${notification.params.orderCode || ''}`}\n        >\n            {trls[TrlKeys.link]}\n        </NotificationLink>\n    </Notification>\n);\n\nexport default translation(CareerConsultPaid);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'supernova.notification.career.consult.waiting_for_call',\n    second: 'supernova.notification.career.consult.waiting_for_call.service.link',\n    link: 'supernova.notification.career.consult.waiting_for_call.link',\n};\n\nconst CareerConsultWaitingForCall: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification\n        dataQa={DataQaInvariants.CareerConsultWaitingForCall}\n        iconKind={SupernovaUserNotificationsIconKind.Info}\n        {...notification}\n    >\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': notification.params.callTimeDate,\n                '{1}': notification.params.callTimeBegin,\n                '{2}': notification.params.callTimeEnd,\n                '{3}': <NotificationLink to=\"/career_consult\">{trls[TrlKeys.second]}</NotificationLink>,\n            })}\n        </NotificationSpacer>\n        <NotificationLink\n            to={`/applicant-services/complete_resume_consult_only/order/${notification.params.orderCode || ''}`}\n        >\n            {trls[TrlKeys.link]}\n        </NotificationLink>\n    </Notification>\n);\n\nexport default translation(CareerConsultWaitingForCall);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.CompleteResumeWorkDone]: {\n        first: 'supernova.notification.complete.resume.work_done',\n        link: 'supernova.notification.complete.resume.work_done.link',\n    },\n    [ComplexUserNotificationsTemplateKey.CompleteResumePaid]: {\n        first: 'supernova.notification.complete.resume.paid',\n        link: 'supernova.notification.complete.resume.service.link',\n        lastLink: 'supernova.notification.complete.resume.paid.fill.link',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst LinkMap = {\n    [ComplexUserNotificationsTemplateKey.CompleteResumeWorkDone]: '/applicant/resumes',\n    [ComplexUserNotificationsTemplateKey.CompleteResumePaid]: '/expert_resume',\n};\n\nconst CompleteResume: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Mail}\n            dataQa={\n                key === ComplexUserNotificationsTemplateKey.CompleteResumeWorkDone\n                    ? DataQaInvariants.CompleteResumeWorkDone\n                    : undefined\n            }\n            {...notification}\n        >\n            <NotificationSpacer>\n                {formatToReactComponent(trls[TrlKeys[key].first], {\n                    '{0}': <NotificationLink to={LinkMap[key]}>{trls[TrlKeys[key].link]}</NotificationLink>,\n                })}\n            </NotificationSpacer>\n            {key === ComplexUserNotificationsTemplateKey.CompleteResumePaid && (\n                <NotificationLink\n                    to={`/applicant-services/complete_resume/order/${notification.params.orderCode || ''}`}\n                >\n                    {trls[TrlKeys[key].lastLink]}\n                </NotificationLink>\n            )}\n        </Notification>\n    );\n};\n\nexport default translation(CompleteResume);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'supernova.notification.complete.resume.waiting_for_call',\n    serviceLink: 'supernova.notification.complete.resume.service.link',\n};\n\nconst CompleteResumeWaitingForCall: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification\n        dataQa={DataQaInvariants.CompleteResumeWaitingForCall}\n        iconKind={SupernovaUserNotificationsIconKind.Info}\n        {...notification}\n    >\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': notification.params.callTimeDate,\n                '{1}': notification.params.callTimeBegin,\n                '{2}': notification.params.callTimeEnd,\n                '{3}': <NotificationLink to=\"/expert_resume/\">{trls[TrlKeys.serviceLink]}</NotificationLink>,\n            })}\n        </NotificationSpacer>\n        <NotificationLink to={`/applicant-services/complete_resume/order/${notification.params.orderCode || ''}`}>\n            {trls[TrlKeys.serviceLink]}\n        </NotificationLink>\n    </Notification>\n);\n\nexport default translation(CompleteResumeWaitingForCall);\n","import { Fragment, useEffect, useRef } from 'react';\n\nimport userStatusSelectOpenButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_open_button_click';\nimport userStatusSelectOpenElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/user_status_select_open_element_shown';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport {\n    ComplexUserNotification,\n    ComplexUserNotificationsTemplateKey,\n    UserNotificationsParams,\n} from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.PricesIncrease]: {\n        content: 'supernova.notification.prices.increase',\n        link: 'supernova.notification.prices.increase.more',\n    },\n    [ComplexUserNotificationsTemplateKey.ResumeBlocked]: {\n        content: 'supernova.notification.resume.blocked.description',\n        link: 'supernova.notification.resume.blocked.button',\n    },\n    [ComplexUserNotificationsTemplateKey.ResumeTargetEmployerDiscount]: {\n        content: 'supernova.notification.resumeservices.wantwork.discount.text',\n        link: 'supernova.notification.resumeservices.wantwork.discount.link',\n    },\n    [ComplexUserNotificationsTemplateKey.UserSupportNewEvents]: {\n        content: 'supernova.notification.supportHHRUMessage.1',\n        link: 'supernova.notification.supportHHRUMessage.2',\n    },\n    [ComplexUserNotificationsTemplateKey.VideoCall]: {\n        content: 'video.call.info.supernova.notification',\n        link: 'video.call.info.supernova.notification.link',\n    },\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: {\n        content: 'supernova.notification.applicant.job.search.status',\n        link: 'supernova.notification.applicant.job.search.status.link',\n    },\n    [ComplexUserNotificationsTemplateKey.EmployerYearResult]: {\n        content: 'supernova.notification.employer.year.results.text',\n        link: 'supernova.notification.employer.year.results.link',\n    },\n    [ComplexUserNotificationsTemplateKey.AutoSearchVacancies]: {\n        content: 'supernova.notification.new.vacancies.in.autosearch.1',\n        link: 'supernova.notification.new.vacancies.in.autosearch.2',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\ntype LinkUrlMap = Record<TemplateKeys, (params: UserNotificationsParams) => string>;\n\nconst LINK_URL_MAP: LinkUrlMap = {\n    [ComplexUserNotificationsTemplateKey.PricesIncrease]: () => '/article/25341',\n    [ComplexUserNotificationsTemplateKey.ResumeBlocked]: (params) =>\n        `/applicant/resumes/completion?resume=${params.resumeHash}`,\n    [ComplexUserNotificationsTemplateKey.ResumeTargetEmployerDiscount]: () => '/employers_list',\n    [ComplexUserNotificationsTemplateKey.UserSupportNewEvents]: () => 'https://support.hh.ru',\n    [ComplexUserNotificationsTemplateKey.VideoCall]: () => '/article/26862',\n    [ComplexUserNotificationsTemplateKey.EmployerYearResult]: () => '/article/stats2022',\n    [ComplexUserNotificationsTemplateKey.AutoSearchVacancies]: () => '/applicant/autosearch',\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: () =>\n        '/applicant/resumes?set_job_search_status=true',\n};\n\ntype LinkClickMap = Partial<Record<TemplateKeys, () => void>>;\n\nconst LINK_CLICK_MAP: LinkClickMap = {\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: () => {\n        userStatusSelectOpenButtonClick();\n    },\n};\n\ntype LinkShownMap = Partial<Record<TemplateKeys, (element: HTMLAnchorElement) => void>>;\n\nconst LINK_SHOWN_MAP: LinkShownMap = {\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: (element) => {\n        userStatusSelectOpenElementShown(element);\n    },\n};\n\nconst DATA_QA_MAP: Record<string, DataQaInvariants> = {\n    [ComplexUserNotificationsTemplateKey.ResumeTargetEmployerDiscount]: DataQaInvariants.ResumeTargetEmployerDiscount,\n    [ComplexUserNotificationsTemplateKey.UserSupportNewEvents]: DataQaInvariants.Mail,\n    [ComplexUserNotificationsTemplateKey.VideoCall]: DataQaInvariants.Info,\n    [ComplexUserNotificationsTemplateKey.EmployerYearResult]: DataQaInvariants.ChristmasTree,\n    [ComplexUserNotificationsTemplateKey.AutoSearchVacancies]: DataQaInvariants.Info,\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: DataQaInvariants.Info,\n};\n\nconst ICON_KIND_MAP: Record<string, SupernovaUserNotificationsIconKind> = {\n    [ComplexUserNotificationsTemplateKey.ResumeTargetEmployerDiscount]: SupernovaUserNotificationsIconKind.Mail,\n    [ComplexUserNotificationsTemplateKey.UserSupportNewEvents]: SupernovaUserNotificationsIconKind.Mail,\n    [ComplexUserNotificationsTemplateKey.VideoCall]: SupernovaUserNotificationsIconKind.New,\n    [ComplexUserNotificationsTemplateKey.EmployerYearResult]: SupernovaUserNotificationsIconKind.ChristmasTree,\n    [ComplexUserNotificationsTemplateKey.AutoSearchVacancies]: SupernovaUserNotificationsIconKind.Info,\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: SupernovaUserNotificationsIconKind.Info,\n};\n\nconst DefaultInvariant: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    const Wrapper = key === ComplexUserNotificationsTemplateKey.AutoSearchVacancies ? Fragment : NotificationSpacer;\n    const linkRef = useRef(null);\n\n    useEffect(() => {\n        if (linkRef.current) {\n            LINK_SHOWN_MAP[key]?.(linkRef.current);\n        }\n    }, [key]);\n\n    return (\n        <Notification iconKind={ICON_KIND_MAP[key]} dataQa={DATA_QA_MAP[key]} {...notification}>\n            <Wrapper>\n                <span data-qa=\"notification-content\">{trls[TrlKeys[key].content]}</span>\n            </Wrapper>\n            <NotificationLink to={LINK_URL_MAP[key](notification.params)} onClick={LINK_CLICK_MAP[key]} ref={linkRef}>\n                {trls[TrlKeys[key].link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(DefaultInvariant);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'supernova.notification.employer.2fa.enabled.soon',\n    link: 'supernova.notification.employer.2fa.enabled.soon.link',\n};\n\nconst Employer2fa: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n\n    return (\n        <Notification {...notification}>\n            <NotificationSpacer>\n                {formatToReactComponent(trls[TrlKeys.content], {\n                    '{0}': topLevelSite,\n                })}\n            </NotificationSpacer>\n            <NotificationLink to=\"/article/27435\" target=\"_blank\">\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(Employer2fa);\n","import Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    content: 'supernova.notification.employer.change.email.by.manager.content',\n    link: 'supernova.notification.employer.change.email.by.manager.link',\n};\n\nconst EmployerChangeEmailByManager: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    return (\n        <Notification {...notification}>\n            <NotificationSpacer>\n                {formatToReactComponent(trls[TrlKeys.content], {\n                    '{0}': (\n                        <Text Element=\"span\" strong>\n                            {notification.params.employerManagerName}\n                        </Text>\n                    ),\n                })}\n            </NotificationSpacer>\n            <NotificationLink\n                to={`/employer/settings?employerManagerId=${notification.params.employer_manager_id}`}\n                target=\"_blank\"\n            >\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(EmployerChangeEmailByManager);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    content: 'supernova.notification.employer.change.email.link.remind.content',\n};\n\nconst EmployerChangeEmailReminder: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    return <Notification {...notification}>{trls[TrlKeys.content]}</Notification>;\n};\n\nexport default translation(EmployerChangeEmailReminder);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.FillEmployerPageConstructor]: {\n        content: 'branding.reminder.fill.employer.constructor.notification',\n        link: 'branding.reminder.fill.employer.constructor.link',\n    },\n    [ComplexUserNotificationsTemplateKey.FillEmployerVacancyPageConstructor]: {\n        content: 'branding.reminder.fill.vacancy.constructor.notification',\n        link: 'branding.reminder.fill.vacancy.constructor.link',\n    },\n    [ComplexUserNotificationsTemplateKey.BuyVacancyPageConstructor]: {\n        content: 'branding.suggestion.buy.vacancy.constructor.notification.part_1',\n        contentSecond: 'branding.suggestion.buy.vacancy.constructor.notification.part_2',\n        contentThird: 'branding.suggestion.buy.vacancy.constructor.notification.part_3',\n        link: 'branding.suggestion.buy.vacancy.constructor.notification.link',\n    },\n    [ComplexUserNotificationsTemplateKey.BuyEmployerPageConstructor]: {\n        content: 'branding.suggestion.buy.employer.page.constructor.notification.part_1',\n        contentSecond: 'branding.suggestion.buy.employer.page.constructor.notification.part_2',\n        contentThird: 'branding.suggestion.buy.employer.page.constructor.notification.part_3',\n        link: 'branding.suggestion.buy.employer.page.constructor.notification.link',\n    },\n};\n\nconst linkMap = {\n    [ComplexUserNotificationsTemplateKey.FillEmployerPageConstructor]: '/employer/constructor',\n    [ComplexUserNotificationsTemplateKey.FillEmployerVacancyPageConstructor]: '/employer/vacancyconstructor',\n    [ComplexUserNotificationsTemplateKey.BuyVacancyPageConstructor]:\n        'https://branding.hh.ru/vacancy_constructor?utm_source=hh.ru&utm_medium=referral&utm_campaign=bell_prolongation',\n    [ComplexUserNotificationsTemplateKey.BuyEmployerPageConstructor]:\n        'https://branding.hh.ru/employer_constructor?utm_source=hh.ru&utm_medium=referral&utm_campaign=bell_prolongation',\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst EmployerConstructor: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Info}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationText>\n                {trls[TrlKeys[key].content]}\n                {key === ComplexUserNotificationsTemplateKey.BuyVacancyPageConstructor ||\n                key === ComplexUserNotificationsTemplateKey.BuyEmployerPageConstructor ? (\n                    <>\n                        <strong>{trls[TrlKeys[key].contentSecond]}</strong>\n                        {trls[TrlKeys[key].contentThird]}\n                    </>\n                ) : null}\n            </NotificationText>\n            <NotificationLink to={linkMap[key]}>{trls[TrlKeys[key].link]}</NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(EmployerConstructor);\n","import { useDispatch } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { LoyaltySurveyType, runLoyaltySurvey } from 'lux/models/loyaltySurvey';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [LoyaltySurveyType.Adv]: {\n        header: 'notification.employer.loyaltySurvey.ADV.header',\n        content: 'notification.employer.loyaltySurvey.ADV.content',\n    },\n    [LoyaltySurveyType.Branding]: {\n        header: 'notification.employer.loyaltySurvey.BRANDING.header',\n        content: 'notification.employer.loyaltySurvey.BRANDING.content',\n    },\n    [LoyaltySurveyType.Clickme]: {\n        header: 'notification.employer.loyaltySurvey.CLICKME.header',\n        content: 'notification.employer.loyaltySurvey.CLICKME.content',\n    },\n    [LoyaltySurveyType.MainServices]: {\n        header: 'notification.employer.loyaltySurvey.MAIN_SERVICES.header.personal.manager',\n        content: 'notification.employer.loyaltySurvey.MAIN_SERVICES.content',\n    },\n    link: 'notification.employer.loyaltySurvey.button',\n};\n\nconst EmployerLoyaltySurvey: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const { type, showNotification } = useSelector(({ loyaltySurvey }) => loyaltySurvey);\n    const manager = useSelector(({ employerManager }) => employerManager);\n    const dispatch = useDispatch();\n\n    if (showNotification || !type) {\n        return null;\n    }\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Question}\n            dataQa={DataQaInvariants.Question}\n            onRemove={() => {\n                Analytics.sendHHEventButtonClick('loyalty_survey_cancel', { from: 'notification' });\n            }}\n            {...notification}\n        >\n            <NotificationSpacer>\n                {format(trls[TrlKeys[type].header], { '{0}': manager?.firstName || '' })}\n            </NotificationSpacer>\n            {type !== LoyaltySurveyType.MainServices && (\n                <NotificationSpacer>{trls[TrlKeys[type].content]}</NotificationSpacer>\n            )}\n            <BlokoLink\n                data-qa=\"notification-link\"\n                appearance={LinkAppearance.Pseudo}\n                onClick={() => {\n                    Analytics.sendHHEventButtonClick('loyalty_survey_start', { from: 'notification' });\n                    dispatch(runLoyaltySurvey(true));\n                }}\n            >\n                {trls[TrlKeys.link]}\n            </BlokoLink>\n        </Notification>\n    );\n};\n\nexport default translation(EmployerLoyaltySurvey);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    content: 'employer.reviews.notify.employer.can.enable.supernova.notification',\n    link: 'employer.reviews.notify.employer.can.enable.supernova.notification.link',\n};\n\nconst EmployerReviewCanEnable: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification\n        iconKind={SupernovaUserNotificationsIconKind.Info}\n        dataQa={DataQaInvariants.EmployerReviewCanEnable}\n        {...notification}\n    >\n        <NotificationText multiline>{trls[TrlKeys.content]}</NotificationText>\n        <NotificationLink to=\"/employer/reviews-settings\">{trls[TrlKeys.link]}</NotificationLink>\n    </Notification>\n);\n\nexport default translation(EmployerReviewCanEnable);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { LEFT_DOUBLE_QUOTE, RIGHT_DOUBLE_QUOTE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    content: 'employer.reviews.notify.feedback.created.supernova.notification',\n    link: 'employer.reviews.notify.feedback.created.supernova.notification.link',\n};\n\nconst EmployerReviewFeedbackCreated: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification\n        iconKind={SupernovaUserNotificationsIconKind.Info}\n        dataQa={DataQaInvariants.EmployerReviewFeedbackCreated}\n        {...notification}\n    >\n        <NotificationText multiline>\n            {trls[TrlKeys.content]} {LEFT_DOUBLE_QUOTE}\n            {notification.params.companyName}\n            {RIGHT_DOUBLE_QUOTE}\n        </NotificationText>\n        <NotificationLink to={`/employer_reviews/mine?reviewId=${notification.params.employerReviewId}`}>\n            {trls[TrlKeys.link]}\n        </NotificationLink>\n    </Notification>\n);\n\nexport default translation(EmployerReviewFeedbackCreated);\n","import Analytics from '@hh.ru/analytics-js';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: {\n        title: 'hhrating.registration.invitation.notification.title',\n        description: 'hhrating.registration.invitation.notification.description',\n        link: 'hhrating.registration.invitation.notification.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: {\n        title: 'hhrating.vote.invitation.notification.title',\n        description: 'hhrating.vote.invitation.notification.description',\n        link: 'hhrating.vote.invitation.notification.link',\n    },\n};\n\nconst notificationContent = {\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: {\n        trlKeys: TrlKeys[ComplexUserNotificationsTemplateKey.HHRatingRegistration],\n        link: '/shards/notifications/view_registration_hhrating',\n        analyticsName: 'hhrating_registration_invitation',\n    },\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: {\n        trlKeys: TrlKeys[ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation],\n        link: '/shards/notifications/view_vote_hhrating',\n        analyticsName: 'hhrating_vote_invitation',\n    },\n};\n\nconst sendClickAnalytics = (eventName: string) => {\n    // Internal analytics is sent from bff\n    Analytics.sendEvent(eventName, 'view', 'supernova');\n};\n\nconst HHRating: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const { trlKeys, link, analyticsName } =\n        notificationContent[notification.templateKey as keyof typeof notificationContent];\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.New}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationSpacer>\n                <p>{trls[trlKeys.title]}</p>\n                <p>{trls[trlKeys.description]}</p>\n            </NotificationSpacer>\n            <NotificationLink\n                target=\"_blank\"\n                to={`${link}?notification_medium=supernova`}\n                onClick={() => {\n                    sendClickAnalytics(analyticsName);\n                }}\n            >\n                {trls[trlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(HHRating);\n","// tempexp_26167_file\nimport { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { analyticsName, link } from 'lux/modules/notifications/HRElkaSpecial';\n\nconst TrlKeys = {\n    description: 'marketing.special.hr.elka.notification.description',\n    link: 'marketing.special.hr.elka.notification.link',\n};\n\nconst HRElkaSpecial: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const sendAnalytics = useRef<() => void>(() => {\n        Analytics.sendHHEventButtonClick(`${analyticsName}_link_supernova`);\n    });\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.ChristmasTree}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationSpacer>\n                <p>{trls[TrlKeys.description]}</p>\n            </NotificationSpacer>\n            <NotificationLink target=\"_blank\" to={link} onClick={sendAnalytics.current}>\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(HRElkaSpecial);\n","import Analytics from '@hh.ru/analytics-js';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\nimport { analyticsNameMap, linkMap } from 'lux/modules/notifications/HRSpace';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]: {\n        description: 'hrspace.notification.applicant.description',\n        link: 'hrspace.notification.applicant.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]: {\n        description: 'hrspace.notification.employer.description',\n        link: 'hrspace.notification.employer.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]: {\n        description: 'hrspace.notification.it_employer.description',\n        link: 'hrspace.notification.it_employer.link',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst HRSpace: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n\n    return (\n        <Notification\n            iconKind={SupernovaUserNotificationsIconKind.Info}\n            dataQa={DataQaInvariants.Info}\n            {...notification}\n        >\n            <NotificationSpacer>\n                <p>{trls[TrlKeys[key].description]}</p>\n            </NotificationSpacer>\n            <NotificationLink\n                target=\"_blank\"\n                to={linkMap[key]}\n                onClick={() => {\n                    Analytics.sendHHEventButtonClick(`${analyticsNameMap[key]}_link_supernova`);\n                    Analytics.sendEvent(analyticsNameMap[key], 'view', 'supernova');\n                }}\n            >\n                {trls[TrlKeys[key].link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(HRSpace);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'supernova.notification.interview.practice.paid',\n    second: 'supernova.notification.interview.practice.paid.service.link',\n    link: 'supernova.notification.interview.practice.paid.fill.link',\n};\n\nconst InterviewPractice: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification dataQa={DataQaInvariants.InterviewPracticePaid} {...notification}>\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': <NotificationLink to=\"/interview_practice\">{trls[TrlKeys.second]}</NotificationLink>,\n            })}\n            <NotificationLink\n                to={`/applicant-services/complete_resume_interview_practice/order/${\n                    notification.params.orderCode || ''\n                }`}\n            >\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </NotificationSpacer>\n    </Notification>\n);\n\nexport default translation(InterviewPractice);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'supernova.notification.interview.practice.waiting_for_call',\n    link: 'supernova.notification.interview.practice.waiting_for_call.link',\n};\n\nconst InterviewPracticeWaitingForCall: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification\n        dataQa={DataQaInvariants.InterviewPracticeWaitingForCall}\n        iconKind={SupernovaUserNotificationsIconKind.Info}\n        {...notification}\n    >\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.first], {\n                '{0}': notification.params.callTimeDate,\n                '{1}': notification.params.callTimeBegin,\n                '{2}': notification.params.callTimeEnd,\n            })}\n            <NotificationLink\n                to={`/applicant-services/complete_resume_interview_practice/order/${\n                    notification.params.orderCode || ''\n                }`}\n            >\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </NotificationSpacer>\n    </Notification>\n);\n\nexport default translation(InterviewPracticeWaitingForCall);\n","import { MouseEventHandler } from 'react';\n\nimport { useChatik } from '@hh.ru/chatik-integration';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    title: 'resumeCreationScenario.notification.title',\n    text: 'resumeCreationScenario.notification.text',\n    button: 'resumeCreationScenario.notification.button',\n};\n\nconst UserNotificationsKingdomOfVacancy: TranslatedComponent<ComplexUserNotification> = ({\n    trls,\n    close,\n    ...notification\n}) => {\n    const { openChatik } = useChatik();\n\n    const onClick: MouseEventHandler<HTMLAnchorElement> = (ev) => {\n        ev.preventDefault();\n        close?.();\n        // @ts-expect-error экспериментайльный алиас не поддержан на уровне типов\n        openChatik({ view: 'widget', chatId: 'kingdom_of_vacancy' });\n    };\n\n    return (\n        <Notification iconKind={SupernovaUserNotificationsIconKind.Info} {...notification}>\n            <NotificationSpacer>\n                <NotificationSpacer>\n                    {trls[TrlKeys.title]} {trls[TrlKeys.text]}\n                </NotificationSpacer>\n                <NotificationLink to=\"\" onClick={onClick}>\n                    {trls[TrlKeys.button]}\n                </NotificationLink>\n            </NotificationSpacer>\n        </Notification>\n    );\n};\n\nexport default translation(UserNotificationsKingdomOfVacancy);\n","import formatDate from 'date-fns/format';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    content: 'negotiation.interview',\n    inTime: 'negotiation.interview.inTime',\n    link: 'negotiation.interview.in',\n};\n\nconst NegotiationInterview: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => (\n    <Notification iconKind={SupernovaUserNotificationsIconKind.Calendar} {...notification}>\n        <NotificationSpacer>\n            {formatToReactComponent(trls[TrlKeys.content], {\n                '{0}': (\n                    <>\n                        {notification.params.closestDay}\n                        {notification.params.scheduledDate} {trls[TrlKeys.inTime]}\n                        {NON_BREAKING_SPACE}\n                        {formatDate(new Date(notification.params.scheduledTimeLocal), 'HH:mm')}\n                    </>\n                ),\n                '{1}': (\n                    <NotificationLink to={`/applicant/negotiations/item?topicId=${notification.params.topic_id}`}>\n                        {trls[TrlKeys.link]}\n                        {NON_BREAKING_SPACE}\n                        {notification.params.companyName}\n                    </NotificationLink>\n                ),\n            })}\n        </NotificationSpacer>\n    </Notification>\n);\n\nexport default translation(NegotiationInterview);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    expired: 'supernova.notification.resume.renewal.expired',\n    content: {\n        RESUME_RENEWAL: 'supernova.notification.resume.renewal.RESUME_RENEWAL',\n        RESUME_MARK: 'supernova.notification.resume.renewal.RESUME_MARK',\n    },\n    link: 'supernova.notification.resume.renewal.link',\n};\n\nconst ResumeRenewalExpired: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    return (\n        <Notification dataQa={DataQaInvariants.ResumeRenewalExpired} {...notification}>\n            <NotificationSpacer>\n                {trls[TrlKeys.expired]}{' '}\n                {trls[TrlKeys.content[notification.params.serviceType as 'RESUME_RENEWAL' | 'RESUME_MARK']]}\n            </NotificationSpacer>\n            <NotificationLink to=\"/applicant/services/findjob\" target=\"_blank\">\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(ResumeRenewalExpired);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    link: 'supernova.notification.resume.renewal.link',\n    content: {\n        RESUME_RENEWAL: 'supernova.notification.resume.renewal.RESUME_RENEWAL',\n        RESUME_MARK: 'supernova.notification.resume.renewal.RESUME_MARK',\n    },\n    soonExpire: 'supernova.notification.resume.renewal.soon_expire',\n    expireTomorrow: 'supernova.notification.resume.renewal.soon_expire.tomorrow',\n};\n\nconst ResumeRenewalSoonExpires: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const isExpireTomorrow = notification.params.expireTomorrow;\n\n    return (\n        <Notification dataQa={DataQaInvariants.ResumeRenewalSoonExpires} {...notification}>\n            <NotificationSpacer>\n                {isExpireTomorrow ? trls[TrlKeys.expireTomorrow] : trls[TrlKeys.soonExpire]}{' '}\n                {trls[TrlKeys.content[notification.params.serviceType as 'RESUME_RENEWAL' | 'RESUME_MARK']]}\n            </NotificationSpacer>\n            <NotificationLink to=\"/applicant/services/findjob\" target=\"_blank\">\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(ResumeRenewalSoonExpires);\n","import ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\n\nimport HumanDate, { ShowYear } from 'lux/components/HumanDate';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationText from 'lux/components/SupernovaMainMenu/UserNotifications/Text';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    first: 'notification.employer.autoProlongationCouldBeCanceled.planned',\n    planedOne: 'notification.employer.autoProlongationCouldBeCanceled.planned.one',\n    planedSome: 'notification.employer.autoProlongationCouldBeCanceled.planned.some',\n    planedMany: 'notification.employer.autoProlongationCouldBeCanceled.planned.many',\n    planedZero: 'notification.employer.autoProlongationCouldBeCanceled.planned.zero',\n    vacancyOne: 'notification.employer.autoProlongationCouldBeCanceled.autoprolongation.one',\n    vacancySome: 'notification.employer.autoProlongationCouldBeCanceled.autoprolongation.some',\n    vacancyMany: 'notification.employer.autoProlongationCouldBeCanceled.autoprolongation.many',\n    vacancyZero: 'notification.employer.autoProlongationCouldBeCanceled.autoprolongation.zero',\n    canceledOne: 'notification.employer.autoProlongationCouldBeCanceled.couldbecanceled.one',\n    canceledSome: 'notification.employer.autoProlongationCouldBeCanceled.couldbecanceled.some',\n    canceledMany: 'notification.employer.autoProlongationCouldBeCanceled.couldbecanceled.many',\n    canceledZero: 'notification.employer.autoProlongationCouldBeCanceled.couldbecanceled.zero',\n    lastContent: 'notification.employer.autoProlongationCouldBeCanceled.publicationsRequired',\n    link: 'notification.employer.autoProlongationCouldBeCanceled.link',\n};\n\nconst VacancyAutoProlongation: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    return (\n        <Notification {...notification}>\n            <NotificationText>\n                <ConversionNumber\n                    hasValue={false}\n                    value={parseInt(notification.params.vacancy_count, 10)}\n                    one={trls[TrlKeys.planedOne]}\n                    some={trls[TrlKeys.planedSome]}\n                    many={trls[TrlKeys.planedMany]}\n                    zero={trls[TrlKeys.planedZero]}\n                />{' '}\n                <HumanDate textify date={notification.params.prolongation_date} showYear={ShowYear.Never} />{' '}\n                <ConversionNumber\n                    value={parseInt(notification.params.vacancy_count, 10)}\n                    formatValue={(value) => NumberFormatter.format(String(value))}\n                    one={trls[TrlKeys.vacancyOne]}\n                    some={trls[TrlKeys.vacancySome]}\n                    many={trls[TrlKeys.vacancyMany]}\n                    zero={trls[TrlKeys.vacancyZero]}\n                />{' '}\n                <ConversionNumber\n                    hasValue={false}\n                    value={parseInt(notification.params.vacancy_count, 10)}\n                    one={trls[TrlKeys.canceledOne]}\n                    some={trls[TrlKeys.canceledSome]}\n                    many={trls[TrlKeys.canceledMany]}\n                    zero={trls[TrlKeys.canceledZero]}\n                />\n                <p>&#8212; {trls[TrlKeys.lastContent]}</p>\n            </NotificationText>\n            <NotificationLink to=\"/employer/vacancies\" target=\"_blank\">\n                {trls[TrlKeys.link]}\n            </NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(VacancyAutoProlongation);\n","import ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationFailure]: {\n        content: 'vacancy.auto.publication.no.quotas.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationNoPermission]: {\n        content: 'vacancy.auto.publication.no.permission.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationNoPublication]: {\n        content: 'vacancy.auto.publication.no.publication.failure',\n        type: {\n            FREE: 'employer.VacancyCreate.PublicationType.FREE',\n            PREMIUM: 'employer.VacancyCreate.PublicationType.PREMIUM',\n            PREMIUM_ADVERTISING: 'employer.VacancyCreate.PublicationType.PREMIUM_ADVERTISING',\n            PREMIUM_ANONYMOUS: 'employer.VacancyCreate.PublicationType.PREMIUM_ANONYMOUS',\n            STANDARD_PROMO: 'employer.VacancyCreate.PublicationType.STANDARD_PROMO',\n            STANDARD: 'employer.VacancyCreate.PublicationType.STANDARD',\n            STANDARD_ADVERTISING: 'employer.VacancyCreate.PublicationType.STANDARD_ADVERTISING',\n            STANDARD_ANONYMOUS: 'employer.VacancyCreate.PublicationType.STANDARD_ANONYMOUS',\n            STANDARD_PLUS: 'employer.VacancyCreate.PublicationType.STANDARD_PLUS',\n            STANDARD_PLUS_ANONYMOUS: 'employer.VacancyCreate.PublicationType.STANDARD_PLUS_ANONYMOUS',\n        },\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationValidationFailure]: {\n        content: 'vacancy.auto.publication.validation.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationUnknown]: {\n        content: 'vacancy.auto.publication.unknown.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccesses]: {\n        content: 'vacancy.auto.publication.successes',\n        statisticsOne: 'statistics.global.vacancy.one',\n        statisticsSome: 'statistics.global.vacancy.some',\n        statisticsMany: 'statistics.global.vacancy.many',\n        statisticsZero: 'statistics.global.vacancy.zero',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccess]: {\n        content: 'vacancy.auto.publication.success',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst VacancyAutoPublication: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    if (\n        key === ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccesses ||\n        key === ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccess\n    ) {\n        return (\n            <Notification\n                iconKind={SupernovaUserNotificationsIconKind.Success}\n                dataQa={DataQaInvariants.Success}\n                {...notification}\n            >\n                {key === ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccesses && (\n                    <>\n                        <NotificationLink to=\"/employer/vacancies\" target=\"_blank\">\n                            {notification.params.key}\n                            {notification.params.count && (\n                                <ConversionNumber\n                                    formatValue={(value) => NumberFormatter.format(String(value))}\n                                    value={parseInt(notification.params.count, 10)}\n                                    one={trls[TrlKeys[key].statisticsOne]}\n                                    some={trls[TrlKeys[key].statisticsSome]}\n                                    many={trls[TrlKeys[key].statisticsMany]}\n                                    zero={trls[TrlKeys[key].statisticsZero]}\n                                />\n                            )}\n                        </NotificationLink>\n                        {trls[TrlKeys[key].content]}\n                    </>\n                )}\n                {key === ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccess && (\n                    <>\n                        {formatToReactComponent(trls[TrlKeys[key].content], {\n                            '{0}': (\n                                <NotificationLink to={`/vacancy/${notification.params.vacancy_id}`} target=\"_blank\">\n                                    «{notification.params.name}»\n                                </NotificationLink>\n                            ),\n                        })}\n                    </>\n                )}\n            </Notification>\n        );\n    }\n\n    const type = notification.params.publication_type as MetallicVacancyType;\n\n    return (\n        <Notification {...notification}>\n            <NotificationSpacer>\n                {formatToReactComponent(trls[TrlKeys[key].content], {\n                    '{0}': (\n                        <NotificationLink\n                            to={`/employer/vacancy/create?draftId=${notification.params.draftId}`}\n                            target=\"_blank\"\n                        >\n                            «{notification.params.name}»\n                        </NotificationLink>\n                    ),\n                })}\n                {key === ComplexUserNotificationsTemplateKey.VacancyAutoPublicationNoPublication &&\n                    trls[TrlKeys[key].type[type]]}\n            </NotificationSpacer>\n        </Notification>\n    );\n};\n\nexport default translation(VacancyAutoPublication);\n","const checkPlaceholder = (trl: string, placeholder: string): boolean => {\n    return trl.includes(placeholder);\n};\n\nexport default checkPlaceholder;\n","import formatDate from 'date-fns/format';\n\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport checkPlaceholder from 'lux/components/SupernovaMainMenu/UserNotifications/checkPlaceholder';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccesses]: {\n        content: 'vacancy.auto.update.successes',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccess]: {\n        content: 'vacancy.auto.update.success',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublications]: {\n        content: 'vacancy.auto.update.no.publications.checks',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuota]: {\n        content: 'vacancy.auto.update.no.quota.checks',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissions]: {\n        content: 'vacancy.auto.update.no.permissions.checks',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermission]: {\n        content: 'vacancy.auto.update.no.permissions.check',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotaFailure]: {\n        content: 'vacancy.auto.update.no.quota.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotaFailures]: {\n        content: 'vacancy.auto.update.no.quota.failures',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublicationFailure]: {\n        content: 'vacancy.auto.update.no.publications.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublicationFailures]: {\n        content: 'vacancy.auto.update.no.publications.failures',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissionFailure]: {\n        content: 'vacancy.auto.update.no.permissions.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissionFailures]: {\n        content: 'vacancy.auto.update.no.permissions.failures',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateTooMuchFailure]: {\n        content: 'vacancy.auto.update.too.much.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateTooMuchFailures]: {\n        content: 'vacancy.auto.update.too.much.failures',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublication]: {\n        content: 'vacancy.auto.update.no.publications.check',\n        statisticsOne: 'statistics.global.vacancy.one',\n        statisticsSome: 'statistics.global.vacancy.some',\n        statisticsMany: 'statistics.global.vacancy.many',\n        statisticsZero: 'statistics.global.vacancy.zero',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotas]: {\n        content: 'vacancy.auto.update.no.quota.check',\n    },\n    vacancySome: 'vacancy.some',\n    vacancyMany: 'vacancy.many',\n    vacancyUpdateIn: 'vacancy.auto.update.in',\n    vacancyBuy: 'vacancy.auto.update.buy',\n    successesOne: 'vacancy.auto.update.successes.one',\n    successesSome: 'vacancy.auto.update.successes.some',\n    successesMany: 'vacancy.auto.update.successes.many',\n};\n\ntype TemplateKeys = Exclude<\n    keyof typeof TrlKeys,\n    | 'vacancySome'\n    | 'vacancyMany'\n    | 'vacancyUpdateIn'\n    | 'vacancyBuy'\n    | 'successesOne'\n    | 'successesSome'\n    | 'successesMany'\n>;\n\nconst VacancyAutoUpdate: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    const vacancyLink = (\n        <NotificationLink to={`/vacancy/${notification.params.vacancy_id}`} target=\"_blank\">\n            {notification.params.vacancy_name}\n        </NotificationLink>\n    );\n\n    if (\n        key === ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccess ||\n        key === ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccesses\n    ) {\n        return (\n            <Notification\n                iconKind={SupernovaUserNotificationsIconKind.Success}\n                dataQa={DataQaInvariants.Success}\n                {...notification}\n            >\n                {formatToReactComponent(trls[TrlKeys[key].content], {\n                    '{0}': vacancyLink,\n                    '{1}': (\n                        <ConversionNumber\n                            formatValue={(value) => NumberFormatter.format(String(value))}\n                            value={parseInt(notification.params.count, 10)}\n                            one={trls[TrlKeys.successesOne]}\n                            some={trls[TrlKeys.successesSome]}\n                            many={trls[TrlKeys.successesMany]}\n                            zero={trls[TrlKeys.successesMany]}\n                        />\n                    ),\n                })}\n            </Notification>\n        );\n    }\n\n    const content = trls[TrlKeys[key].content];\n\n    return (\n        <Notification {...notification}>\n            {formatToReactComponent(content, {\n                '{0}': checkPlaceholder(content, '{0}') ? (\n                    <ConversionNumber\n                        formatValue={(value) => NumberFormatter.format(String(value))}\n                        value={parseInt(notification.params.count, 10)}\n                        one={trls[TrlKeys.vacancySome]}\n                        some={trls[TrlKeys.vacancyMany]}\n                        many={trls[TrlKeys.vacancyMany]}\n                        zero={trls[TrlKeys.vacancyMany]}\n                    />\n                ) : (\n                    ''\n                ),\n                '{1}': checkPlaceholder(content, '{1}') ? (\n                    <>\n                        {formatDate(new Date(notification.params.update_time_from), 'dd.MM.yyyy')}{' '}\n                        {trls[TrlKeys.vacancyUpdateIn]}\n                        {NON_BREAKING_SPACE}\n                        {formatDate(new Date(notification.params.update_time_from), 'HH:mm')}–\n                        {formatDate(new Date(notification.params.update_time_to), 'HH:mm')}\n                    </>\n                ) : (\n                    ''\n                ),\n                '{2}': vacancyLink,\n                '{3}': (\n                    <NotificationLink to=\"/price/publications\" target=\"_blank\">\n                        {trls[TrlKeys.vacancyBuy]}\n                    </NotificationLink>\n                ),\n            })}\n        </Notification>\n    );\n};\n\nexport default translation(VacancyAutoUpdate);\n","import vacancyBlockedVacancyLinkClick, {\n    NotificationCode,\n} from '@hh.ru/analytics-js-events/build/xhh/employer/notifications/vacancy_blocked_vacancy_link_click';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { VacancyBlockedReason } from 'lux/components/Notifications/VacancyBlocked';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    goToVacancy: 'supernova.notification.employer.vacancy.blocked.go.to.vacancy',\n\n    [VacancyBlockedReason.VacancyBlockedDuePaidServices]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.paid.services',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.paid.services.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueBadDescription]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.bad.description',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.bad.description.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueTwoInOne]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.two.in.one',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.two.in.one.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueTraining]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.training',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.training.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueCaptionMissing]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.caption.missing',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.caption.missing.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueModerator]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.moderator',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.moderator.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueRelocateFromBelarus]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.relocate.from.belarus',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.relocate.from.belarus.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueReplacement]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.replacement',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.replacement.advice',\n    },\n};\n\nconst VacancyBlocked: TranslatedComponent<ComplexUserNotification> = ({ trls, ...notification }) => {\n    const notificationCode = notification.notificationCode as NotificationCode;\n\n    return (\n        <Notification {...notification}>\n            <NotificationSpacer>\n                {formatToReactComponent(trls[TrlKeys[notificationCode].main], {\n                    '{0}': (\n                        <Text Element=\"span\" strong>\n                            {notification.params.vacancyName}\n                        </Text>\n                    ),\n                })}\n            </NotificationSpacer>\n            {notificationCode !== VacancyBlockedReason.VacancyBlockedDueModerator && (\n                <>\n                    <NotificationSpacer>{trls[TrlKeys[notificationCode].advice]}</NotificationSpacer>\n                    <NotificationLink\n                        onClick={() => {\n                            vacancyBlockedVacancyLinkClick({\n                                notificationCode,\n                                notificationType: 'supernova_notification',\n                            });\n                        }}\n                        target=\"_blank\"\n                        to={`/vacancy/${notification.params.vacancyId}`}\n                    >\n                        {trls[TrlKeys.goToVacancy]}\n                    </NotificationLink>\n                </>\n            )}\n        </Notification>\n    );\n};\n\nexport default translation(VacancyBlocked);\n","import ConversionNumber from 'bloko/blocks/conversion';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    text: 'employer.publicationReadyDrafts.text',\n    vacancy: 'employer.publicationReadyDrafts.vacancy',\n    vacancies: 'employer.vacancyDraft.saveNotificaition.vacancies',\n    waiting: 'employer.publicationReadyDrafts.waitingForPublication',\n    titleOne: 'employer.publicationReadyDrafts.title.one',\n    titleSome: 'employer.publicationReadyDrafts.title.some',\n    titleMany: 'employer.publicationReadyDrafts.title.many',\n};\n\nconst VacancyDraftPublicationReady: TranslatedComponent<ComplexUserNotification> = ({\n    trls,\n    templateKey,\n    ...props\n}) => {\n    const { params } = props;\n    const ready = parseInt(params.ready || '0', 10);\n\n    if (ready === 0) {\n        return null;\n    }\n\n    if (ready === 1) {\n        return (\n            <Notification templateKey={templateKey} {...props}>\n                <NotificationLink to={`/employer/vacancy/create?draftId=${params.draft_id}`}>\n                    {trls[TrlKeys.vacancy]}\n                </NotificationLink>\n                {NON_BREAKING_SPACE}\n                {trls[TrlKeys.waiting]}\n            </Notification>\n        );\n    }\n\n    return (\n        <Notification templateKey={templateKey} {...props}>\n            <NotificationHeading>\n                <ConversionNumber\n                    value={ready}\n                    one={trls[TrlKeys.titleOne]}\n                    some={trls[TrlKeys.titleSome]}\n                    many={trls[TrlKeys.titleMany]}\n                    hasValue\n                />\n            </NotificationHeading>\n            {trls[TrlKeys.text]}\n            {NON_BREAKING_SPACE}\n            <NotificationLink to=\"/employer/vacancies\">{trls[TrlKeys.vacancies]}</NotificationLink>\n        </Notification>\n    );\n};\n\nexport default translation(VacancyDraftPublicationReady);\n","import { FC, PropsWithChildren } from 'react';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport Notification from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport VacancyScheduledPublicationNotification from 'lux/components/VacancyScheduledPublicationNotification';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst VacancyScheduledPublication: FC<ComplexUserNotification & PropsWithChildren> = ({ templateKey, ...props }) => {\n    const content = (\n        <VacancyScheduledPublicationNotification Component={NotificationLink} templateKey={templateKey} {...props} />\n    );\n\n    if (\n        templateKey === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess ||\n        templateKey === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses\n    ) {\n        return (\n            <Notification\n                iconKind={SupernovaUserNotificationsIconKind.Success}\n                dataQa={DataQaInvariants.Success}\n                templateKey={templateKey}\n                {...props}\n            >\n                {content}\n            </Notification>\n        );\n    }\n\n    return (\n        <Notification templateKey={templateKey} {...props}>\n            {content}\n        </Notification>\n    );\n};\n\nexport default translation(VacancyScheduledPublication);\n","import { ComponentType } from 'react';\n\nimport { ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nimport { UserNotificationProps } from 'lux/components/SupernovaMainMenu/UserNotifications/Notification';\nimport ApplicantCalling from 'lux/components/SupernovaMainMenu/UserNotifications/variants/ApplicantCalling';\nimport ApplicantFindJob from 'lux/components/SupernovaMainMenu/UserNotifications/variants/ApplicantFindJob';\nimport AutoInviteDisabled from 'lux/components/SupernovaMainMenu/UserNotifications/variants/AutoInviteDisabled';\nimport BillingCardsToCardId from 'lux/components/SupernovaMainMenu/UserNotifications/variants/BillingCardsToCardId';\nimport BillingCartActivation from 'lux/components/SupernovaMainMenu/UserNotifications/variants/BillingCartActivation';\nimport BillingInvoiceFinish from 'lux/components/SupernovaMainMenu/UserNotifications/variants/BillingInvoiceFinish';\nimport BrandingMakeup from 'lux/components/SupernovaMainMenu/UserNotifications/variants/BrandingMakeup';\nimport CallTracking from 'lux/components/SupernovaMainMenu/UserNotifications/variants/CallTracking';\nimport CareerConsult from 'lux/components/SupernovaMainMenu/UserNotifications/variants/CareerConsult';\nimport CareerConsultWaitingForCall from 'lux/components/SupernovaMainMenu/UserNotifications/variants/CareerConsultWaitingForCall';\nimport CompleteResume from 'lux/components/SupernovaMainMenu/UserNotifications/variants/CompleteResume';\nimport CompleteResumeWaitingForCall from 'lux/components/SupernovaMainMenu/UserNotifications/variants/CompleteResumeWaitingForCall';\nimport DefaultInvariant from 'lux/components/SupernovaMainMenu/UserNotifications/variants/DefaultInvariant';\nimport Employer2fa from 'lux/components/SupernovaMainMenu/UserNotifications/variants/Employer2fa';\nimport EmployerChangeEmailByManager from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerChangeEmailByManager';\nimport EmployerChangeEmailReminder from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerChangeEmailReminder';\nimport EmployerConstructor from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerConstructor';\nimport EmployerLoyaltySurvey from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerLoyaltySurvey';\nimport EmployerReviewCanEnable from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerReviewCanEnable';\nimport EmployerReviewFeedbackCreated from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmployerReviewFeedbackCreated';\nimport HHRating from 'lux/components/SupernovaMainMenu/UserNotifications/variants/HHRating';\nimport HRElkaSpecial from 'lux/components/SupernovaMainMenu/UserNotifications/variants/HRElkaSpecial';\nimport HRSpace from 'lux/components/SupernovaMainMenu/UserNotifications/variants/HRSpace';\nimport InterviewPracticePaid from 'lux/components/SupernovaMainMenu/UserNotifications/variants/InterviewPractice';\nimport InterviewPracticeWaitingForCall from 'lux/components/SupernovaMainMenu/UserNotifications/variants/InterviewPracticeWaitingForCall';\nimport KingdomOfVacancy from 'lux/components/SupernovaMainMenu/UserNotifications/variants/KingdomOfVacancy';\nimport NegotiationInterview from 'lux/components/SupernovaMainMenu/UserNotifications/variants/NegotiationInterview';\nimport ResumeRenewalExpired from 'lux/components/SupernovaMainMenu/UserNotifications/variants/ResumeRenewalExpired';\nimport ResumeRenewalSoonExpires from 'lux/components/SupernovaMainMenu/UserNotifications/variants/ResumeRenewalSoonExpires';\nimport VacancyAutoProlongation from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoProlongation';\nimport VacancyAutoPublication from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoPublication';\nimport VacancyAutoUpdate from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyAutoUpdate';\nimport VacancyBlocked from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyBlocked';\nimport VacancyDraftPublicationReady from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyDraftPublicationReady';\nimport VacancyScheduledPublication from 'lux/components/SupernovaMainMenu/UserNotifications/variants/VacancyScheduledPublication';\n\ntype UserNotificationConfig = Record<string, ComponentType<UserNotificationProps>>;\n\nconst userNotificationsConfig: UserNotificationConfig = {\n    [ComplexUserNotificationsTemplateKey.ApplicantCallTracking]: ApplicantCalling,\n    [ComplexUserNotificationsTemplateKey.ApplicantWorkAddress]: ApplicantFindJob,\n    [ComplexUserNotificationsTemplateKey.BillingCartInsufficientFunds]: BillingCardsToCardId,\n    [ComplexUserNotificationsTemplateKey.BillingCartIrrelevantStatus]: BillingCardsToCardId,\n    [ComplexUserNotificationsTemplateKey.BillingCartError]: BillingCardsToCardId,\n    [ComplexUserNotificationsTemplateKey.BillingCartActivated]: BillingInvoiceFinish,\n    [ComplexUserNotificationsTemplateKey.BillingCartActivationReady]: BillingInvoiceFinish,\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationForbidden]: BillingCartActivation,\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationExpired]: BillingCartActivation,\n    [ComplexUserNotificationsTemplateKey.FillEmployerPageConstructor]: EmployerConstructor,\n    [ComplexUserNotificationsTemplateKey.FillEmployerVacancyPageConstructor]: EmployerConstructor,\n    [ComplexUserNotificationsTemplateKey.BuyVacancyPageConstructor]: EmployerConstructor,\n    [ComplexUserNotificationsTemplateKey.BuyEmployerPageConstructor]: EmployerConstructor,\n    [ComplexUserNotificationsTemplateKey.SuggestionVacancyMakeup]: BrandingMakeup,\n    [ComplexUserNotificationsTemplateKey.SuggestionEmployerMakeup]: BrandingMakeup,\n    [ComplexUserNotificationsTemplateKey.CallTracking]: CallTracking,\n    [ComplexUserNotificationsTemplateKey.CareerConsultPaid]: CareerConsult,\n    [ComplexUserNotificationsTemplateKey.CareerConsultwaitingForCall]: CareerConsultWaitingForCall,\n    [ComplexUserNotificationsTemplateKey.CompleteResumeWorkDone]: CompleteResume,\n    [ComplexUserNotificationsTemplateKey.CompleteResumePaid]: CompleteResume,\n    [ComplexUserNotificationsTemplateKey.CompleteResumeWaitingForCall]: CompleteResumeWaitingForCall,\n    [ComplexUserNotificationsTemplateKey.Employer2fa]: Employer2fa,\n    [ComplexUserNotificationsTemplateKey.EmployerReviewsCanEnable]: EmployerReviewCanEnable,\n    [ComplexUserNotificationsTemplateKey.EmployerReviewFeedbackCreated]: EmployerReviewFeedbackCreated,\n    // tempexp_26167_next-line\n    [ComplexUserNotificationsTemplateKey.HRElkaSpecial]: HRElkaSpecial,\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: HHRating,\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: HHRating,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]: HRSpace,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]: HRSpace,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]: HRSpace,\n    [ComplexUserNotificationsTemplateKey.InterviewPracticePaid]: InterviewPracticePaid,\n    [ComplexUserNotificationsTemplateKey.InterviewPracticeForCall]: InterviewPracticeWaitingForCall,\n    [ComplexUserNotificationsTemplateKey.NegotiationInterview]: NegotiationInterview,\n    [ComplexUserNotificationsTemplateKey.PricesIncrease]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.ResumeBlocked]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.ResumeTargetEmployerDiscount]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.ResumeRenewalExpired]: ResumeRenewalExpired,\n    [ComplexUserNotificationsTemplateKey.ResumeRenewalSoonExpires]: ResumeRenewalSoonExpires,\n    [ComplexUserNotificationsTemplateKey.UserSupportNewEvents]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.VideoCall]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.EmployerYearResult]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.AutoSearchVacancies]: DefaultInvariant,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoProlongation]: VacancyAutoProlongation,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationUnknown]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationValidationFailure]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationNoPublication]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationNoPermission]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationFailure]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccesses]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoPublicationSuccess]: VacancyAutoPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccesses]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateSuccess]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublications]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuota]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissions]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublication]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotas]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermission]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotaFailure]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoQuotaFailures]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublicationFailure]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPublicationFailures]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissionFailure]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateNoPermissionFailures]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateTooMuchFailure]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyAutoUpdateTooMuchFailures]: VacancyAutoUpdate,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoQuotasFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPermissionFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPublicationFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationValidationFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationUnknownFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.EmployerLoyaltySurvey]: EmployerLoyaltySurvey,\n    [ComplexUserNotificationsTemplateKey.VacancyDraftPublicationReady]: VacancyDraftPublicationReady,\n    [ComplexUserNotificationsTemplateKey.ChangeEmployerManagerEmailChangedNotification]: EmployerChangeEmailByManager,\n    [ComplexUserNotificationsTemplateKey.ChangeEmployerManagerEmailConfirmationReminder]: EmployerChangeEmailReminder,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueReplacement]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueModerator]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueTraining]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueBadDescription]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDuePaidServices]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueCaptionMissing]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueRelocateFromBelarus]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueTwoInOne]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.AutoInviteDisabled]: AutoInviteDisabled,\n    [ComplexUserNotificationsTemplateKey.KingdomOfVacancy]: KingdomOfVacancy,\n};\n\nexport default userNotificationsConfig;\n","import Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLink from 'lux/components/SupernovaMainMenu/UserNotifications/Link';\nimport NotificationLayout from 'lux/components/SupernovaMainMenu/UserNotifications/Notification/Layout';\nimport NotificationSpacer from 'lux/components/SupernovaMainMenu/UserNotifications/Spacer';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'supernova.notification.autoSearches.1',\n    link: 'supernova.notification.autoSearches.2',\n};\n\nconst EmptyAutoSearchVacancy: TranslatedComponent = ({ trls }) => {\n    const isApplicant = useSelector(({ userType }) => UserType.Applicant === userType);\n\n    if (!isApplicant) {\n        return null;\n    }\n\n    return (\n        <NotificationLayout iconKind={SupernovaUserNotificationsIconKind.Empty} dataQa={DataQaInvariants.Empty}>\n            <NotificationSpacer>\n                <Text importance={TextImportance.Secondary}>{trls[TrlKeys.content]}</Text>\n            </NotificationSpacer>\n            <NotificationLink to=\"/applicant/autosearch\">{trls[TrlKeys.link]}</NotificationLink>\n        </NotificationLayout>\n    );\n};\n\nexport default translation(EmptyAutoSearchVacancy);\n","import Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SupernovaUserNotificationsIconKind } from 'lux/components/SupernovaMainMenu/UserNotifications/Icon';\nimport NotificationLayout from 'lux/components/SupernovaMainMenu/UserNotifications/Notification/Layout';\nimport { DataQaInvariants } from 'lux/components/SupernovaMainMenu/UserNotifications/constants';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'supernova.notifications.empty',\n};\n\nconst EmptyNotification: TranslatedComponent = ({ trls }) => {\n    const isApplicant = useSelector(({ userType }) => UserType.Applicant === userType);\n\n    if (isApplicant) {\n        return null;\n    }\n\n    return (\n        <NotificationLayout iconKind={SupernovaUserNotificationsIconKind.Empty} dataQa={DataQaInvariants.Empty}>\n            <Text importance={TextImportance.Secondary}>{trls[TrlKeys.content]}</Text>\n        </NotificationLayout>\n    );\n};\n\nexport default translation(EmptyNotification);\n","import { FC, PropsWithChildren } from 'react';\n\nimport Debug from 'HHC/Debug';\nimport config from 'lux/components/SupernovaMainMenu/UserNotifications/config';\nimport EmptyAutoSearchVacancy from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmptyAutoSearchVacancy';\nimport EmptyNotification from 'lux/components/SupernovaMainMenu/UserNotifications/variants/EmptyNotification';\nimport { ComplexUserNotificationsTemplateKey, ComplexUserNotification } from 'lux/models/userNotifications';\n\ninterface NotificationTextProps {\n    userNotifications: ComplexUserNotification[];\n    close?: VoidFunction;\n}\n\nconst Content: FC<NotificationTextProps & PropsWithChildren> = ({ userNotifications, close }) => {\n    return (\n        <div data-qa=\"user-notifications-content\">\n            {userNotifications.map((notification) => {\n                const SupernovaUserNotification = config[notification.templateKey];\n\n                if (!SupernovaUserNotification) {\n                    Debug.log('out', 'Unknown user notification template key', {\n                        explain: notification.templateKey,\n                    });\n                    return null;\n                }\n\n                return <SupernovaUserNotification key={notification.id} close={close} {...notification} />;\n            })}\n            {userNotifications.length === 0 && <EmptyNotification />}\n            {!userNotifications.find(\n                ({ templateKey }) => templateKey === ComplexUserNotificationsTemplateKey.AutoSearchVacancies\n            ) && <EmptyAutoSearchVacancy />}\n        </div>\n    );\n};\n\nexport default Content;\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { markUserNotificationsAsViewed } from 'Modules/UserNotifications';\nimport {\n    ComplexUserNotification,\n    isComplexUserNotification,\n    markUserNotificationsAsViewedByIds,\n} from 'lux/models/userNotifications';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface UseNotifications {\n    userNotifications: ComplexUserNotification[];\n    markNotificationsAsViewed: () => void;\n    unreadNotificationsCount: number;\n}\n\nconst useNotifications = (): UseNotifications => {\n    const dispatch = useDispatch();\n\n    const userNotifications = useSelector(({ userNotifications }) =>\n        userNotifications.filter(\n            (notification): notification is ComplexUserNotification =>\n                isComplexUserNotification(notification) && notification.isSupernova\n        )\n    );\n\n    return useMemo(() => {\n        const unreadNotificationIds = userNotifications.filter(({ viewed }) => !viewed).map(({ id }) => id);\n\n        const markNotificationsAsViewed = () => {\n            if (unreadNotificationIds.length > 0) {\n                void markUserNotificationsAsViewed(unreadNotificationIds);\n                dispatch(markUserNotificationsAsViewedByIds(unreadNotificationIds));\n            }\n        };\n\n        return {\n            userNotifications,\n            markNotificationsAsViewed,\n            unreadNotificationsCount: unreadNotificationIds.length,\n        };\n    }, [dispatch, userNotifications]);\n};\n\nexport default useNotifications;\n","import { FC, useEffect, PropsWithChildren } from 'react';\n\nimport Content from 'lux/components/SupernovaMainMenu/UserNotifications/Content';\nimport useNotifications from 'lux/components/SupernovaMainMenu/UserNotifications/useNotifications';\n\ninterface UserNotificationsMobileProps {\n    visible?: boolean;\n    close?: VoidFunction;\n}\n\nconst UserNotificationsMobile: FC<UserNotificationsMobileProps & PropsWithChildren> = ({ visible, close }) => {\n    const { userNotifications, markNotificationsAsViewed } = useNotifications();\n\n    useEffect(() => {\n        if (visible) {\n            markNotificationsAsViewed();\n        }\n    }, [markNotificationsAsViewed, visible]);\n\n    return <Content userNotifications={userNotifications} close={close} />;\n};\n\nexport default UserNotificationsMobile;\n","import React, { MouseEventHandler } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport DropBase from 'bloko/blocks/drop/Base';\nimport { BASE_CLASS_NAMES, PADDING_WRAPPER_CLASS_NAME } from 'bloko/blocks/drop/Menu/common';\nimport { KeyCode } from 'bloko/common/constants/keyboard';\nimport LayerCssClass from 'bloko/common/constants/layersCssClasses';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\nimport metrics, { Placement } from 'bloko/common/metrics';\nimport requestAnimation from 'bloko/common/requestAnimation';\n\nimport SupernovaDropdownContext from 'lux/components/SupernovaMainMenu/SupernovaDropdownContext';\n\ninterface SupernovaDropdownProps {\n    activator: React.ReactElement;\n    anchorFullHeight?: boolean;\n    arrowBreakpoints?: Breakpoint[];\n    fullWidthBreakpoints?: Breakpoint[];\n    onClose?: VoidFunction;\n    placement?: Placement;\n    render: (close: VoidFunction) => React.ReactNode;\n    onShown?: () => void;\n    activatorClick?: React.MouseEventHandler | (() => void);\n}\n\nconst BEHAVIOR = {\n    alignToActivatorBorders: true,\n    arrowSize: 0,\n    fullScreenOnXS: false,\n    placementOffset: 0,\n    setupFullWidthOnXS: false,\n    showArrow: false,\n};\n\nconst mainContentVisibleAction = makeSetStoreField('mainContentVisible');\n\nconst SupernovaDropdown: React.VFC<SupernovaDropdownProps> = ({\n    activator,\n    anchorFullHeight,\n    arrowBreakpoints = [Breakpoint.XS],\n    fullWidthBreakpoints = [Breakpoint.XS],\n    onClose,\n    placement = Placement.BottomStart,\n    render,\n    onShown,\n    activatorClick,\n}) => {\n    const activatorRef = React.useRef<HTMLElement>(null);\n    const arrowRef = React.useRef<HTMLDivElement>(null);\n    const breakpointRef = React.useRef<Breakpoint>();\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const dropdownOptionsRef = React.useRef<Record<string, HTMLElement>>({});\n    const dropdownOptionsSort = React.useRef<(arr: string[]) => string[]>(null);\n    const dropdownVisibleRef = React.useRef(false);\n\n    const [arrowVisible, setArrowVisible] = React.useState(false);\n    const [dropdownVisible, setDropdownVisible] = React.useState(false);\n\n    const dispatch = useDispatch();\n\n    const fullWidthOnS = React.useMemo(() => fullWidthBreakpoints.includes(Breakpoint.S), [fullWidthBreakpoints]);\n\n    const setDropdownVisibleCallback = React.useCallback(\n        (value: boolean) => {\n            if (value === true && dropdownVisibleRef.current === false) {\n                onShown?.();\n                // TODO eventOnShow\n                if (breakpointRef.current === Breakpoint.XS) {\n                    dispatch(mainContentVisibleAction(false));\n                }\n            }\n            if (value === false && dropdownVisibleRef.current === true) {\n                dispatch(mainContentVisibleAction(true));\n                onClose && onClose();\n            }\n            dropdownVisibleRef.current = value;\n            setDropdownVisible(value);\n        },\n        [dispatch, onClose, onShown]\n    );\n\n    const close = React.useCallback(() => setDropdownVisibleCallback(false), [setDropdownVisibleCallback]);\n\n    const handleClick = React.useCallback<MouseEventHandler>(\n        (event) => {\n            activatorClick && activatorClick(event);\n            setDropdownVisibleCallback(!dropdownVisible);\n        },\n        [activatorClick, dropdownVisible, setDropdownVisibleCallback]\n    );\n\n    const handleCloseByClickOutside = React.useCallback(\n        () => setDropdownVisibleCallback(false),\n        [setDropdownVisibleCallback]\n    );\n\n    const handleActivatorKeydown = React.useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!dropdownVisible) {\n                return;\n            }\n\n            if (event.keyCode === KeyCode.Tab && !event.shiftKey) {\n                event.preventDefault();\n                let dropdownOptionsKeys = Object.keys(dropdownOptionsRef.current).filter(\n                    (key) => !!dropdownOptionsRef.current[key]\n                );\n                dropdownOptionsKeys = dropdownOptionsSort.current\n                    ? dropdownOptionsSort.current?.(dropdownOptionsKeys)\n                    : dropdownOptionsKeys;\n\n                if (dropdownOptionsKeys.length > 0) {\n                    let index = 0;\n                    while (dropdownOptionsRef.current[dropdownOptionsKeys[index]].offsetWidth === 0) {\n                        index += 1;\n                    }\n                    dropdownOptionsRef.current[dropdownOptionsKeys[index]].focus();\n                    dropdownOptionsRef.current[dropdownOptionsKeys[index]].classList.add('focus-visible');\n                }\n            }\n\n            if (event.keyCode === KeyCode.ESC) {\n                event.preventDefault();\n                setDropdownVisibleCallback(false);\n            }\n        },\n        [dropdownVisible, setDropdownVisibleCallback]\n    );\n\n    const handleContentKeydown = React.useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!dropdownVisible) {\n                return;\n            }\n\n            if (event.keyCode === KeyCode.Tab) {\n                let dropdownOptionsKeys = Object.keys(dropdownOptionsRef.current).filter(\n                    (key) => !!dropdownOptionsRef.current[key]\n                );\n                dropdownOptionsKeys = dropdownOptionsSort.current\n                    ? dropdownOptionsSort.current?.(dropdownOptionsKeys)\n                    : dropdownOptionsKeys;\n\n                let index = dropdownOptionsKeys.findIndex((key) => dropdownOptionsRef.current[key] === event.target);\n                if (index !== -1) {\n                    event.preventDefault();\n                    do {\n                        if (!event.shiftKey) {\n                            index += 1;\n                            if (index === dropdownOptionsKeys.length) {\n                                index = 0;\n                            }\n                        } else {\n                            index -= 1;\n                            if (index === -1) {\n                                index = dropdownOptionsKeys.length - 1;\n                            }\n                        }\n                    } while (dropdownOptionsRef.current[dropdownOptionsKeys[index]].offsetWidth === 0);\n                    dropdownOptionsRef.current[dropdownOptionsKeys[index]].focus();\n                }\n            }\n\n            if (event.keyCode === KeyCode.ESC) {\n                event.preventDefault();\n                activatorRef.current?.focus();\n                setDropdownVisibleCallback(false);\n            }\n        },\n        [dropdownVisible, setDropdownVisibleCallback]\n    );\n\n    const setArrowPosition = React.useCallback(\n        requestAnimation(() => {\n            if (activatorRef.current === null || arrowRef.current === null || contentRef.current === null) {\n                return;\n            }\n\n            if (arrowBreakpoints.includes(breakpointRef.current)) {\n                const arrowAnchorMetrics = metrics.getMetrics(activatorRef.current);\n                const contentMetrics = metrics.getMetrics(contentRef.current);\n                if (contentMetrics.left < 0) {\n                    setArrowPosition();\n                    return;\n                }\n                arrowRef.current.style.left = `${\n                    arrowAnchorMetrics.left + arrowAnchorMetrics.width / 2 - contentMetrics.left\n                }px`;\n                setArrowVisible(true);\n            } else {\n                setArrowVisible(false);\n            }\n        }),\n        [arrowBreakpoints, dropdownVisible]\n    );\n\n    React.useLayoutEffect(() => {\n        if (breakpointRef.current === undefined) {\n            breakpointRef.current = getBreakpoint();\n        }\n\n        setArrowPosition();\n\n        const handleResize = () => {\n            const nextBreakpoint = getBreakpoint();\n            if (nextBreakpoint !== breakpointRef.current) {\n                setDropdownVisibleCallback(false);\n            }\n            breakpointRef.current = nextBreakpoint;\n            setArrowPosition();\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [setArrowPosition, setDropdownVisibleCallback]);\n\n    const renderCallback = React.useCallback(() => {\n        dropdownOptionsRef.current = {};\n        return (\n            <SupernovaDropdownContext.Provider\n                value={{ sort: dropdownOptionsSort, elements: dropdownOptionsRef.current }}\n            >\n                <div\n                    className=\"supernova-dropdown-content\"\n                    data-qa=\"supernova-dropdown-content\"\n                    onKeyDown={handleContentKeydown}\n                    ref={contentRef}\n                >\n                    <div\n                        className={classnames('supernova-dropdown-arrow', { 'g-hidden': !arrowVisible })}\n                        ref={arrowRef}\n                    />\n                    <div\n                        className={classnames('supernova-dropdown', {\n                            'supernova-dropdown_full-width': fullWidthOnS,\n                        })}\n                    >\n                        {fullWidthOnS ? (\n                            <div className=\"supernova-dropdown-full-width-wrapper\">{render(close)}</div>\n                        ) : (\n                            render(close)\n                        )}\n                    </div>\n                </div>\n            </SupernovaDropdownContext.Provider>\n        );\n    }, [arrowVisible, close, fullWidthOnS, handleContentKeydown, render]);\n\n    return (\n        <DropBase\n            baseClassNames={BASE_CLASS_NAMES}\n            paddingWrapperClassName={PADDING_WRAPPER_CLASS_NAME}\n            behavior={BEHAVIOR}\n            closeByClickOutside\n            flexible\n            layer={LayerCssClass.Overlay}\n            onClose={handleCloseByClickOutside}\n            onlySetPlacement\n            placement={placement}\n            render={renderCallback}\n            show={dropdownVisible}\n        >\n            <div\n                className={classnames('supernova-dropdown-anchor', {\n                    'supernova-dropdown-anchor_full-height': anchorFullHeight,\n                })}\n            >\n                {React.cloneElement(activator, {\n                    onClick: handleClick,\n                    onKeyDown: handleActivatorKeydown,\n                    ref: activatorRef,\n                })}\n            </div>\n        </DropBase>\n    );\n};\n\nexport default SupernovaDropdown;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport useTrackClicks from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\nconst UserTypeSwitcher: React.VFC<NavItem> = ({ name, trackClicks, subItems }) => {\n    const handleClick = useTrackClicks(name, trackClicks);\n\n    const render = React.useCallback(() => {\n        return subItems?.map(({ name, trackClicks, trackElementShown, translations, url }) => {\n            let pageAnalyticsEvent;\n            if (name === 'userTypeSwitcherApplicant') {\n                pageAnalyticsEvent = 'switch_role_applicant_header';\n            } else {\n                pageAnalyticsEvent = 'switch_role_employer_header';\n            }\n            return (\n                <SupernovaDropdownSection key={name}>\n                    <SupernovaDropdownOption\n                        data-page-analytics-event={pageAnalyticsEvent}\n                        name={name}\n                        trackClicks={trackClicks}\n                        trackElementShown={trackElementShown}\n                        url={url}\n                    >\n                        {translations.name}\n                    </SupernovaDropdownOption>\n                </SupernovaDropdownSection>\n            );\n        });\n    }, [subItems]);\n\n    return (\n        <SupernovaNaviItem mobile userTypeSwitcher>\n            <SupernovaDropdown\n                activator={\n                    <div className=\"supernova-icon-small-dynamic supernova-navi-user-type-switcher-wrapper\">\n                        <button\n                            className=\"supernova-link supernova-navi-user-type-switcher\"\n                            data-page-analytics-event=\"switch_role_header\"\n                            data-qa={`mainmenu_${name}`}\n                        >\n                            <span className=\"supernova-navi-user-type-switcher-text\">\n                                {subItems?.find(({ active }) => active)?.translations.name}\n                            </span>\n                            <span className=\"supernova-icon-small supernova-icon_chevron-down supernova-navi-user-type-switcher-icon\" />\n                        </button>\n                    </div>\n                }\n                anchorFullHeight\n                render={render}\n                activatorClick={handleClick}\n            />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default UserTypeSwitcher;\n","import React from 'react';\n\nimport { NavItem, NavItems } from 'lux/models/supernovaNaviMenu';\n\nimport AccountActions from 'lux/components/SupernovaMainMenu/AccountActions';\nimport AppleBusinessChatActivator from 'lux/components/SupernovaMainMenu/AppleBusinessChatActivator';\nimport ApplicantInfo from 'lux/components/SupernovaMainMenu/ApplicantInfo';\nimport EmployerInfo from 'lux/components/SupernovaMainMenu/EmployerInfo';\nimport EmployerPanel from 'lux/components/SupernovaMainMenu/EmployerPanel';\nimport EmployersReviews from 'lux/components/SupernovaMainMenu/EmployersReviews';\nimport Kakdela from 'lux/components/SupernovaMainMenu/Kakdela';\nimport LogoffSudoUser from 'lux/components/SupernovaMainMenu/LogoffSudoUser';\nimport LogoffUser from 'lux/components/SupernovaMainMenu/LogoffUser';\nimport PersonalManager from 'lux/components/SupernovaMainMenu/PersonalManager';\nimport PersonalManagerPhones from 'lux/components/SupernovaMainMenu/PersonalManagerPhones';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupportChatActivator from 'lux/components/SupernovaMainMenu/SupportChatActivator';\nimport SwitchAccount from 'lux/components/SupernovaMainMenu/SwitchAccount';\nimport UserInfo from 'lux/components/SupernovaMainMenu/UserInfo';\nimport UserNotificationsMobile from 'lux/components/SupernovaMainMenu/UserNotifications/Mobile';\nimport UserTypeSwitcher from 'lux/components/SupernovaMainMenu/UserTypeSwitcher';\n\ninterface DropdownContentProps {\n    item?: NavItem;\n    items?: NavItems;\n    onClose?: () => void;\n    visible?: boolean;\n}\n\nconst DropdownContent: React.VFC<DropdownContentProps> = ({ item, items, onClose, visible }) => {\n    if (items) {\n        return (\n            <React.Fragment>\n                {items.map((item) => {\n                    return <DropdownContent key={item.name} item={item} onClose={onClose} />;\n                })}\n            </React.Fragment>\n        );\n    }\n\n    if (item) {\n        switch (item.name) {\n            case 'appleBusinessChat':\n                return <AppleBusinessChatActivator {...item} />;\n            case 'applicantInfo':\n                return (\n                    <ApplicantInfo {...item}>\n                        <DropdownContent items={item.subItems} />\n                    </ApplicantInfo>\n                );\n            case 'employerInfo':\n                return (\n                    <EmployerInfo {...item}>\n                        <DropdownContent items={item.subItems} />\n                    </EmployerInfo>\n                );\n            case 'employerPanel':\n                return (\n                    <EmployerPanel {...item}>\n                        <DropdownContent items={item.subItems} />\n                    </EmployerPanel>\n                );\n            case 'employersReviews':\n                return <EmployersReviews {...item} />;\n            case 'kakdelaFeedbackPlatform':\n                return <Kakdela {...item} />;\n            case 'logoffUser':\n                return <LogoffUser {...item} />;\n            case 'accountActions':\n                return (\n                    <AccountActions {...item}>\n                        <DropdownContent items={item.subItems} />\n                    </AccountActions>\n                );\n            case 'logoffSudoUser':\n                return <LogoffSudoUser {...item} />;\n            case 'mainContent':\n            case 'pricelist':\n            case 'employerServices':\n                return (\n                    <SupernovaDropdownSection mainContent support={Boolean(item.params?.[0]?.support)}>\n                        <DropdownContent items={item.subItems} onClose={onClose} />\n                    </SupernovaDropdownSection>\n                );\n            case 'personalManager':\n                return <PersonalManager {...item} />;\n            case 'support':\n                return (\n                    <SupernovaDropdownSection support flex>\n                        <DropdownContent items={item.subItems} onClose={onClose} />\n                    </SupernovaDropdownSection>\n                );\n            case 'contactPhone':\n                return <PersonalManagerPhones />;\n            case 'supportChat':\n                return <SupportChatActivator {...item} close={onClose} />;\n            case 'userInfo':\n                return <UserInfo />;\n            case 'userTypeSwitcherApplicant':\n            case 'userTypeSwitcherEmployer':\n                return <UserTypeSwitcher {...item} />;\n            case 'userNotifications':\n                return <UserNotificationsMobile visible={visible} close={onClose} />;\n            case 'switchAccountEmployer':\n            case 'switchAccountApplicant':\n                return <SwitchAccount {...item} />;\n        }\n\n        return <SupernovaDropdownOption {...item}>{item.translations.name}</SupernovaDropdownOption>;\n    }\n\n    return null;\n};\n\nexport default DropdownContent;\n","import React from 'react';\n\nimport { Breakpoint } from 'bloko/common/media';\nimport { Placement } from 'bloko/common/metrics';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport AppleBusinessChatComponent from 'lux/components/SupernovaMainMenu/AppleBusinessChatComponent';\nimport AppleBusinessChatContext from 'lux/components/SupernovaMainMenu/AppleBusinessChatContext';\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst ARROW_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\nconst FULL_WIDTH_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\n\nconst EmployerMenu: React.VFC<NavItem> = ({ name, subItems, trackClicks, analytics }) => {\n    const [currentTab, setCurrentTab] = React.useState<string>();\n    const [appleBusinessChatVisible, setAppleBusinessChatVisible] = React.useState(false);\n\n    const render = React.useCallback(\n        (onClose: () => void) => {\n            return (\n                <div className=\"supernova-employer-menu\">\n                    <div className=\"supernova-employer-menu-tabs\">\n                        <SupernovaDropdownSection>\n                            {subItems?.map((item) => (\n                                <SupernovaDropdownOption\n                                    key={item.name}\n                                    name={item.name}\n                                    onClick={() => {\n                                        setCurrentTab(item.name);\n                                        setAppleBusinessChatVisible(false);\n                                    }}\n                                    trackClicks={item.trackClicks}\n                                    trackElementShown={item.trackElementShown}\n                                >\n                                    {item.translations.name}\n                                </SupernovaDropdownOption>\n                            ))}\n                        </SupernovaDropdownSection>\n                    </div>\n                    <div className=\"supernova-employer-menu-content-wrapper\">\n                        {appleBusinessChatVisible ? (\n                            <div className=\"supernova-employer-menu-content\">\n                                <SupernovaDropdownSection>\n                                    <AppleBusinessChatComponent />\n                                </SupernovaDropdownSection>\n                            </div>\n                        ) : (\n                            <AppleBusinessChatContext.Provider\n                                value={[\n                                    appleBusinessChatVisible,\n                                    (value: boolean) => {\n                                        setCurrentTab('');\n                                        setAppleBusinessChatVisible(value);\n                                    },\n                                ]}\n                            >\n                                {subItems\n                                    ?.filter((item) => item.name === currentTab)\n                                    .map((item) => (\n                                        <div className=\"supernova-employer-menu-content\" key={item.name}>\n                                            <DropdownContent item={item} onClose={onClose} />\n                                        </div>\n                                    ))}\n                            </AppleBusinessChatContext.Provider>\n                        )}\n                    </div>\n                </div>\n            );\n        },\n        [appleBusinessChatVisible, currentTab, subItems]\n    );\n\n    return (\n        <SupernovaNaviItem noMobile smallScreen>\n            <SupernovaDropdown\n                activator={\n                    <SupernovaIcon\n                        data-qa={`mainmenu_${name}`}\n                        name={name}\n                        trackClicks={trackClicks}\n                        analytics={analytics}\n                        view={SupernovaIconView.Mobile}\n                    />\n                }\n                anchorFullHeight\n                arrowBreakpoints={ARROW_BREAKPOINTS}\n                fullWidthBreakpoints={FULL_WIDTH_BREAKPOINTS}\n                placement={Placement.BottomEnd}\n                render={render}\n            />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default EmployerMenu;\n","import { useCallback, useState, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Infotip, { InfoPlacement, InfoTheme } from 'lux/components/Infotip';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    infotipText: 'infotips.content.multiaccount.switch.text',\n    infotipButton: 'infotips.content.multiaccount.switch.button',\n};\n\nconst MultiAccountSwitchInfotip: TranslatedComponent<{ children: React.ReactElement }> = ({ trls, children }) => {\n    const [isInfotipVisible, setInfotipVisible] = useState(true);\n    const infotipRef = useRef<HTMLDivElement>(null);\n\n    const onSeen = useCallback(() => {\n        infotipRef.current &&\n            Analytics.sendHHEventElementShown(infotipRef.current, {\n                name: 'multiaccount_infotip',\n            });\n    }, []);\n\n    return (\n        <div ref={infotipRef} data-qa=\"multiaccount-infotip\">\n            <Infotip\n                name=\"multiaccountSwitch\"\n                placement={InfoPlacement.BottomEnd}\n                render={() => (\n                    <>\n                        {trls[TrlKeys.infotipText]}\n                        <VSpacing base={5} />\n                        <Button\n                            kind={ButtonKind.Inversed}\n                            appearance={ButtonAppearance.Outlined}\n                            onClick={() => setInfotipVisible(false)}\n                        >\n                            {trls[TrlKeys.infotipButton]}\n                        </Button>\n                    </>\n                )}\n                theme={InfoTheme.Dark}\n                show={isInfotipVisible}\n                showCloseButton\n                onClose={() => setInfotipVisible(false)}\n                onSeen={onSeen}\n            >\n                {children}\n            </Infotip>\n        </div>\n    );\n};\n\nexport default translation(MultiAccountSwitchInfotip);\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Breakpoint } from 'bloko/common/media';\nimport { Placement } from 'bloko/common/metrics';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport MultiAccountSwitchInfotip from 'lux/components/SupernovaMainMenu/MultiAccountSwitchInfotip';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst ARROW_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\nconst FULL_WIDTH_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\n\nconst EmployerProfile: React.VFC<NavItem> = ({ name, subItems, trackClicks }) => {\n    const employerId = useSelector(({ employerId }) => employerId);\n    const isSudo = useSelector(({ actualAccount }) => actualAccount !== null);\n\n    const render = React.useCallback(() => {\n        return (\n            <div className=\"supernova-employer-profile\">\n                <DropdownContent items={subItems} />\n            </div>\n        );\n    }, [subItems]);\n\n    return (\n        <MultiAccountSwitchInfotip>\n            <SupernovaNaviItem>\n                <SupernovaDropdown\n                    activator={\n                        <SupernovaIcon\n                            data-qa={classnames(`mainmenu_${name}`, { 'mainmenu_sudo-sign': isSudo })}\n                            name={name}\n                            trackClicks={trackClicks}\n                            view={SupernovaIconView.Profile}\n                        >\n                            <span className=\"supernova-navi-client-id\">\n                                <span className=\"supernova-link\">\n                                    &#8201;№\n                                    {employerId}\n                                </span>\n                            </span>\n                        </SupernovaIcon>\n                    }\n                    anchorFullHeight\n                    arrowBreakpoints={ARROW_BREAKPOINTS}\n                    fullWidthBreakpoints={FULL_WIDTH_BREAKPOINTS}\n                    placement={Placement.BottomEnd}\n                    render={render}\n                />\n                <div className=\"supernova-navi-underline supernova-navi-underline_for-icon\" />\n            </SupernovaNaviItem>\n        </MultiAccountSwitchInfotip>\n    );\n};\n\nexport default EmployerProfile;\n","import React from 'react';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/Link';\nimport useTrackClicks, { TrackClicksProps } from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\ninterface NaviLinkProps extends TrackClicksProps {\n    active?: boolean;\n    name: string;\n    onClick?: React.MouseEventHandler;\n    url: string;\n}\n\nconst ACTIVE_ATTRS = {\n    disabled: true,\n    tabIndex: -1,\n};\n\nconst Link: React.FC<NaviLinkProps & React.PropsWithChildren> = ({\n    active,\n    children,\n    name,\n    onClick,\n    trackClicks,\n    url,\n    ...props\n}) => {\n    const handleClick = useTrackClicks(name, trackClicks, onClick);\n\n    return (\n        <SupernovaLink onClick={handleClick} to={url} {...(active ? ACTIVE_ATTRS : {})} {...props}>\n            {children}\n        </SupernovaLink>\n    );\n};\n\nexport default Link;\n","import { FC } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst sendAnalytics = () => {\n    Analytics.sendHHEventButtonClick('employer_registration');\n};\n\nconst EmployerSignup: FC<NavItem> = ({ name, trackClicks, translations, url }) => {\n    return (\n        <SupernovaNaviItem noMobile>\n            <SupernovaLink\n                data-qa={`mainmenu_${name}`}\n                name={name}\n                onClick={sendAnalytics}\n                trackClicks={trackClicks}\n                url={url}\n            >\n                {translations.name}\n            </SupernovaLink>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default EmployerSignup;\n","import { FC } from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst FavVacancies: FC<NavItem> = ({ active, name, trackClicks, url }) => {\n    return (\n        <SupernovaNaviItem active={active}>\n            <SupernovaIcon\n                data-page-analytics-event=\"favorite_vacancy_list_header\"\n                data-qa={`mainmenu_${name}`}\n                name={name}\n                trackClicks={trackClicks}\n                url={url}\n                view={SupernovaIconView.Favorites}\n            />\n            <div className=\"supernova-navi-underline supernova-navi-underline_for-icon\" />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default FavVacancies;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsMiddleAsia } from 'lux/hooks/useSites';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst TrlKeys = {\n    help: 'supernova.navi.help',\n};\n\nconst Feedback: TranslatedComponent<NavItem> = ({ active, name, trackClicks, trls, url }) => {\n    const isMiddleAsia = useIsMiddleAsia();\n\n    return (\n        <SupernovaNaviItem active={active} desktop={name === 'copiny' || isMiddleAsia}>\n            <SupernovaLink\n                active={active}\n                data-qa=\"supernova-help-feedback-link\"\n                name={name}\n                trackClicks={trackClicks}\n                url={url}\n            >\n                {trls[TrlKeys.help]}\n            </SupernovaLink>\n            <div className=\"supernova-navi-underline\">{trls[TrlKeys.help]}</div>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default translation(Feedback);\n","import React, { useCallback } from 'react';\n\nimport useExperimentCheckFunction from 'lux/hooks/useExperimentCheckFunction';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst NAVI_ITEM_PROPS: Record<string, Record<string, unknown>> = {\n    pricelistZp: {\n        noSmallScreen: true,\n    },\n};\n\nconst GenericNavItem: React.VFC<NavItem> = ({\n    active,\n    counter,\n    name,\n    trackClicks,\n    translations,\n    url,\n    arrowed = false,\n}) => {\n    const userStat = useSelector(({ userStats }) => counter && userStats?.[counter]);\n    const isHHRu = useIsHhru();\n    const isPrice = name === 'pricelist';\n\n    const sendCheck = useExperimentCheckFunction(isPrice);\n\n    const handleClick = useCallback(() => {\n        if (isPrice && isHHRu) {\n            sendCheck('employer_header_price_list_b');\n            sendCheck('employer_header_price_list_c');\n        }\n    }, [isHHRu, isPrice, sendCheck]);\n\n    if (!url) {\n        return null;\n    }\n\n    return (\n        <SupernovaNaviItem active={active} noMobile arrowed={arrowed} {...NAVI_ITEM_PROPS?.[name]}>\n            <SupernovaLink\n                active={active}\n                data-qa={`mainmenu_${name}`}\n                name={name}\n                trackClicks={trackClicks}\n                url={url}\n                onClick={handleClick}\n            >\n                {translations.name}\n                {!!userStat && <SupernovaCounter>{userStat}</SupernovaCounter>}\n            </SupernovaLink>\n            {!arrowed && <div className=\"supernova-navi-underline\">{translations.name}</div>}\n        </SupernovaNaviItem>\n    );\n};\n\nexport default GenericNavItem;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport logSupportButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/menu/menu_support_button_click';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport PersonalManagerPhones from 'lux/components/SupernovaMainMenu/PersonalManagerPhones';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport useGoogleAnalytics from 'lux/components/SupernovaMainMenu/useGoogleAnalytics';\n\nconst Help: React.VFC<NavItem> = ({ name, subItems, translations }) => {\n    const userType = useSelector(({ userType }) => userType);\n    const isZarplata = useIsZarplataPlatform();\n\n    const logGoogleAnalytics = useGoogleAnalytics('help');\n\n    const handleClick = React.useCallback(() => {\n        logSupportButtonClick();\n        logGoogleAnalytics();\n    }, [logGoogleAnalytics]);\n\n    const render = React.useCallback(\n        (onClose: () => void) => {\n            return (\n                <SupernovaDropdownSection support>\n                    {name === 'anonSupport' && isZarplata ? (\n                        <PersonalManagerPhones />\n                    ) : (\n                        <DropdownContent items={subItems} onClose={onClose} />\n                    )}\n                </SupernovaDropdownSection>\n            );\n        },\n        [isZarplata, name, subItems]\n    );\n\n    return (\n        <SupernovaNaviItem noMobile>\n            <SupernovaDropdown\n                activator={\n                    <button\n                        className={classnames({\n                            'supernova-link': userType === UserType.BackOffice,\n                            'supernova-link-switch': userType !== UserType.BackOffice,\n                        })}\n                        data-qa={`mainmenu_${name}`}\n                        type=\"button\"\n                    >\n                        {translations.name}\n                    </button>\n                }\n                activatorClick={handleClick}\n                render={render}\n            />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default Help;\n","import { Fragment, FC, useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaButton from 'lux/components/SupernovaMainMenu/SupernovaButton';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport useGoogleAnalytics from 'lux/components/SupernovaMainMenu/useGoogleAnalytics';\n\nconst sendAnalytics = (vacancyId?: number) => {\n    Analytics.sendHHEventButtonClick('login_button_header', { vacancyId });\n};\n\nconst Login: FC<NavItem> = ({ employer, name, trackClicks, translations, url }) => {\n    const vacancyId = useSelector(\n        ({ postponedActions, vacancyView }) => vacancyView.vacancyId ?? postponedActions?.vacancy?.vacancyId\n    );\n    const analytics = useCallback(() => sendAnalytics(vacancyId), [vacancyId]);\n    const handleClick = useGoogleAnalytics('start_login', analytics);\n\n    return (\n        <Fragment>\n            {employer ? (\n                <SupernovaNaviItem noMobile>\n                    <SupernovaLink\n                        data-qa={`mainmenu_${name}`}\n                        name={name}\n                        onClick={handleClick}\n                        trackClicks={trackClicks}\n                        url={url}\n                    >\n                        {translations.name}\n                    </SupernovaLink>\n                </SupernovaNaviItem>\n            ) : (\n                <SupernovaNaviItem isButton noMobile>\n                    <SupernovaButton\n                        data-qa={name}\n                        name={name}\n                        onClick={handleClick}\n                        trackClicks={trackClicks}\n                        url={url}\n                    >\n                        {translations.name}\n                    </SupernovaButton>\n                </SupernovaNaviItem>\n            )}\n            <SupernovaNaviItem mobile>\n                <SupernovaLink\n                    data-qa=\"mainmenu_profile-link\"\n                    name={name}\n                    onClick={handleClick}\n                    trackClicks={trackClicks}\n                    url={url}\n                >\n                    {translations.name}\n                </SupernovaLink>\n            </SupernovaNaviItem>\n        </Fragment>\n    );\n};\n\nexport default Login;\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const mainMenuItemClick = (item: string): void => {\n    Analytics.sendHHEventButtonClick(`main_menu_item_${item}`);\n};\n\nexport const mainMenuItemsShown = (element: HTMLElement, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: 'main_menu_items',\n        item: items,\n    });\n};\n\nexport const mainMenuSubItemsShown = (items: string[]): void => {\n    Analytics.sendHHEvent('element_shown', {\n        elementName: 'main_menu_sub_items',\n        item: items,\n    });\n};\n\nexport default {\n    mainMenuItemClick,\n    mainMenuItemsShown,\n    mainMenuSubItemsShown,\n};\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport mainMenuAnalytics from 'lux/components/SupernovaMainMenu/analytics';\n\nconst handleLogoClick = () => {\n    mainMenuAnalytics.mainMenuItemClick('logo');\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\ninterface LogoProps {\n    onLightBg: boolean;\n}\n\nconst Logo: FC<LogoProps> = ({ onLightBg }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const logoDomain = useSelector(({ logos }) => logos.logoDomain);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n\n    return (\n        <Link\n            className=\"supernova-logo-wrapper\"\n            to={supernovaUserType === SupernovaUserType.Employer ? '/employer' : '/'}\n            onClick={employerMainPageAnalyticsEnabled ? handleLogoClick : undefined}\n        >\n            <span\n                className={classnames('supernova-logo', {\n                    'supernova-logo_inversed': !onLightBg,\n                    [`supernova-logo_${logoDomain}`]: logoDomain,\n                })}\n                tabIndex={-1}\n            />\n        </Link>\n    );\n};\n\nexport default Logo;\n","import { useCallback, useContext, FC } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { ChatikContext } from '@hh.ru/chatik-integration';\n\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ChatikActivatorMobile: FC<NavItem> = ({ name, translations, ...props }) => {\n    const openChatik = useContext(ChatikContext)?.openChatik;\n    const unreadCount = useSelector(({ chatikCounters }) => chatikCounters.unreadCount);\n\n    const handleClick = useCallback(() => {\n        openChatik?.({ view: 'overlay', resizable: false, draggable: false });\n        Analytics.sendHHEventButtonClick('menu_item', { item: 'chat_list' });\n    }, [openChatik]);\n\n    return (\n        <SupernovaDropdownOption data-qa={`mainmenu_${name}-xs`} name={name} onClick={handleClick} {...props}>\n            {translations.name}\n            {Boolean(unreadCount) && <SupernovaCounter dropdown>{unreadCount || 0}</SupernovaCounter>}\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default ChatikActivatorMobile;\n","import { useState } from 'react';\n\nimport DropInfoInline from 'bloko/blocks/drop/InfoInline';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaButton from 'lux/components/SupernovaMainMenu/SupernovaButton';\n\nconst TrlKeys = {\n    maxResumes: 'resumeList.maxResumes',\n};\n\ntype Props = {\n    url: string;\n    name: string;\n    translations: Record<string, string>;\n    trackClicks?: boolean;\n};\n\nconst CreateResumeMobileButton: TranslatedComponent<Props> = ({ trls, url, name, translations, trackClicks }) => {\n    const [showResumeLimitsMessage, setShowResumeLimitsMessage] = useState(false);\n    const remaining = useSelector(({ resumeLimits }) => resumeLimits?.remaining);\n    const maxResumes = useSelector(({ resumeLimits }) => resumeLimits?.max || 20);\n\n    return (\n        <div className=\"supernova-dropdown-static-option\">\n            {remaining === 0 ? (\n                <DropInfoInline\n                    show={showResumeLimitsMessage}\n                    showCloseButton\n                    onClose={() => setShowResumeLimitsMessage(false)}\n                    render={() => (\n                        <span data-qa=\"max-resume-warning\">\n                            {format(trls[TrlKeys.maxResumes], {\n                                '{0}': maxResumes,\n                            })}\n                        </span>\n                    )}\n                >\n                    <SupernovaButton name={name} primary onClick={() => setShowResumeLimitsMessage(true)}>\n                        {translations.name}\n                    </SupernovaButton>\n                </DropInfoInline>\n            ) : (\n                <SupernovaButton name={name} primary trackClicks={trackClicks} url={url} rel=\"nofollow\">\n                    {translations.name}\n                </SupernovaButton>\n            )}\n        </div>\n    );\n};\n\nexport default translation(CreateResumeMobileButton);\n","import React from 'react';\n\ninterface SupernovaDropdownSectionHeaderProps {\n    onClick: React.MouseEventHandler;\n}\n\nconst SupernovaDropdownSectionHeader: React.FC<SupernovaDropdownSectionHeaderProps & React.PropsWithChildren> = ({\n    children,\n    onClick,\n}) => {\n    return (\n        <div className=\"supernova-dropdown-section-header\">\n            <div className=\"supernova-dropdown-section-header__back\" onClick={onClick} />\n            {children}\n        </div>\n    );\n};\n\nexport default SupernovaDropdownSectionHeader;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AppleBusinessChatComponent from 'lux/components/SupernovaMainMenu/AppleBusinessChatComponent';\nimport AppleBusinessChatContext, {\n    AppleBusinessChatType,\n} from 'lux/components/SupernovaMainMenu/AppleBusinessChatContext';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaDropdownSectionHeader from 'lux/components/SupernovaMainMenu/SupernovaDropdownSectionHeader';\n\ninterface AppleBusinessChatMobileProps {\n    currentScreen: string;\n    setCurrentScreen: (screen: string) => void;\n}\n\nconst TrlKeys = {\n    header: 'supernova.navi.appleBusinessChat',\n};\n\nconst AppleBusinessChatMobile: TranslatedComponent<AppleBusinessChatMobileProps> = ({\n    children,\n    currentScreen,\n    setCurrentScreen,\n    trls,\n}) => {\n    const contextValue = React.useMemo((): AppleBusinessChatType => {\n        return [\n            currentScreen === 'appleBusinessChat',\n            () => {\n                setCurrentScreen('appleBusinessChat');\n            },\n        ];\n    }, [currentScreen, setCurrentScreen]);\n\n    const setSupportScreen = React.useCallback(() => {\n        setCurrentScreen('support');\n    }, [setCurrentScreen]);\n\n    const isEnabled = useSelector(({ appleBusinessChat }) => appleBusinessChat.isEnabled);\n\n    if (!isEnabled) {\n        return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    return (\n        <AppleBusinessChatContext.Provider value={contextValue}>\n            {children}\n            <div\n                className={classnames('supernova-dropdown-mobile-screen', {\n                    'supernova-dropdown-mobile-screen_hidden': currentScreen !== 'appleBusinessChat',\n                })}\n            >\n                <SupernovaDropdownSection>\n                    <SupernovaDropdownSectionHeader onClick={setSupportScreen}>\n                        {trls[TrlKeys.header]}\n                    </SupernovaDropdownSectionHeader>\n                </SupernovaDropdownSection>\n                <SupernovaDropdownSection>\n                    <AppleBusinessChatComponent />\n                </SupernovaDropdownSection>\n            </div>\n        </AppleBusinessChatContext.Provider>\n    );\n};\n\nexport default translation(AppleBusinessChatMobile);\n","import React, { PropsWithChildren, ReactElement } from 'react';\nimport classnames from 'classnames';\n\nimport Column from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AreaSwitcher from 'lux/components/AreaSwitcher';\nimport translation from 'lux/components/translation';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport AppleBusinessChatMobile from 'lux/components/SupernovaMainMenu/AppleBusinessChatMobile';\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaDropdownSectionHeader from 'lux/components/SupernovaMainMenu/SupernovaDropdownSectionHeader';\n\ninterface MobileScreenProps {\n    currentScreen: string;\n    setCurrentScreen: (screen: string) => void;\n    setDefaultScreen: () => void;\n    close: () => void;\n}\n\nconst TrlKeys = {\n    areaSwitcher: 'supernova.navi.areaSwitcher',\n};\n\nconst MobileScreen: TranslatedComponent<MobileScreenProps & NavItem> = ({\n    currentScreen,\n    name,\n    setCurrentScreen,\n    setDefaultScreen,\n    subItems,\n    close,\n    trls,\n}) => {\n    const Wrapper = React.useCallback<(args: { name: string; header: string } & PropsWithChildren) => ReactElement>(\n        ({ children, header, name }) => (\n            <div\n                className={classnames('supernova-dropdown-mobile-screen', {\n                    'supernova-dropdown-mobile-screen_hidden': name !== currentScreen,\n                })}\n            >\n                <SupernovaDropdownSection>\n                    <SupernovaDropdownSectionHeader onClick={setDefaultScreen}>{header}</SupernovaDropdownSectionHeader>\n                </SupernovaDropdownSection>\n                {children}\n            </div>\n        ),\n        [currentScreen, setDefaultScreen]\n    );\n\n    switch (name) {\n        case 'areaSwitcher':\n            return (\n                <Wrapper header={trls[TrlKeys.areaSwitcher]} name={name}>\n                    <SupernovaDropdownSection>\n                        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                            <VSpacing base={6} />\n                            <AreaSwitcher isDropdown />\n                        </Column>\n                    </SupernovaDropdownSection>\n                </Wrapper>\n            );\n        case 'mainContent':\n            return (\n                <React.Fragment>\n                    {subItems?.map((item) => {\n                        switch (item.name) {\n                            case 'help':\n                            case 'anonSupport':\n                                return (\n                                    <Wrapper key={item.name} header={item.translations.name} name={item.name}>\n                                        <DropdownContent items={item.subItems} />\n                                    </Wrapper>\n                                );\n                            case 'support':\n                                return (\n                                    <AppleBusinessChatMobile\n                                        key={item.name}\n                                        currentScreen={currentScreen}\n                                        setCurrentScreen={setCurrentScreen}\n                                    >\n                                        <Wrapper header={item.translations.name} name={item.name}>\n                                            <DropdownContent item={item} />\n                                        </Wrapper>\n                                    </AppleBusinessChatMobile>\n                                );\n                            case 'userNotifications':\n                                return (\n                                    <Wrapper key={item.name} header={item.translations.name} name={item.name}>\n                                        <DropdownContent\n                                            item={item}\n                                            visible={currentScreen === 'userNotifications'}\n                                            onClose={close}\n                                        />\n                                    </Wrapper>\n                                );\n                            default:\n                                if (!item.dropdown) {\n                                    return null;\n                                }\n\n                                return (\n                                    <Wrapper key={item.name} header={item.translations.name} name={item.name}>\n                                        <SupernovaDropdownSection mainContent>\n                                            <DropdownContent items={item.subItems} />\n                                        </SupernovaDropdownSection>\n                                    </Wrapper>\n                                );\n                        }\n                    })}\n                </React.Fragment>\n            );\n        default:\n            return null;\n    }\n};\n\nexport default translation(MobileScreen);\n","import React from 'react';\n\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { NavItems } from 'lux/models/supernovaNaviMenu';\n\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\n\ninterface MobileServiceProps {\n    items?: NavItems;\n}\n\nconst MobileServices: React.VFC<MobileServiceProps> = ({ items }) => {\n    const filteredItems = items?.filter(({ name, subItems }) => {\n        return name !== 'employerProjects.selected' && subItems?.length;\n    });\n    return (\n        <React.Fragment>\n            {filteredItems?.map(({ name, subItems, translations }, index) => {\n                return (\n                    <React.Fragment key={name}>\n                        <SupernovaDropdownOption Element=\"div\" name={name}>\n                            <H2>{translations.name}</H2>\n                        </SupernovaDropdownOption>\n                        {subItems?.map(({ name, translations, ...props }) => (\n                            <SupernovaDropdownOption key={name} name={name} {...props}>\n                                {translations.name}\n                            </SupernovaDropdownOption>\n                        ))}\n                        {index !== filteredItems.length - 1 && <VSpacing base={6} />}\n                    </React.Fragment>\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default MobileServices;\n","import { FC, useCallback, PropsWithChildren } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\ninterface UserNotificationsMenuItemProps extends NavItem {\n    onClick: () => void;\n    unreadCount: number;\n}\n\nconst UserNotificationsMenuItem: FC<UserNotificationsMenuItemProps & PropsWithChildren> = ({\n    name,\n    translations,\n    unreadCount,\n    onClick,\n    ...props\n}) => {\n    const handleClick = useCallback(() => {\n        onClick();\n        Analytics.sendHHEventButtonClick('menu_item', { item: 'notification_list' });\n    }, [onClick]);\n\n    return (\n        <SupernovaDropdownOption data-qa={`mainmenu_${name}-xs`} name={name} onClick={handleClick} {...props}>\n            {translations.name}\n            {unreadCount > 0 && <SupernovaCounter dropdown>{unreadCount}</SupernovaCounter>}\n        </SupernovaDropdownOption>\n    );\n};\n\nexport default UserNotificationsMenuItem;\n","import { useCallback, useState, useEffect, Dispatch, SetStateAction, FC } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport { Breakpoint } from 'bloko/common/media';\nimport { Placement } from 'bloko/common/metrics';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ChatikActivatorMobile from 'lux/components/SupernovaMainMenu/ChatikActivator/ChatikActivatorMobile';\nimport CreateResumeMobileButton from 'lux/components/SupernovaMainMenu/CreateResumeButton';\nimport MobileScreen from 'lux/components/SupernovaMainMenu/MobileScreen';\nimport MobileServices from 'lux/components/SupernovaMainMenu/MobileServices';\nimport SupernovaButton from 'lux/components/SupernovaMainMenu/SupernovaButton';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownOption from 'lux/components/SupernovaMainMenu/SupernovaDropdownOption';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport UserNotificationsMenuItem from 'lux/components/SupernovaMainMenu/UserNotifications/Mobile/MenuItem';\nimport useNotifications from 'lux/components/SupernovaMainMenu/UserNotifications/useNotifications';\n\nconst ARROW_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\nconst FULL_WIDTH_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\n\nconst Mobile: FC<NavItem & { setExpanded: Dispatch<SetStateAction<boolean>>; isExpanded: boolean }> = ({\n    name,\n    analytics,\n    subItems,\n    trackClicks,\n    isExpanded,\n    setExpanded,\n}) => {\n    const [currentScreen, setCurrentScreen] = useState('default');\n    const isApplicant = useSelector(({ userType }) => UserType.Applicant === userType);\n    const { unreadNotificationsCount } = useNotifications();\n\n    const setDefaultScreen = useCallback(() => {\n        setExpanded(false);\n        setCurrentScreen('default');\n    }, [setExpanded, setCurrentScreen]);\n\n    const handleAreaSwitchClick = useCallback(() => {\n        setCurrentScreen('areaSwitcher');\n\n        Analytics.sendHHEventButtonClick('vacancy_search_region');\n    }, []);\n\n    useEffect(() => {\n        if (isExpanded) {\n            Analytics.sendHHEvent('screen_shown', {\n                screenName: 'menu',\n                hhtmSource: 'menu',\n            });\n        }\n    }, [isExpanded]);\n\n    const render = useCallback(\n        (close: VoidFunction) => {\n            return (\n                <div className=\"supernova-dropdown-mobile-screens-wrapper\">\n                    <div\n                        className={classnames('supernova-dropdown-mobile-screen', {\n                            'supernova-dropdown-mobile-screen_hidden': currentScreen !== 'default',\n                        })}\n                    >\n                        {subItems?.map(({ name, subItems, trackClicks, trackElementShown, translations }) => {\n                            switch (name) {\n                                case 'areaSwitcher':\n                                    return (\n                                        <SupernovaDropdownSection key={name}>\n                                            <NoIndex>\n                                                <SupernovaDropdownOption\n                                                    data-qa=\"mainmenu_areaSwitcher-xs\"\n                                                    name={name}\n                                                    onClick={handleAreaSwitchClick}\n                                                    trackClicks={trackClicks}\n                                                    trackElementShown={trackElementShown}\n                                                >\n                                                    {translations.name}\n                                                    <span>&#160;</span>\n                                                    <Icon\n                                                        initial={IconColor.Gray50}\n                                                        view={IconView.Location}\n                                                        scale={IconScale.Small}\n                                                    />\n                                                </SupernovaDropdownOption>\n                                            </NoIndex>\n                                        </SupernovaDropdownSection>\n                                    );\n                                case 'applicantServices':\n                                case 'employerProjects':\n                                    return (\n                                        <SupernovaDropdownSection key={name} services>\n                                            <MobileServices items={subItems} />\n                                        </SupernovaDropdownSection>\n                                    );\n                                case 'mainContent':\n                                    return (\n                                        <SupernovaDropdownSection key={name} mainContent>\n                                            {subItems?.map(\n                                                ({\n                                                    counter,\n                                                    dropdown,\n                                                    name,\n                                                    trackClicks,\n                                                    trackElementShown,\n                                                    analytics,\n                                                    translations,\n                                                    url,\n                                                }) => {\n                                                    switch (name) {\n                                                        case 'chatikActivator':\n                                                            return (\n                                                                <ChatikActivatorMobile\n                                                                    key={name}\n                                                                    name={name}\n                                                                    trackClicks={trackClicks}\n                                                                    trackElementShown={trackElementShown}\n                                                                    translations={translations}\n                                                                    url={url}\n                                                                />\n                                                            );\n                                                        case 'userNotifications':\n                                                            return (\n                                                                <UserNotificationsMenuItem\n                                                                    key={name}\n                                                                    name={name}\n                                                                    trackClicks={trackClicks}\n                                                                    trackElementShown={trackElementShown}\n                                                                    translations={translations}\n                                                                    url={url}\n                                                                    onClick={() => void setCurrentScreen(name)}\n                                                                    unreadCount={unreadNotificationsCount}\n                                                                />\n                                                            );\n                                                        case 'createResume':\n                                                            return (\n                                                                <CreateResumeMobileButton\n                                                                    key={name}\n                                                                    name={name}\n                                                                    url={url}\n                                                                    trackClicks={trackClicks}\n                                                                    translations={translations}\n                                                                />\n                                                            );\n                                                        case 'promo':\n                                                        case 'signup':\n                                                            return (\n                                                                <div\n                                                                    key={name}\n                                                                    className=\"supernova-dropdown-static-option\"\n                                                                >\n                                                                    <SupernovaButton\n                                                                        name={name}\n                                                                        primary\n                                                                        trackClicks={trackClicks}\n                                                                        url={url}\n                                                                        rel=\"nofollow\"\n                                                                    >\n                                                                        {translations.name}\n                                                                    </SupernovaButton>\n                                                                </div>\n                                                            );\n                                                        default:\n                                                            return (\n                                                                <SupernovaDropdownOption\n                                                                    key={name}\n                                                                    counter={counter}\n                                                                    data-qa={`mainmenu_${name}-xs`}\n                                                                    name={name}\n                                                                    analytics={analytics}\n                                                                    onClick={\n                                                                        dropdown\n                                                                            ? () => void setCurrentScreen(name)\n                                                                            : close\n                                                                    }\n                                                                    trackClicks={trackClicks}\n                                                                    trackElementShown={trackElementShown}\n                                                                    url={dropdown ? undefined : url}\n                                                                >\n                                                                    {translations.name}\n                                                                </SupernovaDropdownOption>\n                                                            );\n                                                    }\n                                                }\n                                            )}\n                                        </SupernovaDropdownSection>\n                                    );\n                                default:\n                                    return null;\n                            }\n                        })}\n                    </div>\n                    {subItems?.map((item) => {\n                        return (\n                            <MobileScreen\n                                key={item.name}\n                                currentScreen={currentScreen}\n                                setCurrentScreen={setCurrentScreen}\n                                setDefaultScreen={setDefaultScreen}\n                                close={close}\n                                {...item}\n                            />\n                        );\n                    })}\n                </div>\n            );\n        },\n        [currentScreen, handleAreaSwitchClick, setDefaultScreen, subItems, unreadNotificationsCount]\n    );\n\n    /** Для соискателя на XS экранах уведомления прячутся в бургер меню, поэтому на нем нужно показать каунтер */\n    const shouldShowCounter = isApplicant && unreadNotificationsCount > 0;\n\n    return (\n        <SupernovaNaviItem mobile>\n            <SupernovaDropdown\n                activator={\n                    <SupernovaIcon\n                        data-qa={`mainmenu_${name}`}\n                        name={name}\n                        analytics={analytics}\n                        trackClicks={trackClicks}\n                        view={SupernovaIconView.Mobile}\n                        data-page-analytics-event=\"menu\"\n                    >\n                        {shouldShowCounter && <SupernovaCounter dotOnly forIcon />}\n                    </SupernovaIcon>\n                }\n                anchorFullHeight\n                arrowBreakpoints={ARROW_BREAKPOINTS}\n                fullWidthBreakpoints={FULL_WIDTH_BREAKPOINTS}\n                onClose={setDefaultScreen}\n                onShown={() => setExpanded(true)}\n                placement={Placement.BottomEnd}\n                render={render}\n            />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default Mobile;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst MyResumes: React.VFC<NavItem> = ({ active, counter, name, trackClicks, translations, url }) => {\n    const applicantInfo = useSelector(({ applicantInfo }) => applicantInfo);\n    const userStat = useSelector(({ userStats }) => (counter && userStats ? userStats[counter] : null));\n\n    return (\n        <SupernovaNaviItem active={active} noMobile noSmallScreen={applicantInfo.total === 0}>\n            <SupernovaLink\n                active={active}\n                data-page-analytics-event=\"resume_list_header\"\n                data-qa={`mainmenu_${name}`}\n                name={name}\n                trackClicks={trackClicks}\n                url={url}\n            >\n                {translations.name}\n                {!!userStat && <SupernovaCounter>•</SupernovaCounter>}\n            </SupernovaLink>\n            <div className=\"supernova-navi-underline\">{translations.name}</div>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default MyResumes;\n","import React from 'react';\n\nimport { Breakpoint } from 'bloko/common/media';\n\nimport useExperimentCheckFunction from 'lux/hooks/useExperimentCheckFunction';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsHhru } from 'lux/hooks/useSites';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport mainMenuAnalytics from 'lux/components/SupernovaMainMenu/analytics';\n\nconst NAVI_ITEM_PROPS: Record<string, Record<string, unknown>> = {\n    employerServices: {\n        noSmallScreen: true,\n    },\n    pricelist: {\n        noSmallScreen: true,\n    },\n};\n\nconst DROPDOWN_PROPS: Record<string, Record<string, unknown>> = {\n    applicants: {\n        arrowBreakpoints: [Breakpoint.XS, Breakpoint.S],\n    },\n    vacancy: {\n        arrowBreakpoints: [Breakpoint.XS, Breakpoint.S],\n    },\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst NavItemWithDropdown: React.VFC<NavItem> = ({ active, counter, name, subItems, translations }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const userStat = useSelector(({ userStats }) => counter && userStats?.[counter]);\n\n    const isPrice = name === 'pricelist';\n    const sendCheck = useExperimentCheckFunction(isPrice);\n    const isHHRu = useIsHhru();\n\n    const render = React.useCallback(() => {\n        return (\n            <SupernovaDropdownSection mainContent>\n                <DropdownContent items={subItems} />\n            </SupernovaDropdownSection>\n        );\n    }, [subItems]);\n\n    const handleSubMenuItemsShown = () => {\n        if (!subItems?.length) {\n            return;\n        }\n\n        if (employerMainPageAnalyticsEnabled) {\n            const subMenuItems = subItems.map((item) => item.name);\n            mainMenuAnalytics.mainMenuSubItemsShown(subMenuItems);\n        }\n\n        if (isPrice && isHHRu) {\n            sendCheck('employer_header_price_list_b');\n            sendCheck('employer_header_price_list_c');\n        }\n    };\n\n    return (\n        <SupernovaNaviItem active={active} noMobile {...NAVI_ITEM_PROPS?.[name]}>\n            <SupernovaDropdown\n                activator={\n                    <button className=\"supernova-link\" data-qa={`mainmenu_${name}`} type=\"button\">\n                        {translations.name}\n                        {!!userStat && <SupernovaCounter>{userStat}</SupernovaCounter>}\n                    </button>\n                }\n                anchorFullHeight\n                render={render}\n                onShown={handleSubMenuItemsShown}\n                {...DROPDOWN_PROPS?.[name]}\n            />\n            <div className=\"supernova-navi-underline\">{translations.name}</div>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default NavItemWithDropdown;\n","import classnames from 'classnames';\n\nimport Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\n\nimport { SupernovaSearchBaseState } from 'lux/components/SupernovaSearch/useSearchBaseState';\n\nconst TrlKeys = {\n    [SupernovaSearchName.Vacancies]: 'navi.search.tab.searchVacancy',\n    [SupernovaSearchName.Resumes]: 'navi.search.tab.resumeSearch',\n    [SupernovaSearchName.Employers]: 'navi.search.tab.employersList',\n};\n\nconst SearchTabs: TranslatedComponent<SupernovaSearchBaseState> = ({\n    searchName,\n    setSearchName,\n    supernovaSearchName,\n    isEmployerSearch,\n    trls,\n}) => {\n    if (supernovaSearchName === null || isEmployerSearch) {\n        return null;\n    }\n\n    return (\n        <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n            {[SupernovaSearchName.Vacancies, SupernovaSearchName.Resumes, SupernovaSearchName.Employers].map((name) => (\n                <div\n                    className={classnames('supernova-navi-search-tab', {\n                        'supernova-navi-search-tab_active': name === searchName,\n                    })}\n                    key={name}\n                    onClick={() => setSearchName(name)}\n                    data-hh-tab-id={name}\n                >\n                    {trls[TrlKeys[name]]}\n                </div>\n            ))}\n        </Column>\n    );\n};\n\nexport default translation(SearchTabs);\n","import { MutableRefObject } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport { FormItem } from 'bloko/blocks/form';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AdvancedSearchButton from 'lux/components/SupernovaSearch/AdvancedSearchButton';\nimport SearchButton from 'lux/components/SupernovaSearch/SearchButton';\nimport SearchNameSelect from 'lux/components/SupernovaSearch/SearchNameSelect';\nimport { SupernovaSearchBaseState } from 'lux/components/SupernovaSearch/useSearchBaseState';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\nconst TrlKeys = {\n    addField: 'resumesSearch.advanced.addField',\n};\n\ninterface NaviSearchEmployerButtonsProps {\n    searchBaseState: SupernovaSearchBaseState;\n    addQueryRef: MutableRefObject<(() => void) | undefined>;\n}\n\nconst NaviSearchEmployerButtons: TranslatedComponent<NaviSearchEmployerButtonsProps> = ({\n    trls,\n    searchBaseState,\n    addQueryRef,\n}) => {\n    const isZarplata = useIsZarplataPlatform();\n    return (\n        // eslint-disable-next-line local-rules/bloko-no-class-name-literals\n        <div className={classnames('supernova-navi-search', { 'bloko-zp-bright': isZarplata })}>\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <VSpacing base={5} xs={0} />\n                    <div className=\"supernova-navi-search-form-bottom\">\n                        <div className=\"supernova-navi-search-form-bottom__section supernova-navi-search-form-bottom__section_spaced\">\n                            <FormItem baseline>\n                                <BlokoLink\n                                    appearance={LinkAppearance.Pseudo}\n                                    onClick={() => addQueryRef.current && addQueryRef.current()}\n                                    data-qa=\"resumes-search-wizard-add-item\"\n                                >\n                                    {trls[TrlKeys.addField]}\n                                </BlokoLink>\n                            </FormItem>\n                            <FormItem baseline>\n                                <div className=\"supernova-navi-advanced-search-inline\">\n                                    <AdvancedSearchButton {...searchBaseState} />\n                                </div>\n                            </FormItem>\n                        </div>\n                        <VSpacing base={3} />\n                        <div className=\"horizontal-divider\" />\n                        <VSpacing base={5} />\n                        <div className=\"supernova-navi-search-form-bottom__section supernova-navi-search-form-bottom__section_flexible\">\n                            <SearchNameSelect {...searchBaseState} />\n                            <div\n                                className=\"supernova-search-group__submit supernova-search-group__submit_single\"\n                                data-qa=\"search-button\"\n                            >\n                                <SearchButton employerSearch large={false} />\n                            </div>\n                        </div>\n                    </div>\n                    <VSpacing base={5} />\n                </Column>\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default translation(NaviSearchEmployerButtons);\n","import { useRef } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport BlokoLink, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport SearchQueries from 'lux/components/ResumeAdvancedSearch/SearchQueries';\nimport SupernovaSearch from 'lux/components/SupernovaSearch';\nimport AdvancedSearchButton from 'lux/components/SupernovaSearch/AdvancedSearchButton';\nimport AreaSwitcherModal from 'lux/components/SupernovaSearch/AreaSwitcherModal';\nimport HiddenFields from 'lux/components/SupernovaSearch/HiddenFields';\nimport SearchTabs from 'lux/components/SupernovaSearch/SearchTabs';\nimport VacancySavedSearchButton from 'lux/components/SupernovaSearch/VacancySavedSearchButton';\nimport useSearchBaseState from 'lux/components/SupernovaSearch/useSearchBaseState';\nimport useSearchNavItemProps from 'lux/components/SupernovaSearch/useSearchNavItemProps';\nimport SearchViewSwitcher from 'lux/components/VacancySearchContent/components/SearchViewSwitcher';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport NaviSearchEmployerButtons from 'lux/components/SupernovaMainMenu/NaviSearchEmployerButtons';\n\nconst TrlKeys = {\n    areaSwitcherModalTrigger: 'index.dashboard.in',\n};\n\nconst NaviSearch: TranslatedComponent = ({ trls }) => {\n    const showResumeSearchConditions = useSelector(({ showResumeSearchConditions }) => showResumeSearchConditions);\n    const supernovaSearchLargeXS = useSelector(({ supernovaSearchView }) => supernovaSearchView.largeXS);\n    const searchBaseState = useSearchBaseState();\n    const addQueryRef = useRef<() => void>();\n    const searchProps = useSearchNavItemProps(searchBaseState.searchName);\n    const isZarplata = useIsZarplataPlatform();\n    const [areaSwitchVisible, setAreaSwitchVisible, setAreaSwitchHidden] = useOnOffState(false);\n    const { translations } = useSelector(({ supernovaSearchArea }) => supernovaSearchArea);\n    const { pathname } = useSelector(({ router }) => router.location);\n    const resumeSearchQueriesCount =\n        useSelector(({ resumeSearchResult }) => resumeSearchResult.criteria?.text?.length) || 0;\n    const isXs = useBreakpoint(Breakpoint.M) === Breakpoint.XS;\n\n    const textConditionsCount = useSelector(({ resumeSearchResult }) =>\n        resumeSearchResult.criteria?.text?.length ? resumeSearchResult.criteria.text.length - 1 : 0\n    );\n    const isAdvancedSearchButtonShownInSupernova = isXs && !showResumeSearchConditions && textConditionsCount > 0;\n    const showAdvancedSearchButton =\n        !isAdvancedSearchButtonShownInSupernova &&\n        (showResumeSearchConditions ||\n            (searchBaseState.isEmployerSearch && searchBaseState.searchName !== SupernovaSearchName.Employers) ||\n            searchBaseState.searchName === SupernovaSearchName.Resumes);\n\n    if (showResumeSearchConditions) {\n        return (\n            <Form action={searchProps?.action} method=\"GET\">\n                <HiddenFields searchName={searchBaseState.searchName} />\n                <div className=\"supernova-navi-search supernova-navi-search_multi-search\">\n                    <ColumnsWrapper>\n                        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                            <div className=\"supernova-navi-search-form-top\">\n                                <SearchQueries isNaviSearch addQueryRef={addQueryRef} />\n                            </div>\n                        </Column>\n                    </ColumnsWrapper>\n                </div>\n                <NaviSearchEmployerButtons searchBaseState={searchBaseState} addQueryRef={addQueryRef} />\n            </Form>\n        );\n    }\n\n    const isEmployerSearchWithHiddenQueries = searchBaseState.isEmployerSearch && resumeSearchQueriesCount - 1 > 0;\n    return (\n        <div\n            className={classnames('supernova-navi-search', {\n                'search-xs-hidden': supernovaSearchLargeXS,\n                // eslint-disable-next-line local-rules/bloko-no-class-name-literals\n                'bloko-zp-bright': isZarplata,\n            })}\n        >\n            <ColumnsWrapper>\n                <div className=\"supernova-navi-search-columns\">\n                    <Column xs=\"4\" s=\"5\" m=\"9\" l=\"10\">\n                        <div className=\"supernova-navi-search-form\">\n                            <SupernovaSearch {...searchBaseState} />\n                        </div>\n                    </Column>\n                    {showAdvancedSearchButton && (\n                        <Column xs={isEmployerSearchWithHiddenQueries ? '0' : '4'} s=\"3\" m=\"3\" l=\"6\">\n                            <div className=\"supernova-navi-advanced-search\">\n                                <AdvancedSearchButton {...searchBaseState} />\n                            </div>\n                        </Column>\n                    )}\n                    {!isXs && (\n                        <div className=\"supernova-navi-search-saved-search\">\n                            <VacancySavedSearchButton searchName={searchBaseState.searchName} />\n                        </div>\n                    )}\n                </div>\n                <SearchTabs {...searchBaseState} />\n                {searchBaseState.supernovaSearchName &&\n                    !searchBaseState.isEmployerSearch &&\n                    pathname !== paths.vacancySearchMap && (\n                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                            <div className=\"supernova-navi-search-region\">\n                                <Text>\n                                    {trls[TrlKeys.areaSwitcherModalTrigger]}\n                                    <BlokoLink\n                                        Element=\"button\"\n                                        appearance={LinkAppearance.Pseudo}\n                                        kind={LinkKind.Tertiary}\n                                        onClick={setAreaSwitchVisible}\n                                        data-qa=\"vacancy-search-region-activator\"\n                                        data-page-analytics-event=\"vacancy_search_region\"\n                                    >\n                                        {translations.area}\n                                    </BlokoLink>\n                                </Text>\n                                <AreaSwitcherModal visible={areaSwitchVisible} onClose={setAreaSwitchHidden} />\n                                <SearchViewSwitcher />\n                            </div>\n                        </Column>\n                    )}\n            </ColumnsWrapper>\n        </div>\n    );\n};\n\nexport default translation(NaviSearch);\n","import { Dispatch, SetStateAction, useContext } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics, { VendorAnalytics } from '@hh.ru/analytics-js';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport HiddenFields from 'lux/components/SupernovaSearch/HiddenFields';\nimport translation from 'lux/components/translation';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport useExperimentCheckFunction from 'lux/hooks/useExperimentCheckFunction';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport IsDashboardContext from 'lux/components/SupernovaMainMenu/IsDashboardContext';\n\nconst TrlKeys = {\n    searchText: 'supernova.navi.jobSearch.1',\n};\n\nconst sendAnalytics = () => Analytics.sendHHEventButtonClick('search_header');\n\nconst sendGoogleEvent = (userType: UserType) => VendorAnalytics.eventToStorage(userType, 'header_new', 'search');\n\nconst SEARCH_ENTRY_POINT_EXP_NAME = 'search-entry-point_empl_1';\n\nconst Search: TranslatedComponent<{ setExpanded: Dispatch<SetStateAction<boolean>> }> = ({ trls, setExpanded }) => {\n    const supernovaSearchView = useSelector(({ supernovaSearchView }) => supernovaSearchView);\n    const searchName = useSelector(({ supernovaSearchName }) => supernovaSearchName);\n    const userType = useSelector(({ userType }) => userType);\n    const isDashboard = useContext(IsDashboardContext);\n    const isEmployer = userType === UserType.Employer;\n    const isSearchExp = useExperiment(SEARCH_ENTRY_POINT_EXP_NAME, isEmployer, false);\n    const sendSearchExpCheck = useExperimentCheckFunction(isEmployer);\n    const shouldRenderSearchForm = isSearchExp && !supernovaSearchView.expanded;\n\n    const handleClick = () => {\n        sendAnalytics();\n        sendGoogleEvent(userType);\n\n        if (!supernovaSearchView.expanded) {\n            sendSearchExpCheck(SEARCH_ENTRY_POINT_EXP_NAME);\n        }\n\n        if (!shouldRenderSearchForm && !searchName) {\n            setExpanded((expanded) => !expanded);\n        }\n    };\n\n    const buttonContent = (\n        <>\n            <span className=\"supernova-icon supernova-icon_search\" />\n            <span className=\"supernova-navi-search-text\">\n                {'\\u00a0'}\n                {!searchName && <span className=\"supernova-link-switch\">{trls[TrlKeys.searchText]}</span>}\n                {searchName && trls[TrlKeys.searchText]}\n            </span>\n        </>\n    );\n\n    if (supernovaSearchView.large) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames('supernova-navi-item supernova-navi-item_lvl-2 supernova-navi-item_search', {\n                'supernova-navi-item_desktop': supernovaSearchView.largeXS,\n                'supernova-navi-item_dashboard': isDashboard,\n            })}\n        >\n            <span className=\"supernova-icon-dynamic\">\n                {shouldRenderSearchForm ? (\n                    <Form action=\"/search/resume\" method=\"GET\">\n                        <button\n                            className=\"supernova-icon-link-switch\"\n                            data-qa=\"supernova-search\"\n                            onClick={handleClick}\n                            onKeyDown={() => sendGoogleEvent(userType)}\n                            type=\"submit\"\n                        >\n                            {buttonContent}\n                        </button>\n\n                        <HiddenFields searchName={SupernovaSearchName.Resumes} />\n                    </Form>\n                ) : (\n                    <button\n                        className=\"supernova-icon-link-switch\"\n                        data-qa=\"supernova-search\"\n                        onClick={handleClick}\n                        onKeyDown={() => sendGoogleEvent(userType)}\n                    >\n                        {buttonContent}\n                    </button>\n                )}\n            </span>\n        </div>\n    );\n};\n\nexport default translation(Search);\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaButton from 'lux/components/SupernovaMainMenu/SupernovaButton';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst Signup: React.VFC<NavItem> = ({ name, trackClicks, translations, url }) => {\n    const userType = useSelector(({ userType }) => userType);\n\n    return (\n        <SupernovaNaviItem isButton noMobile>\n            <SupernovaButton\n                data-qa={name}\n                name={name}\n                secondary={userType !== UserType.NedoUser}\n                tinted\n                trackClicks={trackClicks}\n                url={url}\n            >\n                {translations.name}\n            </SupernovaButton>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default Signup;\n","import React from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Menu, { MenuPlacement } from 'bloko/blocks/drop/Menu';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AppleBusinessChatComponent from 'lux/components/SupernovaMainMenu/AppleBusinessChatComponent';\nimport AppleBusinessChatContext from 'lux/components/SupernovaMainMenu/AppleBusinessChatContext';\n\nconst sendCloseAnalytics = () => {\n    Analytics.sendHHEventButtonClick('help_menu_apple_business_chat_close');\n};\n\nconst render = () => {\n    return (\n        <div className=\"supernova-apple-business-chat\">\n            <AppleBusinessChatComponent />\n        </div>\n    );\n};\n\nconst AppleBusinessChatMenu: React.FC<React.PropsWithChildren> = ({ children }) => {\n    const contextValue = React.useState(false);\n\n    const isEnabled = useSelector(({ appleBusinessChat }) => appleBusinessChat.isEnabled);\n\n    if (!isEnabled) {\n        return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    return (\n        <Menu\n            onClose={sendCloseAnalytics}\n            onlySetPlacement\n            placement={MenuPlacement.RightStart}\n            render={render}\n            show={contextValue[0]}\n        >\n            <AppleBusinessChatContext.Provider value={contextValue}>{children}</AppleBusinessChatContext.Provider>\n        </Menu>\n    );\n};\n\nexport default AppleBusinessChatMenu;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\n\nimport AppleBusinessChatMenu from 'lux/components/SupernovaMainMenu/AppleBusinessChatMenu';\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport useGoogleAnalytics from 'lux/components/SupernovaMainMenu/useGoogleAnalytics';\nimport useTrackClicks from 'lux/components/SupernovaMainMenu/useTrackClicks';\n\nconst Support: React.VFC<NavItem> = (props) => {\n    const handleClick = useGoogleAnalytics('help');\n    const handleTrackClick = useTrackClicks(props.name, props.trackClicks, handleClick, props.analytics);\n\n    const render = (onClose: () => void) => {\n        return (\n            <AppleBusinessChatMenu>\n                <DropdownContent item={props} onClose={onClose} />\n            </AppleBusinessChatMenu>\n        );\n    };\n\n    return (\n        <SupernovaNaviItem noMobile noSmallScreen>\n            <SupernovaDropdown\n                activator={\n                    <button className=\"supernova-link\" data-qa={`mainmenu_${props.name}`} type=\"button\">\n                        {props.translations.name}\n                    </button>\n                }\n                activatorClick={handleTrackClick}\n                anchorFullHeight\n                render={render}\n            />\n            <div className=\"supernova-navi-underline\">{props.translations.name}</div>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default Support;\n","import React from 'react';\n\nimport { CreateSupportChatInstance, SupportChatInstance } from 'HHC/SupportChat';\n\nexport interface UseSupportChatType {\n    chatInstance: React.RefObject<SupportChatInstance | undefined>;\n    isActive: boolean;\n}\n\nexport interface UseSupportChatFunction {\n    (postfix: string, shouldRender?: boolean): UseSupportChatType;\n}\n\ninterface SupportChatContextType extends UseSupportChatType {\n    setShouldRender: (shouldRender: boolean) => void;\n}\n\nexport const SupportChatContext = React.createContext<SupportChatContextType>({\n    chatInstance: { current: null },\n    isActive: false,\n    setShouldRender: () => null,\n});\n\nconst useSupportChat: UseSupportChatFunction = (postfix: string, shouldRender = true) => {\n    const chatInstance = React.useRef<SupportChatInstance>();\n    const [isActive, setActive] = React.useState(false);\n\n    React.useEffect(() => {\n        if (!shouldRender) {\n            return () => null;\n        }\n\n        chatInstance.current =\n            chatInstance.current ||\n            CreateSupportChatInstance(postfix, {\n                onOnlineOperatorsAppear: () => setActive(true),\n                onOnlineOperatorsLeave: () => setActive(false),\n            });\n        return () => {\n            chatInstance.current && chatInstance.current.unsubscribe();\n        };\n    }, [shouldRender, postfix, setActive]);\n\n    return { chatInstance, isActive };\n};\n\nexport default useSupportChat;\n","import React from 'react';\n\nimport useSupportChat, { SupportChatContext } from 'lux/components/SupportChat/useSupportChat';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst Features = {\n    dedicatedAdminWebimLocationInHelp: 'dedicated_admin_webim_location_in_help',\n};\n\nconst SupportChatProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const userType = useSelector(({ userType }) => userType);\n    const dedicatedAdminWebimLocationInHelp = useSelector(\n        ({ features }) => features[Features.dedicatedAdminWebimLocationInHelp]\n    );\n\n    const [shouldRender, setShouldRender] = React.useState(userType !== UserType.Anonymous);\n\n    let postfix =\n        userType === UserType.Anonymous && supernovaUserType === SupernovaUserType.Employer\n            ? '_employer_menu'\n            : '_menu';\n    if (dedicatedAdminWebimLocationInHelp) {\n        postfix = '';\n    }\n    const { chatInstance, isActive } = useSupportChat(postfix, shouldRender);\n\n    return (\n        <SupportChatContext.Provider value={{ chatInstance, isActive, setShouldRender }}>\n            {children}\n        </SupportChatContext.Provider>\n    );\n};\n\nexport default SupportChatProvider;\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Placement } from 'bloko/common/metrics';\n\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Content from 'lux/components/SupernovaMainMenu/UserNotifications/Content';\nimport useNotifications from 'lux/components/SupernovaMainMenu/UserNotifications/useNotifications';\n\nconst UserNotifications: FC<NavItem> = ({ name, trackClicks }) => {\n    const { userNotifications, markNotificationsAsViewed } = useNotifications();\n    const hasUnreadNotifications = userNotifications.some(({ viewed }) => !viewed);\n    const isApplicant = useSelector(({ userType }) => UserType.Applicant === userType);\n\n    return (\n        <SupernovaNaviItem noMobile={isApplicant}>\n            <SupernovaDropdown\n                onShown={markNotificationsAsViewed}\n                activator={\n                    <SupernovaIcon\n                        data-page-analytics-event=\"notification_list_header\"\n                        data-qa=\"mainmenu_notifications\"\n                        name={name}\n                        trackClicks={trackClicks}\n                        view={SupernovaIconView.UserNotifications}\n                    >\n                        <span\n                            className={classnames(\n                                'supernova-navi-counter supernova-navi-counter_for-icon supernova-navi-counter_dot-only',\n                                { 'g-hidden': !hasUnreadNotifications }\n                            )}\n                            data-qa=\"user-notifications-counter\"\n                        />\n                    </SupernovaIcon>\n                }\n                placement={Placement.BottomEnd}\n                render={(close) => <Content userNotifications={userNotifications} close={close} />}\n            />\n            <div className=\"supernova-navi-underline supernova-navi-underline_for-icon\" />\n        </SupernovaNaviItem>\n    );\n};\n\nexport default UserNotifications;\n","import { useCallback, FC } from 'react';\nimport classnames from 'classnames';\n\nimport { Placement } from 'bloko/common/metrics';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DropdownContent from 'lux/components/SupernovaMainMenu/DropdownContent';\nimport MultiAccountSwitchInfotip from 'lux/components/SupernovaMainMenu/MultiAccountSwitchInfotip';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaDropdown from 'lux/components/SupernovaMainMenu/SupernovaDropdown';\nimport SupernovaDropdownSection from 'lux/components/SupernovaMainMenu/SupernovaDropdownSection';\nimport SupernovaIcon, { SupernovaIconView } from 'lux/components/SupernovaMainMenu/SupernovaIcon';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst UserProfile: FC<NavItem> = ({ name, subItems, trackClicks }) => {\n    const { employerReviewsApplicantProfileBadge, isSudo, userType } = useSelector(\n        ({ actualAccount, employerReviewsApplicantProfileBadge, userType }) => ({\n            employerReviewsApplicantProfileBadge,\n            isSudo: actualAccount !== null,\n            userType,\n        })\n    );\n\n    const render = useCallback(() => {\n        if (userType !== UserType.BackOffice) {\n            return <DropdownContent items={subItems} />;\n        }\n        return (\n            <SupernovaDropdownSection>\n                <DropdownContent items={subItems} />\n            </SupernovaDropdownSection>\n        );\n    }, [subItems, userType]);\n\n    return (\n        <MultiAccountSwitchInfotip>\n            <SupernovaNaviItem>\n                <SupernovaDropdown\n                    activator={\n                        <SupernovaIcon\n                            data-page-analytics-event=\"settings_header\"\n                            data-qa={classnames(`mainmenu_${name}`, { 'mainmenu_sudo-sign': isSudo })}\n                            name={name}\n                            trackClicks={trackClicks}\n                            view={SupernovaIconView.Profile}\n                        >\n                            {employerReviewsApplicantProfileBadge && <SupernovaCounter forIcon>•</SupernovaCounter>}\n                        </SupernovaIcon>\n                    }\n                    placement={Placement.BottomEnd}\n                    render={render}\n                />\n                <div className=\"supernova-navi-underline supernova-navi-underline_for-icon\" />\n            </SupernovaNaviItem>\n        </MultiAccountSwitchInfotip>\n    );\n};\n\nexport default UserProfile;\n","import React from 'react';\n\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SupernovaLink from 'lux/components/SupernovaMainMenu/NaviLink';\nimport SupernovaCounter from 'lux/components/SupernovaMainMenu/SupernovaCounter';\nimport SupernovaNaviItem from 'lux/components/SupernovaMainMenu/SupernovaNaviItem';\n\nconst VacancyResponses: React.VFC<NavItem> = ({ active, counter, name, trackClicks, translations, url }) => {\n    const applicantInfo = useSelector(({ applicantInfo }) => applicantInfo);\n    const userStat = useSelector(({ userStats }) => (counter && userStats ? userStats[counter] : null));\n\n    return (\n        <SupernovaNaviItem active={active} noMobile noSmallScreen={applicantInfo.total === 0}>\n            <SupernovaLink\n                active={active}\n                data-page-analytics-event=\"negotiation_list_header\"\n                data-qa={`mainmenu_${name}`}\n                name={name}\n                trackClicks={trackClicks}\n                url={url}\n            >\n                {translations.name}\n                {!!userStat && <SupernovaCounter>{userStat}</SupernovaCounter>}\n            </SupernovaLink>\n            <div className=\"supernova-navi-underline\">{translations.name}</div>\n        </SupernovaNaviItem>\n    );\n};\n\nexport default VacancyResponses;\n","import { FC, MutableRefObject, MouseEventHandler, useContext, useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport { useChatik } from '@hh.ru/chatik-integration';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { SearchSuggestInputRefContext } from 'lux/components/SupernovaSearch/SearchSuggest';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ChatikActivator from 'lux/components/SupernovaMainMenu/ChatikActivator';\nimport CreateResume from 'lux/components/SupernovaMainMenu/CreateResume';\nimport EmployerMenu from 'lux/components/SupernovaMainMenu/EmployerMenu';\nimport EmployerProfile from 'lux/components/SupernovaMainMenu/EmployerProfile';\nimport EmployerSignup from 'lux/components/SupernovaMainMenu/EmployerSignup';\nimport FavVacancies from 'lux/components/SupernovaMainMenu/FavVacancies';\nimport Feedback from 'lux/components/SupernovaMainMenu/Feedback';\nimport GenericNavItem from 'lux/components/SupernovaMainMenu/GenericNavItem';\nimport Help from 'lux/components/SupernovaMainMenu/Help';\nimport IsDashboardContext from 'lux/components/SupernovaMainMenu/IsDashboardContext';\nimport Login from 'lux/components/SupernovaMainMenu/Login';\nimport Logo from 'lux/components/SupernovaMainMenu/Logo';\nimport Mobile from 'lux/components/SupernovaMainMenu/Mobile';\nimport MyResumes from 'lux/components/SupernovaMainMenu/MyResumes';\nimport NavItemWithDropdown from 'lux/components/SupernovaMainMenu/NavItemWithDropdown';\nimport NaviSearch from 'lux/components/SupernovaMainMenu/NaviSearch';\nimport Search from 'lux/components/SupernovaMainMenu/Search';\nimport Signup from 'lux/components/SupernovaMainMenu/Signup';\nimport Support from 'lux/components/SupernovaMainMenu/Support';\nimport SupportChatProvider from 'lux/components/SupernovaMainMenu/SupportChatProvider';\nimport UserNotifications from 'lux/components/SupernovaMainMenu/UserNotifications';\nimport UserProfile from 'lux/components/SupernovaMainMenu/UserProfile';\nimport UserTypeSwitcher from 'lux/components/SupernovaMainMenu/UserTypeSwitcher';\nimport VacancyResponses from 'lux/components/SupernovaMainMenu/VacancyResponses';\n\nconst SupernovaMainMenu: FC = () => {\n    const isDashboard = useContext(IsDashboardContext);\n    const supernovaSearchExpanded = useSelector(({ supernovaSearchView }) => supernovaSearchView.expanded);\n    const supernovaSearchName = useSelector(({ supernovaSearchName }) => supernovaSearchName);\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const userType = useSelector(({ userType }) => userType);\n    const [searchExpanded, setSearchExpanded] = useState(false);\n    const [mobileMenuExpanded, setMobileMenuExpanded] = useState(false);\n    const isEmployerSearch = userType === UserType.Employer || supernovaUserType === SupernovaUserType.Employer;\n    const { pathname } = useLocation();\n    const { closeChatik } = useChatik();\n    const headerMenu = useSelector(({ headerMenu }) => headerMenu);\n    const { bgColor, subItems } = { ...headerMenu.find((menuItem) => menuItem.name === 'menuLvl2') };\n    const isZp = useIsZarplataPlatform();\n    const searchInputRef = useRef<HTMLInputElement>() as MutableRefObject<HTMLInputElement>;\n\n    const breakpoint = useBreakpoint();\n    const isXS = breakpoint === Breakpoint.XS;\n\n    const closeChatOnClickInAnotherMenuItem: MouseEventHandler<HTMLDivElement> = useCallback(\n        (event): void => {\n            // закрываем чатик только на XS\n            if (!isXS) {\n                return;\n            }\n\n            const target = event.target as HTMLElement;\n\n            if (!target.classList.contains('supernova-icon')) {\n                return;\n            }\n\n            if (!target.classList.contains('supernova-icon_chatik')) {\n                closeChatik();\n            }\n        },\n        [closeChatik, isXS]\n    );\n\n    useEffect(() => {\n        if (searchExpanded) {\n            searchInputRef.current?.focus();\n        }\n    }, [searchExpanded, searchInputRef]);\n\n    if (subItems === undefined) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames('supernova-navi-search-wrapper', {\n                'supernova-navi-search-wrapper_expanded':\n                    supernovaSearchExpanded || supernovaSearchName || searchExpanded,\n                'supernova-navi-search-wrapper_search-page': supernovaSearchName,\n                'supernova-navi-search-wrapper_employer': isEmployerSearch,\n                'supernova-navi-search-wrapper_dashboard': isDashboard,\n            })}\n        >\n            <div\n                className={classnames('supernova-navi-wrapper', {\n                    'supernova-navi-wrapper_transparent': isDashboard,\n                    [`supernova-navi-wrapper_${bgColor as string}`]: bgColor && !isDashboard,\n                })}\n            >\n                <ColumnsWrapper>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        <div\n                            className={classnames(\n                                'supernova-navi',\n                                'supernova-navi_lvl-2',\n                                // На этот класс завязано положение нотификаций\n                                'HH-Supernova-NotificationManager-Container',\n                                {\n                                    'supernova-navi_expanded': mobileMenuExpanded,\n                                    [`supernova-navi_${bgColor as string}`]: bgColor && !isDashboard,\n                                    'supernova-navi_dashboard': isDashboard || pathname === '/employer',\n                                }\n                            )}\n                            data-qa={isDashboard || pathname === '/employer' ? 'supernova-navi-dashboard' : ''}\n                            onClick={userType === UserType.Anonymous ? undefined : closeChatOnClickInAnotherMenuItem}\n                        >\n                            <SupportChatProvider>\n                                {subItems?.map((item) => {\n                                    switch (item.name) {\n                                        case 'applicantProfile':\n                                        case 'userProfile':\n                                            return <UserProfile key={item.name} {...item} />;\n                                        case 'chatikActivator':\n                                            return <ChatikActivator key={item.name} {...item} />;\n                                        case 'createResume':\n                                            return <CreateResume key={item.name} {...item} />;\n                                        case 'copiny':\n                                        case 'feedback':\n                                            return <Feedback key={item.name} {...item} />;\n                                        case 'employerMenu':\n                                            return <EmployerMenu key={item.name} {...item} />;\n                                        case 'employerProfile':\n                                            return <EmployerProfile key={item.name} {...item} />;\n                                        case 'employerSignup':\n                                            return <EmployerSignup key={item.name} {...item} />;\n                                        case 'favVacancies':\n                                            return <FavVacancies key={item.name} {...item} />;\n                                        case 'fill':\n                                            return <div key={item.name} className=\"supernova-navi-fill\" />;\n                                        case 'help':\n                                        case 'anonSupport':\n                                            return <Help key={item.name} {...item} />;\n                                        case 'login':\n                                            return <Login key={item.name} {...item} />;\n                                        case 'logo':\n                                            return <Logo key={item.name} onLightBg={bgColor === 'light'} />;\n                                        case 'mobile':\n                                            return (\n                                                <Mobile\n                                                    key={item.name}\n                                                    {...item}\n                                                    isExpanded={mobileMenuExpanded}\n                                                    setExpanded={setMobileMenuExpanded}\n                                                />\n                                            );\n                                        case 'myResumes':\n                                            return <MyResumes key={item.name} {...item} />;\n                                        case 'promo':\n                                        case 'signup':\n                                            return <Signup key={item.name} {...item} />;\n                                        case 'searchVacancy':\n                                        case 'resumeSearch':\n                                            return <Search key={item.name} setExpanded={setSearchExpanded} />;\n                                        case 'support':\n                                            return <Support key={item.name} {...item} />;\n                                        case 'userNotifications':\n                                            return <UserNotifications key={item.name} {...item} />;\n                                        case 'userTypeSwitcher':\n                                            return <UserTypeSwitcher key={item.name} {...item} />;\n                                        case 'vacancyResponses':\n                                            return <VacancyResponses key={item.name} {...item} />;\n                                    }\n\n                                    if (item.dropdown) {\n                                        return <NavItemWithDropdown key={item.name} {...item} />;\n                                    }\n\n                                    return <GenericNavItem key={item.name} arrowed={isZp} {...item} />;\n                                })}\n                            </SupportChatProvider>\n                        </div>\n                    </Column>\n                </ColumnsWrapper>\n            </div>\n            {!isDashboard && (\n                <SearchSuggestInputRefContext.Provider value={searchInputRef}>\n                    <NaviSearch />\n                </SearchSuggestInputRefContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport default SupernovaMainMenu;\n","import React from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport talantixLinkContactsHideButtonClick from '@hh.ru/analytics-js-events/build/talantix/employer/talantix_link/talantix_link_contacts_hide_button_click';\n\nimport { NavItemAnalytics } from 'lux/models/supernovaNaviMenu';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport interface TrackClicksProps {\n    trackClicks?: boolean;\n}\n\nexport const SUPPORT_ANALYTICS_EVENTS: Record<string, string> = {\n    copiny: 'support_community',\n    employerHelp: 'q&a',\n    orderCall: 'call_request',\n    personalManager: 'personal_manager',\n    vishnu: 'virtual_consultant',\n    supportChat: 'support_chat',\n    telegram: 'support_telegram',\n    viber: 'support_viber',\n    whatsapp: 'support_whatsapp',\n};\n\nexport const sendSupportAnalytics = (userType: UserType, name: keyof typeof SUPPORT_ANALYTICS_EVENTS): void => {\n    Analytics.sendEvent(userType, 'support_chat_in_help_menu_click', SUPPORT_ANALYTICS_EVENTS[name]);\n};\n\nconst useTrackClicks = (\n    name: string,\n    trackClicks?: boolean,\n    onClick?: React.MouseEventHandler,\n    analytics?: NavItemAnalytics\n): React.MouseEventHandler => {\n    const userType = useSelector(({ userType }) => userType);\n\n    return React.useCallback(\n        (event) => {\n            onClick && onClick(event);\n\n            if (name === 'talantix') {\n                talantixLinkContactsHideButtonClick({ hhtmSourceLabel: 'header' });\n                return;\n            }\n\n            if (name === 'signup' || name === 'createResume') {\n                Analytics.sendEvent(userType, 'click-create-resume');\n            }\n\n            if (trackClicks) {\n                Analytics.sendHHEventButtonClick(analytics?.name || `menu_item_${name}`, analytics?.params);\n            }\n\n            if (name in SUPPORT_ANALYTICS_EVENTS) {\n                sendSupportAnalytics(userType, name);\n            }\n        },\n        [name, onClick, trackClicks, userType, analytics]\n    );\n};\n\nexport default useTrackClicks;\n","import { FormSpacer } from 'bloko/blocks/form';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport useAdvancedSearchHref from 'lux/components/SupernovaSearch/useAdvancedSearchHref';\n\nconst TrlKeys = {\n    labelText: 'supernova.search.advanced.tooltip',\n};\n\nconst AdvancedSearchButton: TranslatedComponent<{ searchName: SupernovaSearchName }> = ({ trls, searchName }) => {\n    const showResumeSearchConditions = useSelector(({ showResumeSearchConditions }) => showResumeSearchConditions);\n    const isZarplata = useIsZarplataPlatform();\n    const href = useAdvancedSearchHref(searchName);\n\n    if (searchName === SupernovaSearchName.Employers) {\n        return null;\n    }\n\n    return (\n        <div className=\"supernova-navi-advanced-search-link\">\n            <Link href={href} kind={LinkKind.Tertiary} data-qa=\"advanced-search\">\n                <>\n                    {showResumeSearchConditions ? (\n                        <span className=\"supernova-navi-advanced-search-inner\">\n                            <Icon\n                                initial={isZarplata ? IconColor.Gray80 : IconColor.Gray50}\n                                view={IconView.Adjustments}\n                                scale={IconScale.Small}\n                            />\n                        </span>\n                    ) : (\n                        <Icon\n                            initial={isZarplata ? IconColor.Gray80 : IconColor.Gray50}\n                            view={IconView.Adjustments}\n                            scale={IconScale.Medium}\n                        />\n                    )}\n                    <FormSpacer>{trls[TrlKeys.labelText]}</FormSpacer>\n                </>\n            </Link>\n        </div>\n    );\n};\n\nexport default translation(AdvancedSearchButton);\n","import Modal, { ModalContent, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Content from 'lux/components/AreaSwitcher';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'index.dashboard.modal.areaswitcher.title',\n};\n\nconst AreaSwitcherModal: TranslatedComponent<{ visible: boolean; onClose: () => void }> = ({\n    visible,\n    trls,\n    onClose,\n}) => {\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <ModalHeader>\n                <ModalTitle Element=\"h2\">{trls[TrlKeys.title]}</ModalTitle>\n            </ModalHeader>\n            <ModalContent>\n                <VSpacing base={6} />\n                <Content />\n            </ModalContent>\n        </Modal>\n    );\n};\n\nexport default translation(AreaSwitcherModal);\n","import { FC } from 'react';\n\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst EmployerSearchHiddenFields: FC = () => {\n    const defaultCountryCompanySearchId = useSelector(\n        ({ defaultCountryCompanySearchId }) => defaultCountryCompanySearchId\n    );\n    const { pathname } = useSelector((state) => state.router.location);\n    const isEmployerSearchPage = pathname === paths.employersList;\n\n    // There is a special areaId input on employer search page, it handles default value\n    if (!defaultCountryCompanySearchId || isEmployerSearchPage) {\n        return null;\n    }\n    return (\n        <>\n            <input type=\"hidden\" name=\"areaId\" value={defaultCountryCompanySearchId} />\n        </>\n    );\n};\n\nexport default EmployerSearchHiddenFields;\n","import { FC } from 'react';\n\nimport { PosOption, LogicOption, ExpPeriodOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { useHiddenAreaList } from 'lux/components/SupernovaSearch/useHiddenAreaList';\n\nconst ResumeSearchHiddenFields: FC = () => {\n    const domainAreaId = useSelector(({ locale }) => locale.domainAreaId);\n    const proxiedResumeSearchFormParams = useSelector((state) => state.resumeSearchResult.proxiedSearchFormParams);\n    const isSuitableResumes = useSelector((state) => !!state.searchClusters?.[CriteriaKey.VacancyId]);\n    const showResumeSearchConditions = useSelector((state) => state.showResumeSearchConditions);\n\n    const hiddenAreaList = useHiddenAreaList();\n    const hiddenAreaListElement = (\n        <>\n            {hiddenAreaList.map((savedAreaId) => (\n                <input key={savedAreaId} type=\"hidden\" name={CriteriaKey.Area} value={savedAreaId} />\n            ))}\n            {Boolean(hiddenAreaList.length) && <input type=\"hidden\" name={CriteriaKey.IsDefaultArea} value=\"true\" />}\n        </>\n    );\n\n    if (!domainAreaId) {\n        return null;\n    }\n    const ignoredCustomParams = [CriteriaKey.Text, CriteriaKey.SavedSearchId, CriteriaKey.Folder, CriteriaKey.Area];\n\n    if (proxiedResumeSearchFormParams) {\n        const textParams = proxiedResumeSearchFormParams[CriteriaKey.Text];\n        const pos = proxiedResumeSearchFormParams[CriteriaKey.Pos];\n        const logic = proxiedResumeSearchFormParams[CriteriaKey.Logic];\n        const expPeriod = proxiedResumeSearchFormParams[CriteriaKey.ExpPeriod];\n        return (\n            <>\n                {!isSuitableResumes && hiddenAreaListElement}\n\n                {!pos && !showResumeSearchConditions && (\n                    <input type=\"hidden\" name={CriteriaKey.Pos} value={PosOption.FullText} />\n                )}\n                {!logic && !showResumeSearchConditions && (\n                    <input type=\"hidden\" name={CriteriaKey.Logic} value={LogicOption.Normal} />\n                )}\n                {!expPeriod && !showResumeSearchConditions && (\n                    <input type=\"hidden\" name={CriteriaKey.ExpPeriod} value={ExpPeriodOption.AllTime} />\n                )}\n                {Object.entries(proxiedResumeSearchFormParams)\n                    .filter(([key]) => !ignoredCustomParams.includes(key))\n                    .map(([key, value]) =>\n                        Array.isArray(value) ? (\n                            value.map((value, index) => (\n                                <input key={`${key}${index}`} type=\"hidden\" name={key} value={value.toString()} />\n                            ))\n                        ) : (\n                            <input type=\"hidden\" name={key} key={key} value={value?.toString()} />\n                        )\n                    )}\n                {Array.isArray(textParams) &&\n                    textParams.length > 1 &&\n                    textParams\n                        .slice(1)\n                        .map((value, index) => (\n                            <input type=\"hidden\" name={CriteriaKey.Text} value={value} key={`text${index}`} />\n                        ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {hiddenAreaListElement}\n            <input type=\"hidden\" name={CriteriaKey.ExpPeriod} value={ExpPeriodOption.AllTime} />\n            <input type=\"hidden\" name={CriteriaKey.Logic} value={LogicOption.Normal} />\n            <input type=\"hidden\" name={CriteriaKey.Pos} value={PosOption.FullText} />\n        </>\n    );\n};\n\nexport default ResumeSearchHiddenFields;\n","import { FC } from 'react';\n\nimport { SupernovaSearchName, SupernovaSearchNameAnalyticsMapping } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport EmployerSearchHiddenFields from 'lux/components/SupernovaSearch/EmployerSearchHiddenFields';\nimport ResumeSearchHiddenFields from 'lux/components/SupernovaSearch/ResumeSearchHiddenFields';\nimport VacancySearchHiddenFields from 'lux/components/SupernovaSearch/VacancySearchHiddenFields';\n\nconst searchNameToFieldsMap = {\n    [SupernovaSearchName.Resumes]: ResumeSearchHiddenFields,\n    [SupernovaSearchName.Employers]: EmployerSearchHiddenFields,\n    [SupernovaSearchName.Vacancies]: VacancySearchHiddenFields,\n};\n\nconst HiddenFields: FC<{ searchName: SupernovaSearchName }> = ({ searchName }) => {\n    const hhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n    const Component = searchNameToFieldsMap[searchName];\n\n    return (\n        <>\n            <Component />\n            <input type=\"hidden\" name=\"hhtmFrom\" value={hhtmSource} />\n            <input type=\"hidden\" name=\"hhtmFromLabel\" value={SupernovaSearchNameAnalyticsMapping[searchName]} />\n        </>\n    );\n};\n\nexport default HiddenFields;\n","import Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind, ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    employerText: 'supernova.search.submit',\n    employerLargeText: 'supernova.search.submit.findEmployee',\n    applicantText: 'supernova.search.submit',\n    applicantLargeText: 'supernova.search.submit.findJob',\n};\n\nconst sendAnalytics = () => Analytics.sendHHEventButtonClick('search_button_header');\n\nconst SearchButton: TranslatedComponent<{ employerSearch: boolean; large: boolean }> = ({\n    trls,\n    employerSearch,\n    large,\n}) => {\n    const scaleProp = large ? { scale: ButtonScale.Large } : {};\n    if (employerSearch) {\n        return (\n            <Button\n                kind={ButtonKind.Primary}\n                type={ButtonType.Submit}\n                stretched\n                {...scaleProp}\n                onClick={sendAnalytics}\n                data-qa=\"search-button\"\n            >\n                {trls[large ? TrlKeys.employerLargeText : TrlKeys.employerText]}\n            </Button>\n        );\n    }\n\n    return (\n        <Button\n            kind={ButtonKind.Primary}\n            type={ButtonType.Submit}\n            stretched\n            {...scaleProp}\n            onClick={sendAnalytics}\n            data-qa=\"search-button\"\n        >\n            <span className=\"supernova-search-submit-icon\">\n                <span className=\"supernova-icon supernova-icon_search\" />\n            </span>\n            <span className=\"supernova-search-submit-text\">\n                {trls[large ? TrlKeys.applicantLargeText : TrlKeys.applicantText]}\n            </span>\n        </Button>\n    );\n};\n\nexport default translation(SearchButton);\n","import { Dispatch, SetStateAction } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Select from 'bloko/blocks/select';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [SupernovaSearchName.Resumes]: 'navi.search.tab.resumeSearch',\n    [SupernovaSearchName.Vacancies]: 'navi.search.tab.searchVacancy',\n    [SupernovaSearchName.Employers]: 'navi.search.tab.employersList',\n};\n\nconst sendAnalytics = () => Analytics.sendHHEventButtonClick('employer_search_select_button');\n\nconst SearchNameSelect: TranslatedComponent<{\n    searchName: SupernovaSearchName;\n    setSearchName: Dispatch<SetStateAction<SupernovaSearchName>>;\n}> = ({ searchName, setSearchName, trls }) => {\n    const textConditionsCount = useSelector(({ resumeSearchResult }) => resumeSearchResult.criteria?.text?.length || 0);\n    const showResumeSearchConditions = useSelector(({ showResumeSearchConditions }) => showResumeSearchConditions);\n    const isXS = useBreakpoint(Breakpoint.M) === Breakpoint.XS;\n\n    if (showResumeSearchConditions) {\n        return (\n            <>\n                <Select\n                    flexible={!isXS}\n                    light={!isXS}\n                    defaultValue={searchName}\n                    onChange={(event) => {\n                        sendAnalytics();\n                        setSearchName(event.target.value as SupernovaSearchName);\n                    }}\n                    data-qa=\"search-select\"\n                >\n                    {[SupernovaSearchName.Resumes, SupernovaSearchName.Vacancies, SupernovaSearchName.Employers].map(\n                        (name) => (\n                            <option key={name} value={name}>\n                                {trls[TrlKeys[name]]}\n                            </option>\n                        )\n                    )}\n                </Select>\n                <VSpacing base={0} xs={3} />\n            </>\n        );\n    }\n    return (\n        <div\n            className={classnames('supernova-search-select', {\n                'supernova-search-select_side': textConditionsCount > 1,\n            })}\n        >\n            <select\n                className=\"supernova-search-select__input\"\n                data-qa=\"search-select\"\n                defaultValue={searchName}\n                onChange={(event) => setSearchName(event.target.value as SupernovaSearchName)}\n            >\n                {[SupernovaSearchName.Resumes, SupernovaSearchName.Vacancies, SupernovaSearchName.Employers].map(\n                    (name) => (\n                        <option key={name} value={name}>\n                            {trls[TrlKeys[name]]}\n                        </option>\n                    )\n                )}\n            </select>\n            <div className=\"supernova-search-select__text\" data-qa=\"search-select-text\">\n                {trls[TrlKeys[searchName]]}\n            </div>\n            <VSpacing xs={3} base={0} />\n        </div>\n    );\n};\n\nexport default translation(SearchNameSelect);\n","import { FocusEventHandler, forwardRef, Ref, ReactNode } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport InputText, { InputChangeHandler, InputScale, InputType } from 'bloko/blocks/inputText';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { INPUT_ID } from 'lux/components/A11y/A11yConstants';\nimport translation from 'lux/components/translation';\nimport { SupernovaSearchName, SupernovaSearchNameAnalyticsMapping } from 'lux/models/supernovaSearchName';\n\nimport VacancySavedSearchButton from 'lux/components/SupernovaSearch/VacancySavedSearchButton';\n\nconst TrlKeys = {\n    [`placeholder.${SupernovaSearchName.Resumes}`]: 'supernova.search.placeholder.resumeSearch',\n    [`placeholder.${SupernovaSearchName.Vacancies}`]: 'supernova.search.placeholder.searchVacancy',\n    mobilePlaceholder: 'supernova.search.mobile.placeholder',\n    tooltipText: 'supernova.search.advanced.tooltip',\n};\n\ninterface SearchInputProps {\n    large: boolean;\n    searchName: SupernovaSearchName;\n    onChange: InputChangeHandler;\n    value: string;\n    fwdRef?: Ref<HTMLInputElement>;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    onBlur?: FocusEventHandler<HTMLInputElement>;\n    isDashboardMobileSearch?: boolean;\n    isXs?: boolean;\n    showClearButton?: boolean;\n    innerRightElement?: ReactNode;\n}\n\nconst SearchInput: TranslatedComponent<SearchInputProps> = ({\n    trls,\n    large,\n    searchName,\n    onChange,\n    value,\n    onFocus,\n    onBlur,\n    fwdRef = null,\n    isDashboardMobileSearch,\n    showClearButton,\n    innerRightElement,\n}) => {\n    const inputName = searchName === SupernovaSearchName.Employers ? 'query' : 'text';\n    const scaleProp = large ? { scale: InputScale.Large } : {};\n    const proxiedProps = { onChange, onBlur };\n\n    const onFocusLocal: FocusEventHandler<HTMLInputElement> = (event) => {\n        onFocus?.(event);\n        void Analytics.sendHHEvent('form_field_touch', {\n            formName: SupernovaSearchNameAnalyticsMapping[searchName],\n            fieldName: 'search_line',\n        });\n    };\n\n    if (isDashboardMobileSearch) {\n        return (\n            <InputText\n                id={INPUT_ID}\n                type={InputType.Text}\n                autoComplete=\"off\"\n                name=\"text\"\n                value={value}\n                placeholder={trls[TrlKeys.mobilePlaceholder]}\n                ref={fwdRef}\n                onFocus={onFocusLocal}\n                icon={<VacancySavedSearchButton searchName={searchName} isMobile />}\n                {...proxiedProps}\n            />\n        );\n    }\n\n    return (\n        <InputText\n            id={INPUT_ID}\n            placeholder={searchName === SupernovaSearchName.Employers ? '' : trls[TrlKeys[`placeholder.${searchName}`]]}\n            name={inputName}\n            value={value}\n            ref={fwdRef}\n            autoComplete=\"off\"\n            data-qa=\"search-input\"\n            onFocus={onFocusLocal}\n            showClearButton={showClearButton}\n            innerRightElement={innerRightElement}\n            {...proxiedProps}\n            {...scaleProp}\n        />\n    );\n};\n\nconst Translated = translation(SearchInput);\n\nexport default forwardRef<HTMLInputElement, SearchInputProps>((props, ref) => <Translated {...props} fwdRef={ref} />);\n","import { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport default (searchName: SupernovaSearchName): string | string[] => {\n    const resumeSearchResultCriteria = useSelector(({ resumeSearchResult }) => resumeSearchResult.criteria);\n    const vacancySearchResultCriteria = useSelector(({ vacancySearchResult }) => vacancySearchResult.criteria);\n    const employersListQuery = useSelector(({ employersListQuery }) => employersListQuery);\n\n    let searchInputValue;\n    if (searchName === SupernovaSearchName.Vacancies) {\n        searchInputValue = vacancySearchResultCriteria?.text;\n    } else if (searchName === SupernovaSearchName.Resumes) {\n        searchInputValue = resumeSearchResultCriteria?.text;\n    } else if (searchName === SupernovaSearchName.Employers) {\n        searchInputValue = employersListQuery;\n    }\n    searchInputValue = searchInputValue || '';\n\n    return searchInputValue;\n};\n","import { createContext, Ref, useCallback, useContext, useMemo, useState, ReactNode, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Tip, { TipPlacement } from 'bloko/blocks/drop/Tip';\nimport { InputChangeHandler } from 'bloko/blocks/inputText';\nimport { SuggestLayer } from 'bloko/blocks/suggest';\nimport createRemoteDataProvider from 'bloko/blocks/suggest/createRemoteDataProvider';\nimport createStaticDataProvider from 'bloko/blocks/suggest/createStaticDataProvider';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { INPUT_ID } from 'lux/components/A11y/A11yConstants';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport useSetStateWithCallback from 'lux/hooks/useSetStateWithCallback';\nimport { SupernovaSearchName, SupernovaSearchItem } from 'lux/models/supernovaSearchName';\nimport enrichResumeSearchSuggest, { removeDuplicates } from 'lux/modules/resumeSearch/enrichResumeSearchSuggest';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SearchInput from 'lux/components/SupernovaSearch/SearchInput';\nimport SmartSuggest from 'lux/components/SupernovaSearch/SmartSuggest';\nimport SmartSuggestItems from 'lux/components/SupernovaSearch/SmartSuggest/SmartSuggestItems';\nimport useSendSuggestAnalytics from 'lux/components/SupernovaSearch/SmartSuggest/useSendAnalytics';\nimport useSearchInputValue from 'lux/components/SupernovaSearch/useSearchInputValue';\n\nconst TrlKeys = {\n    submit: 'supernova.search.submit',\n    tooLongQuery: 'query.length.moreThanMax',\n    [`searchName.${SupernovaSearchName.Resumes}`]: 'supernova.search.suggest.resumeSearch',\n    [`searchName.${SupernovaSearchName.Vacancies}`]: 'supernova.search.suggest.searchVacancy',\n    [`searchName.${SupernovaSearchName.Employers}`]: 'supernova.search.suggest.employersList',\n};\n\nconst criteriaTextUpdatedAction = makeSetStoreField('criteriaTextUpdated');\n\nconst WILDCARD = '%QUERY%';\nconst MAX_QUERY_LENGTH = 3000;\n\nexport const SearchSuggestInputRefContext = createContext<Ref<HTMLInputElement>>(null);\n\nconst SearchSuggest: TranslatedComponent<{\n    searchName: SupernovaSearchName;\n    isEmployerSearch: boolean;\n    large: boolean;\n    submitForm: () => void;\n    searchInputDefaultValue: string;\n    isDashboardMobileSearch?: boolean;\n    isXs?: boolean;\n    innerRightElement?: ReactNode;\n}> = ({\n    searchName,\n    isEmployerSearch,\n    trls,\n    large,\n    submitForm,\n    searchInputDefaultValue,\n    isDashboardMobileSearch,\n    isXs,\n    innerRightElement,\n}) => {\n    const dispatch = useDispatch();\n    const [tipVisible, showTip, hideTip] = useOnOffState(false);\n    const lastSearches = useSelector(({ employerLastSearches }) => employerLastSearches);\n    const locale = useSelector(({ locale }) => locale);\n    const [fromSuggest, setFromSuggest] = useState(false);\n    const [queryText, setQueryText] = useSetStateWithCallback<string>(searchInputDefaultValue);\n    const inputRef = useContext(SearchSuggestInputRefContext);\n    const { sendSuggestShownAnalytics, sendSuggestItemClickAnalytics } = useSendSuggestAnalytics();\n\n    const location = useSelector(({ router }) => router.location);\n    const searchValue = useSearchInputValue(searchName);\n    const [suggestKey, setSuggestKey] = useState(Array.isArray(searchValue) ? searchValue.join(',') : searchValue);\n\n    const remote = useMemo(() => {\n        const resumeSuggest = `/vacancysuggest/?q=${WILDCARD}`;\n        const remotes = {\n            [SupernovaSearchName.Resumes]: resumeSuggest,\n            [SupernovaSearchName.Vacancies]: `/vacancysuggest/?q=${WILDCARD}`,\n            [SupernovaSearchName.Employers]: `/autosuggest/multiprefix/v2?q=${WILDCARD}&f=${locale.platform}&d=companies_${locale.siteLanguage}`,\n        };\n        return remotes[searchName];\n    }, [locale.siteLanguage, locale.platform, searchName]);\n\n    const remoteDataProvider = useMemo(() => createRemoteDataProvider(remote, WILDCARD), [remote]);\n    const staticDataProvider = useMemo(() => createStaticDataProvider(removeDuplicates(lastSearches)), [lastSearches]);\n    const dataProvider = useCallback(\n        (query: string) => {\n            if (!isEmployerSearch) {\n                return remoteDataProvider(query)\n                    .then((data) => {\n                        const items = Array.isArray(data.items)\n                            ? (data.items as SupernovaSearchItem[])\n                            : ([] as SupernovaSearchItem[]);\n                        return { items };\n                    })\n                    .catch(() => ({\n                        items: [],\n                    }));\n            } else if (searchName === SupernovaSearchName.Resumes && lastSearches) {\n                return enrichResumeSearchSuggest(query, remoteDataProvider, staticDataProvider, lastSearches);\n            }\n            return remoteDataProvider(query);\n        },\n        [isEmployerSearch, searchName, lastSearches, remoteDataProvider, staticDataProvider]\n    );\n\n    const updateText = (text: string, submit?: () => void) => {\n        let newCriteriaTextUpdated: string | string[] = text;\n        // on resume search can be []\n        if (Array.isArray(searchValue)) {\n            newCriteriaTextUpdated = [...searchValue];\n            newCriteriaTextUpdated[0] = text;\n        }\n        dispatch(criteriaTextUpdatedAction(newCriteriaTextUpdated));\n        setQueryText(text, submit);\n    };\n\n    useEffect(() => {\n        const isMultiText = Array.isArray(searchValue);\n        // or save multi text value on filter actions\n        dispatch(criteriaTextUpdatedAction(searchValue));\n        // update text value\n        setQueryText(isMultiText ? searchValue[0] : searchValue);\n        setSuggestKey(isMultiText ? searchValue.join(',') : searchValue);\n        // PORTFOLIO-20441 - где-то тут порефачим супернову\n        // нужно для обновление состояния поисковой строки, которая завернута в suggest\n        // suggest no-controled сейчас, нужно переводить его на control state\n        // но это сломает отправку аналитики в одном из экспов\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [location, searchValue]);\n\n    const handleSuggestChange = (item: SupernovaSearchItem) => {\n        setFromSuggest(true);\n        if (item) {\n            updateText(item.text, submitForm);\n        }\n    };\n\n    const onChange = (item: SupernovaSearchItem) => {\n        if (item) {\n            sendSuggestItemClickAnalytics(item);\n        }\n        setTimeout(() => handleSuggestChange(item), 0);\n    };\n\n    const handleInputChange: InputChangeHandler = (value) => {\n        if (value.length < MAX_QUERY_LENGTH) {\n            updateText(value);\n        } else {\n            showTip();\n            setTimeout(hideTip, 2000);\n        }\n    };\n\n    return (\n        <Tip\n            show={tipVisible}\n            onExternalClose={hideTip}\n            placement={TipPlacement.Top}\n            render={() => trls[TrlKeys.tooLongQuery]}\n        >\n            <SmartSuggest\n                key={suggestKey}\n                inputValue={queryText}\n                autoHighlightFirstSuggest={false}\n                layer={SuggestLayer.AboveOverlayContent}\n                dataProvider={dataProvider}\n                defaultSearch={queryText}\n                onChange={onChange}\n                onSubmit={(inputValue: string) => {\n                    handleSuggestChange({ text: inputValue });\n                    setTimeout(() => {\n                        submitForm();\n                    }, 0);\n                }}\n                submitButtonTitle={trls[TrlKeys.submit]}\n                selectOnBlur={false}\n                searchOnFocus={true}\n                suggestStartInputLength={lastSearches.length ? 0 : 2}\n                renderItems={(\n                    items: SupernovaSearchItem[],\n                    renderItem: (item: SupernovaSearchItem, index: number) => ReactNode\n                ) => {\n                    return <SmartSuggestItems items={items} renderItem={renderItem} />;\n                }}\n                mobileInputProps={{\n                    id: INPUT_ID,\n                    autoComplete: 'off',\n                    'aria-label': trls[TrlKeys.submit],\n                    'data-qa': 'search-input',\n                }}\n                onMobileSuggestShown={sendSuggestShownAnalytics}\n                limit={12}\n            >\n                <SearchInput\n                    onChange={handleInputChange}\n                    ref={inputRef}\n                    value={queryText}\n                    large={large}\n                    searchName={searchName}\n                    isDashboardMobileSearch={isDashboardMobileSearch}\n                    isXs={isXs}\n                    showClearButton={!isEmployerSearch}\n                    innerRightElement={innerRightElement}\n                />\n            </SmartSuggest>\n            {fromSuggest && <input type=\"hidden\" name=\"from\" value=\"suggest_post\" />}\n        </Tip>\n    );\n};\n\nexport default translation(SearchSuggest);\n","import { SetStateAction, useEffect, useRef, useState } from 'react';\n\nexport interface SetStateWithCallbackFunc<T> {\n    (state: SetStateAction<T>, callback?: () => void, options?: SetStateWithCallbackFuncOptionalProps): void;\n}\n\nexport interface SetStateWithCallbackFuncOptionalProps {\n    force?: boolean;\n}\n\nexport default <T>(initialState: T): [state: T, setState: SetStateWithCallbackFunc<T>] => {\n    const callbacks = useRef<Array<() => void>>([]);\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n        callbacks.current.forEach((callback) => callback());\n        callbacks.current = [];\n    }, [state]);\n\n    return [\n        state,\n        (newState, callback, { force } = {}) => {\n            if (newState !== state) {\n                callback && callbacks.current.push(callback);\n                setState(newState);\n            } else if (force ?? true) {\n                callback?.();\n            }\n        },\n    ];\n};\n","import { useCallback, ReactNode, VFC, Fragment } from 'react';\n\nimport SuggestPickerItems from 'bloko/blocks/suggest/SuggestPickerItems';\n\nimport { SupernovaSearchItem } from 'lux/models/supernovaSearchName';\n\nimport useSendSuggestAnalytics from 'lux/components/SupernovaSearch/SmartSuggest/useSendAnalytics';\n\ninterface SmartSuggestItemsProps {\n    items: SupernovaSearchItem[];\n    renderItem: (item: SupernovaSearchItem, index: number) => ReactNode;\n}\n\nconst SmartSuggestItems: VFC<SmartSuggestItemsProps> = ({ items, renderItem }) => {\n    const { sendSuggestShownAnalytics } = useSendSuggestAnalytics();\n    const onDesktopSuggestShown = useCallback(\n        (node: HTMLDivElement | null) => {\n            if (node) {\n                sendSuggestShownAnalytics();\n            }\n        },\n        [sendSuggestShownAnalytics]\n    );\n    return (\n        <div ref={onDesktopSuggestShown}>\n            <SuggestPickerItems>\n                {items.map((item, index) => (\n                    <Fragment key={item.text}>{renderItem(item, index)}</Fragment>\n                ))}\n            </SuggestPickerItems>\n        </div>\n    );\n};\n\nexport default SmartSuggestItems;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalHeader\":\"modal-header--XuSRbDFjMsBxUa_Ran1q\",\"backIconWrapper\":\"back-icon-wrapper--uu2se1UdvZPtjD0HtUWU\",\"inputWrapper\":\"input-wrapper--WwFDU5L_xWlQpkdmfDhS\",\"contentWrapper\":\"content-wrapper--_MySYCrJMKB457v04DeM\",\"spin\":\"spin--LZgQjQycH6TrtKT7z8KL\"};","import { FormEvent, useCallback, useState, FC } from 'react';\n\nimport Button, { ButtonKind, ButtonType } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport Icon, { IconView, IconScale, IconKind } from 'bloko/blocks/icon';\nimport InputText, { InputProps } from 'bloko/blocks/inputText';\nimport Modal, { ModalFooter, ModalHeader, ModalContent } from 'bloko/blocks/modal';\nimport { SuggestProps } from 'bloko/blocks/suggest';\nimport SuggestPickerItem from 'bloko/blocks/suggest/SuggestPickerItem';\nimport SuggestPickerItems from 'bloko/blocks/suggest/SuggestPickerItems';\nimport Defaults from 'bloko/blocks/suggest/defaults';\nimport { DataProviderItem } from 'bloko/blocks/suggest/types';\nimport { normalizeText } from 'bloko/blocks/suggest/utils';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport debounce from 'bloko/common/debounce';\n\nimport Form from 'lux/components/Form';\n\nimport styles from './mobile-suggest.less';\n\nexport interface MobileSuggestProps<T = DataProviderItem> {\n    isShown: boolean;\n    onClose: () => void;\n    onSubmit?: (inputValue: string) => void;\n    submitButtonTitle?: string;\n    dataProvider: SuggestProps<T>['dataProvider'];\n    value?: string;\n    onChange?: SuggestProps<T>['onChange'];\n    itemContent?: SuggestProps<T>['itemContent'];\n    debounceDelay?: SuggestProps<T>['debounceDelay'];\n    limit?: SuggestProps<T>['limit'];\n    inputProps?: InputProps;\n}\n\nconst MobileSuggest: FC<MobileSuggestProps> = ({\n    isShown,\n    onClose,\n    onSubmit,\n    submitButtonTitle,\n    dataProvider,\n    value,\n    onChange,\n    itemContent,\n    debounceDelay,\n    limit,\n    inputProps,\n}) => {\n    const [pickerItems, setPickerItems] = useState<DataProviderItem[]>([]);\n    const [inputValue, setInputValue] = useState(value || '');\n\n    const updatePickerDebounced = useCallback(\n        debounce(async (newPreparedSearchValue: string) => {\n            await dataProvider(newPreparedSearchValue)\n                .then(({ items }) => {\n                    setPickerItems(\n                        items.slice(0, limit).map((item, index) => ({ ...item, id: `${item?.id || index}` }))\n                    );\n                })\n                .catch(() => {\n                    setPickerItems([]);\n                });\n        }, debounceDelay || Defaults.THROTTLE),\n        [debounceDelay, dataProvider, limit]\n    );\n\n    const handleInputChange = useCallback(\n        (value: string) => {\n            setInputValue(value);\n            updatePickerDebounced(normalizeText(value));\n        },\n        [updatePickerDebounced]\n    );\n\n    const handleFormSubmit = useCallback(\n        (event: FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n            onSubmit?.(inputValue);\n        },\n        [inputValue, onSubmit]\n    );\n\n    return (\n        <Modal visible={isShown} closeButtonShow={false} escapePress={false} onClose={onClose}>\n            <ModalHeader>\n                <Form onSubmit={handleFormSubmit} action=\"\" className={styles.modalHeader}>\n                    <div className={styles.backIconWrapper} onClick={onClose}>\n                        <Icon view={IconView.Chevron} kind={IconKind.Left} scale={IconScale.Medium} />\n                    </div>\n                    <InputText\n                        showClearButton\n                        value={inputValue}\n                        onChange={handleInputChange}\n                        onFocus={() => updatePickerDebounced(inputValue)}\n                        autoFocus\n                        light\n                        {...inputProps}\n                    />\n                    {submitButtonTitle && (\n                        <FormSpacer>\n                            <Button kind={ButtonKind.Primary} type={ButtonType.Submit}>\n                                {submitButtonTitle}\n                            </Button>\n                        </FormSpacer>\n                    )}\n                </Form>\n                <VSpacing base={3} />\n                <div className=\"horizontal-divider\" />\n            </ModalHeader>\n            <ModalContent>\n                <div className={styles.contentWrapper}>\n                    <SuggestPickerItems>\n                        {pickerItems.map((item, index) => {\n                            return (\n                                <SuggestPickerItem\n                                    key={item.text}\n                                    index={index}\n                                    handleMouseDown={() => {\n                                        onChange?.(item, '');\n                                        onClose();\n                                    }}\n                                    highlighted={false}\n                                >\n                                    {itemContent?.(item) || item.text}\n                                </SuggestPickerItem>\n                            );\n                        })}\n                    </SuggestPickerItems>\n                </div>\n            </ModalContent>\n            <ModalFooter />\n        </Modal>\n    );\n};\n\nexport default MobileSuggest;\n","import {\n    cloneElement,\n    InputHTMLAttributes,\n    FocusEventHandler,\n    DetailedHTMLProps,\n    FC,\n    ReactElement,\n    useState,\n    PropsWithChildren,\n} from 'react';\n\nimport { InputProps } from 'bloko/blocks/inputText';\nimport Suggest, { SuggestProps } from 'bloko/blocks/suggest';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport MobileSuggest, { MobileSuggestProps } from 'lux/components/SupernovaSearch/SmartSuggest/MobileSuggest';\n\ninterface SmartSuggestProps extends SuggestProps {\n    submitButtonTitle?: MobileSuggestProps['submitButtonTitle'];\n    onSubmit?: MobileSuggestProps['onSubmit'];\n    mobileInputProps?: InputProps;\n    inputValue?: string;\n    onMobileSuggestShown?: () => void;\n}\n\nconst SmartSuggest: FC<SmartSuggestProps & PropsWithChildren> = ({\n    children,\n    onSubmit,\n    submitButtonTitle,\n    mobileInputProps,\n    inputValue,\n    onMobileSuggestShown,\n    ...suggestProps\n}) => {\n    const [showXsModal, setShowXsModal] = useState<boolean>(false);\n    const isXs = useBreakpoint(Breakpoint.M) === Breakpoint.XS;\n\n    const renderClonedInputElement = () => {\n        const input = children as DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n        const handleInputFocus: FocusEventHandler<HTMLInputElement> = (...rest) => {\n            input.onFocus?.(...rest);\n            setShowXsModal(true);\n            onMobileSuggestShown?.();\n        };\n        return cloneElement(input as ReactElement, { onFocus: handleInputFocus, value: inputValue || '' });\n    };\n\n    if (!isXs) {\n        return <Suggest {...suggestProps}>{children}</Suggest>;\n    }\n\n    return (\n        <>\n            {renderClonedInputElement()}\n            {showXsModal && (\n                <MobileSuggest\n                    isShown={showXsModal}\n                    onClose={() => setShowXsModal(false)}\n                    onSubmit={(inputValue) => {\n                        onSubmit?.(inputValue);\n                        setShowXsModal(false);\n                    }}\n                    submitButtonTitle={submitButtonTitle}\n                    dataProvider={suggestProps.dataProvider}\n                    value={inputValue}\n                    onChange={suggestProps.onChange}\n                    itemContent={suggestProps.itemContent}\n                    debounceDelay={suggestProps.debounceDelay}\n                    limit={suggestProps.limit}\n                    inputProps={mobileInputProps}\n                />\n            )}\n        </>\n    );\n};\n\nexport default SmartSuggest;\n","import { useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { SupernovaSearchItem } from 'lux/models/supernovaSearchName';\n\nexport interface SendSuggestAnalyticsProps {\n    sendSuggestShownAnalytics: () => void;\n    sendSuggestItemClickAnalytics: (item: SupernovaSearchItem) => void;\n}\n\nexport default (): SendSuggestAnalyticsProps => {\n    const sendSuggestShownAnalytics = useCallback(() => {\n        Analytics.sendHHEvent('element_shown', { elementName: 'search_suggest' });\n    }, []);\n\n    const sendSuggestItemClickAnalytics = useCallback((item: SupernovaSearchItem) => {\n        Analytics.sendHHEvent('search_suggest_item_click', { selectedText: item.text });\n    }, []);\n\n    return { sendSuggestShownAnalytics, sendSuggestItemClickAnalytics };\n};\n","import Button, { ButtonIconPosition } from 'bloko/blocks/button';\nimport Icon, { IconScale, IconView, IconKind, IconAppearance, IconLink, IconColor } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    notSaved: 'search.vacancy.savedSearch.button.notSaved',\n    saved: 'search.vacancy.savedSearch.button.saved',\n};\n\ntype SavedSearchButtonProps = {\n    isMobile?: boolean;\n    isAlreadySaved?: boolean;\n    onClick: () => void;\n};\n\nconst SavedSearchButton: TranslatedComponent<SavedSearchButtonProps> = ({\n    trls,\n    isMobile,\n    isAlreadySaved = false,\n    onClick,\n}) => {\n    const iconAppearance = isAlreadySaved ? IconAppearance.Filled : IconAppearance.Outlined;\n    const dataQa = isAlreadySaved ? 'vacancy-saved-search-created' : 'vacancy-saved-search-create';\n\n    if (isMobile) {\n        return (\n            <IconLink onClick={onClick} data-qa={dataQa}>\n                <Icon\n                    view={IconView.Lupa}\n                    scale={IconScale.Small}\n                    kind={IconKind.Heart}\n                    initial={IconColor.Blue60}\n                    appearance={iconAppearance}\n                />\n            </IconLink>\n        );\n    }\n    return (\n        <Button\n            data-qa={dataQa}\n            icon={\n                <Icon view={IconView.Lupa} scale={IconScale.Small} kind={IconKind.Heart} appearance={iconAppearance} />\n            }\n            iconPosition={ButtonIconPosition.Left}\n            onClick={onClick}\n        >\n            {trls[isAlreadySaved ? TrlKeys.saved : TrlKeys.notSaved]}\n        </Button>\n    );\n};\n\nexport default translation(SavedSearchButton);\n","export const FormState = {\n    Saving: 'SAVING',\n    Saved: 'SAVED',\n    AlreadySaved: 'ALREADY_SAVED',\n} as const;\n\nexport type FormStateType = (typeof FormState)[keyof typeof FormState];\n\nexport const SaveSearchError = {\n    WrongEmail: 'WrongEmail',\n    DuplicateEmail: 'DuplicateEmail',\n} as const;\n\nexport type SaveSearchErrorType = (typeof SaveSearchError)[keyof typeof SaveSearchError];\n","// extracted by mini-css-extract-plugin\nexport default {\"successContainer\":\"success-container--aXvM0j_MzQRonDO8pxvM\",\"successIcon\":\"success-icon--zDuiR5NucFKcedfFc6Zn\",\"buttonsContainer\":\"buttons-container--BOv_4IxOqd65iULQOPQN\",\"switchContainer\":\"switch-container--BeCjkSeycROlDu8p8q0Q\",\"emailError\":\"email-error--HCOFEwSoPU1eUiXeHQJF\"};","import Button, { ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport { H3, H4Section } from 'bloko/blocks/header';\nimport InputText, { InputChangeHandler, InputType } from 'bloko/blocks/inputText';\nimport Link from 'bloko/blocks/link';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport { SaveSearchError, SaveSearchErrorType } from 'lux/components/SupernovaSearch/VacancySavedSearchButton/types';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'search.vacancy.savedSearch.form.title',\n    emailPlaceholder: 'search.vacancy.savedSearch.form.placeholder.email',\n    buttonEmail: 'search.vacancy.savedSearch.form.button.email',\n    buttonMessengers: 'search.vacancy.savedSearch.form.button.messengers',\n    buttonSubscribe: 'search.vacancy.savedSearch.form.button.subscribe',\n    switchMessengers: 'search.vacancy.savedSearch.form.switch.messengers',\n    emailError: {\n        [SaveSearchError.WrongEmail]: 'search.vacancy.savedSearch.form.error.email.wrong',\n        [SaveSearchError.DuplicateEmail]: 'search.vacancy.savedSearch.form.error.email.duplicate',\n    },\n};\n\nexport interface SavedSearchFormProps {\n    isMobile?: boolean;\n    emailInputValue: string;\n    onEmailInputChange: InputChangeHandler;\n    emailError: SaveSearchErrorType | null;\n    existChatBot: boolean;\n    existEmail: boolean;\n    isLoading: boolean;\n    onClickMessengers: () => void;\n    onClickEmailSubscribe: () => void;\n}\n\nconst SavedSearchForm: TranslatedComponent<SavedSearchFormProps> = ({\n    trls,\n    isMobile,\n    emailInputValue,\n    onEmailInputChange,\n    emailError,\n    existChatBot,\n    existEmail,\n    isLoading,\n    onClickMessengers,\n    onClickEmailSubscribe,\n}) => {\n    const Header = isMobile ? H3 : H4Section;\n\n    return (\n        <>\n            <VSpacing xs={5} base={0} />\n            <Header>{trls[TrlKeys.title]}</Header>\n            <VSpacing xs={6} base={3} />\n            {existEmail ? (\n                <div className={styles.buttonsContainer}>\n                    <Button\n                        loading={isLoading && <Loading scale={LoadingScale.Small} />}\n                        scale={isMobile ? undefined : ButtonScale.Small}\n                        onClick={onClickEmailSubscribe}\n                        stretched={isMobile}\n                        data-qa=\"vacancy-saved-search-email\"\n                    >\n                        {trls[TrlKeys.buttonEmail]}\n                    </Button>\n                    {isMobile ? <VSpacing base={2} /> : <HSpacing base={2} />}\n                    <Button\n                        scale={isMobile ? undefined : ButtonScale.Small}\n                        onClick={onClickMessengers}\n                        stretched={isMobile}\n                        data-qa=\"vacancy-saved-search-messengers\"\n                    >\n                        {trls[TrlKeys.buttonMessengers]}\n                    </Button>\n                </div>\n            ) : (\n                <>\n                    <InputText\n                        showClearButton\n                        placeholder={trls[TrlKeys.emailPlaceholder]}\n                        value={emailInputValue}\n                        onChange={onEmailInputChange}\n                        invalid={!!emailError}\n                        type={InputType.Email}\n                    />\n                    {!!emailError && (\n                        <>\n                            <VSpacing base={2} />\n                            <div className={styles.emailError}>{trls[TrlKeys.emailError[emailError]]}</div>\n                        </>\n                    )}\n                    <VSpacing xs={3} base={2} />\n                    <Button\n                        kind={ButtonKind.Primary}\n                        scale={isMobile ? undefined : ButtonScale.Small}\n                        onClick={onClickEmailSubscribe}\n                        loading={isLoading && <Loading scale={LoadingScale.Small} />}\n                        disabled={emailInputValue.length === 0 || !!emailError}\n                        data-qa=\"vacancy-saved-search-email-subscribe\"\n                    >\n                        {trls[TrlKeys.buttonSubscribe]}\n                    </Button>\n                    {existChatBot && (\n                        <div className={styles.switchContainer}>\n                            <VSpacing base={4} />\n                            <Link\n                                Element={Button}\n                                onClick={onClickMessengers}\n                                data-qa=\"vacancy-saved-search-switch-messengers\"\n                            >\n                                {trls[TrlKeys.switchMessengers]}\n                            </Link>\n                        </div>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default translation(SavedSearchForm);\n","import { useState, ReactElement } from 'react';\n\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Info, { InfoPlacement } from 'bloko/blocks/drop/Info';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Notices from 'Modules/Notices';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst INFO_NAME = 'vacancy_saved_search_info';\n\nexport const hideSavedSearchInfo = (): void => {\n    Notices.markAsViewed(INFO_NAME);\n};\n\nconst TrlKeys = {\n    info: 'search.vacancy.savedSearch.info',\n    infoOk: 'search.vacancy.savedSearch.info.ok',\n};\n\nconst SavedSearchInfo: TranslatedComponent<{ children: ReactElement }> = ({ trls, children }) => {\n    const initIsShowInfo = useSelector(({ infoTip }) => infoTip.name === INFO_NAME);\n\n    const [isShowInfo, setShowInfo] = useState(initIsShowInfo);\n\n    const hideInfo = () => {\n        setShowInfo(false);\n        hideSavedSearchInfo();\n    };\n\n    return (\n        <Info\n            showCloseButton\n            render={() => (\n                <>\n                    <Text>{trls[TrlKeys.info]}</Text>\n                    <VSpacing base={4} />\n                    <Button kind={ButtonKind.Inversed} appearance={ButtonAppearance.Outlined} onClick={hideInfo}>\n                        {trls[TrlKeys.infoOk]}\n                    </Button>\n                </>\n            )}\n            placement={InfoPlacement.BottomStart}\n            show={isShowInfo}\n            onClose={hideInfo}\n        >\n            {children}\n        </Info>\n    );\n};\n\nexport default translation(SavedSearchInfo);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { H3 } from 'bloko/blocks/header';\nimport Icon, { IconAppearance, IconColor, IconKind, IconScale, IconView } from 'bloko/blocks/icon';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'search.vacancy.savedSearch.notification.modal.title',\n    alreadyTitle: 'search.vacancy.savedSearch.notification.modal.alreadyTitle',\n    description: 'search.vacancy.savedSearch.notification.modal.description',\n    buttonGoSavedSearches: 'search.vacancy.savedSearch.notification.modal.button.goSavedSearches',\n    buttonClose: 'search.vacancy.savedSearch.notification.modal.button.close',\n};\n\ntype SavedSearchSuccessProps = {\n    email: string;\n    isAlreadySaved: boolean;\n    closeForm: () => void;\n};\n\nconst SavedSearchSuccess: TranslatedComponent<SavedSearchSuccessProps> = ({\n    trls,\n    email,\n    isAlreadySaved,\n    closeForm,\n}) => {\n    return (\n        <div className={styles.successContainer}>\n            <VSpacing base={5} />\n            <div className={styles.successIcon}>\n                <Icon\n                    view={IconView.Checkmark}\n                    kind={IconKind.Single}\n                    appearance={IconAppearance.Outlined}\n                    scale={IconScale.Medium}\n                    initial={IconColor.White}\n                    height={32}\n                    width={32}\n                />\n            </div>\n            <VSpacing base={6} />\n            <H3>{trls[isAlreadySaved ? TrlKeys.alreadyTitle : TrlKeys.title]}</H3>\n            <VSpacing base={2} />\n            <Text>{trls[TrlKeys.description]}</Text>\n            <Text>{email}</Text>\n            <VSpacing base={6} />\n            <Button kind={ButtonKind.Primary} Element={Link} to=\"/applicant/autosearch\" stretched>\n                {trls[TrlKeys.buttonGoSavedSearches]}\n            </Button>\n            <VSpacing base={2} />\n            <Button onClick={closeForm} stretched>\n                {trls[TrlKeys.buttonClose]}\n            </Button>\n        </div>\n    );\n};\n\nexport default translation(SavedSearchSuccess);\n","import { FC, useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport type { AxiosError } from 'axios';\nimport { CONFLICT } from 'http-status-codes';\n\nimport createButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_create_button_click';\nimport createdButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_created_button_click';\nimport emailButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_email_button_click';\nimport emailSubscribeButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_email_subscribe_button_click';\nimport messengersButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_messengers_button_click';\nimport switchMessengersButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/saved_search/vacancy_saved_search_switch_messengers_button_click';\nimport DropDown, { DownPlacement } from 'bloko/blocks/drop/Down';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport { InputChangeHandler } from 'bloko/blocks/inputText';\nimport Modal from 'bloko/blocks/modal';\nimport urlParser from 'bloko/common/urlParser';\n\nimport AutosearchMessengersModal from 'lux/components/AutosearchMessengers/AutosearchMessengersModal';\nimport {\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON,\n} from 'lux/components/Notifications/VacancySearchSubscriptions';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { UserType } from 'lux/models/userType';\nimport { saveAutoSearch } from 'lux/models/vacancySearch/vacancySearchResult';\nimport { MapCriteria } from 'lux/models/vacancySearchCriteria';\nimport fetcher from 'lux/modules/fetcher';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport SavedSearchButton from 'lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchButton';\nimport SavedSearchForm, {\n    SavedSearchFormProps,\n} from 'lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchForm';\nimport SavedSearchInfo, {\n    hideSavedSearchInfo,\n} from 'lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchInfo';\nimport SavedSearchSuccess from 'lux/components/SupernovaSearch/VacancySavedSearchButton/SavedSearchSuccess';\nimport {\n    FormState,\n    FormStateType,\n    SaveSearchError,\n    SaveSearchErrorType,\n} from 'lux/components/SupernovaSearch/VacancySavedSearchButton/types';\n\nconst ANALYTICS_PLACE = 'supernova_search';\n\nconst URL_SAVE = '/vacancysavedsearch/save';\nconst URL_POSTPONE = '/shards/vacancy_saved_search/postpone';\n\ndeclare global {\n    interface FetcherPostApi {\n        [URL_SAVE]: {\n            body: { email: string };\n            queryParams: Partial<MapCriteria>;\n            response: void;\n        };\n        [URL_POSTPONE]: {\n            body: { backUrl: string };\n            queryParams: void;\n            response: void;\n        };\n    }\n}\n\ntype VacancySavedSearchButtonProps = {\n    searchName: SupernovaSearchName;\n    isMobile?: boolean;\n};\n\nconst VacancySavedSearchButton: FC<VacancySavedSearchButtonProps> = ({ isMobile, searchName }) => {\n    const isAnonymous = useSelector(({ userType }) => userType === UserType.Anonymous);\n    const isVacanciesMap = useSelector(({ router }) => router.location.pathname === paths.vacancySearchMap);\n    const existChatBot = useSelector(({ chatBot }) => !!chatBot);\n    const autosearch = useSelector(({ vacancySearchResult }) => vacancySearchResult.queries?.autosearch);\n    const { pathname, search } = useSelector((state) => state.router.location);\n    const { isSavedSearch, email, isFormOpen, isShowButton } = useSelector(\n        ({ vacancySearchResult }) => vacancySearchResult.savedSearches\n    );\n\n    const dispatch = useDispatch();\n\n    const [emailInputValue, setEmailInputValue] = useState('');\n    const [emailError, setEmailError] = useState<SaveSearchErrorType | null>(null);\n\n    const [isLoading, setLoading, resetLoading] = useOnOffState(false);\n    const [isModalMessengersVisible, openModalMessengers, hideModalMessengers] = useOnOffState(false);\n\n    const existEmail = !!email;\n    const emailValue = email || emailInputValue;\n    const saveWithoutForm = existEmail && !existChatBot;\n\n    const [formState, setFormState] = useState<FormStateType | null>(\n        isFormOpen && !saveWithoutForm ? FormState.Saving : null\n    );\n\n    const closeForm = () => {\n        setFormState(null);\n    };\n\n    const saveSearch = useCallback(() => {\n        setLoading();\n        const parsedURL = urlParser(`?${autosearch || ''}`);\n        const params = { ...parsedURL.params };\n        if (isVacanciesMap) {\n            delete params.geocode_type;\n            delete params.precision;\n            delete params.ored_clusters;\n        }\n        fetcher\n            .post(URL_SAVE, { email: emailValue }, { params })\n            .then(() => {\n                if (!isMobile) {\n                    closeForm();\n                    dispatch(\n                        addNotification(VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON, { email: emailValue })\n                    );\n                } else {\n                    setFormState(FormState.Saved);\n                }\n                dispatch(saveAutoSearch(null));\n                resetLoading();\n            })\n            .catch((error: AxiosError<{ state: string }>) => {\n                if (error.response?.data?.state === SaveSearchError.WrongEmail) {\n                    setEmailError(SaveSearchError.WrongEmail);\n                } else if (error.response?.status === CONFLICT) {\n                    setEmailError(SaveSearchError.DuplicateEmail);\n                } else {\n                    dispatch(addNotification(VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR));\n                }\n                resetLoading();\n            });\n    }, [autosearch, dispatch, emailValue, isMobile, isVacanciesMap, resetLoading, setLoading, setEmailError]);\n\n    useEffect(() => {\n        if (isFormOpen && saveWithoutForm) {\n            saveSearch();\n        }\n    }, [isFormOpen, saveSearch, saveWithoutForm]);\n\n    const onSaveClick = useCallback(() => {\n        createButtonClick({\n            hhtmFromLabel: ANALYTICS_PLACE,\n            existEmail,\n            existChatBot,\n        });\n        if (isAnonymous) {\n            const parsedLoginUrl = urlParser('/account/login');\n            parsedLoginUrl.params.postponed = true;\n            void fetcher.post(URL_POSTPONE, { backUrl: `${pathname}${search}` }).then(() => {\n                window.location.assign(parsedLoginUrl.href);\n            });\n        } else {\n            hideSavedSearchInfo();\n            if (saveWithoutForm) {\n                saveSearch();\n            } else {\n                setFormState(FormState.Saving);\n            }\n        }\n    }, [existChatBot, existEmail, isAnonymous, pathname, saveSearch, saveWithoutForm, search]);\n\n    const onAlreadySavedClick = useCallback(() => {\n        createdButtonClick();\n        if (isMobile) {\n            setFormState(FormState.AlreadySaved);\n        } else {\n            dispatch(\n                addNotification(VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON, {\n                    email: emailValue,\n                    alreadySaved: true,\n                })\n            );\n        }\n    }, [dispatch, emailValue, isMobile]);\n\n    const onClickEmailSubscribe = useCallback(() => {\n        if (existEmail) {\n            emailButtonClick({\n                existEmail: true,\n                existChatBot,\n                hhtmFromLabel: ANALYTICS_PLACE,\n            });\n        } else {\n            emailSubscribeButtonClick({\n                existChatBot,\n                hhtmFromLabel: ANALYTICS_PLACE,\n            });\n        }\n        saveSearch();\n    }, [existChatBot, existEmail, saveSearch]);\n\n    const onClickMessengers = useCallback(() => {\n        if (existEmail) {\n            messengersButtonClick({\n                existEmail: true,\n                hhtmFromLabel: ANALYTICS_PLACE,\n            });\n        } else {\n            switchMessengersButtonClick({\n                hhtmFromLabel: ANALYTICS_PLACE,\n            });\n        }\n        openModalMessengers();\n        closeForm();\n    }, [existEmail, openModalMessengers]);\n\n    const onEmailInputChange: InputChangeHandler = (value) => {\n        setEmailInputValue(value);\n        if (emailError) {\n            setEmailError(null);\n        }\n    };\n\n    const formProps: SavedSearchFormProps = {\n        isMobile,\n        emailInputValue,\n        onEmailInputChange,\n        emailError,\n        existChatBot,\n        existEmail,\n        isLoading,\n        onClickEmailSubscribe,\n        onClickMessengers,\n    };\n\n    if (!isShowButton || searchName !== SupernovaSearchName.Vacancies) {\n        return null;\n    }\n\n    return (\n        <>\n            {!isMobile && <HSpacing base={2} />}\n            {isSavedSearch ? (\n                <SavedSearchButton isMobile={isMobile} onClick={onAlreadySavedClick} isAlreadySaved />\n            ) : (\n                <SavedSearchInfo>\n                    <DropDown\n                        show={!isMobile && !!formState}\n                        placement={DownPlacement.BottomStart}\n                        render={() => <SavedSearchForm {...formProps} />}\n                        onClose={closeForm}\n                    >\n                        <SavedSearchButton isMobile={isMobile} onClick={onSaveClick} />\n                    </DropDown>\n                </SavedSearchInfo>\n            )}\n            {existChatBot && (\n                <AutosearchMessengersModal\n                    isVisible={isModalMessengersVisible}\n                    handleCloseModal={hideModalMessengers}\n                />\n            )}\n            {isMobile && (\n                <Modal visible={!!formState} onClose={() => setFormState(null)} useBottomSheet>\n                    {isSavedSearch ? (\n                        <SavedSearchSuccess\n                            email={emailValue}\n                            isAlreadySaved={formState === FormState.AlreadySaved}\n                            closeForm={closeForm}\n                        />\n                    ) : (\n                        <SavedSearchForm {...formProps} />\n                    )}\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default translation(VacancySavedSearchButton);\n","import React, { FC } from 'react';\n\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { useHiddenAreaList } from 'lux/components/SupernovaSearch/useHiddenAreaList';\n\nconst VacancySearchHiddenFields: FC = () => {\n    const proxiedVacancySearchFormParams = useSelector(\n        ({ vacancySearchResult }) => vacancySearchResult.proxiedSearchFormParams\n    );\n\n    const similarSavedSearchEnabled = useSelector(({ similarSavedSearchEnabled }) => similarSavedSearchEnabled);\n    const hiddenAreaList = useHiddenAreaList();\n    const hiddenAreaListElement = (\n        <>\n            {hiddenAreaList.map((savedAreaId) => (\n                <input key={savedAreaId} type=\"hidden\" name=\"area\" value={savedAreaId} />\n            ))}\n        </>\n    );\n\n    const ignoredParams = ['text', 'salary', 'area'];\n\n    if (proxiedVacancySearchFormParams) {\n        return (\n            <>\n                {similarSavedSearchEnabled && <input type=\"hidden\" name=\"forceFiltersSaving\" value=\"true\" />}\n                <input\n                    name=\"salary\"\n                    type=\"hidden\"\n                    value={proxiedVacancySearchFormParams.salary || ''}\n                    data-qa=\"vacancy-serp__compensation\"\n                />\n                {Object.entries(proxiedVacancySearchFormParams)\n                    .filter(([key]) => !ignoredParams.includes(key))\n                    .map(([key, value]) =>\n                        Array.isArray(value) ? (\n                            value.map((value, index) => (\n                                <input type=\"hidden\" name={key} key={`${key}${index}`} value={value.toString()} />\n                            ))\n                        ) : (\n                            <input type=\"hidden\" name={key} key={key} value={value.toString()} />\n                        )\n                    )}\n\n                <fieldset data-search-type={SupernovaSearchName.Vacancies}>{hiddenAreaListElement}</fieldset>\n            </>\n        );\n    }\n\n    return (\n        <fieldset data-search-type={SupernovaSearchName.Vacancies}>\n            {hiddenAreaListElement}\n\n            {similarSavedSearchEnabled && <input type=\"hidden\" name=\"forceFiltersSaving\" value=\"true\" />}\n        </fieldset>\n    );\n};\n\nexport default VacancySearchHiddenFields;\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\n\nimport useAdvancedSearchHref from 'lux/components/SupernovaSearch/useAdvancedSearchHref';\n\nconst TrlKeys = {\n    tooltipText: 'supernova.search.advanced.tooltip',\n};\n\ninterface AdvancedSearchIconButton {\n    searchName: SupernovaSearchName;\n    large: boolean;\n}\n\nconst AdvancedSearchIconButton: TranslatedComponent<AdvancedSearchIconButton> = ({ trls, searchName, large }) => {\n    const href = useAdvancedSearchHref(searchName);\n\n    return (\n        <div className=\"supernova-navi-advanced-search-icon\">\n            <HoverTip\n                render={() => trls[TrlKeys.tooltipText]}\n                placement={TipPlacement.Bottom}\n                host={!process.env.LUX_SERVER ? document.body : null}\n            >\n                <Button\n                    Element={Link}\n                    to={href}\n                    data-qa=\"advanced-search\"\n                    scale={large ? ButtonScale.Large : undefined}\n                    icon={<Icon initial={IconColor.Gray80} view={IconView.Adjustments} scale={IconScale.Small} />}\n                />\n            </HoverTip>\n        </div>\n    );\n};\n\nexport default translation(AdvancedSearchIconButton);\n","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport format from 'bloko/common/format';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport useServerEnv from 'bloko/common/hooks/useServerEnv';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { openAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport { extractRequestUrlFromForm } from 'lux/models/anonymousSignUp/extractRequestUrlFromForm';\nimport { useMainPageSignupEnable } from 'lux/models/anonymousSignUp/hooks';\nimport { Platform } from 'lux/models/locale.types';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AdvancedSearchButton from 'lux/components/SupernovaSearch/AdvancedSearchButton';\nimport AdvancedSearchIconButton from 'lux/components/SupernovaSearch/AdvancedSearchIconButton';\nimport HiddenFields from 'lux/components/SupernovaSearch/HiddenFields';\nimport SearchButton from 'lux/components/SupernovaSearch/SearchButton';\nimport SearchNameSelect from 'lux/components/SupernovaSearch/SearchNameSelect';\nimport SearchSuggest from 'lux/components/SupernovaSearch/SearchSuggest';\nimport { SupernovaSearchBaseState } from 'lux/components/SupernovaSearch/useSearchBaseState';\nimport useSearchNavItemProps from 'lux/components/SupernovaSearch/useSearchNavItemProps';\nimport useSendFormSubmitEvent from 'lux/components/SupernovaSearch/useSendFormSubmitEvent';\n\nconst TrlKeys = {\n    fieldsOne: 'navi.search.tab.field.one',\n    fieldsSome: 'navi.search.tab.field.some',\n    fieldsMany: 'navi.search.tab.field.many',\n    fieldsCount: 'navi.search.tab.searchConditions.count',\n};\n\nconst Features = {\n    enableReloadPageAfterChangeSearchType: 'enable_reload_page_after_change_search_type',\n};\n\ntype SupernovaSearchProps = SupernovaSearchBaseState & {\n    isAnonymousDashboardSearch?: boolean;\n};\n\nexport const SUPERNOVA_SEARCH_FORM_ID = 'supernova_search_form';\n\nconst SupernovaSearch: TranslatedComponent<SupernovaSearchProps> = ({\n    searchName,\n    setSearchName,\n    isEmployerSearch,\n    searchInputDefaultValue,\n    trls,\n    isAnonymousDashboardSearch = false,\n}) => {\n    // tempexp_27541_start\n    const mainPageSignUpEnable = useMainPageSignupEnable();\n    const dispatch = useDispatch();\n    // tempexp_27541_end\n    const formRef = useRef<HTMLFormElement>(null);\n    const isMountEffect = useRef(true);\n    const isXs = useBreakpoint(Breakpoint.M) === Breakpoint.XS;\n    const isServerEnv = useServerEnv();\n\n    const platform = useSelector(({ locale }) => locale.platform);\n    const supernovaSearchLarge = useSelector(({ supernovaSearchView }) => supernovaSearchView.large);\n    const textConditionsCount = useSelector(({ resumeSearchResult }) =>\n        resumeSearchResult.criteria?.text?.length ? resumeSearchResult.criteria.text.length - 1 : 0\n    );\n    const showResumeSearchConditions = useSelector(({ showResumeSearchConditions }) => showResumeSearchConditions);\n\n    const searchProps = useSearchNavItemProps(searchName);\n    const sendFormSubmitEvent = useSendFormSubmitEvent(searchName, isAnonymousDashboardSearch);\n    const isMapVacancySearch = useSelector(({ isMapVacancySearch }) => isMapVacancySearch);\n    const enableReload = useFeatureEnabled(Features.enableReloadPageAfterChangeSearchType);\n\n    useEffect(() => {\n        if (isMountEffect.current) {\n            isMountEffect.current = false;\n            return;\n        }\n        if (enableReload) {\n            formRef.current && formRef.current.submit();\n            return;\n        }\n        !isEmployerSearch && formRef.current && formRef.current.submit();\n    }, [isEmployerSearch, searchName, enableReload]);\n\n    const showAdditionalParamsText = !showResumeSearchConditions && textConditionsCount > 0;\n    const showSearchNameSelect = platform !== Platform.Zarplata;\n\n    if (!searchProps) {\n        return null;\n    }\n\n    const action =\n        isMapVacancySearch && searchName === SupernovaSearchName.Vacancies\n            ? paths.vacancySearchMap\n            : searchProps.action;\n\n    return (\n        <Form\n            id={SUPERNOVA_SEARCH_FORM_ID}\n            onSubmit={(event) => {\n                // tempexp_27541_start\n                if (mainPageSignUpEnable) {\n                    const form = event.target as HTMLFormElement;\n                    const backUrl = extractRequestUrlFromForm(form);\n                    event.preventDefault();\n                    dispatch(openAnonymousSignUpMainPage(backUrl));\n                }\n                // tempexp_27541_end\n                sendFormSubmitEvent();\n            }}\n            action={action}\n            ref={formRef}\n            method=\"GET\"\n            data-hh-tab-id={searchName}\n        >\n            <div\n                className={classnames('supernova-search-group', {\n                    'supernova-search-group_vertical': isEmployerSearch,\n                })}\n            >\n                <div className=\"supernova-search-group__input\">\n                    <SearchSuggest\n                        isEmployerSearch={isEmployerSearch}\n                        large={supernovaSearchLarge}\n                        searchName={searchName}\n                        searchInputDefaultValue={searchInputDefaultValue}\n                        submitForm={() => {\n                            sendFormSubmitEvent();\n                            formRef.current?.submit();\n                        }}\n                        isDashboardMobileSearch={!isServerEnv && isXs && !isEmployerSearch}\n                        innerRightElement={\n                            isEmployerSearch && (\n                                <>\n                                    {showSearchNameSelect && (\n                                        <div style={{ paddingLeft: 12 }}>\n                                            <div className=\"supernova-search-select-desktop\">\n                                                <SearchNameSelect\n                                                    searchName={searchName}\n                                                    setSearchName={setSearchName}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    {showAdditionalParamsText && (\n                                        <div className=\"supernova-search-placeholder supernova-search-select-desktop\">\n                                            <Text importance={TextImportance.Tertiary} Element=\"span\">\n                                                <Conversion\n                                                    one={trls[TrlKeys.fieldsOne]}\n                                                    some={trls[TrlKeys.fieldsSome]}\n                                                    many={trls[TrlKeys.fieldsMany]}\n                                                    value={textConditionsCount}\n                                                    hasValue={false}\n                                                    format={(trl) =>\n                                                        format(trls[TrlKeys.fieldsCount], {\n                                                            '{0}': `${textConditionsCount} ${trl}`,\n                                                        })\n                                                    }\n                                                />\n                                            </Text>\n                                        </div>\n                                    )}\n                                </>\n                            )\n                        }\n                    />\n                </div>\n                <HiddenFields searchName={searchName} />\n                {isEmployerSearch && (\n                    <>\n                        {showAdditionalParamsText && (\n                            <>\n                                <div className=\"supernova-search-group__inner\">\n                                    <div className=\"supernova-search-placeholder supernova-search-select-mobile\">\n                                        <Text importance={TextImportance.Tertiary} Element=\"span\">\n                                            <Conversion\n                                                one={trls[TrlKeys.fieldsOne]}\n                                                some={trls[TrlKeys.fieldsSome]}\n                                                many={trls[TrlKeys.fieldsMany]}\n                                                value={textConditionsCount}\n                                                hasValue={false}\n                                                format={(trl) =>\n                                                    format(trls[TrlKeys.fieldsCount], {\n                                                        '{0}': `${textConditionsCount} ${trl}`,\n                                                    })\n                                                }\n                                            />\n                                        </Text>\n                                    </div>\n\n                                    <div className=\"supernova-search-advanced-search-mobile\">\n                                        <AdvancedSearchButton searchName={searchName} />\n                                    </div>\n                                </div>\n                                <div className=\"horizontal-divider\" />\n                                <VSpacing base={5} />\n                            </>\n                        )}\n                        {showSearchNameSelect && (\n                            <div className=\"supernova-search-select-mobile\">\n                                <SearchNameSelect searchName={searchName} setSearchName={setSearchName} />\n                            </div>\n                        )}\n                    </>\n                )}\n\n                <div\n                    className={classnames('supernova-search-group__submit', {\n                        'supernova-search-group__submit_desktop-only': !isEmployerSearch,\n                        'supernova-search-group__submit_wide': supernovaSearchLarge,\n                    })}\n                    data-qa=\"search-button\"\n                >\n                    <SearchButton large={supernovaSearchLarge} employerSearch={isEmployerSearch} />\n                </div>\n                {!isEmployerSearch && searchName === SupernovaSearchName.Vacancies && (\n                    <AdvancedSearchIconButton searchName={searchName} large={supernovaSearchLarge} />\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default translation(SupernovaSearch);\n","import { useMemo } from 'react';\n\nimport { SearchQueries } from 'lux/models/search/resume/searchQueries';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst BASE_PATHS_MAP = {\n    [SupernovaSearchName.Resumes]: '/search/resume/advanced',\n    [SupernovaSearchName.Vacancies]: '/search/vacancy/advanced',\n};\n\nconst isSomeResumeSearchQueryEmpty = (\n    searchName: SupernovaSearchName,\n    resumeSearchQueries: SearchQueries[]\n): boolean => {\n    // проверяем, что переключились с поиска резюме на поиск вакансий и при этом какой-то из полей поиска пустой\n    // для того, чтобы не добавлять для этого кейста параметр text=, так как там будет брошеная запятая\n    return (\n        searchName !== SupernovaSearchName.Resumes &&\n        resumeSearchQueries.length > 1 &&\n        resumeSearchQueries.some((query) => query.text[0] === '')\n    );\n};\n\nconst getAdvancedSearchHref = (\n    searchName: SupernovaSearchName,\n    criteriaTextUpdated: string | string[],\n    params: string,\n    resumeSearchQueries?: SearchQueries[]\n): string => {\n    let href = '';\n\n    if (searchName !== SupernovaSearchName.Employers) {\n        // array only with employers search\n        const text = criteriaTextUpdated as string;\n        const searchParams = params ? `no_default_area&${params}` : '';\n        const textParam =\n            params.includes('text=') ||\n            isSomeResumeSearchQueryEmpty(searchName, resumeSearchQueries || []) ||\n            !criteriaTextUpdated\n                ? ''\n                : `text=${text}`;\n        const mainDelimiter = searchParams || textParam ? '?' : '';\n        const extraDelimiter = searchParams && textParam ? '&' : '';\n        href = `${BASE_PATHS_MAP[searchName]}${mainDelimiter}${searchParams}${extraDelimiter}${textParam}`;\n    }\n\n    return href;\n};\n\nexport default (searchName: SupernovaSearchName): string => {\n    const criteriaTextUpdated = useSelector(({ criteriaTextUpdated }) => criteriaTextUpdated);\n    const resumeSearchQueries = useSelector((state) => state.searchQueries?.values);\n\n    const vacancySearchParams = useSelector(({ vacancySearchResult }) => vacancySearchResult.queries?.currentParams);\n    const resumeSearchParams = useSelector(({ resumeSearchResult }) => resumeSearchResult.queries?.currentParams);\n    const params = useMemo(() => {\n        const searchParams = {\n            [SupernovaSearchName.Resumes]: resumeSearchParams || '',\n            [SupernovaSearchName.Vacancies]: vacancySearchParams || '',\n        };\n        return searchName !== SupernovaSearchName.Employers ? searchParams[searchName] : '';\n    }, [resumeSearchParams, searchName, vacancySearchParams]);\n\n    return getAdvancedSearchHref(searchName, criteriaTextUpdated, params, resumeSearchQueries);\n};\n","import { useSelector } from 'lux/modules/useSelector';\n\nexport const useHiddenAreaList = (): number[] | string[] => {\n    const proxiedSearchFormParams = useSelector(\n        ({ vacancySearchResult, resumeSearchResult }) =>\n            vacancySearchResult.proxiedSearchFormParams || resumeSearchResult.proxiedSearchFormParams\n    );\n    const isSearchPage = Boolean(proxiedSearchFormParams);\n    const proxiedAreaIds = proxiedSearchFormParams?.area;\n    const savedAreaIds = useSelector(({ savedAreaIds }) => savedAreaIds);\n\n    if (proxiedAreaIds?.length) {\n        return proxiedAreaIds;\n    }\n\n    // We only add detected areas when search from pages other than search result page\n    if (isSearchPage) {\n        return [];\n    }\n\n    return savedAreaIds || [];\n};\n","import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { SupernovaUserType } from 'lux/models/supernovaUserType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport interface SupernovaSearchBaseState {\n    searchName: SupernovaSearchName;\n    supernovaSearchName: SupernovaSearchName | null;\n    setSearchName: Dispatch<SetStateAction<SupernovaSearchName>>;\n    searchInputDefaultValue: string;\n    isEmployerSearch: boolean;\n}\n\nexport default (): SupernovaSearchBaseState => {\n    const supernovaUserType = useSelector(({ supernovaUserType }) => supernovaUserType);\n    const userType = useSelector(({ userType }) => userType);\n    const supernovaSearchName = useSelector(({ supernovaSearchName }) => supernovaSearchName);\n\n    const isEmployerSearch = userType === UserType.Employer || supernovaUserType === SupernovaUserType.Employer;\n    const [searchName, setSearchName] = useState(\n        supernovaSearchName || (isEmployerSearch ? SupernovaSearchName.Resumes : SupernovaSearchName.Vacancies)\n    );\n    const setSearchNameWithQueryUpdate = useCallback(\n        (searchName: SetStateAction<SupernovaSearchName>) => setSearchName(searchName),\n        [setSearchName]\n    );\n\n    const resumeSearchResult = useSelector(({ resumeSearchResult }) => resumeSearchResult);\n    const vacancySearchResult = useSelector(({ vacancySearchResult }) => vacancySearchResult);\n    const employersListQuery = useSelector(({ employersListQuery }) => employersListQuery);\n\n    let searchInputDefaultValue;\n    if (searchName === SupernovaSearchName.Vacancies) {\n        searchInputDefaultValue = vacancySearchResult.criteria?.text;\n    } else if (searchName === SupernovaSearchName.Resumes) {\n        searchInputDefaultValue = resumeSearchResult.criteria?.text?.[0];\n    } else if (searchName === SupernovaSearchName.Employers) {\n        searchInputDefaultValue = employersListQuery;\n    } else {\n        const exhaustiveCheck: never = searchName;\n        searchInputDefaultValue = exhaustiveCheck;\n    }\n    searchInputDefaultValue = searchInputDefaultValue || '';\n\n    return {\n        searchName,\n        supernovaSearchName,\n        setSearchName: setSearchNameWithQueryUpdate,\n        isEmployerSearch,\n        searchInputDefaultValue,\n    };\n};\n","import { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport interface SearchNavItem extends NavItem {\n    action: string;\n}\n\nexport default (searchName: SupernovaSearchName): SearchNavItem | undefined =>\n    useSelector(\n        ({ headerMenu }) =>\n            headerMenu\n                ?.find((menuItem) => menuItem.name === 'searchForm')\n                ?.subItems?.find((menuItem) => menuItem.name === searchName) as SearchNavItem\n    );\n","import Analytics from '@hh.ru/analytics-js';\n\nimport { useAddEventPixelsRu } from 'lux/hooks/useAddEventPixelsRu';\nimport { SupernovaSearchName, SupernovaSearchNameAnalyticsMapping } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport default (searchName: SupernovaSearchName | undefined, isAnonymousDashboardSearch: boolean): (() => void) => {\n    const criteriaTextUpdated = useSelector(({ criteriaTextUpdated }) => criteriaTextUpdated);\n    const addEventPixelsRu = useAddEventPixelsRu();\n    return (): void => {\n        if (!searchName || !(searchName in SupernovaSearchNameAnalyticsMapping)) {\n            return;\n        }\n        if (isAnonymousDashboardSearch) {\n            addEventPixelsRu('B2C_MAIN_PAGE_SEARCH');\n        }\n        void Analytics.sendHHEvent('form_submit', {\n            formName: SupernovaSearchNameAnalyticsMapping[searchName],\n            text: criteriaTextUpdated,\n        });\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"plate\":\"plate--X386Q1QZh7qyBuBjx33E\",\"inline\":\"inline--_rm1wmZTvgPPvG7rvQTp\",\"content\":\"content--cXrSmb0hObe2qajI5kGh\",\"text\":\"text--Iu2o1kuiEzO8IBRQDmSr\"};","import { useCallback } from 'react';\n\nimport { useChatik } from '@hh.ru/chatik-integration';\nimport { Card, CardStyle, Text, TextStyle, TextTypography, Counter, Cell, CellText } from '@hh.ru/magritte-ui';\nimport { LiferingOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\nimport Badge, { BadgeAppearance } from 'bloko/blocks/badge';\nimport Icon, { IconColor as BlokoIconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport BlokoText, { TextImportance } from 'bloko/blocks/text';\nimport Cookies from 'bloko/common/Cookies';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { ANON_SOCKET_COOKIE_NAME, EXPIRATION_TIME_IN_HOURS } from 'lux/components/ChatikIntegration/constants';\nimport translation from 'lux/components/translation';\nimport useMagritte from 'lux/hooks/useMagritte';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './SupportChatPlate.less';\n\nexport interface SupportChatPlateProps {\n    fromLabel?: string;\n    onClick?: () => void;\n    view?: 'plate' | 'inline';\n}\n\nconst TrlKeys = {\n    title: 'supernova.supportChat.title',\n    subtitle: 'supernova.supportChat.online',\n    inlineTitle: 'supportChat.inlineView.title',\n};\n\nconst setAnonCookie = () => {\n    Cookies.set(ANON_SOCKET_COOKIE_NAME, '1', EXPIRATION_TIME_IN_HOURS);\n};\n\nconst SupportChatPlate: TranslatedComponent<SupportChatPlateProps> = ({ trls, fromLabel, onClick, view }) => {\n    const { openChatik } = useChatik();\n    const unreadCount = useSelector(({ chatikCounters }) => chatikCounters.unreadSupportCount);\n    const userType = useSelector(({ userType }) => userType);\n    const dataQa = 'support-chat-button';\n    const isMagritte = useMagritte();\n    const typography = TextTypography.Label3Regular;\n\n    const handleClick = useCallback(() => {\n        if (userType === UserType.Anonymous) {\n            setAnonCookie();\n        }\n\n        openChatik({ chatId: 'support', view: 'widget', hhtmFromLabel: fromLabel });\n        onClick?.();\n    }, [openChatik, fromLabel, onClick, userType]);\n\n    const blokoInline = (\n        <div className={styles.inline} onClick={handleClick} data-qa={dataQa}>\n            <Icon view={IconView.Lifebuoy} initial={BlokoIconColor.Blue60} scale={IconScale.Medium} />\n            <span>{trls[TrlKeys.inlineTitle]}</span>\n        </div>\n    );\n\n    const blokoCommon = (\n        <div className={styles.plate} onClick={handleClick} data-qa={dataQa}>\n            <div className={styles.content}>\n                <Icon view={IconView.Lifebuoy} initial={BlokoIconColor.Red40} scale={IconScale.Medium} />\n\n                <div className={styles.text}>\n                    <BlokoText>{trls[TrlKeys.title]}</BlokoText>\n                    <BlokoText importance={TextImportance.Secondary}>{trls[TrlKeys.subtitle]}</BlokoText>\n                </div>\n            </div>\n\n            {Boolean(unreadCount) && <Badge value={unreadCount || 0} appearance={BadgeAppearance.Warning} />}\n        </div>\n    );\n\n    const magritteInline = (\n        <div className={styles.inline} onClick={handleClick} data-qa={dataQa}>\n            <LiferingOutlinedSize24 initial=\"accent\" />\n            <Text typography={typography} style={TextStyle.Accent}>\n                {trls[TrlKeys.inlineTitle]}\n            </Text>\n        </div>\n    );\n\n    const magritteCommon = (\n        <Card\n            actionCard\n            stretched\n            padding={16}\n            borderRadius={16}\n            style={CardStyle.Warning}\n            data-qa={dataQa}\n            onClick={handleClick}\n        >\n            <Cell\n                left={\n                    <LiferingOutlinedSize24\n                        initial=\"warning-secondary\"\n                        highlighted=\"warning-secondary\"\n                        disabled=\"warning-secondary\"\n                    />\n                }\n                right={unreadCount ? <Counter label={unreadCount || 0} /> : undefined}\n            >\n                <CellText>{trls[TrlKeys.title]}</CellText>\n                <CellText type=\"subtitle\">{trls[TrlKeys.subtitle]}</CellText>\n            </Cell>\n        </Card>\n    );\n\n    if (!isMagritte) {\n        return view === 'inline' ? blokoInline : blokoCommon;\n    }\n\n    return view === 'inline' ? magritteInline : magritteCommon;\n};\n\nexport default translation(SupportChatPlate);\n","import { WorkSchedule, Employment, WorkExperience } from '@hh.ru/types-hh-microcore';\n\nimport { BrandedTemplate } from 'lux/models/brandedVacancyTemplates';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport DriverLicense from 'lux/models/driverLicense.types';\nimport { EmployerAddress } from 'lux/models/employerAddresses.types';\nimport { EmployerDepartment } from 'lux/models/employerDepartments';\nimport { EmployerInsider } from 'lux/models/employerInsiders';\nimport { HiringPlanType } from 'lux/models/employerVacancies/vacancyHiringPlans';\nimport ContactInfo from 'lux/models/vacancy/contactInfo.types';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nimport { AvailablePublicationType } from 'lux/models/vacancyCreate/availablePublicationTypes';\n\ninterface EmployerTest {\n    id: string;\n    name: string;\n}\n\nexport interface Address {\n    addressId: number;\n    showMetroOnly: boolean;\n}\n\nexport interface VacancyTest {\n    userTestId: number;\n}\n\nexport interface Publication {\n    auction?: {\n        bid: number;\n        budget: number;\n        checked: boolean;\n    };\n    clickmeProducts: {\n        autoCampaignChecked: boolean;\n        clickmeReplenishmentChecked: boolean;\n    };\n    type?: MetallicVacancyType;\n    hiddenFromSearch: boolean;\n    employerServiceId: string;\n    withZpCrossPost?: boolean;\n    advertising?: boolean;\n    anonymous?: boolean;\n    publicationVacancyProperties?: {\n        id: string;\n        type?: MetallicVacancyType;\n        properties: { propertyType: string; parameters: Record<string, unknown>[] }[];\n    };\n}\n\nexport enum ChatWritePossibility {\n    Disabled = 'DISABLED',\n    EnabledAfterInvitation = 'ENABLED_AFTER_INVITATION',\n}\n\nexport interface IVacancyCreateFormValues {\n    acceptHandicapped: boolean;\n    acceptIncompleteResumes: boolean;\n    acceptTemporary: boolean;\n    acceptKids: boolean;\n    address?: Address;\n    vacancyName: string;\n    professionalRoleIds: string[];\n    areaIds: number[];\n    hiringPlan?: HiringPlanType;\n    compensation: {\n        currencyCode: CurrencyType;\n        compensationGross: boolean;\n    };\n    contactInfo: ContactInfo;\n    departmentCode: string;\n    driverLicenseTypes: DriverLicense[];\n    description: string;\n    brandedTemplate: string | null;\n    employment: Employment;\n    keySkills: string[];\n    responseLetterRequired: boolean;\n    workExperience: WorkExperience;\n    workSchedule: WorkSchedule;\n    chatWritePossibility: ChatWritePossibility;\n    employerManagerId: string;\n    responseNotifications: boolean;\n    publicationTime: string;\n    scheduledPublicationDateTimeIso: string;\n    workingDays: [];\n    workingTimeModes: [];\n    workingTimeIntervals: [];\n    publication: Publication;\n    test?: VacancyTest;\n    vacancyId?: number;\n    skillsSurveyProfession?: string | null;\n    showSkillsSurvey?: boolean | null;\n    assignedEmployerManagerId?: string | null;\n}\n\nexport type Nullable<T> = {\n    [P in keyof T]: T[P] | null;\n};\n\nexport type VacancyCreateFormValues = Nullable<IVacancyCreateFormValues>;\n\nexport interface AdditionFormStateValues {\n    employerInsiders: EmployerInsider[];\n    employerAddresses: EmployerAddress[];\n    employerDepartments: EmployerDepartment[];\n    employerTests: EmployerTest[];\n    brandedVacancyTemplates: BrandedTemplate[];\n    selectedPublicationTypeData: AvailablePublicationType | null;\n    vacancyCreateInitialBody: Partial<VacancyCreateFormValues>;\n}\n\nexport interface VacancyCreateTemplate {\n    id: number;\n    name: string;\n}\n","import { FieldMetaState } from 'react-final-form';\nimport { shallowEqual } from 'react-redux';\nimport { getIn, setIn } from 'final-form';\n\nimport { isObject } from 'Utils/Utils';\nimport { EmployerManager, ManagerPhone } from 'lux/models/employerManagersList';\nimport ContactInfo from 'lux/models/vacancy/contactInfo.types';\nimport { AvailablePublicationType } from 'lux/models/vacancyCreate/availablePublicationTypes';\nimport {\n    AdditionFormStateValues,\n    Address,\n    ChatWritePossibility,\n    Nullable,\n    VacancyCreateFormValues,\n    VacancyTest,\n    IVacancyCreateFormValues,\n    Publication,\n} from 'lux/models/vacancyCreate/vacancyCreate.types';\n\nexport const VACANCY_CREATE_GET_URL = '/employer/vacancy/create';\n\nconst isFilledPhone = (phone: ManagerPhone | null): phone is ManagerPhone =>\n    !!phone && Object.values(phone).some(Boolean);\nconst BACKOFFICE_EDIT_PROHIBITED_FIELDS = ['publication'];\n\nconst isContactInfo = (value: unknown): value is ContactInfo =>\n    (value as ContactInfo).phones !== undefined && (value as ContactInfo).fio !== undefined;\n\nconst isAddress = (value: unknown): value is Address => (value as Address).addressId !== undefined;\n\nconst isVacancyTest = (value: unknown): value is VacancyTest => (value as VacancyTest).userTestId !== undefined;\n\nconst isPublication = (value: unknown): value is Publication => (value as Publication) !== undefined;\n\nexport const extractContactInfo = (employerManagersList: EmployerManager[], managerId: string): ContactInfo | null => {\n    const managerData = employerManagersList.find((manager) => manager.id === managerId);\n\n    if (!managerData) {\n        return null;\n    }\n\n    return {\n        fio: managerData.text,\n        email: managerData.email,\n        phones: [managerData.phone, managerData.additionalPhone].filter(isFilledPhone),\n    };\n};\n\nconst isKeyOfObject = <T>(key: unknown, object: T): key is keyof T => Object.keys(object).includes(key);\n\nconst filterValues = (\n    values: VacancyCreateFormValues,\n    selectedPublicationTypeData: AvailablePublicationType | null,\n    isDelete: boolean\n): Partial<VacancyCreateFormValues> => {\n    const {\n        additionalFields = [],\n        ignoredFields = [],\n        removedAdditionalFields = [],\n    } = selectedPublicationTypeData || {};\n\n    const withoutFields = [...ignoredFields, ...removedAdditionalFields].filter(\n        (field) => !additionalFields.includes(field)\n    );\n    const filteredValues: Partial<VacancyCreateFormValues> = { ...values };\n\n    const publicationType = values.publication && values.publication.type;\n    if (!publicationType) {\n        delete filteredValues.publication;\n    }\n\n    const removeValue = isDelete\n        ? (key: string) => {\n              if (isKeyOfObject(key, filteredValues)) {\n                  delete filteredValues[key];\n              }\n          }\n        : (key: string) => {\n              if (isKeyOfObject(key, filteredValues)) {\n                  filteredValues[key] = null;\n              }\n          };\n\n    withoutFields.forEach(removeValue);\n    return filteredValues;\n};\n\nconst formatters = {\n    contactInfo: (contacts: unknown) => {\n        if (!contacts) {\n            return contacts;\n        }\n        return isContactInfo(contacts)\n            ? {\n                  ...contacts,\n                  phones: contacts.phones.filter(isFilledPhone),\n                  email: contacts.email ? contacts.email.toLowerCase() : null,\n              }\n            : null;\n    },\n    insiderId: (id: unknown, { employerInsiders }: AdditionFormStateValues) =>\n        employerInsiders.some(({ code }) => String(code) === String(id)) ? id : null,\n    address: (value: unknown, { employerAddresses }: AdditionFormStateValues) =>\n        value && isAddress(value) && employerAddresses.some((address) => String(address.id) === String(value.addressId))\n            ? value\n            : null,\n    departmentCode: (value: unknown, { employerDepartments }: AdditionFormStateValues) =>\n        employerDepartments.some(({ code }) => String(code) === String(value)) ? value : null,\n    brandedTemplate: (value: unknown, { brandedVacancyTemplates }: AdditionFormStateValues) =>\n        brandedVacancyTemplates.some(({ name }) => String(name) === String(value)) ? value : null,\n    test: (value: unknown, { employerTests }: AdditionFormStateValues) =>\n        isVacancyTest(value) && employerTests.some(({ id }) => String(id) === String(value?.userTestId)) ? value : null,\n    publication: (value: unknown, { selectedPublicationTypeData }: AdditionFormStateValues) => {\n        if (isPublication(value) && selectedPublicationTypeData && selectedPublicationTypeData.vacancyProperties) {\n            return {\n                ...value,\n                type: selectedPublicationTypeData.type,\n                publicationVacancyProperties: selectedPublicationTypeData.vacancyProperties,\n            };\n        }\n\n        if (!selectedPublicationTypeData && isPublication(value) && value.publicationVacancyProperties) {\n            const { id, type, properties } = value.publicationVacancyProperties;\n            if (!type) {\n                return value;\n            }\n\n            return {\n                ...value,\n                type,\n                publicationVacancyProperties: {\n                    id,\n                    properties,\n                },\n            };\n        }\n\n        return value;\n    },\n};\n\nexport const prepareValue = (\n    field: keyof typeof formatters | string,\n    value: unknown,\n    additionalStateValues: AdditionFormStateValues\n): unknown => {\n    if (isKeyOfObject(field, formatters)) {\n        return formatters[field](value, additionalStateValues);\n    }\n    if (typeof value === 'string') {\n        return value.trim();\n    }\n    return value;\n};\n\nexport const getMissingValueWithDeleteMark = (oldValue: unknown, newValue: unknown, defaultValue = null): unknown => {\n    if (newValue === undefined) {\n        return defaultValue;\n    }\n\n    if (!newValue || !isObject(oldValue) || !isObject(newValue)) {\n        return newValue;\n    }\n\n    const resultValue = { ...newValue };\n    Object.keys(oldValue).forEach((oldSubfield) => {\n        resultValue[oldSubfield] = isKeyOfObject(oldSubfield, resultValue)\n            ? getMissingValueWithDeleteMark(\n                  oldValue[oldSubfield],\n                  resultValue[oldSubfield],\n                  defaultValue?.[oldSubfield]\n              )\n            : null;\n    });\n\n    return resultValue;\n};\n\nconst emptyValues = ['', undefined, null];\nexport const filterEmptyValues = <T>(values: T, isDelete = false): Nullable<T> => {\n    const filteredValues: Nullable<T> = { ...values };\n\n    for (const field in filteredValues) {\n        if (isKeyOfObject(field, filteredValues)) {\n            const value = filteredValues[field];\n            if (emptyValues.includes(value)) {\n                if (isDelete) {\n                    filteredValues[field] = null;\n                } else {\n                    delete filteredValues[field];\n                }\n            } else if (isObject(value)) {\n                filteredValues[field] = filterEmptyValues(value) as never;\n            }\n        }\n    }\n    return filteredValues;\n};\n\nexport const prepareValues = (\n    values: VacancyCreateFormValues,\n    additionalStateValues: AdditionFormStateValues,\n    isDelete: boolean,\n    isEdit: boolean,\n    isBackoffice: boolean\n): Partial<VacancyCreateFormValues> => {\n    const isBackofficeEdit = isEdit && isBackoffice;\n    const valuesFilteredByTypeFields = filterValues(\n        values,\n        additionalStateValues.selectedPublicationTypeData,\n        isDelete\n    );\n\n    const valuesFilteredByEmptyFields = filterEmptyValues(valuesFilteredByTypeFields, isDelete);\n\n    Object.keys(valuesFilteredByEmptyFields).forEach((field) => {\n        valuesFilteredByEmptyFields[field] = prepareValue(\n            field,\n            valuesFilteredByEmptyFields[field],\n            additionalStateValues\n        ) as never;\n    });\n\n    if (isEdit) {\n        Object.keys(additionalStateValues.vacancyCreateInitialBody).forEach((fieldName) => {\n            valuesFilteredByEmptyFields[fieldName] = getMissingValueWithDeleteMark(\n                additionalStateValues.vacancyCreateInitialBody[fieldName],\n                valuesFilteredByEmptyFields[fieldName]\n            ) as never;\n        });\n    }\n\n    if (isBackofficeEdit) {\n        return Object.fromEntries(\n            Object.entries(valuesFilteredByEmptyFields).filter(\n                ([fieldName]) => !BACKOFFICE_EDIT_PROHIBITED_FIELDS.includes(fieldName)\n            )\n        );\n    }\n\n    if (!isBackofficeEdit && !Object.keys(values).includes('chatWritePossibility')) {\n        valuesFilteredByEmptyFields.chatWritePossibility = ChatWritePossibility.EnabledAfterInvitation;\n    }\n    return valuesFilteredByEmptyFields;\n};\n\nconst hasErrors = (submitError: { errors?: string[] }): submitError is { errors: string[] } => !!submitError?.errors;\n\nexport const shouldShowError = ({\n    active,\n    touched,\n    error,\n    submitError,\n    dirtySinceLastSubmit,\n}: FieldMetaState<unknown>): boolean => {\n    const hasError = !!error && typeof error !== 'object';\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const hasSubmitError = !dirtySinceLastSubmit && hasErrors(submitError);\n    return !active && ((touched && hasError) || hasSubmitError);\n};\n\nexport const formatRemoteValidationErrors = (errors: Record<string, unknown>): Record<string, unknown> => {\n    const phone = getIn(errors, 'contactInfo.phones.phone') as string[];\n    const addressErrors = getIn(errors, 'address.errors') as string[];\n\n    if (phone) {\n        const phones = [phone[0], phone[1]].filter(Boolean);\n        return setIn(errors, 'contactInfo.phones', phones) as Record<string, unknown>;\n    } else if (addressErrors) {\n        return setIn(errors, 'address.addressId.errors', addressErrors) as Record<string, unknown>;\n    }\n\n    return errors;\n};\n\nexport const formatClickmeValidationErrors = (errors: Record<string, unknown>): Record<string, unknown> => {\n    return {\n        publication: {\n            clickmeAutoCampaign: {\n                ...errors,\n            },\n        },\n    };\n};\n\ntype Field = keyof VacancyCreateFormValues;\ntype IField = keyof IVacancyCreateFormValues;\n\ninterface ChangeType<F extends IField> {\n    (oldField: IVacancyCreateFormValues[F], newField: IVacancyCreateFormValues[F]): boolean;\n}\n\ntype CompareFieldsScheme = {\n    [K in IField]?: ChangeType<K>;\n};\n\nconst compareFieldsScheme: CompareFieldsScheme = {\n    publication: (oldField, newField) =>\n        oldField.type === newField.type &&\n        Boolean(oldField.hiddenFromSearch) === Boolean(newField.hiddenFromSearch) &&\n        oldField.employerServiceId === newField.employerServiceId &&\n        oldField.withZpCrossPost === newField.withZpCrossPost &&\n        oldField.auction?.checked === newField.auction?.checked &&\n        oldField.auction?.bid === newField.auction?.bid &&\n        oldField.auction?.budget === newField.auction?.budget &&\n        oldField.clickmeProducts?.clickmeReplenishmentChecked ===\n            newField.clickmeProducts?.clickmeReplenishmentChecked &&\n        oldField.clickmeProducts?.autoCampaignChecked === newField.clickmeProducts?.autoCampaignChecked,\n    contactInfo: (oldField, newField) => {\n        const { phones: oldPhones, ...oldValues } = oldField;\n        const { phones: newPhones, ...newValues } = newField;\n        if (!shallowEqual(oldPhones, newPhones)) {\n            return false;\n        }\n        return shallowEqual(oldValues, newValues);\n    },\n    description: (oldField, newField) => newField.replace(/\\r?\\n|\\s+/g, '') === oldField.replace(/\\r?\\n|\\s+/g, ''),\n};\n\nexport const compareField = <F extends Field>(\n    oldValue: VacancyCreateFormValues[F],\n    newValue: VacancyCreateFormValues[F],\n    field: F\n): boolean => {\n    if (!oldValue || !newValue) {\n        return oldValue === newValue;\n    }\n\n    return (compareFieldsScheme[field] || shallowEqual)(oldValue, newValue);\n};\n\nexport default {\n    extractContactInfo,\n    prepareValue,\n    prepareValues,\n    shouldShowError,\n    formatRemoteValidationErrors,\n    compareField,\n};\n","import TranslateGuard from 'bloko/blocks/translateGuard';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nexport enum ResponseError {\n    Unknown = 'unknown',\n    LetterRequired = 'letter-required',\n    TestRequired = 'test-required',\n    TestServiceDown = 'test-service-down',\n    NegotiationsLimitExceeded = 'negotiations-limit-exceeded',\n    TooLongLetter = 'too-long-letter',\n    ChangeResumeVisibilityDenied = 'change-resume-visibility-denied',\n    AlreadyApplied = 'alreadyApplied',\n    SpamDetected = 'SPAM_DETECTED',\n    ResourcePolicyViolation = 'RESOURCE_POLICY_VIOLATION',\n    InappropriateLanguage = 'INAPPROPRIATE_LANGUAGE',\n}\n\nconst TrlKeys = {\n    [ResponseError.Unknown]: 'vacancy.response.popup.unknown.error',\n    [ResponseError.LetterRequired]: 'vacancy.response.popup.letter.error',\n    [ResponseError.TestRequired]: 'vacancy.response.popup.test.error',\n    [ResponseError.TestServiceDown]: 'vacancy.response.popup.testServiceDown.error',\n    [ResponseError.NegotiationsLimitExceeded]: 'vacancy.response.popup.negotiationsLimitExceeded.error',\n    [ResponseError.TooLongLetter]: 'vacancy.response.popup.letter.tooLong',\n    [ResponseError.ChangeResumeVisibilityDenied]: 'vacancy.response.popup.changeResumeVisibilityDenied.error',\n    [ResponseError.AlreadyApplied]: 'vacancy.response.popup.alreadyApplied.error',\n    [ResponseError.SpamDetected]: 'vacancy.response.popup.spamDetected',\n    [ResponseError.ResourcePolicyViolation]: 'vacancy.response.popup.resourcePolicyViolation',\n    [ResponseError.InappropriateLanguage]: 'vacancy.response.popup.inappropriateLanguage',\n};\n\ninterface VacancyResponseErrorProps {\n    code?: ResponseError;\n    letterMaxLength: number;\n}\n\nconst VacancyResponseError: TranslatedComponent<VacancyResponseErrorProps> = ({\n    trls,\n    code = ResponseError.Unknown,\n    letterMaxLength,\n}) => {\n    if (!code) {\n        return null;\n    }\n    return (\n        <TranslateGuard>\n            {code === ResponseError.TooLongLetter\n                ? format(trls[TrlKeys[code]], { '{0}': letterMaxLength })\n                : trls[TrlKeys[code]]}\n        </TranslateGuard>\n    );\n};\n\nexport default translation(VacancyResponseError);\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport responseSentElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/after_response/response_sent_element_shown';\nimport Button, { ButtonType, ButtonKind } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ChangeForm from 'lux/components/Applicant/JobSearchStatus/ChangeForm';\nimport useMarkAsRead from 'lux/components/Applicant/JobSearchStatus/useMarkAsRead';\nimport { APPLICANT_JOB_SEARCH_STATUS_SUCCESS } from 'lux/components/Notifications/ApplicantJobSearchStatusSuccess';\nimport translation from 'lux/components/translation';\nimport { JobSearchStatus, JobSearchStatusForm, JobSearchStatusTrigger } from 'lux/models/applicantUserStatuses';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nconst JOB_SEARCH_STATUS_FORM_ID = JobSearchStatusForm.VacancyResponseNotification;\n\nconst TrlKeys = {\n    header: 'vacancy.view.notify.response.title',\n    subtitle: 'notification.applicant.job.search.status.afterResponse.subtitle',\n    saveButton: 'notification.applicant.job.search.status.save',\n};\n\ninterface JobSearchStatusNotificationProps {\n    removeNotification: (statusChanged: boolean) => void;\n    vacancyId: number;\n}\n\nconst JobSearchStatusNotification: TranslatedComponent<JobSearchStatusNotificationProps> = ({\n    trls,\n    removeNotification,\n    vacancyId,\n}) => {\n    const [statusSaveDisabled, setStatusSaveDisabled] = useState(true);\n    const dispatch = useDispatch();\n    const notificationRef = useRef<HTMLDivElement>(null);\n    const statusSetRef = useRef<boolean>(false);\n    const markAsReadRef = useRef(useMarkAsRead(JobSearchStatusTrigger.AfterVacancyResponse));\n\n    useEffect(() => {\n        if (notificationRef.current) {\n            responseSentElementShown(notificationRef.current, { vacancyId });\n        }\n    }, [vacancyId]);\n\n    useEffect(() => {\n        const markAsRead = markAsReadRef.current;\n        return () => {\n            if (!statusSetRef.current) {\n                markAsRead();\n            }\n        };\n    }, []);\n\n    return (\n        <>\n            <NotificationHeading>{trls[TrlKeys.header]}</NotificationHeading>\n            <div ref={notificationRef}>{trls[TrlKeys.subtitle]}</div>\n            <VSpacing base={4} />\n            <ChangeForm\n                isCompact\n                statusesList={[JobSearchStatus.ActiveSearch, JobSearchStatus.LookingForOffers]}\n                formId={JOB_SEARCH_STATUS_FORM_ID}\n                setDisabled={setStatusSaveDisabled}\n                onSuccess={() => {\n                    statusSetRef.current = true;\n                    dispatch(addNotification(APPLICANT_JOB_SEARCH_STATUS_SUCCESS));\n                    removeNotification(true);\n                }}\n            />\n            <NotificationFooter>\n                <Button\n                    type={ButtonType.Submit}\n                    kind={ButtonKind.Success}\n                    form={JOB_SEARCH_STATUS_FORM_ID}\n                    disabled={statusSaveDisabled}\n                >\n                    {trls[TrlKeys.saveButton]}\n                </Button>\n            </NotificationFooter>\n        </>\n    );\n};\n\nexport const JobSearchStatusAfterResponse = {\n    Element: translation(JobSearchStatusNotification),\n    kind: 'ok',\n    autoClose: false,\n};\n\nexport const JOB_SEARCH_STATUS_AFTER_RESPONSE = 'JOB_SEARCH_STATUS_AFTER_RESPONSE';\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { AutoHideTime } from 'lux/models/resume/resumeCommon.types';\n\nconst TrlKeys = {\n    publishHeader: 'resume.publish.notify.resumeAutoHide.title',\n    responseHeader: 'vacancy.view.notify.response.title',\n    publishSubtitle: 'resume.publish.notify.resumeAutoHide.subtitle',\n    description: 'rb.visibility.autoHideTime.prefix.notification',\n    values: {\n        [AutoHideTime.FiveYears]: 'rb.visibility.autoHideTime.suffix.year_5',\n        [AutoHideTime.ThreeYears]: 'rb.visibility.autoHideTime.suffix.year_3',\n        [AutoHideTime.TwoYears]: 'rb.visibility.autoHideTime.suffix.year_2',\n        [AutoHideTime.TwelveMonths]: 'rb.visibility.autoHideTime.suffix.month_12',\n        [AutoHideTime.TenMonths]: 'rb.visibility.autoHideTime.suffix.month_10',\n        [AutoHideTime.EightMonths]: 'rb.visibility.autoHideTime.suffix.month_8',\n    },\n    button: 'vacancy.view.notify.response.resumeAutoHide.button',\n};\n\ninterface ResumeAutoHideNotificationProps {\n    resumeHash: string;\n    autoHideTime?: AutoHideTime;\n    isVacancyResponse?: boolean;\n}\n\nconst ResumeAutoHideNotification: TranslatedComponent<ResumeAutoHideNotificationProps> = ({\n    trls,\n    resumeHash,\n    autoHideTime = AutoHideTime.TwelveMonths,\n    isVacancyResponse = true,\n}) => {\n    return (\n        <>\n            <NotificationHeading>\n                {isVacancyResponse ? trls[TrlKeys.responseHeader] : trls[TrlKeys.publishHeader]}\n            </NotificationHeading>\n            <VSpacing base={1} />\n            {!isVacancyResponse && (\n                <>\n                    <Text>{trls[TrlKeys.publishSubtitle]}</Text>\n                    <VSpacing base={5} />\n                </>\n            )}\n            <Text>{format(trls[TrlKeys.description], { '{0}': trls[TrlKeys.values[autoHideTime]] })}</Text>\n            <VSpacing base={2} />\n            <NotificationFooter>\n                <Button\n                    Element={Link}\n                    to={`/applicant/resumes/edit/visibility?resume=${resumeHash}`}\n                    appearance={ButtonAppearance.Outlined}\n                >\n                    {trls[TrlKeys.button]}\n                </Button>\n            </NotificationFooter>\n        </>\n    );\n};\n\nexport const ResumeAutoHide = {\n    Element: translation(ResumeAutoHideNotification),\n    kind: 'ok',\n    autoCloseDelay: 10000,\n    autoClose: true,\n};\n\nexport const RESUME_AUTO_HIDE = 'RESUME_AUTO_HIDE';\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport responseSentElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/user_status/after_response/response_sent_element_shown';\nimport vacancyResponseCompleteExternal from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/vacancy_response_complete';\nimport vacancyResponseCompleteGaExternal from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/vacancy_response_complete_ga';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\nimport { format } from 'bloko/common/trl';\n\nimport { VacancyResponseResponseData } from 'lux/components/VacancyResponseLink/postVacancyResponsePopup';\nimport translation from 'lux/components/translation';\nimport { AppDispatch } from 'lux/models/appDispatch';\nimport { ResponseStatusResume } from 'lux/models/applicantVacancyResponseStatuses';\nimport { PolitenessIndex } from 'lux/models/politenessIndex';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport { JOB_SEARCH_STATUS_AFTER_RESPONSE } from 'lux/components/VacancyResponseForm/JobSearchStatusNotification';\nimport { RESUME_AUTO_HIDE } from 'lux/components/VacancyResponseForm/ResumeAutoHideNotification';\n\nconst LOCALSTORAGE_KEY_FIRST = 'vacancy-response-first';\n\nconst TrlKeys = {\n    header: 'vacancy.view.notify.response.title',\n    responseStats: 'vacancy.view.notify.response.stats',\n    responseNoStats: 'vacancy.view.notify.response.noStats',\n    viewResponse: 'vacancy.view.notify.response.show',\n};\n\ninterface VacancyResponseNotificationProps {\n    readPercent: number;\n    topicId: string;\n    analyticsEventLabel: string;\n    vacancyId: number;\n}\n\nconst VacancyResponseNotification: TranslatedComponent<VacancyResponseNotificationProps> = ({\n    trls,\n    readPercent,\n    topicId,\n    vacancyId,\n}) => {\n    useEffect(() => LocalStorageWrapper.setItem(LOCALSTORAGE_KEY_FIRST, 'true'), []);\n    const notificationRef = useRef(null);\n\n    useEffect(() => {\n        if (notificationRef.current) {\n            responseSentElementShown(notificationRef.current, { vacancyId });\n        }\n    }, [vacancyId]);\n\n    return (\n        <>\n            <NotificationHeading>{trls[TrlKeys.header]}</NotificationHeading>\n            <div ref={notificationRef}>\n                {readPercent > 0\n                    ? format(trls[TrlKeys.responseStats], {\n                          '{0}': readPercent,\n                      })\n                    : trls[TrlKeys.responseNoStats]}\n            </div>\n            {topicId !== 'SPAM' && (\n                <NotificationFooter>\n                    <BlokoLink Element={Link} to={`/applicant/negotiations/item?topicId=${topicId}`}>\n                        {trls[TrlKeys.viewResponse]}\n                    </BlokoLink>\n                </NotificationFooter>\n            )}\n        </>\n    );\n};\n\nexport const VacancyResponse = {\n    Element: translation(VacancyResponseNotification),\n    kind: 'ok',\n    autoClose: LocalStorageWrapper.getItem(LOCALSTORAGE_KEY_FIRST) !== null,\n};\n\nexport const VACANCY_RESPONSE = 'VACANCY_RESPONSE';\n\ninterface CreateNotification {\n    (props: {\n        dispatch: AppDispatch;\n        employerId?: number;\n        data: VacancyResponseResponseData & {\n            sendGAAnalyticsToStorage?: boolean;\n            respondedWithResume?: ResponseStatusResume;\n        };\n        setResponseData?: (responseData: {\n            readPercent: number | null;\n            topicId: string;\n            vacancyId: number;\n            hasResponseLetter: boolean;\n        }) => void;\n        publishedForResponseResumeHash: string | null;\n        isZarplata: boolean;\n    }): void;\n}\n\nconst EMPLOYER_STATS_URL = '/employer/stats';\ndeclare global {\n    interface FetcherGetApi {\n        [EMPLOYER_STATS_URL]: {\n            queryParams: { employerId: number };\n            response: { stats: PolitenessIndex };\n        };\n    }\n}\n\nexport const createNotification: CreateNotification = ({\n    dispatch,\n    data,\n    employerId,\n    setResponseData,\n    publishedForResponseResumeHash,\n    isZarplata,\n}) => {\n    const sendNotification = (readPercent: number | null) => {\n        const vacancyId = Number(data.vacancy_id);\n\n        if (data.sendGAAnalyticsToStorage) {\n            // eslint-disable-next-line camelcase\n            vacancyResponseCompleteGaExternal({ label: data.response_label, params: { product_id: vacancyId } });\n        } else {\n            // eslint-disable-next-line camelcase\n            vacancyResponseCompleteExternal({ label: data.response_label, params: { product_id: vacancyId } });\n            if (isZarplata) {\n                Analytics.addEventPixels('ZP_PURCHASE');\n            }\n        }\n\n        const usedResume = data.respondedWithResume;\n\n        if (usedResume && publishedForResponseResumeHash === usedResume.hash && usedResume.autoHideTime?.length) {\n            dispatch(\n                addNotification(RESUME_AUTO_HIDE, {\n                    resumeHash: publishedForResponseResumeHash,\n                    autoHideTime: usedResume.autoHideTime[0].string,\n                })\n            );\n            return;\n        }\n\n        const responseData = { readPercent, topicId: data.topic_id, vacancyId };\n        if (setResponseData) {\n            const topic = data.responseStatus.negotiations.topicList.find((n) => String(n.id) === data.topic_id);\n            setResponseData({ ...responseData, hasResponseLetter: !!topic?.hasResponseLetter });\n            return;\n        }\n\n        if (data.askJobSearchStatus) {\n            dispatch(addNotification(JOB_SEARCH_STATUS_AFTER_RESPONSE, { vacancyId }, true));\n        } else {\n            dispatch(addNotification(VACANCY_RESPONSE, responseData));\n        }\n    };\n\n    if (!employerId || publishedForResponseResumeHash) {\n        sendNotification(null);\n    } else {\n        fetcher\n            .get(EMPLOYER_STATS_URL, {\n                params: {\n                    employerId,\n                },\n            })\n            .then(\n                ({ stats }) => sendNotification(stats.readTopicPercent),\n                () => sendNotification(null)\n            );\n    }\n};\n","import PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\n\nimport translation from 'lux/components/translation';\n\nconst AlreadyRespondedPlate = ({ visible, topics, resumes, trls }) => {\n    const filteredTopics = topics.filter((topic) => !!resumes[topic.resumeId]);\n    if (!visible || !filteredTopics.length) {\n        return null;\n    }\n    const invitedTopic = filteredTopics.find((topic) => topic.invited);\n    const respondedTopic = invitedTopic || filteredTopics[0];\n    const message =\n        trls[invitedTopic ? AlreadyRespondedPlate.trls.invited.text : AlreadyRespondedPlate.trls.applied.text];\n    const linkText =\n        trls[invitedTopic ? AlreadyRespondedPlate.trls.invited.link : AlreadyRespondedPlate.trls.applied.link];\n\n    return (\n        <div className=\"vacancy-response\">\n            {message}{' '}\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to={\n                    filteredTopics.length === 1\n                        ? `/applicant/negotiations/item?topicId=${respondedTopic.id}`\n                        : '/applicant/negotiations'\n                }\n            >\n                {linkText}\n            </BlokoLink>\n        </div>\n    );\n};\n\nAlreadyRespondedPlate.trls = {\n    applied: {\n        text: 'vacancy.response.resumes.applied',\n        link: 'vacancy.response.resumes.applied.link',\n    },\n    invited: {\n        text: 'vacancy.response.resumes.invitation',\n        link: 'vacancy.response.resumes.invitation.link',\n    },\n};\n\nAlreadyRespondedPlate.propTypes = {\n    visible: PropTypes.bool,\n    topics: PropTypes.array.isRequired,\n    resumes: PropTypes.object.isRequired,\n    trls: PropTypes.object,\n};\n\nexport default translation(AlreadyRespondedPlate);\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Gap from 'bloko/blocks/gap';\nimport Information from 'bloko/blocks/information';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst Inconcistencies = ({ inconsistencies, selectedResumeId, resumes, vacancyId, trls }) => {\n    const resumeInconsistencies = inconsistencies?.resume?.find(\n        (resume) => String(resume.id) === String(selectedResumeId)\n    );\n\n    const resumeInconsistency = resumeInconsistencies?.inconsistencies?.inconsistency?.[0];\n\n    const inconsistenciesRef = useRef();\n    useEffect(() => {\n        if (inconsistenciesRef.current) {\n            Analytics.sendHHEventElementShown(inconsistenciesRef.current, {\n                name: 'vacancy_response_inconsistency',\n                resumeId: selectedResumeId,\n                vacancyId,\n                type: resumeInconsistency?.type,\n            });\n        }\n    }, [inconsistenciesRef, resumeInconsistency, selectedResumeId, vacancyId]);\n\n    if (!inconsistencies?.resume || !resumeInconsistencies || !resumeInconsistency) {\n        return null;\n    }\n\n    const selectedResume = resumes.find((resume) => String(resume.id) === String(selectedResumeId));\n\n    if (!selectedResume) {\n        return null;\n    }\n\n    // тайтла может не быть, если это незавершенное дублированное резюме\n    const resumeTitle = selectedResume.title[0]?.string ?? trls[Inconcistencies.trls.emptyTitle];\n\n    return (\n        <Gap top>\n            <div ref={inconsistenciesRef}>\n                <Information>\n                    <strong>{`${trls[Inconcistencies.trls.caption]} `}</strong>\n                    {format(trls[Inconcistencies.trls.inconsistencies[resumeInconsistency.type]], {\n                        '{0}': `${resumeInconsistency.languageTrl} ${trls[Inconcistencies.trls.lang]}`,\n                        '{1}': resumeTitle,\n                    })}\n                </Information>\n            </div>\n        </Gap>\n    );\n};\n\nInconcistencies.trls = {\n    caption: 'vacancy.response.popup.inconsistency',\n    lang: 'vacancy.response.popup.inconsistency.lang',\n    inconsistencies: {\n        LANGUAGE: 'vacancy.response.popup.inconsistency.language',\n        AREA: 'vacancy.response.popup.inconsistency.area',\n        DISTANCE: 'vacancy.response.popup.inconsistency.distance',\n        EXPERIENCE: 'vacancy.response.popup.inconsistency.experience',\n    },\n    emptyTitle: 'resume.title.empty',\n};\n\nInconcistencies.propTypes = {\n    inconsistencies: PropTypes.shape({\n        resume: PropTypes.array,\n    }),\n    selectedResumeId: PropTypes.string,\n    vacancyId: PropTypes.number,\n    resumes: PropTypes.array,\n    trls: PropTypes.object,\n};\n\nexport default translation(Inconcistencies);\n","import { useEffect, useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useToggleState from 'lux/hooks/useToggleState';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    addLetter: 'vacancy.response.popup.lastLetter',\n    lastLetterUsed: 'vacancy.response.popup.letterWasUsed',\n};\n\nconst LastLetterLink: TranslatedComponent<{ setLetter: (v: string) => void }> = ({ setLetter, trls }) => {\n    const lastLetter = useSelector((state) => state.lastVacancyResponseInfo?.letter);\n    const [isLastLetterUsed, toggleLastLetterUsed] = useToggleState(false);\n    const linkRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (linkRef.current) {\n            Analytics.sendHHEventElementShown(linkRef.current, {\n                name: 'use_letter_from_previous_response',\n            });\n        }\n    }, []);\n\n    if (!lastLetter) {\n        return null;\n    }\n\n    const handleClick = () => {\n        toggleLastLetterUsed();\n        setLetter(lastLetter);\n        Analytics.sendHHEventButtonClick('use_letter_from_previous_response');\n    };\n\n    return (\n        <div className=\"vacancy-response-popup-letter\">\n            <VSpacing base={2} />\n            {isLastLetterUsed ? (\n                <Text importance={TextImportance.Tertiary}>{trls[TrlKeys.lastLetterUsed]}</Text>\n            ) : (\n                <Link\n                    appearance={LinkAppearance.Pseudo}\n                    onClick={handleClick}\n                    data-qa=\"vacancy-response-use-last-letter\"\n                    ref={linkRef}\n                >\n                    {trls[TrlKeys.addLetter]}\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default translation(LastLetterLink);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport Textarea from 'bloko/blocks/textarea';\n\nimport translation from 'lux/components/translation';\n\nimport LastLetterLink from 'lux/components/VacancyResponseForm/LastLetterLink';\n\nconst Letter = ({ value, onChange, required, maxLength, isBottomSheet, defaultExpanded, trls }) => {\n    const [isExpanded, setIsExpanded] = useState(!!defaultExpanded || !!required || !!value);\n\n    const handleLetterToggleClick = () => {\n        setIsExpanded(true);\n        Analytics.sendHHEventButtonClick('vacancy_response_letter_toggle');\n    };\n\n    if (!isExpanded) {\n        return (\n            <div className=\"vacancy-response-popup-letter\">\n                <Link\n                    appearance={LinkAppearance.Pseudo}\n                    onClick={handleLetterToggleClick}\n                    data-qa=\"vacancy-response-letter-toggle\"\n                >\n                    {trls[isBottomSheet ? Letter.trls.addLetter : Letter.trls.expand]}\n                </Link>\n            </div>\n        );\n    }\n    return (\n        <>\n            {!isBottomSheet && (\n                <div className=\"vacancy-response-popup-subtitle\">\n                    <Text strong>{trls[Letter.trls.title]}</Text>\n                </div>\n            )}\n            <Textarea\n                maxLength={maxLength}\n                noresize\n                autogrow\n                minHeight={100}\n                maxHeight={isBottomSheet ? 400 : 0}\n                value={value}\n                placeholder={isBottomSheet ? trls[Letter.trls[required ? 'letterRequired' : 'placeholder']] : null}\n                data-qa=\"vacancy-response-popup-form-letter-input\"\n                onChange={(event) => onChange(event.target.value)}\n            />\n            {isBottomSheet && <LastLetterLink setLetter={onChange} />}\n        </>\n    );\n};\n\nLetter.trls = {\n    expand: 'vacancy.response.popup.letter',\n    title: 'vacancy.response.popup.letter',\n    addLetter: 'applicant.negotiations.write',\n    placeholder: 'vacancy.response.popup.letter.placeholder',\n    letterRequired: 'vacancy.response.popup.letter.required.placeholder',\n};\n\nLetter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n    maxLength: PropTypes.number,\n    isBottomSheet: PropTypes.bool,\n    defaultExpanded: PropTypes.bool,\n    trls: PropTypes.object,\n};\n\nexport default translation(Letter);\n","import PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { FormHint } from 'bloko/blocks/form';\nimport BlokoLink from 'bloko/blocks/link';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { BLACKLIST, NO_ONE, WHITELIST } from 'lux/models/resume/resumeAccess.types';\nimport { arrayToHumanReadableList } from 'lux/modules/humanReadableList';\n\nconst getEmployersList = (employers, andTrl) => {\n    const employersNames = employers.map((employer) => `«${employer.name}»`);\n    return arrayToHumanReadableList(employersNames, andTrl);\n};\n\nconst VisibilityHint = ({ resume, visibility, vacancy, hidden, trls }) => {\n    if (!visibility || hidden) {\n        return null;\n    }\n\n    const hash = resume.hash;\n\n    let message;\n    if (visibility.accessType === NO_ONE) {\n        if (visibility.whitelist.containsEmployer) {\n            // «Не видно никому» меняется на «Только перечисленным компаниям»,\n            // компания уже есть в белом списке (лимит в этом случае не важен)\n            message = format(trls[VisibilityHint.trls.noOne.employerToWhitelist], {\n                '{0}': vacancy.company.visibleName,\n            });\n        } else if (!visibility.whitelist.containsEmployer && visibility.whitelist.canAdd <= 0) {\n            // «Не видно никому» должно поменяться на «Только перечисленным компаниям»\n            // с добавлением компании в белый список, но список заполнен\n            message = trls[VisibilityHint.trls.noOne.whitelistIsFull];\n        } else {\n            // «Не видно никому» меняется на «Только перечисленным компаниям», компания добавляется в белый список\n            message = format(trls[VisibilityHint.trls.noOne.toWhitelist], {\n                '{0}': vacancy.company.visibleName,\n            });\n        }\n    }\n    if (visibility.accessType === WHITELIST && !visibility.whitelist.containsEmployer) {\n        if (visibility.whitelist.canAdd <= 0) {\n            // Резюме видно только перечисленным компаниям,\n            // компания должна добавиться в белый список, но список заполнен\n            // (canAdd может быть отрицательным, если лимит превышен)\n            message = format(trls[VisibilityHint.trls.whitelist.whitelistIsFull], {\n                '{0}': visibility.whitelist.limit,\n            });\n        } else {\n            // Резюме видно только перечисленным компаниям,\n            // компании нет в белом списке, при отклике она будет добавлена\n            message = format(trls[VisibilityHint.trls.whitelist.addEmployer], {\n                '{0}': vacancy.company.visibleName,\n            });\n        }\n    }\n    if (visibility.accessType === BLACKLIST && visibility.connectedEmployers.length) {\n        if (visibility.connectedEmployers.length === 1) {\n            // Резюме видно всем компаниям, кроме перечисленных,\n            // только текущая компания в черном списке пользователя и будет удалена из него\n            message = format(trls[VisibilityHint.trls.blacklist.removeEmployerCurrent], {\n                '{0}': vacancy.company.visibleName,\n            });\n        } else {\n            // Резюме видно всем компаниям, кроме перечисленных,\n            // одна или несколько компаний, в которых работает менеджер этой вакансии\n            // есть в чёрном списке и будет удалена из него\n            message = format(trls[VisibilityHint.trls.blacklist.removeEmployerMany], {\n                '{0}': vacancy.name,\n                '{1}': getEmployersList(visibility.connectedEmployers, trls[VisibilityHint.trls.and]),\n            });\n        }\n    }\n    if (!message) {\n        return null;\n    }\n    return (\n        <div className=\"vacancy-response-popup-resume__hint\">\n            <FormHint>\n                {message}{' '}\n                <BlokoLink\n                    disableVisited\n                    Element={Link}\n                    to={`/applicant/resumes/edit/visibility?resume=${hash}`}\n                    target=\"_blank\"\n                >\n                    {trls[VisibilityHint.trls.changeVisibility]}\n                </BlokoLink>\n            </FormHint>\n        </div>\n    );\n};\n\nVisibilityHint.trls = {\n    noOne: {\n        toWhitelist: 'vacancy.response.popup.visibility.noOne',\n        employerToWhitelist: 'vacancy.response.popup.visibility.noOne.companyInWhiteList',\n        whitelistIsFull: 'vacancy.response.popup.visibility.noOne.responseDisabled',\n    },\n    whitelist: {\n        addEmployer: 'vacancy.response.popup.visibility.addToWhiteList',\n        whitelistIsFull: 'vacancy.response.popup.visibility.limitExceeded',\n    },\n    blacklist: {\n        removeEmployerMany: 'vacancy.response.popup.visibility.removeFromBlackList.many',\n        removeEmployerCurrent: 'vacancy.response.popup.visibility.removeFromBlackList',\n    },\n    changeVisibility: 'vacancy.response.popup.visibility.changeVisibility',\n    and: 'abstract.and',\n};\n\nVisibilityHint.propTypes = {\n    resume: PropTypes.object,\n    visibility: PropTypes.object,\n    vacancy: PropTypes.object,\n    hidden: PropTypes.bool,\n    trls: PropTypes.object,\n};\n\nexport default translation(VisibilityHint);\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { FormHint } from 'bloko/blocks/form';\nimport Gap from 'bloko/blocks/gap';\nimport BlokoLink from 'bloko/blocks/link';\nimport Radio from 'bloko/blocks/radio';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport Debug from 'HHC/Debug';\nimport translation from 'lux/components/translation';\n\nimport VisibilityHint from 'lux/components/VacancyResponseForm/VisibilityHint';\n\nconst Resume = ({ resume, selected, single, hidden, setSelected, visibility, vacancy, trls }) => {\n    if (!resume.title?.[0]?.string) {\n        const shortResume = {\n            id: resume.id,\n            isIncomplete: resume.isIncomplete,\n            title: resume.title,\n            titleFirst: resume.title?.[0],\n            titleString: resume.title?.[0]?.string,\n            accessType: resume.accessType?.[0]?.string,\n            ...resume._attributes,\n        };\n        Debug.log('out error', new Error('Empty resume title'), { resume: shortResume });\n    }\n    const hash = resume.hash;\n    // тайтла может не быть, если это незавершенное дублированное резюме\n    const name = resume.title[0]?.string ?? trls[Resume.trls.emptyTitle];\n    const isIncomplete = resume.isIncomplete;\n\n    const renderInput = () => {\n        if (single) {\n            return <span data-qa=\"resume-title\">{name}</span>;\n        }\n        return (\n            <Radio\n                checked={selected}\n                onChange={setSelected}\n                id={`resume_${hash}`}\n                labelProps={{ 'data-qa': 'resume-title' }}\n                disabled={hidden}\n            >\n                {name}\n            </Radio>\n        );\n    };\n\n    const renderLink = () => {\n        if (hidden) {\n            return (\n                <BlokoLink\n                    disableVisited\n                    Element={Link}\n                    to={`/applicant/resumes/edit/visibility?resume=${hash}`}\n                    target=\"_blank\"\n                >\n                    {trls[Resume.trls.resumeLink.toSettings]}\n                </BlokoLink>\n            );\n        }\n        return (\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to={`/resume/${hash}`}\n                target=\"_blank\"\n                className=\"vacancy-response-popup-resume__link\"\n                data-qa=\"vacancy-response-view-resume\"\n            >\n                <Text Element=\"span\" size={TextSize.Small}>\n                    {trls[Resume.trls.resumeLink.view]}\n                </Text>\n            </BlokoLink>\n        );\n    };\n\n    const renderIncompleteHint = () => {\n        return (\n            isIncomplete && (\n                <div className=\"vacancy-response-popup-resume__hint\">\n                    <FormHint>{trls[Resume.trls.incompleteHint]}</FormHint>\n                </div>\n            )\n        );\n    };\n\n    return (\n        <div\n            className={classnames('vacancy-response-popup-resume', {\n                'vacancy-response-popup-resume_selected': selected,\n            })}\n        >\n            <div className=\"vacancy-response-popup-resume__title\">\n                <Gap right>{renderInput()}</Gap>\n                {renderLink()}\n            </div>\n            <VisibilityHint resume={resume} visibility={visibility} vacancy={vacancy} hidden={hidden} />\n            {renderIncompleteHint()}\n        </div>\n    );\n};\n\nResume.trls = {\n    resumeLink: {\n        view: 'vacancy.response.popup.resume.link',\n        toSettings: 'vacancy.response.popup.resume.settings',\n    },\n    incompleteHint: 'vacancy.response.popup.unfinished.hint',\n    emptyTitle: 'resume.title.empty',\n};\n\nResume.propTypes = {\n    resume: PropTypes.object,\n    selected: PropTypes.bool,\n    single: PropTypes.bool,\n    hidden: PropTypes.bool,\n    setSelected: PropTypes.func,\n    visibility: PropTypes.object,\n    vacancy: PropTypes.object,\n    trls: PropTypes.object,\n};\n\nexport default translation(Resume);\n","import { FormItem } from 'bloko/blocks/form';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ResponseStatusResume, ShortVacancy } from 'lux/models/applicantVacancyResponseStatuses';\n\nimport VacancyResponseFormResume from 'lux/components/VacancyResponseForm/Resume';\n\nconst TrlKeys = {\n    resumesTitle: 'vacancy.response.popup.resumes',\n    hiddenResumes: 'vacancy.response.popup.hidden.resumes',\n};\n\ninterface ResumeSelectorProps {\n    responseStatus: ShortVacancy;\n    resumes: ResponseStatusResume[];\n    selectedResume: ResponseStatusResume;\n    setSelectedResume: (value: ResponseStatusResume) => void;\n}\n\nconst ResumeSelector: TranslatedComponent<ResumeSelectorProps> = ({\n    trls,\n    responseStatus,\n    resumes,\n    selectedResume,\n    setSelectedResume,\n}) => {\n    const vacancy = responseStatus.shortVacancy;\n    const hasHiddenResumes = responseStatus.hiddenResumeIds.length > 0;\n    const isSingleResume = resumes.length === 1;\n\n    return (\n        <>\n            <div className=\"vacancy-response-popup-subtitle\">\n                <Text strong>{trls[TrlKeys.resumesTitle]}</Text>\n            </div>\n            <div className=\"vacancy-response-popup-resume-list\" data-qa=\"vacancy-response-resume-list\">\n                {hasHiddenResumes && <FormItem>{trls[TrlKeys.hiddenResumes]}</FormItem>}\n                {resumes.map((resume) => {\n                    return (\n                        <VacancyResponseFormResume\n                            resume={resume}\n                            key={resume.hash}\n                            selected={resume.id === selectedResume.id}\n                            single={isSingleResume}\n                            hidden={responseStatus.hiddenResumeIds.includes(String(resume.id))}\n                            setSelected={() => setSelectedResume(resume)}\n                            visibility={responseStatus.resumeVisibility?.[resume.id]}\n                            vacancy={vacancy}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default translation(ResumeSelector);\n","import { useState, useEffect, useRef } from 'react';\nimport { Form as FinalForm } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport debounce from 'bloko/common/debounce';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport scrollToElement from 'Utils/ScrollToElement';\nimport Form from 'lux/components/Form';\nimport { ResponseError } from 'lux/components/VacancyResponseError';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport useGetResponseQuestion from 'lux/components/VacancyView/hooks/useResponseQuestion';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { responseStreakUpdate } from 'lux/models/applicantResponseStreaks';\nimport { vacancyResponseUpdate } from 'lux/models/applicantVacancyResponseStatuses';\nimport { addUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport { ResponseQuestion } from 'lux/models/vacancyResponseQuestions';\nimport fetcher from 'lux/modules/fetcher';\nimport scrollToFirstError from 'lux/modules/finalForm/scrollToFirstError';\nimport { useSelector } from 'lux/modules/useSelector';\nimport UserLabel from 'lux/modules/userLabels';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\n\nimport VacancyResponseFormAlreadyRespondedPlate from 'lux/components/VacancyResponseForm/AlreadyRespondedPlate';\nimport VacancyResponseFormInconsistencies from 'lux/components/VacancyResponseForm/Inconsistencies';\nimport VacancyResponseFormLetter from 'lux/components/VacancyResponseForm/Letter';\nimport ResumeSelector from 'lux/components/VacancyResponseForm/ResumeSelector';\nimport { createNotification } from 'lux/components/VacancyResponseForm/VacancyResponseNotification';\n\nconst saveLetterToLocalstorage = debounce((localstorageKey, letterText) => {\n    LocalStorageWrapper.setItem(localstorageKey, letterText);\n}, 100);\n\nconst scrollToRespondedBlock = (blockRef) => {\n    setTimeout(() => {\n        if (blockRef?.current) {\n            scrollToElement(blockRef.current, {\n                topOffset: 0,\n                centered: false,\n            });\n        }\n    }, 0);\n};\n\nexport const getUserResumes = (responseStatus) => {\n    const resumesIds = [...responseStatus.unusedResumeIds, ...responseStatus.hiddenResumeIds];\n    return resumesIds.map((resumeId) => responseStatus.resumes[resumeId]);\n};\n\nconst applicantActivityAction = makeSetStoreField('applicantActivity');\nconst decorators = [scrollToFirstError({ name: 'vacancy_response' })];\nconst NEED_LOGIN_CODE = 'need-login';\nconst FORM_ID = 'RESPONSE_MODAL_FORM_ID';\n\nconst ResponseForm = ({\n    vacancyId,\n    resumes,\n    submitting,\n    setSubmitting,\n    onResponse,\n    errorCode,\n    onError,\n    vacancyBodyFooterNodeRef,\n    vacancySource,\n    needRedirect,\n    isBottomSheet,\n    setResponseData,\n    selectedResume,\n    setSelectedResume,\n    postponedActions,\n    render = () => {},\n    renderContent = () => {},\n    renderSubmit = () => {},\n}) => {\n    const dispatch = useDispatch();\n    const responseStatus = useSelector((state) => {\n        return state.applicantVacancyResponseStatuses[vacancyId];\n    });\n    const publishedForResponseResumeHash = useSelector((state) => state.publishedForResponseResumeHash);\n    const countriesProfileVisibilityAgreement = useSelector((state) => {\n        return state.countriesProfileVisibilityAgreement;\n    });\n    const topics = responseStatus.negotiations.topicList;\n    const vacancy = responseStatus.shortVacancy;\n    const alreadyResponded = responseStatus.usedResumeIds.length > 0;\n\n    const getVacancyResponseQuestion = useGetResponseQuestion();\n    const localstorageKey = `vacancy_response_letter_${vacancyId}`;\n    const [letterText, setLetterText] = useState(\n        LocalStorageWrapper.getItem(localstorageKey) || getVacancyResponseQuestion(vacancyId)?.value || ''\n    );\n    const formRef = useRef();\n    const { hhtmFromLabel } = useSelector(({ router }) => router.location.query);\n    const hhtmSourceLabel = vacancySource === Source.RelatedVacancies ? 'suitable_vacancies' : undefined;\n    const responseQuestion = getVacancyResponseQuestion(vacancyId);\n    const isZarplata = useIsZarplataPlatform();\n\n    useEffect(() => {\n        if (errorCode === ResponseError.LetterRequired && letterText.trim().length) {\n            onError(null);\n        }\n        saveLetterToLocalstorage(localstorageKey, letterText);\n    }, [errorCode, letterText, localstorageKey, onError]);\n\n    useEffect(() => {\n        if (responseQuestion) {\n            setLetterText(responseQuestion.value);\n        }\n    }, [responseQuestion]);\n\n    const runActionFinally = (action) => {\n        if (isBottomSheet) {\n            postponedActions.current.push(action);\n        } else {\n            action();\n        }\n    };\n\n    const sendResponse = (values) => {\n        if (vacancy['@responseLetterRequired'] && !letterText.trim().length) {\n            onError(ResponseError.LetterRequired);\n            return;\n        }\n\n        setSubmitting(true);\n        onError(null);\n\n        const skipTest = !!values?.skipTest;\n        const formdata = new FormData((!skipTest && formRef.current) || undefined);\n        const data = {\n            vacancy_id: vacancyId, // eslint-disable-line camelcase\n            resume_hash: selectedResume.hash, // eslint-disable-line camelcase\n            ignore_postponed: true, // eslint-disable-line camelcase\n            incomplete: selectedResume.isIncomplete,\n            mark_applicant_visible_in_vacancy_country: countriesProfileVisibilityAgreement?.confirmed === true, // eslint-disable-line camelcase\n            letter: letterText,\n            lux: true,\n            withoutTest: skipTest ? 'yes' : 'no',\n            hhtmFromLabel,\n            hhtmSourceLabel,\n        };\n        Object.keys(data).forEach((item) => {\n            formdata.append(item, data[item]);\n        });\n\n        fetcher\n            .post('/applicant/vacancy_response/popup', formdata)\n            .then(\n                ({ data }) => {\n                    LocalStorageWrapper.removeItem(localstorageKey);\n                    onResponse && onResponse();\n                    const actions = [\n                        vacancyResponseUpdate({ vacancyId, data: data.responseStatus }),\n                        addUserLabelsForVacancies({ vacancyId, labels: [UserLabel.Response] }),\n                        applicantActivityAction(data.applicantActivity),\n                    ];\n\n                    if (data.topic_id === 'SPAM') {\n                        return;\n                    }\n\n                    if (needRedirect) {\n                        let params = '';\n                        if ('responsesStreak' in data) {\n                            params =\n                                `?responsesCount=${data.responsesStreak.responsesCount}&responsesRequired=` +\n                                `${data.responsesStreak.responsesRequired}`;\n                        }\n                        data.sendGAAnalyticsToStorage = true;\n                        createNotification({\n                            dispatch,\n                            data,\n                            employerId: vacancy.company?.id,\n                            publishedForResponseResumeHash,\n                            isZarplata,\n                        });\n                        dispatch(push(`/vacancy/${vacancyId}${params}`));\n                    } else if ('responsesStreak' in data) {\n                        data.sendGAAnalyticsToStorage = false;\n                        createNotification({\n                            dispatch,\n                            data,\n                            employerId: vacancy.company?.id,\n                            setResponseData: isBottomSheet ? setResponseData : undefined,\n                            publishedForResponseResumeHash,\n                            isZarplata,\n                        });\n                        actions.push(responseStreakUpdate({ vacancyId, data: data.responsesStreak }));\n                    }\n\n                    // Для повторного отклика ставим выбранным первое неиспользованное резюме\n                    const unusedResumes = resumes.filter((resume) => resume.id !== selectedResume.id);\n                    if (unusedResumes.length > 0) {\n                        setSelectedResume(unusedResumes[0]);\n                    }\n\n                    UXFeedback.sendEvent('vacancy_response_action');\n                    runActionFinally(() => dispatch(actions));\n\n                    if (!needRedirect) {\n                        runActionFinally(() => scrollToRespondedBlock(vacancyBodyFooterNodeRef));\n                    }\n                },\n                ({ response }) => {\n                    const code = response?.data?.error;\n\n                    if (response?.data?.type === NEED_LOGIN_CODE && response?.data?.redirect_uri) {\n                        return dispatch(push(response.data.redirect_uri));\n                    }\n\n                    if (response && code === 'resume-incomplete' && 'redirectUrl' in response.data) {\n                        return dispatch(push(response.data.redirectUrl));\n                    }\n\n                    return onError(code || 'unknown');\n                }\n            )\n            .finally(() => {\n                setSubmitting(false);\n            });\n    };\n\n    const renderForm = () => (\n        <FinalForm\n            onSubmit={sendResponse}\n            initialValues={{ skipTest: false }}\n            decorators={decorators}\n            render={({ handleSubmit, form }) => (\n                <Form onSubmit={handleSubmit} ref={formRef} name={'vacancy_response'} id={FORM_ID}>\n                    {renderContent(form)}\n                    <div className=\"vacancy-response-popup-body\">\n                        <VacancyResponseFormAlreadyRespondedPlate\n                            visible={alreadyResponded && !submitting}\n                            topics={topics}\n                            resumes={responseStatus.resumes}\n                        />\n                        {!!resumes.length && (\n                            <div>\n                                <VSpacing base={2} />\n                                {!isBottomSheet && (\n                                    <ResumeSelector\n                                        responseStatus={responseStatus}\n                                        resumes={resumes}\n                                        selectedResume={selectedResume}\n                                        setSelectedResume={setSelectedResume}\n                                    />\n                                )}\n                                <VacancyResponseFormLetter\n                                    value={letterText}\n                                    onChange={setLetterText}\n                                    required={vacancy['@responseLetterRequired']}\n                                    maxLength={responseStatus.letterMaxLength}\n                                    isBottomSheet={isBottomSheet}\n                                    defaultExpanded={responseQuestion?.id === ResponseQuestion.Other}\n                                />\n                                {!isBottomSheet && (\n                                    <VacancyResponseFormInconsistencies\n                                        inconsistencies={responseStatus.resumeInconsistencies}\n                                        selectedResumeId={selectedResume.id}\n                                        vacancyId={vacancyId}\n                                        resumes={resumes}\n                                    />\n                                )}\n                            </div>\n                        )}\n                        {renderSubmit({ form })}\n                    </div>\n                </Form>\n            )}\n        />\n    );\n\n    return render({ renderForm, formId: FORM_ID, isLetterTextEmpty: !letterText.length });\n};\n\nResponseForm.propTypes = {\n    vacancyId: PropTypes.number,\n    resumes: PropTypes.arrayOf(PropTypes.object),\n    submitting: PropTypes.bool,\n    setSubmitting: PropTypes.func,\n    onResponse: PropTypes.func,\n    errorCode: PropTypes.string,\n    onError: PropTypes.func,\n    vacancyBodyFooterNodeRef: PropTypes.object,\n    submitTriggerRef: PropTypes.object,\n    needRedirect: PropTypes.bool,\n    isBottomSheet: PropTypes.bool,\n    setResponseData: PropTypes.func,\n    selectedResume: PropTypes.object,\n    setSelectedResume: PropTypes.func,\n    trls: PropTypes.object,\n    children: PropTypes.node,\n    onSubmit: PropTypes.func,\n    vacancySource: PropTypes.oneOf(Object.values(Source)),\n};\n\nexport default ResponseForm;\n","import { MouseEvent, MutableRefObject, ReactNode, RefObject, useCallback, useEffect, useRef, useState } from 'react';\nimport { DefaultRootState, useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport SendFloodlightConversion from 'HH/SendFloodlightConversion';\nimport { SendKardinalAnalytics, StatisticsProcessing } from 'HH/SendHHAnalytics';\nimport axios from 'HHC/Axios';\nimport Debug from 'HHC/Debug';\nimport { sendResponseAttempt } from 'Modules/VacancyAnalytics';\nimport scrollToElement from 'Utils/ScrollToElement';\nimport { APPLICANT_RESPONSE_ERROR } from 'lux/components/Notifications/VacancyResponseError';\nimport { sendAdvertisingAnalytics } from 'lux/components/VacancyResponsePopup/AdvertisingPopup';\nimport { sendBottomSheetShownEvent } from 'lux/components/VacancyResponsePopup/BottomSheet/utils';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport { scrollWithAttention, SIGNUP_FORM_ATTENTION_CLASS } from 'lux/components/VacancyView/scrolling';\nimport translation from 'lux/components/translation';\nimport { useIsHrZarplataDomain } from 'lux/hooks/useIsHrZarplataDomain';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport useResumeIdResponseStatuses, { ResumeIdResponseStatuses } from 'lux/hooks/useResumeIdResponseStatuses';\nimport useRegisterInteraction from 'lux/hooks/vacancies/useRegisterInteraction';\nimport {\n    ShortVacancy,\n    vacancyResponseSetFetching,\n    vacancyResponseUpdate,\n} from 'lux/models/applicantVacancyResponseStatuses';\nimport { CountriesProfileVisibilityAgreement } from 'lux/models/countriesProfileVisibilityAgreement';\nimport { RelocationWarning } from 'lux/models/relocationWarning';\nimport { VacancyResponsePopup } from 'lux/models/vacancyResponsePopup';\nimport PopupType from 'lux/models/vacancyResponsePopup/popupType.types';\nimport fetcher from 'lux/modules/fetcher';\nimport { sendAnythingClickAnalytics, VacancyOfTheDayLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport useQuickResponse, { HandleQuickResponse } from 'lux/components/VacancyResponseLink/useQuickResponse';\n\nconst relocationWarningAction = makeSetStoreField('relocationWarning');\nconst countriesProfileVisibilityAgreementAction = makeSetStoreField('countriesProfileVisibilityAgreement');\nconst vacancyResponsePopupAction = makeSetStoreField('vacancyResponsePopup');\nconst setVacancyResponsePopupVisible = makeSetStoreField('vacancyResponsePopupVisible');\nconst setLastVacancyResponseInfo = makeSetStoreField('lastVacancyResponseInfo');\n\ninterface VacancyResponseGetParams {\n    vacancyId: number;\n    isTest: string;\n    withoutTest: string;\n    lux: boolean;\n    isCheckingResponseType?: boolean;\n}\nenum ResponseType {\n    NeedLogin = 'need-login',\n    NoResumes = 'no-resumes',\n    TestRequired = 'test-required',\n    Reload = 'reload',\n    Modal = 'modal',\n    QuickResponse = 'quickResponse',\n    AlreadyApplied = 'alreadyApplied',\n}\nconst VACANCY_RESPONSE_POPUP_URL = '/applicant/vacancy_response/popup';\nexport interface VacancyResponsePopupResponse {\n    countriesProfileVisibilityAgreement?: CountriesProfileVisibilityAgreement;\n    type: ResponseType;\n    ['redirect_uri']: string;\n    responseStatus: ShortVacancy;\n    responsePopup: VacancyResponsePopup;\n    lastResponseLetter?: string;\n    lastResponseResumeHash?: string;\n    relocationWarning?: RelocationWarning;\n    chatId: number;\n    body: {\n        letterMaxLength: number;\n        responseStatus: ShortVacancy;\n        [`vacancy_id`]: number;\n    };\n}\ndeclare global {\n    interface FetcherGetApi {\n        [VACANCY_RESPONSE_POPUP_URL]: {\n            queryParams: VacancyResponseGetParams;\n            response: VacancyResponsePopupResponse;\n        };\n    }\n}\n\ninterface ResponseCallback {\n    (): void;\n}\n\ninterface FetchVacancyResponsePopupArgs extends VacancyResponseGetParams {\n    handleQuickResponse: HandleQuickResponse;\n    employerId?: number;\n    scrollToFooter: () => void;\n    responseCallbackRef: MutableRefObject<ResponseCallback | null>;\n    enableRelocationWarning?: boolean;\n    openChat?: boolean;\n    hhtmFromLabel: string;\n    hhtmSourceLabel?: string;\n    onResponseComplete?: () => void;\n    onPopupCancelCallback?: () => void;\n    vrImmediateRedirectUrl?: string;\n    alreadyApplied?: boolean;\n}\n\nexport const fetchVacancyResponsePopup =\n    ({\n        handleQuickResponse,\n        employerId,\n        scrollToFooter,\n        responseCallbackRef,\n        enableRelocationWarning,\n        vrImmediateRedirectUrl,\n        openChat,\n        hhtmFromLabel,\n        hhtmSourceLabel,\n        onResponseComplete,\n        onPopupCancelCallback,\n        ...params\n    }: FetchVacancyResponsePopupArgs) =>\n    (\n        dispatch: (actions: AnyAction[] | AnyAction | ThunkAction<void, DefaultRootState, void, AnyAction>) => void\n    ): void => {\n        const handleResponse = (data: VacancyResponsePopupResponse, responseCallback: () => void) => {\n            if (data.countriesProfileVisibilityAgreement?.show) {\n                dispatch(countriesProfileVisibilityAgreementAction(data.countriesProfileVisibilityAgreement));\n                responseCallbackRef.current = responseCallback;\n            } else if (enableRelocationWarning && data.relocationWarning?.show) {\n                dispatch(relocationWarningAction(data.relocationWarning));\n                responseCallbackRef.current = responseCallback;\n            } else {\n                responseCallback();\n            }\n        };\n\n        fetcher\n            .get(VACANCY_RESPONSE_POPUP_URL, { params })\n            .then((data) => {\n                const type = data.type;\n                dispatch(vacancyResponseSetFetching({ vacancyId: params.vacancyId, isFetching: false }));\n\n                switch (type) {\n                    case ResponseType.NeedLogin:\n                    case ResponseType.NoResumes:\n                    case ResponseType.TestRequired:\n                        handleResponse(data, () => {\n                            dispatch(push(data.redirect_uri));\n                        });\n                        break;\n                    case ResponseType.Reload:\n                        dispatch(push(window.location));\n                        break;\n                    case ResponseType.Modal:\n                        handleResponse(data, () => {\n                            const actions: AnyAction[] = [];\n                            if (data.responseStatus) {\n                                const responseStatus = {\n                                    vacancyId: params.vacancyId,\n                                    data: data.responseStatus,\n                                };\n                                actions.push(vacancyResponseUpdate(responseStatus));\n                            }\n                            actions.push(\n                                vacancyResponsePopupAction({\n                                    ...data.responsePopup,\n                                    onCancelCallback: onPopupCancelCallback,\n                                })\n                            );\n                            actions.push(setVacancyResponsePopupVisible(true));\n                            if (data.responsePopup.type === PopupType.Normal) {\n                                actions.push(\n                                    setLastVacancyResponseInfo({\n                                        letter: data.lastResponseLetter,\n                                        resumeHash: data.lastResponseResumeHash,\n                                    })\n                                );\n                                sendBottomSheetShownEvent(params.vacancyId, data.responseStatus);\n                            }\n                            dispatch(actions);\n                        });\n                        break;\n                    case ResponseType.QuickResponse:\n                        handleResponse(data, async () => {\n                            dispatch(vacancyResponseSetFetching({ vacancyId: params.vacancyId, isFetching: true }));\n                            await handleQuickResponse({\n                                employerId,\n                                openChat,\n                                ...data.body,\n                                hhtmFromLabel,\n                                hhtmSourceLabel,\n                            });\n                            if (!openChat) {\n                                scrollToFooter();\n                            }\n                        });\n                        break;\n                    case ResponseType.AlreadyApplied:\n                        dispatch(addNotification(APPLICANT_RESPONSE_ERROR, { code: 'alreadyApplied' }));\n                        break;\n                    default:\n                        dispatch(addNotification(APPLICANT_RESPONSE_ERROR));\n                        Debug.log('out error', new Error('Unknown response type'), { data, params });\n                }\n            })\n            .catch(() => {\n                dispatch(addNotification(APPLICANT_RESPONSE_ERROR));\n                dispatch(vacancyResponseSetFetching({ vacancyId: params.vacancyId, isFetching: false }));\n            })\n            .finally(() => {\n                onResponseComplete?.();\n            });\n    };\nenum RespondedText {\n    OneResponse = 'oneResponse',\n    MoreResponse = 'moreResponse',\n    Invite = 'invite',\n    Discard = 'discard',\n}\n\ninterface ResponsedProps {\n    text: RespondedText;\n    href: string;\n}\n\nconst getRespondedProps = (resumeIdResponseStatuses: ResumeIdResponseStatuses | null): ResponsedProps | null => {\n    if (resumeIdResponseStatuses === null) {\n        return null;\n    }\n\n    const { respondedIds, invitedIds, discardedIds, usedResumeIds } = resumeIdResponseStatuses;\n    const usedResumeCount = usedResumeIds.length;\n\n    let text = RespondedText.OneResponse;\n    let href = '/applicant/negotiations';\n\n    if (usedResumeCount > 1) {\n        text = RespondedText.MoreResponse;\n    }\n\n    if (invitedIds.length > 0) {\n        text = RespondedText.Invite;\n    } else if (discardedIds.length > 0) {\n        text = RespondedText.Discard;\n    }\n\n    if (usedResumeCount === 1) {\n        href = '/applicant/negotiations/item?topicId=';\n        if (invitedIds.length === 1) {\n            href += invitedIds[0];\n        } else if (discardedIds.length === 1) {\n            href += discardedIds[0];\n        } else {\n            href += respondedIds[0];\n        }\n    }\n\n    return {\n        text,\n        href,\n    };\n};\n\nconst TrlKeys = {\n    [RespondedText.OneResponse]: 'show.topicStatus.response',\n    [RespondedText.MoreResponse]: 'show.topicStatus.responses',\n    [RespondedText.Discard]: 'show.topicStatus.discard',\n    [RespondedText.Invite]: 'show.topicStatus.invitation',\n};\n\ninterface VacancyResponseLinkProps {\n    render: (handler: (event?: MouseEvent<Element>) => void) => JSX.Element;\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    place?: string;\n    scrollToSignupForm?: boolean;\n    renderResponded?: (params: { text: string; href: string }) => ReactNode;\n    vacancyId: number;\n    employerId?: number;\n    doResponse?: boolean;\n    enableRelocationWarning?: boolean;\n    hasForceQuickResponse?: boolean;\n    vrImmediateRedirectUrl?: string;\n    openChat?: boolean;\n    vacancySource?: Source;\n    adVacancyClickUrl?: string;\n    vacancyOfTheDayClickUrl?: string;\n    onResponseComplete?: () => void;\n    onScrollToSignupForm?: () => void;\n    onPopupCancelCallback?: () => void;\n}\n\nconst VacancyResponseLink: TranslatedComponent<VacancyResponseLinkProps> = ({\n    trls,\n    render,\n    renderResponded,\n    vacancyId,\n    employerId,\n    doResponse,\n    vacancyBodyFooterNodeRef,\n    scrollToSignupForm,\n    enableRelocationWarning,\n    hasForceQuickResponse,\n    vrImmediateRedirectUrl,\n    openChat,\n    vacancySource,\n    adVacancyClickUrl,\n    vacancyOfTheDayClickUrl,\n    onResponseComplete,\n    onScrollToSignupForm,\n    onPopupCancelCallback,\n    place,\n}) => {\n    const dispatch = useDispatch();\n    const [kardinalAnalyticsSent, setKardinalAnalyticsSent] = useState(false);\n    const handleQuickResponse = useQuickResponse();\n    const resumeIdResponseStatuses = useResumeIdResponseStatuses(vacancyId);\n    const respondedProps = !!renderResponded && getRespondedProps(resumeIdResponseStatuses);\n    const relocationWarning = useSelector((state) => state.relocationWarning);\n    const countriesProfileVisibilityAgreement = useSelector((state) => state.countriesProfileVisibilityAgreement);\n    const responseCallbackRef = useRef<ResponseCallback | null>(null);\n    const doResponseHappened = useRef(false);\n    const forceQuickResponse = useSelector(({ router }) => router.location.query?.forceQuickResponse);\n    const { pathname, search } = useSelector(({ router }) => router.location);\n    const { hhtmFromLabel } = useSelector(({ router }) => router.location.query) || {};\n    const relatedVacancies = useSelector((state) => state.relatedVacancies);\n    const getHhtmSourceLabel = useCallback(() => {\n        if (vacancySource === Source.RelatedVacancies && relatedVacancies.type) {\n            return `${relatedVacancies.type}_vacancies`;\n        }\n\n        return undefined;\n    }, [relatedVacancies.type, vacancySource]);\n    const isHrZarplataDomain = useIsHrZarplataDomain();\n    const topLevelSite = useSelector((state) => state.topLevelSite);\n    const userType = useSelector((state) => state.userType);\n    const isZarplata = useIsZarplataPlatform();\n\n    const scrollToFooter = useCallback(() => {\n        if (vacancyBodyFooterNodeRef?.current) {\n            scrollToElement(vacancyBodyFooterNodeRef.current, {\n                topOffset: 0,\n                centered: false,\n            });\n        }\n    }, [vacancyBodyFooterNodeRef]);\n\n    useEffect(() => {\n        if (doResponse && !doResponseHappened.current) {\n            doResponseHappened.current = true;\n            dispatch(\n                fetchVacancyResponsePopup({\n                    vacancyId,\n                    isTest: 'no',\n                    withoutTest: 'no',\n                    lux: true,\n                    handleQuickResponse,\n                    employerId,\n                    scrollToFooter,\n                    responseCallbackRef,\n                    enableRelocationWarning,\n                    hhtmFromLabel,\n                    onResponseComplete,\n                    onPopupCancelCallback,\n                    hhtmSourceLabel: getHhtmSourceLabel(),\n                })\n            );\n        }\n    }, [\n        doResponse,\n        employerId,\n        enableRelocationWarning,\n        handleQuickResponse,\n        hhtmFromLabel,\n        vacancyId,\n        getHhtmSourceLabel,\n        onResponseComplete,\n        dispatch,\n        scrollToFooter,\n        onPopupCancelCallback,\n    ]);\n\n    const alreadyApplied = !!resumeIdResponseStatuses?.usedResumeIds?.length;\n\n    useEffect(() => {\n        if (relocationWarning.confirmed && responseCallbackRef.current && relocationWarning.vacancyId === vacancyId) {\n            responseCallbackRef.current();\n            responseCallbackRef.current = null;\n        }\n    }, [relocationWarning.confirmed, relocationWarning.vacancyId, vacancyId]);\n\n    useEffect(() => {\n        if (\n            countriesProfileVisibilityAgreement.confirmed &&\n            responseCallbackRef.current &&\n            countriesProfileVisibilityAgreement.vacancyId === vacancyId\n        ) {\n            responseCallbackRef.current();\n            responseCallbackRef.current = null;\n        }\n    }, [countriesProfileVisibilityAgreement.confirmed, countriesProfileVisibilityAgreement.vacancyId, vacancyId]);\n\n    const registerInteraction = useRegisterInteraction(vacancyId);\n\n    const onResponseClick = useCallback(\n        (event?: MouseEvent) => {\n            if (isHrZarplataDomain) {\n                return;\n            }\n            void registerInteraction();\n            if (!vrImmediateRedirectUrl) {\n                event?.preventDefault();\n            }\n\n            SendFloodlightConversion({ type: 'hh_co0', cat: 'hh_bu00' });\n            sendResponseAttempt({\n                employerId,\n                vacancyId,\n                hhtmSourceLabel: vacancySource === Source.RelatedVacancies ? getHhtmSourceLabel() : place,\n                sendExternal: true,\n                topLevelSite,\n                userType,\n            });\n            if (adVacancyClickUrl) {\n                void axios.get(adVacancyClickUrl);\n            }\n\n            if (vacancyOfTheDayClickUrl) {\n                void sendAnythingClickAnalytics({\n                    location: VacancyOfTheDayLocation.VacancySearchResult,\n                    clickUrl: vacancyOfTheDayClickUrl,\n                });\n            }\n\n            if (scrollToSignupForm && vacancyBodyFooterNodeRef?.current) {\n                if (!kardinalAnalyticsSent) {\n                    void SendKardinalAnalytics({\n                        goal: 'response',\n                        data: { vacancy_id: vacancyId, employer_id: employerId }, // eslint-disable-line camelcase\n                    });\n                    setKardinalAnalyticsSent(true);\n                }\n                void StatisticsProcessing({ data: { action: 'vacancy_response_attempt', label: vacancyId } });\n                onScrollToSignupForm?.();\n                scrollWithAttention(vacancyBodyFooterNodeRef.current, SIGNUP_FORM_ATTENTION_CLASS);\n                return;\n            }\n\n            if (vrImmediateRedirectUrl) {\n                sendAdvertisingAnalytics(vacancyId);\n                if (isZarplata) {\n                    Analytics.addEventPixels('ZP_PURCHASE');\n                }\n                return;\n            }\n\n            if (event) {\n                dispatch(vacancyResponseSetFetching({ vacancyId, isFetching: true }));\n            }\n\n            dispatch(\n                fetchVacancyResponsePopup({\n                    vacancyId,\n                    isTest: 'no',\n                    withoutTest: 'no',\n                    lux: true,\n                    handleQuickResponse,\n                    employerId,\n                    scrollToFooter,\n                    responseCallbackRef,\n                    enableRelocationWarning,\n                    vrImmediateRedirectUrl,\n                    openChat,\n                    hhtmFromLabel,\n                    onResponseComplete,\n                    onPopupCancelCallback,\n                    hhtmSourceLabel: getHhtmSourceLabel(),\n                    alreadyApplied,\n                })\n            );\n        },\n        [\n            isHrZarplataDomain,\n            registerInteraction,\n            vrImmediateRedirectUrl,\n            employerId,\n            vacancyId,\n            vacancySource,\n            getHhtmSourceLabel,\n            place,\n            topLevelSite,\n            userType,\n            adVacancyClickUrl,\n            vacancyOfTheDayClickUrl,\n            scrollToSignupForm,\n            vacancyBodyFooterNodeRef,\n            dispatch,\n            handleQuickResponse,\n            scrollToFooter,\n            enableRelocationWarning,\n            openChat,\n            hhtmFromLabel,\n            onResponseComplete,\n            onPopupCancelCallback,\n            alreadyApplied,\n            kardinalAnalyticsSent,\n            onScrollToSignupForm,\n            isZarplata,\n        ]\n    );\n\n    useEffect(() => {\n        if (forceQuickResponse === 'true' && hasForceQuickResponse) {\n            const currentUrl = urlParser(`${pathname}${search}`);\n            const params = { ...currentUrl.params };\n            delete params.forceQuickResponse;\n            currentUrl.params = params;\n            window.history.replaceState(window.history.state, document.title, currentUrl.href);\n            onResponseClick();\n        }\n    }, [hasForceQuickResponse, forceQuickResponse, vacancyId, pathname, search, onResponseClick]);\n\n    if (!!renderResponded && respondedProps) {\n        return (\n            <>\n                {renderResponded({\n                    text: trls[TrlKeys[respondedProps.text]],\n                    href: respondedProps.href,\n                })}\n            </>\n        );\n    }\n\n    return render?.(onResponseClick);\n};\n\nexport default translation(VacancyResponseLink);\n","import Analytics from '@hh.ru/analytics-js';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { getUserResumes } from 'lux/components/VacancyResponseForm';\nimport { ResponseStatusResume, ShortVacancy } from 'lux/models/applicantVacancyResponseStatuses';\n\nexport const sendBottomSheetShownEvent = (vacancyId: number, responseStatus: ShortVacancy): void => {\n    if (!responseStatus) {\n        return;\n    }\n    const resumes = getUserResumes(responseStatus) as ResponseStatusResume[];\n    Analytics.sendHHEvent('element_shown', {\n        elementName: 'vacancy_response_bottom_sheet',\n        resumeHash: resumes[0]._attributes.hash,\n        vacancyId,\n    });\n};\n","import { AxiosResponse } from 'axios';\n\nimport { ApplicantActivity } from 'lux/models/applicantActivity';\nimport { ApplicantResponseStreak } from 'lux/models/applicantResponseStreaks';\nimport { ShortVacancy } from 'lux/models/applicantVacancyResponseStatuses';\nimport fetcher from 'lux/modules/fetcher';\n\nexport interface VacancyResponsePostData {\n    lux: boolean;\n    [`ignore_postponed`]: boolean;\n    [`vacancy_id`]: number;\n    letter?: string;\n    [`mark_applicant_visible_in_vacancy_country`]?: boolean;\n    withoutTest?: string;\n    isCheckingResponseType?: boolean;\n}\nexport interface VacancyResponseResponseData {\n    ['response_label']: string;\n    ['vacancy_id']: string;\n    ['topic_id']: string;\n    applicantActivity: ApplicantActivity;\n    responseStatus: ShortVacancy;\n    responsesStreak?: ApplicantResponseStreak;\n    askJobSearchStatus: boolean;\n}\nconst VACANCY_RESPONSE_POPUP_URL = '/applicant/vacancy_response/popup';\ndeclare global {\n    interface FetcherPostApi {\n        [VACANCY_RESPONSE_POPUP_URL]: {\n            body: VacancyResponsePostData;\n            queryParams: void;\n            response: VacancyResponseResponseData;\n        };\n    }\n}\n\nexport default (postData: VacancyResponsePostData): Promise<AxiosResponse<VacancyResponseResponseData>> =>\n    fetcher.postFormData(VACANCY_RESPONSE_POPUP_URL, postData);\n","import { useCallback, useRef, useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AxiosResponse } from 'axios';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\n\nimport { ChatikContext } from '@hh.ru/chatik-integration';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport { APPLICANT_RESPONSE_ERROR } from 'lux/components/Notifications/VacancyResponseError';\nimport { createNotification } from 'lux/components/VacancyResponseForm/VacancyResponseNotification';\nimport useGetResponseQuestion from 'lux/components/VacancyView/hooks/useResponseQuestion';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { responseStreakUpdate } from 'lux/models/applicantResponseStreaks';\nimport {\n    ShortVacancy,\n    vacancyResponseSetFetching,\n    vacancyResponseUpdate,\n} from 'lux/models/applicantVacancyResponseStatuses';\nimport { addUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport { isServerError } from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport UserLabel from 'lux/modules/userLabels';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport postVacancyResponsePopup, {\n    VacancyResponsePostData,\n    VacancyResponseResponseData,\n} from 'lux/components/VacancyResponseLink/postVacancyResponsePopup';\n\nconst applicantActivityAction = makeSetStoreField('applicantActivity');\n\nexport interface HandleQuickResponseParams {\n    letterMaxLength: number;\n    responseStatus: ShortVacancy;\n    employerId?: number;\n    openChat?: boolean;\n    [`vacancy_id`]: number;\n    hhtmFromLabel: string;\n    hhtmSourceLabel?: string;\n}\nexport interface HandleQuickResponse {\n    (params: HandleQuickResponseParams): Promise<void>;\n}\n\nexport default (stayOnPage = true): HandleQuickResponse => {\n    const dispatch = useDispatch();\n    const publishedForResponseResumeHash = useSelector((state) => state.publishedForResponseResumeHash);\n    const openChatik = useContext(ChatikContext)?.openChatik;\n    const countriesProfileVisibilityAgreement = useSelector((state) => {\n        return state.countriesProfileVisibilityAgreement;\n    });\n    const countriesProfileVisibilityAgreementRef = useRef(countriesProfileVisibilityAgreement);\n    countriesProfileVisibilityAgreementRef.current = countriesProfileVisibilityAgreement;\n    const getVacancyResponseQuestion = useGetResponseQuestion();\n    const getVacancyResponseQuestionRef = useRef(getVacancyResponseQuestion);\n    getVacancyResponseQuestionRef.current = getVacancyResponseQuestion;\n    const isZarplata = useIsZarplataPlatform();\n\n    return useCallback(\n        async ({ letterMaxLength, responseStatus, employerId, openChat, ...data }) => {\n            dispatch(vacancyResponseUpdate({ vacancyId: data.vacancy_id, data: responseStatus }));\n            let result: AxiosResponse<VacancyResponseResponseData>;\n            const responseQuestion = getVacancyResponseQuestionRef.current(data.vacancy_id);\n            const markApplicantVisibleInVacancyCountry =\n                countriesProfileVisibilityAgreementRef.current?.confirmed === true;\n            const postData: VacancyResponsePostData = {\n                ...data,\n                lux: true,\n                [`ignore_postponed`]: stayOnPage,\n                [`mark_applicant_visible_in_vacancy_country`]: markApplicantVisibleInVacancyCountry,\n            };\n            if (responseQuestion) {\n                postData.letter = responseQuestion.value;\n            }\n\n            try {\n                result = await postVacancyResponsePopup(postData);\n            } catch (e) {\n                if (isServerError<{ error: string; redirectUrl: string }>(e)) {\n                    const respData = e.response?.data;\n                    const code = respData?.error;\n\n                    if (respData && code === 'resume-incomplete' && 'redirectUrl' in respData) {\n                        dispatch(push(respData.redirectUrl));\n                    } else {\n                        dispatch(addNotification(APPLICANT_RESPONSE_ERROR, { code, letterMaxLength }));\n                        dispatch(vacancyResponseSetFetching({ vacancyId: data.vacancy_id, isFetching: false }));\n                    }\n                }\n                return;\n            }\n\n            const chatId = result.data.responseStatus?.negotiations?.topicList[0]?.chatId;\n\n            if (openChat) {\n                openChatik?.({ chatId, firstContact: true, resizable: false, draggable: false });\n            }\n\n            dispatch(vacancyResponseSetFetching({ vacancyId: data.vacancy_id, isFetching: false }));\n\n            const actions: AnyAction[] = [\n                vacancyResponseUpdate({ vacancyId: data.vacancy_id, data: result.data.responseStatus }),\n                addUserLabelsForVacancies({ vacancyId: data.vacancy_id, labels: [UserLabel.Response] }),\n                applicantActivityAction(result.data.applicantActivity),\n            ];\n\n            if (result.data.responsesStreak) {\n                actions.push(responseStreakUpdate({ vacancyId: data.vacancy_id, data: result.data.responsesStreak }));\n            }\n\n            dispatch(actions);\n            createNotification({ dispatch, data: result.data, employerId, publishedForResponseResumeHash, isZarplata });\n            UXFeedback.sendEvent('vacancy_response_action');\n        },\n        [dispatch, stayOnPage, publishedForResponseResumeHash, isZarplata, openChatik]\n    );\n};\n","import Analytics from '@hh.ru/analytics-js';\nimport vacancyResponseCompleteExternal from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/vacancy_response_complete';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Modal, { ModalTitle, ModalHeader, ModalContent, ModalFooter } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SendHHAnalytics, { StatisticsProcessing } from 'HH/SendHHAnalytics';\nimport Debug from 'HHC/Debug';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const sendAdvertisingAnalytics = (vacancyId: number): void => {\n    void SendHHAnalytics({ data: { goal: 'vacancy-response-company-url' } });\n    void StatisticsProcessing({\n        data: {\n            action: 'vacancy_response_perform',\n            label: vacancyId,\n        },\n    });\n    // eslint-disable-next-line camelcase\n    vacancyResponseCompleteExternal({ label: 'ad-vacancy', params: { product_id: vacancyId } });\n};\n\nconst TrlKeys = {\n    advertisingTitle: 'vacancy.advertising.title',\n    advertisingText: 'vacancy.advertising.text',\n    advertisingAction: 'vacancy.advertising.goforward',\n};\n\ninterface AdvertisingPopupProps {\n    visible: boolean;\n    onClose: (isCancel?: boolean) => void;\n}\n\nconst AdvertisingPopup: TranslatedComponent<AdvertisingPopupProps> = ({ visible, onClose, trls }) => {\n    const vacancy = useSelector((state) => state.vacancyResponsePopup?.vacancy);\n    const isZarplata = useIsZarplataPlatform();\n    if (!vacancy?.companyUrl) {\n        Debug.log('out error', new Error('Advertising vacancy without companyUrl'), { id: vacancy?.vacancyId });\n        return null;\n    }\n\n    return (\n        <Modal visible={visible} onClose={() => onClose(true)} useBottomSheet>\n            <ModalHeader>\n                <ModalTitle>{trls[TrlKeys.advertisingTitle]}</ModalTitle>\n            </ModalHeader>\n            <ModalContent>\n                <div className=\"vacancy-response-popup-body\">{trls[TrlKeys.advertisingText]}</div>\n            </ModalContent>\n            <ModalFooter>\n                <Button\n                    kind={ButtonKind.Success}\n                    Element=\"a\"\n                    rel=\"nofollow\"\n                    href={vacancy.companyUrl}\n                    data-qa=\"vacancy-response-link-advertising\"\n                    onClick={() => {\n                        sendAdvertisingAnalytics(vacancy.vacancyId);\n                        if (isZarplata) {\n                            Analytics.addEventPixels('ZP_PURCHASE');\n                        }\n                    }}\n                >\n                    {trls[TrlKeys.advertisingAction]}\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(AdvertisingPopup);\n","import { ComponentType, Fragment } from 'react';\n\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { NotificationLinkProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoQuotasFailure]: {\n        content: 'vacancy.scheduled.publication.no.quotas.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPermissionFailure]: {\n        content: 'vacancy.scheduled.publication.no.permission.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPublicationFailure]: {\n        content: 'vacancy.scheduled.publication.no.publication.failure',\n        type: {\n            FREE: 'employer.VacancyCreate.PublicationType.FREE',\n            PREMIUM: 'employer.VacancyCreate.PublicationType.PREMIUM',\n            PREMIUM_ADVERTISING: 'employer.VacancyCreate.PublicationType.PREMIUM_ADVERTISING',\n            PREMIUM_ANONYMOUS: 'employer.VacancyCreate.PublicationType.PREMIUM_ANONYMOUS',\n            STANDARD_PROMO: 'employer.VacancyCreate.PublicationType.STANDARD_PROMO',\n            STANDARD: 'employer.VacancyCreate.PublicationType.STANDARD',\n            STANDARD_ADVERTISING: 'employer.VacancyCreate.PublicationType.STANDARD_ADVERTISING',\n            STANDARD_ANONYMOUS: 'employer.VacancyCreate.PublicationType.STANDARD_ANONYMOUS',\n            STANDARD_PLUS: 'employer.VacancyCreate.PublicationType.STANDARD_PLUS',\n            STANDARD_PLUS_ANONYMOUS: 'employer.VacancyCreate.PublicationType.STANDARD_PLUS_ANONYMOUS',\n        },\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationValidationFailure]: {\n        content: 'vacancy.scheduled.publication.validation.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationUnknownFailure]: {\n        content: 'vacancy.scheduled.publication.unknown.failure',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses]: {\n        content: 'vacancy.scheduled.publication.successes',\n    },\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess]: {\n        content: 'vacancy.scheduled.publication.success',\n    },\n    vacancySome: 'vacancy.some',\n    vacancyMany: 'vacancy.many',\n};\n\ntype TemplateKeys = Exclude<keyof typeof TrlKeys, 'vacancySome' | 'vacancyMany'>;\n\ninterface VacancyScheduledPublicationProps {\n    Component: ComponentType<NotificationLinkProps>;\n}\n\nconst VacancyScheduledPublicationNotification: TranslatedComponent<\n    ComplexUserNotification & VacancyScheduledPublicationProps\n> = ({ Component, trls, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n\n    if (key === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess) {\n        return formatToReactComponent(trls[TrlKeys[key].content], {\n            '{0}': (\n                <Component to={`/vacancy/${notification.params.vacancy_id}`} target=\"_blank\">\n                    «{notification.params.name}»\n                </Component>\n            ),\n        });\n    } else if (key === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses) {\n        return (\n            <Fragment>\n                <Component to=\"/employer/vacancies\" target=\"_blank\">\n                    <ConversionNumber\n                        formatValue={(value) => NumberFormatter.format(String(value))}\n                        value={parseInt(notification.params.count, 10)}\n                        one={trls[TrlKeys.vacancySome]}\n                        some={trls[TrlKeys.vacancyMany]}\n                        many={trls[TrlKeys.vacancyMany]}\n                        zero={trls[TrlKeys.vacancyMany]}\n                    />\n                </Component>\n                {trls[TrlKeys[key].content]}\n            </Fragment>\n        );\n    }\n    const type = notification.params.publication_type as MetallicVacancyType;\n    return (\n        <Fragment>\n            {formatToReactComponent(trls[TrlKeys[key].content], {\n                '{0}': (\n                    <Component\n                        to={`/employer/vacancy/create?draftId=${notification.params.draft_id}&hidden=true`}\n                        target=\"_blank\"\n                    >\n                        «{notification.params.name}»\n                    </Component>\n                ),\n            })}\n\n            {key === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPublicationFailure &&\n                trls[TrlKeys[key].type[type]]}\n        </Fragment>\n    );\n};\n\nexport default translation(VacancyScheduledPublicationNotification);\n","import { useDispatch } from 'react-redux';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport mapButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/vacancy_search_map_button_button_click';\nimport mapButtonShown from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/vacancy_search_map_button_element_shown';\nimport vacancySearchToggleVacancySnippetButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/vacancy_search_toggle_vacancy_snippet_button_click';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale, ButtonIconPosition } from 'bloko/blocks/button';\nimport ButtonGroup from 'bloko/blocks/button/ButtonGroup';\nimport HoverTip, { TipPlacement, TipLayer } from 'bloko/blocks/drop/Tip/HoverTip';\nimport HSpacingContainer from 'bloko/blocks/hSpacing/HSpacingContainer';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport useSendFilterForm from 'lux/components/NovaFilters/hooks/useSendFilterForm';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst enableVacancySnippetsAction = makeSetStoreField('enableVacancySnippets');\n\nconst TrlKeys = {\n    info1: 'vacancySearch.viewSwitcher.info.1',\n    info2: 'vacancySearch.viewSwitcher.info.2',\n    tipFull: 'vacancySearch.viewSwitcher.tip.full',\n    tipShort: 'vacancySearch.viewSwitcher.tip.short',\n    ariaLabelShort: 'vacancySearch.viewSwitcher.ariaLabel.short',\n    ariaLabelFull: 'vacancySearch.viewSwitcher.ariaLabel.full',\n    buttonMap: 'vacancySearch.buttonMap',\n};\n\nconst SearchViewSwitcher: TranslatedComponent<{ isActivityMeterExp?: boolean }> = ({ isActivityMeterExp, trls }) => {\n    const hasVacanciesWithAddress = useSelector((state) => state.vacancySearchResult.hasVacanciesWithAddress);\n    const queries = useSelector((state) => state.vacancySearchResult.queries);\n    const isVacancySnippetsEnabled = useSelector((state) => state.enableVacancySnippets);\n    const isBackofficeUser = useSelector((state) => state.userType === UserType.BackOffice);\n    const archiveSearch = useSelector((state) => state.archiveSearch);\n    const dispatch = useDispatch();\n    const sendFilterForm = useSendFilterForm();\n\n    const setVacancySnippetEnable = (value: boolean) => {\n        if (value === isVacancySnippetsEnabled) {\n            return;\n        }\n        vacancySearchToggleVacancySnippetButtonClick({ isFullDescription: value });\n        dispatch(enableVacancySnippetsAction(value));\n        sendFilterForm({ showClustersTip: false });\n    };\n\n    return (\n        <div className={isActivityMeterExp ? '' : 'search-filters__additional-block'}>\n            <HSpacingContainer base={2}>\n                {!archiveSearch && hasVacanciesWithAddress && (\n                    <ElementShownAnchor fn={mapButtonShown}>\n                        <Button\n                            Element={Link}\n                            to={`${paths.vacancySearchMap}?${queries?.map || ''}`}\n                            data-qa=\"serp_settings__vacancy-map\"\n                            icon={<span className=\"search-filters__button-map-icon\" />}\n                            iconPosition={ButtonIconPosition.Left}\n                            scale={isActivityMeterExp ? ButtonScale.Small : undefined}\n                            onClick={mapButtonClick}\n                        >\n                            {trls[TrlKeys.buttonMap]}\n                        </Button>\n                    </ElementShownAnchor>\n                )}\n                <ButtonGroup stretched>\n                    <HoverTip\n                        placement={TipPlacement.Bottom}\n                        layer={TipLayer.Overlay}\n                        render={() => trls[TrlKeys.tipShort]}\n                    >\n                        <Button\n                            aria-label={trls[TrlKeys.ariaLabelShort]}\n                            data-qa=\"short_description\"\n                            icon={\n                                <Icon view={IconView.List} initial={IconColor.Gray80} reduced scale={IconScale.Small} />\n                            }\n                            pressed={!isVacancySnippetsEnabled}\n                            scale={isActivityMeterExp ? ButtonScale.Small : undefined}\n                            onClick={() => setVacancySnippetEnable(false)}\n                            disabled={isBackofficeUser && isVacancySnippetsEnabled}\n                        />\n                    </HoverTip>\n                    <HoverTip\n                        placement={TipPlacement.Bottom}\n                        layer={TipLayer.Overlay}\n                        render={() => trls[TrlKeys.tipFull]}\n                    >\n                        <Button\n                            aria-label={trls[TrlKeys.ariaLabelFull]}\n                            data-qa=\"full_description\"\n                            icon={<Icon view={IconView.List} initial={IconColor.Gray80} scale={IconScale.Small} />}\n                            pressed={isVacancySnippetsEnabled}\n                            scale={isActivityMeterExp ? ButtonScale.Small : undefined}\n                            onClick={() => setVacancySnippetEnable(true)}\n                            disabled={isBackofficeUser && !isVacancySnippetsEnabled}\n                        />\n                    </HoverTip>\n                </ButtonGroup>\n            </HSpacingContainer>\n        </div>\n    );\n};\n\nexport default translation(SearchViewSwitcher);\n","enum Source {\n    RelatedVacancies = 'related_vacancies_on_vacancy_page',\n    VacancySearch = 'vacancies',\n    VacancySearchMap = 'vacancies_on_search_map',\n    ApplicantNegotiations = 'applicant_negotiations',\n    RecommendedVacanciesOnMain = 'recommended_vacancies_on_main',\n    EmployerRelatedVacancies = 'related_employer_vacancies_on_vacancy_page',\n}\n\nexport default Source;\n","import { useCallback, useEffect, RefObject, MouseEventHandler, MouseEvent, ReactNode, ComponentType } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonAppearance, ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport BlokoLink from 'bloko/blocks/link';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport VacancyResponseLink from 'lux/components/VacancyResponseLink';\nimport translation from 'lux/components/translation';\nimport { useIsHrZarplataDomain } from 'lux/hooks/useIsHrZarplataDomain';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { scrollWithAttention, RESUME_FORM_ATTENTION_CLASS } from 'lux/components/VacancyView/scrolling';\n\nexport enum VacancyActionResponseKind {\n    Main = 'main',\n    AfterBody = 'afterBody',\n    ResponseSummary = 'responseSummary',\n    VideoVacancy = 'videoVacancy',\n    Notification = 'notification',\n}\n\nconst TrlKeys = {\n    response: 'button.placeResponse',\n};\n\ninterface VacancyActionResponseProps {\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    resumeFormNodeRef?: RefObject<HTMLDivElement>;\n    hasForceQuickResponse?: boolean;\n    isSecondary?: boolean;\n    responseButtonProps?: Record<string, unknown>;\n    isRedesign?: boolean;\n    kind?: VacancyActionResponseKind;\n    onResponseComplete?: () => void;\n    renderCustomWrapper?: (content: ReactNode) => JSX.Element;\n    hideResponded?: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RespondedNode?: ComponentType<any>;\n    onScrollToSignupForm?: () => void;\n    onPopupCancelCallback?: () => void;\n    onRespondClick?: () => void;\n}\n\nconst VacancyActionResponsePlace = {\n    [VacancyActionResponseKind.Main]: 'vacancy_top_button',\n    [VacancyActionResponseKind.AfterBody]: 'vacancy_bottom_button',\n    [VacancyActionResponseKind.ResponseSummary]: 'vacancy_response_summary',\n    [VacancyActionResponseKind.VideoVacancy]: 'vacancy_video_vacancy_modal',\n    [VacancyActionResponseKind.Notification]: 'vacancy_notification',\n};\n\nconst VacancyActionResponse: TranslatedComponent<VacancyActionResponseProps> = ({\n    trls,\n    vacancyBodyFooterNodeRef,\n    resumeFormNodeRef,\n    hasForceQuickResponse = false,\n    isSecondary = false,\n    responseButtonProps,\n    hideResponded = false,\n    RespondedNode = Button,\n    kind,\n    onResponseComplete,\n    isRedesign,\n    renderCustomWrapper,\n    onScrollToSignupForm,\n    onPopupCancelCallback,\n    onRespondClick,\n}) => {\n    const vacancyView = useSelector((state) => state.vacancyView);\n\n    const contactInfo = useSelector((state) => state.vacancyView.contactInfo);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const employerId = useSelector((state) => state.vacancyView.company?.id);\n    const showSignupForm = useSelector((state) => state.vacancyView.showSignupForm);\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n\n    const responseStatus = useSelector((state) =>\n        vacancyView.vacancyId ? state.applicantVacancyResponseStatuses[vacancyView.vacancyId] : undefined\n    );\n    const hasResponseStatus = Boolean(responseStatus && Object.keys(responseStatus).length > 1);\n    const userType = useSelector((state) => state.userType);\n    const doResponse = !!vacancyView.responseInfo?.doResponse;\n    const showResponse = !!vacancyView.responseInfo?.showResponse;\n    const { shortResume } = useSelector(({ router }) => router.location.query);\n    const isHrZarplataDomain = useIsHrZarplataDomain();\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n    const showContactsInfo = contactInfo && !(userType === UserType.Anonymous && isXs);\n    const allowShowContactsButton = showContactsInfo || isBrandingPreview;\n\n    const loadScrollHandler = useCallback(() => {\n        if (resumeFormNodeRef?.current) {\n            scrollWithAttention(resumeFormNodeRef.current, RESUME_FORM_ATTENTION_CLASS);\n        }\n    }, [resumeFormNodeRef]);\n\n    const loadScrollHandlerToFooter = useCallback(() => {\n        if (vacancyBodyFooterNodeRef?.current) {\n            scrollWithAttention(vacancyBodyFooterNodeRef.current, RESUME_FORM_ATTENTION_CLASS);\n        }\n    }, [vacancyBodyFooterNodeRef]);\n\n    useEffect(() => {\n        if (resumeFormNodeRef?.current && shortResume) {\n            window.addEventListener('load', loadScrollHandler);\n        } else if (vacancyBodyFooterNodeRef?.current && showResponse) {\n            window.addEventListener('load', loadScrollHandlerToFooter);\n        }\n\n        return () => {\n            window.removeEventListener('load', loadScrollHandler);\n            window.removeEventListener('load', loadScrollHandlerToFooter);\n        };\n    }, [\n        resumeFormNodeRef,\n        shortResume,\n        loadScrollHandler,\n        showResponse,\n        vacancyBodyFooterNodeRef,\n        loadScrollHandlerToFooter,\n    ]);\n\n    const renderWrapper = (content: ReactNode) => {\n        if (renderCustomWrapper) {\n            return renderCustomWrapper(content);\n        }\n        return (\n            <div\n                className={classnames('vacancy-action', {\n                    'vacancy-action_full-size': allowShowContactsButton && kind === VacancyActionResponseKind.Main,\n                    'vacancy-action_full-size-redesigned':\n                        isRedesign && allowShowContactsButton && kind === VacancyActionResponseKind.Main,\n                    'vacancy-action_stretched': !allowShowContactsButton && kind === VacancyActionResponseKind.Main,\n                    'vacancy-action_stretched-redesigned': isRedesign,\n                    'vacancy-action_after-body':\n                        kind !== VacancyActionResponseKind.Main && kind !== VacancyActionResponseKind.Notification,\n                })}\n            >\n                {content}\n            </div>\n        );\n    };\n\n    if (isBrandingPreview) {\n        return renderWrapper(\n            <Button type={ButtonType.Button} scale={ButtonScale.Large} disabled kind={ButtonKind.Success} stretched>\n                {trls[TrlKeys.response]}\n            </Button>\n        );\n    }\n\n    if (!vacancyId) {\n        return null;\n    }\n\n    if (userType === UserType.Applicant && !hasResponseStatus) {\n        return null;\n    }\n\n    const onButtonClick = (event: MouseEvent<Element>, onClickCallback: MouseEventHandler<Element>) => {\n        if (isHrZarplataDomain) {\n            return;\n        }\n        event.preventDefault();\n        onRespondClick?.();\n\n        onClickCallback(event);\n    };\n\n    const responseUrl = isHrZarplataDomain\n        ? `https://www.zarplata.ru/vacancy/card/id${vacancyId || ''}`\n        : `/applicant/vacancy_response?vacancyId=${vacancyId || ''}`;\n\n    return renderWrapper(\n        <VacancyResponseLink\n            vacancyId={vacancyId}\n            employerId={employerId}\n            doResponse={!isSecondary && doResponse}\n            hasForceQuickResponse={hasForceQuickResponse}\n            render={(onClickCallback) => (\n                <Button\n                    stretched\n                    scale={isRedesign ? ButtonScale.Large : undefined}\n                    Element={Link}\n                    rel=\"nofollow\"\n                    to={responseUrl}\n                    data-qa=\"vacancy-response-link-top\"\n                    loading={\n                        responseStatus?.isFetching && (\n                            <Loading initial={LoadingColor.White} scale={LoadingScale.Small} />\n                        )\n                    }\n                    disabled={!!responseStatus?.isFetching}\n                    onClick={(event) => onButtonClick(event, onClickCallback)}\n                    kind={ButtonKind.Success}\n                    {...responseButtonProps}\n                >\n                    {trls[TrlKeys.response]}\n                </Button>\n            )}\n            renderResponded={({ text, href }) =>\n                !hideResponded && (\n                    <RespondedNode\n                        Element={Link}\n                        rel=\"nofollow\"\n                        scale={isRedesign ? ButtonScale.Large : undefined}\n                        kind={isRedesign ? ButtonKind.Success : undefined}\n                        to={href}\n                        data-qa=\"vacancy-response-link-view-topic\"\n                        {...(RespondedNode === BlokoLink && { disableVisited: true })}\n                        {...(RespondedNode === Button && { stretched: true })}\n                        {...(responseButtonProps || { appearance: ButtonAppearance.Outlined })}\n                    >\n                        {text}\n                    </RespondedNode>\n                )\n            }\n            scrollToSignupForm={showSignupForm}\n            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n            enableRelocationWarning\n            onResponseComplete={onResponseComplete}\n            onScrollToSignupForm={onScrollToSignupForm}\n            onPopupCancelCallback={onPopupCancelCallback}\n            place={kind && VacancyActionResponsePlace[kind]}\n        />\n    );\n};\n\nexport default translation(VacancyActionResponse);\n","import { useCallback } from 'react';\n\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport { AppDispatch } from 'lux/models/appDispatch';\nimport { ResponseQuestionItem, vacancyResponseQuestionsAction } from 'lux/models/vacancyResponseQuestions';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst LOCALSTORAGE_BASE_KEY = 'vacancy_response_questions_store';\nconst LSCache: Record<string, ResponseQuestionItem | null> = {};\n\nconst getSavedQuestion = (vacancyId: number): ResponseQuestionItem | null => {\n    if (vacancyId === undefined) {\n        return null;\n    }\n    if (vacancyId in LSCache) {\n        return LSCache[vacancyId];\n    }\n    const value = LocalStorageWrapper.getItem(`${LOCALSTORAGE_BASE_KEY}_${vacancyId}`);\n    let result = null;\n    if (value) {\n        try {\n            result = JSON.parse(value) as ResponseQuestionItem;\n        } catch (e) {} // eslint-disable-line no-empty\n    }\n    LSCache[vacancyId] = result;\n    return result;\n};\n\ninterface SaveVacancyResponseQuestion {\n    vacancyId: number;\n    question: string;\n    questionId: string;\n    dispatch: AppDispatch;\n}\nexport const saveVacancyResponseQuestion = ({\n    vacancyId,\n    question,\n    questionId,\n    dispatch,\n}: SaveVacancyResponseQuestion): void => {\n    const value = {\n        id: questionId,\n        value: question,\n    };\n    LocalStorageWrapper.setItem(`${LOCALSTORAGE_BASE_KEY}_${vacancyId}`, JSON.stringify(value));\n    dispatch(\n        vacancyResponseQuestionsAction({\n            [String(vacancyId)]: value,\n        })\n    );\n};\n\nconst useGetResponseQuestion = (): ((vacancyId: number) => ResponseQuestionItem | null) => {\n    const vacancyResponseQuestions = useSelector((state) => state.vacancyResponseQuestions);\n    return useCallback(\n        (vacancyId: number) => {\n            return vacancyResponseQuestions[String(vacancyId)] || getSavedQuestion(vacancyId);\n        },\n        [vacancyResponseQuestions]\n    );\n};\n\nexport default useGetResponseQuestion;\n","// eslint-disable-file import/prefer-default-export\nimport scrollToElement from 'Utils/ScrollToElement';\n\nexport const RESUME_FORM_ATTENTION_CLASS = 'vacancy-resume-form_attention';\nexport const SIGNUP_FORM_ATTENTION_CLASS = 'signup-wrapper_attention';\n\nexport const scrollWithAttention = (resumeFormNode: Element, attentionClass: string): void => {\n    scrollToElement(resumeFormNode, {\n        topOffset: 0,\n        centered: false,\n        animationEndCallback() {\n            resumeFormNode.classList.remove(attentionClass);\n            window.requestAnimationFrame(() => {\n                resumeFormNode.classList.add(attentionClass);\n            });\n        },\n    });\n};\n","import { ComponentType, PropsWithChildren } from 'react';\n\nimport useTranslations, { T, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst translation = <P extends Record<string, any>>(\n    WrappedComponent: TranslatedComponent<P>\n): ComponentType<P & PropsWithChildren> => {\n    const TranslationWrapper = (props: P) => {\n        const trl = useSelector((state) => state.trl);\n        const defaultLang = useSelector((state) => state.langs[0]);\n        const trls = useTranslations(WrappedComponent, trl, defaultLang, !!process.env.LUX_SERVER);\n        return <T {...props} trls={trls} Element={WrappedComponent} />;\n    };\n\n    return TranslationWrapper;\n};\n\nexport default translation;\n","import { useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { PixelEventName } from '@hh.ru/analytics-js/lib/pixels/events';\n\nimport { useIsHhru } from 'lux/hooks/useSites';\n\ntype UseAddEventPixelsRu = () => (eventName: PixelEventName) => void;\n\nexport const useAddEventPixelsRu: UseAddEventPixelsRu = () => {\n    const isHhru = useIsHhru();\n\n    return useCallback(\n        (eventName: PixelEventName): void => {\n            if (isHhru) {\n                Analytics.addEventPixels(eventName);\n            }\n        },\n        [isHhru]\n    );\n};\n","import { CountryId } from 'lux/models/countryId';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const useCountryId = (): CountryId => useSelector(({ countryId }) => countryId);\n\nexport const useIsRussia = (): boolean => {\n    const countryId = useCountryId();\n    return countryId === CountryId.Russia;\n};\n\nexport const useIsBelarus = (): boolean => {\n    const countryId = useCountryId();\n    return countryId === CountryId.Belarus;\n};\n","import useExperimentCheckFunction, {\n    useExperimentControlCheckFunction,\n    useExperimentGroupCheckFunction,\n} from 'lux/hooks/useExperimentCheckFunction';\n\nexport default function useExperiment(experimentName: string, callHook = true, sendCheck = true): boolean {\n    return useExperimentCheckFunction(callHook, sendCheck)(experimentName);\n}\n\nexport function useExperimentControl(experimentNames: string[], callHook = true, sendCheck = true): boolean {\n    return useExperimentControlCheckFunction(callHook, sendCheck)(experimentNames);\n}\n\nexport function useExperimentGroup(experimentName: string): string {\n    return useExperimentGroupCheckFunction()(experimentName);\n}\n","import { useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport getCheckedExperiments, { putCheckedExperiment } from 'lux/modules/checkedExperiments';\nimport { CONTROL_GROUP, EXPERIMENT_GROUP, NOT_IN_EXPERIMENT_GROUP } from 'lux/modules/experiments';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface SendExperimentCheckAnalyticsParams {\n    experimentName: string;\n    experimentGroup: string;\n}\nexport const sendExperimentCheckAnalytics = ({\n    experimentName,\n    experimentGroup,\n}: SendExperimentCheckAnalyticsParams): void => {\n    const experimentChecked = getCheckedExperiments();\n    // console.log(experimentName, !experimentChecked.includes(experimentName));\n    // console.log('experimentChecked', experimentChecked);\n\n    if (!experimentChecked.includes(experimentName)) {\n        if (!process.env.LUX_SERVER) {\n            Analytics.sendHHEvent('user_in_experiment_check', {\n                source: 'xhh-js',\n                [experimentGroup]: experimentName,\n            });\n        }\n        putCheckedExperiment(experimentName);\n    }\n};\n\nexport function useExperimentGroupCheckFunction(sendCheck = true): (experimentName: string) => string {\n    const exps = useSelector(({ experiments }) => experiments);\n    return useCallback(\n        (experimentName) => {\n            const experimentGroup = exps.enabled[experimentName] || NOT_IN_EXPERIMENT_GROUP;\n            if (sendCheck) {\n                sendExperimentCheckAnalytics({\n                    experimentName,\n                    experimentGroup,\n                });\n            }\n            return experimentGroup;\n        },\n        [exps, sendCheck]\n    );\n}\n\n// Вызов useExperiment в коде приводит к тому, что на /analytics отправляется запрос с event: user_in_experiment_check.\n// В некоторых экспериментах подсчет итоговой статистики удобно производить по таким запросам.\n// Когда этот запрос дошёл до базы, мы считаем, что пользователь мог увидеть экспериментальные изменения.\n// Однако иногда пользователь в принципе не мог видеть экспериментальные изменения, потому что, например, находился на\n// другом шаге во флоу компонента (скажем, эксперимент на заблокированное резюме, а у него не заблокированное) и т.д.\n// И так как хук useExperiment нельзя вызвать по условию, добавлены параметры callHook и sendCheck\n// callHook при значении false вернет из хука false и чек в /analytics не отошлется, иначе\n// проверит вхождение пользователя в эксперимент и отправит чек на /analytics\n// sendCheck влияет только на отправку чека в /analytics, при этом не влияя\n// на определение самой экспериментальной группы пользователя\nexport default function useExperimentCheckFunction(\n    callHook = true,\n    sendCheck = true\n): (experimentName: string) => boolean {\n    const getExperimentGroup = useExperimentGroupCheckFunction(sendCheck);\n\n    return useCallback(\n        (experimentName) => {\n            if (!callHook) {\n                return false;\n            }\n            return getExperimentGroup(experimentName) === EXPERIMENT_GROUP;\n        },\n        [getExperimentGroup, callHook]\n    );\n}\n\nexport function useExperimentControlCheckFunction(\n    callHook = true,\n    sendCheck = true\n): (experimentNames: string[]) => boolean {\n    const getExperimentGroup = useExperimentGroupCheckFunction(sendCheck);\n    return useCallback(\n        (experimentNames = []) => {\n            if (!callHook) {\n                return false;\n            }\n            return experimentNames.some((experimentName) => {\n                return getExperimentGroup(experimentName) === CONTROL_GROUP;\n            });\n        },\n        [callHook, getExperimentGroup]\n    );\n}\n","import { useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { makeToggleFavorite, makeToggleFavoriteAnonymous } from 'Modules/VacancyToFavorite';\nimport { FAVORITE_ERROR, FAVORITE_SUCCESS } from 'lux/components/Notifications/vacancyFavoriteNotifyTypes';\nimport { addUserLabelsForVacancies, removeUserLabelsForVacancies } from 'lux/models/userLabelsForVacancies/userLabels';\nimport { UserType } from 'lux/models/userType';\nimport { isServerError } from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport UserLabel from 'lux/modules/userLabels';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport { useIsHrZarplataDomain } from 'lux/hooks/useIsHrZarplataDomain';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\ninterface UseFavoriteApplicantProps {\n    cleanup?: unknown;\n    vacancyId?: number;\n    employerId?: number;\n    onFavoriteStateChanged?: (inFavorites: boolean) => void;\n}\n\nconst useFavoriteApplicant = ({\n    cleanup,\n    vacancyId,\n    employerId,\n    onFavoriteStateChanged,\n}: UseFavoriteApplicantProps): [boolean | null, () => Promise<void>] => {\n    const isZarplata = useIsZarplataPlatform();\n    const userLabels = useSelector(({ userLabelsForVacancies }) => userLabelsForVacancies);\n    const toggleFavorite = useRef(makeToggleFavorite());\n    const dispatch = useDispatch();\n\n    const isFavoriteVacancy =\n        vacancyId && vacancyId in userLabels ? userLabels[vacancyId].includes(UserLabel.Favorite) : null;\n\n    const toggle = useCallback(async () => {\n        let isFavoriteVacancyState;\n        if (!vacancyId) {\n            return;\n        }\n\n        try {\n            isFavoriteVacancyState = await toggleFavorite.current({\n                isFavoriteVacancy,\n                vacancyId,\n                employerId,\n                cleanup,\n            });\n        } catch (error) {\n            if (isServerError<{ errorCode: string }>(error)) {\n                dispatch(\n                    addNotification(FAVORITE_ERROR, {\n                        code: error.response?.data?.errorCode,\n                        vacancyId,\n                        employerId,\n                    })\n                );\n            }\n            return;\n        }\n\n        if (isFavoriteVacancyState) {\n            dispatch(addUserLabelsForVacancies({ vacancyId, labels: [UserLabel.Favorite] }));\n            dispatch(addNotification(FAVORITE_SUCCESS));\n            Analytics.sendEvent('applicant', 'add-vacancy-favorites', undefined, undefined, undefined, {\n                // eslint-disable-next-line camelcase\n                product_id: vacancyId,\n            });\n            if (isZarplata) {\n                Analytics.addEventPixels('ZP_ADD_WISHLIST');\n            }\n        } else {\n            dispatch(removeUserLabelsForVacancies({ vacancyId, label: UserLabel.Favorite }));\n        }\n        onFavoriteStateChanged?.(!!isFavoriteVacancyState);\n    }, [cleanup, dispatch, employerId, isFavoriteVacancy, isZarplata, onFavoriteStateChanged, vacancyId]);\n\n    return [isFavoriteVacancy, toggle];\n};\n\ninterface UseFavoriteAnonymousProps {\n    vacancyId?: number;\n    employerId?: number;\n}\n\nconst useFavoriteAnonymous = ({ vacancyId, employerId }: UseFavoriteAnonymousProps) => {\n    const isZarplata = useIsZarplataPlatform();\n    const dispatch = useDispatch();\n    const toggleFavorite = useRef(makeToggleFavoriteAnonymous());\n\n    return useCallback(async () => {\n        if (!vacancyId) {\n            return;\n        }\n        let redirectUrl;\n        try {\n            redirectUrl = await toggleFavorite.current({ employerId, vacancyId });\n        } catch (error) {\n            dispatch(addNotification(FAVORITE_ERROR));\n            return;\n        }\n\n        if (redirectUrl) {\n            dispatch(push(redirectUrl));\n            Analytics.sendEvent('anonymous', 'add-vacancy-favorites', undefined, undefined, undefined, {\n                // eslint-disable-next-line camelcase\n                product_id: vacancyId,\n            });\n            if (isZarplata) {\n                Analytics.addEventPixels('ZP_ADD_WISHLIST');\n            }\n        }\n    }, [dispatch, employerId, isZarplata, vacancyId]);\n};\n\ninterface UseFavoriteResult {\n    isFavoriteVacancy: boolean | null;\n    toggleIsFavoriteVacancy: () => Promise<void>;\n    isAvailableChangeFavoriteState: boolean;\n}\n\ninterface UseFavoriteProps extends UseFavoriteAnonymousProps, UseFavoriteApplicantProps {\n    type?: string;\n    isSendUxFeedback?: boolean;\n}\n\nexport default (initialValues: UseFavoriteProps): UseFavoriteResult => {\n    const [isFavoriteVacancy, toggleFavoriteApplicant] = useFavoriteApplicant(initialValues);\n    const toggleFavoriteAnonymous = useFavoriteAnonymous(initialValues);\n    const userType = useSelector(({ userType }) => userType);\n    const isHrZarplataDomain = useIsHrZarplataDomain();\n\n    return {\n        isFavoriteVacancy,\n        toggleIsFavoriteVacancy: () => {\n            if (initialValues.isSendUxFeedback && !isFavoriteVacancy) {\n                UXFeedback.sendEvent('add_vacancy_to_favorite_button_clicked');\n            }\n            return userType === UserType.Applicant ? toggleFavoriteApplicant() : toggleFavoriteAnonymous();\n        },\n        isAvailableChangeFavoriteState:\n            (userType === UserType.Applicant || userType === UserType.Anonymous) &&\n            initialValues.type !== 'closed' &&\n            !isHrZarplataDomain,\n    };\n};\n","import Debug from 'HHC/Debug';\nimport { useSelector } from 'lux/modules/useSelector';\n\n/**\n * Хук для определения включена ли динамическая настройка.\n *\n * Рекомендуется использовать когда значение из стора явно задано как true или false.\n *\n * Если настройка задана как число или строка приведение к true/false произойдет по правилам javascript.\n *\n * Убедитесь, что полученное значение ожидаемо для вас.\n *\n * @param {string} featureName название динамической настройки;\n * @example\n * const featureEnabled = useFeatureEnabled('featureName')\n * @returns {Boolean} true если настройка включена, false если настройка выключена или не найдена\n */\nconst useFeatureEnabled = (featureName: string): boolean => {\n    const featureValue = useSelector((state) => state.features[featureName]);\n    if (typeof featureValue === 'boolean') {\n        return featureValue;\n    }\n    if (featureValue !== undefined) {\n        Debug.log(\n            'warn',\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `Значение динамической настройки ${featureName} == ${featureValue} (type ${typeof featureValue}), приведение к true/false произойдет по правилам javascript, убедитесь что полученное значение ожидаемо для вас`\n        );\n    }\n    return Boolean(featureValue);\n};\n\nexport default useFeatureEnabled;\n","import { useSelector } from 'lux/modules/useSelector';\n\nconst HR_ZARPLATA_RU_DOMAIN = 'hr.zarplata.ru';\n\nexport const useIsHrZarplataDomain = (): boolean => {\n    const topLevelDomain = useSelector((state) => state.topLevelDomain);\n\n    return topLevelDomain === HR_ZARPLATA_RU_DOMAIN;\n};\n","import { useSelector } from 'lux/modules/useSelector';\n\nexport default function useIsMenuHidden(): boolean {\n    const query = useSelector(({ router }) => router.location.query);\n    const isWebView = useSelector(({ isWebView }) => isWebView);\n    const hideLayout = useSelector(({ hideLayout }) => hideLayout);\n    const isIFrameView = useSelector(({ isIFrame }) => isIFrame);\n    const isNoMenu = useSelector(({ noMenu }) => noMenu);\n\n    return hideLayout || isNoMenu || isWebView || query?.print !== undefined || isIFrameView;\n}\n","import { createContext, useContext } from 'react';\n\nexport const MagritteContext = createContext(false);\n\nexport const useMagritte = (): boolean => useContext<boolean>(MagritteContext);\n\nexport default useMagritte;\n","import { useCallback, useState } from 'react';\n\n/**\n * Хук для бинарного стейта, возвращает два коллбека, которые устанавливают стейт в true и false\n */\n\nexport default (initialState: boolean): [boolean, () => void, () => void] => {\n    const [state, setState] = useState(initialState);\n    const setOn = useCallback(() => {\n        setState(true);\n    }, []);\n    const setOff = useCallback(() => {\n        setState(false);\n    }, []);\n\n    return [state, setOn, setOff];\n};\n","import { Platform } from 'lux/models/locale.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const usePlatform = (): Platform => useSelector(({ locale }) => locale.platform);\n\nexport const useIsHeadHunterPlatform = (): boolean => {\n    const platform = usePlatform();\n    return platform === Platform.HeadHunter;\n};\n\nexport const useIsZarplataPlatform = (): boolean => {\n    const platform = usePlatform();\n    return platform === Platform.Zarplata;\n};\n\nexport default {\n    usePlatform,\n    useIsHeadHunterPlatform,\n    useIsZarplataPlatform,\n};\n","import { useSelector } from 'lux/modules/useSelector';\n\nexport interface ResumeIdResponseStatuses {\n    respondedIds: number[];\n    invitedIds: number[];\n    discardedIds: number[];\n    usedResumeIds: string[];\n}\n\nexport default (vacancyId?: number): ResumeIdResponseStatuses | null => {\n    const responseStatuses = useSelector((state) => state.applicantVacancyResponseStatuses);\n    if (!vacancyId) {\n        return null;\n    }\n    const responseStatus = responseStatuses[vacancyId];\n\n    if (!responseStatus || responseStatus.usedResumeIds?.length === 0 || !responseStatus?.negotiations) {\n        return null;\n    }\n\n    const { negotiations, usedResumeIds } = responseStatus;\n\n    const respondedIds = negotiations.topicList.filter(({ responded }) => responded).map(({ id }) => id);\n    const invitedIds = negotiations.topicList.filter(({ invited }) => invited).map(({ id }) => id);\n    const discardedIds = negotiations.topicList.filter(({ discarded }) => discarded).map(({ id }) => id);\n\n    return {\n        respondedIds,\n        invitedIds,\n        discardedIds,\n        usedResumeIds,\n    };\n};\n","import { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const useTopLevelSite = (): TopLevelSite => useSelector(({ topLevelSite }) => topLevelSite);\n\nexport const useIsHhru = (): boolean => {\n    const topLevelSite = useTopLevelSite();\n    return topLevelSite === TopLevelSite.RU;\n};\n\nexport const useIsRabotaBy = (): boolean => {\n    const topLevelSite = useTopLevelSite();\n    return topLevelSite === TopLevelSite.BY;\n};\n\nexport const useIsHhKz = (): boolean => {\n    const topLevelSite = useTopLevelSite();\n    return topLevelSite === TopLevelSite.KZ;\n};\n\nexport const useIsHeadhunterKg = (): boolean => {\n    const topLevelSite = useTopLevelSite();\n    return topLevelSite === TopLevelSite.KG;\n};\n\nexport const useIsHhUz = (): boolean => {\n    const topLevelSite = useTopLevelSite();\n    return topLevelSite === TopLevelSite.UZ;\n};\n\nexport const useIsMiddleAsia = (): boolean => {\n    const isHhKz = useIsHhKz();\n    const isHhUz = useIsHhUz();\n    const isHeadhunterKg = useIsHeadhunterKg();\n    return isHhKz || isHhUz || isHeadhunterKg;\n};\n","import { useCallback } from 'react';\nimport { matchPath } from 'react-router';\nimport { useLocation } from 'react-router-dom';\n\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface BreadcrumbSearchData {\n    resumeUrl: string;\n    resumeTitle: string;\n}\n\ninterface CreatePath {\n    (methodID?: number): string;\n}\n\ninterface GetResumeData {\n    (): BreadcrumbSearchData | null;\n}\n\nconst BREADCRUMB_SEARCH_DATA_KEYS = {\n    RESUME_URL: 'resumeUrl',\n    RESUME_TITLE: 'resumeTitle',\n};\n\nfunction createBreadcrumbsSearch(data: BreadcrumbSearchData) {\n    const searchParams = new URLSearchParams();\n    const { resumeUrl, resumeTitle } = data;\n\n    searchParams.append(BREADCRUMB_SEARCH_DATA_KEYS.RESUME_URL, resumeUrl);\n\n    searchParams.append(BREADCRUMB_SEARCH_DATA_KEYS.RESUME_TITLE, resumeTitle);\n\n    return `?${searchParams.toString()}`;\n}\n\nconst { resumeViewByID, resumeView, applicantSkillVerificationsMethod, applicantSkillVerificationsMethods } = paths;\n\nconst supportedPathnames = {\n    resume: [resumeViewByID, resumeView],\n    skillsVerificationMethods: [applicantSkillVerificationsMethod, applicantSkillVerificationsMethods],\n};\n\n/* eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types */\nfunction useSkillVerificationMethodsBreadcrumbs() {\n    const resume = useSelector((state) => state.resume);\n    const location = useLocation();\n\n    const { pathname: locationPathname, search: locationSearch } = location ?? {};\n\n    const isMatchResumeLocation = supportedPathnames.resume.some((url) =>\n        matchPath(locationPathname, { path: url, exact: true })\n    );\n    const isMatchSkillsLocation = supportedPathnames.skillsVerificationMethods.some((url) =>\n        matchPath(locationPathname, { path: url, exact: true })\n    );\n\n    const createSkillVerificationMethodsPath = useCallback<CreatePath>(\n        (methodID?: number) => {\n            const skillsVerificationMethodPath = `${paths.applicantSkillVerificationsMethods}${\n                methodID ? `/${methodID}` : ''\n            }`;\n\n            let searchParams = '';\n\n            if (isMatchResumeLocation && resume) {\n                const { title } = resume;\n                const resumeUrl = `${locationPathname}${locationSearch}`;\n                const resumeTitle = title.value ?? '';\n\n                searchParams = createBreadcrumbsSearch({ resumeUrl, resumeTitle });\n            } else if (isMatchSkillsLocation) {\n                searchParams = locationSearch;\n            }\n\n            return `${skillsVerificationMethodPath}${searchParams}`;\n        },\n        [isMatchResumeLocation, isMatchSkillsLocation, locationPathname, locationSearch, resume]\n    );\n\n    const getResumePageData = useCallback<GetResumeData>(() => {\n        const searchParams = new URLSearchParams(locationSearch);\n\n        const resumeUrl = searchParams.get(BREADCRUMB_SEARCH_DATA_KEYS.RESUME_URL);\n        const resumeTitle = searchParams.get(BREADCRUMB_SEARCH_DATA_KEYS.RESUME_TITLE);\n\n        if (!(resumeUrl && resumeTitle)) {\n            return null;\n        }\n\n        return {\n            resumeUrl,\n            resumeTitle,\n        };\n    }, [locationSearch]);\n\n    return {\n        getResumePageData,\n        createSkillVerificationMethodsPath,\n    };\n}\n\nexport default useSkillVerificationMethodsBreadcrumbs;\n","import { useCallback, useState } from 'react';\n\n/**\n * Хук для бинарного стейта, возвращает коллбек для изменения значения на противоположное\n * 3-им параметром возвращается setState для явного задания значения флага\n *\n * Часто toggleState ставится напрямую в обработчики вроде onClick и получает аргументом event,\n * по этому для явного задания значения не получилось использовать метод toggleState с аргументом\n */\n\nexport type ToggleState = [boolean, () => void, (newState: boolean) => void];\n\nexport default (initialState: boolean): ToggleState => {\n    const [state, setState] = useState(initialState);\n    const toggleState = useCallback(() => {\n        setState((state) => !state);\n    }, []);\n    const setExplicitState = useCallback((newState: boolean) => {\n        setState(Boolean(newState));\n    }, []);\n\n    return [state, toggleState, setExplicitState];\n};\n","import { useSelector } from 'lux/modules/useSelector';\n\nexport default function useUrl(): string {\n    return useSelector(({ router: { location } }) => location.pathname + location.search);\n}\n","import { useCallback } from 'react';\n\nimport fetcher from 'lux/modules/fetcher';\n\nconst REGISTER_INTERACTION = '/shards/vacancy/register_interaction';\n\ndeclare global {\n    interface FetcherPostApi {\n        [REGISTER_INTERACTION]: {\n            body: {\n                vacancyId: number;\n            };\n            queryParams: void;\n            response: void;\n        };\n    }\n}\n\nconst useRegisterInteraction = (vacancyId: number): (() => Promise<void>) => {\n    return useCallback(async () => {\n        try {\n            await fetcher.post(REGISTER_INTERACTION, { vacancyId });\n        } catch (error) {\n            console.error(error);\n        }\n    }, [vacancyId]);\n};\n\nexport default useRegisterInteraction;\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum SocialNetworksCode {\n    VK = 'VK',\n    GPLUS = 'GPLUS',\n    MAIL = 'MAIL',\n    FB = 'FB',\n    OK = 'OK',\n    DNR = 'DNR',\n    ESIA = 'ESIA',\n    LI = 'LI',\n    TinkoffBusiness = 'TINKOFF_BUSINESS',\n}\n\nexport interface SocialNetworks {\n    trl: string;\n    url: string;\n    code: SocialNetworksCode;\n    translationKey: string;\n}\n\ninterface LoginForm {\n    passwordRecovery?: { trl: string };\n    registration?: {\n        trl: string;\n        code: 'REG_APPLICANT' | 'REG_EMPLOYER';\n        translationKey: string;\n    }[];\n    socialNetworks?: SocialNetworks[];\n    registrationSocialNetworks?: SocialNetworks[];\n}\n\nexport default autoGeneratedReducer<LoginForm>({});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst ACCOUNT_HISTORY_MONEY = 'ACCOUNT_HISTORY_MONEY';\n\ninterface AccountHistoryMoneyState {\n    hasPersonalManager: boolean;\n    state: string;\n    email: string;\n    balances: {\n        accountBalance?: number;\n        activationReserved?: number;\n        hrsReserved?: number;\n        otherReserved?: number;\n        totalReserved?: number;\n    };\n    employerCountry: string;\n    // string потому что в xhh/pages/employer/account/__init__.py преобразуется сразу в перевод руб и так далее\n    currency: string;\n    hrs: {\n        orders: string[];\n    };\n    availableWithoutBlockedMoney: number;\n    agreements: AccountHistoryAgreement;\n}\n\ninterface AccountHistoryAgreement {\n    [key: number]: {\n        name: string;\n        id: string;\n        agreements: AccountHistoryAgreementItem[];\n    };\n}\n\ninterface AccountHistoryAgreementItem {\n    id: string;\n    money: number;\n    number: string;\n    name: string;\n}\n\ninterface PayloadTypes {\n    [ACCOUNT_HISTORY_MONEY]: {\n        email?: string;\n        state: StateStatus;\n    };\n}\n\nexport enum StateStatus {\n    Fetching = 'fetching',\n    Fail = 'fail',\n    Clear = 'clear',\n    Edit = 'edit',\n}\n\n// TODO добавить описание исходник смотреть тут xhh/pages/employer/account/__init__.py\nconst initialState: AccountHistoryMoneyState = {\n    hasPersonalManager: false,\n    state: '',\n    email: '',\n    agreements: {},\n    currency: '',\n    hrs: {\n        orders: [],\n    },\n    balances: {},\n    employerCountry: '',\n    availableWithoutBlockedMoney: 0.0,\n};\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const accountHistoryMoneyAction = ActionCreator(ACCOUNT_HISTORY_MONEY);\n\nexport default createReducer<AccountHistoryMoneyState, PayloadTypes>(initialState, {\n    [ACCOUNT_HISTORY_MONEY]: (state, action) => {\n        return { ...state, ...action.payload };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum AuthSystemMethods {\n    External = 'external',\n    Native = 'native',\n}\n\nexport interface AccountTemporarilyLocked {\n    locked?: boolean;\n    remainingTime?: string;\n    authSystemMethod?: AuthSystemMethods;\n}\n\nexport default autoGeneratedReducer<AccountTemporarilyLocked>({});\n","// tempexp_28466_file\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst OPEN_ANONYMOUS_SIGN_UP_MODAL = 'OPEN_ANONYMOUS_SIGN_UP_MODAL';\nconst CLOSE_ANONYMOUS_SIGN_UP_MODAL = 'CLOSE_ANONYMOUS_SIGN_UP_MODAL';\n\ninterface PayloadTypes {\n    [OPEN_ANONYMOUS_SIGN_UP_MODAL]: void;\n    [CLOSE_ANONYMOUS_SIGN_UP_MODAL]: void;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const openAnonymousSignUpModal = ActionCreator(OPEN_ANONYMOUS_SIGN_UP_MODAL);\nexport const closeAnonymousSignUpModal = ActionCreator(CLOSE_ANONYMOUS_SIGN_UP_MODAL);\n\nexport default createReducer<boolean, PayloadTypes>(false, {\n    [OPEN_ANONYMOUS_SIGN_UP_MODAL]: () => true,\n    [CLOSE_ANONYMOUS_SIGN_UP_MODAL]: () => false,\n});\n","// tempexp_27541_file\nexport const extractRequestUrlFromForm = (form: HTMLFormElement): string => {\n    const formData = new FormData(form);\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of formData.entries()) {\n        queryParams.append(key, value.toString());\n    }\n\n    return `${form.action}?${queryParams.toString()}`;\n};\n","// tempexp_27541_file\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const useMainPageSignupEnable = (): boolean => {\n    return useSelector((state) => state.anonymousSignUp.available && !state.anonymousSignUp.alreadyShown);\n};\n","// tempexp_27541_file\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE = 'OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE';\nconst CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE = 'CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE';\n\ninterface InitialState {\n    alreadyShown: boolean;\n    available: boolean;\n    opened: boolean;\n    backUrl: string;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    alreadyShown: false,\n    available: false,\n    opened: false,\n    backUrl: '',\n};\n\ninterface PayloadTypes {\n    [OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE]: string;\n    [CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE]: void;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const openAnonymousSignUpMainPage = ActionCreator(OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE);\nexport const closeAnonymousSignUpMainPage = ActionCreator(CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE);\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE]: (state, { payload }) => ({\n        ...state,\n        opened: state.opened || (!state.alreadyShown && state.available),\n        backUrl: payload,\n    }),\n    [CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE]: (state) => ({\n        ...state,\n        opened: false,\n        alreadyShown: true,\n    }),\n});\n","// tempexp_27495_file\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst OPEN_ANONYMOUS_SIGN_UP_PAGINATION = 'OPEN_ANONYMOUS_SIGN_UP_PAGINATION';\nconst CLOSE_ANONYMOUS_SIGN_UP_PAGINATION = 'CLOSE_ANONYMOUS_SIGN_UP_PAGINATION';\n\ninterface InitialState {\n    alreadyShown: boolean;\n    opened: boolean;\n    backUrl: string;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    alreadyShown: false,\n    opened: false,\n    backUrl: '',\n};\n\ninterface PayloadTypes {\n    [OPEN_ANONYMOUS_SIGN_UP_PAGINATION]: string;\n    [CLOSE_ANONYMOUS_SIGN_UP_PAGINATION]: void;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const openAnonymousSignUpPaginationPage = ActionCreator(OPEN_ANONYMOUS_SIGN_UP_PAGINATION);\nexport const closeAnonymousSignUpPaginationPage = ActionCreator(CLOSE_ANONYMOUS_SIGN_UP_PAGINATION);\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [OPEN_ANONYMOUS_SIGN_UP_PAGINATION]: (state, { payload }) => ({\n        ...state,\n        opened: state.opened || !state.alreadyShown,\n        backUrl: payload,\n    }),\n    [CLOSE_ANONYMOUS_SIGN_UP_PAGINATION]: (state) => ({\n        ...state,\n        opened: false,\n        alreadyShown: true,\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum AppLinkType {\n    HhIosApplicant = 'hh-ios-applicant',\n    HhAndroidApplicant = 'hh-android-applicant',\n    HhHuaweiApplicant = 'hh-huawei-applicant',\n    HhIosEmployer = 'hh-ios-employer',\n    HhAndroidEmployer = 'hh-android-employer',\n    HhHuaweiEmployer = 'hh-huawei-employer',\n    JtbIosApplicant = 'jtb-ios-applicant',\n    JtbAndroidApplicant = 'jtb-android-applicant',\n    JtbIosEmployer = 'jtb-ios-employer',\n    JtbAndroidEmployer = 'jtb-android-employer',\n    ZpIosApplicant = 'zp-ios-applicant',\n    ZpAndroidApplicant = 'zp-android-applicant',\n    ZpHuaweiApplicant = 'zp-huawei-applicant',\n}\n\nexport interface AppLink {\n    detected: boolean;\n    href: string;\n    type: AppLinkType | '';\n    name: string;\n}\n\nexport default autoGeneratedReducer<AppLink>({\n    detected: false,\n    href: '',\n    type: '',\n    name: '',\n});\n","import { DefaultRootState } from 'react-redux';\nimport { ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { makeSetStoreField, autoGeneratedReducer, Action } from '@hh.ru/redux-create-reducer';\n\nexport enum LogoType {\n    VacancyPage = 'vacancyPage',\n    Medium = 'medium',\n    SearchResultsPage = 'searchResultsPage',\n    Small = 'small',\n    EmployerPage = 'employerPage',\n    Original = 'ORIGINAL',\n}\n\nexport interface CompanyLogo {\n    '@type': LogoType;\n    '@url': string;\n}\n\ninterface PossibleOfferEmployer {\n    name: string;\n    employerId: number;\n    logos: {\n        logo: CompanyLogo[];\n    };\n    vacancyNames: string[];\n    hasInvitationTopic: boolean;\n    topicIds: number[];\n    vacancyId?: number;\n    resumeId?: number;\n}\n\ninterface JobSearchStatusPostChangeModal {\n    visible: boolean;\n    showStatusChangeNotification?: boolean;\n}\n\nexport type PossibleJobOffers = PossibleOfferEmployer[];\n\nexport const possibleJobOffersDefaultValue: PossibleJobOffers = [];\n\nexport const jobSearchStatusPostChangeModal = autoGeneratedReducer<JobSearchStatusPostChangeModal>(null);\nconst setJobSearchStatusPostChangeModal = makeSetStoreField('jobSearchStatusPostChangeModal');\n\nexport const showPostChangeModal: ActionCreator<ThunkAction<void, DefaultRootState, unknown, Action>> =\n    (showStatusChangeNotification: boolean) => (dispatch) => {\n        dispatch(\n            setJobSearchStatusPostChangeModal({\n                visible: true,\n                showStatusChangeNotification,\n            })\n        );\n    };\n\nexport const hidePostChangeModal: ActionCreator<ThunkAction<void, DefaultRootState, unknown, Action>> =\n    () => (dispatch) => {\n        dispatch(\n            setJobSearchStatusPostChangeModal({\n                visible: false,\n                showStatusChangeNotification: false,\n            })\n        );\n    };\n\nexport const applicantPossibleJobOffers = autoGeneratedReducer<PossibleJobOffers>(possibleJobOffersDefaultValue);\nexport const setApplicantPossibleJobOffers = makeSetStoreField('applicantPossibleJobOffers');\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\n\nexport interface BlacklistEmployerItem {\n    id: string;\n    name: string;\n    vacanciesNumber: string;\n}\n\nexport interface ApplicantBlacklistEmployers {\n    list: BlacklistEmployerItem[];\n    found: string;\n    paging?: Paging;\n}\n\nconst REMOVE_EMPLOYER = 'REMOVE_EMPLOYER';\nconst REMOVE_ALL_EMPLOYERS = 'REMOVE_ALL_EMPLOYER';\n\ninterface PayloadTypes {\n    [REMOVE_EMPLOYER]: { employerId: string };\n    [REMOVE_ALL_EMPLOYERS]: void;\n}\n\nconst INITIAL_STATE: ApplicantBlacklistEmployers = {\n    paging: undefined,\n    list: [],\n    found: '0',\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const removeEmployer = actionCreator(REMOVE_EMPLOYER);\nexport const removeAllEmployers = actionCreator(REMOVE_ALL_EMPLOYERS);\n\nexport default createReducer<ApplicantBlacklistEmployers, PayloadTypes>(INITIAL_STATE, {\n    [REMOVE_EMPLOYER]: (state, action) => {\n        const { employerId } = action.payload;\n        const newList = state.list.filter((employer) => employer.id !== employerId);\n\n        return {\n            ...state,\n            found: String(Number(state.found) - 1),\n            list: newList,\n        };\n    },\n    [REMOVE_ALL_EMPLOYERS]: () => INITIAL_STATE,\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\nimport VacancyCompenstionType from 'lux/models/vacancy/compensation.type';\nimport { VacancyCompany } from 'lux/models/vacancySearch/vacancySearchItem.types';\nimport { VacancyAddress } from 'lux/models/vacancyView.types';\n\nexport interface BlacklistVacancyItem {\n    id: string;\n    hrBrand?: {\n        type: 'winner' | 'nominee';\n        url: string;\n    };\n    name: string;\n    link: string;\n    company: VacancyCompany;\n    publicationTime: string;\n    compensation: VacancyCompenstionType;\n    address?: VacancyAddress;\n    area: {\n        '@id': number;\n        name: string;\n        path: string;\n    };\n}\n\nexport interface ApplicantBlacklistVacancy {\n    list: BlacklistVacancyItem[];\n    paging?: Paging;\n}\n\nconst REMOVE_VACANCY = 'REMOVE_VACANCY';\n\ninterface PayloadTypes {\n    [REMOVE_VACANCY]: {\n        vacancyId: string;\n    };\n}\n\nconst INITIAL_STATE: ApplicantBlacklistVacancy = {\n    list: [],\n    paging: undefined,\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const removeVacancy = actionCreator(REMOVE_VACANCY);\n\nexport default createReducer<ApplicantBlacklistVacancy, PayloadTypes>(INITIAL_STATE, {\n    [REMOVE_VACANCY]: (state, action) => {\n        const { vacancyId } = action.payload;\n\n        const newList = state.list.filter((vacancy) => vacancy.id !== vacancyId);\n\n        return {\n            ...state,\n            list: newList,\n        };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum ManagerInactiveTrlCode {\n    Online = 'online',\n    Today = 'today',\n    Yesterday = 'yesterday',\n    Week = 'week',\n    Month = 'month',\n    WeekExact = 'weekExact',\n}\n\nexport interface ManagerActivityData {\n    '@managerHhid'?: string;\n    // eslint-disable-next-line camelcase\n    trl_code: ManagerInactiveTrlCode;\n    // eslint-disable-next-line camelcase\n    inactive_days: number;\n}\n\nexport default autoGeneratedReducer<ManagerActivityData[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum NegotiationsFilterTab {\n    Active = 'active',\n    All = 'all',\n}\n\nexport enum ApplicantNegotiationStatus {\n    Discard = 'DISCARD',\n    Invitation = 'INVITATION',\n    Read = 'READ',\n    Unread = 'UNREAD',\n    OnlyNew = 'ONLY_NEW',\n    All = 'ALL',\n}\n\nexport interface FilterByStatus {\n    href: string;\n    name: ApplicantNegotiationStatus;\n    selected: boolean;\n}\n\nexport enum ApplicantNegitiationsOrder {\n    LastState = 'LAST_STATE',\n    LastModified = 'LAST_MODIFIED',\n}\n\nexport enum OrderDirection {\n    Ascending = 'ASC',\n    Descending = 'DESC',\n}\n\ninterface Order {\n    order: OrderDirection;\n    href: string;\n    name: ApplicantNegitiationsOrder;\n}\n\ninterface ApplicantNegotiationsActionsDataState {\n    deleteAction: {\n        href?: string;\n        substate?: string;\n    };\n    filters: {\n        href: string;\n        selected: boolean;\n        name: NegotiationsFilterTab;\n    }[];\n    filterByStatus: FilterByStatus[];\n    backUrl: string;\n    order: Partial<Record<ApplicantNegitiationsOrder, Order>>;\n}\n\nexport default autoGeneratedReducer<ApplicantNegotiationsActionsDataState>({\n    deleteAction: {},\n    filters: [],\n    filterByStatus: [],\n    backUrl: '',\n    order: {},\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum PaymentServicesFromBackend {\n    CompleteResume = 'COMPLETE_RESUME',\n    CompleteResumeConsultOnly = 'COMPLETE_RESUME_CONSULT_ONLY',\n    CompleteResumeBase = 'COMPLETE_RESUME_BASE',\n    CompleteResumeOptimal = 'COMPLETE_RESUME_OPTIMAL',\n    CompleteResumeMaximal = 'COMPLETE_RESUME_MAXIMAL',\n    CompleteResumeInterviewPractice = 'COMPLETE_RESUME_INTERVIEW_PRACTICE',\n    ResumeMark = 'RESUME_MARK',\n    ResumeRenewal = 'RESUME_RENEWAL',\n    CareerGuidance = 'CAREER_GUIDANCE',\n    VacancyResponsesSummary = 'VACANCY_RESPONSES_SUMMARY',\n    FastVacancies = 'FAST_VACANCIES',\n    HHAcademy = 'HH_ACADEMY',\n    CareerMarathonBase = 'CAREER_MARATHON_BASE',\n    CareerMarathonOptimal = 'CAREER_MARATHON_OPTIMAL',\n    CareerMarathonMaximal = 'CAREER_MARATHON_MAXIMAL',\n    TargetEmployer = 'TARGET_EMPLOYER',\n}\n\nexport default autoGeneratedReducer<PaymentServicesFromBackend[]>([]);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport interface ApplicantResponseStreak {\n    vacancyId: string;\n    responsesCount: number;\n    responsesRequired: number;\n}\n\ntype ApplicantResponseStreaks = Record<string, ApplicantResponseStreak>;\n\nexport const APPLICANT_RESPONSE_STREAK_UPDATE = 'APPLICANT_RESPONSE_STREAK_UPDATE';\nexport const INITIAL_STATE: ApplicantResponseStreaks = {};\n\ninterface PayloadTypes {\n    [APPLICANT_RESPONSE_STREAK_UPDATE]: {\n        vacancyId: number;\n        data: ApplicantResponseStreak;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const responseStreakUpdate = actionCreator(APPLICANT_RESPONSE_STREAK_UPDATE);\n\nexport default createReducer<ApplicantResponseStreaks, PayloadTypes>(INITIAL_STATE, {\n    [APPLICANT_RESPONSE_STREAK_UPDATE]: (state, { payload }) => {\n        return {\n            ...state,\n            [payload.vacancyId]: { ...state[payload.vacancyId], ...payload.data },\n            overall: { ...state.overall, ...payload.data },\n        };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Resume, ResumeAttributes } from 'lux/models/resume/resume.types';\n\nexport const RESUMES_SET_TO_UPDATE_VALUE = 'RESUMES_SET_TO_UPDATE_VALUE';\n\ntype ResumeItem = Pick<\n    Resume,\n    | 'accessType'\n    | 'hiddenFields'\n    | 'humanDatesRules'\n    | 'phone'\n    | 'showUpdateBlock'\n    | 'specialization'\n    | 'title'\n    | 'updatedHuman'\n>;\n\ntype ApplicantResumeItem = ResumeItem & {\n    _attributes: ResumeAttributes;\n    toUpdate: {\n        value: number;\n    };\n};\ntype ApplicantResumeList = ApplicantResumeItem[];\nexport const INITIAL_STATE: ApplicantResumeList = [];\n\ninterface PayloadTypes {\n    [RESUMES_SET_TO_UPDATE_VALUE]: {\n        hash: string;\n        value: number;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const resumesSetToUpdateValueAction = actionCreator(RESUMES_SET_TO_UPDATE_VALUE);\n\nexport default createReducer<ApplicantResumeList, PayloadTypes>(INITIAL_STATE, {\n    [RESUMES_SET_TO_UPDATE_VALUE]: (state, action) => {\n        const { hash, value } = action.payload;\n        const newState = state.map((resume: ApplicantResumeItem) => {\n            if (resume._attributes.hash === hash) {\n                return {\n                    ...resume,\n                    // поле toUpdate из питона имеет структуру вида\n                    // {value: 12804, count: 4, translation: \"hours\", ending: 1}\n                    // но в коде используем только value, так что все остальные поля просто стираю\n                    toUpdate: { value },\n                };\n            }\n            return resume;\n        });\n        return newState;\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { DateIsoString } from 'bloko/blocks/calendar/datesHelper';\n\nexport enum ApplicantRsvCompetencyLevelType {\n    Basic = 'basic',\n    Intermediate = 'intermediate',\n    Advanced = 'advanced',\n}\n\nexport enum ApplicantRsvCompetencyLevelUuid {\n    Basic = '68b19575-4f6a-47a7-be54-7443d267fad9',\n    Intermediate = '922cfc61-00d0-4d32-a1d1-d56823d0a9c1',\n    Advanced = '91d4fc28-d88d-47ac-93f5-04263e4e2cc6',\n}\n\nexport interface ApplicantRsvCompetencyDto {\n    competencyUuid: string;\n    competencyName: string;\n    competencyDescription: string;\n    competencyLevelUuid: ApplicantRsvCompetencyLevelUuid;\n    competencyLevelName: string;\n    competencyWithLevelDescription: string;\n}\n\nexport interface ApplicantRsvCompetencyListDto {\n    updatedAt: DateIsoString;\n    visible: boolean;\n    competenciesData: ApplicantRsvCompetencyDto[];\n}\n\nexport const applicantRsvCompetencyLevelMap = {\n    [ApplicantRsvCompetencyLevelUuid.Basic]: ApplicantRsvCompetencyLevelType.Basic,\n    [ApplicantRsvCompetencyLevelUuid.Intermediate]: ApplicantRsvCompetencyLevelType.Intermediate,\n    [ApplicantRsvCompetencyLevelUuid.Advanced]: ApplicantRsvCompetencyLevelType.Advanced,\n} as const;\n\ninterface ResumeShort {\n    creationTime: number;\n    firstName: string;\n    lastName: string;\n    hash: string;\n    hhid: number;\n    id: number;\n    lastChangeTime: number;\n    lastEditTime: number;\n    markService: boolean;\n    moderationTime: string;\n    permission: string;\n    renewalService: boolean;\n    status: string;\n    userId: number;\n    title: string;\n}\n\ninterface VacancyShort {\n    name: string;\n    id: number;\n}\n\nexport interface RsvCompetencyData {\n    list: ApplicantRsvCompetencyListDto;\n    resumeShort: ResumeShort;\n    vacancy?: VacancyShort;\n}\n\nexport const applicantRsvCompetencyLevelOrder: Record<string, number> = {\n    [ApplicantRsvCompetencyLevelUuid.Basic]: 0,\n    [ApplicantRsvCompetencyLevelUuid.Intermediate]: 1,\n    [ApplicantRsvCompetencyLevelUuid.Advanced]: 2,\n};\n\nexport default autoGeneratedReducer<RsvCompetencyData>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { PaymentServicesFromBackend } from 'lux/models/applicantPaymentServices';\n\nexport enum ApplicantPackageType {\n    Basic = 'basic',\n    Premium = 'premium',\n    Lite = 'lite',\n    Standard = 'standard',\n    Pro = 'pro',\n}\n\nexport enum ApplicantPaymentSource {\n    MovileApp = 'mobile_app',\n    Desktop = 'desktop',\n}\n\nexport enum ApplicantPaymentType {\n    CreditCard = 'CREDIT_CARD',\n    YandexMoney = 'YANDEX_MONEY',\n    Webmoney = 'WEBMONEY',\n}\n\ninterface ServicePrice {\n    amount: number;\n    amountWithoutDiscount: number;\n    currency: string;\n}\n\nexport default {\n    applicantPackageType: autoGeneratedReducer<ApplicantPackageType>(ApplicantPackageType.Basic),\n    applicantServiceType: autoGeneratedReducer<string>(''),\n    applicantPaymentBackUrl: autoGeneratedReducer<string>(''),\n    applicantAnalyticsAction: autoGeneratedReducer<string>(''),\n    applicantPaymentTypes: autoGeneratedReducer<ApplicantPaymentType[]>([]),\n    applicantAvailableResumeServices: autoGeneratedReducer<PaymentServicesFromBackend[]>([]),\n    applicantPackageContent: autoGeneratedReducer<PaymentServicesFromBackend[]>([]),\n    applicantAvailableQuantities: autoGeneratedReducer<string[]>([]),\n    applicantServicesPrices: autoGeneratedReducer<Record<string, ServicePrice>>({}),\n    applicantPaymentSource: autoGeneratedReducer<ApplicantPaymentSource>(ApplicantPaymentSource.Desktop),\n    applicantFindJobRecommendedQuantity: autoGeneratedReducer<string>(null),\n};\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR = 'REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR';\n\ninterface PayloadTypes {\n    [REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR]: null;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const refreshApplicantSkillsVerificationError = actionCreator(REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR);\n\nconst initialState = null;\n\nexport default createReducer(initialState, {\n    [REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR]: () => initialState,\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\ninterface Original {\n    original: string;\n}\n\ninterface Icon {\n    dark: Original;\n    light: Original;\n    defaults: Original;\n}\n\nexport enum ApplicantSkillsVerificationResultKeys {\n    CourseUrl = 'course_url',\n    BrandingSettings = 'branding_settings',\n    CtaButtonEnabled = 'cta_button_enabled',\n    AgeLabel = 'age_label',\n    InternalId = 'internal_id',\n}\n\ninterface Level {\n    id: number;\n    [ApplicantSkillsVerificationResultKeys.InternalId]: string;\n    name: string;\n    rank: number;\n}\n\nexport interface ApplicantSkillsVerificationResultMethod {\n    id: number;\n    name: string;\n    description: string;\n    source: {\n        id: number;\n        name: string;\n        href: string;\n        description: string | null;\n        icon: Icon;\n        headline: Icon;\n    };\n    platform: string;\n    icon: Icon;\n    [ApplicantSkillsVerificationResultKeys.BrandingSettings]: {\n        enabled: boolean;\n        [ApplicantSkillsVerificationResultKeys.CtaButtonEnabled]: boolean;\n        [ApplicantSkillsVerificationResultKeys.AgeLabel]: string;\n    };\n}\nexport interface ApplicantSkillsVerificationResultItem {\n    id: number;\n    level: Level | null;\n    [ApplicantSkillsVerificationResultKeys.CourseUrl]: string;\n    content: string;\n    name: string;\n    category: string;\n    result: {\n        type: string;\n        status: string;\n        score: {\n            max: number;\n            actual: number;\n        };\n    };\n}\n\nexport interface ApplicantSkillsVerificationResult {\n    method: ApplicantSkillsVerificationResultMethod;\n    items: ApplicantSkillsVerificationResultItem[];\n}\n\nconst REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS = 'REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS';\n\ninterface PayloadTypes {\n    [REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS]: null;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const refreshApplicantSkillsVerificationResults = actionCreator(REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS);\n\nconst initialState = null;\n\nexport default createReducer(initialState, {\n    [REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS]: () => initialState,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum JobSearchStatus {\n    Unknown = 'unknown',\n    ActiveSearch = 'active_search',\n    LookingForOffers = 'looking_for_offers',\n    NotLookingForJob = 'not_looking_for_job',\n    HasJobOffer = 'has_job_offer',\n    AcceptedJobOffer = 'accepted_job_offer',\n}\n\nexport enum JobSearchStatusForm {\n    VacancyResponseNotification = 'job-search-status-form-vacancy-response-notification',\n    RenewNotification = 'job-search-status-form-notification',\n    MyResumesXsModal = 'job-search-status-form-modal',\n    MyResumesDesktop = 'job-search-status-form-block',\n    ResponsesPageBanner = 'responses-page-banner',\n}\n\nexport enum JobSearchStatusTrigger {\n    NegotiationsScreen = 'negotiations_screen',\n    AfterVacancyResponse = 'after_vacancy_response',\n}\n\nexport type JobSearchStatusSetted = Exclude<JobSearchStatus, JobSearchStatus.Unknown>;\ntype JobSearchStatusFull = { name: JobSearchStatusSetted } | null;\n\nexport default autoGeneratedReducer<{\n    jobSearchStatus: JobSearchStatusFull;\n}>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport NegotiationTopic from 'lux/models/negotiationTopic.types';\nimport { Resume } from 'lux/models/resume/resume.types';\nimport { AutoHideTime, Gender, PhotoUrl } from 'lux/models/resume/resumeCommon.types';\nimport { ResumeVisibility } from 'lux/models/vacancyResponsePopup';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nexport const APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE = 'APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE';\nexport const APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING = 'APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING';\nexport const INITIAL_STATE = {};\n\ninterface ResponseStatusResumeFields {\n    photoUrls?: PhotoUrl[];\n    gender?: { string: Gender }[];\n    autoHideTime?: { string: AutoHideTime }[];\n}\n\nexport type ResponseStatusResume = Resume & ResponseStatusResumeFields;\n\nexport interface ShortVacancy {\n    isFetching?: boolean;\n    shortVacancy: VacancySearchItem;\n    alreadyApplied: boolean;\n    negotiations: {\n        total: number;\n        topicList: NegotiationTopic[];\n    };\n    hasQuickResponse?: boolean;\n    usedResumeIds: string[];\n    hiddenResumeIds: string[];\n    letterMaxLength: number;\n    unusedResumeIds: string[];\n    resumes: Record<string, ResponseStatusResume>;\n    resumeVisibility: Record<string, ResumeVisibility>;\n}\n\ntype InitialState = Record<number, ShortVacancy>;\n\ninterface VacancyResponseUpdate {\n    data: ShortVacancy;\n    vacancyId: number;\n}\ninterface VacancyResponseSetFetching {\n    isFetching: boolean;\n    vacancyId: number;\n}\n\ninterface PayloadTypes {\n    [APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE]: VacancyResponseUpdate;\n    [APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING]: VacancyResponseSetFetching;\n}\nconst actionHelper = ActionCreatorHelper<PayloadTypes>();\n\nexport const vacancyResponseUpdate = actionHelper(APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE);\n\nexport const vacancyResponseSetFetching = actionHelper(APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING);\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE]: (state, { payload }) => {\n        return {\n            ...state,\n            [payload.vacancyId]: { ...state[payload.vacancyId], ...payload.data },\n        };\n    },\n\n    [APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING]: (state, { payload }) => ({\n        ...state,\n        [payload.vacancyId]: { ...state[payload.vacancyId], isFetching: payload.isFetching },\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { SocialView } from 'bloko/blocks/icon/variants/social/types';\n\nimport { ArticleRubric, ArticleType } from 'lux/models/articlePage/types';\n\nexport interface ShareButtonProps {\n    type: string;\n    icon: keyof typeof SocialView;\n    url: string;\n}\n\nexport const ARTICLE_BREADCRUMBS = {\n    ArticlesMark: 'articlesMark',\n    PartnerMark: 'partnerMark',\n    BusinessMark: 'businessMark',\n    YoungProfessionalsMark: 'youngProfessionalsMark',\n    PressReleaseMark: 'pressReleaseMark',\n} as const;\nexport type ArticleBreadcrumb = (typeof ARTICLE_BREADCRUMBS)[keyof typeof ARTICLE_BREADCRUMBS];\n\nexport enum ImageType {\n    Original = 'original',\n    AdminPreview = 'admin_preview',\n    Title = 'title',\n    Cover = 'cover',\n    Recomended = 'recomended',\n    Preview = 'preview',\n    Announce = 'announce',\n    Related = 'related',\n    Readmore = 'readmore',\n    Landing = 'landing',\n}\n\nexport interface Image {\n    type: ImageType;\n    url: string;\n    caption: string;\n}\n\nexport interface ReadMoreArticle {\n    code: string;\n    title: string;\n    images: Array<Image>;\n    preview: null;\n    articleType: null;\n}\n\ninterface ArticlePage {\n    id: string;\n    shareButtons: Array<ShareButtonProps>;\n    type: ArticleType;\n    showMainArticleImage: boolean;\n    showShareButtons: boolean;\n    breadcrumbs: Array<ArticleBreadcrumb>;\n    readMore: ReadMoreArticle[];\n    title: string;\n    publicationTime: string;\n    images: Array<Image>;\n    insiderDesignType: 'simple' | 'landing';\n    rubrics: Array<{ id: string; code: ArticleRubric; priority: string }>;\n}\n\nexport default autoGeneratedReducer<ArticlePage>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum VoteType {\n    Dislike = '0',\n    Like = '1',\n    NoVoted = 'noVoted',\n}\n\nexport interface ArticleRating {\n    voteState: VoteType;\n    likesCount: number;\n}\n\nexport default autoGeneratedReducer<ArticleRating>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst REVOKE_ASSESSMENT = 'assessments/revoke';\n\nexport enum State {\n    Assigned = 'ASSIGNED',\n    New = 'NEW',\n    Completed = 'COMPLETED',\n    WaitingForResult = 'WAITING_FOR_RESULTS',\n    Revoked = 'REVOKED',\n    Deadline = 'DEADLINE',\n    Expired = 'EXPIRED',\n    Rejected = 'REJECTED',\n    Started = 'STARTED',\n}\n\nexport enum AssessmentCode {\n    ShlNumeric = 'SHL_NUMERIC',\n    ShlOpq = 'SHL_OPQ',\n    ShlVerbal = 'SHL_VERBAL',\n    SkillazVideoInterview = 'SKILLAZ_VIDEO_INTERVIEW',\n}\n\nexport interface Assessment {\n    code: AssessmentCode;\n    state: State;\n    assessmentId: number;\n    creationTime: number;\n}\n\ninterface PayloadTypes {\n    [REVOKE_ASSESSMENT]: { id: number };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const revoke = actionCreator(REVOKE_ASSESSMENT);\n\nexport const INITIAL_STATE = {\n    assessments: [],\n};\n\nexport default createReducer<{ assessments: Assessment[] }, PayloadTypes>(INITIAL_STATE, {\n    [REVOKE_ASSESSMENT]: (state, action) => {\n        return {\n            ...state,\n            assessments: state.assessments.map((assessment) =>\n                assessment.assessmentId === action.payload.id\n                    ? {\n                          ...assessment,\n                          revoke: true,\n                          state: State.Revoked,\n                      }\n                    : assessment\n            ),\n        };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface AuctionConfirmationModalData {\n    price: number;\n    currency: CurrencyType;\n}\n\nexport interface AuctionConfirmationModal {\n    visible: boolean;\n    data: AuctionConfirmationModalData;\n}\nconst TOOGLE_CONFIRMATION_MODAL = 'TOOGLE_CONFIRMATION_MODAL';\nconst SET_CONFIRMATION_MODAL_DATA = 'SET_CONFIRMATION_MODAL_DATA';\n\ninterface PayloadAuctionDataTypes {\n    [TOOGLE_CONFIRMATION_MODAL]: boolean;\n    [SET_CONFIRMATION_MODAL_DATA]: AuctionConfirmationModalData;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadAuctionDataTypes>();\nexport const toogleConfirmationModal = actionCreator(TOOGLE_CONFIRMATION_MODAL);\nexport const setConfirmationModalData = actionCreator(SET_CONFIRMATION_MODAL_DATA);\n\nexport default createReducer<AuctionConfirmationModal, PayloadAuctionDataTypes>(\n    { visible: false, data: { price: 0, currency: CurrencyType.RUR } },\n    {\n        [TOOGLE_CONFIRMATION_MODAL]: (state, { payload }) => {\n            return { ...state, visible: payload };\n        },\n        [SET_CONFIRMATION_MODAL_DATA]: (state, { payload }) => {\n            return { ...state, data: payload };\n        },\n    }\n);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { ClickmeProductType } from 'lux/models/price/product.types';\n\nexport enum CampaignCreationStatus {\n    Disabled = 'DISABLED',\n    NotCreated = 'NOT_CREATED',\n    CampaignDraftCreated = 'CAMPAIGN_DRAFT_CREATED',\n    CampaignCreated = 'CAMPAIGN_CREATED',\n}\n\nexport const CAMPAIGN_CREATION_ENABLED_STATUSES = [\n    CampaignCreationStatus.NotCreated,\n    CampaignCreationStatus.CampaignDraftCreated,\n];\n\nexport enum AuctionCampaignStatus {\n    Blocked = 'BLOCKED',\n    Active = 'ACTIVE',\n    CampaignLowBalance = 'CAMPAIGN_LOW_BALANCE',\n    AccountLowBalance = 'ACCOUNT_LOW_BALANCE',\n}\n\nexport interface CampaignAccountInfo {\n    id: number;\n    title: string;\n    isMain: boolean;\n}\nexport interface CurrentVacancyAuctionCampaign {\n    campaignId: number;\n    campaignStatus: AuctionCampaignStatus;\n    bid: number;\n    budget: number;\n    campaignBalance: number;\n    campaignAccountInfo: CampaignAccountInfo;\n}\n\nexport interface CurrentVacancyAuctionData {\n    campaignInfo?: CurrentVacancyAuctionCampaign;\n    campaignCreationStatus: CampaignCreationStatus;\n}\n\nexport interface CampaignDraft {\n    campaignDraftId: string;\n    purchaseUrl: string;\n}\n\nexport enum AuctionFieldName {\n    Bid = 'publication.auction.bid',\n    Budget = 'publication.auction.budget',\n    Replenishment = 'publication.auction.replenishment',\n    Checked = 'publication.auction.checked',\n    UseAvalilableMoney = 'publication.auction.useAvailableMoney',\n}\n\ntype AuctionControlName = AuctionFieldName.Bid | AuctionFieldName.Budget | AuctionFieldName.Replenishment;\n\nexport enum AuctionFieldError {\n    BidRequired = 'publication.auction.bid.required',\n    BudgetRequired = 'publication.auction.budget.required',\n    InvalidBid = 'publication.auction.bid.invalidBid',\n    InvalidBudget = 'publication.auction.budget.invalidBudget',\n    MinBidValue = 'publication.auction.bid.minValue',\n    MinBudgetValue = 'publication.auction.budget.minValue',\n    MinReplenishmentValue = 'publication.auction.replenishment.minValue',\n    InvalidReplenishment = 'auction.controls.error.invalidReplenishment',\n    ReplenishmentRequired = 'publication.auction.replenishment.required',\n}\n\n// tempexp_27104_start\nexport enum BidFrequencyStatus {\n    Rare = 'RARE',\n    Average = 'AVERAGE',\n    Often = 'OFTEN',\n}\n// tempexp_27104_end\n\nexport interface BidRatingData {\n    competingCampaignBids: number[];\n    competingCampaignIds: number[];\n    maxBidAmongSimilarVacancies: number | null;\n    recommendedBid: number;\n    similarVacanciesWithEqualBidAmount: number;\n    similarVacanciesWithHigherBidAmount: number;\n    totalSimilarVacanciesAmount: number;\n    // tempexp_27104_start\n    bidFrequencyStatus?: BidFrequencyStatus;\n    oftenThresholdBid?: number;\n    // tempexp_27104_end\n}\n\nexport interface BidRatingRequestParams {\n    bid?: number;\n    budget?: number;\n    areaIds: string[];\n    name: string;\n    professionalRoleIds: string[];\n}\n\ninterface BidRating {\n    data: BidRatingData;\n    loading: boolean;\n    requestParams: BidRatingRequestParams;\n}\n\ninterface AuctionStatistics {\n    clicks: number;\n    conversion: number;\n    responses: number;\n    startAuctionDate: string | null;\n}\n\nexport interface ControlInfo {\n    fieldName: AuctionControlName;\n    minValue: number;\n    value: string;\n    initialValue: string;\n    error?: AuctionFieldError;\n    showError?: boolean;\n}\n\nexport interface ProductInfo {\n    data: ClickmeProductType | null;\n    loading: boolean;\n}\n\nexport interface AuctionData {\n    bidRating: BidRating;\n    auctionStatistics: AuctionStatistics;\n    campaignCreationStatus: CampaignCreationStatus;\n    controls: Record<AuctionControlName, ControlInfo>;\n    currency: CurrencyType;\n    currentVacancyAuctionCampaign?: CurrentVacancyAuctionCampaign;\n    campaignDraft?: CampaignDraft;\n    productInfo: ProductInfo;\n    vacancyId?: string;\n    useAvailableMoney: boolean;\n    availableMoney: number;\n    hideClickmeBalance: boolean;\n    accountBalance: number;\n    areaName: string;\n}\n\nexport interface AuctionDataWithCampaign extends AuctionData {\n    vacancyId: string;\n    currentVacancyAuctionCampaign: CurrentVacancyAuctionCampaign;\n    campaignDraft: never;\n}\n\nexport interface DisabledAuctionData {\n    campaignCreationStatus: CampaignCreationStatus;\n}\n\nexport interface CreatedAuctionData {\n    auctionStatistics: AuctionStatistics;\n    campaignCreationStatus: CampaignCreationStatus.CampaignCreated;\n    currentVacancyAuctionCampaign: CurrentVacancyAuctionCampaign;\n}\n\nconst SET_BID_RATING_DATA = 'SET_BID_RATING_DATA';\nconst SET_BID_RATING_LOADING = 'SET_BID_RATING_LOADING';\nconst SET_PRODUCT_INFO_DATA = 'SET_PRODUCT_INFO_DATA';\nconst SET_PRODUCT_INFO_LOADING = 'SET_PRODUCT_INFO_LOADING';\nconst UPDATE_AUCTION_CONTROL_INFO = 'UPDATE_AUCTION_CONTROL_INFO';\nconst UPDATE_AUCTION_STATUS = 'UPDATE_AUCTION_STATUS';\nconst UPDATE_AUCTION_CAMPAIGN_INFO = 'UPDATE_AUCTION_CAMPAIGN_INFO';\nconst CHANGE_USE_AVAILABLE_MONEY = 'CHANGE_USE_AVAILABLE_MONEY';\nconst SET_CREATED_AUCTION_DATA = 'SET_CREATED_AUCTION_DATA';\n\ninterface PayloadAuctionDataTypes {\n    [SET_BID_RATING_DATA]: BidRatingData;\n    [SET_BID_RATING_LOADING]: boolean;\n    [SET_PRODUCT_INFO_DATA]: ProductInfo['data'];\n    [SET_PRODUCT_INFO_LOADING]: boolean;\n    [UPDATE_AUCTION_CONTROL_INFO]: { fieldName: AuctionControlName } & Partial<ControlInfo>;\n    [UPDATE_AUCTION_STATUS]: AuctionCampaignStatus;\n    [UPDATE_AUCTION_CAMPAIGN_INFO]: Partial<CurrentVacancyAuctionCampaign>;\n    [CHANGE_USE_AVAILABLE_MONEY]: boolean;\n    [SET_CREATED_AUCTION_DATA]: CreatedAuctionData;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadAuctionDataTypes>();\nexport const setBidRatingData = actionCreator(SET_BID_RATING_DATA);\nexport const setBidRatingLoading = actionCreator(SET_BID_RATING_LOADING);\nexport const setProductInfoData = actionCreator(SET_PRODUCT_INFO_DATA);\nexport const setProductInfoLoading = actionCreator(SET_PRODUCT_INFO_LOADING);\nexport const updateAuctionControlInfo = actionCreator(UPDATE_AUCTION_CONTROL_INFO);\nexport const updateAuctionStatus = actionCreator(UPDATE_AUCTION_STATUS);\nexport const updateAuctionCampaignInfo = actionCreator(UPDATE_AUCTION_CAMPAIGN_INFO);\nexport const changeUseAvailableMoney = actionCreator(CHANGE_USE_AVAILABLE_MONEY);\nexport const setCreatedAuctionData = actionCreator(SET_CREATED_AUCTION_DATA);\n\nexport const defaultControlInfo = {\n    default: null,\n    minValue: null,\n    value: null,\n    initialValue: null,\n    error: false,\n};\n\nexport default createReducer<AuctionData, PayloadAuctionDataTypes>(null, {\n    [SET_BID_RATING_DATA]: (state, { payload }) => {\n        return { ...state, bidRating: { ...state.bidRating, data: payload } };\n    },\n    [SET_BID_RATING_LOADING]: (state, { payload }) => {\n        return { ...state, bidRating: { ...state.bidRating, loading: payload } };\n    },\n    [SET_PRODUCT_INFO_DATA]: (state, { payload }) => {\n        return { ...state, productInfo: { ...state.productInfo, data: payload } };\n    },\n    [SET_PRODUCT_INFO_LOADING]: (state, { payload }) => {\n        return { ...state, productInfo: { ...state.productInfo, loading: payload } };\n    },\n    [UPDATE_AUCTION_CONTROL_INFO]: (state, { payload }) => {\n        return {\n            ...state,\n            controls: {\n                ...state.controls,\n                [payload.fieldName]: { ...state.controls[payload.fieldName], ...payload },\n            },\n        };\n    },\n    [UPDATE_AUCTION_STATUS]: (state, { payload }) => {\n        if (state.currentVacancyAuctionCampaign) {\n            return {\n                ...state,\n                currentVacancyAuctionCampaign: {\n                    ...state.currentVacancyAuctionCampaign,\n                    campaignStatus: payload,\n                },\n            };\n        }\n\n        return state;\n    },\n    [UPDATE_AUCTION_CAMPAIGN_INFO]: (state, { payload }) => {\n        if (state.currentVacancyAuctionCampaign) {\n            return {\n                ...state,\n                currentVacancyAuctionCampaign: {\n                    ...state.currentVacancyAuctionCampaign,\n                    ...payload,\n                },\n            };\n        }\n\n        return state;\n    },\n    [CHANGE_USE_AVAILABLE_MONEY]: (state, { payload }) => {\n        return { ...state, useAvailableMoney: payload };\n    },\n    [SET_CREATED_AUCTION_DATA]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n});\n","import { HhtmSourceLabel } from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_content_element_shown';\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst SET_AUCTION_HHTM_SOURCE_LABEL = 'SET_AUCTION_HHTM_SOURCE_LABEL';\n\nexport type AuctionHhtmlSourceLabel = HhtmSourceLabel | undefined | null;\ninterface PayloadAuctionDataTypes {\n    [SET_AUCTION_HHTM_SOURCE_LABEL]: AuctionHhtmlSourceLabel;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadAuctionDataTypes>();\n\nexport const setAuctionHhtmlSourceLabel = actionCreator(SET_AUCTION_HHTM_SOURCE_LABEL);\n\nexport default createReducer<AuctionHhtmlSourceLabel, PayloadAuctionDataTypes>(null, {\n    [SET_AUCTION_HHTM_SOURCE_LABEL]: (_, { payload }) => {\n        return payload;\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\ninterface AuthUrlType {\n    'login-url': string;\n    'login-form': string;\n    'login-field-value': string;\n    'backurl-field-name': string;\n    'remember-field-name': string;\n    'remember-field-value': string;\n    backurl: string;\n    failurl: string;\n    'signup-form': string;\n    'auth-employer-url': string;\n    'remember-password': string;\n    'agreement-form': string;\n    'employer-agreement': string;\n    'policy-url': string;\n}\n\nconst AUTH_URL_UPDATE = 'AUTH_URL_UPDATE';\n\ninterface PayloadTypes {\n    [AUTH_URL_UPDATE]: Partial<AuthUrlType>;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const authUrlUpdate = actionCreator(AUTH_URL_UPDATE);\n\nexport default createReducer<AuthUrlType, PayloadTypes>(null, {\n    [AUTH_URL_UPDATE]: (state, action) => {\n        return { ...state, ...action.payload };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport DriverLicenseTypes from 'lux/models/driverLicense.types';\nimport { EducationLevel, Gender } from 'lux/models/resume/resumeCommon.types';\nimport { ExclusionOption } from 'lux/models/search/advancedSearch';\nimport { SearchQueries } from 'lux/models/search/resume/searchQueries';\n\nexport enum AutoInviteCriteria {\n    SearchQueries = 'searchQueries',\n    AgeInterval = 'ageInterval',\n    Areas = 'areas',\n    Citizenships = 'citizenships',\n    Districts = 'districts',\n    DriverLicenseTypes = 'driverLicenseTypes',\n    EducationLevels = 'educationLevels',\n    Employments = 'employments',\n    Experiences = 'experiences',\n    Gender = 'gender',\n    JobSearchStatuses = 'jobSearchStatuses',\n    Labels = 'labels',\n    Languages = 'languages',\n    MetroStations = 'metroStations',\n    ProfessionalRoles = 'professionalRoles',\n    Relocation = 'relocation',\n    Salary = 'salary',\n    Schedules = 'schedules',\n    Skills = 'skills',\n    Specializations = 'specializations',\n    Universities = 'universities',\n    WorkTickets = 'workTickets',\n    Exclusions = 'exclusions',\n}\n\nexport enum DaysOfWeek {\n    Monday = 'MONDAY',\n    Tuesday = 'TUESDAY',\n    Wednesday = 'WEDNESDAY',\n    Thursday = 'THURSDAY',\n    Friday = 'FRIDAY',\n    Saturday = 'SATURDAY',\n    Sunday = 'SUNDAY',\n}\n\nexport interface PreviewAutoActionResponse {\n    searchPreview: {\n        differenceInPercent: number;\n        suitableResumes: number;\n        totalResumes: number;\n    };\n    spendingPreview: {\n        invitesPerMonth: number;\n        warnings: string[];\n    };\n}\n\ninterface TopicStateInfo {\n    addressId?: string;\n    message: string;\n    smsText?: string;\n    state: string;\n}\n\nexport enum ScheduleMode {\n    Schedule = 'SCHEDULE',\n    Once = 'ONCE',\n}\n\nexport enum DisableReason {\n    NoAvailableService = 'NO_AVAILABLE_SERVICE',\n    QuotaExceeded = 'QUOTA_EXCEEDED',\n    Finished = 'FINISHED',\n    DisabledByUser = 'DISABLED_BY_USER',\n}\n\ninterface ScheduleInfo {\n    daysOfWeek: DaysOfWeek[];\n    mode: ScheduleMode;\n    maxInvitationsPerDay: number;\n}\n\nexport interface AutoInviteFilters {\n    [AutoInviteCriteria.Labels]?: string[];\n    [AutoInviteCriteria.SearchQueries]: SearchQueries[];\n    [AutoInviteCriteria.ProfessionalRoles]: number[];\n    [AutoInviteCriteria.Areas]: number[];\n    [AutoInviteCriteria.Relocation]: string;\n    [AutoInviteCriteria.MetroStations]: string[];\n    [AutoInviteCriteria.Districts]: number[];\n    [AutoInviteCriteria.Salary]: { from: number; to: number; currencyCode: CurrencyType };\n    [AutoInviteCriteria.Experiences]: string[];\n    [AutoInviteCriteria.Skills]: number[];\n    [AutoInviteCriteria.EducationLevels]: EducationLevel[];\n    [AutoInviteCriteria.Universities]: number[];\n    [AutoInviteCriteria.Citizenships]: number[];\n    [AutoInviteCriteria.WorkTickets]: number[];\n    [AutoInviteCriteria.AgeInterval]: { from: number; to: number };\n    [AutoInviteCriteria.Gender]: Gender;\n    [AutoInviteCriteria.Employments]: string[];\n    [AutoInviteCriteria.Schedules]: string[];\n    [AutoInviteCriteria.DriverLicenseTypes]: DriverLicenseTypes[];\n    [AutoInviteCriteria.JobSearchStatuses]: string[];\n    [AutoInviteCriteria.Languages]: string[];\n    [AutoInviteCriteria.Exclusions]: ExclusionOption[];\n}\n\ninterface AutoInviteType {\n    filters: AutoInviteFilters;\n    scheduleInfo: ScheduleInfo;\n    topicStateInfo: TopicStateInfo;\n    vacancyId: number;\n    disableReason?: DisableReason;\n    disableTime?: number;\n}\n\nexport interface AutoInviteEnabledType extends AutoInviteType {\n    ruleCreationTime?: number;\n    ruleId?: number;\n    ruleLastModificationTime?: number;\n}\n\nexport default autoGeneratedReducer<AutoInviteEnabledType>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { ArticleTopic, ArticleType } from 'lux/models/articlePage/types';\nimport { Paging } from 'lux/models/paging.types';\n\nexport type BlogTopic = Omit<BlogRubric, 'topics'>;\n\nexport interface BlogRubric {\n    name: string;\n    code: string;\n    priority: number;\n    type: string | null;\n    // eslint-disable-next-line camelcase\n    visible_on: string[];\n    topics: BlogTopic[];\n}\n\nexport interface BlogArticleItemStatic {\n    title: string;\n    preview: string;\n    href: string;\n    label?: string;\n}\n\ninterface BlogArticleImage {\n    type: string;\n    url: string;\n    caption: string;\n}\n\nexport interface BlogDictionaryItem {\n    name: string;\n    code: ArticleTopic;\n}\n\nexport interface BlogArticle {\n    title: string;\n    titleWithHtml?: string;\n    code: string;\n    images?: BlogArticleImage[];\n    preview?: string;\n    announce?: string;\n    eventStartDate?: string;\n    eventEndDate?: string;\n    publicationDate: string;\n    articleType: ArticleType;\n    topics: BlogDictionaryItem[];\n}\n\nexport interface BlogArticleListLayout {\n    name: string;\n    layout?: Record<Breakpoint, string>;\n    articleListCapacity?: Record<Breakpoint, number>;\n    viewType: (typeof BlogArticleItemViewType)[keyof typeof BlogArticleItemViewType];\n}\n\ninterface BlogPage {\n    title: string;\n    rubrics: BlogRubric[];\n    rubric: string | null;\n    topic: string | null;\n    isBlogEnable: boolean;\n    articles: Record<string, BlogArticle[]>;\n    layout: BlogArticleListLayout[];\n    paging: Paging | null;\n    isDenseCategory: boolean;\n    isViewsCountEnabled: boolean;\n    data: {\n        [key: string]: unknown;\n        slider: {\n            items: BlogArticleItemStatic[];\n        };\n        promo: {\n            items: BlogArticleItemStatic[];\n        };\n    };\n}\n\nexport const BlogArticleItemViewType = {\n    Large: 'large',\n    Medium: 'medium',\n    Special: 'special',\n    Mini: 'mini',\n    Promo: 'promo',\n} as const;\n\nexport default autoGeneratedReducer<BlogPage>({\n    title: '',\n    rubrics: [],\n    rubric: null,\n    topic: null,\n    isBlogEnable: false,\n    articles: {\n        main: [],\n    },\n    paging: null,\n    layout: [],\n    isDenseCategory: false,\n    isViewsCountEnabled: false,\n    data: {\n        slider: {\n            items: [],\n        },\n        promo: {\n            items: [],\n        },\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { ResumeCommentsState } from 'lux/models/employer/resume/commentsByUser';\nimport { MessageItem } from 'lux/models/employer/resume/pinnedChatMessages';\nimport { ResumeCommentState } from 'lux/models/employer/resume/resumeComments';\nimport { ResponseCollection } from 'lux/models/employer/vacancyresponses/collections.types';\nimport { MicroFrontends } from 'lux/models/microFrontends';\nimport NegotiationTopic, { CommunicationFeedback } from 'lux/models/negotiationTopic.types';\nimport { Paging } from 'lux/models/paging.types';\nimport { ResumeComplaintState } from 'lux/models/resumesComplaint';\nimport { ResumesRelevantExperience } from 'lux/models/resumesRelevantExperience';\nimport { ResumeSearchResult } from 'lux/models/search/resume/resumeSearchResult';\nimport { SortingFilter } from 'lux/models/sortingFilters';\nimport { TopicCall } from 'lux/models/topicsCallHistory';\n\nconst MARK_TOPICS_AS_VIEWED = 'MARK_TOPICS_AS_VIEWED';\nconst DISCARD_CANDIDATES = 'DISCARD_CANDIDATES';\nconst INVITE_TO_VIDEOCALL = 'INVITE_TO_VIDEOCALL';\nconst SET_CANDIDATES_LIST = 'SET_CANDIDATES_LIST';\nconst REMOVE_INTERVIEW_REMIND = 'REMOVE_INTERVIEW_REMIND';\nconst SET_INTERVIEW_REMIND = 'SET_INTERVIEW_REMIND';\nconst SET_NOT_APPEARANCE_DATE = 'SET_NOT_APPEARANCE_DATE';\nconst SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC = 'SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC';\nconst MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC = 'MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC';\nconst MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC = 'MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC';\n\ntype TopicList = Record<string, NegotiationTopic>;\n\nexport interface Collection {\n    name: ResponseCollection;\n    resumesCount: { newOrUpdated: number; total: number };\n}\n\nexport enum ActionType {\n    ChangeTopic = 'CHANGE_TOPIC',\n    Invitation = 'INVITATION',\n    Discard = 'DISCARD',\n}\n\nexport enum FilterType {\n    OnlyNew = 'ONLY_NEW',\n    All = 'ALL',\n    Read = 'READ',\n    Unread = 'UNREAD',\n    Invitation = 'INVITATION',\n    Discard = 'DISCARD',\n    OnlyWithAssessments = 'ONLY_WITH_ASSESSMENTS',\n}\n\nexport interface CurrentInterview {\n    applicantWasNotified: boolean;\n    negotiationInterviewId: number;\n    scheduledTime: string;\n    topicId: number;\n}\n\nexport interface TopicNegotiationInterviewInfo {\n    allowedSchedulingParams: {\n        hoursUntilClosestScheduleTimeKnownToUser: number;\n        nearestAllowedScheduleTime: string;\n    };\n    currentInterview: CurrentInterview | null;\n}\n\nexport enum Advice {\n    NeedHowSaveHiddenResumes = 'needHowSaveHiddenResumes',\n}\n\nexport interface CandidatesListRequest {\n    queryParams: Record<string, unknown>;\n    response: {\n        candidatesList: CandidatesList;\n        resumeSearchResult: ResumeSearchResult;\n        resumesComplaint?: ResumeComplaintState;\n        commentsByUserId?: ResumeCommentsState;\n        resumeComments?: ResumeCommentState;\n        microFrontends?: MicroFrontends;\n        resumesRelevantExperience?: ResumesRelevantExperience;\n    };\n}\n\nexport enum ConnectedServiceTypes {\n    Clickme = 'CLICKME',\n    VacancyOfTheDay = 'VACANCY_OF_THE_DAY',\n    VacancyOfTheDayTurbo = 'VACANCY_OF_THE_DAY_TURBO',\n    ClickmeSearchAuction = 'CLICKME_SEARCH_AUCTION',\n}\n\nexport type ConnectedServiceList = Array<{ name: ConnectedServiceTypes; trl: string }>;\n\nexport interface ConnectedService {\n    connectedServiceList: ConnectedServiceList;\n    topicId: number;\n}\n\nexport enum TagName {\n    IncomingCall = 'INCOMING_CALL',\n    MissedCall = 'MISSED_CALL',\n    ResponseFromChat = 'RESPONSE_FROM_CHAT',\n    AutoSurveyInProgress = 'AUTO_SURVEY_IN_PROGRESS',\n    ResponseFromVr = 'RESPONSE_FROM_VR',\n    AutoInvite = 'AUTO_INVITE',\n    AwaitingReply = 'AWAITING_REPLY',\n}\n\nexport interface TagCallData {\n    creationTime: string;\n    minutes: number;\n    callId: string;\n}\n\nexport interface TagAwaitingReplyData {\n    durationMs: number;\n}\n\nexport type Tag =\n    | {\n          data: TagCallData;\n          type: TagName.IncomingCall | TagName.MissedCall;\n      }\n    | {\n          data: TagAwaitingReplyData;\n          type: TagName.AwaitingReply;\n      }\n    | {\n          data: undefined;\n          type: TagName.AutoInvite | TagName.AutoSurveyInProgress | TagName.ResponseFromChat;\n      };\n\nexport type FilterDistance = 500 | 1000 | 3000 | 5000 | 10000 | 15000;\n\nexport interface CandidatesList {\n    candidateTags: {\n        tagsByTopicIds: Record<string, { tags: Tag[] }>;\n    };\n    missedCalls: number;\n    filterDistance?: FilterDistance;\n    quickDiscardBatchUrl: string;\n    collections: Collection[];\n    workflowCollections: Collection[];\n    enteringCollections: Collection[];\n    visitorCollection: Collection;\n    collection: { name: ResponseCollection; actions: { type: ActionType }[]; filters: { type: FilterType }[] };\n    chatsByIds: {\n        chats: Record<string, { pinnedMessagesByChatId: MessageItem[] }>;\n    };\n    connectedServicesList?: Record<string, ConnectedService>;\n    prompts?: {\n        prompts: Array<{\n            additionalInfo: {\n                conversionPercent: number;\n                conversionPercentThreshold: number;\n                totalResponsesMinThreshold: number;\n                totalTopics: number;\n                type: string;\n                unprocessResponsesThreshold: number;\n                unprocessTopics: number;\n                viewCount: number;\n                marketFrom: number;\n                marketTo: number;\n                compensationFrom: number;\n                compensationTo: number;\n            };\n            advice: Advice[];\n        }>;\n    };\n    resumes: {\n        autoActionPassedCount: number;\n        autoActionFailedCount: number;\n        elementsJson: {\n            _attributes: { hash: string };\n            topicId: string;\n            quickDiscardUrl: string;\n            inviteUrl: string;\n            discardUrl: string;\n            considerUrl: string;\n            firstSourceResponse?: string;\n            testSolutionId?: string;\n            lastNonappearanceComplaintDate?: string;\n        }[];\n        notFound: number;\n        total: number;\n    };\n    videos?: { [userId: string]: string };\n    shortTopicList: {\n        untrustedEmployerRestrictionsApplied?: boolean;\n        topicList: TopicList;\n    };\n    topicsNegotiationInterviewInfo: {\n        topics: Record<string, TopicNegotiationInterviewInfo> | null;\n    };\n    paging: [number, null | Paging];\n    topicsCallHistory: Record<number, TopicCall>;\n    tests?: {\n        testSolutions: { uidPk: number; score: number }[];\n    };\n    totalResumesCount: number;\n    sortingFilters: SortingFilter[];\n}\n\ninterface PayloadTypes {\n    [REMOVE_INTERVIEW_REMIND]: { id: string };\n    [SET_INTERVIEW_REMIND]: { currentInterview: CurrentInterview };\n    [MARK_TOPICS_AS_VIEWED]: { topicIds: string[] };\n    [DISCARD_CANDIDATES]: { topicIds: string[] };\n    [SET_CANDIDATES_LIST]: { candidatesList: CandidatesList };\n    [INVITE_TO_VIDEOCALL]: { topicId: string };\n    [SET_NOT_APPEARANCE_DATE]: { resumeHash: string };\n    [SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC]: { topicId: string; communicationFeedback: CommunicationFeedback };\n    [MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC]: { topicId: string; shouldShownReminder: boolean };\n    [MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC]: { topicId: string };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setCandidatesList = ActionCreator(SET_CANDIDATES_LIST);\nexport const markTopicsAsViewed = ActionCreator(MARK_TOPICS_AS_VIEWED);\nexport const discardCandidates = ActionCreator(DISCARD_CANDIDATES);\nexport const removeInterviewRemind = ActionCreator(REMOVE_INTERVIEW_REMIND);\nexport const setInterviewRemind = ActionCreator(SET_INTERVIEW_REMIND);\nexport const inviteToVideocall = ActionCreator(INVITE_TO_VIDEOCALL);\nexport const setNotAppearanceDate = ActionCreator(SET_NOT_APPEARANCE_DATE);\nexport const setCommunicationFeedbackForCandidateTopic = ActionCreator(SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC);\nexport const markFeedbackAdviceAsSelectedForCandidateTopic = ActionCreator(\n    MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC\n);\nexport const markReminderAsShownForCandidateTopic = ActionCreator(MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC);\n\nconst getNewCollectionObject = (collection: Collection, newCount: number, moveCount: number) => {\n    const { newOrUpdated } = collection.resumesCount;\n\n    return {\n        ...collection,\n        resumesCount: {\n            newOrUpdated: newOrUpdated > 0 ? newOrUpdated - newCount : newOrUpdated,\n            total: collection.resumesCount.total - moveCount,\n        },\n    };\n};\n\ninterface GetNewCollectionParams {\n    collections: Collection[];\n    collectionNameFrom: ResponseCollection;\n    collectionNameTo?: ResponseCollection;\n    newCount: number;\n    moveCount?: number;\n}\n\nconst getNewCollection = ({\n    collections,\n    collectionNameFrom,\n    collectionNameTo = ResponseCollection.DiscardByEmployer,\n    newCount,\n    moveCount = 0,\n}: GetNewCollectionParams) => {\n    const collectionFromIndex = collections.findIndex(({ name }) => name === collectionNameFrom);\n    const collectionToIndex = moveCount > 0 ? collections.findIndex(({ name }) => name === collectionNameTo) : -1;\n    const responsesIndex =\n        collectionNameFrom === 'relevant_responses' ? collections.findIndex(({ name }) => name === 'response') : -1;\n\n    return Object.assign([], collections, {\n        ...(collectionFromIndex !== -1 && {\n            [collectionFromIndex]: getNewCollectionObject(collections[collectionFromIndex], newCount, moveCount),\n        }),\n        ...(responsesIndex !== -1 && {\n            [responsesIndex]: getNewCollectionObject(collections[responsesIndex], newCount, moveCount),\n        }),\n        ...(collectionToIndex !== -1 && {\n            [collectionToIndex]: getNewCollectionObject(collections[collectionToIndex], 0, -moveCount),\n        }),\n    });\n};\n\nconst getUpdatedTopicInterviewInfo = (state: CandidatesList, id: string | number, value: null | CurrentInterview) => {\n    if (!state.topicsNegotiationInterviewInfo.topics) {\n        return state;\n    }\n\n    return {\n        ...state,\n        topicsNegotiationInterviewInfo: {\n            ...state.topicsNegotiationInterviewInfo,\n            topics: {\n                ...state.topicsNegotiationInterviewInfo.topics,\n                [id]: {\n                    ...state.topicsNegotiationInterviewInfo.topics?.[id],\n                    currentInterview: value,\n                },\n            },\n        },\n    };\n};\n\nexport default createReducer<CandidatesList, PayloadTypes>(null, {\n    [MARK_TOPICS_AS_VIEWED]: (state, action) => {\n        const { topicIds } = action.payload;\n        let readCount = 0;\n        const readTopics = topicIds.reduce((acc: TopicList, topicId) => {\n            const currentTopic = state.shortTopicList.topicList[topicId];\n            if (currentTopic.hasNewMessages) {\n                readCount += 1;\n                acc[topicId] = { ...state.shortTopicList.topicList[topicId], hasNewMessages: false };\n            }\n            return acc;\n        }, {});\n\n        return {\n            ...state,\n            collections: getNewCollection({\n                collections: state.collections,\n                collectionNameFrom: state.collection.name,\n                newCount: readCount,\n            }),\n            workflowCollections: getNewCollection({\n                collections: state.workflowCollections,\n                collectionNameFrom: state.collection.name,\n                newCount: readCount,\n            }),\n            enteringCollections: getNewCollection({\n                collections: state.enteringCollections,\n                collectionNameFrom: state.collection.name,\n                newCount: readCount,\n            }),\n            shortTopicList: {\n                ...state.shortTopicList,\n                topicList: {\n                    ...state.shortTopicList.topicList,\n                    ...readTopics,\n                },\n            },\n        };\n    },\n    [DISCARD_CANDIDATES]: (state, action) => {\n        const { topicIds } = action.payload;\n        const newCount = topicIds.reduce((sum, topicId) => {\n            const currentTopic = state.shortTopicList.topicList[topicId];\n            if (currentTopic.hasNewMessages && currentTopic.lastState === 'RESPONSE') {\n                return sum + 1;\n            }\n            return sum;\n        }, 0);\n        const newList = state.resumes.elementsJson.filter((resume) => !topicIds.includes(resume.topicId));\n        return {\n            ...state,\n            collections: getNewCollection({\n                collections: state.collections,\n                collectionNameFrom: state.collection.name,\n                newCount,\n                moveCount: topicIds.length,\n            }),\n            workflowCollections: getNewCollection({\n                collections: state.workflowCollections,\n                collectionNameFrom: state.collection.name,\n                newCount,\n                moveCount: topicIds.length,\n            }),\n            enteringCollections: getNewCollection({\n                collections: state.enteringCollections,\n                collectionNameFrom: state.collection.name,\n                newCount,\n                moveCount: topicIds.length,\n            }),\n            resumes: {\n                ...state.resumes,\n                elementsJson: newList,\n            },\n        };\n    },\n    [SET_CANDIDATES_LIST]: (_, action) => action.payload.candidatesList,\n    [REMOVE_INTERVIEW_REMIND]: (state, action) => getUpdatedTopicInterviewInfo(state, action.payload.id, null),\n    [SET_INTERVIEW_REMIND]: (state, action) =>\n        getUpdatedTopicInterviewInfo(state, action.payload.currentInterview.topicId, action.payload.currentInterview),\n    [INVITE_TO_VIDEOCALL]: (state, action) => {\n        const { topicId } = action.payload;\n        if (state.collection.name === ResponseCollection.Interview) {\n            return state;\n        }\n        const newList = state.resumes.elementsJson.filter((resume) => topicId !== resume.topicId);\n        const currentTopic = state.shortTopicList.topicList[topicId];\n        return {\n            ...state,\n            collections: getNewCollection({\n                collections: state.collections,\n                collectionNameFrom: state.collection.name,\n                collectionNameTo: ResponseCollection.Interview,\n                newCount: currentTopic?.hasNewMessages && currentTopic.lastState === 'RESPONSE' ? 1 : 0,\n                moveCount: 1,\n            }),\n            workflowCollections: getNewCollection({\n                collections: state.workflowCollections,\n                collectionNameFrom: state.collection.name,\n                collectionNameTo: ResponseCollection.Interview,\n                newCount: currentTopic?.hasNewMessages && currentTopic.lastState === 'RESPONSE' ? 1 : 0,\n                moveCount: 1,\n            }),\n            enteringCollections: getNewCollection({\n                collections: state.enteringCollections,\n                collectionNameFrom: state.collection.name,\n                collectionNameTo: ResponseCollection.Interview,\n                newCount: currentTopic?.hasNewMessages && currentTopic.lastState === 'RESPONSE' ? 1 : 0,\n                moveCount: 1,\n            }),\n            resumes: {\n                ...state.resumes,\n                elementsJson: newList,\n            },\n        };\n    },\n    [SET_NOT_APPEARANCE_DATE]: (state, action) => {\n        const { resumeHash } = action.payload;\n\n        const newList = state.resumes.elementsJson.map((resume) =>\n            resumeHash === resume._attributes.hash\n                ? { ...resume, lastNonappearanceComplaintDate: new Date().toString() }\n                : resume\n        );\n        return {\n            ...state,\n            resumes: {\n                ...state.resumes,\n                elementsJson: newList,\n            },\n        };\n    },\n    [SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC]: (state, action) => {\n        const { topicId, communicationFeedback } = action.payload;\n        const topic = state.shortTopicList.topicList[topicId];\n\n        if (!topic) {\n            return state;\n        }\n\n        return {\n            ...state,\n            shortTopicList: {\n                ...state.shortTopicList,\n                topicList: {\n                    ...state.shortTopicList.topicList,\n                    [topicId]: {\n                        ...topic,\n                        communicationFeedback: { ...communicationFeedback },\n                    },\n                },\n            },\n        };\n    },\n    [MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC]: (state, action) => {\n        const { topicId, shouldShownReminder } = action.payload;\n        const topic = state.shortTopicList.topicList[topicId];\n        const communicationFeedback = topic?.communicationFeedback;\n\n        if (!(topic && communicationFeedback)) {\n            return state;\n        }\n\n        return {\n            ...state,\n            shortTopicList: {\n                ...state.shortTopicList,\n                topicList: {\n                    ...state.shortTopicList.topicList,\n                    [topicId]: {\n                        ...topic,\n                        communicationFeedback: {\n                            ...communicationFeedback,\n                            feedbackAdviceWasSelected: true,\n                            shouldShownReminder,\n                        },\n                    },\n                },\n            },\n        };\n    },\n    [MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC]: (state, action) => {\n        const { topicId } = action.payload;\n        const topic = state.shortTopicList.topicList[topicId];\n        const communicationFeedback = topic?.communicationFeedback;\n\n        if (!(topic && communicationFeedback)) {\n            return state;\n        }\n\n        return {\n            ...state,\n            shortTopicList: {\n                ...state.shortTopicList,\n                topicList: {\n                    ...state.shortTopicList.topicList,\n                    [topicId]: {\n                        ...topic,\n                        communicationFeedback: {\n                            ...communicationFeedback,\n                            shouldShownReminder: false,\n                        },\n                    },\n                },\n            },\n        };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { SocialView } from 'bloko/blocks/icon';\n\nimport { UserType } from 'lux/models/userType';\n\nexport enum ChatBotMessengerTypes {\n    Viber = 'viber',\n    Vk = 'vk',\n    Telegram = 'telegram',\n}\n\ninterface ChatBotMessenger {\n    type: ChatBotMessengerTypes;\n    icon: SocialView.Viber | SocialView.Vk | SocialView.Telegram;\n    href: string;\n}\n\nexport interface ChatBot {\n    messengers: ChatBotMessenger[];\n    page: string;\n    genericUserType: UserType.Anonymous | UserType.Applicant;\n    source: string;\n    href: string;\n}\n\nexport default autoGeneratedReducer<ChatBot>(null);\n","/* tempexp_25664_file */\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport { ClickmeProducts, ProductName } from 'lux/models/clickme/clickmeProducts';\n\nexport enum AutoCampaignCreationStatus {\n    Disabled = 'DISABLED',\n    NotCreated = 'NOT_CREATED',\n    CampaignDraftCreated = 'CAMPAIGN_DRAFT_CREATED',\n    CampaignCreated = 'CAMPAIGN_CREATED',\n}\n\nexport enum CampaignStatus {\n    Moderation = 'MODERATION',\n    ModerationFailed = 'MODERATION_FAILED',\n    Active = 'ACTIVE',\n    Blocked = 'BLOCKED',\n    CampaignLowBalance = 'CAMPAIGN_LOW_BALANCE',\n}\n\nexport enum AccountStatus {\n    AccountLowBalance = 'ACCOUNT_LOW_BALANCE',\n    AccountOkBalance = 'ACCOUNT_OK_BALANCE',\n}\n\nexport interface CampaignInfo {\n    campaignId: number;\n    campaignStatus: CampaignStatus;\n    accountStatus: AccountStatus;\n    budget: number;\n    vacancyId: number;\n    campaignBalance: number;\n}\n\nexport interface CampaignDraft {\n    autoCampaignDraftId: string;\n    purchaseUrl: string;\n    title: string;\n    text: string;\n    type: ProductName;\n}\n\nexport interface ClickmeAutoCampaignData {\n    campaignCreationStatus: AutoCampaignCreationStatus;\n    accountStatus: AccountStatus;\n    campaignInfo: CampaignInfo | null;\n    campaignDraft: CampaignDraft | null;\n    currency: CurrencyType;\n    vacancyId: number | null;\n    availableMoney: number;\n    hideClickmeBalance: boolean;\n    accountBalance: number;\n    minBudget: number;\n}\n\nexport interface AutoCampaignInfoFromVacancy {\n    vacancyId: number;\n    title: string;\n    text: string;\n    alreadyCreated: boolean;\n    availableProducts: ClickmeProducts;\n    type: ProductName;\n}\n\nconst SET_CLICKME_AUTO_CAMPAIGN_DATA = 'SET_CLICKME_AUTO_CAMPAIGN_DATA';\nconst SET_CLICKME_AUTO_CAMPAIGN_DRAFT = 'SET_CLICKME_AUTO_CAMPAIGN_DRAFT';\n\ninterface PayloadTypes {\n    [SET_CLICKME_AUTO_CAMPAIGN_DATA]: ClickmeAutoCampaignData;\n    [SET_CLICKME_AUTO_CAMPAIGN_DRAFT]: CampaignDraft;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setClickmeAutoCampaignData = actionCreator(SET_CLICKME_AUTO_CAMPAIGN_DATA);\nexport const setClickmeAutoCampaignDraft = actionCreator(SET_CLICKME_AUTO_CAMPAIGN_DRAFT);\n\ninterface InitialState {\n    autoCampaignInfoFromVacancy: AutoCampaignInfoFromVacancy | null;\n    clickmeAutoCampaignData: ClickmeAutoCampaignData;\n    vacancyPremoderateStatus: string | null;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    autoCampaignInfoFromVacancy: null,\n    clickmeAutoCampaignData: {\n        campaignCreationStatus: AutoCampaignCreationStatus.Disabled,\n        accountStatus: AccountStatus.AccountOkBalance,\n        campaignInfo: null,\n        campaignDraft: null,\n        currency: CurrencyType.RUR,\n        vacancyId: null,\n        availableMoney: 0,\n        hideClickmeBalance: true,\n        accountBalance: 0,\n        minBudget: 0,\n    },\n    vacancyPremoderateStatus: null,\n};\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [SET_CLICKME_AUTO_CAMPAIGN_DATA]: (state, { payload }) => ({\n        ...state,\n        clickmeAutoCampaignData: payload,\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_DRAFT]: (state, { payload }) => ({\n        ...state,\n        clickmeAutoCampaignData: {\n            ...state.clickmeAutoCampaignData,\n            campaignDraft: payload,\n        },\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { ClickmeProductType } from 'lux/models/price/product.types';\n\nconst SET_AVAILABLE_CLICKME_PRODUCTS_DATA = 'SET_AVAILABLE_CLICKME_PRODUCTS_DATA';\nconst SET_CLICKME_PRODUCTS_DATA_LOADING = 'SET_CLICKME_PRODUCTS_DATA_LOADING';\nconst SET_CLICKME_PRODUCTS_DATA_IS_LOADED = 'SET_CLICKME_PRODUCTS_DATA_IS_LOADED';\n\nexport const enum ProductName {\n    BASIC = 'BASIC',\n    STANDARD = 'STANDARD',\n    MAXIMUM = 'MAXIMUM',\n}\n\nexport interface Product {\n    type: ProductName | null;\n    productInfo: ClickmeProductType;\n}\n\ninterface ClickmeProduct {\n    available: boolean;\n    products: Product[] | null;\n}\n\nexport interface ClickmeProducts {\n    autoCampaign: ClickmeProduct;\n    clickmeReplenishment: ClickmeProduct;\n}\n\ninterface PayloadTypes {\n    [SET_AVAILABLE_CLICKME_PRODUCTS_DATA]: ClickmeProducts;\n    [SET_CLICKME_PRODUCTS_DATA_LOADING]: boolean;\n    [SET_CLICKME_PRODUCTS_DATA_IS_LOADED]: boolean;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setAvailableClickmeProductsData = ActionCreator(SET_AVAILABLE_CLICKME_PRODUCTS_DATA);\nexport const setClickmeProductsDataLoading = ActionCreator(SET_CLICKME_PRODUCTS_DATA_LOADING);\nexport const setClickmeProductsDataIsLoaded = ActionCreator(SET_CLICKME_PRODUCTS_DATA_IS_LOADED);\n\ninterface InitialState {\n    loading: boolean;\n    isLoaded: boolean;\n    availableProducts: ClickmeProducts;\n}\n\nexport const initialProducts = {\n    autoCampaign: { available: false, products: null },\n    clickmeReplenishment: { available: false, products: null },\n};\n\nexport const INITIAL_STATE: InitialState = {\n    loading: false,\n    isLoaded: false,\n    availableProducts: {\n        ...initialProducts,\n    },\n};\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [SET_AVAILABLE_CLICKME_PRODUCTS_DATA]: (state, { payload }) => ({\n        ...state,\n        availableProducts: payload,\n    }),\n    [SET_CLICKME_PRODUCTS_DATA_LOADING]: (state, { payload }) => ({\n        ...state,\n        loading: payload,\n    }),\n    [SET_CLICKME_PRODUCTS_DATA_IS_LOADED]: (state, { payload }) => ({\n        ...state,\n        isLoaded: payload,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { ClickmeProductType } from 'lux/models/price/product.types';\n\nimport { ProductName } from 'lux/models/clickme/clickmeProducts';\n\nexport enum ClickmeFieldName {\n    AutoCampaignChecked = 'publication.clickmeProducts.autoCampaignChecked',\n    ClickmeReplenishmentChecked = 'publication.clickmeProducts.clickmeReplenishmentChecked',\n}\n\nconst SET_CLICKME_AUTO_CAMPAIGN = 'SET_CLICKME_AUTO_CAMPAIGN';\nconst SET_CLICKME_AUTO_CAMPAIGN_FIELD = 'SET_CLICKME_AUTO_CAMPAIGN_FIELD';\nconst SET_CLICKME_PRODUCT_FOR_CART = 'SET_CLICKME_PRODUCT_FOR_CART';\nconst SET_CLICKME_AUTO_CAMPAIGN_LOADING = 'SET_CLICKME_AUTO_CAMPAIGN_LOADING';\nconst SET_CLICKME_AUTO_CAMPAIGN_ERROR = 'SET_CLICKME_AUTO_CAMPAIGN_ERROR';\nconst SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING = 'SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING';\nconst SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS = 'SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS';\nconst SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR = 'SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR';\n\nexport interface AutoCampaignInfo {\n    title: string;\n    text: string;\n    type: ProductName;\n    autoCampaignDraftId: number | null;\n}\n\nexport type SaveAutoCampaignInfoData = Omit<AutoCampaignInfo, 'autoCampaignDraftId'>;\n\nexport interface AutoCampaignResponse extends AutoCampaignInfo {\n    validationErrors?: AutoCampaignErrors;\n}\n\ninterface AutoCampaignField {\n    fieldName: keyof AutoCampaignInfo;\n    data: string | ProductName;\n}\n\ninterface PayloadTypes {\n    [SET_CLICKME_AUTO_CAMPAIGN]: AutoCampaignInfo | null;\n    [SET_CLICKME_AUTO_CAMPAIGN_FIELD]: AutoCampaignField;\n    [SET_CLICKME_PRODUCT_FOR_CART]: ClickmeProductType | null;\n    [SET_CLICKME_AUTO_CAMPAIGN_LOADING]: boolean;\n    [SET_CLICKME_AUTO_CAMPAIGN_ERROR]: boolean;\n    [SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING]: boolean;\n    [SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR]: boolean;\n    [SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS]: AutoCampaignErrors | null;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const setClickmeAutoCampaign = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN);\nexport const setClickmeAutoCampaignField = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_FIELD);\nexport const setClickmeAutoCampaignLoading = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_LOADING);\nexport const setClickmeAutoCampaignError = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_ERROR);\nexport const setClickmeProductForCart = ActionCreator(SET_CLICKME_PRODUCT_FOR_CART);\nexport const setSaveClickmeAutoCampaignLoading = ActionCreator(SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING);\nexport const setAutoCampaignValidationErrors = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS);\nexport const setSaveAutoCampaignError = ActionCreator(SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR);\n\nexport type AutoCampaignErrors = Partial<Record<keyof SaveAutoCampaignInfoData, string>>;\n\ninterface InitialState {\n    autoCampaignInfo: AutoCampaignInfo | null;\n    autoCampaignInfoError: boolean;\n    loading: boolean;\n    clickmeProductForCart: ClickmeProductType | null;\n    saveAutoCampaignLoading: boolean;\n    saveAutoCampaignValidationErrors: AutoCampaignErrors | null;\n    saveAutoCampaignError: boolean;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    autoCampaignInfo: null,\n    clickmeProductForCart: null,\n    loading: false,\n    saveAutoCampaignLoading: false,\n    saveAutoCampaignValidationErrors: null,\n    saveAutoCampaignError: false,\n    autoCampaignInfoError: false,\n};\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [SET_CLICKME_AUTO_CAMPAIGN]: (state, { payload }) => ({\n        ...state,\n        autoCampaignInfo: payload,\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_FIELD]: (state, { payload }) => ({\n        ...state,\n        autoCampaignInfo: {\n            ...(state.autoCampaignInfo as AutoCampaignInfo),\n            [payload.fieldName]: payload.data,\n        },\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_LOADING]: (state, { payload }) => ({\n        ...state,\n        loading: payload,\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_ERROR]: (state, { payload }) => ({\n        ...state,\n        autoCampaignInfoError: payload,\n    }),\n    [SET_CLICKME_PRODUCT_FOR_CART]: (state, { payload }) => ({\n        ...state,\n        clickmeProductForCart: payload,\n    }),\n    [SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING]: (state, { payload }) => ({\n        ...state,\n        saveAutoCampaignLoading: payload,\n    }),\n    [SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR]: (state, { payload }) => ({\n        ...state,\n        saveAutoCampaignError: payload,\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS]: (state, { payload }) => ({\n        ...state,\n        saveAutoCampaignValidationErrors: payload,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { ClickmeProductType } from 'lux/models/price/product.types';\n\nconst SET_CLICKME_AUTO_CAMPAIGN_INFO = 'SET_CLICKME_AUTO_CAMPAIGN_INFO';\nconst SET_CLICKME_AUTO_CAMPAIGN_CONFIG = 'SET_CLICKME_AUTO_CAMPAIGN_CONFIG';\n\nexport const enum SourceCode {\n    Hh = 'HH',\n    HhYandex = 'HH_YANDEX',\n    HhYandexSocial = 'HH_YANDEX_SOCIAL',\n}\n\nexport interface ClickmeUpgrades {\n    sourceCode: SourceCode;\n    purchase: {\n        products: ClickmeProductType[];\n    };\n}\n\ninterface InitClickmeAutoCampaign {\n    vacancyId: number;\n    title: string;\n    text: string;\n    alreadyCreated: boolean;\n    clickmeUpgrades: ClickmeUpgrades[];\n}\n\ninterface PayloadTypes {\n    [SET_CLICKME_AUTO_CAMPAIGN_INFO]: InitClickmeAutoCampaign;\n    [SET_CLICKME_AUTO_CAMPAIGN_CONFIG]: { isVisible: boolean; onClickBack: (() => void) | null };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setClickmeAutoCampaignInfo = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_INFO);\nexport const setClickmeAutoCampaignConfig = ActionCreator(SET_CLICKME_AUTO_CAMPAIGN_CONFIG);\n\ninterface InitialState {\n    initClickmeInfo: InitClickmeAutoCampaign | null;\n    isVisible: boolean;\n    onClickBack: (() => void) | null;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    isVisible: false,\n    initClickmeInfo: null,\n    onClickBack: null,\n};\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [SET_CLICKME_AUTO_CAMPAIGN_INFO]: (state, { payload }) => ({\n        ...state,\n        initClickmeInfo: payload,\n    }),\n    [SET_CLICKME_AUTO_CAMPAIGN_CONFIG]: (state, { payload }) => ({\n        ...state,\n        isVisible: payload.isVisible,\n        onClickBack: payload.onClickBack,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport const COMPLAINT_REASON_TYPES = 'COMPLAINT_REASON_TYPES';\n\nexport enum ComplaintReason {\n    AdInNegotiation = 'AD_IN_NEGOTIATION',\n    AdInResume = 'AD_IN_RESUME',\n    TooManyNegotiations = 'TOO_MANY_NEGOTIATIONS',\n    NoSenseNegotiation = 'NO_SENSE_NEGOTIATION',\n    Other = 'OTHER',\n}\n\nexport interface ComplaintReasonType {\n    needComment: boolean;\n    reasonType: ComplaintReason;\n}\n\nexport interface ComplaintReasonTypeDoggyStyle {\n    ['@needComment']: boolean;\n    ['@reasonType']: ComplaintReason;\n}\n\nexport type ComplaintReasonTypes = ComplaintReasonType[];\n\nexport const INITIAL_STATE: ComplaintReasonTypes = [];\n\ninterface PayloadTypes {\n    [COMPLAINT_REASON_TYPES]: ComplaintReasonTypeDoggyStyle[];\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const complaintReasonTypesAction = actionCreator(COMPLAINT_REASON_TYPES);\n\nexport default createReducer<ComplaintReasonTypes, PayloadTypes>(INITIAL_STATE, {\n    [COMPLAINT_REASON_TYPES]: (_, action) =>\n        action.payload?.map((type: ComplaintReasonTypeDoggyStyle) => {\n            return {\n                needComment: type['@needComment'],\n                reasonType: type['@reasonType'],\n            };\n        }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum CounterType {\n    DV360 = 'dv360',\n    RW = 'rw',\n}\n\nexport interface Counter {\n    id: number | string;\n    type?: CounterType;\n    uid?: number | string;\n}\n\nexport default autoGeneratedReducer<Record<string, Counter[]>>({});\n","export enum CurrencyType {\n    USD = 'USD',\n    AZN = 'AZN',\n    KZT = 'KZT',\n    UAH = 'UAH',\n    BYR = 'BYR',\n    RUR = 'RUR',\n    EUR = 'EUR',\n    KGS = 'KGS',\n    UZS = 'UZS',\n    GEL = 'GEL',\n}\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum DisplayType {\n    Desktop = 'DESKTOP',\n    Mobile = 'MOBILE',\n    Tablet = 'TABLET',\n}\n\nexport default autoGeneratedReducer<DisplayType>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CountryCode } from 'lux/models/countryId';\n\nconst EMPLOYER_INFO_SET_DESCRIPTION = 'EMPLOYER_INFO_SET_DESCRIPTION';\nconst EMPLOYER_INFO_DESCRIPTION_STATUS = 'EMPLOYER_INFO_DESCRIPTION_STATUS';\nconst EMPLOYER_INFO_SET_SITE = 'EMPLOYER_INFO_SET_SITE';\nconst EMPLOYER_INFO_SET_INDUSTRIES = 'EMPLOYER_INFO_SET_INDUSTRIES';\n\nexport enum Status {\n    Dirty = 'DIRTY',\n    Fetching = 'FETCHING',\n    Success = 'SUCCESS',\n    Fail = 'FAIL',\n}\n\nexport enum EmployerCategory {\n    Company = 'company',\n    Agency = 'agency',\n    PrivateRecruiter = 'private_recruiter',\n    ProjectDirector = 'project_director',\n    PrivateIndividual = 'private_individual',\n    SelfEmployed = 'self_employed',\n    Unknown = 'unknown',\n}\nexport interface Industries {\n    id: number;\n    trl: string;\n    items: number[];\n}\n\ninterface HrBrandData {\n    '@url'?: string;\n    '@year': string;\n}\n\ninterface HrBrand {\n    nominees?: HrBrandData;\n    winners?: HrBrandData;\n}\n\ninterface PreviousEmployerTarget {\n    activationTime: number;\n    id: number;\n    smsCount: number;\n}\n\ninterface InitialState {\n    accreditedITEmployer: boolean;\n    id: number | null;\n    name: string | null;\n    category: EmployerCategory | null;\n    address: string | null;\n    site: string | null;\n    industries: Industries[] | [];\n    hrBrand: HrBrand | null;\n    description: string | null;\n    saveDescriptionStatus: Status;\n    organizationFormId: number | null;\n    isTrusted: boolean;\n    canEditDescription: boolean;\n    hasUnsavedChanges: boolean;\n    employerCountryCode: CountryCode | string;\n    previousEmployerTargets: Array<PreviousEmployerTarget>;\n    itAccreditationBlocked: boolean;\n}\n\nexport const INITIAL_STATE: InitialState = {\n    accreditedITEmployer: false,\n    id: null,\n    name: null,\n    category: null,\n    address: null,\n    site: null,\n    industries: [],\n    hrBrand: null,\n    description: null,\n    saveDescriptionStatus: Status.Dirty,\n    organizationFormId: null,\n    isTrusted: false,\n    canEditDescription: false,\n    hasUnsavedChanges: false,\n    employerCountryCode: '',\n    previousEmployerTargets: [],\n    itAccreditationBlocked: false,\n};\n\ninterface PayloadTypes {\n    [EMPLOYER_INFO_SET_DESCRIPTION]: string;\n    [EMPLOYER_INFO_DESCRIPTION_STATUS]: Status;\n    [EMPLOYER_INFO_SET_SITE]: string;\n    [EMPLOYER_INFO_SET_INDUSTRIES]: Industries[];\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setDescription = ActionCreator(EMPLOYER_INFO_SET_DESCRIPTION);\nexport const setDescriptionStatus = ActionCreator(EMPLOYER_INFO_DESCRIPTION_STATUS);\nexport const setSite = ActionCreator(EMPLOYER_INFO_SET_SITE);\nexport const setIndustries = ActionCreator(EMPLOYER_INFO_SET_INDUSTRIES);\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [EMPLOYER_INFO_SET_DESCRIPTION]: (state, { payload }) => ({\n        ...state,\n        description: payload,\n        hasUnsavedChanges: true,\n    }),\n    [EMPLOYER_INFO_DESCRIPTION_STATUS]: (state, { payload }) => ({\n        ...state,\n        saveDescriptionStatus: payload,\n        hasUnsavedChanges: payload !== Status.Success,\n    }),\n    [EMPLOYER_INFO_SET_SITE]: (state, { payload }) => ({ ...state, site: payload }),\n    [EMPLOYER_INFO_SET_INDUSTRIES]: (state, { payload }) => ({ ...state, industries: payload }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst REMOVE_SAVED_SEARCH = 'REMOVE_SAVED_SEARCH';\n\ninterface BaseEntityWithTrl {\n    id: string;\n    text: string;\n}\n\ninterface SavedSearch {\n    id: string;\n    searchQuery: string;\n    searchCriteria?: {\n        area: BaseEntityWithTrl[];\n        employment: BaseEntityWithTrl[];\n        schedule: BaseEntityWithTrl[];\n    };\n    position?: number;\n    text: string;\n}\n\ninterface PayloadTypes {\n    [REMOVE_SAVED_SEARCH]: SavedSearch;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const removeSavedSearch = actionCreator(REMOVE_SAVED_SEARCH);\n\nexport default createReducer<SavedSearch[], PayloadTypes>([], {\n    [REMOVE_SAVED_SEARCH]: (state, { payload }) => state.filter((savedSearch) => savedSearch.id !== payload.id),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst EMPLOYER_LOGO_SET_LOGO_STATUS = 'EMPLOYER_LOGO_SET_STATUS';\nconst EMPLOYER_LOGO_SET_LOGO_URL = 'EMPLOYER_LOGO_SET_URL';\n\nexport enum Status {\n    Dirty = 'Dirty',\n    Fetching = 'Fetching',\n    Success = 'Success',\n    Fail = 'Fail',\n}\n\ninterface EmployerLogo {\n    logoUrl: string | null;\n    logoStatus: Status;\n}\n\nexport const INITIAL_STATE = {\n    logoUrl: null,\n    logoStatus: Status.Dirty,\n};\n\ninterface PayloadTypes {\n    [EMPLOYER_LOGO_SET_LOGO_STATUS]: Status;\n    [EMPLOYER_LOGO_SET_LOGO_URL]: string;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const setLogoUrl = actionCreator(EMPLOYER_LOGO_SET_LOGO_URL);\nexport const setLogoStatus = actionCreator(EMPLOYER_LOGO_SET_LOGO_STATUS);\n\nexport default createReducer<EmployerLogo, PayloadTypes>(INITIAL_STATE, {\n    [EMPLOYER_LOGO_SET_LOGO_STATUS]: (state, { payload }) => {\n        return { ...state, logoStatus: payload };\n    },\n    [EMPLOYER_LOGO_SET_LOGO_URL]: (state, { payload }) => {\n        return { ...state, logoUrl: payload };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CommentsOwner } from 'lux/components/ResumeComments/types';\n\nexport const ADD_COMMENT_TO_USER = 'ADD_COMMENT_TO_USER';\nexport const ADD_BATCH_COMMENTS_TO_USER = 'ADD_BATCH_COMMENTS_TO_USER';\n\nenum Action {\n    AddCommentToUser = 'ADD_COMMENT_TO_USER',\n    AddBatchCommentsToUser = 'ADD_BATCH_COMMENTS_TO_USER',\n    UpdateCommentsByUserId = 'UPDATE_COMMENTS_BY_USER_ID',\n}\n\nexport interface ResumeComments {\n    items: number[];\n    total: number;\n    maxOffset?: number;\n}\nexport type ResumeCommentsState = Record<string, ResumeComments>;\n\ninterface PayloadTypes {\n    [Action.AddCommentToUser]: { userId: CommentsOwner; commentId: number };\n    [Action.AddBatchCommentsToUser]: { userId: CommentsOwner; commentIds: number[]; total: number; maxOffset: number };\n    [Action.UpdateCommentsByUserId]: ResumeCommentsState;\n}\n\nconst actionCreatorHelper = ActionCreatorHelper<PayloadTypes>();\n\nexport const addCommentToUser = actionCreatorHelper(Action.AddCommentToUser);\nexport const addBatchCommentsToUser = actionCreatorHelper(Action.AddBatchCommentsToUser);\nexport const updateComments = actionCreatorHelper(Action.UpdateCommentsByUserId);\n\nconst INITIAL_STATE = {};\n\nconst getComments = (state: ResumeCommentsState, userId: CommentsOwner) => {\n    return (\n        state[userId] || {\n            items: [],\n            total: 0,\n        }\n    );\n};\n\nexport default createReducer<ResumeCommentsState, PayloadTypes>(INITIAL_STATE, {\n    [Action.AddCommentToUser]: (state, { payload: { userId, commentId } }) => {\n        const comments = getComments(state, userId);\n\n        return {\n            ...state,\n            [userId]: {\n                items: [...new Set([commentId, ...comments.items])],\n                total: comments.total + 1,\n            },\n        };\n    },\n    [Action.AddBatchCommentsToUser]: (state, { payload: { userId, commentIds, total, maxOffset } }) => {\n        const comments = getComments(state, userId);\n\n        return {\n            ...state,\n            [userId]: {\n                items: [...new Set([...comments.items, ...commentIds])],\n                total,\n                maxOffset,\n            },\n        };\n    },\n    [Action.UpdateCommentsByUserId]: (state, { payload }) => ({\n        ...state,\n        ...payload,\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum UserType {\n    EmployerUser = 'EMPLOYER_USER',\n    ApplicantUser = 'APPLICANT_USER',\n}\n\nexport interface Participant {\n    id: number;\n    externalId: string;\n    type: UserType;\n    isCurrentUser: boolean;\n    display: { name: string };\n}\n\nexport interface MessageItem {\n    id: number;\n    participant: Participant;\n    text: string;\n    creationTime: string;\n    lastViewedByApplicant?: boolean;\n    viewed?: boolean;\n}\n\nexport interface Messages {\n    hasMore: boolean;\n    items: MessageItem[];\n}\n\nexport interface GroupedMessages {\n    participantType: UserType;\n    messages: MessageItem[];\n}\n\nexport default autoGeneratedReducer<Messages>({\n    hasMore: false,\n    items: [],\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CommentsOwner } from 'lux/components/ResumeComments/types';\n\nexport interface ResumeComment {\n    id: number;\n    body: string;\n    accessType: string;\n    userName: string;\n    creationTime: number;\n    editable: boolean;\n    markDelete?: boolean;\n    complaintType?: null;\n    creationDate?: number;\n    creationTimeDetails?: {\n        day: string;\n        hour: string;\n        minute: string;\n        month: string;\n        year: string;\n    };\n    userId?: CommentsOwner;\n}\n\nexport interface ResumeCommentsList {\n    data: ResumeComment[];\n    maxOffset: number;\n    total: number;\n    ts: number;\n}\n\nexport enum Action {\n    Fetching = 'resumeComments/Fetching',\n    Fetched = 'resumeComments/Fetched',\n    Prepend = 'resumeComments/prepend',\n    AddComments = 'resumeComments/addComments',\n    Edit = 'resumeComments/edit',\n    Clear = 'resumeComments/clear',\n    MarkDelete = 'resumeComments/markDelete',\n}\n\nexport enum Status {\n    Initial = 'INITIAL',\n    Fetching = 'FETCHING',\n    Complete = 'COMPLETE',\n    Dirty = 'DIRTY',\n}\n\nexport interface ResumeCommentState {\n    items: Record<number, ResumeComment>;\n    status: Status;\n    total?: number;\n    maxOffset?: number;\n}\n\ninterface PayloadTypes {\n    [Action.Fetching]: void;\n    [Action.Fetched]: { data: ResumeComment[] } | void;\n    [Action.Prepend]: ResumeComment;\n    [Action.AddComments]: { items: Record<number, ResumeComment> };\n    [Action.Edit]: ResumeComment;\n    [Action.Clear]: void;\n    [Action.MarkDelete]: { isDelete: boolean; id: number };\n}\n\nconst actionCreatorHelper = ActionCreatorHelper<PayloadTypes>();\n\nexport const startFetch = actionCreatorHelper(Action.Fetching);\nexport const loadComments = actionCreatorHelper(Action.Fetched);\nexport const addComment = actionCreatorHelper(Action.Prepend);\nexport const addComments = actionCreatorHelper(Action.AddComments);\nexport const editComment = actionCreatorHelper(Action.Edit);\nexport const markDeleteComment = actionCreatorHelper(Action.MarkDelete);\nexport const clearComments = actionCreatorHelper(Action.Clear);\n\nconst INITIAL_STATE = {\n    status: Status.Initial,\n    items: {},\n};\n\nexport default createReducer<ResumeCommentState, PayloadTypes>(INITIAL_STATE, {\n    [Action.Fetching]: (state) => ({\n        ...state,\n        status: Status.Fetching,\n    }),\n    [Action.Fetched]: (state, action) => {\n        const resumeComments = action.payload?.data || [];\n\n        return {\n            ...state,\n            items: {\n                ...state.items,\n                ...resumeComments.reduce((result, item) => {\n                    result[item.id] = item;\n                    return result;\n                }, {} as Record<number, ResumeComment>),\n            },\n            status: Status.Complete,\n        };\n    },\n    [Action.Clear]: () => ({ ...INITIAL_STATE }),\n    [Action.Prepend]: (state, action) => ({\n        ...state,\n        items: {\n            ...state.items,\n            [action.payload.id]: action.payload,\n        },\n    }),\n    [Action.AddComments]: (state, action) => ({\n        ...state,\n        items: {\n            ...state.items,\n            ...action.payload.items,\n        },\n    }),\n    [Action.Edit]: (state, action) => ({\n        ...state,\n        items: {\n            ...state.items,\n            [action.payload.id]: action.payload,\n        },\n    }),\n    [Action.MarkDelete]: (state, action) =>\n        state.items\n            ? {\n                  ...state,\n                  items: {\n                      ...state.items,\n                      [action.payload.id]: {\n                          ...state.items[action.payload.id],\n                          markDelete: action.payload.isDelete,\n                      },\n                  },\n              }\n            : { ...state, items: {} },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ChangeAuthor {\n    userId: number;\n    fullName: string;\n}\n\nexport interface Division {\n    divisionId: number;\n    divisionName: string;\n}\n\nexport enum ChangeType {\n    DivisionAdded = 'DIVISION_ADDED',\n    DivisionRemoved = 'DIVISION_REMOVED',\n    ManagerAdded = 'MANAGER_ADDED',\n    ManagerRemoved = 'MANAGER_REMOVED',\n    ServiceAdded = 'SERVICE_ADDED',\n    ServiceRemoved = 'SERVICE_REMOVED',\n    DivisionNameSet = 'DIVISION_NAME_SET',\n    DivisionQuotaChanged = 'DIVISION_QUOTA_CHANGED',\n}\n\nexport interface DivisionManager {\n    managerFullName: string;\n    managerId: number;\n}\n\nexport interface DivisionService {\n    serviceId: number;\n    serviceCode: string;\n}\n\nexport interface DivisionQuotaChange {\n    service: DivisionService;\n    previousValue?: number;\n    currentValue?: number;\n}\n\nexport interface DivisionChange {\n    name?: string;\n    manager?: DivisionManager;\n    service?: DivisionService;\n    quota?: DivisionQuotaChange;\n}\n\nexport interface DivisionChangeRow {\n    changeTimeIso: string;\n    author: ChangeAuthor;\n    division: Division;\n    changeType: ChangeType;\n    change: DivisionChange;\n}\n\nexport interface DivisionsChangelog {\n    changes: DivisionChangeRow[];\n}\n\nexport default autoGeneratedReducer<DivisionsChangelog>({\n    changes: [],\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst ADD_CHECKED_TOPIC = 'ADD_CHECKED_TOPIC';\nconst REMOVE_CHECKED_TOPIC = 'REMOVE_CHECKED_TOPIC';\nconst SET_CHECKED_TOPICS = 'SET_CHECKED_TOPICS';\n\ninterface PayloadTypes {\n    [SET_CHECKED_TOPICS]: string[];\n    [ADD_CHECKED_TOPIC]: string;\n    [REMOVE_CHECKED_TOPIC]: string[];\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setCheckedTopics = ActionCreator(SET_CHECKED_TOPICS);\nexport const addCheckedTopic = ActionCreator(ADD_CHECKED_TOPIC);\nexport const removeCheckedTopic = ActionCreator(REMOVE_CHECKED_TOPIC);\n\nexport default createReducer<string[], PayloadTypes>([], {\n    [SET_CHECKED_TOPICS]: (state, { payload }) => payload,\n    [ADD_CHECKED_TOPIC]: (state, { payload }) => [...state, payload],\n    [REMOVE_CHECKED_TOPIC]: (state, { payload }) => state.filter((id) => !payload.includes(id)),\n});\n","export enum ResponseCollection {\n    RelevantResponses = 'relevant_responses',\n    Response = 'response',\n    PhoneInterview = 'phone_interview',\n    PhoneCalls = 'phone_calls',\n    Assessment = 'assessment',\n    Interview = 'interview',\n    Offer = 'offer',\n    Hired = 'hired',\n    DiscardByEmployer = 'discard_by_employer',\n    Consider = 'consider',\n    VacancyVisitors = 'vacancy_visitors',\n    ByLocation = 'by_location',\n}\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { EmployerAddress } from 'lux/models/employerAddresses.types';\n\ninterface EmployerAddressesPageState {\n    addresses: EmployerAddress[];\n    addressesCount: number;\n    isFetching: boolean;\n    loadingComponent: string;\n}\n\nexport const CHANGE_ADDRESSES_LOADING_STATUS = 'CHANGE_ADDRESSES_LOADING_STATUS';\nexport const CHANGE_ADDRESSES_LIST = 'CHANGE_ADDRESSES_LIST';\nexport const CHANGE_ADDRESSES_COUNT = 'CHANGE_ADDRESSES_COUNT';\n\ninterface PayloadTypes {\n    [CHANGE_ADDRESSES_LOADING_STATUS]: {\n        isFetching: boolean;\n        loadingComponent: 'search' | 'city' | 'address' | 'manager' | '';\n    };\n    [CHANGE_ADDRESSES_LIST]: EmployerAddress[];\n    [CHANGE_ADDRESSES_COUNT]: number;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const changeAddressesLoadingStatus = ActionCreator(CHANGE_ADDRESSES_LOADING_STATUS);\nexport const changeAddressesList = ActionCreator(CHANGE_ADDRESSES_LIST);\nexport const changeAddressesCount = ActionCreator(CHANGE_ADDRESSES_COUNT);\n\nconst initialState: EmployerAddressesPageState = {\n    addresses: [],\n    addressesCount: 0,\n    isFetching: false,\n    loadingComponent: '',\n};\n\nexport default createReducer<EmployerAddressesPageState, PayloadTypes>(initialState, {\n    [CHANGE_ADDRESSES_LOADING_STATUS]: (state, action) => ({\n        ...state,\n        isFetching: action.payload.isFetching,\n        loadingComponent: action.payload.loadingComponent,\n    }),\n    [CHANGE_ADDRESSES_LIST]: (state, action) => ({\n        ...state,\n        addresses: action.payload,\n    }),\n    [CHANGE_ADDRESSES_COUNT]: (state, action) => ({\n        ...state,\n        addressesCount: action.payload,\n    }),\n});\n","import createReducer from '@hh.ru/redux-create-reducer';\n\nimport { EmployerAutomationVacancies } from 'lux/models/employerAutomation';\n\nconst UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES = 'UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES';\n\ninterface UpdateEmployerAutomationVacanciesAction {\n    type: typeof UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES;\n    payload: EmployerAutomationVacancies;\n}\ninterface PayloadTypes {\n    [UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES]: EmployerAutomationVacancies;\n}\n\nexport const updateEmployerAutoActionVacancies = (\n    newEmployerAutomationVacanciesData: EmployerAutomationVacancies\n): UpdateEmployerAutomationVacanciesAction => ({\n    type: UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES,\n    payload: newEmployerAutomationVacanciesData,\n});\n\nexport default createReducer<EmployerAutomationVacancies, PayloadTypes>(null, {\n    [UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n});\n","import createReducer from '@hh.ru/redux-create-reducer';\n\nimport { EmployerAutomationVacancies } from 'lux/models/employerAutomation/index';\n\nconst UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES = 'UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES';\n\ninterface UpdateEmployerAutomationVacanciesAction {\n    type: typeof UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES;\n    payload: EmployerAutomationVacancies;\n}\ninterface PayloadTypes {\n    [UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES]: EmployerAutomationVacancies;\n}\n\nexport const updateEmployerAutoInviteVacancies = (\n    newEmployerAutomationVacanciesData: EmployerAutomationVacancies\n): UpdateEmployerAutomationVacanciesAction => ({\n    type: UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES,\n    payload: newEmployerAutomationVacanciesData,\n});\n\nexport default createReducer<EmployerAutomationVacancies, PayloadTypes>(null, {\n    [UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst SET_EMPLOYER_BUTTON = 'SET_EMPLOYER_BUTTON';\n\ninterface EmployerButtons {\n    saveSearch?: {\n        emailRequired: boolean;\n        count: number;\n        userEmail: string;\n    };\n    workHere?: boolean;\n    complain?: {\n        success: boolean;\n    };\n}\n\nexport type EmployerButtonsState = EmployerButtons;\n\ninterface PayloadTypes {\n    [SET_EMPLOYER_BUTTON]: EmployerButtonsState;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setEmployerButton = actionCreator(SET_EMPLOYER_BUTTON);\n\nexport default createReducer<EmployerButtonsState, PayloadTypes>(\n    {},\n    {\n        [SET_EMPLOYER_BUTTON]: (state, { payload }) => ({ ...state, ...payload }),\n    }\n);\n","import createReducer from '@hh.ru/redux-create-reducer';\n\nimport { BillType } from 'lux/models/billType';\nimport CartStatus from 'lux/models/cartStatus';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { PaymentType } from 'lux/models/paymentType';\n\nexport enum ServiceActivationType {\n    Manual = 'MANUAL_ACTIVATION',\n    Auto = 'AUTO_ACTIVATION',\n}\n\nexport interface Service {\n    // Будет string, ждем бек\n    areaIds: (string | number)[];\n    code: string;\n    name: string;\n    period: number;\n    // Будет string, ждем бек\n    profRoleGroupIds?: (string | number)[];\n    activationTime?: string;\n    currentActivationType?: ServiceActivationType;\n}\n\nexport interface DeferredCart {\n    agreementName: string;\n    agreementNumber: string;\n    billFilePdfUrl?: string;\n    billUid?: string;\n    blockedAmount: number;\n    cartId: string;\n    cost: number;\n    creationTime: number;\n    currency: CurrencyType;\n    payerName: string;\n    service: Service[];\n    status: CartStatus;\n    billId: number;\n    paymentType: PaymentType;\n    billType: BillType;\n    isAssistLinkAvailable: boolean;\n}\n\nexport enum EmployerCartsNotificationKind {\n    Activate = 'Activate',\n    Purchase = 'Purchase',\n}\n\ninterface EmployerCartsState {\n    selectedCartId?: string;\n    canBuyProducts: boolean;\n    carts: DeferredCart[];\n    employerId: string;\n    notificationInfo: {\n        enabled: boolean;\n        expirationDate?: string;\n        kind?: EmployerCartsNotificationKind;\n    };\n}\n\ntype EmployerCartsPartialType = Partial<EmployerCartsState>;\n\ninterface UpdateEmployerCartsAction {\n    type: typeof UPDATE_EMPLOYER_CARTS_DATA;\n    payload: EmployerCartsPartialType;\n}\n\nconst UPDATE_EMPLOYER_CARTS_DATA = 'UPDATE_EMPLOYER_CARTS_DATA';\n\ninterface PayloadTypes {\n    [UPDATE_EMPLOYER_CARTS_DATA]: EmployerCartsPartialType;\n}\n\nexport const updateEmployerCarts = (newEmployerCartsData: EmployerCartsPartialType): UpdateEmployerCartsAction => ({\n    type: UPDATE_EMPLOYER_CARTS_DATA,\n    payload: newEmployerCartsData,\n});\n\nexport default createReducer<EmployerCartsState, PayloadTypes>(null, {\n    [UPDATE_EMPLOYER_CARTS_DATA]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum EmployerCategoryCode {\n    Company = 'COMPANY',\n    ProjectDirector = 'PROJECT_DIRECTOR',\n    PrivateIndividual = 'PRIVATE_INDIVIDUAL',\n    SelfEmployed = 'SELF_EMPLOYED',\n    PrivateRecruiter = 'PRIVATE_RECRUITER',\n    Agency = 'AGENCY',\n}\n\ninterface EmployerCategory {\n    code: EmployerCategoryCode;\n    value: number;\n    translationKey?: string;\n    translation: string;\n}\n\ntype EmployerCategories = EmployerCategory[];\n\nexport default autoGeneratedReducer<EmployerCategories>([]);\n","import { AnyAction } from 'redux';\n\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst EMPLOYER_CONSTRUCTOR_FETCH = 'EMPLOYER_CONSTRUCTOR_FETCH';\nconst EMPLOYER_CONSTRUCTOR_SET_SAVED = 'EMPLOYER_CONSTRUCTOR_SET_SAVED';\nconst EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE = 'EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE';\nconst EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING = 'EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING';\nconst EMPLOYER_CONSTRUCTOR_SET_STATUS = 'EMPLOYER_CONSTRUCTOR_SET_STATUS';\nconst EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER = 'EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER';\n\nconst EMPLOYER_CONSTRUCTOR_ADD_IMAGE = 'EMPLOYER_CONSTRUCTOR_ADD_IMAGE';\nconst EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE = 'EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE';\nconst EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR = 'EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR';\n\nconst EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET = 'EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET';\nconst EMPLOYER_CONSTRUCTOR_ADD_WIDGET = 'EMPLOYER_CONSTRUCTOR_ADD_WIDGET';\nconst EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET = 'EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET';\nconst EMPLOYER_CONSTRUCTOR_UPDATE_HEADER = 'EMPLOYER_CONSTRUCTOR_UPDATE_HEADER';\n\nconst EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR = 'EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR';\nconst EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR = 'EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR';\n\nconst EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR = 'EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR';\n\nexport enum Status {\n    Dirty = 'DIRTY',\n    Fetching = 'FETCHING',\n    Success = 'SUCCESS',\n    Fail = 'FAIL',\n}\n\nexport const PICTURE_RESIZE_MAX_TRIES = 20;\n\nexport interface EmployerConstructorWidget {\n    id: number;\n    type?: string;\n    url?: string;\n}\n\nexport interface EmployerConstructorImage {\n    originalWidth: number;\n    originalHeight: number;\n    originalPath: string;\n    pictureId: number;\n}\n\nexport interface EmployerConstructorState {\n    editMode: boolean;\n    previewModeWithBranding: boolean;\n    version: number | null;\n    canEdit: boolean;\n    modalError: string | null;\n    widgets: EmployerConstructorWidget[];\n    widgetsOrder: number[];\n    saveStatus: Status | null;\n    hasUnsavedChanges: boolean;\n    pictureId: number | null;\n    resizeStatus: Status | null;\n    images: EmployerConstructorImage[];\n    tabPrices: Record<string, unknown>[];\n    hasConstructor: boolean;\n    hasService: boolean;\n    readyToActivateCartId: number | null;\n    sidebarColors: Record<string, string>;\n    hasServiceExpiration?: boolean;\n}\n\nconst INITIAL_STATE = {\n    editMode: false,\n    previewModeWithBranding: true,\n    version: null,\n    canEdit: false,\n    modalError: null,\n    widgets: [],\n    widgetsOrder: [],\n    saveStatus: Status.Dirty,\n    hasUnsavedChanges: false,\n    pictureId: null,\n    resizeStatus: Status.Dirty,\n    images: [],\n    tabPrices: [],\n    hasConstructor: false,\n    hasService: false,\n    readyToActivateCartId: null,\n    sidebarColors: {},\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const employerConstructorFetch = actionCreator(EMPLOYER_CONSTRUCTOR_FETCH);\nexport const setEditMode = actionCreator(EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE);\nexport const setPreviewModeWithBranding = actionCreator(EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING);\nexport const setConstructorStatus = actionCreator(EMPLOYER_CONSTRUCTOR_SET_STATUS);\nexport const employerConstructorUpdateWidgetsOrder = actionCreator(EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER);\nexport const employerConstructorModifyWidget = actionCreator(EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET);\nexport const employerConstructorAddWidget = actionCreator(EMPLOYER_CONSTRUCTOR_ADD_WIDGET);\nexport const employerConstructorRemoveWidget = actionCreator(EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET);\nexport const employerConstructorUpdateHeader = actionCreator(EMPLOYER_CONSTRUCTOR_UPDATE_HEADER);\nexport const employerConstructorSetSaved = actionCreator(EMPLOYER_CONSTRUCTOR_SET_SAVED);\nexport const employerConstructorAddImage = actionCreator(EMPLOYER_CONSTRUCTOR_ADD_IMAGE);\nexport const employerConstructorModifyImage = actionCreator(EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE);\nexport const setModalError = actionCreator(EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR);\nexport const setSaveDescriptionErrorType = actionCreator(EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR);\nexport const resetSaveDescriptionErrorType = actionCreator(EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR);\nexport const setSidebarColor = actionCreator(EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR);\n\ninterface SwitchImagesActionWrapperParams {\n    (params: { payload: EmployerConstructorWidget; widgetId: number }): AnyAction;\n    (params: { payload: Partial<EmployerConstructorState>; widgetId: undefined }): AnyAction;\n}\n\nexport const switchImagesActionWrapper: SwitchImagesActionWrapperParams = (params) => {\n    if (params.widgetId === undefined) {\n        return employerConstructorUpdateHeader(params.payload);\n    }\n    return employerConstructorModifyWidget({\n        ...params.payload,\n        id: params.widgetId,\n    });\n};\n\ninterface PayloadTypes {\n    [EMPLOYER_CONSTRUCTOR_FETCH]: EmployerConstructorState;\n    [EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE]: boolean;\n    [EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING]: boolean;\n    [EMPLOYER_CONSTRUCTOR_SET_STATUS]: Status;\n    [EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER]: number[];\n    [EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET]: EmployerConstructorWidget;\n    [EMPLOYER_CONSTRUCTOR_ADD_WIDGET]: EmployerConstructorWidget;\n    [EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET]: number;\n    [EMPLOYER_CONSTRUCTOR_UPDATE_HEADER]: Partial<EmployerConstructorState>;\n    [EMPLOYER_CONSTRUCTOR_SET_SAVED]: void;\n    [EMPLOYER_CONSTRUCTOR_ADD_IMAGE]: EmployerConstructorImage;\n    [EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE]: EmployerConstructorImage;\n    [EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR]: string;\n    [EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR]: string;\n    [EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR]: void;\n    [EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR]: { name: string; color: string };\n}\n\nexport default createReducer<EmployerConstructorState, PayloadTypes>(INITIAL_STATE, {\n    [EMPLOYER_CONSTRUCTOR_FETCH]: (state, { payload }) => ({ ...state, ...payload }),\n    [EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE]: (state, { payload }) => {\n        if (!state.previewModeWithBranding) {\n            return { ...state, editMode: payload, previewModeWithBranding: true };\n        }\n        return { ...state, editMode: payload };\n    },\n    [EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING]: (state, { payload }) => ({\n        ...state,\n        previewModeWithBranding: payload,\n    }),\n    [EMPLOYER_CONSTRUCTOR_SET_STATUS]: (state, { payload }) => ({ ...state, saveStatus: payload }),\n    [EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER]: (state, { payload }) => {\n        return {\n            ...state,\n            widgetsOrder: payload,\n            hasUnsavedChanges: true,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET]: (state, { payload }) => {\n        return {\n            ...state,\n            widgets: state.widgets.map((widget) => (widget.id === payload.id ? { ...widget, ...payload } : widget)),\n            hasUnsavedChanges: true,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_ADD_WIDGET]: (state, { payload }) => {\n        return {\n            ...state,\n            widgets: [...state.widgets, { ...payload }],\n            hasUnsavedChanges: true,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET]: (state, { payload }) => {\n        return {\n            ...state,\n            widgets: state.widgets.filter((widget) => widget.id !== payload),\n            hasUnsavedChanges: true,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_UPDATE_HEADER]: (state, { payload }) => {\n        return {\n            ...state,\n            ...payload,\n            hasUnsavedChanges: true,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_SET_SAVED]: (state) => {\n        return {\n            ...state,\n            hasUnsavedChanges: false,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_ADD_IMAGE]: (state, { payload }) => {\n        return {\n            ...state,\n            images: [...state.images, payload],\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE]: (state, { payload }) => {\n        return {\n            ...state,\n            images: state.images.map((image) =>\n                image.pictureId === payload.pictureId ? { ...image, ...payload } : image\n            ),\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR]: (state, { payload }) => {\n        return {\n            ...state,\n            modalError: payload,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR]: (state, { payload }) => {\n        return {\n            ...state,\n            saveDescriptionErrorType: payload,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR]: (state) => {\n        return {\n            ...state,\n            saveDescriptionErrorType: null,\n        };\n    },\n    [EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR]: (state, { payload }) => {\n        return {\n            ...state,\n            sidebarColors: {\n                ...state.sidebarColors,\n                [payload.name]: payload.color,\n            },\n        };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum PictureType {\n    GalleryWidget = 'GALLERY_WIDGET',\n    PictureWidget = 'PICTURE_WIDGET',\n    EmployerPageBackground = 'EMPLOYER_PAGE_BACKGROUND',\n}\n\ninterface PictureSettings {\n    minWidth: number;\n    minHeight: number;\n    maxWidth: number;\n    maxHeight: number;\n    maxSizeBytes: number;\n    widthHeightRatio: number;\n    allowedMimeTypes: string;\n}\n\ninterface EmployerConstructorSettings {\n    pictureSettings: Partial<Record<PictureType, PictureSettings>>;\n}\n\nexport default autoGeneratedReducer<EmployerConstructorSettings>({ pictureSettings: {} });\n","import { Dispatch } from 'react';\nimport { DefaultRootState } from 'react-redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { Action, autoGeneratedReducer, makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nexport enum VisibilityReason {\n    BoughtResume = 'BOUGHT_RESUME',\n    Topic = 'TOPIC',\n    ResumeGift = 'RESUME_GIFT',\n}\n\nexport interface ResumeFields {\n    resumeId: string;\n    resumeHash: string;\n    userId: string;\n    title: string;\n}\n\nexport interface VacancyFields {\n    vacancyId: string;\n    name: string;\n}\nexport interface ResumeVisibility {\n    resumeId: string;\n    contactsVisible: boolean;\n    contactsVisibilityReasons: VisibilityReason[];\n    contactsVisibilityHistory: {\n        [VisibilityReason.BoughtResume]: BoughtResumeHistoryItem[];\n        [VisibilityReason.Topic]: TopicHistoryItem[];\n        [VisibilityReason.ResumeGift]: ResumeGiftHistoryItem[];\n    };\n}\n\ninterface ContactsVisibilityHistory {\n    applicantUserId: string | null;\n    requestedResume: ResumeVisibility | null;\n    otherResumes: ResumeVisibility[];\n    resumeById: Record<string, ResumeFields>;\n    vacancyById: Record<string, VacancyFields>;\n}\n\nexport interface BoughtResumeHistoryItem {\n    applicantUserId: string;\n    creationTime: string;\n    expirationTime: string;\n    service: {\n        serviceId: string;\n        activationTime: string;\n        expirationTime: string;\n        title: string;\n    };\n    contactsVisible: boolean;\n}\n\nexport enum TopicState {\n    Response = 'RESPONSE',\n    Invitation = 'INVITATION',\n}\n\nexport interface TopicHistoryItem {\n    topicId: string;\n    resumeId: string;\n    vacancyId: string;\n    initialState: TopicState;\n    creationTime: string;\n    contactsVisible: boolean;\n}\n\nexport interface ResumeGiftHistoryItem {\n    resumeGiftId: string;\n    resumeId: string;\n    vacancyId: string;\n    creationTime: string;\n    expirationTime: string | null;\n    contactsVisible: boolean;\n}\n\nexport enum ErrorReason {\n    UnknownError = 'UNKNOWN_ERROR',\n    ResumeHasWrongStatus = 'RESUME_HAS_WRONG_STATUS',\n    ResumeIsNotListed = 'RESUME_IS_NOT_LISTED',\n    ResumeIsNotFound = 'RESUME_IS_NOT_FOUND',\n    MissingEmployerId = 'MISSING_EMPLOYER_ID',\n    EmployerIsNotFound = 'EMPLOYER_IS_NOT_FOUND',\n}\n\nexport interface ContactsVisibility {\n    request: {\n        employerId?: string;\n        employerIdFromResumeHash?: string;\n        actualEmployerId?: string;\n        resumeHash?: string;\n    };\n    error?: { reason: ErrorReason };\n    employer: {\n        employerId: string;\n        name: string;\n    } | null;\n    serviceUrlTemplate: string;\n    visibilityHistory: ContactsVisibilityHistory;\n}\n\nconst initialState: ContactsVisibility = {\n    request: {},\n    employer: null,\n    serviceUrlTemplate: '',\n    visibilityHistory: {\n        applicantUserId: null,\n        requestedResume: null,\n        otherResumes: [],\n        resumeById: {},\n        vacancyById: {},\n    },\n};\n\nexport const setEmployerContactsVisibility = makeSetStoreField('employerContactsVisibility');\nexport const resetEmployerContactsVisibility =\n    () =>\n    (dispatch: Dispatch<ThunkAction<Action | null, DefaultRootState, unknown, Action> | Action>): void => {\n        dispatch(setEmployerContactsVisibility(initialState));\n    };\n\nexport default autoGeneratedReducer<ContactsVisibility>(initialState);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst ADD_EMPLOYER_DIVISION = 'ADD_EMPLOYER_DIVISION';\nconst DELETE_EMPLOYER_DIVISION = 'DELETE_EMPLOYER_DIVISION';\nconst UPDATE_EMPLOYER_DIVISION = 'UPDATE_EMPLOYER_DIVISION';\nconst UPDATE_QUOTA_COUNTS = 'UPDATE_QUOTA_COUNTS';\n\nexport interface EmployerDivision {\n    divisionId: number;\n    divisionName: string;\n    servicesInfo: {\n        services: {\n            serviceId: number;\n        }[];\n    };\n}\n\ntype EmployerDivisionState = Record<number, EmployerDivision>;\n\ninterface PayloadTypes {\n    [ADD_EMPLOYER_DIVISION]: Record<number, EmployerDivision>;\n    [UPDATE_EMPLOYER_DIVISION]: EmployerDivision;\n    [UPDATE_QUOTA_COUNTS]: { divisionId: number; availableQuotas: Record<string, string> };\n    [DELETE_EMPLOYER_DIVISION]: number;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const addEmployerDivision = ActionCreator(ADD_EMPLOYER_DIVISION);\nexport const updateEmployerDivision = ActionCreator(UPDATE_EMPLOYER_DIVISION);\nexport const updateQuotaCounts = ActionCreator(UPDATE_QUOTA_COUNTS);\nexport const deleteEmployerDivision = ActionCreator(DELETE_EMPLOYER_DIVISION);\n\nexport default createReducer<EmployerDivisionState, PayloadTypes>(\n    {},\n    {\n        [ADD_EMPLOYER_DIVISION]: (state, { payload }) => ({ ...state, ...payload }),\n        [UPDATE_EMPLOYER_DIVISION]: (state, { payload }) => ({\n            ...state,\n            [payload.divisionId]: { ...state[payload.divisionId], ...payload },\n        }),\n        [UPDATE_QUOTA_COUNTS]: (state, { payload }) => {\n            const currentDivision = state[payload.divisionId];\n\n            return {\n                ...state,\n                [payload.divisionId]: {\n                    ...currentDivision,\n                    servicesInfo: {\n                        ...currentDivision.servicesInfo,\n                        services: currentDivision.servicesInfo.services.map((service) => {\n                            if (service.serviceId in payload.availableQuotas) {\n                                return { ...service, availableQuotasCount: payload.availableQuotas[service.serviceId] };\n                            }\n\n                            return service;\n                        }),\n                    },\n                },\n            };\n        },\n        [DELETE_EMPLOYER_DIVISION]: (state, { payload: divisionId }) => {\n            const { [divisionId]: deletedDivision, ...withoutDivision } = state;\n\n            return withoutDivision;\n        },\n    }\n);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst EMPLOYER_DOCUMENTS = 'EMPLOYER_DOCUMENTS';\nconst ADD_EMPLOYER_DOCUMENT = 'ADD_EMPLOYER_DOCUMENT';\nconst UPDATE_EMPLOYER_DOCUMENT = 'UPDATE_EMPLOYER_DOCUMENT';\nconst DELETE_EMPLOYER_DOCUMENT = 'DELETE_EMPLOYER_DOCUMENT';\n\nexport enum DocumentError {\n    LimitReached = 'limitReached',\n    BadFileType = 'badFileType',\n    FileTooLarge = 'fileTooLarge',\n    DeleteError = 'deleteError',\n    BadChangeTime = 'badChangeTime',\n    NoChangeType = 'noChangeType',\n    OtherError = 'otherError',\n}\n\nexport interface Document {\n    id: string;\n    url: string;\n    fileName: string;\n    created: number;\n    pending?: boolean;\n    error?: DocumentError;\n}\n\ninterface PayloadTypes {\n    [EMPLOYER_DOCUMENTS]: Document[];\n    [ADD_EMPLOYER_DOCUMENT]: Document;\n    [DELETE_EMPLOYER_DOCUMENT]: string;\n    [UPDATE_EMPLOYER_DOCUMENT]: { id: string; props: Document };\n}\n\nexport const INITIAL_STATE = [];\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const employerDocumentsAction = actionCreator(EMPLOYER_DOCUMENTS);\nexport const addEmployerDocumentAction = actionCreator(ADD_EMPLOYER_DOCUMENT);\nexport const updateEmployerDocumentAction = actionCreator(UPDATE_EMPLOYER_DOCUMENT);\nexport const deleteEmployerDocumentAction = actionCreator(DELETE_EMPLOYER_DOCUMENT);\n\nexport default createReducer<Document[], PayloadTypes>(INITIAL_STATE, {\n    [EMPLOYER_DOCUMENTS]: (state, { payload }) => payload,\n    [ADD_EMPLOYER_DOCUMENT]: (state, { payload }) => [...state, payload],\n    [DELETE_EMPLOYER_DOCUMENT]: (state, { payload }) => state.filter((document) => document.id !== payload),\n    [UPDATE_EMPLOYER_DOCUMENT]: (state, { payload }) =>\n        state.map((document) => {\n            if (document.id === payload.id) {\n                return { ...document, ...payload.props };\n            }\n            return document;\n        }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum ActivationType {\n    Auto = 'AUTO_ACTIVATION',\n    Manual = 'MANUAL_ACTIVATION',\n}\n\ninterface ServiceActivationInfo {\n    activationTime: null | string;\n    allowedActivationPeriod: { startTime: string; endTime: string };\n    bestPriceBefore: string;\n    bestPriceBeforeNextDate?: string;\n    currentActivationType: ActivationType;\n    endDate?: string;\n    hasLowerPrice: boolean;\n    priceChangesSoon: boolean;\n    priceExpiresSoon: boolean;\n}\n\ninterface EmployerInvoiceActivationInfo {\n    currentActivationType: ActivationType | null;\n    services: Record<string, ServiceActivationInfo>;\n}\n\nconst initialState = null;\n\nexport default autoGeneratedReducer<EmployerInvoiceActivationInfo>(initialState);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport enum BillStatus {\n    Discarded = 'DISCARDED',\n    NotPayed = 'NOT_PAYED',\n    PayedByCard = 'PAYED_BY_CARD',\n    Payed = 'PAYED',\n    Postpaid = 'POSTPAID',\n    Barter = 'BARTER',\n    Unknown = 'UNKNOWN',\n}\n\nexport interface Bill {\n    status: BillStatus;\n    isElectronic: boolean;\n    billId: string;\n    number: string;\n    printFormUrl: string;\n    extraPaymentAmount?: number;\n    price: {\n        amount: number;\n        currency: CurrencyType;\n    };\n}\n\nexport enum BackUrlType {\n    Url = 'URL',\n    UpgradeUrl = 'UPGRADE_URL',\n    AppScheme = 'APP_SCHEME',\n}\n\nexport interface BackUrl {\n    url: string;\n    type: BackUrlType;\n}\n\ninterface EmployerInvoiceFinish {\n    draftId: string | null;\n    shouldShowAppPromo: boolean;\n    delayedActivationWarning?: {\n        isoExpirationDate: string;\n        articleId: string;\n    };\n    bill?: Bill;\n    priceUrl: string;\n    tryToPayAgainUrl?: string;\n    duplicateCartParams: Record<string, string>;\n    activateCartParams: Record<string, string>;\n    brandingAdvUrl?: string;\n    employerBudgetUrl?: string;\n    backUrl?: BackUrl;\n    showVacanciesInstruction: boolean;\n    hasVacancyDrafts: boolean;\n}\n\nexport default autoGeneratedReducer<EmployerInvoiceFinish>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { BillType } from 'lux/models/billType';\nimport { CountryCode } from 'lux/models/countryId';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { PartyType } from 'lux/models/partyType';\nimport { Payer, PayerMetadata } from 'lux/models/payerForm.types';\nimport { PaymentType } from 'lux/models/paymentType';\n\nimport { BillTypesResponse } from 'lux/models/employerInvoicePayment/fetchBillTypes';\nimport { OrganisationTypesResponse } from 'lux/models/employerInvoicePayment/fetchOrganisationTypes';\nimport { PayerAgreementsResponse } from 'lux/models/employerInvoicePayment/fetchPayerAgreementsData';\nimport { PayerMetadataResponse } from 'lux/models/employerInvoicePayment/fetchPayerMetadata';\n\nexport interface OrganisationType {\n    organisationType: PartyType;\n    available: boolean;\n}\n\nexport interface InitialValues {\n    [key: string]: string | boolean;\n}\n\nexport interface BillTypesType {\n    value: BillType;\n    text: string;\n}\n\nexport interface Employer {\n    currency: CurrencyType;\n    country: CountryCode;\n    employerId: number | null;\n}\n\nexport interface Seller {\n    sellerId: number;\n    sellerName: string;\n}\n\nexport interface EmployerInvoicePayment {\n    hasPayers: boolean;\n    hasPersonAgreement: boolean;\n    payers: Payer[];\n    payersLoading: boolean;\n    employer: Employer;\n    paymentTypesOrder: PaymentType[];\n    paymentTypes?: Partial<{\n        [key in PaymentType]: string[];\n    }>;\n    organisationTypes: OrganisationType[] | null;\n    payerMetadata: PayerMetadata | null;\n    payer: Payer | null;\n    countries: Array<{ code: CountryCode; name: string }>;\n    emailRequiredPaymentTypes?: Record<PartyType, PaymentType[]>;\n    vats?: Partial<{\n        rows: Array<{ vat: string }>;\n    }> | null;\n    initialValues?: InitialValues;\n    billTypes: BillTypesType[];\n    sellers: Seller[];\n}\n\nconst SET_ORGANISATION_TYPES_DATA = 'SET_ORGANISATION_TYPES_DATA';\nconst SET_PAYER_METADATA = 'SET_PAYER_METADATA';\nconst SET_BILL_TYPES_DATA = 'SET_BILL_TYPES_DATA';\nconst SET_PAYERS_DATA = 'SET_PAYERS_DATA';\nconst SET_PAYERS_LOADING = 'SET_PAYERS_LOADING';\n\ninterface PayloadOrganisationTypes {\n    [SET_ORGANISATION_TYPES_DATA]: OrganisationTypesResponse;\n    [SET_PAYER_METADATA]: PayerMetadataResponse;\n    [SET_BILL_TYPES_DATA]: BillTypesResponse;\n    [SET_PAYERS_DATA]: PayerAgreementsResponse;\n    [SET_PAYERS_LOADING]: boolean;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadOrganisationTypes>();\nexport const setOrganisationTypesData = actionCreator(SET_ORGANISATION_TYPES_DATA);\nexport const setPayerMetadata = actionCreator(SET_PAYER_METADATA);\nexport const setBillTypesData = actionCreator(SET_BILL_TYPES_DATA);\nexport const setPayersData = actionCreator(SET_PAYERS_DATA);\nexport const setPayersLoading = actionCreator(SET_PAYERS_LOADING);\n\nconst initialState: EmployerInvoicePayment = {\n    hasPayers: false,\n    hasPersonAgreement: false,\n    payers: [],\n    payersLoading: false,\n    employer: {\n        currency: CurrencyType.RUR,\n        country: CountryCode.Russia,\n        employerId: null,\n    },\n    paymentTypesOrder: [],\n    paymentTypes: {},\n    organisationTypes: [],\n    payerMetadata: null,\n    payer: null,\n    countries: [],\n    vats: null,\n    billTypes: [],\n    sellers: [],\n};\n\nexport default createReducer<EmployerInvoicePayment, PayloadOrganisationTypes>(initialState, {\n    [SET_ORGANISATION_TYPES_DATA]: (state, { payload }) => {\n        return { ...state, organisationTypes: payload.organisationTypes };\n    },\n    [SET_PAYER_METADATA]: (state, { payload }) => {\n        return {\n            ...state,\n            payerMetadata: payload.payerMetadata,\n            countries: payload.countries,\n            initialValues: payload.initialValues,\n            payer: payload.payer,\n        };\n    },\n    [SET_BILL_TYPES_DATA]: (state, { payload }) => {\n        return { ...state, billTypes: payload.billTypes };\n    },\n    [SET_PAYERS_DATA]: (state, { payload }) => {\n        return {\n            ...state,\n            hasPayers: payload.hasPayers,\n            hasPersonAgreement: payload.hasPersonAgreement,\n            payers: payload.payers,\n        };\n    },\n    [SET_PAYERS_LOADING]: (state, { payload }) => {\n        return {\n            ...state,\n            payersLoading: payload,\n        };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { YearMonthDayString } from 'bloko/blocks/calendar/datesHelper';\n\nimport { Service } from 'lux/models/price/service.types';\n\nexport enum ChangeActivationTypeErrorCode {\n    CartNotFound = 'CART_NOT_FOUND',\n    UnknownActivationType = 'UNKNOWN_ACTIVATION_TYPE',\n    CartActivationTypeIsNotChangeable = 'CART_ACTIVATION_TYPE_IS_NOT_CHANGEABLE',\n}\n\nexport interface ChangeActivationTypeError {\n    message: ChangeActivationTypeErrorCode;\n}\n\nexport interface ChangeActivationTypeErrorResponse {\n    error?: ChangeActivationTypeError;\n}\n\nexport enum ActivationType {\n    Auto = 'AUTO_ACTIVATION',\n    Manual = 'MANUAL_ACTIVATION',\n}\n\nexport interface ServiceActivationType {\n    currentActivationType: ActivationType | null;\n    allowedActivationPeriod: {\n        startTime: YearMonthDayString;\n        endTime: YearMonthDayString;\n    };\n}\n\nexport interface EmployerInvoiceActivations {\n    services: Record<string, ServiceActivationType>;\n    currentActivationType: ActivationType | null;\n}\n\nexport interface EmployerInvoicePurchaseCartService extends Service {\n    activationTime?: string;\n    serviceId: number;\n}\n\ninterface EmployerInvoicePurchaseCart {\n    cartId: string | null;\n    services: Record<string, EmployerInvoicePurchaseCartService[]>[];\n}\n\nexport interface EmployerInvoicePurchase {\n    cart: EmployerInvoicePurchaseCart;\n    activations: EmployerInvoiceActivations;\n}\n\nconst initialState: EmployerInvoicePurchase = {\n    cart: {\n        cartId: null,\n        services: [],\n    },\n    activations: {\n        services: {},\n        currentActivationType: null,\n    },\n};\n\nexport default autoGeneratedReducer<EmployerInvoicePurchase>(initialState);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst UPDATE_TEMPLATE = 'UPDATE_TEMPLATE';\ninterface TemplateType<T> {\n    template: string;\n    title: string;\n    type: string;\n    visibility: {\n        sms: boolean;\n        visibility: T;\n    };\n}\n\ntype VariableVisibilityType = 'COMMON' | 'ANONYMOUS' | 'BOTH';\n\ninterface VariableType {\n    name: string;\n    translation: string;\n    visibility: {\n        sms: boolean;\n        visibility: VariableVisibilityType;\n    };\n}\n\ninterface PayloadTypes {\n    [UPDATE_TEMPLATE]: { type: string; template: string };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const updateTemplate = ActionCreator(UPDATE_TEMPLATE);\n\ninterface EmployerMailTemplatesType {\n    transliteration: {\n        mapping: Record<string, string>;\n        common: Record<string, string>;\n        anonymous: Record<string, string>;\n    };\n    variables: VariableType[];\n    mailTemplates: { anonymous: TemplateType<'ANONYMOUS'>[]; common: TemplateType<'COMMON'>[] };\n}\nexport default createReducer<EmployerMailTemplatesType, PayloadTypes>(\n    {\n        mailTemplates: { anonymous: [], common: [] },\n        variables: [],\n        transliteration: { mapping: {}, common: {}, anonymous: {} },\n    },\n    {\n        [UPDATE_TEMPLATE]: (state, action) => {\n            const { type, template } = action.payload;\n\n            return {\n                ...state,\n                mailTemplates: {\n                    anonymous: state.mailTemplates.anonymous.map((value) => {\n                        if (type === value.type) {\n                            return {\n                                ...value,\n                                template,\n                                visibility: { ...value.visibility },\n                            };\n                        }\n                        return {\n                            ...value,\n                            visibility: { ...value.visibility },\n                        };\n                    }),\n                    common: state.mailTemplates.common.map((value) => {\n                        if (type === value.type) {\n                            return {\n                                ...value,\n                                template,\n                                visibility: { ...value.visibility },\n                            };\n                        }\n                        return {\n                            ...value,\n                            visibility: { ...value.visibility },\n                        };\n                    }),\n                },\n                variables: state.variables.map((value) => ({ ...value, visibility: { ...value.visibility } })),\n                transliteration: {\n                    mapping: { ...state.transliteration.mapping },\n                    common: { ...state.transliteration.common },\n                    anonymous: { ...state.transliteration.anonymous },\n                },\n            };\n        },\n    }\n);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum ManagerType {\n    Manager = 'MANAGER',\n    McpGroup = 'MCPGROUP',\n    Moderator = 'MODERATOR',\n}\n\nexport enum ImplantType {\n    Unknown = 'UNKNOWN',\n    StaffMember = 'STAFF_MEMBER',\n    Freelancer = 'FREELANCER',\n}\n\ntype Permission = {\n    name: string;\n    text: string;\n    active: boolean;\n    managerTypes: ManagerType[];\n};\n\ntype MultiManagerPermission = {\n    name: string;\n    text: string;\n    active: boolean;\n    managerIds: string[];\n};\n\ntype ModerationData = {\n    premoderatorId?: string;\n    canPostVacancyImmediately: boolean;\n    managerTypesForModeration: ManagerType[];\n    moderatedManagers: { id: string; fullName: string }[];\n};\n\ntype Phone = {\n    country: string;\n    city: string;\n    number: string;\n    comment: string;\n};\n\ninterface EmployerManagerPersonalData {\n    currentManagerType: ManagerType;\n    currentImplantType?: ImplantType;\n    managerTypes: {\n        name: ManagerType;\n        text: string;\n    }[];\n    permissions: Permission[];\n    multiManagerPermissions: MultiManagerPermission[];\n    email?: string;\n    specialNote1?: string;\n    specialNote2?: string;\n    moderationData: ModerationData;\n    position?: string;\n    phone?: Phone;\n    additionalPhone?: Phone;\n    implantTypes: {\n        name: ImplantType;\n        text: string;\n    }[];\n    firstName?: string;\n    lastName?: string;\n    middleName?: string;\n    areaId?: string;\n}\n\nexport default autoGeneratedReducer<EmployerManagerPersonalData>({\n    currentManagerType: ManagerType.Manager,\n    managerTypes: [],\n    permissions: [],\n    multiManagerPermissions: [],\n    implantTypes: [],\n    moderationData: {\n        canPostVacancyImmediately: false,\n        managerTypesForModeration: [],\n        moderatedManagers: [],\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { NegotiationStats } from 'lux/models/managerNegotiationStats';\nimport { Paging } from 'lux/models/paging.types';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nexport enum ManagerType {\n    MCPsGroup = 'MCPGROUP',\n    Manager = 'MANAGER',\n}\n\nexport interface ManagersList {\n    canCreateVacancies: boolean;\n    canDelete: boolean;\n    canEdit: boolean;\n    canViewResumeContacts: boolean;\n    email: string;\n    fullName: string;\n    id: number;\n    userId: number;\n    self?: boolean;\n    type: string;\n    quotas: Quotas[];\n    managerType: ManagerType;\n}\n\nexport interface Quotas {\n    permittedToSpend: boolean;\n    serviceEntry: (typeof QuotasServiceEntry)[number];\n    value: number;\n}\n\nconst QuotasServiceEntry = [\n    // TODO: remove ResumeView after HH-142071\n    ServiceItemCode.ResumeView,\n    ServiceItemCode.ContactsView,\n    ServiceItemCode.DynamicTestOfNumericalAbilities,\n    ServiceItemCode.DynamicTestOfVerbalAbilities,\n    ServiceItemCode.UniversalCompetencyQuestionnaire,\n    ServiceItemCode.Advertizing,\n    ServiceItemCode.Anonymous,\n    ServiceItemCode.Standart,\n    ServiceItemCode.StandartPlus,\n    ServiceItemCode.Premium,\n] as const;\n\ntype ResumeViews = Record<number, string>;\n\ninterface EmployerManagersPageState {\n    managersViewMeta: {\n        ableToCreateManager: boolean;\n        canEditEmployerManagerQuotas: boolean;\n        managersCreationLimitReached: boolean;\n        onlyOneManagerEnabled: boolean;\n        MCPSGroup: boolean;\n        resumeViewsAccessDenied: boolean;\n        ResumeViewHistory: boolean;\n        showResumeViewsNumbers: boolean;\n        isSudo?: boolean;\n        giveMCPAllowed: boolean;\n        userEmail: string;\n        isShowMCP: boolean;\n    };\n    managersShown: ManagersList[];\n    negotiationStats: Record<number, { employerManagerIndex: NegotiationStats }>;\n    resumeViews: ResumeViews;\n    paging?: Paging;\n    filter: string;\n    loading: boolean;\n}\n\nconst DELETE_MANAGER = 'DELETE_MANAGER';\nconst FILTER_LOADING = 'FILTER_LOADING';\n\ninterface PayloadTypes {\n    [DELETE_MANAGER]: number;\n    [FILTER_LOADING]: boolean;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const deleteManager = ActionCreator(DELETE_MANAGER);\nexport const filterLoading = ActionCreator(FILTER_LOADING);\n\nconst initialState: EmployerManagersPageState = {\n    managersViewMeta: {\n        ableToCreateManager: false,\n        canEditEmployerManagerQuotas: false,\n        managersCreationLimitReached: true,\n        onlyOneManagerEnabled: false,\n        MCPSGroup: false,\n        resumeViewsAccessDenied: true,\n        ResumeViewHistory: false,\n        showResumeViewsNumbers: false,\n        giveMCPAllowed: false,\n        userEmail: '',\n        isShowMCP: false,\n    },\n    managersShown: [],\n    negotiationStats: {},\n    resumeViews: {},\n    filter: '',\n    loading: false,\n};\n\nexport default createReducer<EmployerManagersPageState, PayloadTypes>(initialState, {\n    [DELETE_MANAGER]: (state, action) => ({\n        ...state,\n        managersShown: state.managersShown.filter((manager) => manager.id !== action.payload),\n    }),\n    [FILTER_LOADING]: (state, action) => ({\n        ...state,\n        loading: action.payload,\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum EmployerMarketSegmentType {\n    Large = 'Large',\n    Premium = 'Premium',\n    Micro = 'Micro',\n    Small = 'Small',\n    Medium = 'Medium',\n}\n\nexport default autoGeneratedReducer<EmployerMarketSegmentType>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport NegotiationTopic, { CommunicationFeedback } from 'lux/models/negotiationTopic.types';\n\ntype ResponseLetters = Partial<Record<string, string>>;\n\ninterface EmployerNegotiations {\n    total: number | null;\n    maximumTopicsPerUser: number | null;\n    topicList: NegotiationTopic[];\n    responseLetters: ResponseLetters;\n    count: number | null;\n}\n\nconst SET_COMMUNICATION_FEEDBACK_FOR_TOPIC = 'SET_COMMUNICATION_FEEDBACK_FOR_TOPIC';\nconst MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC = 'MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC';\nconst MARK_REMINDER_AS_SHOWN_FOR_TOPIC = 'MARK_REMINDER_AS_SHOWN_FOR_TOPIC';\n\ninterface PayloadTypes {\n    [SET_COMMUNICATION_FEEDBACK_FOR_TOPIC]: { topicId: number; communicationFeedback: CommunicationFeedback };\n    [MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC]: { topicId: number; shouldShownReminder: boolean };\n    [MARK_REMINDER_AS_SHOWN_FOR_TOPIC]: { topicId: number };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setCommunicationFeedbackForTopic = ActionCreator(SET_COMMUNICATION_FEEDBACK_FOR_TOPIC);\nexport const markFeedbackAdviceAsSelectedForTopic = ActionCreator(MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC);\nexport const markReminderAsShownForTopic = ActionCreator(MARK_REMINDER_AS_SHOWN_FOR_TOPIC);\n\nconst INITIAL_SATE = {\n    total: null,\n    maximumTopicsPerUser: null,\n    topicList: [],\n    responseLetters: {},\n    count: null,\n};\n\nconst replaceItem = <T>(array: T[], itemIndex: number, newItem: T) => {\n    const copyArray = [...array];\n    copyArray.splice(itemIndex, 1, newItem);\n    return copyArray;\n};\n\nexport default createReducer<EmployerNegotiations, PayloadTypes>(INITIAL_SATE, {\n    [SET_COMMUNICATION_FEEDBACK_FOR_TOPIC]: (state, action) => {\n        const { topicId, communicationFeedback } = action.payload;\n        const topicList = state.topicList;\n        const topicIndex = topicList.findIndex(({ id }) => id === topicId);\n\n        if (topicIndex === -1) {\n            return state;\n        }\n\n        return {\n            ...state,\n            topicList: replaceItem(topicList, topicIndex, {\n                ...topicList[topicIndex],\n                communicationFeedback: { ...communicationFeedback },\n            }),\n        };\n    },\n    [MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC]: (state, action) => {\n        const { topicId, shouldShownReminder } = action.payload;\n        const topicList = state.topicList;\n        const topicIndex = topicList.findIndex(({ id }) => id === topicId);\n        const communicationFeedback = topicList[topicIndex]?.communicationFeedback;\n\n        if (!communicationFeedback) {\n            return state;\n        }\n\n        return {\n            ...state,\n            topicList: replaceItem(topicList, topicIndex, {\n                ...topicList[topicIndex],\n                communicationFeedback: {\n                    ...communicationFeedback,\n                    feedbackAdviceWasSelected: true,\n                    shouldShownReminder,\n                },\n            }),\n        };\n    },\n    [MARK_REMINDER_AS_SHOWN_FOR_TOPIC]: (state, action) => {\n        const { topicId } = action.payload;\n        const topicList = state.topicList;\n        const topicIndex = topicList.findIndex(({ id }) => id === topicId);\n        const communicationFeedback = topicList[topicIndex]?.communicationFeedback;\n\n        if (!communicationFeedback) {\n            return state;\n        }\n\n        return {\n            ...state,\n            topicList: replaceItem(topicList, topicIndex, {\n                ...topicList[topicIndex],\n                communicationFeedback: {\n                    ...communicationFeedback,\n                    shouldShownReminder: false,\n                },\n            }),\n        };\n    },\n});\n","export enum ChangeTopicActionError {\n    InvitationLimit = 'INVITATION_LIMIT_EXCEEDED',\n    CantInvite = 'VACANCY_CANT_INVITE_TO',\n    ArchiveTopic = 'CANT_CHANGE_ARCHIVE_TOPIC_STATE',\n    ReadOnlyTopic = 'CANT_CHANGE_READ_ONLY_TOPIC',\n    ResumesUnavailable = 'RESUMES_UNAVAILABLE',\n    VacancyUnavailable = 'VACANCY_UNAVAILABLE',\n    ManagerLimit = 'MANAGER_LIMIT_EXCEED',\n    EmployerLimit = 'EMPLOYER_LIMIT_EXCEED',\n    NoFaService = 'NO_FA_SERVICE',\n}\n\nexport enum ChangeTopicFieldError {\n    MailTooLong = 'MAIL_TOO_LONG',\n    MailInappropriateLanguage = 'MAIL_INAPPROPRIATE_LANGUAGE',\n    MailResourcePolicyViolation = 'MAIL_RESOURCE_POLICY_VIOLATION',\n}\nexport enum ChangeTopicContentError {\n    Default = 'DEFAULT',\n    NetworkError = 'NETWORK_ERROR',\n}\n\nexport const ChangeTopicError = { ...ChangeTopicActionError, ...ChangeTopicFieldError };\nexport type ChangeTopicError = typeof ChangeTopicError;\n\nexport const isChangeTopicActionError = (error: string): error is ChangeTopicActionError => {\n    return Object.values(ChangeTopicActionError).includes(error);\n};\n\nexport const isChangeTopicContentError = (error: string): error is ChangeTopicContentError => {\n    return Object.values(ChangeTopicContentError).includes(error);\n};\n\nexport enum ChangeTopicFormErrorCode {\n    UnavailableState = 'UNAVAILABLE_STATE',\n    ToAnotherTopicExists = 'TO_ANOTHER_TOPIC_EXISTS',\n    CannotViewResponses = 'CANNOT_VIEW_RESPONSES',\n    ResumeContactsUnavailable = 'RESUME_CONTACTS_UNAVAILABLE',\n    DefaultErrorText = 'defaultErrorText',\n    NoResumes = 'applicantChoose',\n    NoVacancies = 'noVacancy',\n}\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { AssessmentTool } from 'lux/models/employerNegotiationsChangeTopic/assessmentTool.types';\nimport {\n    ChangeTopicContentError,\n    ChangeTopicFormErrorCode,\n    isChangeTopicContentError,\n} from 'lux/models/employerNegotiationsChangeTopic/error.types';\nimport { NonappearanceReason } from 'lux/models/employerNegotiationsChangeTopic/nonappearanceReason.types';\nimport { StateId } from 'lux/models/employerNegotiationsChangeTopic/stateId.types';\n\nexport interface Area {\n    id: string;\n    name: string;\n}\n\nexport interface Resume {\n    id: number;\n    hash: string;\n    openedContacts: boolean;\n    areaId: string | null;\n    lastName: string | null;\n    firstName: string | null;\n    middleName: string | null;\n}\n\ninterface SimhashVacancy {\n    id: string;\n    name: string;\n}\n\ninterface Address {\n    id: number | null;\n    city: string | null;\n    street: string | null;\n    building: string | null;\n    displayName: string | null;\n    rawAddress: string | null;\n    mapData: Record<string, unknown> | null;\n    metroStations: Record<string, unknown> | null;\n}\n\nexport interface Vacancy {\n    id: number;\n    isSelected: boolean;\n    name: string;\n    area: {\n        id: number;\n        name: string;\n    };\n    address: Address;\n    nameWithArea: string;\n}\n\nexport interface Assessment {\n    isSelected: boolean;\n    code: AssessmentTool;\n    count: number | null;\n    countWithQuotas: number | null;\n    quotasApplied: boolean | null;\n}\n\ninterface State {\n    isSelected: boolean;\n    id: StateId;\n    showNonappearanceReasons: boolean | null;\n    hasAddress: boolean;\n    trl: string;\n}\n\ninterface Template {\n    type: string | null;\n    content: string | null;\n}\n\ninterface Error {\n    code: string;\n    trl: string;\n}\n\nexport interface CustomError {\n    code: ChangeTopicContentError;\n    props?: Record<string, unknown>;\n}\n\nexport const isCustomError = (error: Error | CustomError): error is CustomError => {\n    return isChangeTopicContentError(error.code);\n};\n\ninterface ChangeTopic {\n    vacancies: {\n        total: number;\n        list: Vacancy[];\n    };\n    assessment: Assessment[];\n    states: State[];\n    templates: Template[];\n    resumes: Resume[];\n    topicsWontBeUpdated: number | null;\n    maxDisplayedVacancies: number;\n    nonappearanceReasons: NonappearanceReason[];\n    errors: {\n        list: Error[] | CustomError[];\n    };\n    smsModificationBlocked: boolean;\n}\n\nexport interface ChangeTopicFormError {\n    code: ChangeTopicFormErrorCode;\n    trl: string;\n}\n\nexport interface EmployerNegotiationsChangeTopicState {\n    employerId: number;\n    addressesCount?: number;\n    areas?: Area[];\n    simhashVacancy?: SimhashVacancy;\n    useSendSmsToInvite?: boolean;\n    transliterationData?: {\n        mapping: Record<string, string>;\n    };\n    discardedNotifier: number;\n    changeTopic: ChangeTopic;\n    error?: ChangeTopicFormError;\n    loading?: boolean;\n    simhash?: string;\n}\n\nconst UPDATE_CHANGE_TOPIC = 'UPDATE_CHANGE_TOPIC';\nconst SET_LOADING_CHANGE_TOPIC = 'SET_LOADING_CHANGE_TOPIC';\nconst SET_ERROR_CHANGE_TOPIC = 'SET_ERROR_CHANGE_TOPIC';\n\ninterface PayloadTypes {\n    [UPDATE_CHANGE_TOPIC]: {\n        changeTopic: ChangeTopic;\n        useSendSmsToInvite?: boolean;\n    };\n    [SET_LOADING_CHANGE_TOPIC]: boolean;\n    [SET_ERROR_CHANGE_TOPIC]: CustomError;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateChangeTopic = actionCreator(UPDATE_CHANGE_TOPIC);\nexport const setLoadingChangeTopic = actionCreator(SET_LOADING_CHANGE_TOPIC);\nexport const setErrorChangeTopic = actionCreator(SET_ERROR_CHANGE_TOPIC);\n\nexport default createReducer<EmployerNegotiationsChangeTopicState, PayloadTypes>(null, {\n    [UPDATE_CHANGE_TOPIC]: (state, { payload: { changeTopic, useSendSmsToInvite } }) => {\n        return {\n            ...state,\n            changeTopic: {\n                ...state.changeTopic,\n                ...{\n                    states: changeTopic.states,\n                    templates: changeTopic.templates,\n                    topicsWontBeUpdated: changeTopic.topicsWontBeUpdated,\n                    assessment: changeTopic.assessment,\n                    errors: changeTopic.errors,\n                },\n            },\n            useSendSmsToInvite,\n        };\n    },\n    [SET_LOADING_CHANGE_TOPIC]: (state, { payload }) => {\n        return { ...state, loading: payload };\n    },\n    [SET_ERROR_CHANGE_TOPIC]: (state, { payload }) => {\n        return {\n            ...state,\n            changeTopic: {\n                ...state.changeTopic,\n                errors: {\n                    list: [payload],\n                },\n            },\n        };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport interface RecommendedKeySkill {\n    text: string;\n    selected: boolean;\n}\n\nexport interface SkillsInInput {\n    string: string;\n}\n\nexport interface RecommendedKeySkills {\n    recommendedKeySkills: RecommendedKeySkill[];\n    recommendedCompetencies: RecommendedKeySkill[];\n    skillsInInput: SkillsInInput[];\n}\n\nconst INITIAL_STATE: RecommendedKeySkills = {\n    recommendedKeySkills: [],\n    recommendedCompetencies: [],\n    skillsInInput: [],\n};\n\nconst UPDATE_RECOMMENDED_SKILLS = 'UPDATE_RECOMMENDED_SKILLS';\nconst UPDATE_RECOMMENDED_COMPETENCE = 'UPDATE_RECOMMENDED_COMPETENCE';\nconst UPDATE_SKILLS_IN_INPUT = 'UPDATE_SKILLS_IN_INPUT';\n\ninterface PayloadTypes {\n    [UPDATE_RECOMMENDED_SKILLS]: RecommendedKeySkill[];\n    [UPDATE_RECOMMENDED_COMPETENCE]: RecommendedKeySkill[];\n    [UPDATE_SKILLS_IN_INPUT]: SkillsInInput[];\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateRecommendedSkills = actionCreator(UPDATE_RECOMMENDED_SKILLS);\nexport const updateRecommendedCompetence = actionCreator(UPDATE_RECOMMENDED_COMPETENCE);\nexport const updateSkillsInInput = actionCreator(UPDATE_SKILLS_IN_INPUT);\n\nexport default createReducer<RecommendedKeySkills, PayloadTypes>(INITIAL_STATE, {\n    [UPDATE_RECOMMENDED_SKILLS]: (state, action) => ({\n        ...state,\n        recommendedKeySkills: action.payload,\n    }),\n    [UPDATE_RECOMMENDED_COMPETENCE]: (state, action) => ({\n        ...state,\n        recommendedCompetencies: action.payload,\n    }),\n    [UPDATE_SKILLS_IN_INPUT]: (state, action) => ({\n        ...state,\n        skillsInInput: action.payload,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum ChangeEmailHoverTip {\n    ContactMCP = 'ContactMCP',\n    ContactSupport = 'ContactSupport',\n    SudoNotAllowed = 'SudoNotAllowed',\n    NotAllowed = 'NotAllowed',\n}\n\ninterface EmployerSettingsPageState {\n    email: string;\n    newEmail: string;\n    changeEmailHoverTip: null | ChangeEmailHoverTip;\n    targetEmployerManagerId: string;\n    changeEmailForMyself: boolean;\n}\n\nconst initialState: EmployerSettingsPageState = {\n    email: '',\n    newEmail: '',\n    changeEmailHoverTip: null,\n    targetEmployerManagerId: '',\n    changeEmailForMyself: true,\n};\n\nexport const SET_NEW_EMAIL = 'SET_NEW_EMAIL';\n\ninterface PayloadTypes {\n    [SET_NEW_EMAIL]: string;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setNewEmail = ActionCreator(SET_NEW_EMAIL);\n\nexport default createReducer<EmployerSettingsPageState, PayloadTypes>(initialState, {\n    [SET_NEW_EMAIL]: (state, action) => ({\n        ...state,\n        newEmail: action.payload,\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CountryId } from 'lux/models/countryId';\nimport { EmployerCategoryCode } from 'lux/models/employerCategories';\n\nexport enum EmployerSuspiciousState {\n    NotSuspicious = 'NOT_SUSPICIOUS',\n    Suspicious = 'SUSPICIOUS',\n    TrustedSuspicious = 'TRUSTED_SUSPICIOUS',\n    SuspiciousRemovalPending = 'SUSPICIOUS_REMOVAL_PENDING',\n}\n\nexport enum EmployerState {\n    Approved = 'APPROVED',\n    Disabled = 'DISABLED',\n    Discard = 'DISCARDED',\n    New = 'NEW',\n    NotVerified = 'NOT_VERIFIED',\n    Unregistered = 'UNREGISTERED',\n    Waiting = 'WAITING',\n}\n\ninterface EmployerStatusProps {\n    category: EmployerCategoryCode | '';\n    state: EmployerState | null;\n    countryId: CountryId | null;\n    suspiciousState: EmployerSuspiciousState;\n    accepted: boolean;\n}\n\nexport default autoGeneratedReducer<EmployerStatusProps>({\n    category: '',\n    state: null,\n    countryId: null,\n    suspiciousState: EmployerSuspiciousState.NotSuspicious,\n    accepted: false,\n});\n","import createReducer from '@hh.ru/redux-create-reducer';\n\nimport { PublicationTypePurchase } from 'lux/models/vacancyCreate/availablePublicationTypes';\n\nconst SET_DRAFT_PURCHASE_INFO = 'SET_DRAFT_PURCHASE_INFO';\n\nexport const INITIAL_STATE = {};\n\nexport interface PurchaseDraft {\n    purchase: PublicationTypePurchase;\n    source: string;\n    unableToPurchase: {\n        publicationType: string;\n        count: number;\n    }[];\n}\n\ntype PurchaseDraftState = { [draftId: number]: PurchaseDraft };\n\ninterface PayloadTypes {\n    [SET_DRAFT_PURCHASE_INFO]: PurchaseDraftState;\n}\n\nexport const setDraftPurchaseInfo = (\n    draftId: number,\n    info: PurchaseDraft\n): { type: 'SET_DRAFT_PURCHASE_INFO'; payload: { [draftId: number]: PurchaseDraft } } => ({\n    type: SET_DRAFT_PURCHASE_INFO,\n    payload: { [draftId]: info },\n});\n\nexport default createReducer<PurchaseDraftState, PayloadTypes>(INITIAL_STATE, {\n    [SET_DRAFT_PURCHASE_INFO]: (state, action) => ({ ...state, ...action.payload }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport {\n    CurrentVacancyAuctionData,\n    CurrentVacancyAuctionCampaign,\n    CampaignCreationStatus,\n} from 'lux/models/auctionData';\n\nimport {\n    Vacancy,\n    ManagerId,\n    Drafts,\n    VacanciesList,\n    EmployerManager,\n    ALL_VACANCIES_GROUP_ID,\n    ManagerVacancies,\n} from 'lux/models/employerVacancies/vacancy.types';\n\nconst FILTER_VACANCIES = 'FILTER_VACANCIES';\nconst CHANGE_LOADING_LIST_STATUS = 'CHANGE_LOADING_LIST_STATUS';\nconst SORT_VACANCIES = 'SORT_VACANCIES';\nconst ADD_VACANCIES = 'ADD_VACANCIES';\nconst ARCHIVE_MANAGER_VACANCY = 'ARCHIVE_MANAGER_VACANCY';\nconst REMOVE_MANAGER_VACANCIES = 'REMOVE_MANAGER_VACANCIES';\nconst MOVE_MANAGER_VACANCIES = 'MOVE_MANAGER_VACANCIES';\nconst UPGRADE_MANAGER_VACANCY = 'UPGRADE_MANAGER_VACANCY';\nconst UPDATE_MANAGER_VACANCIES = 'UPDATE_MANAGER_VACANCIES';\nconst SET_DRAFTS = 'SET_DRAFTS';\nconst DISABLE_AUTO_PUBLICATION = 'DISABLE_AUTO_PUBLICATION';\nconst CANCEL_SCHEDULED_PUBLICATION = 'CANCEL_SCHEDULED_PUBLICATION';\nconst REFRESH_MANAGER_VACANCY = 'REFRESH_MANAGER_VACANCY';\nconst UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO = 'UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO';\nconst SET_AUCTION_CAMPAIGN_CREATED = 'SET_AUCTION_CAMPAIGN_CREATED';\nconst UPDATE_HIRING_PLAN_DATA = 'UPDATE_HIRING_PLAN_DATA';\nconst CHANGE_MANAGER_VACANCY_VISIBILITY = 'CHANGE_MANAGER_VACANCY_VISIBILITY';\n\nconst INITIAL_STATE: ManagerVacancies = {};\n\ninterface PayloadTypes {\n    [REMOVE_MANAGER_VACANCIES]: {\n        vacancyIds: number[] | number;\n    };\n    [REFRESH_MANAGER_VACANCY]: Vacancy;\n    [ARCHIVE_MANAGER_VACANCY]: number[];\n    [MOVE_MANAGER_VACANCIES]: {\n        checkedVacancies: number[];\n        managerToTransfer: EmployerManager;\n        filterEmployerManagerIdList: string[];\n        groupId: string | undefined;\n        groupManagersIds: Set<number>;\n    };\n    [UPGRADE_MANAGER_VACANCY]: { vacancy: Vacancy };\n    [ADD_VACANCIES]: {\n        vacancies: VacanciesList;\n        managerId: ManagerId;\n    };\n    [SET_DRAFTS]: {\n        draftsData: {\n            draftsTotalCount: number;\n            drafts: Drafts;\n        };\n    };\n    [SORT_VACANCIES]: {\n        vacancies: VacanciesList;\n    };\n    [CHANGE_LOADING_LIST_STATUS]: {\n        isFetching: boolean;\n    };\n    [FILTER_VACANCIES]: {\n        vacancies: VacanciesList;\n    };\n    [UPDATE_MANAGER_VACANCIES]: { vacancies: Vacancy[] };\n    [DISABLE_AUTO_PUBLICATION]: {\n        draftId: number;\n    };\n    [CANCEL_SCHEDULED_PUBLICATION]: {\n        draftId: number;\n    };\n    [UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO]: {\n        vacancyId: number;\n        newCampaignInfo: Partial<CurrentVacancyAuctionCampaign>;\n    };\n    [SET_AUCTION_CAMPAIGN_CREATED]: {\n        vacancyId: number;\n    };\n    [UPDATE_HIRING_PLAN_DATA]: {\n        vacancyId: number;\n        hasHiringPlan: boolean;\n    };\n    [CHANGE_MANAGER_VACANCY_VISIBILITY]: {\n        vacancyId: number;\n        type: 'open' | 'closed';\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const moveManagerVacancies = actionCreator(MOVE_MANAGER_VACANCIES);\nexport const addVacancies = actionCreator(ADD_VACANCIES);\nexport const setDrafts = actionCreator(SET_DRAFTS);\nexport const sortVacancies = actionCreator(SORT_VACANCIES);\nexport const changeListLoadingStatus = actionCreator(CHANGE_LOADING_LIST_STATUS);\nexport const archiveManagerVacancies = actionCreator(ARCHIVE_MANAGER_VACANCY);\nexport const removeManagerVacancies = actionCreator(REMOVE_MANAGER_VACANCIES);\nexport const upgradeManagerVacancy = actionCreator(UPGRADE_MANAGER_VACANCY);\nexport const updateManagerVacancies = actionCreator(UPDATE_MANAGER_VACANCIES);\nexport const filterVacancies = actionCreator(FILTER_VACANCIES);\nexport const removeAutoPublicationDraft = actionCreator(DISABLE_AUTO_PUBLICATION);\nexport const removeScheduledPublication = actionCreator(CANCEL_SCHEDULED_PUBLICATION);\nexport const refreshManagerVacancy = actionCreator(REFRESH_MANAGER_VACANCY);\nexport const updateManagerVacancyAuctionCampaignInfo = actionCreator(UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO);\n// TODO: https://jira.hh.ru/browse/HH-183480\nexport const setAuctionCampaignCreated = actionCreator(SET_AUCTION_CAMPAIGN_CREATED);\nexport const updateHasHiringPlan = actionCreator(UPDATE_HIRING_PLAN_DATA);\nexport const changeManagerVacancyVisibility = actionCreator(CHANGE_MANAGER_VACANCY_VISIBILITY);\n\nconst filterVacancyIds = (values: Vacancy[], filterList: number[]) =>\n    values.filter(({ vacancyId }) => {\n        return !filterList.includes(vacancyId);\n    });\n\nconst getTotalVacanciesCount = (\n    oldShownVacanciesCount: number,\n    newShownVacanciesCount: number,\n    oldTotalVacanciesCount: number\n): number => {\n    const delta = oldShownVacanciesCount - newShownVacanciesCount;\n    return Math.max(oldTotalVacanciesCount - delta, 0);\n};\n\nexport default createReducer<ManagerVacancies, PayloadTypes>(INITIAL_STATE, {\n    [REMOVE_MANAGER_VACANCIES]: (state, action) => {\n        const { vacancyIds } = action.payload;\n\n        if (!!state.drafts && state.draftsTotalCount !== undefined) {\n            const idsContainer: number[] = [];\n            const ids = idsContainer.concat(vacancyIds);\n            const { drafts, draftsTotalCount } = state;\n            const newManagerDrafts = drafts.filter(({ id }) => !ids.includes(id));\n            const newTotalDraftsCount = getTotalVacanciesCount(\n                drafts.length,\n                newManagerDrafts.length,\n                draftsTotalCount\n            );\n\n            return {\n                ...state,\n                drafts: newManagerDrafts,\n                draftsTotalCount: newTotalDraftsCount,\n            };\n        }\n\n        return { ...state };\n    },\n    [REFRESH_MANAGER_VACANCY]: (state, { payload: vacancy }) => {\n        const { vacancyId } = vacancy;\n\n        if (!state?.vacancies) {\n            return { ...state };\n        }\n\n        const newVacanciesList = state.vacancies.list.map((managerVacancy) => {\n            if (managerVacancy.vacancyId === vacancyId) {\n                return { ...managerVacancy, ...vacancy };\n            }\n\n            return managerVacancy;\n        });\n\n        return {\n            ...state,\n            vacancies: {\n                ...state.vacancies,\n                list: newVacanciesList,\n            },\n        };\n    },\n    [ARCHIVE_MANAGER_VACANCY]: (state, action) => {\n        const checkedVacancies = action.payload;\n        const oldManagerVacancies = state.vacancies;\n\n        if (oldManagerVacancies) {\n            const newManagerVacanciesList = filterVacancyIds(oldManagerVacancies.list, checkedVacancies);\n            const activeVacanciesCount = getTotalVacanciesCount(\n                oldManagerVacancies.list.length,\n                newManagerVacanciesList.length,\n                oldManagerVacancies.activeVacanciesCount\n            );\n\n            return {\n                ...state,\n                vacancies: { ...oldManagerVacancies, list: newManagerVacanciesList, activeVacanciesCount },\n            };\n        }\n\n        return state;\n    },\n    [MOVE_MANAGER_VACANCIES]: (state, action) => {\n        const { checkedVacancies, managerToTransfer, filterEmployerManagerIdList, groupId, groupManagersIds } =\n            action.payload;\n        const isManagerToTransferFiltered =\n            filterEmployerManagerIdList.length > 0 &&\n            !filterEmployerManagerIdList.includes(managerToTransfer.managerId);\n        const isGroupContainsManager =\n            groupId === ALL_VACANCIES_GROUP_ID || groupManagersIds.has(managerToTransfer.managerId);\n\n        const vacanciesFromState = state.vacancies;\n\n        if (vacanciesFromState) {\n            const newList = vacanciesFromState.list.reduce<Vacancy[]>((resultList, vacancy) => {\n                const isCheckedVacancy = checkedVacancies.includes(vacancy.vacancyId);\n                if (isCheckedVacancy && (isManagerToTransferFiltered || !isGroupContainsManager)) {\n                    return resultList;\n                }\n\n                const newVacancy = isCheckedVacancy ? { ...vacancy, employerManager: managerToTransfer } : vacancy;\n                resultList.push(newVacancy);\n\n                return resultList;\n            }, []);\n\n            const newActiveVacanciesCount = getTotalVacanciesCount(\n                vacanciesFromState.list.length,\n                newList.length,\n                vacanciesFromState.activeVacanciesCount\n            );\n\n            return {\n                ...state,\n                vacancies: {\n                    ...vacanciesFromState,\n                    list: newList,\n                    activeVacanciesCount: newActiveVacanciesCount,\n                },\n            };\n        }\n\n        return state;\n    },\n    [UPGRADE_MANAGER_VACANCY]: (state, { payload: { vacancy } }) => {\n        const { vacancyId } = vacancy;\n\n        if (!state.vacancies) {\n            return { ...state };\n        }\n\n        const newVacanciesList = state.vacancies.list.map((managerVacancy) => {\n            if (managerVacancy.vacancyId === vacancyId) {\n                return { ...managerVacancy, ...vacancy, autoProlongationState: {} };\n            }\n\n            return managerVacancy;\n        });\n\n        return {\n            ...state,\n            vacancies: {\n                ...state.vacancies,\n                list: newVacanciesList,\n            },\n        };\n    },\n    [ADD_VACANCIES]: (state, { payload: { vacancies } }) => {\n        const isAnyVacancyHasBrandingTemplate = vacancies.isAnyVacancyHasBrandingTemplate;\n        const isAuctionPresent = vacancies.isAuctionPresent;\n        const isCallsPresent = vacancies.isCallsPresent;\n        const list: Vacancy[] = vacancies.list || [];\n        const managerVacancies = state.vacancies;\n        let newVacancies;\n\n        if (managerVacancies) {\n            newVacancies = {\n                ...vacancies,\n                isAnyVacancyHasBrandingTemplate:\n                    managerVacancies.isAnyVacancyHasBrandingTemplate || isAnyVacancyHasBrandingTemplate,\n                isAuctionPresent: managerVacancies.isAuctionPresent || isAuctionPresent,\n                isCallsPresent: managerVacancies.isCallsPresent || isCallsPresent,\n                list: managerVacancies.list?.concat(list) ?? list,\n            };\n        }\n        return {\n            ...state,\n            isFetching: false,\n            vacancies: newVacancies,\n        };\n    },\n    [SET_DRAFTS]: (state, { payload: { draftsData } }) => {\n        const { drafts, draftsTotalCount } = draftsData;\n\n        return {\n            ...state,\n            isFetching: false,\n            drafts,\n            draftsTotalCount,\n        };\n    },\n    [SORT_VACANCIES]: (state, { payload: { vacancies } }) => {\n        return {\n            ...state,\n            isFetching: false,\n            vacancies,\n        };\n    },\n    [CHANGE_LOADING_LIST_STATUS]: (state, { payload: { isFetching } }) => ({\n        ...state,\n        isFetching,\n    }),\n    [FILTER_VACANCIES]: (state, { payload: { vacancies } }) => ({\n        ...state,\n        vacancies,\n    }),\n    [UPDATE_MANAGER_VACANCIES]: (state, { payload }) =>\n        payload.vacancies.reduce((filteredData: ManagerVacancies, vacancy: Vacancy) => {\n            const managerVacanciesFromState = filteredData.vacancies;\n            let vacancies;\n\n            if (managerVacanciesFromState) {\n                const vacancyPosition = managerVacanciesFromState.list.findIndex(\n                    ({ vacancyId }) => vacancyId === vacancy.vacancyId\n                );\n                const updatedVacancy = {\n                    ...managerVacanciesFromState.list[vacancyPosition],\n                    ...vacancy,\n                };\n                const list = managerVacanciesFromState.list\n                    .slice(0, vacancyPosition)\n                    .concat(updatedVacancy)\n                    .concat(managerVacanciesFromState.list.slice(vacancyPosition + 1));\n                vacancies = {\n                    ...managerVacanciesFromState,\n                    list,\n                };\n            }\n\n            return {\n                ...filteredData,\n                vacancies,\n            };\n        }, state),\n    [DISABLE_AUTO_PUBLICATION]: (state, { payload: { draftId } }) => {\n        const autoPublications = state.autoPublications;\n        let newAutoPublications;\n\n        if (autoPublications) {\n            newAutoPublications = {\n                ...autoPublications,\n                billsByDrafts: { ...autoPublications.billsByDrafts, [draftId]: null },\n                list: autoPublications.list.filter(({ id }) => id !== draftId),\n            };\n        }\n        return {\n            ...state,\n            autoPublications: newAutoPublications,\n        };\n    },\n    [CANCEL_SCHEDULED_PUBLICATION]: (state, { payload: { draftId } }) => {\n        const scheduledPublications = state.scheduledPublications;\n        let newScheduledPublications;\n\n        if (scheduledPublications) {\n            newScheduledPublications = {\n                ...scheduledPublications,\n                publicationTime: { ...scheduledPublications.publicationTime, [draftId]: null },\n                list: scheduledPublications.list.filter(({ id }) => id !== draftId),\n            };\n        }\n\n        return {\n            ...state,\n            scheduledPublications: newScheduledPublications,\n        };\n    },\n    [UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO]: (state, { payload: { vacancyId, newCampaignInfo } }) => {\n        const vacanciesList = state.vacancies as VacanciesList;\n        const newVacanciesList = vacanciesList.list.map((vacancy) => {\n            if (vacancy.vacancyId === vacancyId) {\n                const auctionData = vacancy.auctionData as CurrentVacancyAuctionData;\n                const campaignInfo = auctionData.campaignInfo as CurrentVacancyAuctionCampaign;\n\n                return {\n                    ...vacancy,\n                    auctionData: {\n                        ...auctionData,\n                        campaignInfo: { ...campaignInfo, ...newCampaignInfo },\n                    },\n                };\n            }\n\n            return vacancy;\n        });\n\n        return {\n            ...state,\n            vacancies: {\n                ...vacanciesList,\n                list: newVacanciesList,\n            },\n        };\n    },\n    [SET_AUCTION_CAMPAIGN_CREATED]: (state, { payload: { vacancyId } }) => {\n        const vacanciesList = state.vacancies as VacanciesList;\n\n        const newVacanciesList = vacanciesList.list.map((vacancy) => {\n            if (vacancy.vacancyId === vacancyId) {\n                const auctionData = vacancy.auctionData as CurrentVacancyAuctionData;\n\n                return {\n                    ...vacancy,\n                    auctionData: { ...auctionData, campaignCreationStatus: CampaignCreationStatus.CampaignCreated },\n                };\n            }\n\n            return vacancy;\n        });\n        return {\n            ...state,\n            vacancies: {\n                ...vacanciesList,\n                list: newVacanciesList,\n            },\n        };\n    },\n    [UPDATE_HIRING_PLAN_DATA]: (state, { payload: { vacancyId, hasHiringPlan } }) => {\n        const vacanciesList = state.vacancies as VacanciesList;\n\n        const newVacanciesList = vacanciesList.list.map((vacancy) => {\n            if (vacancy.vacancyId === vacancyId) {\n                return {\n                    ...vacancy,\n                    hasHiringPlan,\n                };\n            }\n\n            return vacancy;\n        });\n        return {\n            ...state,\n            vacancies: {\n                ...vacanciesList,\n                list: newVacanciesList,\n            },\n        };\n    },\n    [CHANGE_MANAGER_VACANCY_VISIBILITY]: (state, { payload: { vacancyId, type } }) => {\n        const vacanciesList = state.vacancies as VacanciesList;\n\n        const newVacanciesList = vacanciesList.list.map((vacancy) => {\n            if (vacancy.vacancyId === vacancyId) {\n                return {\n                    ...vacancy,\n                    type,\n                };\n            }\n\n            return vacancy;\n        });\n        return {\n            ...state,\n            vacancies: {\n                ...vacanciesList,\n                list: newVacanciesList,\n            },\n        };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { EmployerManager as VacancyEmployerManager } from 'lux/models/employer/managers';\n\nexport interface VacancyGroup {\n    groupId: string;\n    groupName: string;\n    groupNameForSearch: string | null;\n    vacanciesCount: number;\n    employerManagers: VacancyEmployerManager[];\n    default: boolean;\n}\n\nexport const UPDATE_VACANCIES_GROUPS = 'vacanciesGroups/UPDATE_VACANCIES_GROUPS';\n\ninterface PayloadTypes {\n    [UPDATE_VACANCIES_GROUPS]: { groups: VacancyGroup[]; currentGroupId: string };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateVacanciesGroups = actionCreator(UPDATE_VACANCIES_GROUPS);\n\nexport const STATIC_GROUPS_COUNT = 2;\n\nexport const shouldShowVacanciesGroups = (managerVacanciesGroups: VacancyGroup[]): boolean => {\n    return managerVacanciesGroups.length > STATIC_GROUPS_COUNT;\n};\n\nexport default createReducer<VacancyGroup[], PayloadTypes>([], {\n    [UPDATE_VACANCIES_GROUPS]: (state, action) => {\n        const payloadGroups = new Map<string, VacancyGroup>();\n        action.payload.groups.forEach((group) => {\n            payloadGroups.set(group.groupId, group);\n        });\n\n        const currentGroupsUpdated = state.map((group) => {\n            const payloadGroup = payloadGroups.get(group.groupId);\n            if (payloadGroup) {\n                payloadGroups.delete(payloadGroup.groupId);\n                return payloadGroup;\n            }\n            return { ...group, vacanciesCount: 0 };\n        });\n\n        const newGroupsFromPayload = payloadGroups.values();\n        const newGroups = [...currentGroupsUpdated, ...newGroupsFromPayload];\n\n        const staticGroups = newGroups.slice(0, STATIC_GROUPS_COUNT);\n        const dynamicGroupsFiltered = newGroups\n            .slice(STATIC_GROUPS_COUNT)\n            .filter(({ groupId, vacanciesCount }) => groupId === action.payload.currentGroupId || vacanciesCount > 0);\n        dynamicGroupsFiltered.sort((a, b) => a.groupName.localeCompare(b.groupName));\n\n        return [...staticGroups, ...dynamicGroupsFiltered];\n    },\n});\n","import createReducer from '@hh.ru/redux-create-reducer';\n\nconst SUITABLE_COUNTER = 'SUITABLE_COUNTER';\n\ninterface State {\n    [id: number]: {\n        counts?: number;\n        isFetching: boolean;\n        error?: boolean;\n    };\n}\n\ninterface PayloadTypes {\n    [SUITABLE_COUNTER]: State;\n}\n\ninterface Action {\n    type: 'SUITABLE_COUNTER';\n    payload: State;\n}\n\nexport const fetchSuitableCounterFailed = (ids: number[]): Action => ({\n    type: SUITABLE_COUNTER,\n    payload: ids.reduce((result, id) => {\n        result[id] = { isFetching: false, error: true };\n        return result;\n    }, <State>{}),\n});\n\nexport const fetchSuitableCounterStart = (ids: number[]): Action => ({\n    type: SUITABLE_COUNTER,\n    payload: ids.reduce((result, id) => {\n        result[id] = { isFetching: true };\n        return result;\n    }, <State>{}),\n});\n\nexport const fetchSuitableCounterSuccess: (\n    ids: number[],\n    { counts }: { counts: { [id: number]: number } }\n) => Action = (ids, { counts }) => ({\n    type: SUITABLE_COUNTER,\n    payload: ids.reduce((result, id) => {\n        result[id] = { counts: counts[id], isFetching: false };\n        return result;\n    }, <State>{}),\n});\n\nexport const INITIAL_STATE = {};\n\nexport default createReducer<State, PayloadTypes>(INITIAL_STATE, {\n    [SUITABLE_COUNTER]: (state, action) => {\n        return { ...state, ...action.payload };\n    },\n});\n","import { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\n\nimport { autoGeneratedReducer, makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport fetcher from 'lux/modules/fetcher';\n\nexport enum VacanciesType {\n    Active = 'active',\n    Drafts = 'drafts',\n    Archived = 'archived',\n    Templates = 'templates',\n}\n\nexport interface VacanciesCountState {\n    [VacanciesType.Active]: {\n        active: number;\n        autoPublications: number;\n        scheduledPublications: number;\n        totalCount: number;\n    };\n    [VacanciesType.Drafts]: {\n        totalCount: number;\n    };\n    [VacanciesType.Archived]: {\n        totalCount: number;\n    };\n    [VacanciesType.Templates]: {\n        personalCount: number;\n        sharedCount: number;\n        globalCount: number;\n        totalCount: number;\n    };\n}\n\nexport const setVacanciesCount = makeSetStoreField('vacanciesCount');\n\nconst VACANCIES_COUNT_URL = '/shards/employer/vacancies/count';\n\ndeclare global {\n    interface FetcherGetApi {\n        [VACANCIES_COUNT_URL]: {\n            queryParams: {\n                managerId?: number;\n            };\n            response: VacanciesCountState;\n        };\n    }\n}\n\nexport const fetchAndUpdateVacanciesCount = async (\n    dispatch: Dispatch<AnyAction>,\n    employerManagerId?: number\n): Promise<void> => {\n    try {\n        const response = await fetcher.get(VACANCIES_COUNT_URL, { params: { managerId: employerManagerId } });\n        dispatch(setVacanciesCount(response));\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport default autoGeneratedReducer<VacanciesCountState>(null);\n","import {\n    DriverLicenseType,\n    ChatWritePossibility,\n    WorkingDay,\n    WorkingTimeInterval,\n    WorkingTimeMode,\n} from '@hh.ru/types-hh-microcore';\n\nimport { CurrentVacancyAuctionData } from 'lux/models/auctionData';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport Language from 'lux/models/vacancy/languageLevel.types';\nimport Metallic, { MetallicVacancyTypeLower } from 'lux/models/vacancy/metallicVacancyType.types';\n/* tempexp_25221_next_line */\nimport { VacancyAdvice } from 'lux/models/vacancyCreate/vacancyAdvices.types';\nimport { VacancyProperties, Properties } from 'lux/models/vacancyProperties';\nimport NullableBoolean from 'lux/modules/types/nullableBoolean';\n\nexport interface EmployerManager {\n    hhid?: number;\n    userId?: number;\n    managerId: number;\n    firstName: string | null;\n    middleName: string | null;\n    lastName: string | null;\n}\n\nexport interface VacancyAdviceMarketSalary {\n    from: number;\n    to: number;\n}\n\nexport interface VacancyAdviceInfo {\n    advice: VacancyAdvice[];\n    marketSalary: VacancyAdviceMarketSalary;\n}\n\nexport interface Vacancy {\n    name: string;\n    metallic: MetallicVacancyTypeLower;\n    publicationType: Metallic;\n    languages: Language;\n    acceptIncompleteResumes: boolean;\n    acceptTemporary: boolean;\n    approved: boolean;\n    archivationTime: string | null;\n    archived: NullableBoolean;\n    area: {\n        id: number;\n        name: string;\n        path: string;\n    };\n    areaName: string;\n    autoRenewal: {\n        canBeEnabled: boolean;\n        nextUpdate: string | null;\n    };\n    calls: {\n        newMissed: number;\n        total: number;\n    };\n    canChangeClosureStatus: boolean;\n    canBeArchived: boolean;\n    canBeProlongated: boolean;\n    canBeShared: boolean;\n    canEnableAutoProlongation: boolean;\n    canShowMetallicUpgrade: boolean;\n    changeTime: null | string;\n    chatWritePossibility: ChatWritePossibility;\n    code: null | string;\n    comment: null | string;\n    company: {\n        badges: null | string;\n        category: string;\n        companySiteUrl: string;\n        countryId: number;\n        department: null | string;\n        employerOrganizationFormId: number;\n        id: number;\n        logos: null | string;\n        mainEmployerId: null | number;\n        name: string;\n        showOrganizationForm: boolean;\n        showSimilarVacancies: boolean;\n        state: string;\n        trusted: boolean;\n        visibleName: string;\n    };\n    companyUrl: null | string;\n    compensation: {\n        currencyCode: CurrencyType;\n        from: number;\n        gross: boolean;\n        noCompensation: boolean;\n        to: number;\n    };\n    contactInfo: {\n        callTrackingEnabled: NullableBoolean;\n        email: string;\n        fio: string;\n        phones: {\n            phones: {\n                blank: boolean;\n                city: number;\n                comment: string;\n                country: string;\n                number: string;\n            }[];\n        };\n    };\n    creationSite: string;\n    creationSiteId: number;\n    creationTime: number;\n    daysBeingPublic: null | string;\n    daysCountFromPublicationTime: string;\n    disabled: boolean;\n    displayHost: string;\n    driverLicenseTypes: DriverLicenseType[];\n    employerManager: EmployerManager;\n    expireTime: number;\n    forWorkingStaff: boolean;\n    freeRestoreExpireTime: null;\n    group: string;\n    hasHiringPlan?: boolean;\n    hrBrandInfo: null;\n    inboxPossibility: boolean;\n    isProlongateHighlight: string;\n    isPromoVacancy: boolean;\n    lastChangeTime: {\n        $: string;\n        '@timestamp': number;\n    };\n    links: {\n        desktop: string;\n        mobile: string;\n    };\n    negotiations: {\n        invitationsCount: number;\n        notProcessedResponsesCount: number;\n        responsesCount: number;\n        resumesInProgressCount: number;\n        topicsCount: number;\n        unreadDiscardAfterInterviewsCount: number;\n        unreadInvitationsCount: number;\n    };\n    notify: boolean;\n    ownerEmployerManagerHhid: number;\n    ownerEmployerManagerId: number;\n    publicationPartnerType: number;\n    publicationTime: number;\n    responseLetterRequired: boolean;\n    showContact: boolean;\n    suggestProlongate: boolean;\n    template: null;\n    userTestId: number;\n    vacancyId: number;\n    vacancyPlatforms: string[];\n    vacancyPremoderateStatus: string;\n    vacancyProperties: VacancyProperties;\n    properties: Properties;\n    viewCount: number;\n    workingDays: WorkingDay[];\n    workingTimeIntervals: WorkingTimeInterval[];\n    workingTimeModes: WorkingTimeMode[];\n    auctionData?: CurrentVacancyAuctionData;\n    professionalRoleIds: number[];\n    vacancyAdvice: VacancyAdviceInfo;\n}\n\nexport interface TopicAutoActionRules {\n    ruleExistenceByVacancyId: {\n        [vacancyId: number]: {\n            vacancyId: number;\n            ruleExists: boolean;\n        };\n    };\n}\n\nexport type ManagerId = number;\n\nexport interface VacanciesList {\n    activeVacanciesCount: number;\n    isAnyVacancyHasBrandingTemplate: boolean;\n    isAuctionPresent: boolean;\n    isCallsPresent: boolean;\n    vacancyOrder: string;\n    permissions: Record<string, Record<ManagerId, boolean>>;\n    list: Vacancy[];\n    topicAutoActionRules?: TopicAutoActionRules;\n}\n\nexport type PublicationsList = {\n    publicationType: string;\n    count: number;\n}[];\n\ninterface ShortVacancy {\n    id: number;\n    areas: { name: string; id: number; path: string }[];\n    completedFieldsPercentage: number;\n    employerServiceNotSpent: boolean;\n    isoLastChangeTime: string;\n    name: string;\n    publicationReady: boolean;\n    publicationType: null;\n    validationErrors: null;\n    insufficientQuotas: PublicationsList;\n    insufficientPublications: PublicationsList;\n    requiredPublications: PublicationsList;\n}\n\nexport type Drafts = ShortVacancy[];\n\nexport interface BillInfo {\n    billUid: string;\n    cartId: number;\n    draftId: string | null;\n}\n\nexport interface ManagerVacancies {\n    draftsTotalCount?: number;\n    drafts?: Drafts;\n    vacancies?: VacanciesList;\n    autoPublications?: {\n        list: ShortVacancy[];\n        billsByDrafts: BillInfo;\n    };\n    scheduledPublications?: {\n        list: ShortVacancy[];\n        publicationTime: {\n            draftId: string | null;\n            isoDateTimePublication: string;\n            gmt: string;\n        };\n    };\n    isFetching?: boolean;\n    error?: boolean;\n}\n\nexport const DEFAULT_FILTERS_VALUES = {\n    areaId: [],\n    employerManagerId: [],\n    vacancyMetallic: [],\n    vacancyType: [],\n    premoderateStatus: [],\n    vacancyName: '',\n};\n\nexport const ALL_VACANCIES_GROUP_ID = 'all';\nexport const VACANCIES_GROUPS_HEIGHT = 42;\n\nexport interface VacanciesFilters {\n    areaId: string[];\n    employerManagerId: string[];\n    vacancyMetallic: string[];\n    vacancyType: string[];\n    premoderateStatus: string[];\n    vacancyName: string;\n}\n\nexport interface AvailableVacanciesFilters {\n    areaId: Set<string> | null;\n    employerManagerId: Set<string> | null;\n    vacancyMetallic: Set<string> | null;\n    vacancyType: Set<string> | null;\n    premoderateStatus: Set<string> | null;\n}\n\nexport enum VacancyActionType {\n    NEUTRAL = 'neutral',\n    POSITIVE = 'positive',\n    NEGATIVE = 'negative',\n}\n\nexport enum VacancyPromotionType {\n    Auction = 'Auction',\n    Branding = 'Branding',\n    /* tempexp_25664_next_line */\n    ClickmeAutoCampaign = 'ClickmeAutoCampaign',\n}\n\nexport type LowActivityVacancy = Pick<\n    Vacancy,\n    'name' | 'vacancyId' | 'areaName' | 'publicationType' | 'negotiations'\n> & { employerManager: Vacancy['employerManager'] | null };\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface HiringPlanType {\n    id?: number;\n    hiredWithoutResumeCount?: number;\n    plannedCount?: number;\n    type?: 'NEW_HIRE' | 'REPLACEMENT';\n    plannedHireDate?: string;\n}\n\nexport const hiringPlanDefaultFormValue: HiringPlanType = {\n    plannedCount: 0,\n    type: 'NEW_HIRE',\n    plannedHireDate: '',\n};\n\nexport default autoGeneratedReducer<Record<string, HiringPlanType[]>>({});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { MetallicVacancyType } from 'lux/models/vacancy/metallicVacancyType.types';\nimport { PublicationTypePurchase } from 'lux/models/vacancyCreate/availablePublicationTypes';\n\nconst FETCH_VACANCY_UPGRADES_FAILED = 'FETCH_VACANCY_UPGRADES_FAILED';\nconst FETCH_VACANCY_UPGRADES_START = 'FETCH_VACANCY_UPGRADES_START';\nconst FETCH_VACANCY_UPGRADES_SUCCESS = 'FETCH_VACANCY_UPGRADES_SUCCESS';\n\nexport interface Upgrade {\n    canActivate: boolean;\n    canBuy: boolean;\n    canUpgrade: boolean;\n    metallic: MetallicVacancyType;\n    purchase: PublicationTypePurchase;\n    quotasExhausted: boolean;\n}\n\nexport interface BackUrl {\n    upgrade: string;\n    buy: string;\n}\n\ninterface VacancyUpgrade {\n    isFetching: boolean;\n    backurl?: BackUrl;\n    suitableUpgrades?: Upgrade[];\n}\n\ntype VacancyUpgrades = Record<number, VacancyUpgrade>;\n\ninterface PayloadTypes {\n    [FETCH_VACANCY_UPGRADES_FAILED]: number;\n    [FETCH_VACANCY_UPGRADES_START]: number;\n    [FETCH_VACANCY_UPGRADES_SUCCESS]: {\n        id: number;\n        data: VacancyUpgrade;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const fetchVacancyUpgradesFailed = actionCreator(FETCH_VACANCY_UPGRADES_FAILED);\nexport const fetchVacancyUpgradesStart = actionCreator(FETCH_VACANCY_UPGRADES_START);\nexport const fetchVacancyUpgradesSuccess = actionCreator(FETCH_VACANCY_UPGRADES_SUCCESS);\nexport const clearUpgradeInfo = actionCreator(FETCH_VACANCY_UPGRADES_FAILED);\n\nexport const INITIAL_STATE: VacancyUpgrades = {};\n\nexport default createReducer<VacancyUpgrades, PayloadTypes>(INITIAL_STATE, {\n    [FETCH_VACANCY_UPGRADES_FAILED]: (state, action) => ({\n        ...state,\n        [action.payload]: { isFetching: false },\n    }),\n    [FETCH_VACANCY_UPGRADES_START]: (state, action) => ({\n        ...state,\n        [action.payload]: { isFetching: true },\n    }),\n    [FETCH_VACANCY_UPGRADES_SUCCESS]: (state, action) => ({\n        ...state,\n        [action.payload.id]: { ...action.payload.data, isFetching: false },\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum CommonExtraFilter {\n    EmploymentFull = 'polnaya_zanyatost',\n    EmploymentPart = 'chastichnaya_zanyatost',\n    EmploymentProject = 'proektnaya_rabota',\n    ScheduleFlexible = 'gibkiy_grafik',\n    ScheduleFlyInFlyOut = 'vakhtoviy_metod',\n    ScheduleFullDay = 'polniy_den',\n    ScheduleShift = 'smenniy_grafik',\n}\n\nexport enum VacancyExtraFilter {\n    ExperienceNo = 'bez_opyta_raboty',\n    LabelAcceptHandicapped = 'rabota_dlya_invalidov',\n    LabelNotFromAgency = 'ot_pryamih_rabotodateley',\n    PartTime = 'podrabotka',\n    ScheduleRemote = 'udalennaya_rabota',\n    ScheduleSeasonalJob = 'sezonnaya_rabota',\n    SearchPeriodDay = 'za_sutki',\n    SearchPeriodThreeDays = 'za_poslednie_tri_dnya',\n}\n\nexport default autoGeneratedReducer<CommonExtraFilter[] | VacancyExtraFilter[]>([]);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst UPDATE_FINANCIAL_DOCUMENT_DEEDS = 'UPDATE_FINANCIAL_DOCUMENT_DEEDS';\n\ninterface Deed {\n    number?: string;\n    deedId: number;\n    serviceName?: string;\n    creationTime?: string;\n    payerInfo?: {\n        operator: string;\n        date: string;\n        payerName: string;\n        fio: string;\n        phone: string;\n        email: string;\n    };\n    // TODO Remove after HH-128466\n    bills?: { id: number; uid: string; fileUrlPdf: string }[];\n    price?: number;\n    currency?: string;\n    invoices?: Record<string, string>;\n    deedFileUrl?: string;\n    hardCopyState?: number;\n    requiredWorkFinished?: boolean;\n}\n\ninterface PayloadTypes {\n    [UPDATE_FINANCIAL_DOCUMENT_DEEDS]: Deed[];\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const updateFinancialDocumentDeedsAction = actionCreator(UPDATE_FINANCIAL_DOCUMENT_DEEDS);\n\nexport default createReducer<Deed[], PayloadTypes>([], {\n    [UPDATE_FINANCIAL_DOCUMENT_DEEDS]: (state, action) => {\n        const indexedDeeds = new Map(action.payload.map((deed) => [deed.deedId, deed]));\n\n        return state.map((deed) => indexedDeeds.get(deed.deedId) ?? deed);\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum GlobalStatisticsCategory {\n    Vacancies = 'vacancies',\n    Employers = 'employers',\n    Resumes = 'resumes',\n}\n\nexport default autoGeneratedReducer<{\n    [GlobalStatisticsCategory.Vacancies]: number;\n    [GlobalStatisticsCategory.Employers]: number;\n    [GlobalStatisticsCategory.Resumes]: number;\n}>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst SET_IS_RESUME_CARD_REDESIGN_ONBOARDING = 'SET_IS_RESUME_CARD_REDESIGN_ONBOARDING';\n\ntype PayloadTypes = {\n    [SET_IS_RESUME_CARD_REDESIGN_ONBOARDING]: boolean;\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const setIsResumeCardRedesignOnboarding = actionCreator(SET_IS_RESUME_CARD_REDESIGN_ONBOARDING);\n\nconst initialState = false;\n\nexport default createReducer<boolean, PayloadTypes>(initialState, {\n    [SET_IS_RESUME_CARD_REDESIGN_ONBOARDING]: (state, { payload }) => payload,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum Platform {\n    HeadHunter = 'HEADHUNTER',\n    Zarplata = 'ZARPLATA',\n}\n\nexport enum SiteLanguages {\n    RU = 'RU',\n    EN = 'EN',\n    AZ = 'AZ',\n    UA = 'UA',\n    KZ = 'KZ',\n    UZ = 'UZ',\n    KG = 'KG',\n}\n\nexport interface Locale {\n    areaId: string;\n    domainAreaId: string;\n    host: string;\n    protocolHost: string;\n    isSeoDomain: boolean;\n    platform: Platform;\n    availableLanguages: [`${SiteLanguages}`];\n    siteLanguage: SiteLanguages;\n}\n\nexport default autoGeneratedReducer<Locale>({\n    areaId: '',\n    domainAreaId: '',\n    host: '',\n    protocolHost: '',\n    isSeoDomain: false,\n    platform: Platform.HeadHunter,\n    availableLanguages: [SiteLanguages.RU],\n    siteLanguage: SiteLanguages.RU,\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum LoyaltySurveyType {\n    Adv = 'ADV',\n    Branding = 'BRANDING',\n    Clickme = 'CLICKME',\n    MainServices = 'MAIN_SERVICES',\n}\n\ninterface LoyaltySurvey {\n    id?: number;\n    showNotification: boolean;\n    showBanner: boolean;\n    type?: LoyaltySurveyType;\n    runSurvey: boolean;\n}\n\nconst RUN_LOYALTY_SURVEY = 'RUN_LOYALTY_SURVEY';\n\ninterface PayloadTypes {\n    [RUN_LOYALTY_SURVEY]: boolean;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const runLoyaltySurvey = actionCreator(RUN_LOYALTY_SURVEY);\n\nconst initialState = {\n    showNotification: false,\n    showBanner: false,\n    runSurvey: false,\n};\n\nexport default createReducer<LoyaltySurvey, PayloadTypes>(initialState, {\n    [RUN_LOYALTY_SURVEY]: (state, { payload }) => {\n        return { ...state, runSurvey: payload };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum MessengerType {\n    Telegram = 'TELEGRAM',\n    Viber = 'VIBER',\n    Whatsapp = 'WHATSAPP',\n}\n\nexport interface Messenger {\n    accountName: string;\n    city: string;\n    country: string;\n    messengerType: MessengerType;\n    number: string;\n}\n\nexport default autoGeneratedReducer<Messenger[]>([]);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum MicroFrontendServiceName {\n    SkillsSurveyFront = 'skillsSurveyFront',\n    EmployerReviewsFront = 'employerReviewsFront',\n    ApplicantServicesFront = 'applicantServicesFront',\n    MentorsFront = 'mentorsFront',\n    SupportFront = 'supportFront',\n    VrSurveyFront = 'vrSurveyFront',\n    ResumeProfileFront = 'resumeProfileFront',\n    SkillsFront = 'skillsFront',\n    BrandingFront = 'brandingFront',\n}\n\nexport type RemoteServiceName = 'skills_survey_front' | 'applicant_services_front' | 'support_front' | 'branding_front';\n\nexport interface SerivceInfo {\n    host: string;\n    url: string;\n    isSuccessSSR: boolean;\n    useSSRResult: boolean;\n    scripts?: string[];\n    styles?: string[];\n    globalServiceName: MicroFrontendServiceName;\n    remoteServiceName?: RemoteServiceName;\n    remoteEntry?: string;\n    inlineScript?: string;\n}\n\nexport type MicroFrontends = Record<string, SerivceInfo>;\n\nconst initialState = {};\nconst UPDATE_MICRO_FRONTENDS = 'UPDATE_MICRO_FRONTENDS';\nconst DELETE_MICRO_FRONTEND = 'DELETE_MICRO_FRONTEND';\n\ninterface PayloadTypes {\n    [UPDATE_MICRO_FRONTENDS]: MicroFrontends;\n    [DELETE_MICRO_FRONTEND]: string;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateMicroFrontends = actionCreator(UPDATE_MICRO_FRONTENDS);\nexport const deleteMicroFrontend = actionCreator(DELETE_MICRO_FRONTEND);\n\nexport default createReducer<MicroFrontends, PayloadTypes>(initialState, {\n    [UPDATE_MICRO_FRONTENDS]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n    [DELETE_MICRO_FRONTEND]: (state, { payload }) => {\n        return Object.entries(state)\n            .filter(([name]) => name !== payload)\n            .reduce((prev, [name, service]) => ({ ...prev, [name]: service }), {});\n    },\n});\n","import { Key } from 'react';\n\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION_BY_ID = 'REMOVE_NOTIFICATION_BY_ID';\nexport const REMOVE_NOTIFICATION_BY_TYPE = 'REMOVE_NOTIFICATION_BY_TYPE';\n\nexport interface StoredNotification {\n    type: string;\n    props?: Record<string, unknown>;\n    uniqueType: boolean;\n    id: Key;\n}\n\ninterface PayloadTypes {\n    [ADD_NOTIFICATION]: StoredNotification;\n    [REMOVE_NOTIFICATION_BY_ID]: Key;\n    [REMOVE_NOTIFICATION_BY_TYPE]: string | string[];\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const addNotificationAction = ActionCreator(ADD_NOTIFICATION);\nexport const removeNotificationByIdAction = ActionCreator(REMOVE_NOTIFICATION_BY_ID);\nexport const removeNotificationByTypeAction = ActionCreator(REMOVE_NOTIFICATION_BY_TYPE);\n\nexport const INITIAL_STATE = [];\n\nexport default createReducer<StoredNotification[], PayloadTypes>(INITIAL_STATE, {\n    [ADD_NOTIFICATION]: (state, action) => [action.payload, ...state],\n    [REMOVE_NOTIFICATION_BY_ID]: (state, action) => state.filter((notification) => notification.id !== action.payload),\n    [REMOVE_NOTIFICATION_BY_TYPE]: (state, action) => {\n        const notificationTypes = typeof action.payload === 'string' ? [action.payload] : action.payload;\n        return state.filter((notification) => !notificationTypes.includes(notification.type));\n    },\n});\n","import { ValueOf } from 'type-fest';\n\nimport { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\n\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport DriverLicenseOption from 'lux/models/driverLicense.types';\nimport { EducationLevel, Gender } from 'lux/models/resume/resumeCommon.types';\nimport { LabelOption as LabelOptionResume, RelocationOption } from 'lux/models/resumeSearchCriteria';\nimport {\n    CommonKeys,\n    CriteriaKey,\n    ExperienceOption,\n    PartTimeOption,\n    FilterExpPeriodOption,\n} from 'lux/models/search/searchCriteria.types';\nimport { LabelOption as LabelOptionVacancy, EducationOption } from 'lux/models/vacancySearchCriteria';\n\nexport const OTHER_ROLES_ID = '40';\n\n/**\n * Названия кластеров,\n * По сути тут только ключи, которые приходят в ored_clusters\n * объединенные для вакасий и для резюме\n */\nexport const NovaFilterKey = {\n    ...CommonKeys,\n    Age: 'age',\n    Company: 'company',\n    Compensation: 'compensation',\n    Etc: 'etc',\n    SubIndustry: 'subIndustry',\n    Neighbours: 'neighbours',\n    PartTime: 'part_time',\n    ShowClusters: 'showClusters',\n    VacancyId: 'vacancy_id',\n} as const;\n\nexport type NovaFilterKey = ValueOf<typeof NovaFilterKey>;\n\nexport enum MetroType {\n    Station = 'station',\n    Line = 'line',\n}\n\nexport enum Range {\n    From = 'from',\n    To = 'to',\n}\n\nexport interface NovaFilterGroup<T extends string | number> {\n    count: number;\n    id: T;\n    order?: number;\n    title: string;\n    disabled?: boolean;\n    [Range.From]?: number;\n    [Range.To]?: number;\n}\n\nexport type NovaFilterGroupMap<T extends string> = Record<T, NovaFilterGroup<T>>;\n\ninterface NovaFilter<SV, G extends string = string> {\n    selectedValues: SV;\n    groups: NovaFilterGroupMap<G>;\n}\n\ninterface NovaFilterWithNameGroup extends NovaFilterGroup<string> {\n    name: string;\n}\n\ntype NovaFilterWithNameGroupMap = Record<number, NovaFilterWithNameGroup>;\n\nexport interface NovaFilterCompany {\n    selectedValues: number[];\n    groups: NovaFilterWithNameGroupMap;\n}\n\nexport interface NovaFilterVacancyId {\n    selectedValues: number[];\n    groups: NovaFilterWithNameGroupMap;\n}\n\nexport interface NovaFilterIndustryGroup extends NovaFilterGroup<string> {\n    industryId: string;\n}\n\nexport type NovaFilterIndustryGroupMap = Record<string, NovaFilterIndustryGroup>;\n\ninterface NovaFilterIndustry {\n    selectedValues: string[];\n    groups: NovaFilterIndustryGroupMap;\n}\n\nexport interface NovaFilterMetroGroup extends NovaFilterGroup<string> {\n    color: string;\n    type: MetroType;\n    cityId?: string;\n    lat?: string;\n    lineId?: string;\n    lng?: string;\n    stationId?: string;\n    stationOrder?: string;\n    translit?: string;\n}\n\nexport type NovaFilterMetroGroupMap = Record<string, NovaFilterMetroGroup>;\n\ninterface NovaFilterMetro {\n    selectedValues: string[];\n    groups: NovaFilterMetroGroupMap;\n}\n\nexport interface NovaFilterRange {\n    [Range.From]?: string | number | null;\n    [Range.To]?: string | number | null;\n    onlyWith?: boolean;\n}\n\nexport interface NovaFilterRangeConvertedToStrings {\n    [Range.From]: string;\n    [Range.To]: string;\n    onlyWith?: boolean;\n}\n\nexport interface NovaFilterGender {\n    value: Gender;\n    onlyWith: boolean;\n}\n\nexport interface NovaFilterCompensation {\n    salary: string | null;\n    onlyWithSalary: boolean;\n}\n\nexport interface NovaListFilters {\n    [NovaFilterKey.District]: NovaFilter<number[]>;\n    [NovaFilterKey.Employment]: NovaFilter<EmploymentLower[], EmploymentLower>;\n    [NovaFilterKey.Company]: NovaFilterCompany;\n    [NovaFilterKey.EducationLevel]: NovaFilter<string[], EducationLevel>;\n    [NovaFilterKey.Experience]: NovaFilter<string[], ExperienceOption>;\n    [NovaFilterKey.JobSearchStatus]: NovaFilter<JobSearchStatus[], JobSearchStatus>;\n    [NovaFilterKey.Label]: NovaFilter<\n        (LabelOptionVacancy | LabelOptionResume)[],\n        LabelOptionVacancy | LabelOptionResume\n    >;\n    [NovaFilterKey.Neighbours]: NovaFilter<string[]>;\n    [NovaFilterKey.Resume]: NovaFilter<string[]>;\n    [NovaFilterKey.Schedule]: NovaFilter<ScheduleCamelCase[], ScheduleCamelCase>;\n    [NovaFilterKey.VacancyId]: NovaFilterVacancyId;\n    [NovaFilterKey.VerifiedSkills]: NovaFilter<number[]>;\n    [NovaFilterKey.VerifiedLanguages]: NovaFilter<string[]>;\n    [NovaFilterKey.PartTime]: NovaFilter<PartTimeOption[], PartTimeOption>;\n    [NovaFilterKey.DriverLicenseTypes]: NovaFilter<DriverLicenseOption[]>;\n}\n\nexport interface NovaFilters extends NovaListFilters {\n    [NovaFilterKey.AcceptTemporary]: NovaFilter<boolean>;\n    [NovaFilterKey.Age]: NovaFilter<NovaFilterRange>;\n    [NovaFilterKey.Area]: NovaFilter<number[]>;\n    [NovaFilterKey.Compensation]: NovaFilter<NovaFilterCompensation>;\n    [NovaFilterKey.University]: NovaFilter<number[]>;\n    [NovaFilterKey.Education]: NovaFilter<EducationOption[], EducationOption>;\n    [NovaFilterKey.ExcludedText]: NovaFilter<string[]>;\n    [NovaFilterKey.FilterExpIndustry]: NovaFilter<string[]>;\n    [NovaFilterKey.FilterExpPeriodForIndustry]: NovaFilter<FilterExpPeriodOption, FilterExpPeriodOption>;\n    [NovaFilterKey.Gender]: NovaFilter<NovaFilterGender, Gender>;\n    [NovaFilterKey.Industry]: NovaFilterIndustry;\n    [NovaFilterKey.Metro]: NovaFilterMetro;\n    [NovaFilterKey.Relocation]: NovaFilter<RelocationOption, RelocationOption>;\n    [NovaFilterKey.Salary]: NovaFilter<NovaFilterRange>;\n    [NovaFilterKey.SubIndustry]: NovaFilterIndustry;\n    [NovaFilterKey.ProfessionalRole]: NovaFilter<string[]>;\n    [NovaFilterKey.Citizenship]: NovaFilter<string[]>;\n    [NovaFilterKey.WorkTicket]: NovaFilter<string[]>;\n    [NovaFilterKey.Etc]: NovaFilter<{ [CriteriaKey.ExpCompanySize]?: string[] }>;\n    [NovaFilterKey.Language]: NovaFilter<string[]>;\n\n    [NovaFilterKey.SearchDebug]: NovaFilter<object>;\n    [NovaFilterKey.SearchField]: NovaFilter<object>;\n    [NovaFilterKey.ShowClusters]: NovaFilter<object>;\n    [NovaFilterKey.Skill]: NovaFilter<object>;\n}\n\nexport default NovaFilters;\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { UpdateType } from 'lux/components/IndexPageEmployer/components/Updates/constants';\n\nconst MARK_UPDATE_VIEWED = 'MARK_UPDATE_VIEWED';\n\ninterface EmployerUpdate {\n    type: UpdateType;\n    href: string;\n    text: string;\n    date?: string;\n    viewed: boolean;\n}\n\ninterface PayloadTypes {\n    [MARK_UPDATE_VIEWED]: Pick<EmployerUpdate, 'href'>;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const markUpdateViewed = actionCreator(MARK_UPDATE_VIEWED);\n\nexport default createReducer<EmployerUpdate[], PayloadTypes>([], {\n    [MARK_UPDATE_VIEWED]: (state, { payload }) =>\n        state.map((update) =>\n            update.href === payload.href\n                ? {\n                      ...update,\n                      viewed: true,\n                  }\n                : update\n        ),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst SHOW_PICK_VACANCY_MODAL = 'SHOW_PICK_VACANCY_MODAL';\n\nexport interface PickVacancyOnResumeSearch {\n    isBannerShow?: boolean;\n    isEnablePickVacancy?: boolean;\n    isShowModal?: boolean;\n}\n\ninterface PayloadTypes {\n    [SHOW_PICK_VACANCY_MODAL]: boolean;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const showPickVacancyModal = actionCreator(SHOW_PICK_VACANCY_MODAL);\n\nexport default createReducer<PickVacancyOnResumeSearch, PayloadTypes>(\n    {},\n    {\n        [SHOW_PICK_VACANCY_MODAL]: (state, { payload }) => ({\n            ...state,\n            isShowModal: payload,\n        }),\n    }\n);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { ModelData } from 'bloko/common/tree/types';\n\nimport { RegionsListAdditional } from 'lux/components/Price/RegionSelectorPopup/RegionsList';\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport PriceCountryCode from 'lux/models/price/priceCountryCode';\n\nexport enum PriceDataTab {\n    Recommended = 'recommended',\n    Dbaccess = 'dbaccess',\n    AddContacts = 'add-contacts',\n    RegionalPublications = 'regional-publications',\n    Clickme = 'clickme',\n    Branding = 'branding',\n    EmployerBrand = 'employerbrand',\n    Publications = 'publications',\n    ZpPublications = 'zp-publications',\n    ZpResumeAccess = 'zp-resume-access',\n    ZpBundles = 'zp-bundles',\n    ZpPromotion = 'zp-promotion',\n    ZpPriceBackOffice = 'zp-price-backoffice',\n    ProfrolesPublications = 'profroles-publications',\n}\n\nexport interface PriceData {\n    currency: CurrencyType;\n    allPriceRegions?: ModelData<RegionsListAdditional>[];\n    allProfRoleGroups?: ModelData[];\n    priceCountryCode: PriceCountryCode;\n    priceEmployerId?: string;\n    priceRegionId: string;\n    priceTabs: {\n        items: PriceDataTab[];\n        urls: Record<string, string>;\n        activeTabName?: PriceDataTab;\n    };\n    customerStatus?: {\n        maxDiscountPercent: number;\n    };\n    showDiscountEditor: boolean;\n    isContactUsBlockEnabled: boolean;\n    canBuyServices: boolean;\n}\n\nexport default autoGeneratedReducer<PriceData>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum EmployerBrandItemTypes {\n    Inside = 'employerbrand-inside',\n    Advit = 'employerbrand-advit',\n    PartnerPost = 'employerbrand-partnerpost',\n    Scan = 'employerbrand-scan',\n    Creation = 'employerbrand-creation',\n    Activation = 'employerbrand-activation',\n    Kakdela = 'employerbrand-kakdela',\n}\n\ninterface EmployerBrandItem {\n    type: EmployerBrandItemTypes;\n    detailsUrl: string;\n    downloadUrl?: string;\n}\n\ninterface PriceEmployerBrand {\n    items: EmployerBrandItem[];\n}\n\nexport default autoGeneratedReducer<PriceEmployerBrand>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport { PriceRecommendedBargain } from 'lux/models/price/priceBargain';\nimport { DBAccessProductType, PublicationProductType } from 'lux/models/price/product.types';\n\nexport enum RecommendedPriceItemType {\n    Bargain = 'bargain',\n    HHRating = 'hhrating',\n    Kakdela = 'kakdela',\n    PromoVacancy = 'promo-vacancy',\n    Talantix = 'talantix',\n    HrSpace = 'hr-space',\n    VideoInterview = 'video-interview',\n}\n\nexport enum RecommendedTabVariants {\n    Classic = 'CLASSIC',\n    Landing = 'LANDING',\n}\n\ninterface PriceRecommendedPageState {\n    type: RecommendedTabVariants;\n    recommendedPrices: {\n        dbAccessPrice: DBAccessProductType & { regionTrl: string };\n        publicationPrice: PublicationProductType;\n    } | null;\n    bargains: PriceRecommendedBargain[];\n    hhRatingPromo: boolean;\n    talantixPromo: boolean;\n    hrSpacePromo: boolean;\n    kakdelaPromo: boolean;\n    videointerviewPromo: boolean;\n    promoVacancy: {\n        enabled: boolean;\n        currency?: CurrencyType;\n        title?: string;\n        description?: string;\n        picturePath?: string;\n        url: string;\n    };\n}\n\nexport default autoGeneratedReducer<PriceRecommendedPageState>(null);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\nimport { YearMonthDayString } from 'bloko/blocks/calendar/datesHelper';\n\nimport { StartAfterPayment, TariffProductType } from 'lux/models/price/product.types';\nimport { ZpTariff } from 'lux/models/price/zpTariff';\n\nexport const UNLIMITED_RESUME_THRESHOLD = 10000;\n\nexport enum ZpTabName {\n    ZpResumeAccess = 'zp-resume-access',\n    ZpPublications = 'zp-publications',\n    ZpBundles = 'zp-bundles',\n    ZpPromotion = 'zp-promotion',\n}\n\nexport enum ZpProductFields {\n    Period = 'period',\n    CivCount = 'civCount',\n    ProfRoleGroup = 'profRoleGroup',\n    BusinessCount = 'businessCount',\n    PromoCount = 'promoCount',\n    AnonymousCount = 'anonymousCount',\n    ActivationDate = 'activationDate',\n    OptionCount = 'optionCount',\n}\n\nexport interface ZpProductParams {\n    [ZpProductFields.Period]?: number;\n    [ZpProductFields.CivCount]?: number;\n    [ZpProductFields.ProfRoleGroup]?: string;\n    [ZpProductFields.BusinessCount]?: number;\n    [ZpProductFields.PromoCount]?: number;\n    [ZpProductFields.AnonymousCount]?: number;\n    [ZpProductFields.ActivationDate]?: YearMonthDayString | StartAfterPayment;\n    [ZpProductFields.OptionCount]?: number;\n}\n\nexport const publicationsCountFields = [\n    ZpProductFields.BusinessCount,\n    ZpProductFields.PromoCount,\n    ZpProductFields.AnonymousCount,\n];\n\nexport type FieldName = keyof ZpProductParams;\n\nexport interface DescriptorField {\n    name: FieldName;\n    values?: string[];\n    default: string;\n    minValue?: YearMonthDayString;\n    maxValue?: YearMonthDayString;\n}\n\nexport interface Tariff {\n    tariffName: ZpTariff;\n    backoffice: boolean;\n    fieldNames: FieldName[];\n    fields: Record<FieldName, DescriptorField>;\n    product: TariffProductType | null;\n    loading: boolean;\n    params: ZpProductParams;\n    translations: { title: string };\n}\n\nexport interface PriceZP {\n    tabName: ZpTabName;\n    tariffNames: ZpTariff[];\n    tariffs: Record<ZpTariff, Tariff>;\n    backofficeTariffNames: ZpTariff[];\n    backofficeTariffs: Record<ZpTariff, Tariff>;\n}\n\nconst UPDATE_ZP_TARIFF = 'UPDATE_ZP_TARIFF';\n\ninterface PayloadTypes {\n    [UPDATE_ZP_TARIFF]: {\n        tariffName: ZpTariff;\n        isBackoffice: boolean;\n        params?: ZpProductParams;\n        loading?: boolean;\n        product?: TariffProductType | null;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateZpTariff = actionCreator(UPDATE_ZP_TARIFF);\n\nexport default createReducer<PriceZP, PayloadTypes>(null, {\n    [UPDATE_ZP_TARIFF]: (state, { payload: { tariffName, isBackoffice, params, loading, product } }) => {\n        const tariff = isBackoffice ? state.backofficeTariffs[tariffName] : state.tariffs[tariffName];\n        const newParams = params ?? tariff.params;\n        const newProduct = product ?? tariff.product;\n        const newLoading = loading ?? tariff.loading;\n        const updatedTariff = { ...tariff, params: newParams, product: newProduct, loading: newLoading };\n        return isBackoffice\n            ? {\n                  ...state,\n                  backofficeTariffs: {\n                      ...state.backofficeTariffs,\n                      [tariffName]: updatedTariff,\n                  },\n              }\n            : {\n                  ...state,\n                  tariffs: {\n                      ...state.tariffs,\n                      [tariffName]: updatedTariff,\n                  },\n              };\n    },\n});\n","/**\n * Коды service\n * https://wiki.hh.ru/pages/viewpage.action?pageId=334867428\n */\nexport enum ServiceCode {\n    /** Докупка */\n    Add = 'ADD',\n    /** Bundle. Поконтактный доступ и публикации стандарт. Всегда содержит CIV и VP */\n    ContactsViewWithStandart = 'CIV+VPPL',\n    /** Просто заглушка (технический код), может содержать под собой практически любой service_item */\n    Disposable = 'DI',\n    /** Безлимитный доступ к базе резюме */\n    FullAccess = 'FA',\n    /** Bundle. Безлимитный доступ к базе резюме с публикациями стандарт */\n    FullAccessWithStandart = 'FA+VPPL',\n    /** Публикации с ограничением по регионам и проф. областям */\n    LimitedVacancy = 'VPPL',\n    /** Резервация */\n    Reservation = 'RESERVATION',\n    /** Пакеты услуг */\n    Bundle = 'BUNDLE',\n    /** Конструктор страницы вакансий */\n    BrandingBuilderVacancy = 'VBC',\n    /** Конструктор страницы вакансии */\n    BrandingBuilderPage = 'Z1',\n    /** Брендированная страница вакансии */\n    BrandingVacancy = 'Z5',\n    /** Брендированная страница работодателя */\n    BrandingPageCompany = 'Z6',\n    /** Брендированный шаблон письма */\n    BrandingMailTemplate = 'Z2B',\n    /** Билеты на HR-мероприятия */\n    ZpEvent = 'ZP_EVENT',\n}\n\n/**\n * Коды service_item\n * https://wiki.hh.ru/pages/viewpage.action?pageId=334867428\n */\nexport enum ServiceItemCode {\n    /** Рекламные публикации */\n    Advertizing = 'ADN',\n    /** Анонимные публикации */\n    Anonymous = 'AP',\n    /** Доступ к API */\n    ApiLimited = 'API_LIMITED',\n    /** Просмотр контактов резюме */\n    ContactsView = 'CIV',\n    /** Динамический тест числовых способностей */\n    DynamicTestOfNumericalAbilities = 'TEST_SHL_MATH',\n    /** Динамический тест вербальных способностей */\n    DynamicTestOfVerbalAbilities = 'TEST_SHL_VERB',\n    Clickme = 'CLKM',\n    /** Бесплатные публикации в регионах */\n    FreeRegionalVacancy = 'RFPN',\n    /** Публикации премиум */\n    Premium = 'VPREM',\n    /** Выборка */\n    ResumeSelection = 'VSIM',\n    /** Открытие контактов резюме (устаревшее) */\n    ResumeView = 'RVC',\n    /** Публикации стандарт */\n    Standart = 'VP',\n    /** Публикации стандарт+ */\n    StandartPlus = 'RENEWAL_VP',\n    /** Опросник выявления универсальных компетенций */\n    UniversalCompetencyQuestionnaire = 'TEST_SHL_OPQ',\n    /** Видеоинтервью */\n    VideoInterview = 'VIDEO_INTVW',\n    /** Публикация на «Зарплата.ру» */\n    ZpCrosspost = 'ZP_CROSSPOST',\n    /** Публикация «Промо» на «Зарплата.ру» */\n    ZpPromo = 'ZP_PROMO',\n    /** Публикация «Бизнес» на «Зарплата.ру» */\n    ZpBusiness = 'ZP_BUSINESS',\n    /** Анонимная публикация на «Зарплата.ру» */\n    ZpAnonymous = 'ZP_ANONYMOUS',\n    /** Публикация «Демо» на «Зарплата.ру» */\n    ZpDemo = 'ZP_DEMO',\n    /** Опции */\n    OptionPremium = 'OPTION_PREMIUM',\n    /** Конструктор вакансий базовый */\n    VacancyBuilderBasic = 'VBC_BASIC',\n}\n\nexport const additionalPurchaseCodes = [ServiceCode.Add, ServiceCode.Reservation] as const;\nexport const publicationsCodes = [\n    ServiceItemCode.Standart,\n    ServiceItemCode.StandartPlus,\n    ServiceItemCode.Premium,\n    ServiceItemCode.Anonymous,\n    ServiceItemCode.Advertizing,\n    ServiceItemCode.FreeRegionalVacancy,\n    ServiceItemCode.ZpPromo,\n    ServiceItemCode.ZpBusiness,\n    ServiceItemCode.ZpAnonymous,\n    ServiceItemCode.ZpDemo,\n];\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\nimport { ModelData, AdditionalDefault } from 'bloko/common/tree/types';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { PublicationProductType } from 'lux/models/price/product.types';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nconst priceProfRolesPublicationsCodes = [\n    ServiceItemCode.Standart,\n    ServiceItemCode.StandartPlus,\n    ServiceItemCode.Premium,\n    ServiceItemCode.Anonymous,\n] as const;\n\nexport type PriceProfRolesPublicationsCodesType = (typeof priceProfRolesPublicationsCodes)[number];\n\nexport interface PurchaseInfo {\n    products: PublicationProductType[];\n    price: number;\n    currency: CurrencyType;\n    discount: {\n        fullPrice: number;\n        profitPercent: number;\n    };\n}\n\nexport enum Variant {\n    Single = 'single',\n    Package = 'package',\n}\n\nexport interface CountInfo {\n    info?: string;\n    value: number;\n}\n\nexport interface Scope {\n    profRoleGroupId: string | null;\n    priceRegionId: string;\n    count: number;\n}\n\ninterface VariantInfo {\n    defaultCounts: CountInfo[];\n    defaultScope: Scope;\n    scopes: Scope[];\n}\n\nexport interface ProfRoleGroupAdditional extends AdditionalDefault {\n    includedProfRoleGroupsTrl: string;\n    rolesQuantity: number;\n}\n\nexport interface PriceProfRolesPublicationsType {\n    amountNoticeCount: number;\n    counts?: Record<string, CountInfo[]>;\n    defaultProfRoleGroupInHint: string[];\n    loading: boolean;\n    profRoleGroupNotFoundSubstituteIds: string[];\n    profRoleGroupTree: ModelData<ProfRoleGroupAdditional>[];\n    profRoleGroupTrls: string[];\n    purchasesByCode: Record<PriceProfRolesPublicationsCodesType, PurchaseInfo> | null;\n    regionalThreshold: number;\n    regions: ModelData[];\n    regionPreTrls: string[];\n    regionTrls: string[];\n    variant: Variant;\n    variants: Record<Variant, VariantInfo>;\n    variantsOrder: Variant[];\n    zpCrossPostAvailable: boolean;\n    zpCrossPostChecked: boolean | null;\n    // Попап с информацией о появлении разных цен на профроли\n    onboardingPopup: {\n        visible: boolean;\n        name: string;\n    };\n    // tempexp_26111_start\n    expData?: {\n        shouldCheckExp: boolean;\n        priceOfTenStandard: number | undefined;\n    };\n    // tempexp_26111_end\n}\n\nconst UPDATE_TAB_DATA = 'UPDATE_TAB_DATA';\nconst ADD_SCOPE = 'ADD_SCOPE';\nconst DELETE_SCOPE = 'DELETE_SCOPE';\nconst UPDATE_SCOPE = 'UPDATE_SCOPE';\nconst UPDATE_COUNTS = 'UPDATE_COUNTS';\n\ninterface PayloadPriceProfRolesPublicationsType {\n    [UPDATE_TAB_DATA]: Partial<PriceProfRolesPublicationsType>;\n    [ADD_SCOPE]: void;\n    [DELETE_SCOPE]: number;\n    [UPDATE_SCOPE]: {\n        index: number;\n        updatedScope: Scope;\n        variant: Variant;\n    };\n    [UPDATE_COUNTS]: Record<string, CountInfo[]>;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadPriceProfRolesPublicationsType>();\nexport const updateTabData = actionCreator(UPDATE_TAB_DATA);\nexport const addScope = actionCreator(ADD_SCOPE);\nexport const deleteScope = actionCreator(DELETE_SCOPE);\nexport const updateScope = actionCreator(UPDATE_SCOPE);\nexport const updateCounts = actionCreator(UPDATE_COUNTS);\n\nexport default createReducer<PriceProfRolesPublicationsType, PayloadPriceProfRolesPublicationsType>(null, {\n    [UPDATE_TAB_DATA]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n    [ADD_SCOPE]: (state) => {\n        const variantInfo = state.variants[Variant.Single];\n        const lastAddedScope = variantInfo.scopes[variantInfo.scopes.length - 1];\n        const scopes = [\n            ...variantInfo.scopes,\n            { ...variantInfo.defaultScope, priceRegionId: lastAddedScope.priceRegionId },\n        ];\n        return { ...state, variants: { ...state.variants, [Variant.Single]: { ...variantInfo, scopes } } };\n    },\n    [DELETE_SCOPE]: (state, { payload: index }) => {\n        const variantInfo = state.variants[Variant.Single];\n        variantInfo.scopes.splice(index, 1);\n        return {\n            ...state,\n            variants: { ...state.variants, [Variant.Single]: { ...variantInfo, scopes: [...variantInfo.scopes] } },\n        };\n    },\n    [UPDATE_SCOPE]: (state, { payload: { index, updatedScope, variant } }) => {\n        const variantInfo = state.variants[variant];\n        variantInfo.scopes[index] = updatedScope;\n        return {\n            ...state,\n            variants: { ...state.variants, [variant]: { ...variantInfo, scopes: [...variantInfo.scopes] } },\n        };\n    },\n    [UPDATE_COUNTS]: (state, { payload }) => {\n        return {\n            ...state,\n            counts: { ...state.counts, ...payload },\n        };\n    },\n});\n","import createReducer from '@hh.ru/redux-create-reducer';\nimport { SuggestPickerItemType } from 'bloko/blocks/suggest/SuggestPicker';\nimport { ModelData } from 'bloko/common/tree/types';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { WrongPeriodType, ProductIdType, PublicationProductType, RegionIdType } from 'lux/models/price/product.types';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nconst pricePublicationsCodes = [\n    ServiceItemCode.Standart,\n    ServiceItemCode.StandartPlus,\n    ServiceItemCode.Premium,\n    ServiceItemCode.Anonymous,\n] as const;\n\nexport type PricePublicationsCodesType = (typeof pricePublicationsCodes)[number];\n\nexport interface PriceRegionalPublicationsType {\n    regions: ModelData[];\n    products: Record<ProductIdType, PublicationProductType>;\n    productsByCode: Record<PricePublicationsCodesType, ProductIdType>;\n    pricesByCount: Record<PricePublicationsCodesType, Record<string, number>>;\n    regionalThreshold: number;\n    publicationsAmount: number;\n    priceRegion: RegionIdType;\n    publicationPeriod: WrongPeriodType;\n    zpCrossPostAvailable: boolean;\n    zpCrossPostChecked: boolean;\n    currency: CurrencyType;\n}\n\nexport type PricesByCountType = Record<string, number>;\n\nexport interface AmountPickerItemType extends SuggestPickerItemType {\n    additional: { amount: number; price: number };\n}\n\ntype TabPartialType = Partial<PriceRegionalPublicationsType>;\n\ninterface UpdateTabDataAction {\n    type: typeof UPDATE_TAB_DATA;\n    payload: TabPartialType;\n}\n\nconst UPDATE_TAB_DATA = 'UPDATE_TAB_DATA';\n\ninterface PayloadTypes {\n    [UPDATE_TAB_DATA]: TabPartialType;\n}\n\nconst updateTabData = (newTabData: TabPartialType): UpdateTabDataAction => ({\n    type: UPDATE_TAB_DATA,\n    payload: newTabData,\n});\n\nexport const setPublicationsAmount = (publicationsAmount: number): UpdateTabDataAction =>\n    updateTabData({ publicationsAmount });\n\nexport const setPriceRegion = (priceRegion: string): UpdateTabDataAction => updateTabData({ priceRegion });\n\nexport const setZpCrossPost = (zpCrossPostChecked: boolean): UpdateTabDataAction =>\n    updateTabData({ zpCrossPostChecked });\n\nexport const setProductsData = (productsData: TabPartialType): UpdateTabDataAction => updateTabData(productsData);\n\nexport default createReducer<PriceRegionalPublicationsType, PayloadTypes>(null, {\n    [UPDATE_TAB_DATA]: (state, { payload }) => {\n        return { ...state, ...payload };\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ClickmeProductType, ProductIdType } from 'lux/models/price/product.types';\n\nexport enum FormComponent {\n    InputString = 'INPUT_STRING',\n    InputBigString = 'INPUT_BIG_STRING',\n    InputPeriod = 'INPUT_PERIOD',\n    InputDate = 'INPUT_DATE',\n    InputStartWeek = 'INPUT_START_WEEK',\n}\n\nexport enum Params {\n    Link = 'link',\n    Date = 'date',\n    Regions = 'regions',\n    Period = 'period',\n    Targeting = 'targeting',\n}\n\nexport enum ServiceInputType {\n    VacancyLink = 'INPUT_TYPE_VACANCY_LINK',\n    StartWeek = 'INPUT_TYPE_START_WEEK',\n    AdvRegions = 'INPUT_TYPE_ADV_REGIONS',\n    PageLink = 'INPUT_TYPE_PAGE_LINK',\n    Period = 'INPUT_TYPE_PERIOD',\n    BannerTargettiong = 'INPUT_TYPE_BANNER_TARGETING',\n    MailingDate = 'INPUT_TYPE_MAILING_DATE',\n    MailingRegion = 'INPUT_TYPE_MAILING_REGION',\n    MailingTargetting = 'INPUT_TYPE_MAILING_TARGETING',\n    PostDate = 'INPUT_TYPE_POST_DATE',\n}\n\ntype FormItem = {\n    code: ServiceInputType;\n} & (\n    | {\n          component: FormComponent.InputString;\n          param: Params.Regions | Params.Link;\n      }\n    | {\n          component: FormComponent.InputBigString;\n          param: Params.Targeting;\n      }\n    | {\n          component: FormComponent.InputPeriod;\n          param: Params.Period;\n      }\n    | {\n          component: FormComponent.InputStartWeek;\n          param: Params.Date;\n      }\n    | {\n          component: FormComponent.InputDate;\n          param: Params.Date;\n      }\n);\n\ninterface Body {\n    [Params.Link]: string;\n    [Params.Date]: string;\n    [Params.Regions]: string;\n    [Params.Period]: { start: string; end: string };\n    [Params.Targeting]: string;\n}\n\nexport interface CardConfig {\n    formConfig: FormItem[];\n    initBody: Body;\n}\n\ninterface PriceItemDescription {\n    paragraph: string;\n    list?: string[];\n}\n\nexport enum PriceItemCode {\n    Clickme = 'clickme',\n    VacancyOfTheDay = 'vacancy_of_the_day',\n    SmsSubscription = 'sms_subscription',\n    EmailSubscription = 'email_subscription',\n    Telegram = 'telegram',\n    Social = 'social',\n    CompanyOfTheDay = 'company_of_the_day',\n    Banners = 'banners',\n}\n\nexport interface PriceItem {\n    code: PriceItemCode;\n    title: { main: string; form: string };\n    description: PriceItemDescription[];\n    price?: { min?: number; value: number };\n    cardConfig: CardConfig;\n    notification: string;\n}\n\nexport interface PriceClickmeProducts {\n    products?: Record<ProductIdType, ClickmeProductType>;\n    countProductsByCode?: Record<string, Record<string, string>>;\n    items?: PriceItem[];\n    minValue: number;\n    linkPriceList?: string;\n}\n\nexport default autoGeneratedReducer<PriceClickmeProducts>({} as PriceClickmeProducts);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\ninterface PrintVersion {\n    followLetter?: boolean;\n    comments?: boolean;\n    history?: boolean;\n    isPrintVersion?: boolean;\n    industries?: boolean;\n}\n\nconst INITIAL_STATE: PrintVersion = {};\nconst CHANGE_VIEW = 'printVersion/changeView';\n\ninterface PayloadTypes {\n    [CHANGE_VIEW]: PrintVersion;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const changeView = actionCreator(CHANGE_VIEW);\n\nexport default createReducer<PrintVersion, PayloadTypes>(INITIAL_STATE, {\n    [CHANGE_VIEW]: (state, action) => ({ ...state, ...action.payload }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { RelatedVacanciesType } from 'lux/components/RelatedVacancies/relatedVacanciesTypes';\n\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nconst PUSH_RELATED_VACANCIES = 'PUSH_RELATED_VACANCIES';\n\nexport interface RelatedVacancies {\n    itemsOnPage?: number;\n    resultsFound?: number;\n    totalPages?: number;\n    type?: RelatedVacanciesType;\n    lastActivityTimeByHHID?: Record<string, { dt: string }>;\n    vacancies: VacancySearchItem[];\n}\n\nconst INITIAL_STATE: RelatedVacancies = {\n    vacancies: [],\n};\n\ninterface PayloadTypes {\n    [PUSH_RELATED_VACANCIES]: VacancySearchItem[];\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const pushRelatedVacanciesAction = actionCreator(PUSH_RELATED_VACANCIES);\n\nexport default createReducer<RelatedVacancies, PayloadTypes>(INITIAL_STATE, {\n    [PUSH_RELATED_VACANCIES]: (state, action) => ({\n        ...state,\n        vacancies: [...state.vacancies, ...(action.payload ?? [])],\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { RelatedVacancies } from 'lux/models/relatedVacancies';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nconst PUSH_RELATED_EMPLOYER_VACANCIES = 'PUSH_RELATED_EMPLOYER_VACANCIES';\n\nconst INITIAL_STATE: RelatedVacancies = {\n    vacancies: [],\n};\n\ninterface PayloadTypes {\n    [PUSH_RELATED_EMPLOYER_VACANCIES]: VacancySearchItem[];\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const pushRelatedVacanciesForEmployerAction = actionCreator(PUSH_RELATED_EMPLOYER_VACANCIES);\n\nexport default createReducer<RelatedVacancies, PayloadTypes>(INITIAL_STATE, {\n    [PUSH_RELATED_EMPLOYER_VACANCIES]: (state, action) => ({\n        ...state,\n        vacancies: [...state.vacancies, ...(action.payload ?? [])],\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Resume } from 'lux/models/resume/resume.types';\nimport { ResumeAccessType } from 'lux/models/resume/resumeAccess.types';\nimport { Phone } from 'lux/models/resume/resumeCommon.types';\n\nconst RESUME = 'RESUME';\nconst RESUME_UPDATED = 'RESUME_UPDATED';\nconst RESUME_ACCESS_TYPE = 'RESUME_ACCESS_TYPE';\nconst RESUME_CHANGE_KEY_SKILL = 'RESUME_CHANGE_KEY_SKILL';\nconst RESUME_UPDATE_CONTACT_PHONES = 'RESUME_UPDATE_CONTACT_PHONES';\nconst RESUME_SET_AUTO_VOTE_SKILL = 'RESUME_SET_AUTO_VOTE_SKILL';\nconst RESUME_SET_TO_UPDATE_VALUE_ACTION = 'RESUME_SET_TO_UPDATE_VALUE_ACTION';\ninterface PayloadTypes {\n    [RESUME]: Resume;\n    [RESUME_UPDATED]: { updated: number };\n    [RESUME_ACCESS_TYPE]: { accessType: ResumeAccessType };\n    [RESUME_UPDATE_CONTACT_PHONES]: Phone[];\n    [RESUME_CHANGE_KEY_SKILL]: { skillId: number; increased: boolean };\n    [RESUME_SET_AUTO_VOTE_SKILL]: { skillId: number };\n    [RESUME_SET_TO_UPDATE_VALUE_ACTION]: { value: number };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const resumeAction = ActionCreator(RESUME);\n\nexport const resumeUpdatedAction = ActionCreator(RESUME_UPDATED);\n\nexport const resumeAccessTypeAction = ActionCreator(RESUME_ACCESS_TYPE);\n\nexport const resumeChangeKeySkillAction = ActionCreator(RESUME_CHANGE_KEY_SKILL);\n\nexport const resumeUpdateContactPhonesAction = ActionCreator(RESUME_UPDATE_CONTACT_PHONES);\n\nexport const resumeSetAutoVoteSkillAction = ActionCreator(RESUME_SET_AUTO_VOTE_SKILL);\n\nexport const resumeSetToUpdateValueAction = ActionCreator(RESUME_SET_TO_UPDATE_VALUE_ACTION);\n\nexport default createReducer<Resume, PayloadTypes>(null, {\n    [RESUME]: (state, action) => ({ ...action.payload }),\n    [RESUME_UPDATED]: (state, action) => ({\n        ...state,\n        updated: action.payload.updated,\n    }),\n    [RESUME_ACCESS_TYPE]: (state, action) => ({\n        ...state,\n        accessType: action.payload.accessType,\n    }),\n    [RESUME_UPDATE_CONTACT_PHONES]: (state, action) => ({\n        ...state,\n        phone: { ...state.phone, value: action.payload },\n        openedContacts: true,\n    }),\n    [RESUME_CHANGE_KEY_SKILL]: (state, action) => {\n        const { skillId, increased } = action.payload;\n        const newKeySkills =\n            state.advancedKeySkills.value?.map((skill) => {\n                if (skill.id === skillId) {\n                    const newCount = increased ? (skill.count || 0) + 1 : (skill.count || 0) - 1;\n                    return {\n                        ...skill,\n                        count: newCount,\n                        voted: increased,\n                    };\n                }\n                return skill;\n            }) || [];\n        return {\n            ...state,\n            advancedKeySkills: {\n                ...state.advancedKeySkills,\n                value: newKeySkills,\n            },\n        };\n    },\n    [RESUME_SET_AUTO_VOTE_SKILL]: (state, action) => ({\n        ...state,\n        advancedKeySkills: {\n            ...state.advancedKeySkills,\n            autoVoteSkill: action.payload.skillId,\n        },\n    }),\n    [RESUME_SET_TO_UPDATE_VALUE_ACTION]: (state, action) => ({\n        ...state,\n        toUpdate: {\n            // поле toUpdate из питона имеет структуру вида\n            // {value: 12804, count: 4, translation: \"hours\", ending: 1}\n            // но в коде используем только value, так что все остальные поля просто стираю\n            value: action.payload.value,\n        },\n    }),\n});\n","import PropTypes from 'prop-types';\n\nexport enum ResumeAccessType {\n    Everyone = 'everyone',\n    Clients = 'clients',\n    WhiteList = 'whitelist',\n    BlackList = 'blacklist',\n    Direct = 'direct',\n    NoOne = 'no_one',\n}\n\nexport const EVERYONE = ResumeAccessType.Everyone;\nexport const CLIENTS = ResumeAccessType.Clients;\nexport const WHITELIST = ResumeAccessType.WhiteList;\nexport const BLACKLIST = ResumeAccessType.BlackList;\nexport const DIRECT = ResumeAccessType.Direct;\nexport const NO_ONE = ResumeAccessType.NoOne;\n\nconst RESUME_ACCESS_TYPES = [EVERYONE, CLIENTS, WHITELIST, BLACKLIST, DIRECT, NO_ONE];\nexport default RESUME_ACCESS_TYPES;\n\nexport const resumeAccessType = PropTypes.oneOf(RESUME_ACCESS_TYPES);\n","import { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface Salary {\n    amount: number;\n    currency: CurrencyType;\n}\n\nexport interface Area {\n    id: number;\n    title: string;\n}\n\nexport interface RelocationArea {\n    id: number;\n    title: string;\n    districts: District[];\n    hasAllDistricts: boolean;\n}\n\nexport interface District {\n    id: number;\n    areaId?: number;\n    title: string;\n}\n\nexport interface PersonalSite {\n    type: PersonalSiteTypes;\n    url: string;\n}\n\nexport interface Language {\n    degree: LanguageLevel;\n    id: number;\n    title: string;\n}\n\nexport interface Phone {\n    city?: string;\n    comment?: string;\n    country?: string;\n    type?: string;\n    verified?: boolean;\n    number?: string | null;\n    formatted?: string;\n    raw?: string;\n    canVerify?: boolean;\n}\n\nexport interface Recommendation {\n    id: number;\n    name: string;\n    organization: string;\n    position: string;\n}\n\nexport interface ShortExperience {\n    id: number;\n    startDate: string;\n    endDate: string | null;\n    companyName: string;\n    companyIndustryId: number | null;\n    companyIndustries: number[];\n    companyAreaId: number | null;\n    industries: Industry[];\n    companyUrl: string | null;\n    companyId: number | null;\n    position: string;\n    employerId: string | null;\n    companyState: string | null;\n    companyAreaTitle: string;\n}\n\nexport interface Experience extends ShortExperience {\n    description: string;\n    prettyUrl: string;\n}\n\nexport interface Industry {\n    id: number;\n    name: string;\n    parentId: number | null;\n    children: Industry[];\n    translit: string;\n    title: string;\n}\n\nexport interface Interval {\n    years?: number | null;\n    months?: number | null;\n}\nexport interface PhotoUrl {\n    id?: string;\n    state?: PhotoState;\n    type?: string;\n    artifactType?: string;\n    title?: string | null;\n    big?: string;\n    preview?: string;\n    avatar?: string;\n}\n\nexport interface Metro {\n    id: number;\n    title: string;\n    color: string;\n}\n\nexport interface Education {\n    id: number;\n    name: string;\n    organization: string;\n    year: number;\n    universityId: number | null;\n    specialityId: number | null;\n    facultyId: number | null;\n}\n\nexport interface AdditionalEducation {\n    id: number;\n    name: string;\n    organization: string;\n    result: string;\n    year: number;\n}\n\nexport interface Proftest {\n    resultsReceived: boolean;\n    attached: boolean;\n    visible: boolean;\n    link: string;\n}\n\nexport interface KeySkill {\n    id: number | string;\n    general?: boolean;\n    name: string;\n    isConfirmedByExperience?: boolean | null;\n    count?: number;\n    voted?: boolean;\n}\n\nexport interface Provider {\n    id: number;\n    name: string;\n}\n\nexport interface CertificateData {\n    id: number;\n    ownerName: string;\n    transcriptionId: string;\n    password: string;\n    type: string;\n    title: string;\n    achievementDate: string;\n    url: string;\n    selected: boolean;\n}\n\nexport interface Certificates {\n    data: CertificateData;\n    grouped: {\n        type: string;\n        years: {\n            year: number;\n            certificateIds: number[];\n        }[];\n    }[];\n}\n\nexport enum DistanceValues {\n    FiveHundredMetres = 'FIVE_HUNDRED_METRES',\n    OneThousandMetres = 'ONE_THOUSAND_METRES',\n    ThreeThousandMetres = 'THREE_THOUSAND_METRES',\n    FiveThousandMetres = 'FIVE_THOUSAND_METRES',\n    TenThousandMetres = 'TEN_THOUSAND_METRES',\n    FifteenThousandMetres = 'FIFTEEN_THOUSAND_METRES',\n}\n\nexport enum PreferredContact {\n    CellPhone = 'cell',\n    HomePhone = 'home_phone',\n    WorkPhone = 'work_phone',\n    Email = 'email',\n}\n\nexport enum Relocation {\n    NoRelocation = 'no_relocation',\n    RelocationPossible = 'relocation_possible',\n    RelocationDesirable = 'relocation_desirable',\n}\n\nexport enum TravelTime {\n    Any = 'any',\n    LessThanHour = 'less_than_hour',\n    FromHourToOneAndHalf = 'from_hour_to_one_and_half',\n}\n\nexport enum TripsReadiness {\n    Ready = 'ready',\n    Never = 'never',\n    Sometimes = 'sometimes',\n}\n\nexport enum Gender {\n    Male = 'male',\n    Female = 'female',\n    Unknown = 'unknown',\n}\n\nexport enum LangsList {\n    AZ = 'AZ',\n    EN = 'EN',\n    KZ = 'KZ',\n    RU = 'RU',\n    UA = 'UA',\n    UZ = 'UZ',\n    KG = 'KG',\n}\n\nexport enum Permission {\n    ViewWithoutContacts = 'view_without_contacts',\n    Edit = 'edit',\n    View = 'view',\n}\n\nexport enum Statuses {\n    /** Не закончено */\n    NotFinished = 'not_finished',\n    /** Опубликовано, но не проверено */\n    New = 'new',\n    /** Изменено после проверки */\n    Modified = 'modified',\n    /** Проверено модератором */\n    Approved = 'approved',\n    /** Заблокировано модератором */\n    Blocked = 'blocked',\n    /** Изменено после блокировки модератором */\n    Corrected = 'corrected',\n    /** Проверено автомодератором */\n    AutoApproved = 'auto_approved',\n}\n\nexport enum Recommendations {\n    /** Хорошее резюме, откликайтесь */\n    Respond = 'respond',\n    /** Дополните резюме */\n    EditResume = 'editResume',\n    /** Обновите резюме */\n    UpdateResume = 'updateResume',\n    /** Смените видимость */\n    ChangeVisibility = 'changeVisibility',\n    /** Исправьте заблокированное резюме */\n    CorrectResume = 'correctResume',\n    /** Модератор проверяет ваше резюме */\n    OnModeration = 'onModeration',\n    /** Верифицируйте телефон в резюме */\n    NeedVerifiedPhone = 'needVerifiedPhone',\n    /** Пройдите опросник по навыкам */\n    NeedSkillSurvey = 'needSkillSurvey',\n}\n\nexport enum HiddenFields {\n    NamesAndPhoto = 'names_and_photo',\n    Phones = 'phones',\n    Email = 'email',\n    OtherContacts = 'other_contacts',\n    Experience = 'experience',\n}\n\nexport enum EducationLevel {\n    None = 'none',\n    Higher = 'higher',\n    Bachelor = 'bachelor',\n    Master = 'master',\n    Candidate = 'candidate',\n    Doctor = 'doctor',\n    UnfinishedHigher = 'unfinished_higher',\n    Secondary = 'secondary',\n    SpecialSecondary = 'special_secondary',\n}\n\nexport enum LanguageLevel {\n    Basic = 'basic',\n    Fluent = 'fluent',\n    CanPassInterview = 'can_pass_interview',\n    Native = 'native',\n    CanRead = 'can_read',\n    A1 = 'a1',\n    A2 = 'a2',\n    B1 = 'b1',\n    B2 = 'b2',\n    C1 = 'c1',\n    C2 = 'c2',\n    L1 = 'l1',\n}\n\nexport enum PersonalSiteTypes {\n    Freelance = 'freelance',\n    Personal = 'personal',\n    Livejournal = 'livejournal',\n    MoiKrug = 'moi_krug',\n    Facebook = 'facebook',\n}\n\nexport enum PhotoState {\n    Processed = 'processed',\n    New = 'new',\n    Corrupted = 'corrupted',\n}\n\nexport enum AutoHideTime {\n    FiveYears = 'year_5',\n    ThreeYears = 'year_3',\n    TwoYears = 'year_2',\n    TwelveMonths = 'month_12',\n    TenMonths = 'month_10',\n    EightMonths = 'month_8',\n}\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Statuses } from 'lux/models/resume/resumeCommon.types';\n\nexport enum ValidationSchema {\n    Full = 'full_validation',\n    Incomplete = 'incomplete',\n    NoValidation = 'no_validation',\n}\n\ninterface ResumeFormAttributes {\n    countryPhoneCode?: string;\n    fromapp?: string | null;\n    status: Statuses | null | '';\n    hasNotFinishedResumes?: boolean;\n    id?: string | null;\n    showHeader?: boolean;\n    showImportButton?: boolean;\n    source?: string;\n    userId?: string;\n    // eslint-disable-next-line\n    validation_schema?: ValidationSchema;\n    vacancyResponseSucceeded?: boolean;\n}\n\nexport default autoGeneratedReducer<ResumeFormAttributes>({ status: '' });\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\nimport { LanguageLevel } from '@hh.ru/types-hh-microcore';\n\nimport { MetroType } from 'lux/models/novaFilters';\nimport { Paging } from 'lux/models/paging.types';\nimport { Criteria } from 'lux/models/resumeSearchCriteria';\nimport { ExpPeriodOption, LogicOption, PosOption } from 'lux/models/search/resume/searchQueries';\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nexport interface EmployerManager {\n    employerId: string;\n    firstName: string;\n    lastName: string;\n    middleName: string;\n    employerManagerId: string;\n}\n\nexport interface Query {\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption;\n    [CriteriaKey.Logic]: LogicOption;\n    [CriteriaKey.Pos]: PosOption[];\n    [CriteriaKey.Text]: string;\n    title: string;\n}\n\ninterface Skill {\n    id: number;\n    text: string;\n}\n\nexport interface Metro {\n    id: string;\n    title: string;\n    type: MetroType;\n}\n\ninterface SavedSearchParam {\n    [CriteriaKey.Area]?: string[];\n    [CriteriaKey.District]?: string[];\n    [CriteriaKey.Schedule]?: string[];\n    [CriteriaKey.Employment]?: string[];\n    [CriteriaKey.Experience]?: string[];\n    [CriteriaKey.EducationLevel]?: string[];\n    [CriteriaKey.University]?: string[];\n}\n\ntype ProfRole = {\n    id: number;\n    text: string;\n};\n\nexport type ProfRoleCategory = Omit<ProfRole, 'id'> & {\n    id: string | number;\n    profRoles?: ProfRole[];\n};\n\nexport interface SavedLanguages {\n    degree: LanguageLevel;\n    language: string;\n}\n\nexport interface ResumeSavedSearchItem {\n    creationTime: string;\n    creationTimestamp: string;\n    id: number;\n    lastUsedTime: string;\n    name: string;\n    queries: Query[];\n    resultsAll?: number;\n    resultsNew?: number;\n    searchAllQuery: string;\n    searchNewQuery: string;\n    searchCriteria: Criteria;\n    params: SavedSearchParam;\n    skills: Skill[];\n    metros: Metro[];\n    subscribed: boolean;\n    todayResultsFound: number;\n    totalResultsFound: number;\n    savedLanguages: SavedLanguages[];\n}\n\nexport enum LoadingActivityName {\n    Subscribe = 'subscribe',\n    Unsubscribe = 'unsubscribe',\n    Delete = 'delete',\n}\n\nexport interface ResumeSavedSearchState {\n    isAllSelected: boolean;\n    selectedItems: number[];\n    error?: boolean;\n    paging?: Paging;\n    filterValue: string;\n    currentLoadingActivityName?: LoadingActivityName;\n    employerManager?: EmployerManager;\n    isSudo: boolean;\n    savedSearch: ResumeSavedSearchItem[];\n}\n\ninterface ResumeSavedSearchControls {\n    isAllSelected: boolean;\n    selectedItems: number[];\n}\n\ninterface SetResumeSavedSearchCountersPayload {\n    savedSearchId: number;\n    resultsAll: number;\n    resultsNew: number;\n}\n\nconst SELECT_RESUME_SAVED_SEARCH = 'SELECT_RESUME_SAVED_SEARCH';\nconst RESUME_SAVED_SEARCH_LOADING = 'RESUME_SAVED_SEARCH_LOADING';\nconst SELECT_ALL_RESUME_SAVED_SEARCHES = 'SELECT_ALL_RESUME_SAVED_SEARCHES';\nconst SET_RESUME_SAVED_SEARCH_COUNTERS = 'SET_RESUME_SAVED_SEARCH_COUNTERS';\n\ninterface PayloadTypes {\n    [SELECT_RESUME_SAVED_SEARCH]: ResumeSavedSearchControls;\n    [RESUME_SAVED_SEARCH_LOADING]: LoadingActivityName | undefined;\n    [SELECT_ALL_RESUME_SAVED_SEARCHES]: ResumeSavedSearchControls;\n    [SET_RESUME_SAVED_SEARCH_COUNTERS]: SetResumeSavedSearchCountersPayload;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const selectResumeSavedSearchAction = actionCreator(SELECT_RESUME_SAVED_SEARCH);\nexport const resumeSavedSearchLoadingAction = actionCreator(RESUME_SAVED_SEARCH_LOADING);\nexport const selectAllSavedSearchesAction = actionCreator(SELECT_ALL_RESUME_SAVED_SEARCHES);\nexport const setResumeSavedSearchCountersAction = actionCreator(SET_RESUME_SAVED_SEARCH_COUNTERS);\n\nexport const INITIAL_STATE: ResumeSavedSearchState = {\n    isAllSelected: false,\n    selectedItems: [],\n    savedSearch: [],\n    error: false,\n    filterValue: 'all',\n    isSudo: false,\n};\n\nexport default createReducer<ResumeSavedSearchState, PayloadTypes>(INITIAL_STATE, {\n    [SELECT_RESUME_SAVED_SEARCH]: (state, action) => ({ ...state, ...action.payload }),\n    [RESUME_SAVED_SEARCH_LOADING]: (state, action) => ({ ...state, currentLoadingActivityName: action.payload }),\n    [SELECT_ALL_RESUME_SAVED_SEARCHES]: (state, action) => ({ ...state, ...action.payload }),\n    [SET_RESUME_SAVED_SEARCH_COUNTERS]: (state, action) => {\n        const updatedSavedSearchArray: ResumeSavedSearchItem[] = state.savedSearch.map((item) => {\n            if (action.payload.savedSearchId === item.id) {\n                return { ...item, resultsAll: action.payload.resultsAll, resultsNew: action.payload.resultsNew };\n            }\n            return item;\n        });\n        return { ...state, savedSearch: updatedSavedSearchArray };\n    },\n});\n","import { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\n\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport DriverLicenseOption from 'lux/models/driverLicense.types';\nimport { EducationLevel, Gender } from 'lux/models/resume/resumeCommon.types';\nimport { ExpPeriodOption, LogicOption, PosOption, ExpCompanySizeOption } from 'lux/models/search/resume/searchQueries';\nimport {\n    CriteriaKey,\n    OrderByOption,\n    ExperienceOption,\n    FilterExpPeriodOption,\n} from 'lux/models/search/searchCriteria.types';\n\nexport enum LabelOption {\n    OnlyWithSalary = 'only_with_salary',\n    OnlyWithAge = 'only_with_age',\n    OnlyWithPhoto = 'only_with_photo',\n    OnlyWithGender = 'only_with_gender',\n    OnlyWithVehicle = 'only_with_vehicle',\n}\n\nexport enum SearchPeriodOption {\n    Year = '365',\n    AllTime = '0',\n    Month = '30',\n    Week = '7',\n    ThreeDays = '3',\n    Day = '1',\n}\n\nexport type PossibleSearchPeriod = SearchPeriodOption | 'customInterval';\n\nexport enum RelocationOption {\n    Living = 'living',\n    LivingButRelocation = 'living_but_relocation',\n    LivingOrRelocation = 'living_or_relocation',\n    Relocation = 'relocation',\n}\n\nexport interface Criteria {\n    [CriteriaKey.Area]?: number[];\n    [CriteriaKey.AgeFrom]: number | null;\n    [CriteriaKey.AgeTo]: number | null;\n    [CriteriaKey.Citizenship]?: number[];\n    [CriteriaKey.District]: number[];\n    [CriteriaKey.CurrencyCode]: CurrencyType;\n    [CriteriaKey.DriverLicenseTypes]: DriverLicenseOption[];\n    [CriteriaKey.Education]: EducationLevel;\n    [CriteriaKey.EducationLevel]: EducationLevel[];\n    [CriteriaKey.Employment]: EmploymentLower[];\n    [CriteriaKey.ExpCompanySize]: ExpCompanySizeOption[];\n    [CriteriaKey.ExpIndustry]: string[];\n    [CriteriaKey.Experience]: ExperienceOption[];\n    [CriteriaKey.FilterExpPeriodForIndustry]: FilterExpPeriodOption;\n    [CriteriaKey.FilterExpIndustry]: string[];\n    [CriteriaKey.Gender]: Gender;\n    [CriteriaKey.JobSearchStatus]: JobSearchStatus[];\n    [CriteriaKey.SearchPeriod]: SearchPeriodOption;\n    [CriteriaKey.OrderBy]: OrderByOption;\n    [CriteriaKey.ItemsOnPage]: string;\n    [CriteriaKey.DateFrom]: string;\n    [CriteriaKey.DateTo]: string;\n    [CriteriaKey.VacancyId]?: number;\n    [CriteriaKey.Relocation]?: RelocationOption;\n    [CriteriaKey.Text]: string[];\n    [CriteriaKey.Logic]?: LogicOption[];\n    [CriteriaKey.Label]: LabelOption[];\n    [CriteriaKey.Language]: string[];\n    [CriteriaKey.Metro]: string[];\n    [CriteriaKey.NoMagic]: boolean;\n    [CriteriaKey.Pos]?: PosOption[];\n    [CriteriaKey.ProfessionalRole]: number[];\n    [CriteriaKey.SalaryFrom]: number | null;\n    [CriteriaKey.SalaryTo]: number | null;\n    [CriteriaKey.Schedule]: ScheduleCamelCase[];\n    [CriteriaKey.VerifiedSkills]: string[];\n    [CriteriaKey.VerifiedLanguages]: string[];\n    [CriteriaKey.Skill]: number[];\n    [CriteriaKey.SavedSearchId]: number | null;\n    [CriteriaKey.University]: string[];\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption[];\n    [CriteriaKey.WorkTicket]: number[];\n}\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport VisibilityList from 'lux/models/resumeVisibility/visibilityList.types';\n\nexport const RESUME_VISIBILITY_EMPLOYER_BLACKLIST = 'RESUME_VISIBILITY_EMPLOYER_BLACKLIST';\nexport const RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING = 'RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING';\n\nexport const INITIAL_STATE: VisibilityList = {\n    items: [],\n    total: 0,\n    page: 0,\n    perPage: 10,\n    isFetching: false,\n    canAdd: 0,\n    limit: 0,\n    pager: null,\n};\n\ninterface PayloadTypes {\n    [RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING]: void;\n    [RESUME_VISIBILITY_EMPLOYER_BLACKLIST]: VisibilityList;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const resumeVisibilityEmployerBlacklistAction = actionCreator(RESUME_VISIBILITY_EMPLOYER_BLACKLIST);\nexport const resumeVisibilityEmployerBlacklistFetchingAction = actionCreator(\n    RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING\n);\n\nexport default createReducer<VisibilityList, PayloadTypes>(INITIAL_STATE, {\n    [RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING]: (state) => {\n        return { ...state, isFetching: true };\n    },\n    [RESUME_VISIBILITY_EMPLOYER_BLACKLIST]: (state, action) => {\n        const payload = action.payload ?? INITIAL_STATE;\n        payload.items = payload.items || [];\n        return { ...state, ...payload, isFetching: false };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport VisibilityList from 'lux/models/resumeVisibility/visibilityList.types';\n\nexport const RESUME_VISIBILITY_EMPLOYER_WHITELIST = 'RESUME_VISIBILITY_EMPLOYER_WHITELIST';\nexport const RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING = 'RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING';\n\nexport const INITIAL_STATE: VisibilityList = {\n    items: [],\n    total: 0,\n    page: 0,\n    perPage: 10,\n    isFetching: false,\n    canAdd: 0,\n    limit: 0,\n    pager: null,\n};\n\ninterface PayloadTypes {\n    [RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING]: void;\n    [RESUME_VISIBILITY_EMPLOYER_WHITELIST]: VisibilityList;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const resumeVisibilityEmployerWhitelistAction = actionCreator(RESUME_VISIBILITY_EMPLOYER_WHITELIST);\nexport const resumeVisibilityEmployerWhitelistFetchingAction = actionCreator(\n    RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING\n);\n\nexport default createReducer<VisibilityList, PayloadTypes>(INITIAL_STATE, {\n    [RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING]: (state) => {\n        return { ...state, isFetching: true };\n    },\n    [RESUME_VISIBILITY_EMPLOYER_WHITELIST]: (state, action) => {\n        const payload = action.payload ?? INITIAL_STATE;\n        payload.items = payload.items || [];\n        return { ...state, ...payload, isFetching: false };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport SearchVisibilityList from 'lux/models/resumeVisibility/searchVisibilityList.types';\n\nexport const RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST = 'RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST';\nexport const RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING =\n    'RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING';\n\nexport const INITIAL_STATE: SearchVisibilityList = {\n    items: [],\n    total: 0,\n    isFetching: false,\n};\n\ninterface PayloadTypes {\n    [RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING]: void;\n    [RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST]: SearchVisibilityList;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const resumeVisibilitySearchResultsBlacklistFetching = actionCreator(\n    RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING\n);\nexport const resumeVisibilitySearchResultsBlacklist = actionCreator(RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST);\n\nexport default createReducer<SearchVisibilityList, PayloadTypes>(INITIAL_STATE, {\n    [RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING]: (state) => {\n        return { ...state, isFetching: true };\n    },\n    [RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST]: (state, action) => {\n        const payload = action.payload ?? INITIAL_STATE;\n        payload.items = payload.items || [];\n        return { ...state, ...payload, isFetching: false };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport SearchVisibilityList from 'lux/models/resumeVisibility/searchVisibilityList.types';\n\nexport const RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST = 'RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST';\nexport const RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING =\n    'RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING';\n\nexport const INITIAL_STATE: SearchVisibilityList = {\n    items: [],\n    total: 0,\n    isFetching: false,\n};\n\ninterface PayloadTypes {\n    [RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING]: void;\n    [RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST]: SearchVisibilityList;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const resumeVisibilitySearchResultsWhitelistFetching = actionCreator(\n    RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING\n);\nexport const resumeVisibilitySearchResultsWhitelist = actionCreator(RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST);\n\nexport default createReducer<SearchVisibilityList, PayloadTypes>(INITIAL_STATE, {\n    [RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING]: (state) => {\n        return { ...state, isFetching: true };\n    },\n    [RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST]: (state, action) => {\n        const payload = action.payload ?? INITIAL_STATE;\n        payload.items = payload.items || [];\n        return { ...state, ...payload, isFetching: false };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst UPDATE_RESUMES_RELEVANT_EXPERIENCE = 'UPDATE_RESUMES_RELEVANT_EXPERIENCE';\n\nexport enum RelevantExperienceResumesType {\n    Resumes = 'resumes',\n    Responses = 'responses',\n    SuitableGifts = 'suitableGifts',\n    SuitableResumes = 'suitableResumes',\n}\n\nexport interface Experience {\n    [RelevantExperienceResumesType.Resumes]?: Record<string, number>;\n    [RelevantExperienceResumesType.Responses]?: Record<string, number>;\n    [RelevantExperienceResumesType.SuitableGifts]?: Record<string, number>;\n    [RelevantExperienceResumesType.SuitableResumes]?: Record<string, number>;\n}\n\nexport interface ResumesRelevantExperience {\n    experience: Experience;\n    resumeShowInfotip: string | null;\n    isAnalyticsEnabled: boolean;\n}\n\nconst INITIAL_STATE: ResumesRelevantExperience = {\n    experience: {},\n    resumeShowInfotip: null,\n    isAnalyticsEnabled: false,\n};\n\ninterface PayloadTypes {\n    [UPDATE_RESUMES_RELEVANT_EXPERIENCE]: {\n        experience: Experience;\n        resumeShowInfotip: string | null;\n        isAnalyticsEnabled: boolean;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const updateResumesRelevantExperience = actionCreator(UPDATE_RESUMES_RELEVANT_EXPERIENCE);\n\nexport default createReducer<ResumesRelevantExperience, PayloadTypes>(INITIAL_STATE, {\n    [UPDATE_RESUMES_RELEVANT_EXPERIENCE]: (state, { payload }) => ({\n        ...state,\n        experience: { ...state.experience, ...payload.experience },\n        resumeShowInfotip: state.resumeShowInfotip || payload.resumeShowInfotip,\n        isAnalyticsEnabled: payload.isAnalyticsEnabled,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum CompetencyResult {\n    Success = 'SUCCESS',\n    Failure = 'FAILURE',\n}\n\nexport interface RsvUserCompetencies {\n    isModalWindowOpened: boolean;\n    competenciesResult: CompetencyResult | null;\n}\n\nconst UPDATE_RSV_USER_COMPETENCIES_MODAL = 'UPDATE_RSV_USER_COMPETENCIES_MODAL';\nconst UPDATE_RSV_USER_COMPETENCIES_RESULT = 'UPDATE_RSV_USER_COMPETENCIES_RESULT';\n\ninterface PayloadTypes {\n    [UPDATE_RSV_USER_COMPETENCIES_MODAL]: boolean;\n    [UPDATE_RSV_USER_COMPETENCIES_RESULT]: CompetencyResult | null;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const updateRsvUserCompetenciesModal = actionCreator(UPDATE_RSV_USER_COMPETENCIES_MODAL);\nexport const updateRsvUserCompetenciesResult = actionCreator(UPDATE_RSV_USER_COMPETENCIES_RESULT);\n\nconst initialState: RsvUserCompetencies = {\n    isModalWindowOpened: false,\n    competenciesResult: null,\n};\n\nexport default createReducer<RsvUserCompetencies, PayloadTypes>(initialState, {\n    [UPDATE_RSV_USER_COMPETENCIES_MODAL]: (state, { payload }) => {\n        return { ...state, isModalWindowOpened: payload };\n    },\n    [UPDATE_RSV_USER_COMPETENCIES_RESULT]: (state, { payload }) => {\n        return { ...state, competenciesResult: payload };\n    },\n});\n","import { AnyAction } from 'redux';\n\nimport createReducer from '@hh.ru/redux-create-reducer';\nimport { DataProviderItem } from 'bloko/blocks/suggest/types';\n\nimport { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport DriverLicenseOption from 'lux/models/driverLicense.types';\nimport { EducationLevel } from 'lux/models/resume/resumeCommon.types';\nimport { LabelOption } from 'lux/models/resumeSearchCriteria';\n\nimport { CriteriaKey, ExperienceOption, FilterExpPeriodOption } from 'lux/models/search/searchCriteria.types';\n\ninterface Vacancy {\n    vacancyId: number;\n    name: string;\n}\n\ninterface Resume {\n    title: string;\n    hash: string;\n}\n\nexport interface MetroItem extends DataProviderItem {\n    color?: string;\n}\n\nexport type DistrictItem = DataProviderItem;\n\nexport interface UniversityItem extends DataProviderItem {\n    acronym?: string;\n    synonyms?: string;\n}\n\nexport enum ExclusionOption {\n    ExcludeViewedByUserId = 'exclude_viewed_by_user_id',\n    ExcludeViewedByEmployerId = 'exclude_viewed_by_employer_id',\n    OnlyInResponses = 'only_in_responses',\n}\n\ninterface CompanyShort {\n    areaId: number;\n    category: string;\n    fromZarplata: boolean;\n    id: number;\n    mainEmployerId: number;\n    name: string;\n    organizationFormId: number;\n    structureName: string;\n}\n\nexport interface AdvancedSearch {\n    [CriteriaKey.Citizenship]?: DataProviderItem[];\n    [CriteriaKey.District]?: DistrictItem[];\n    [CriteriaKey.DriverLicenseTypes]: DriverLicenseOption[];\n    [CriteriaKey.EducationLevel]?: EducationLevel[];\n    [CriteriaKey.Employment]: EmploymentLower[];\n    [CriteriaKey.Experience]: ExperienceOption[];\n    [CriteriaKey.FilterExpIndustry]?: string[];\n    [CriteriaKey.FilterExpPeriodForIndustry]?: FilterExpPeriodOption;\n    [CriteriaKey.JobSearchStatus]: JobSearchStatus[];\n    [CriteriaKey.Language]: string[];\n    [CriteriaKey.Schedule]: ScheduleCamelCase[];\n    [CriteriaKey.WorkTicket]?: DataProviderItem[];\n    [LabelOption.OnlyWithAge]?: boolean;\n    [LabelOption.OnlyWithGender]?: boolean;\n    [LabelOption.OnlyWithPhoto]?: boolean;\n    [LabelOption.OnlyWithSalary]?: boolean;\n    [LabelOption.OnlyWithVehicle]?: boolean;\n    area?: string[];\n    company?: CompanyShort;\n    exclusion: ExclusionOption[];\n    isStatisticsEnabled?: boolean;\n    keySkills?: DataProviderItem[];\n    metro?: MetroItem[];\n    resume?: Resume | null;\n    showSearchConditions?: boolean;\n    university?: UniversityItem[];\n    vacancy?: Vacancy | null;\n    isExpIndustryHintVisible?: boolean;\n    [CriteriaKey.VerifiedLanguages]: string[];\n}\n\nconst ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER = 'ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER';\n\ninterface PayloadTypes {\n    [ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER]: string[];\n}\n\nexport const advancedSearchUpdateVerifiedLanguageFilter = (payload: string[]): AnyAction => ({\n    type: ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER,\n    payload,\n});\n\nconst INITIAL_STATE = {\n    showSearchConditions: false,\n    vacancy: null,\n    resume: null,\n    [CriteriaKey.Experience]: [],\n    keySkills: [],\n    university: [],\n    [CriteriaKey.Citizenship]: [],\n    [CriteriaKey.WorkTicket]: [],\n    [CriteriaKey.Employment]: [],\n    [CriteriaKey.Schedule]: [],\n    [CriteriaKey.DriverLicenseTypes]: [],\n    [CriteriaKey.FilterExpIndustry]: [],\n    [CriteriaKey.JobSearchStatus]: [],\n    [CriteriaKey.Language]: [],\n    exclusion: [],\n    [CriteriaKey.VerifiedLanguages]: [],\n};\n\nexport default createReducer<AdvancedSearch, PayloadTypes>(INITIAL_STATE, {\n    [ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER]: (state, { payload }) => {\n        const copy = { ...state };\n        copy[CriteriaKey.VerifiedLanguages] = payload;\n        return copy;\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { JobSearchStatusSetted } from 'lux/models/applicantUserStatuses';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { DBAccessProductType } from 'lux/models/price/product.types';\nimport { Gender, EducationLevel } from 'lux/models/resume/resumeCommon.types';\nimport type { ResumeCardData } from 'lux/models/resumeCard';\nimport { Criteria, SearchPeriodOption } from 'lux/models/resumeSearchCriteria';\nimport { CriteriaKey, FilterExpPeriodOption, OrderByOption } from 'lux/models/search/searchCriteria.types';\nimport { Suggests } from 'lux/models/vacancySearch/suggests.types';\nimport { Fixes } from 'lux/models/vacancySearch/vacancySearchResult';\n\nexport interface SearchResultStats {\n    totalResults: number;\n    totalUngroupedResults: number;\n    normalSearchResults: number;\n    normalGroupedSearchResults: number;\n}\n\nexport enum SettingName {\n    ShowFiltersOnTheLeft = 'show_filters_on_the_left',\n}\n\nexport interface ResumeSearchQueries {\n    itemsOnPageBase: string;\n    currentParams?: string;\n    orderByBase: string;\n    searchPeriodBase: string;\n    noMagic?: string;\n    highlight?: string;\n}\n\nexport enum SettingType {\n    LastChangeTime = 'last_change_time',\n    Name = 'name',\n    Photo = 'photo',\n    LastExperience = 'last_experience',\n    Comments = 'comments',\n    CommentsExpanded = 'comments_expanded',\n    Languages = 'languages',\n    Area = 'area',\n    Education = 'education',\n    Citizenship = 'citizenship',\n    Companies = 'companies',\n    Relocation = 'relocation',\n    Certificates = 'certificates',\n    ExperienceSum = 'experience_sum',\n    ProfessionalRole = 'professional_role',\n    RoleWarring = 'roleWarring',\n}\n\nexport enum Action {\n    Apply = 'APPLY',\n    Buy = 'BUY',\n}\n\nexport type ParamsWithCustomValue = {\n    [key in CriteriaKey]?: Array<string | boolean | number> | string | boolean | number;\n};\n\nexport interface ResumeSearchResult {\n    searchCriteria?: {\n        [`vacancy_id`]: number;\n    };\n    totalResults?: number;\n    resumes: ResumeCardData[];\n    criteria?: Criteria;\n    videos?: Record<string, string>;\n    paging: unknown;\n    proxiedSearchFormParams?: Partial<Criteria>;\n    queries?: ResumeSearchQueries;\n    settings: {\n        activeSettings: SettingType[];\n        availableSettings: SettingType[];\n        filtersOnTheLeft?: { name: SettingName.ShowFiltersOnTheLeft; value: boolean; employerManagerId: string };\n    };\n    clusters: unknown;\n    hidden: number;\n    total: number;\n    fixes?: Fixes;\n    applicantUserStatuses: Partial<\n        Record<\n            string,\n            {\n                jobSearchStatus: { name: JobSearchStatusSetted; lastChangeTime?: string } | null;\n            }\n        >\n    >;\n    vacancySimilarBuyContacts?: {\n        '@id'?: number;\n        action?: string;\n        areaId?: number;\n        name?: string;\n        '@code'?: string;\n        serviceEntryCode?: string;\n        daysLost?: string;\n        product?: DBAccessProductType & { regionTrl: string };\n    };\n    isSimilarSearch?: boolean;\n    stats: SearchResultStats;\n    suggests?: Suggests;\n    totalUsedFilters?: number;\n    withHiddenResumes?: boolean;\n}\n\nexport default autoGeneratedReducer<ResumeSearchResult>({\n    criteria: {\n        [CriteriaKey.SearchPeriod]: SearchPeriodOption.AllTime,\n        [CriteriaKey.OrderBy]: OrderByOption.Relevance,\n        [CriteriaKey.ItemsOnPage]: '20',\n        [CriteriaKey.DateFrom]: '',\n        [CriteriaKey.DateTo]: '',\n        [CriteriaKey.AgeFrom]: null,\n        [CriteriaKey.AgeTo]: null,\n        [CriteriaKey.District]: [],\n        [CriteriaKey.CurrencyCode]: CurrencyType.RUR,\n        [CriteriaKey.DriverLicenseTypes]: [],\n        [CriteriaKey.Education]: EducationLevel.None,\n        [CriteriaKey.EducationLevel]: [],\n        [CriteriaKey.Employment]: [],\n        [CriteriaKey.ExpCompanySize]: [],\n        [CriteriaKey.ExpIndustry]: [],\n        [CriteriaKey.Experience]: [],\n        [CriteriaKey.FilterExpIndustry]: [],\n        [CriteriaKey.FilterExpPeriodForIndustry]: FilterExpPeriodOption.AllTime,\n        [CriteriaKey.Gender]: Gender.Unknown,\n        [CriteriaKey.JobSearchStatus]: [],\n        [CriteriaKey.Text]: [],\n        [CriteriaKey.Label]: [],\n        [CriteriaKey.Language]: [],\n        [CriteriaKey.Metro]: [],\n        [CriteriaKey.NoMagic]: false,\n        [CriteriaKey.ProfessionalRole]: [],\n        [CriteriaKey.SalaryFrom]: null,\n        [CriteriaKey.SalaryTo]: null,\n        [CriteriaKey.Schedule]: [],\n        [CriteriaKey.VerifiedSkills]: [],\n        [CriteriaKey.VerifiedLanguages]: [],\n        [CriteriaKey.Skill]: [],\n        [CriteriaKey.SavedSearchId]: null,\n        [CriteriaKey.University]: [],\n        [CriteriaKey.ExpPeriod]: [],\n        [CriteriaKey.WorkTicket]: [],\n    },\n    paging: null,\n    resumes: [],\n    settings: { activeSettings: [], availableSettings: [] },\n    clusters: {},\n    hidden: 0,\n    total: 0,\n    applicantUserStatuses: {},\n    vacancySimilarBuyContacts: {},\n    stats: {\n        totalResults: 0,\n        totalUngroupedResults: 0,\n        normalSearchResults: 0,\n        normalGroupedSearchResults: 0,\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nexport const SEARCH_QUERY_KEYS = [\n    CriteriaKey.Logic,\n    CriteriaKey.Pos,\n    CriteriaKey.ExpPeriod,\n    CriteriaKey.ExpCompanySize,\n] as const;\n\nexport type SearchQueryKeys = (typeof SEARCH_QUERY_KEYS)[number];\n\nexport enum LogicOption {\n    Normal = 'normal',\n    Any = 'any',\n    Phrase = 'phrase',\n    Except = 'except',\n}\n\nexport enum PosOption {\n    FullText = 'full_text',\n    Position = 'position',\n    Education = 'education',\n    Keywords = 'keywords',\n    Workplaces = 'workplaces',\n    PreviousWorkplace = 'previous_workplace',\n    WorkplaceOrganization = 'workplace_organization',\n    WorkplacePosition = 'workplace_position',\n    WorkplaceDescription = 'workplace_description',\n}\n\nexport enum ExpPeriodOption {\n    AllTime = 'all_time',\n    LastYear = 'last_year',\n    LastThreeYears = 'last_three_years',\n    LastSixYears = 'last_six_years',\n}\n\nexport enum ExpCompanySizeOption {\n    Any = 'any',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface SearchQueries {\n    id: number;\n    text: string[];\n    [CriteriaKey.Logic]: LogicOption[];\n    [CriteriaKey.Pos]: PosOption[];\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption[];\n    [CriteriaKey.ExpCompanySize]: ExpCompanySizeOption[];\n    [CriteriaKey.ExpIndustry]: string[];\n}\n\ninterface SearchQueriesTrls {\n    [CriteriaKey.Logic]: Record<LogicOption, string>;\n    [CriteriaKey.Pos]: Record<PosOption, string>;\n    [CriteriaKey.ExpPeriod]: Record<ExpPeriodOption, string>;\n    [CriteriaKey.ExpCompanySize]: Record<ExpCompanySizeOption, string>;\n    [CriteriaKey.ExpIndustry]: Record<string, string>;\n}\n\nexport interface SearchQueriesWithTrl {\n    default: SearchQueries;\n    values: SearchQueries[];\n    trls: SearchQueriesTrls;\n}\n\nexport default autoGeneratedReducer<SearchQueriesWithTrl>(null);\n","import { ValueOf } from 'type-fest';\n\n// Общие ключи для Criteria и NovaFilters\nexport const CommonKeys = {\n    Area: 'area',\n    AcceptTemporary: 'accept_temporary',\n    Citizenship: 'citizenship',\n    District: 'district',\n    DriverLicenseTypes: 'driver_license_types',\n    Gender: 'gender',\n    Employment: 'employment',\n    Education: 'education',\n    EducationLevel: 'education_level',\n    Experience: 'experience',\n    ExcludedText: 'excluded_text',\n    FilterExpIndustry: 'filter_exp_industry',\n    FilterExpPeriodForIndustry: 'filter_exp_period',\n    JobSearchStatus: 'job_search_status',\n    Industry: 'industry',\n    Language: 'language',\n    Label: 'label',\n    Metro: 'metro',\n    PartTime: 'part_time',\n    ProfessionalRole: 'professional_role',\n    Relocation: 'relocation',\n    Resume: 'resume',\n    SearchDebug: 'search_debug',\n    Salary: 'salary',\n    Schedule: 'schedule',\n    SearchField: 'search_field',\n    Skill: 'skill',\n    University: 'university',\n    VacancyId: 'vacancy_id',\n    VerifiedSkills: 'verified_skills',\n    VerifiedLanguages: 'verified_languages',\n    WorkTicket: 'work_ticket',\n} as const;\n\n/**\n * Названия полей критерии\n * Объединенные для вакансий и резюме\n */\nexport const CriteriaKey = {\n    ...CommonKeys,\n    AgeFrom: 'age_from',\n    AgeTo: 'age_to',\n    BottomLeftLat: 'bottom_left_lat',\n    BottomLeftLng: 'bottom_left_lng',\n    Clusters: 'clusters',\n    ControlFlag: 'control_flag',\n    CurrencyCode: 'currency_code',\n    DateFrom: 'date_from',\n    DateTo: 'date_to',\n    EmployerId: 'employer_id',\n    EmployerManagerId: 'employer_manager_id',\n    ExpCompanySize: 'exp_company_size',\n    ExpIndustry: 'exp_industry',\n    ExpPeriod: 'exp_period',\n    Folder: 'folder',\n    GeocodeType: 'geocode_type',\n    Geohash: 'geohash',\n    Height: 'height',\n    IsAutosearch: 'L_is_autosearch',\n    IsDefaultArea: 'isDefaultArea',\n    ItemsOnPage: 'items_on_page',\n    Lenient: 'L_lenient',\n    Logic: 'logic',\n    NoMagic: 'no_magic',\n    OnlyWithAge: 'only_with_age',\n    OnlyWithGender: 'only_with_gender',\n    OnlyWithPhoto: 'only_with_photo',\n    OnlyWithSalary: 'only_with_salary',\n    OrderBy: 'order_by',\n    Page: 'page',\n    Pos: 'pos',\n    Precision: 'precision',\n    RecommendedByUid: 'recommended_by_uid',\n    SalaryFrom: 'salary_from',\n    SalaryTo: 'salary_to',\n    SavedSearchId: 'saved_search_id',\n    SearchPeriod: 'search_period',\n    Specialization: 'specialization',\n    Text: 'text',\n    TopRightLat: 'top_right_lat',\n    TopRightLng: 'top_right_lng',\n    Width: 'width',\n} as const;\n\nexport type CriteriaKey = ValueOf<typeof CriteriaKey>;\n\nexport enum SearchFieldOption {\n    Name = 'name',\n    CompanyName = 'company_name',\n    Description = 'description',\n}\n\nexport enum OrderByOption {\n    PublicationTime = 'publication_time',\n    SalaryDesc = 'salary_desc',\n    SalaryAsc = 'salary_asc',\n    Relevance = 'relevance',\n}\n\nexport enum ExperienceOption {\n    Between1And3 = 'between1And3',\n    Between3And6 = 'between3And6',\n    MoreThan6 = 'moreThan6',\n    NoExperience = 'noExperience',\n}\n\nexport enum PartTimeOption {\n    EmploymentProject = 'employment_project',\n    EmploymentPart = 'employment_part',\n    TemporaryJobTrue = 'temporary_job_true',\n    FromFourToSixHoursInADay = 'from_four_to_six_hours_in_a_day',\n    OnlySaturdayAndSunday = 'only_saturday_and_sunday',\n    StartAfterSixteen = 'start_after_sixteen',\n}\n\nexport enum FilterExpPeriodOption {\n    AllTime = 'all_time',\n    LastYear = 'last_year',\n    LastThreeYears = 'last_three_years',\n    LastSixYears = 'last_six_years',\n}\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\nimport { SearchCatalogType } from 'lux/models/searchCatalogType';\n\nexport enum LetterGroupType {\n    ETC = 'ETC',\n    RUS = 'RUS',\n    ENG = 'ENG',\n}\n\nexport interface Letter {\n    letterGroupType: LetterGroupType;\n    letterGroupId: string;\n    alias: string;\n    hasItems: boolean;\n    selected: boolean;\n}\n\nexport interface Letters {\n    [LetterGroupType.RUS]: Letter[];\n    [LetterGroupType.ENG]: Letter[];\n    [LetterGroupType.ETC]: Letter[];\n}\n\nexport interface Catalog {\n    catalogPath: string;\n    nominative: string;\n    count: number;\n}\n\nexport interface SeoPaging extends Paging {\n    basePath: string;\n    templatePageParam: string;\n}\n\nexport enum SearchCatalogListType {\n    Main = 'main',\n    ByLetter = 'byLetter',\n}\n\nexport interface SearchCatalogListMain {\n    listType: SearchCatalogListType.Main;\n    catalogType: SearchCatalogType;\n    letters: Letters;\n}\n\nexport interface SearchCatalogListByLetter {\n    listType: SearchCatalogListType.ByLetter;\n    catalogType: SearchCatalogType;\n    letters: Letters;\n    catalogs: Catalog[];\n    seoPaging?: SeoPaging;\n}\n\ntype SearchCatalogList = SearchCatalogListMain | SearchCatalogListByLetter;\n\nexport default autoGeneratedReducer<SearchCatalogList>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum SearchCatalogType {\n    Resumes = 'resumes',\n    Vacancies = 'vacancies',\n}\n\nexport default autoGeneratedReducer<SearchCatalogType>(null);\n","import { AnyAction } from 'redux';\n\nimport createReducer from '@hh.ru/redux-create-reducer';\n\nimport NovaFilters, { NovaFilterKey, Range } from 'lux/models/novaFilters';\nimport { Gender } from 'lux/models/resume/resumeCommon.types';\nimport { RelocationOption } from 'lux/models/resumeSearchCriteria';\nimport { FilterExpPeriodOption } from 'lux/models/search/searchCriteria.types';\n\nexport const EMPTY_CLUSTER = { groups: {}, selectedValues: [] };\nexport const EMPTY_SINGLE_CLUSTER = { groups: {}, selectedValues: false };\nexport const EMPTY_RANGE_CLUSTER = {\n    groups: {},\n    selectedValues: {\n        [Range.From]: null,\n        [Range.To]: null,\n        onlyWith: false,\n    },\n};\nconst EMPTY_COMPENSATION_CLUSTER = {\n    groups: {},\n    selectedValues: {\n        salary: null,\n        onlyWithSalary: false,\n    },\n};\nexport const EMPTY_GENDER_CLUSTER = {\n    groups: {},\n    selectedValues: {\n        value: Gender.Unknown,\n        onlyWith: false,\n    },\n};\n\nconst INITIAL_STATE = {\n    [NovaFilterKey.AcceptTemporary]: EMPTY_SINGLE_CLUSTER,\n    [NovaFilterKey.Age]: EMPTY_RANGE_CLUSTER,\n    [NovaFilterKey.Area]: EMPTY_CLUSTER,\n    [NovaFilterKey.Compensation]: EMPTY_COMPENSATION_CLUSTER,\n    [NovaFilterKey.University]: EMPTY_CLUSTER,\n    [NovaFilterKey.Education]: EMPTY_CLUSTER,\n    [NovaFilterKey.ExcludedText]: EMPTY_CLUSTER,\n    [NovaFilterKey.Gender]: { groups: {}, selectedValues: EMPTY_GENDER_CLUSTER },\n    [NovaFilterKey.Industry]: EMPTY_CLUSTER,\n    [NovaFilterKey.Metro]: EMPTY_CLUSTER,\n    [NovaFilterKey.Relocation]: { groups: {}, selectedValues: RelocationOption.Living },\n    [NovaFilterKey.Salary]: EMPTY_RANGE_CLUSTER,\n    [NovaFilterKey.SubIndustry]: EMPTY_CLUSTER,\n    [NovaFilterKey.ProfessionalRole]: EMPTY_CLUSTER,\n    [NovaFilterKey.District]: EMPTY_CLUSTER,\n    [NovaFilterKey.Employment]: EMPTY_CLUSTER,\n    [NovaFilterKey.Company]: EMPTY_CLUSTER,\n    [NovaFilterKey.EducationLevel]: EMPTY_CLUSTER,\n    [NovaFilterKey.Experience]: EMPTY_CLUSTER,\n    [NovaFilterKey.FilterExpIndustry]: EMPTY_CLUSTER,\n    [NovaFilterKey.FilterExpPeriodForIndustry]: { groups: {}, selectedValues: FilterExpPeriodOption.AllTime },\n    [NovaFilterKey.JobSearchStatus]: EMPTY_CLUSTER,\n    [NovaFilterKey.Label]: EMPTY_CLUSTER,\n    [NovaFilterKey.Neighbours]: EMPTY_CLUSTER,\n    [NovaFilterKey.Resume]: EMPTY_CLUSTER,\n    [NovaFilterKey.Schedule]: EMPTY_CLUSTER,\n    [NovaFilterKey.VacancyId]: EMPTY_CLUSTER,\n    [NovaFilterKey.PartTime]: EMPTY_CLUSTER,\n} as unknown as NovaFilters;\n\nconst NOVA_FILTER_UPDATE_SELECTED_VALUES = 'NOVA_FILTER_UPDATE_SELECTED_VALUES';\n\ninterface PayloadTypes {\n    [NOVA_FILTER_UPDATE_SELECTED_VALUES]: {\n        data: NovaFilters[keyof NovaFilters]['selectedValues'];\n        filter: keyof NovaFilters;\n    };\n}\nexport const searchClustersUpdate = <F extends keyof NovaFilters>(payload: {\n    filter: F;\n    data: NovaFilters[F]['selectedValues'];\n}): AnyAction => ({ type: NOVA_FILTER_UPDATE_SELECTED_VALUES, payload });\n\nexport default createReducer<NovaFilters, PayloadTypes>(INITIAL_STATE, {\n    [NOVA_FILTER_UPDATE_SELECTED_VALUES]: (state, { payload: { data, filter } }) => {\n        const copy = { ...state };\n        copy[filter].selectedValues = data;\n        return copy;\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { NovaFilterKey } from 'lux/models/novaFilters';\n\nconst SEARCH_CLUSTER_ORDER_AREA = 'SEARCH_CLUSTER_ORDER_AREA';\nconst SEARCH_CLUSTER_ORDER_DISTRICT = 'SEARCH_CLUSTER_ORDER_DISTRICT';\nconst SEARCH_CLUSTER_ORDER_METRO = 'SEARCH_CLUSTER_ORDER_METRO';\nconst SEARCH_CLUSTER_ORDER_PROF_ROLE = 'SEARCH_CLUSTER_ORDER_PROF_ROLE';\nconst SEARCH_CLUSTER_ORDER_INDUSTRY = 'SEARCH_CLUSTER_ORDER_INDUSTRY';\nconst SEARCH_CLUSTER_ORDER_SUB_INDUSTRY = 'SEARCH_CLUSTER_ORDER_SUB_INDUSTRY';\nconst SEARCH_CLUSTER_ORDER_SKILL = 'SEARCH_CLUSTER_ORDER_SKILL';\nconst SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES = 'SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES';\nconst SEARCH_CLUSTER_ORDER_LABEL = 'SEARCH_CLUSTER_ORDER_LABEL';\n\ninterface PayloadTypes {\n    [SEARCH_CLUSTER_ORDER_AREA]: string[];\n    [SEARCH_CLUSTER_ORDER_DISTRICT]: string[];\n    [SEARCH_CLUSTER_ORDER_METRO]: string[];\n    [SEARCH_CLUSTER_ORDER_PROF_ROLE]: string[];\n    [SEARCH_CLUSTER_ORDER_INDUSTRY]: string[];\n    [SEARCH_CLUSTER_ORDER_SUB_INDUSTRY]: string[];\n    [SEARCH_CLUSTER_ORDER_SKILL]: string[];\n    [SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES]: string[];\n    [SEARCH_CLUSTER_ORDER_LABEL]: string[];\n}\n\nconst actionHelper = ActionCreatorHelper<PayloadTypes>();\n\nexport const setOrderArea = actionHelper(SEARCH_CLUSTER_ORDER_AREA);\nexport const setOrderDistrict = actionHelper(SEARCH_CLUSTER_ORDER_DISTRICT);\nexport const setOrderMetro = actionHelper(SEARCH_CLUSTER_ORDER_METRO);\nexport const setOrderProfRole = actionHelper(SEARCH_CLUSTER_ORDER_PROF_ROLE);\nexport const setOrderIndustry = actionHelper(SEARCH_CLUSTER_ORDER_INDUSTRY);\nexport const setOrderSubIndustry = actionHelper(SEARCH_CLUSTER_ORDER_SUB_INDUSTRY);\nexport const setOrderSkill = actionHelper(SEARCH_CLUSTER_ORDER_SKILL);\nexport const setOrderDriverLicenceTypes = actionHelper(SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES);\nexport const setOrderLabel = actionHelper(SEARCH_CLUSTER_ORDER_LABEL);\n\ntype InitialState = Record<NovaFilterKey, string[]>;\nconst INITIAL_STATE = Object.values(NovaFilterKey).reduce((result, item) => {\n    result[item] = [];\n    return result;\n}, {} as InitialState);\n\nexport default createReducer<InitialState, PayloadTypes>(INITIAL_STATE, {\n    [SEARCH_CLUSTER_ORDER_AREA]: (state, { payload }) => {\n        state[NovaFilterKey.Area] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_DISTRICT]: (state, { payload }) => {\n        state[NovaFilterKey.District] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_METRO]: (state, { payload }) => {\n        state[NovaFilterKey.Metro] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_PROF_ROLE]: (state, { payload }) => {\n        state[NovaFilterKey.ProfessionalRole] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_INDUSTRY]: (state, { payload }) => {\n        state[NovaFilterKey.Industry] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_SUB_INDUSTRY]: (state, { payload }) => {\n        state[NovaFilterKey.SubIndustry] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_SKILL]: (state, { payload }) => {\n        state[NovaFilterKey.Skill] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES]: (state, { payload }) => {\n        state[NovaFilterKey.DriverLicenseTypes] = [...payload];\n        return state;\n    },\n    [SEARCH_CLUSTER_ORDER_LABEL]: (state, { payload }) => {\n        state[NovaFilterKey.Label] = [...payload];\n        return state;\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { NovaFilterKey } from 'lux/models/novaFilters';\n\nexport const DEFAULT_TIP_STATE = {\n    show: false,\n    totalResults: 0,\n    filter: null,\n};\n\nexport default autoGeneratedReducer<{ show: boolean; totalResults: number; filter?: NovaFilterKey | null }>(\n    DEFAULT_TIP_STATE\n);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nexport const MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT = 5;\nexport const MIN_APPLICANT_SUITABLE_VACANCIES_COUNT = 1;\n\ninterface SuitableVacancies {\n    itemsOnPage: number;\n    resultsFound: number;\n    totalPages: number;\n    lastActivityTimeByHHID: Record<string, { dt: string }>;\n    vacancies: VacancySearchItem[];\n    areaIds: string[];\n}\n\nexport default autoGeneratedReducer<SuitableVacancies>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { DataProviderItem } from 'bloko/blocks/suggest/types';\n\nexport enum SupernovaSearchName {\n    Employers = 'employersList',\n    Resumes = 'resumeSearch',\n    Vacancies = 'searchVacancy',\n}\n\nexport const SupernovaSearchNameAnalyticsMapping = {\n    [SupernovaSearchName.Employers]: 'employer_search_line',\n    [SupernovaSearchName.Resumes]: 'resume_search_line',\n    [SupernovaSearchName.Vacancies]: 'vacancy_search_line',\n};\n\nexport default autoGeneratedReducer<SupernovaSearchName>(null);\n\nexport interface SupernovaSearchItem extends DataProviderItem {\n    query?: string;\n}\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum SupernovaUserType {\n    Employer = 'employer',\n    Applicant = 'applicant',\n}\n\nexport default autoGeneratedReducer(SupernovaUserType.Applicant);\n","export const WITH_TOP_FILTER_CATALOG = 'withTopFilterCatalog';\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum TopLevelSite {\n    RU = 'hh.ru',\n    UA = 'hh.ua',\n    UZ = 'hh.uz',\n    GE = 'headhunter.ge',\n    KG = 'headhunter.kg',\n    KZ = 'headhunter.com.kz',\n    AZ = 'jobs.day.az',\n    BY = 'jobs.tut.by',\n    ZP = 'hr.zarplata.ru',\n}\n\nexport const paymentNotAvailableSites = [TopLevelSite.UZ, TopLevelSite.KG, TopLevelSite.GE, TopLevelSite.KZ];\n\nexport default autoGeneratedReducer<TopLevelSite>(TopLevelSite.RU);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst TOP_PROMO_BANNER_HIDE = 'TOP_PROMO_BANNER_HIDE';\n\ninterface TopPromoBanner {\n    name: string;\n    isShow: boolean;\n    isFirstShow: boolean;\n    link: string;\n    translations: {\n        desktop: {\n            [key: string]: string;\n        };\n        mobile: {\n            [key: string]: string;\n        };\n    };\n}\n\ninterface PayloadTypes {\n    [TOP_PROMO_BANNER_HIDE]: void;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const hideTopPromoBanner = actionCreator(TOP_PROMO_BANNER_HIDE);\n\nconst INITIAL_STATE = {\n    isShow: false,\n    isFirstShow: false,\n    link: '',\n    name: '',\n    translations: {\n        desktop: {\n            description: '',\n            link: '',\n        },\n        mobile: {\n            description: '',\n            link: '',\n        },\n    },\n};\n\nexport default createReducer<TopPromoBanner, PayloadTypes>(INITIAL_STATE, {\n    [TOP_PROMO_BANNER_HIDE]: (state) => ({\n        ...state,\n        isShow: false,\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface UnpremoderatedPremoderator {\n    id: number;\n    name: string;\n    vacancyCount: number;\n}\n\nexport interface UnpremoderatedVacancy {\n    id: number;\n    name: string;\n    area: string;\n    publicationTime: string;\n    moneyRange: {\n        currencyCode: CurrencyType | null;\n        from: string | null;\n        to: string | null;\n    };\n    manager: {\n        id: number;\n        name: string;\n    };\n}\n\nexport interface UnpremoderatedVacancies {\n    list: UnpremoderatedVacancy[];\n    count: number;\n    page: number;\n    loadMore: boolean;\n}\n\nexport interface UnpremoderatedVacancyList {\n    premoderators: UnpremoderatedPremoderator[];\n    vacancies: {\n        [moderatorId: number]: UnpremoderatedVacancies;\n    };\n}\n\nconst LOADED_MORE_UNPREMODERATED_VACANCIES = 'LOADED_MORE_UNPREMODERATED_VACANCIES';\nconst REMOVE_UNPREMODERATED_VACANCY = 'REMOVE_UNPREMODERATED_VACANCY';\n\ninterface PayloadTypes {\n    [LOADED_MORE_UNPREMODERATED_VACANCIES]: { moderatorId: number; vacancies: UnpremoderatedVacancies };\n    [REMOVE_UNPREMODERATED_VACANCY]: { moderatorId: number; vacancyId: number };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const loadedMoreUnpremoderatedVacanciesAction = actionCreator(LOADED_MORE_UNPREMODERATED_VACANCIES);\nexport const removeUnpremoderatedVacancyAction = actionCreator(REMOVE_UNPREMODERATED_VACANCY);\n\nexport default createReducer<UnpremoderatedVacancyList, PayloadTypes>(null, {\n    [LOADED_MORE_UNPREMODERATED_VACANCIES]: (state, { payload }) => ({\n        ...state,\n        vacancies: {\n            ...state.vacancies,\n            [payload.moderatorId]: {\n                ...payload.vacancies,\n                list: [...(state.vacancies[payload.moderatorId]?.list || []), ...payload.vacancies.list],\n            },\n        },\n    }),\n    [REMOVE_UNPREMODERATED_VACANCY]: (state, { payload }) => ({\n        ...state,\n        vacancies: {\n            ...state.vacancies,\n            [payload.moderatorId]: {\n                ...state.vacancies[payload.moderatorId],\n                list: state.vacancies[payload.moderatorId].list.filter((vacancy) => vacancy.id !== payload.vacancyId),\n                count: state.vacancies[payload.moderatorId].count - 1,\n            },\n        },\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport UserLabel from 'lux/modules/userLabels';\n\nexport const USER_LABELS_FOR_VACANCIES_ADD = 'USER_LABELS_FOR_VACANCIES_ADD';\nexport const USER_LABELS_FOR_VACANCIES_REMOVE = 'USER_LABELS_FOR_VACANCIES_REMOVE';\nexport const INITIAL_STATE = {};\n\ninterface PayloadTypes {\n    [USER_LABELS_FOR_VACANCIES_ADD]: { vacancyId: number; labels: UserLabel[] };\n    [USER_LABELS_FOR_VACANCIES_REMOVE]: { vacancyId: number; label: UserLabel };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const addUserLabelsForVacancies = actionCreator(USER_LABELS_FOR_VACANCIES_ADD);\nexport const removeUserLabelsForVacancies = actionCreator(USER_LABELS_FOR_VACANCIES_REMOVE);\n\nexport default createReducer<{ [vacancyId: number]: UserLabel[] }, PayloadTypes>(INITIAL_STATE, {\n    [USER_LABELS_FOR_VACANCIES_ADD]: (state, { payload }) => {\n        const labels = state[payload.vacancyId] ? state[payload.vacancyId] : [];\n\n        return {\n            ...state,\n            [payload.vacancyId]: [...labels, ...payload.labels],\n        };\n    },\n    [USER_LABELS_FOR_VACANCIES_REMOVE]: (state, { payload }) => ({\n        ...state,\n        [payload.vacancyId]: state[payload.vacancyId].filter((label) => label !== payload.label),\n    }),\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nenum NotificationPriority {\n    HIGH = 'HIGH',\n    MEDIUM = 'MEDIUM',\n    LOW = 'LOW',\n}\n\nexport enum ComplexUserNotificationsTemplateKey {\n    ApplicantCallTracking = 'call.tracking.applicant.call.response',\n    ApplicantFeedbackAboutVacancy = 'applicant.feedback.about.vacancy',\n    ApplicantWorkAddress = 'applicant.specify.work.search.address',\n    BillingCartActivated = 'billing.cart.activated',\n    BillingCartActivationReady = 'billing.cart.activation.ready',\n    BillingCartInsufficientFunds = 'billing.cart.insufficient.funds',\n    BillingCartIrrelevantStatus = 'billing.cart.irrelevant.status',\n    BillingCartError = 'billing.cart.system.error',\n    BillingDelayedCartActivationForbidden = 'billing.delayed.cart.activation.forbidden',\n    BillingDelayedCartActivationExpired = 'billing.delayed.cart.activation.expired',\n    FillEmployerPageConstructor = 'branding.reminder.fill.employer.page.constructor',\n    FillEmployerVacancyPageConstructor = 'branding.reminder.fill.vacancy.constructor',\n    BuyVacancyPageConstructor = 'branding.suggestion.buy.vacancy.constructor',\n    BuyEmployerPageConstructor = 'branding.suggestion.buy.employer.page.constructor',\n    SuggestionVacancyMakeup = 'branding.suggestion.vacancy.makeup',\n    SuggestionEmployerMakeup = 'branding.suggestion.employer.page.makeup',\n    CallTracking = 'vacancy.call.tracking.tele2owners.warning',\n    CareerConsultPaid = 'career.consult.paid',\n    CareerConsultwaitingForCall = 'career.consult.waitingForCall',\n    CompleteResumeWorkDone = 'complete.resume.workDone',\n    CompleteResumePaid = 'complete.resume.paid',\n    CompleteResumeWaitingForCall = 'complete.resume.waitingForCall',\n    Employer2fa = 'employer.2fa.enabled.soon',\n    EmployerReviewsCanEnable = 'employer.reviews.notify.employer.can.enable',\n    EmployerReviewFeedbackCreated = 'employer.reviews.notify.feedback.created',\n    EmployerYearResults = 'employer.year.results',\n    HHRatingRegistration = 'hhrating.registration.invitation',\n    HHRatingVoteInvitation = 'hhrating.vote.invitation',\n    HRSpacePromoITEmployer = 'hrspace.promo.it.employer',\n    HRSpacePromoEmployer = 'hrspace.promo.employer',\n    HRSpacePromoApplicant = 'hrspace.promo.applicant',\n    // tempexp_26167_next-line\n    HRElkaSpecial = 'employer.hr.elka.special',\n    InterviewPracticePaid = 'interview.practice.paid',\n    InterviewPracticeForCall = 'interview.practice.waitingForCall',\n    NegotiationInterview = 'negotiation.interview',\n    PricesIncrease = 'employer.prices.increase',\n    ResumeBlocked = 'resume.blocked',\n    ResumeTargetEmployerDiscount = 'resume.targetEmployer.discount',\n    ResumeRenewalExpired = 'resume.renewal.expired',\n    ResumeRenewalSoonExpires = 'resume.renewal.soonExpires',\n    EmployerLoyaltySurvey = 'employer.loyaltySurvey',\n    EmployerItAccreditation = 'employer.it.accreditation',\n    UserSupportNewEvents = 'user.support.new.events',\n    VideoCall = 'video.call.info',\n    ApplicantJobSearchStatus = 'applicant.job.search.status',\n    EmployerYearResult = 'employer.year.results',\n    AutoSearchVacancies = 'new.vacancies.in.autosearch',\n    VacancyAutoProlongation = 'vacancy.autoprolongation.couldbecanceled',\n    VacancyAutoPublicationFailure = 'vacancy.auto.publication.no.quotas.failure',\n    VacancyAutoPublicationNoPermission = 'vacancy.auto.publication.no.permission.failure',\n    VacancyAutoPublicationNoPublication = 'vacancy.auto.publication.no.publication.failure',\n    VacancyAutoPublicationValidationFailure = 'vacancy.auto.publication.validation.failure',\n    VacancyAutoPublicationUnknown = 'vacancy.auto.publication.unknown.failure',\n    VacancyAutoPublicationSuccesses = 'vacancy.auto.publication.successes',\n    VacancyAutoPublicationSuccess = 'vacancy.auto.publication.success',\n    VacancyAutoUpdateSuccesses = 'vacancy.auto.update.successes',\n    VacancyAutoUpdateSuccess = 'vacancy.auto.update.success',\n    VacancyAutoUpdateNoPublications = 'vacancy.auto.update.no.publications.checks',\n    VacancyAutoUpdateNoQuota = 'vacancy.auto.update.no.quota.checks',\n    VacancyAutoUpdateNoPermissions = 'vacancy.auto.update.no.permissions.checks',\n    VacancyAutoUpdateNoPublication = 'vacancy.auto.update.no.publications.check',\n    VacancyAutoUpdateNoQuotas = 'vacancy.auto.update.no.quota.check',\n    VacancyAutoUpdateNoPermission = 'vacancy.auto.update.no.permissions.check',\n    VacancyAutoUpdateNoQuotaFailure = 'vacancy.auto.update.no.quota.failure',\n    VacancyAutoUpdateNoQuotaFailures = 'vacancy.auto.update.no.quota.failures',\n    VacancyAutoUpdateNoPublicationFailure = 'vacancy.auto.update.no.publications.failure',\n    VacancyAutoUpdateNoPublicationFailures = 'vacancy.auto.update.no.publications.failures',\n    VacancyAutoUpdateNoPermissionFailure = 'vacancy.auto.update.no.permissions.failure',\n    VacancyAutoUpdateNoPermissionFailures = 'vacancy.auto.update.no.permissions.failures',\n    VacancyAutoUpdateTooMuchFailure = 'vacancy.auto.update.too.much.failure',\n    VacancyAutoUpdateTooMuchFailures = 'vacancy.auto.update.too.much.failures',\n    VacancyScheduledPublicationNoQuotasFailure = 'vacancy.scheduled.publication.no.quotas.failure',\n    VacancyScheduledPublicationNoPermissionFailure = 'vacancy.scheduled.publication.no.permission.failure',\n    VacancyScheduledPublicationNoPublicationFailure = 'vacancy.scheduled.publication.no.publication.failure',\n    VacancyScheduledPublicationValidationFailure = 'vacancy.scheduled.publication.validation.failure',\n    VacancyScheduledPublicationUnknownFailure = 'vacancy.scheduled.publication.unknown.failure',\n    VacancyScheduledPublicationSuccesses = 'vacancy.scheduled.publication.successes',\n    VacancyScheduledPublicationSuccess = 'vacancy.scheduled.publication.success',\n    VacancyDraftPublicationReady = 'employer.vacancy.draft.publicationready',\n    EmployerPricesIncrease = 'employer.prices.increase',\n    ChangeEmployerManagerEmailConfirmationReminder = 'change.employer.manager.email.confirmation.reminder',\n    ChangeEmployerManagerEmailChangedNotification = 'change.employer.manager.email.changed.notification',\n    AdvertisementAgreement = 'advertisement.agreement',\n    VacancyBlockedDuePaidServices = 'vacancy.blocked.due.paid.services',\n    VacancyBlockedDueBadDescription = 'vacancy.blocked.due.bad.description',\n    VacancyBlockedDueTwoInOne = 'vacancy.blocked.due.two.in.one',\n    VacancyBlockedDueTraining = 'vacancy.blocked.due.training',\n    VacancyBlockedDueCaptionMissing = 'vacancy.blocked.due.caption.missing',\n    VacancyBlockedDueModerator = 'vacancy.blocked.due.moderator',\n    VacancyBlockedDueRelocateFromBelarus = 'vacancy.blocked.due.relocate.from.belarus',\n    VacancyBlockedDueReplacement = 'vacancy.blocked.due.replacement',\n    AutoInviteDisabled = 'auto.invite.disabled',\n    KingdomOfVacancy = 'resume.kingdomOfVacancy',\n}\n\nexport enum SimpleUserNotificationsTemplateKey {\n    SiteWasUnavailable = 'site_was_unavailable',\n    GreetingsFromZarplata = 'greetings_from_zarplata',\n    EmployerOverspendingInfo = 'employerOverspendingInfo',\n    EmailVerificationCompleted = 'email_verification_completed',\n    EmailVerificationError = 'email_verification_error',\n    EmailVerificationErrorAgain = 'email_verification_error_again',\n    EmailVerificationWasSent = 'email_verification_was_sent',\n    EmailVerificationWasSentAgain = 'email_verification_was_sent_again',\n    EmailVerificationWasSentAgainTooOften = 'email_verification_was_sent_again_too_often',\n    EmailVerificationWasSentAgainError = 'email_verification_was_sent_again_error',\n    ManagerQuotaChangeFail = 'manager_quota_change_fail',\n    EsiaAccountNotLinked = 'esiaAccountNotLinked',\n    ZarplataNoSocialRegistration = 'zarplataNoSocialRegistration',\n    OauthConnectInternalError = 'oauthConnectInternalError',\n    SurveyWasIgnored = 'survey_was_ignored',\n    SurveyWasFinished = 'survey_was_finished',\n    PhoneHasBeenVerified = 'phone_has_been_verified',\n    ManagerQuotaChangeSuccess = 'manager_quota_change_success',\n    AllSurveysWereIgnored = 'all_surveys_were_ignored',\n    AccountDeleted = 'account_deleted',\n    ScheduleInterview = 'scheduleInterview',\n    LoyaltySurvey = 'loyalty_survey',\n    VacancyDraftSaved = 'showDraftSaveNotification',\n    ResumeMergeSuccess = 'resume_merge_success',\n    VideoInteview = 'videointerview',\n    VideoInteviewVacancy = 'videointerview_vacancy',\n    EmployerHhRatingResultsForEmployers = 'employerHhRatingResultsForEmployers',\n    EmployerHhRatingResultsForApplicants = 'employerHhRatingResultsForApplicants',\n    SkillVerificationExpiring = 'skillVerificationExpiring',\n    // tempexp_28472_next-line\n    ClientDay = 'marketingClientDay',\n}\n\nexport type UserNotificationsParams = Record<string, string>;\nexport type UserNotificationId = number;\ntype UserNotificationIdList = UserNotificationId[];\n\nexport interface ComplexUserNotification {\n    id: UserNotificationId;\n    templateKey: ComplexUserNotificationsTemplateKey;\n    notificationCode: string;\n    objectId: string;\n    creationTime: number | null;\n    creationTimeIso: string | null;\n    receivingTime: number | null;\n    receivingTimeIso: string | null;\n    deleteTime: number | null;\n    deleteTimeIso: string | null;\n    priority: NotificationPriority;\n    viewed: boolean;\n    params: UserNotificationsParams;\n    isPriority: boolean;\n    isSupernova: boolean;\n    close?: VoidFunction;\n}\n\nexport interface SimpleUserNotification {\n    templateKey: SimpleUserNotificationsTemplateKey;\n    params: UserNotificationsParams;\n}\n\nexport type UserNotification = ComplexUserNotification | SimpleUserNotification;\nexport type UserNotifications = UserNotification[];\n\nconst DELETE_USER_NOTIFICATION = 'DELETE_USER_NOTIFICATION';\nconst MARK_AS_VIEWED_USER_NOTIFICATIONS = 'MARK_AS_VIEWED_USER_NOTIFICATIONS';\nconst ADD_USER_NOTIFICATIONS = 'ADD_USER_NOTIFICATIONS';\n\ninterface PayloadTypes {\n    [DELETE_USER_NOTIFICATION]: UserNotificationId;\n    [MARK_AS_VIEWED_USER_NOTIFICATIONS]: UserNotificationIdList;\n    [ADD_USER_NOTIFICATIONS]: UserNotification[];\n}\n\nconst simpleNotificationsKeys = Object.values(SimpleUserNotificationsTemplateKey);\nexport const isSimpleUserNotification = (notification: UserNotification): notification is SimpleUserNotification => {\n    const keys: Array<string> = simpleNotificationsKeys;\n    return keys.includes(notification.templateKey);\n};\n\nconst complexNotificationsKeys = Object.values(ComplexUserNotificationsTemplateKey);\nexport const isComplexUserNotification = (notification: UserNotification): notification is ComplexUserNotification => {\n    const keys: Array<string> = complexNotificationsKeys;\n    return keys.includes(notification.templateKey);\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const deleteUserNotification = actionCreator(DELETE_USER_NOTIFICATION);\nexport const markUserNotificationsAsViewedByIds = actionCreator(MARK_AS_VIEWED_USER_NOTIFICATIONS);\nexport const addUserNotifications = actionCreator(ADD_USER_NOTIFICATIONS);\n\nexport default createReducer<UserNotifications, PayloadTypes>([], {\n    [DELETE_USER_NOTIFICATION]: (state, { payload }) =>\n        state.filter((notification) => isComplexUserNotification(notification) && notification.id !== payload),\n    [MARK_AS_VIEWED_USER_NOTIFICATIONS]: (state, { payload }) =>\n        state.map((notification) => {\n            if (isComplexUserNotification(notification) && payload.includes(notification.id)) {\n                return { ...notification, viewed: true };\n            }\n\n            return notification;\n        }),\n    [ADD_USER_NOTIFICATIONS]: (state, { payload }) => [...state, ...payload],\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum UserStat {\n    ApplicantInvitations = 'applicant-invitations',\n    NewApplicants = 'new-applicants',\n    NewApplicantInvitations = 'new-applicant-invitations',\n    NewResumesSavedSearch = 'new-resumes-saved-search',\n    NewResumesViews = 'new-resumes-views',\n    NewStatsTotal = 'new-stats-total',\n    NewWannaWork = 'new-wanna-work',\n    ResumesViews = 'resumes-views',\n    WannaWork = 'wanna-work',\n}\n\nconst INCREMENT_APPLICANT_INVITATIONS_COUNT = 'INCREMENT_APPLICANT_INVITATIONS_COUNT';\n\ninterface PayloadTypes {\n    [INCREMENT_APPLICANT_INVITATIONS_COUNT]: number;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const incrementApplicantInvitationsCount = ActionCreator(INCREMENT_APPLICANT_INVITATIONS_COUNT);\n\ntype UserStats = Record<UserStat, number> | null;\n\nexport default createReducer<UserStats, PayloadTypes>(null, {\n    [INCREMENT_APPLICANT_INVITATIONS_COUNT]: (state, { payload }) => {\n        if (state) {\n            return {\n                ...state,\n                [UserStat.ApplicantInvitations]: state[UserStat.ApplicantInvitations] + payload,\n            };\n        }\n        return state;\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum UserType {\n    Anonymous = 'anonymous',\n    NedoUser = 'nedouser',\n    BackOffice = 'backoffice',\n    Employer = 'employer',\n    Applicant = 'applicant',\n}\n\nexport default autoGeneratedReducer(UserType.Anonymous);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport {\n    RegionTypes,\n    VacancyGroupsState,\n    VacanciesGroup,\n    VacanciesToProfRole,\n    ProfRoleExpanded,\n    FirstPageLoadedWithRoles,\n} from 'lux/components/Employer/VacanciesGroupsByRegion/VacancyGroupsTypes';\n\nconst RESET_TO_DEFAULT = 'RESET_TO_DEFAULT';\nconst ADD_VACANCIES_TO_PROFROLES = 'ADD_VACANCIES_TO_PROFROLES';\nconst SET_PROFROLE_EXPANDED = 'SET_PROFROLE_EXPANDED';\nconst SET_FIRST_PAGE_LOADED_WITH_ROLES = 'SET_FIRST_PAGE_LOADED_WITH_ROLES';\nconst ADD_PROF_ROLES = 'ADD_PROF_ROLES';\n\nconst INITIAL_STATE = {\n    [RegionTypes.Current]: {},\n};\n\ninterface PayloadTypes {\n    [RESET_TO_DEFAULT]: VacancyGroupsState;\n    [ADD_VACANCIES_TO_PROFROLES]: VacanciesToProfRole;\n    [SET_PROFROLE_EXPANDED]: ProfRoleExpanded;\n    [SET_FIRST_PAGE_LOADED_WITH_ROLES]: FirstPageLoadedWithRoles;\n    [ADD_PROF_ROLES]: VacanciesGroup;\n}\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const resetToDefault = ActionCreator(RESET_TO_DEFAULT);\n\nexport const addVacanciesToProfRole = ActionCreator(ADD_VACANCIES_TO_PROFROLES);\n\nexport const setProfRoleExpanded = ActionCreator(SET_PROFROLE_EXPANDED);\n\nexport const firstPageLoadedWithRoles = ActionCreator(SET_FIRST_PAGE_LOADED_WITH_ROLES);\n\nexport const addProfRoles = ActionCreator(ADD_PROF_ROLES);\n\nexport default createReducer<VacancyGroupsState, PayloadTypes>(INITIAL_STATE, {\n    [RESET_TO_DEFAULT]: (state, { payload }) => {\n        return {\n            ...state,\n            ...payload,\n        };\n    },\n    [ADD_VACANCIES_TO_PROFROLES]: (state, { payload }) => {\n        const regionPropName = payload.regionType;\n        const newState = { ...state };\n        const dataRegion = state[regionPropName];\n        const modifedDataRegion = {\n            ...dataRegion,\n            countsByProfRole: dataRegion?.countsByProfRole?.map((profRole) => {\n                if (profRole.profRoleId === payload.profRoleId) {\n                    return {\n                        ...profRole,\n                        ...payload.data,\n                        count: profRole.count,\n                        vacancies:\n                            profRole.vacancies && payload.data?.vacancies\n                                ? [...profRole.vacancies, ...payload.data.vacancies]\n                                : payload.data.vacancies,\n                    };\n                }\n                return profRole;\n            }),\n        };\n        newState[regionPropName] = modifedDataRegion;\n        return newState;\n    },\n    [SET_PROFROLE_EXPANDED]: (state, { payload }) => {\n        const regionPropName = payload.regionType;\n        const newState = { ...state };\n        const dataRegion = state[regionPropName];\n        const modifedDataRegion = {\n            ...dataRegion,\n            countsByProfRole: dataRegion?.countsByProfRole?.map((profRole) => {\n                if (profRole.profRoleId === payload.profRoleId) {\n                    return {\n                        ...profRole,\n                        expanded: payload.expanded,\n                    };\n                }\n                return profRole;\n            }),\n        };\n        newState[regionPropName] = modifedDataRegion;\n        return newState;\n    },\n    [SET_FIRST_PAGE_LOADED_WITH_ROLES]: (state, { payload }) => {\n        const regionPropName = payload.regionType;\n        const newState = { ...state };\n        const dataRegion = state[regionPropName];\n        const modifedDataRegion = {\n            ...dataRegion,\n            countsByProfRole: dataRegion?.countsByProfRole?.map((profRole) => {\n                if (profRole.profRoleId === payload.profRoleId) {\n                    return {\n                        ...profRole,\n                        firstPageLoaded: true,\n                    };\n                }\n                return profRole;\n            }),\n        };\n        newState[regionPropName] = modifedDataRegion;\n        return newState;\n    },\n    [ADD_PROF_ROLES]: (state, { payload }) => {\n        return {\n            ...state,\n            currentRegion: {\n                ...state.currentRegion,\n                count: payload.count,\n                countsByProfArea: payload.countsByProfArea,\n                countsByProfCategory: payload.countsByProfCategory,\n                countsByProfRole: payload.countsByProfRole,\n                vacancies: payload.vacancies,\n            },\n        };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\n\nexport enum TemplatesGroup {\n    Personal = 'personal',\n    Shared = 'shared',\n    Global = 'global',\n}\n\nexport interface VacancyTemplate {\n    id: number;\n    name: string;\n    shared?: boolean;\n    canEdit?: boolean;\n    employerManager?: {\n        id: number;\n        firstName: string | null;\n        lastName: string | null;\n    };\n}\n\nexport interface VacancyTemplates {\n    items: VacancyTemplate[];\n    paging: Paging | null;\n}\n\nconst REMOVE_VACANCY_TEMPLATE = 'REMOVE_VACANCY_TEMPLATE';\n\ninterface PayloadTypes {\n    [REMOVE_VACANCY_TEMPLATE]: { id: number };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const removeVacancyTemplate = actionCreator(REMOVE_VACANCY_TEMPLATE);\n\nexport default createReducer<VacancyTemplates, PayloadTypes>(\n    { items: [], paging: null },\n    {\n        [REMOVE_VACANCY_TEMPLATE]: (state, action) => {\n            return {\n                ...state,\n                items: state.items.filter((template) => template.id !== action.payload.id),\n            };\n        },\n    }\n);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Call } from 'lux/models/employer/vacancyresponses/calls.types';\n\ninterface CallResumeData {\n    name: string;\n    hash: string;\n}\n\ninterface PhoneCalls {\n    calls: Call[];\n}\n\ninterface VacancyResponsesState {\n    phoneCalls: PhoneCalls;\n    callsToResume: Record<number, CallResumeData>;\n}\n\nexport const INITIAL_STATE = {\n    phoneCalls: {\n        calls: [],\n    },\n    callsToResume: {},\n};\n\nexport const CALLS_TO_UPDATE = 'CALLS_TO_UPDATE';\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const updateCallsList = actionCreator(CALLS_TO_UPDATE);\n\ninterface PayloadTypes {\n    [CALLS_TO_UPDATE]: PhoneCalls;\n}\n\nexport default createReducer<VacancyResponsesState, PayloadTypes>(INITIAL_STATE, {\n    [CALLS_TO_UPDATE]: (state, action) => {\n        return { ...state, phoneCalls: action.payload };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { ClickmeProductType, PublicationProductType } from 'lux/models/price/product.types';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nexport interface AvailablePublicationTypesParams {\n    areaIds: string[];\n    divisionId?: string | undefined;\n    professionalRoleIds: string[];\n    withClickme?: boolean;\n    withZpCrossPost?: boolean;\n}\n\nexport type PurchaseProductList = (ClickmeProductType | PublicationProductType)[];\n\nexport interface PublicationTypePurchase {\n    /** Цена за публикацию без доп. продуктов */\n    labelPrice: number;\n    /** Цена за всё */\n    totalPrice: number;\n    currency: CurrencyType;\n    products: PurchaseProductList;\n    /** Признак того, что для текущего типа публикаций доступны продукты с кросспостингом */\n    zpCrossPostAvailable: boolean;\n    /** Значение галочки кросспостинга по умолчанию */\n    zpCrossPostDefault: boolean;\n    /** Стоимость кросспостинга */\n    zpCrossPostPrice: number;\n    /** Стоимость Clickme */\n    clickmePrice: number;\n}\n\nexport interface PublicationTypeSuitablePackage {\n    count: number;\n    employerServiceId: string;\n    expirationTime: string;\n    priceRegionIds: string[];\n    profRoleGroupIds: string[];\n    zpCrossPostAvailable: boolean;\n}\n\nexport interface AvailablePublicationType {\n    additionalFields: string[];\n    areaIdsWhereFailedToPublish: string[];\n    availableForPurchase: boolean;\n    canChangeVisibility: boolean;\n    ignoredFields: string[];\n    insufficientQuotaCount: number;\n    insufficientPublicationsCount: number;\n    invalidEmployerServiceIds?: string[];\n    possibleToSubmit: boolean;\n    publicationsCount: number;\n    purchase: PublicationTypePurchase | null;\n    quotaCount: number | null;\n    removedAdditionalFields: string[];\n    selectPackageEnabled: boolean;\n    suitablePackages: PublicationTypeSuitablePackage[];\n    translations: {\n        description: string;\n        shortTitle: string;\n        title: string;\n    };\n    type: MetallicVacancyType;\n    vacancyProperties?: {\n        id: string;\n        properties: { propertyType: string; parameters: Record<string, unknown>[] }[];\n    };\n}\n\nexport interface AvailablePublicationTypeTrls {\n    area: Record<string, string>;\n    profRoleGroup: Record<string, string>;\n    region: Record<string, string>;\n}\n\nexport interface AvailablePublicationTypesData {\n    // tempexp_26111_start\n    expData: {\n        priceOfTenStandard: number;\n        shouldCheckExp: boolean;\n    };\n    // tempexp_26111_end\n    publicationTypes: Record<MetallicVacancyType, AvailablePublicationType>;\n    publicationTypesOrder: MetallicVacancyType[];\n    recommendedPublicationType: MetallicVacancyType;\n    trls: AvailablePublicationTypeTrls;\n}\n\nconst UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS = 'UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS';\nconst SET_AVAILABLE_PUBLICATION_TYPES_LOADING = 'SET_AVAILABLE_PUBLICATION_TYPES_LOADING';\nconst SET_AVAILABLE_PUBLICATION_TYPES_DATA = 'SET_AVAILABLE_PUBLICATION_TYPES_DATA';\n\ntype PartialAvailablePublicationTypesParams = Partial<AvailablePublicationTypesParams>;\n\ninterface PayloadAvailablePublicationTypes {\n    [UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS]: PartialAvailablePublicationTypesParams;\n    [SET_AVAILABLE_PUBLICATION_TYPES_LOADING]: boolean;\n    [SET_AVAILABLE_PUBLICATION_TYPES_DATA]: AvailablePublicationTypesData | null;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadAvailablePublicationTypes>();\nexport const updateAvailablePublicationTypesParams = actionCreator(UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS);\nexport const setAvailablePublicationTypesLoading = actionCreator(SET_AVAILABLE_PUBLICATION_TYPES_LOADING);\nexport const setAvailablePublicationTypesData = actionCreator(SET_AVAILABLE_PUBLICATION_TYPES_DATA);\n\ninterface AvailablePublicationTypes {\n    loading: boolean;\n    params: AvailablePublicationTypesParams;\n    data: AvailablePublicationTypesData | null;\n}\n\nconst initialState: AvailablePublicationTypes = {\n    loading: false,\n    params: {\n        areaIds: [],\n        divisionId: undefined,\n        professionalRoleIds: [],\n        withClickme: false,\n        withZpCrossPost: undefined,\n    },\n    data: null,\n};\n\nexport default createReducer<AvailablePublicationTypes, PayloadAvailablePublicationTypes>(initialState, {\n    [UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS]: (state, { payload }) => {\n        return { ...state, params: { ...state.params, ...payload } };\n    },\n    [SET_AVAILABLE_PUBLICATION_TYPES_LOADING]: (state, { payload }) => {\n        return { ...state, loading: payload };\n    },\n    [SET_AVAILABLE_PUBLICATION_TYPES_DATA]: (state, { payload }) => {\n        return { ...state, data: payload };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport {\n    VacancyAdvicesState,\n    AdvicesState,\n    BuilderSupportedAdvice,\n} from 'lux/models/vacancyCreate/vacancyAdvices.types';\n\nexport const UPDATE_VACANCY_ADVICES = 'UPDATE_VACANCY_ADVICES';\nexport const CLEAN_VACANCY_ADVICES = 'CLEAN_VACANCY_ADVICES';\nexport const REMOVE_HIDDEN = 'REMOVE_HIDDEN';\nexport const ADD_HIDDEN = 'ADD_HIDDEN';\n\ninterface PayloadTypes {\n    [UPDATE_VACANCY_ADVICES]: AdvicesState;\n    [CLEAN_VACANCY_ADVICES]: void;\n    [REMOVE_HIDDEN]: BuilderSupportedAdvice[];\n    [ADD_HIDDEN]: BuilderSupportedAdvice[];\n}\n\nexport const initialState = {\n    supported: [],\n    visible: [],\n    hidden: Object.values(BuilderSupportedAdvice),\n    salary: null,\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const vacancyUpdateAdvices = actionCreator(UPDATE_VACANCY_ADVICES);\nexport const vacancyCleanAdvices = actionCreator(CLEAN_VACANCY_ADVICES);\nexport const removeHiddenVacancyAdvices = actionCreator(REMOVE_HIDDEN);\nexport const addHiddenVacancyAdvices = actionCreator(ADD_HIDDEN);\n\nexport default createReducer<VacancyAdvicesState, PayloadTypes>(initialState, {\n    [UPDATE_VACANCY_ADVICES]: (state, action) => {\n        const newVisible = action.payload.supported.filter(\n            (advice) => !state.visible.includes(advice) && !state.hidden.includes(advice)\n        );\n        const oldVisibleWithoutOutdated = state.visible.filter((advice) => action.payload.supported.includes(advice));\n        return {\n            ...state,\n            supported: action.payload.supported,\n            salary: action.payload.salary,\n            visible: [...newVisible, ...oldVisibleWithoutOutdated],\n        };\n    },\n    [CLEAN_VACANCY_ADVICES]: () => initialState,\n    [REMOVE_HIDDEN]: (state, action) => {\n        const newVisible = state.supported.filter(\n            (advice) => action.payload.includes(advice) && !state.visible.includes(advice)\n        );\n        return {\n            ...state,\n            visible: [...newVisible, ...state.visible],\n            hidden: state.hidden.filter((advice) => !action.payload.includes(advice)),\n        };\n    },\n    [ADD_HIDDEN]: (state, action) => {\n        const newHidden = state.supported.filter((advice) => action.payload.includes(advice));\n        return {\n            ...state,\n            visible: state.visible.filter((advice) => !newHidden.includes(advice)),\n            hidden: [...state.hidden, ...newHidden],\n        };\n    },\n});\n","export enum VacancyAdvice {\n    WorkAddress = 'ADD_WORK_ADDRESS',\n    ConditionsToDescription = 'ADD_CONDITIONS_TO_DESCRIPTION',\n    RequirementsToDescription = 'ADD_REQUIREMENTS_TO_DESCRIPTION',\n    ResponsibilitiesToDescription = 'ADD_RESPONSIBILITIES_TO_DESCRIPTION',\n    SalaryCloserToMarker = 'MAKE_SALARY_CLOSER_TO_MARKET',\n    UseStandardPlus = 'USE_STANDARD_PLUS',\n    PublishSalary = 'PUBLISH_SALARY',\n    ChangeVacancyName = 'CHANGE_VACANCY_NAME',\n    EmployerContacts = 'ADD_EMPLOYER_CONTACTS',\n    UseResumeSearch = 'USE_RESUME_SEARCH',\n    UseSearchTop = 'USE_SEARCH_TOP',\n    DecreaseWorkExperience = 'DECREASE_WORK_EXPERIENCE',\n}\n\nexport enum BuilderSupportedAdvice {\n    WorkAddress = 'ADD_WORK_ADDRESS',\n    SalaryCloserToMarker = 'MAKE_SALARY_CLOSER_TO_MARKET',\n    UseStandardPlus = 'USE_STANDARD_PLUS',\n    PublishSalary = 'PUBLISH_SALARY',\n    FillDescription = 'FILL_DESCRIPTION',\n    // tempexp_27471_start\n    SalaryRangeTooWide = 'SALARY_RANGE_TOO_WIDE',\n    // tempexp_27471_end\n}\n\nexport interface Salary {\n    minimal: number;\n    maximal: number;\n    median: number;\n    bottom: number;\n    upper: number;\n}\n\n// tempexp_27471_start\nexport interface Summary {\n    salaryRangeTooWide: boolean;\n}\n// tempexp_27471_end\n\nexport interface AdvicesState {\n    supported: BuilderSupportedAdvice[];\n    salary: Salary | null;\n}\n\nexport interface VacancyAdvicesState extends AdvicesState {\n    visible: BuilderSupportedAdvice[];\n    hidden: BuilderSupportedAdvice[];\n}\n\nexport interface VacancyAnalyzerAdvice {\n    advice: VacancyAdvice;\n    free: boolean;\n    performance: {\n        value: number;\n        points: number;\n        name: string;\n    };\n    performanceDelta: number;\n}\n","// tempexp_25347_file\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { VacancyAdvice } from 'lux/models/vacancyCreate/vacancyAdvices.types';\n\nexport interface VacancyAnalysisState {\n    advices: VacancyAdvice[];\n}\n\nexport const UPDATE_VACANCY_ANALYSIS = 'UPDATE_VACANCY_ANALYSIS';\nexport const CLEAN_VACANCY_ANALYSIS = 'CLEAN_VACANCY_ANALYSIS';\n\ninterface PayloadTypes {\n    [UPDATE_VACANCY_ANALYSIS]: VacancyAnalysisState;\n    [CLEAN_VACANCY_ANALYSIS]: void;\n}\n\nexport const initialState: VacancyAnalysisState = {\n    advices: [],\n};\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const vacancyUpdateAnalysis = actionCreator(UPDATE_VACANCY_ANALYSIS);\nexport const vacancyCleanAnalysis = actionCreator(CLEAN_VACANCY_ANALYSIS);\n\nexport default createReducer<VacancyAnalysisState, PayloadTypes>(initialState, {\n    [UPDATE_VACANCY_ANALYSIS]: (state, action) => {\n        return {\n            ...state,\n            advices: action.payload.advices,\n        };\n    },\n    [CLEAN_VACANCY_ANALYSIS]: () => initialState,\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { IVacancyCreateFormValues } from 'lux/models/vacancyCreate/vacancyCreate.types';\n\nexport const UPDATE_VACANCY_INITIAL_BODY = 'UPDATE_VACANCY_INITIAL_BODY';\n\ntype VacancyInitialBody = Partial<IVacancyCreateFormValues>;\n\ninterface PayloadTypes {\n    [UPDATE_VACANCY_INITIAL_BODY]: VacancyInitialBody;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const vacancyUpdateInitialBodyAction = actionCreator(UPDATE_VACANCY_INITIAL_BODY);\n\nexport const INITIAL_STATE: VacancyInitialBody = {};\n\nexport default createReducer<VacancyInitialBody, PayloadTypes>(INITIAL_STATE, {\n    [UPDATE_VACANCY_INITIAL_BODY]: (state, action) => ({ ...state, ...action.payload }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum VacancyResponsesFiltersFields {\n    LastChangeTime = 'LAST_CHANGE_TIME',\n    Name = 'NAME',\n    Photo = 'PHOTO',\n    LastExperience = 'LAST_EXPERIENCE',\n    Comments = 'COMMENTS',\n    CommentsExpanded = 'COMMENTS_EXPANDED',\n    Languages = 'LANGUAGES',\n    Area = 'AREA',\n    Education = 'EDUCATION',\n    Citizenship = 'CITIZENSHIP',\n    Companies = 'COMPANIES',\n    Profarea = 'PROFAREA',\n    ProfessionalRole = 'PROFESSIONAL_ROLE',\n    Relocation = 'RELOCATION',\n    Certificates = 'CERTIFICATES',\n    ExperienceSum = 'EXPERIENCE_SUM',\n}\n\ninterface VacancyResponsesFilters {\n    viewFields: {\n        name: VacancyResponsesFiltersFields;\n        active: boolean;\n    }[];\n}\n\nexport default autoGeneratedReducer<VacancyResponsesFilters>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Range } from 'lux/modules/types/range';\n\nexport enum SuccessIds {\n    E = 'e',\n    A = 'a',\n    EA = 'ea',\n    VUS = 'vus',\n    VUSP = 'vusp',\n    VUP = 'vup',\n    APE = 'ape',\n    APC = 'apc',\n    VOE = 'voe',\n    VOD = 'vod',\n}\n\ntype ErrorRange = Range<1, 30>;\ntype ErrorKey = `EE${ErrorRange}`;\ntype ErrorValue = `ee${ErrorRange}`;\ntype ErrorArgument = Record<ErrorKey, ErrorValue>;\nconst errorArgument = new Array(29)\n    .fill(1)\n    .map((_, index) => `ee${index + 1}`)\n    .reduce((result, item) => {\n        result[item.toUpperCase() as ErrorKey] = item as ErrorValue;\n        return result;\n    }, {} as ErrorArgument);\n\nexport const ErrorIds = {\n    D: 'd',\n    F: 'f',\n    ERR: 'err',\n    NA: 'na',\n    EVU: 'evu',\n    ...errorArgument,\n} as const;\n\nexport enum VacancyMessageTypes {\n    Error = 'error',\n    Success = 'success',\n}\n\ninterface VacancyMessage {\n    id: SuccessIds & ErrorValue;\n    type: VacancyMessageTypes;\n    vacancyIds: string[];\n}\n\nexport default autoGeneratedReducer<VacancyMessage[]>([]);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst UPDATE_FLAG = 'UPDATE_FLAG';\n\nexport enum VacancyResponseFlag {\n    AutoInviteAvailable = 'autoInviteAvailable',\n    AutoActionEnabled = 'autoActionEnabled',\n    HasMultipleVacancies = 'hasMultipleVacancies',\n    CanCommentResumes = 'canCommentResumes',\n    IsArchived = 'isArchived',\n    ShowGiftedResumes = 'showGiftedResumes',\n}\n\ninterface PayloadTypes {\n    [UPDATE_FLAG]: [name: VacancyResponseFlag, value: boolean];\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const updateFlag = ActionCreator(UPDATE_FLAG);\n\ntype VacancyResponseFlags = {\n    [key in VacancyResponseFlag]?: boolean;\n};\n\nexport default createReducer<VacancyResponseFlags, PayloadTypes>(\n    {},\n    {\n        [UPDATE_FLAG]: (state, { payload }) => ({ ...state, [payload[0]]: payload[1] }),\n    }\n);\n","enum PopupTypes {\n    Advertising = 'advertising',\n    Normal = 'normal',\n}\n\nexport default PopupTypes;\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum ResponseQuestion {\n    WorkPlaceLocation = 'work_place_location',\n    EmploymentAndWorkMode = 'employment_and_work_mode',\n    IsVacancyOpen = 'is_vacancy_open',\n    SalaryOptions = 'salary_options',\n    HowToContact = 'how_to_contact',\n    Other = 'other',\n}\n\nconst SET_RESPONSE_QUESTION = 'SET_RESPONSE_QUESTION';\nconst INITIAL_STATE = {};\n\nexport interface ResponseQuestionItem {\n    id: string;\n    value: string;\n}\n\ninterface PayloadTypes {\n    [SET_RESPONSE_QUESTION]: Record<string, ResponseQuestionItem>;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const vacancyResponseQuestionsAction = actionCreator(SET_RESPONSE_QUESTION);\n\nexport default createReducer<Record<string, ResponseQuestionItem>, PayloadTypes>(INITIAL_STATE, {\n    [SET_RESPONSE_QUESTION]: ({ ...state }, action) => {\n        return { ...state, ...action.payload };\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport DriverLicense from 'lux/models/driverLicense.types';\nimport { FULL_TO_SHORT_EXPERIENCE } from 'lux/modules/employer/filters';\n\nexport interface Range {\n    from: string;\n    to: string;\n}\n\nexport interface SalaryRange extends Range {\n    currencyCode: CurrencyType;\n}\n\nexport type FullExperience = keyof typeof FULL_TO_SHORT_EXPERIENCE;\n\nexport interface Filters {\n    ageInterval: { from: string; to: string };\n    workExperiences: FullExperience[];\n    gender: string;\n    languages: { id: number; degree: string[] }[];\n    salary: SalaryRange;\n    educationLevel: string;\n    driverLicenseTypes: DriverLicense[];\n    hasVehicle: boolean;\n    citizenship: number[];\n    areas: string[];\n    relocation: string;\n}\n\ninterface StateInfo {\n    state: string;\n    message: string | null;\n    addressId?: string | null;\n}\n\nexport enum AnswerType {\n    Correct = 'CORRECT',\n    Wrong = 'WRONG',\n}\n\nexport enum SurveyAnswerOptionProp {\n    SurveyAnswerOptionTemplateId = 'surveyAnswerOptionTemplateId',\n    Text = 'text',\n    AnswerType = 'answerType',\n    Error = 'error',\n}\n\nexport interface SurveyAnswerOption {\n    [SurveyAnswerOptionProp.SurveyAnswerOptionTemplateId]?: number;\n    [SurveyAnswerOptionProp.Text]: string;\n    [SurveyAnswerOptionProp.AnswerType]: AnswerType;\n    [SurveyAnswerOptionProp.Error]?: string;\n}\n\nexport interface SurveyQuestion {\n    surveyQuestionTemplateId?: number;\n    text: string;\n    enabled: boolean;\n    editable: boolean;\n    answerOptions: SurveyAnswerOption[];\n}\n\nexport interface AutoAction {\n    filters: Filters;\n    failedTopicStateInfo: StateInfo | null;\n    passedTopicStateInfo: StateInfo | null;\n    autoSurvey?: {\n        questions: SurveyQuestion[];\n    };\n    vacancyId?: number;\n    sharedWithOtherManagers?: boolean;\n    copyFromVacancyId?: number;\n}\n\nenum ActionKind {\n    SetAutoAction = 'SET_AUTO_ACTION',\n    ResetAutoAction = 'RESET_AUTO_ACTION',\n}\n\ninterface PayloadTypes {\n    [ActionKind.SetAutoAction]: AutoAction;\n    [ActionKind.ResetAutoAction]: void;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\nexport const setAutoActionAction = actionCreator(ActionKind.SetAutoAction);\nexport const resetAutoActionAction = actionCreator(ActionKind.ResetAutoAction);\n\nexport default createReducer<AutoAction | null, PayloadTypes>(null, {\n    [ActionKind.SetAutoAction]: (_, action) => action.payload,\n    [ActionKind.ResetAutoAction]: () => null,\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { Paging } from 'lux/models/paging.types';\nimport { LoadingActivityName } from 'lux/models/resumeSavedSearch';\nimport { PartTimeOption } from 'lux/models/search/searchCriteria.types';\n\nexport interface VacancySavedSearchItem {\n    allNew: boolean;\n    area: string[];\n    creationTimestamp: string;\n    currencyCode: CurrencyType;\n    emailActive: boolean;\n    excludedText: string;\n    id: number;\n    industry: string[];\n    linkBase: string;\n    name: string;\n    noNew: boolean;\n    notFromAgency: boolean;\n    onlyWithSalary: boolean;\n    partTime: PartTimeOption[];\n    professionalRole: string[];\n    resultsAll: string;\n    resultsNew: string;\n    salary: string;\n    searchArgs: string;\n    searchField: string[];\n    searchPeriod: string | boolean;\n    sinceLastVisitSearchArgs: string;\n    someNew: boolean;\n    text: string;\n    unknownSearch: boolean;\n    withAddress: boolean;\n}\n\ninterface SavedSearchState {\n    isAllSelected: boolean;\n    selectedItems: number[];\n    error?: boolean;\n    email: string;\n    emailVerified: boolean;\n    savedSearch: VacancySavedSearchItem[];\n    paging?: Paging;\n    filterValue: string;\n    currentLoadingActivityName?: LoadingActivityName;\n}\n\ninterface SavedSearchControls {\n    isAllSelected: boolean;\n    selectedItems: number[];\n}\n\nconst SELECT_ALL_VACANCY_SAVED_SEARCHES = 'SELECT_ALL_VACANCY_SAVED_SEARCHES';\nconst SELECT_VACANCY_SAVED_SEARCH = 'SELECT_VACANCY_SAVED_SEARCH';\nconst GET_VACANCY_SAVED_SEARCH = 'GET_VACANCY_SAVED_SEARCH';\nconst VACANCY_SAVED_SEARCH_LOADING = 'VACANCY_SAVED_SEARCH_LOADING';\n\ninterface PayloadTypes {\n    [SELECT_ALL_VACANCY_SAVED_SEARCHES]: SavedSearchControls;\n    [SELECT_VACANCY_SAVED_SEARCH]: SavedSearchControls;\n    [GET_VACANCY_SAVED_SEARCH]: { savedSearch: VacancySavedSearchItem[] };\n    [VACANCY_SAVED_SEARCH_LOADING]: LoadingActivityName | undefined;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const selectAllSavedSearchesAction = actionCreator(SELECT_ALL_VACANCY_SAVED_SEARCHES);\nexport const selectVacancySavedSearchAction = actionCreator(SELECT_VACANCY_SAVED_SEARCH);\nexport const getVacancySavedSearchAction = actionCreator(GET_VACANCY_SAVED_SEARCH);\nexport const vacancySavedSearchLoadingAction = actionCreator(VACANCY_SAVED_SEARCH_LOADING);\n\nexport const INITIAL_STATE: SavedSearchState = {\n    isAllSelected: false,\n    selectedItems: [],\n    error: false,\n    email: '',\n    emailVerified: true,\n    savedSearch: [],\n    filterValue: 'all',\n};\n\nexport default createReducer<SavedSearchState, PayloadTypes>(INITIAL_STATE, {\n    [VACANCY_SAVED_SEARCH_LOADING]: (state, action) => ({ ...state, currentLoadingActivityName: action.payload }),\n    [SELECT_ALL_VACANCY_SAVED_SEARCHES]: (state, action) => ({ ...state, ...action.payload }),\n    [SELECT_VACANCY_SAVED_SEARCH]: (state, action) => ({ ...state, ...action.payload }),\n    [GET_VACANCY_SAVED_SEARCH]: (state, action) => ({\n        ...state,\n        selectedItems: [],\n        isAllSelected: false,\n        ...action.payload,\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\nimport { CriteriaKey, ExperienceOption, OrderByOption, PartTimeOption } from 'lux/models/search/searchCriteria.types';\nimport { EducationOption, LabelOption, SearchPeriodOption } from 'lux/models/vacancySearchCriteria';\n\nexport enum SearchField {\n    Name = 'name',\n    CompanyName = 'company_name',\n    Description = 'description',\n}\n\nexport interface VacancySearchDictionaries {\n    searchPeriod: SearchPeriodOption[];\n    orderBy: OrderByOption[];\n    searchFields: SearchField[];\n    [CriteriaKey.Education]: EducationOption[];\n    [CriteriaKey.Experience]: ExperienceOption[];\n    [CriteriaKey.Employment]: EmploymentLower[];\n    [CriteriaKey.Schedule]: ScheduleCamelCase[];\n    partTime: PartTimeOption[];\n    labels: LabelOption[];\n}\n\nexport default autoGeneratedReducer<VacancySearchDictionaries>({\n    searchPeriod: [],\n    orderBy: [],\n    searchFields: [],\n    [CriteriaKey.Education]: [],\n    [CriteriaKey.Experience]: [],\n    [CriteriaKey.Employment]: [],\n    [CriteriaKey.Schedule]: [],\n    partTime: [],\n    labels: [],\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\nimport { Criteria } from 'lux/models/vacancySearchCriteria';\n\nimport { Suggests } from 'lux/models/vacancySearch/suggests.types';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\nimport { VacancySearchQueries } from 'lux/models/vacancySearch/vacancySearchQueries.types';\n\nconst ADD_MORE_VACANCIES = 'ADD_MORE_VACANCIES';\nconst REPLACE_VACANCY_SEARCH_RESULT = 'REPLACE_VACANCY_SEARCH_RESULT';\nconst SET_IS_LOADING = 'SET_IS_LOADING';\nconst REPLACE_VACANCIES = 'REPLACE_VACANCIES';\nconst SAVE_AUTO_SEARCH = 'SAVE_AUTO_SEARCH';\n\ninterface PayloadTypes {\n    [ADD_MORE_VACANCIES]: { vacancies: VacancySearchItem[]; paging?: Paging };\n    [REPLACE_VACANCIES]: { vacancies: VacancySearchItem[]; paging?: Paging; totalResults: number };\n    [REPLACE_VACANCY_SEARCH_RESULT]: VacancySearchResult;\n    [SET_IS_LOADING]: boolean;\n    [SAVE_AUTO_SEARCH]: null;\n}\nconst actionHelper = ActionCreatorHelper<PayloadTypes>();\n\nexport const addMoreVacancies = actionHelper(ADD_MORE_VACANCIES);\nexport const replaceVacancies = actionHelper(REPLACE_VACANCIES);\nexport const replaceVacancySearchResult = actionHelper(REPLACE_VACANCY_SEARCH_RESULT);\nexport const setIsLoading = actionHelper(SET_IS_LOADING);\nexport const saveAutoSearch = actionHelper(SAVE_AUTO_SEARCH);\n\nexport interface Fixes {\n    text: { original: string };\n}\n\nexport interface SavedSearches {\n    isSavedSearch: boolean;\n    position?: string;\n    email?: string;\n    selectedClusters: SelectedClusters[];\n    isFormOpen?: boolean;\n    isShowButton?: boolean;\n}\n\ninterface SelectedClusters {\n    name: string;\n    title: string;\n}\n\nexport interface VacancySearchResult {\n    clusters: unknown;\n    criteria?: Partial<Criteria>;\n    enableSimilarSavedSearch?: boolean;\n    fixes?: Fixes;\n    hasVacanciesWithAddress: boolean;\n    isClustersEnabled: boolean;\n    paging?: Paging;\n    proxiedSearchFormParams?: Partial<Criteria>;\n    queries: Partial<VacancySearchQueries>;\n    queryRanks: unknown;\n    savedSearches: SavedSearches;\n    showClusters: boolean;\n    suggests?: Suggests;\n    totalResults: number;\n    totalUsedFilters?: number;\n    vacancies: VacancySearchItem[];\n    vacancyHint: unknown;\n    totalResultsForList: number;\n}\n\ninterface VacancySearchResultState extends VacancySearchResult {\n    isLoading: boolean;\n}\n\nconst INITIAL_STATE: VacancySearchResultState = {\n    clusters: {},\n    criteria: {},\n    hasVacanciesWithAddress: false,\n    isClustersEnabled: true,\n    isLoading: false,\n    queries: { searchWizardBase: '' },\n    queryRanks: [],\n    savedSearches: {\n        isSavedSearch: false,\n        selectedClusters: [],\n    },\n    showClusters: false,\n    totalResults: 0,\n    totalResultsForList: 0,\n    vacancies: [],\n    vacancyHint: null,\n};\n\nexport default createReducer<VacancySearchResultState, PayloadTypes>(INITIAL_STATE, {\n    [ADD_MORE_VACANCIES]: (state, { payload }) => ({\n        ...state,\n        vacancies: [...state.vacancies, ...payload.vacancies],\n        isLoading: false,\n        paging: payload.paging,\n    }),\n    [REPLACE_VACANCIES]: (state, { payload }) => ({\n        ...state,\n        vacancies: payload.vacancies,\n        isLoading: false,\n        paging: payload.paging,\n        totalResultsForList: payload.totalResults,\n    }),\n    [REPLACE_VACANCY_SEARCH_RESULT]: (state, { payload: newState }) => ({\n        ...newState,\n        isLoading: false,\n    }),\n    [SET_IS_LOADING]: (state, { payload: isLoading }) => ({ ...state, isLoading }),\n    [SAVE_AUTO_SEARCH]: (state) => ({\n        ...state,\n        savedSearches: { ...state.savedSearches, isSavedSearch: true },\n    }),\n});\n","import { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport {\n    CriteriaKey,\n    ExperienceOption,\n    OrderByOption,\n    SearchFieldOption,\n} from 'lux/models/search/searchCriteria.types';\n\nexport enum LabelOption {\n    AcceptHandicapped = 'accept_handicapped',\n    AcceptKids = 'accept_kids',\n    NotFromAgency = 'not_from_agency',\n    WithAddress = 'with_address',\n    AccreditedIT = 'accredited_it',\n    LowPerformance = 'low_performance',\n}\n\nexport enum SearchPeriodOption {\n    AllTime = '0',\n    Month = '30',\n    Week = '7',\n    ThreeDays = '3',\n    Day = '1',\n}\n\nexport enum ItemsOnPageOption {\n    Twenty = '20',\n    Fifty = '50',\n    Hundred = '100',\n}\n\nexport enum EducationOption {\n    Higher = 'higher',\n    NotRequiredNotSpecified = 'not_required_or_not_specified',\n    SpecialSecondary = 'special_secondary',\n}\n\nexport interface Criteria {\n    [CriteriaKey.Area]: number[];\n    [CriteriaKey.Clusters]: boolean;\n    [CriteriaKey.CurrencyCode]: CurrencyType;\n    [CriteriaKey.District]: number[];\n    [CriteriaKey.Employment]: EmploymentLower[];\n    [CriteriaKey.Experience]: ExperienceOption;\n    [CriteriaKey.ItemsOnPage]: number;\n    [CriteriaKey.Label]: LabelOption;\n    [CriteriaKey.NoMagic]: boolean;\n    [CriteriaKey.OnlyWithSalary]: boolean;\n    [CriteriaKey.OrderBy]: OrderByOption;\n    [CriteriaKey.Page]: number;\n    [CriteriaKey.Resume]: string;\n    [CriteriaKey.Salary]: number;\n    [CriteriaKey.Schedule]: ScheduleCamelCase;\n    [CriteriaKey.SearchDebug]: boolean;\n    [CriteriaKey.SearchField]: SearchFieldOption[];\n    [CriteriaKey.SearchPeriod]: number;\n    [CriteriaKey.Text]: string;\n}\n\nexport interface MapCriteria extends Criteria {\n    [CriteriaKey.Height]: number;\n    [CriteriaKey.Width]: number;\n    [CriteriaKey.Precision]: number;\n    [CriteriaKey.TopRightLat]: number;\n    [CriteriaKey.TopRightLng]: number;\n    [CriteriaKey.BottomLeftLat]: number;\n    [CriteriaKey.BottomLeftLng]: number;\n}\n","import { TemplateData } from '@hh.ru/branding-packages';\nimport createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { VacancyConstructorTemplate } from 'lux/components/VacancyView/brandingConstants';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { BillingPlatform } from 'lux/models/price/product.types';\nimport { ExperienceOption } from 'lux/models/search/searchCriteria.types';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\nimport {\n    Badge,\n    ContactInfo,\n    EmploymentType,\n    PartTimeOption,\n    VacancyAddress,\n    VacancyViewInsider,\n    VacancyViewStatus,\n    HrBrand,\n    SystemInfo,\n} from 'lux/models/vacancyView.types';\n\nconst VACANCY_VIEW = 'VACANCY_VIEW';\nconst VACANCY_VIEW_SET_VISIBILITY_CONTACTS = 'VACANCY_VIEW_SET_VISIBILITY_CONTACTS';\nconst VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE = 'VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE';\nconst VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE = 'VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE';\n\nconst INITIAL_STATE = {\n    platforms: [],\n    vacancyOnMapLink: '',\n    company: {\n        visibleName: '',\n        employerOrganizationFormId: null,\n        '@trusted': false,\n        accreditedITEmployer: false,\n    },\n    driverLicenseTypes: {},\n    status: {},\n    features: [],\n    insider: null,\n    confirmableKeySkills: { providers: [] },\n    keySkills: null,\n    contactInfo: null,\n    description: '',\n    publicationType: null,\n    publicationDate: null,\n    professionalRoleIds: [],\n    validThroughTime: null,\n    area: null,\n    name: '',\n    compensation: {},\n    translations: null,\n    parttimeOptions: {},\n    '@acceptHandicapped': false,\n    '@acceptKids': false,\n    publicationTypeTrl: '',\n    properties: {},\n    userTestId: null,\n};\n\nexport enum BrandingType {\n    Constructor = 'CONSTRUCTOR',\n    Chameleon = 'MAKEUP',\n}\n\ninterface VacancyViewState {\n    metallicId?: string;\n    approved?: boolean;\n    type?: string;\n    employerId?: number;\n    acceptTemporary?: boolean;\n    platforms: BillingPlatform[];\n    multi?: boolean;\n    address?: VacancyAddress;\n    mapDisabled?: boolean;\n    vacancyOnMapLink: string;\n    showResumeForm?: boolean;\n    responseInfo?: {\n        doResponse?: boolean;\n        showResponse?: boolean;\n        respondedWithTopicId?: string;\n    };\n    showSignupForm?: boolean;\n    canDisableCallTracking?: boolean;\n    features: string[];\n    insider: VacancyViewInsider | null;\n    vacancyId?: number;\n    company: {\n        id?: number;\n        name?: string;\n        logos?: {\n            '@showInSearch': boolean;\n            logo: { '@type': string; '@url': string }[];\n        };\n        badges?: {\n            badge: Badge[];\n        };\n        department?: {\n            '@code': string;\n        };\n        employerOrganizationFormId: number | null;\n        visibleName: string;\n        '@trusted': boolean;\n        accreditedITEmployer: boolean;\n    };\n    isVisibleContacts?: boolean;\n    isBrandingPreview?: boolean;\n    branding?: TemplateData;\n    brandingType?: BrandingType | null;\n    status: VacancyViewStatus;\n    vacancyConstructorTemplate?: VacancyConstructorTemplate | null;\n    description: string;\n    driverLicenseTypes: { driverLicenseType?: string[] };\n    showSkillsSurvey?: boolean;\n    videoVacancyUrl?: string;\n    videoVacancyImageUrl?: string;\n    skillsSurveyProfession?: string | null;\n    confirmableKeySkills: {\n        providers: {\n            promoted: boolean;\n            name: string;\n        }[];\n    };\n    keySkills: {\n        keySkill: string[];\n    } | null;\n    contactInfo: ContactInfo | null;\n    publicationType: MetallicVacancyType | null;\n    publicationDate: string | null;\n    professionalRoleIds: number[];\n    validThroughTime: string | null;\n    area: { areaCatalogTitle: string; name: string; areaNamePre: string } | null;\n    name: string;\n    compensation: {\n        noCompensation?: Record<string, never>;\n        currencyCode?: CurrencyType;\n        from?: number;\n        to?: number;\n        gross?: boolean;\n    };\n    translations: {\n        workExperience: string;\n        employment: string;\n    } | null;\n    employment?: {\n        ['@type']?: EmploymentType;\n    };\n    ['@workSchedule']?: ScheduleCamelCase;\n    ['@vacancyCode']?: string;\n    workExperience?: ExperienceOption;\n    ['@acceptHandicapped']: boolean;\n    ['@acceptKids']: boolean;\n    ['hr-brand']?: HrBrand;\n    parttimeOptions: Partial<Record<PartTimeOption, boolean>>;\n    publicationTypeTrl: string;\n    systemInfo?: Partial<SystemInfo>;\n    properties: Record<string, unknown>;\n    userTestId: number | unknown;\n}\n\ninterface PayloadTypes {\n    [VACANCY_VIEW]: VacancyViewState;\n    [VACANCY_VIEW_SET_VISIBILITY_CONTACTS]: boolean;\n    [VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE]: VacancyViewState['vacancyConstructorTemplate'];\n    [VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE]: void;\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const vacancyAction = ActionCreator(VACANCY_VIEW);\n\nexport const vacancySetVisibilityContactsAction = ActionCreator(VACANCY_VIEW_SET_VISIBILITY_CONTACTS);\n\nexport const vacancySetBrandingConstructorExample = ActionCreator(VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE);\nexport const vacancyRemoveBrandingConstructorExample = ActionCreator(VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE);\n\nexport default createReducer<VacancyViewState, PayloadTypes>(INITIAL_STATE, {\n    [VACANCY_VIEW]: (_, action) => action.payload,\n    [VACANCY_VIEW_SET_VISIBILITY_CONTACTS]: (state, action) => ({\n        ...state,\n        isVisibleContacts: action.payload,\n    }),\n    [VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE]: (state, { payload }) => ({\n        ...state,\n        brandingType: BrandingType.Constructor,\n        vacancyConstructorTemplate: payload,\n    }),\n    [VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE]: (state) => ({\n        ...state,\n        brandingType: null,\n        vacancyConstructorTemplate: null,\n    }),\n});\n","import { autoGeneratedReducer, makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nexport enum VacancyViewTab {\n    Main = 'main',\n    History = 'history',\n}\n\nexport default autoGeneratedReducer<VacancyViewTab>(VacancyViewTab.Main);\n\nexport const setVacancyViewActiveTab = makeSetStoreField('vacancyViewTab');\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { YearMonthDayString } from 'bloko/blocks/calendar/datesHelper';\n\nimport formatDate from 'Modules/formatDate';\n\nexport const TODAY = formatDate(new Date(), 'yyyy-MM-dd');\n\nexport type PayerId = string;\n\nexport interface VerificationActsPayer {\n    id: PayerId;\n    name: string;\n    inn: string;\n    kpp: string;\n}\n\nexport interface VerificationActsPeriod {\n    dateFrom: YearMonthDayString;\n    dateTo: YearMonthDayString;\n}\n\nexport type VerificationActId = string;\n\nexport interface VerificationAct {\n    id: VerificationActId;\n    completed: boolean;\n    fileUrl: string;\n    creationTime: YearMonthDayString;\n    from: YearMonthDayString;\n    to: YearMonthDayString;\n    payerId: PayerId;\n    taxNumber: string;\n    kpp: string;\n}\n\ninterface OrdersInfo {\n    info: string;\n    date: YearMonthDayString;\n}\n\nexport interface PickupInterval {\n    from: string;\n    to: string;\n}\n\nexport interface VerificationActsResponse {\n    verificationActs: {\n        items: VerificationAct[];\n        ordersInfo: Record<VerificationActId, OrdersInfo>;\n    };\n}\n\nexport enum AddressFields {\n    Country = 'deliveryAddress.country',\n    Area = 'deliveryAddress.area',\n    City = 'deliveryAddress.city',\n    Street = 'deliveryAddress.street',\n    Building = 'deliveryAddress.building',\n    Office = 'deliveryAddress.office',\n    PhoneCountry = 'deliveryAddress.phone.country',\n    PhoneCity = 'deliveryAddress.phone.city',\n    PhoneNumber = 'deliveryAddress.phone.number',\n    Description = 'deliveryAddress.description',\n    DeliveryPerson = 'deliveryAddress.deliveryPerson',\n}\n\ninterface AddressField {\n    required: boolean;\n}\n\ninterface PayerAddressDetails {\n    id: PayerId;\n    city: string;\n    street: string;\n    building: string;\n    description: string;\n    country: string;\n    area: string;\n    ['phone.city']: string;\n    ['phone.country']: string;\n    ['phone.number']: string;\n    ['phone.comment']: string;\n    office: string;\n    streetPrefix: string;\n    deliveryPerson: string;\n}\n\nexport interface PayerAddress {\n    electronicRecord: boolean;\n    address: PayerAddressDetails;\n}\n\nexport type Countries = string[];\n\nexport interface DeliveryAddress {\n    country: string;\n    city: string;\n    street: string;\n    building: string;\n    office: string;\n    phone: {\n        country: string;\n        city: string;\n        number: string;\n    };\n    deliveryPerson: string;\n}\n\ninterface VerificationActs {\n    payers: VerificationActsPayer[];\n    period: VerificationActsPeriod;\n    items: VerificationAct[];\n    ordersInfo: Record<VerificationActId, OrdersInfo>;\n    canPickup: boolean;\n    initialPayerId?: PayerId;\n    duplicateId?: string;\n    newId?: string;\n    deliveryAddress: DeliveryAddress;\n    pickupIntervals: PickupInterval[];\n    fields: Partial<Record<AddressFields, AddressField>>;\n    countries: Countries;\n    payerAddress: PayerAddress;\n}\n\nexport default autoGeneratedReducer<VerificationActs>({\n    payers: [],\n    period: {\n        dateFrom: TODAY,\n        dateTo: TODAY,\n    },\n    items: [],\n    ordersInfo: {},\n    canPickup: false,\n    deliveryAddress: {\n        country: '',\n        city: '',\n        street: '',\n        building: '',\n        office: '',\n        phone: {\n            country: '',\n            city: '',\n            number: '',\n        },\n        deliveryPerson: '',\n    },\n    pickupIntervals: [],\n    fields: {},\n    countries: [],\n    payerAddress: {\n        electronicRecord: false,\n        address: {\n            id: '',\n            city: '',\n            street: '',\n            building: '',\n            description: '',\n            country: '',\n            area: '',\n            'phone.city': '',\n            'phone.country': '',\n            'phone.number': '',\n            'phone.comment': '',\n            office: '',\n            streetPrefix: '',\n            deliveryPerson: '',\n        },\n    },\n});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nconst SET_VR_SIGNUP_LOGIN_FINGERPRINTS = 'SET_VR_SIGNUP_LOGIN_FINGERPRINTS';\n\ninterface PayloadTypes {\n    [SET_VR_SIGNUP_LOGIN_FINGERPRINTS]: Record<string, unknown>;\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setVrSingUpLoginFingerprints = actionCreator(SET_VR_SIGNUP_LOGIN_FINGERPRINTS);\n\nexport interface VrSignupLogin {\n    alreadyLoggedIn: boolean;\n    vrResponseHash: string;\n    forceResumeCreation: boolean;\n    resumes?: ResumeIdentifiersData[];\n    vacancyTitle: string;\n    vacancyId: number | null;\n    vrLeadData?: VrLeadData;\n    alreadyHasNegotiationAttempt: boolean;\n    fingerprints: Record<string, unknown>;\n}\n\nconst initialState = {\n    alreadyLoggedIn: false,\n    vrResponseHash: '',\n    forceResumeCreation: false,\n    vacancyTitle: '',\n    vacancyId: null,\n    alreadyHasNegotiationAttempt: false,\n    fingerprints: {},\n};\n\nexport enum VrLeadCheckFields {\n    Phone = 'phone',\n    Citizenship = 'citizenship',\n    FirstName = 'firstName',\n    LastName = 'lastName',\n}\n\nexport interface VrLeadData {\n    [VrLeadCheckFields.FirstName]: string;\n    [VrLeadCheckFields.LastName]: string;\n    [VrLeadCheckFields.Phone]: string;\n    [VrLeadCheckFields.Citizenship]?: number;\n\n    [field: string]: unknown;\n}\n\nexport interface ResumeIdentifiersData {\n    hash: string;\n    title: string;\n}\n\nexport interface ShortResumeData {\n    [VrLeadCheckFields.FirstName]: string;\n    [VrLeadCheckFields.LastName]: string;\n    [VrLeadCheckFields.Phone]?: { raw: string; [field: string]: unknown }[];\n    [VrLeadCheckFields.Citizenship]?: number[];\n}\n\nexport enum VrResumeExistenceType {\n    New = 'NEW',\n    Existed = 'EXISTED',\n    Empty = 'EMPTY',\n}\n\nexport default createReducer<VrSignupLogin, PayloadTypes>(initialState, {\n    [SET_VR_SIGNUP_LOGIN_FINGERPRINTS]: (state, action) => {\n        return { ...state, fingerprints: action.payload };\n    },\n});\n","let checkedExperiments: string[] = [];\n\nexport const putCheckedExperiment = (experimentName: string): void => {\n    checkedExperiments.push(experimentName);\n};\n\nexport const resetCheckedExperiment = (): void => {\n    checkedExperiments = [];\n};\n\nexport default (): string[] => {\n    return [...checkedExperiments];\n};\n","import { TopLevelSite } from 'lux/models/topLevelSite';\n\nexport default [\n    TopLevelSite.RU,\n    TopLevelSite.UA,\n    TopLevelSite.UZ,\n    TopLevelSite.GE,\n    TopLevelSite.KG,\n    TopLevelSite.KZ,\n    TopLevelSite.AZ,\n    TopLevelSite.BY,\n    TopLevelSite.ZP,\n    'rabota.by',\n    'hh.kz',\n    'hh1.az',\n    'talantix.ru',\n    'hrdigital.ru',\n    'hrbrand.ru',\n    'zarplata.ru',\n    'hrpremia.by',\n];\n","export const COUNTER_OVERLIMIT = 100;\n\nexport enum AdviceType {\n    McpManagersUnreadResponses = 'MCP_MANAGERS_UNREAD_RESPONSES',\n    ManagerUnreadResponses = 'MANAGER_UNREAD_RESPONSES',\n}\n\nexport type AdviceContentType = string | JSX.Element;\n\nexport const ADVICE_TYPES = Object.values(AdviceType);\n","export const CONTROL_GROUP = 'control';\nexport const EXPERIMENT_GROUP = 'experiment';\nexport const NOT_IN_EXPERIMENT_GROUP = 'not_in_experiment';\n","import { getIn, Decorator } from 'final-form';\n\nimport scrollTop from 'Utils/ScrollTop';\n\nconst SCROLL_OFFSET = 20;\n\ninterface ScrollToFirstErrorArgs {\n    name: string;\n    additionalInfo?: Record<string, unknown>;\n}\n\ninterface ScrollToFirstError {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (args: ScrollToFirstErrorArgs): Decorator<any>;\n}\n\nconst scrollToFirstError: ScrollToFirstError =\n    ({ name }) =>\n    (form) => {\n        let errors = {};\n        const unsubscribe = form.subscribe(\n            (state) => {\n                const filteredSubmitErrors =\n                    !state.submitErrors || typeof state.submitErrors === 'string' ? {} : state.submitErrors;\n                errors = { ...state.errors, ...filteredSubmitErrors };\n            },\n            { errors: true, submitErrors: true }\n        );\n\n        const submit = form.submit;\n        form.submit = () => {\n            const findFirstAndScroll = () => {\n                if (!errors || !Object.keys(errors).length) {\n                    return;\n                }\n                const form = document.forms.namedItem(name);\n                if (!form) {\n                    return;\n                }\n                const scrollTarget =\n                    [...form.querySelectorAll('[data-form-error-name]'), ...form.elements].find((el) => {\n                        const element = el as HTMLElement;\n                        // Если нужно прокрутить страницу не к инпуту, а к произвольному элементу,\n                        // можно повесить на него `data-form-error-name=\"имя поля с ошибкой\"`.\n                        const name = element.getAttribute('data-form-error-name') || element.getAttribute('name');\n                        return name && getIn(errors, name) && element.offsetWidth;\n                    }) || document.querySelector('[data-form-error=\"true\"]');\n                if (!scrollTarget) {\n                    return;\n                }\n                const top =\n                    scrollTarget.getBoundingClientRect().top -\n                    document.body.getBoundingClientRect().top -\n                    SCROLL_OFFSET;\n                scrollTop({ top });\n            };\n            const submitResult = submit.call(form) || Promise.resolve(undefined);\n            void submitResult.then(findFirstAndScroll);\n            return submitResult;\n        };\n\n        return () => {\n            unsubscribe();\n            form.submit = submit;\n        };\n    };\n\nexport default scrollToFirstError;\n","let history;\n\nexport const setHistory = (path) => {\n    if (process.env.LUX_SERVER) {\n        const createHistory = require('history').createMemoryHistory;\n        history = createHistory({\n            initialEntries: [path],\n            initialIndex: 0,\n        });\n    }\n};\n\nexport const createHistory = () => {\n    history = require('history').createBrowserHistory();\n};\n\nexport const getHistory = () => history;\n","/**\n * Конвертирует массив строк в читаемый формат: \"[first], [seconds] и/или [last]\"\n * @property {Array} values - массив строк\n * @property {String} lastValueSeparatorTrl - строка-разделитель для последнего элемента ('и'/'или')\n * @returns {String}\n */\nexport const arrayToHumanReadableList = (values: string[], lastValueSeparatorTrl: string): string => {\n    let humanReadableList;\n    if (values.length > 1) {\n        humanReadableList = `${values.slice(0, -1).join(', ')} ${lastValueSeparatorTrl} ${values.slice(-1)[0]}`;\n    } else {\n        humanReadableList = values.join(', ');\n    }\n    return humanReadableList;\n};\n","export const link = 'https://hr-elka.special.ink';\nexport const analyticsName = 'hr_elka_notification';\n","import { ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nexport const linkMap = {\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]:\n        'https://hrspace.hh.ru/recruiter/?utm_source=hh.ru&utm_medium=banner&utm_campaign=notification_dms',\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]:\n        'https://hrspace.hh.ru/?utm_source=hh.ru&utm_medium=banner&utm_campaign=notification_promo_employer',\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]:\n        'https://hrspace.hh.ru/?utm_source=hh.ru&utm_medium=banner&utm_campaign=notification_promo_it_employer',\n};\n\nexport const analyticsNameMap = {\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]: 'hrspace_promo_applicant',\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]: 'hrspace_promo_employer',\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]: 'hrspace_promo_it_employer',\n};\n","export const ADD_CONTACTS_ARTICLE_LINK = '/article/27033';\n","import { DataProvider, DataProviderItem, RemoteDataProviderResponse } from 'bloko/blocks/suggest/types';\n\nexport const removeDuplicates = (items: DataProviderItem[]): DataProviderItem[] =>\n    items.filter(\n        (item, index) =>\n            !items.slice(0, index).some((previousItem) => previousItem.text.toLowerCase() === item.text.toLowerCase())\n    );\n\nexport default (\n    query: string,\n    remoteDataProvider: DataProvider,\n    staticDataProvider: DataProvider,\n    lastSearches: DataProviderItem[]\n): Promise<RemoteDataProviderResponse> => {\n    if (query.length) {\n        return remoteDataProvider(query).then((data) => {\n            const items = Array.isArray(data.items) ? data.items : [];\n            const filteredLastSearches = lastSearches.filter(\n                (item) => item.text !== '' && item.text.toLowerCase().startsWith(query.toLowerCase())\n            );\n            return {\n                items: removeDuplicates([...filteredLastSearches, ...items]),\n            };\n        });\n    }\n    return staticDataProvider(query);\n};\n","import { ADVICE_TYPES } from 'lux/modules/employer/adviceTypes';\n\nexport default {\n    accountAddEmail: '/account/add_email',\n    accountConnect: '/account/connect/(register|merge)',\n    accountCaptcha: '/account/captcha',\n    accountDelete: '/account/delete_me',\n    accountDeleteAffirmation: '/account/delete_me/affirmation',\n    accountDeleteConfirmation: '/account/delete_me/confirmation',\n    accountDeleteGratitude: '/account/delete_me/gratitude',\n    accountHistory: '/employer/account',\n    accountHistoryExpenditures: '/employer/account/expenditures',\n    accountHistoryMoney: '/employer/account/money',\n    accountHistoryReplenishments: '/employer/account/replenishments',\n    accountHistoryServices: '/employer/account/services',\n    accountLogin: '(/account/login|/auth/applicant|/login|/logon.do)',\n    accountPhoneVerification: '/account/phone_verification',\n    advancedResumeSearch: '/search/resume/advanced',\n    advancedResumeSearchVariants: '(/search/resume/advanced|/resumesearch)',\n    advancedVacancySearch: '/search/vacancy/advanced',\n    agencies: '/agencies',\n    anonymousEmployer: '/employer',\n    applicantBlacklistVacancy: '/applicant/blacklist/vacancy',\n    applicantBlacklistEmployers: '/applicant/blacklist/employer',\n    applicantCountriesVisibility: '/applicant/settings/resume_countries_visibility',\n    applicantNegotiations: '/applicant/negotiations',\n    applicantPortrait: '/search/resume/portrait',\n    applicantPhoneVerification: '/applicant/phone_verification',\n    applicantResumes: '/applicant/resumes',\n    applicantSkillVerificationsMethod: '/applicant/skill_verifications/methods/:id(\\\\d+)',\n    applicantSkillVerificationsMethods: '/applicant/skill_verifications/methods',\n    applicantRsvVerifications: '/applicant/rsv_verifications/:id(\\\\w+)',\n    applicantResumesList: '/applicant/resumelist',\n    applicantServicesPayment: '/applicant/services/payment',\n    applicantSignup: '/account/signup',\n    applicantSignupVerify: '/account/verify',\n    applicantSuitableVacancies: '/applicant/resumes/suitable_vacancies',\n    applicantVacancyResponsesSummaryPayment: '/applicant/vacancy_summary/payment',\n    applicantVacancyResponsesSummarySuccess: '/applicant/vacancy_summary/success',\n    applyAgreement: '/account/apply_agreement',\n    article: ['/article/:articleId([a-zA-Z0-9_-]+)', '/article.(do|xml)', '/interview/:articleId([a-zA-Z0-9_-]+)'],\n    authEmployer: '/auth/employer',\n    authEmployerAlready: '/auth/employer/already',\n    authEmployerDuplicated: '/auth/employer/duplicated',\n    authEmployerSuccess: '/auth/employer/success',\n    authLoginZarplata: '/auth/login',\n    authRegistrationZarplata: '/auth/registration',\n    away: '/away',\n    brandingProxyService: '/branding',\n    blog: '/articles',\n    careerMarathonPayment: '/applicant/career_marathon/payment',\n    careerMarathonSuccess: '/applicant/career_marathon/success',\n    employerAddresses: '/employer/addresses',\n    employerAutomationInfo: '/employer/automation',\n    employerAdvices: `/employer/advices/:adviceType(${ADVICE_TYPES.join('|')})`,\n    employerCarts: '/employer/carts',\n    employerSettings: '/employer/settings',\n    employerEmailTemplates: '/employer/settings/email',\n    employerManagersCreate: '/employer/managers/create',\n    employerNegotiationsChangeTopic: '/employer/negotiations/change_topic',\n    employerConstructor: '/employer/constructor',\n    employerConstructorWebview: '/employer/constructor/webview/:id(\\\\d+)',\n    employerContactsVisibility: '/employer/contacts_visibility',\n    employerDocuments: '/employer/documents',\n    employerDocumentsManagement: '/employer/documents-management',\n    employerFinancialDocuments: '/employer/financial-documents',\n    employerVerificationActs: '/employer/verificationacts',\n    employerMakeupWebView: '/employer/makeup/webview/:id(\\\\d+)',\n    employerManagers: '/employer/managers',\n    employerInvoicePayment: '/employer/invoice/payment',\n    employerInvoicePurchase: '/employer/invoice/purchase',\n    employerInvoiceFinish: '/employer/invoice/finish',\n    employerQuotaHistory: '/employer/quota/history',\n    employerReviewsSettings: '/employer/reviews-settings',\n    employerSidebarEdit: '/employer/edit/sidebar',\n    employerSimpleEdit: '/employer/edit/simple',\n    employerStructure: '/employer/structure',\n    employerReviews: '/employer_reviews',\n    employersCompany: [\n        '/employers_company',\n        '/employers_company/:industryPath',\n        '/employers_company/:industryPath/:subIndustryPath',\n    ],\n    employersList: '/employers_list',\n    employersListZarplata: '/companies',\n    employerStructureChangelog: '/employer/structure/changelog',\n    employerSubscription: '/employer/settings/subscription',\n    employerSearchPublication: '/employer/settings/search-publication',\n    employerUnpremoderatedVacancyList: '/employer/unpremoderatedvacancylist',\n    employerSettingsEmailTemplates: '/employer/settings/email',\n    employerVacancies: '/employer/vacancies',\n    employerVacanciesArchived: '/employer/vacancies/archived',\n    employerVacanciesDrafts: '/employer/vacancies/drafts',\n    employerVacanciesTemplates: '/employer/vacancies/templates',\n    employerVacanciesPromotion: '/employer/vacancies/:vacancyId(\\\\d+)/promotion',\n    employerView: '/employer/(edit|\\\\d+)(|/main|/mission|/career|/recruitment|/office|/address)',\n    employerViewZarplata: '/companies/id(\\\\d+)',\n    events: '/articles/events',\n    eventsForStudents: '/articles/students/events-for-students',\n    fastVacanciesSubscription: '/applicant/services/subscription',\n    feedback: '/feedback',\n    indexPage: '/',\n    oauthAuthorize: '/oauth/authorize',\n    oauthAuthorizeEmployer: '/oauth/authorize/employer',\n    oauthMergeByCode: '/account/connect/merge_by_code',\n    partTimeVacancies: '/vacancies/podrabotka',\n    personalManager: '/employer/personal_manager',\n    priceAddContacts: '/price/add-contacts',\n    priceBranding: '/price/branding',\n    priceClickmeProducts: '/price/clickme',\n    priceDBAccess: '/price/dbaccess',\n    priceEmployerBrand: '/price/employerbrand',\n    priceRecommended: '/price/recommended',\n    priceRegionalPublications: '/price/regional-publications',\n    priceProfRolesPublications: '/price/profroles-publications',\n    priceZpResumeAccess: '/price/zp-resume-access',\n    priceZpPublications: '/price/zp-publications',\n    priceZpBundles: '/price/zp-bundles',\n    priceZpPromotion: '/price/zp-promotion',\n    priceZpBackoffice: '/price/zp-price-backoffice',\n    registrationZarplata: '/registration',\n    rememberPassword: '/account/remember_password',\n    restorePassword: '/account/restore_password',\n    resumeBuilderAdditional: '/applicant/resumes/edit/additional',\n    resumeBuilderContacts: '/applicant/resumes/edit/contacts',\n    resumeBuilderCreds: '/applicant/resumes/edit/creds',\n    resumeBuilderEducation: '/applicant/resumes/edit/education',\n    resumeBuilderExperience: '/applicant/resumes/edit/experience',\n    resumeBuilderPersonal: '/applicant/resumes/edit/personal',\n    resumeBuilderPhoto: '/applicant/resumes/edit/photo',\n    resumeBuilderPosition: '/applicant/resumes/edit/position',\n    resumeCompletion: '/applicant/resumes/completion',\n    resumeFolder: '/employer/resumefolders/folder',\n    resumeFolders: '/employer/resumefolders',\n    resumeFoldersSearch: '/employer/resumefolders/search',\n    resumeSearch: '/search/resume',\n    // resumeSearch используется для формирования урлов, поэтому создаем отдельно алиасы\n    resumeSearchAliases: '/employer/similar/resumesimilar.mvc',\n    resumeSearchCatalogListMain: '/resumes',\n    resumeSearchCatalogListByLetter: '/resumes/:type(eng|rus|etc)/:char([a-z]{1,3})?/:page(page-\\\\d+)?',\n    resumeSearchCatalog: '/resumes/:professionOrExtraFilter/:extraFilter?',\n    resumeSearchCatalogRegion: '/region/resumes',\n    resumeSavedSearch: '/resumesavedsearch',\n    resumeView: '/applicant/resumes/view',\n    resumeViewByID: '/resume/:id(\\\\w+)',\n    resumeVisibility: '/applicant/resumes/edit/visibility',\n    salaryStat: '/search/resume/salary_stat',\n    shortResume: '/applicant/resumes/short',\n    applicantAddAuthPhone: '/applicant/add_auth_phone',\n    specializedPartTimeVacancies: '/vacancies/:specialization/podrabotka',\n    subscribe: '/subscribe',\n    subscribeZarplata: '/subscriptions',\n    support: '/support',\n    targetAgenciesPayment: '/applicant/targetagencies/payment',\n    targetEmployerResumes: '/employer/targetresumes',\n    unsubscribe: '/unsubscribe/:unsubscribeStatus',\n    vacanciesProbationCatalog: '/stazhirovki',\n    vacanciesProbationCatalogProfarea: '/stazhirovki/:profarea',\n    vacancyConstructor: '/employer/vacancyconstructor',\n    videoVacancy: '/employer/video_vacancy',\n    vacancyConstructorMobilePreview: '/employer/vacancyconstructor/template/(\\\\d+)/mobile',\n    vacancyConstructorTemplatePreview: '/employer/vacancyconstructor/template/:templateId(\\\\d+)',\n    vacancyCreate: '/employer/vacancy/create',\n    vacancyCreatePromo: '/employer/vacancy/create_promo',\n    vacancyDuplicate: '/employer/vacancy/duplicate/:originalVacancyId',\n    vacancyEdit: '/employer/vacancy/edit/:vacancyId',\n    vacancyFavorite: '/applicant/favorite_vacancies',\n    vacancyPreview: '/vacancy/preview',\n    vacancyPreviewDraft: '/vacancy/preview_draft',\n    vacancyPrint: '/vacancy/view',\n    vacancyResponse: '/applicant/vacancy_response',\n    VacancySavedSearch: '/applicant/autosearch',\n    vacancyResponses: '/employer/vacancyresponses(.mvc)?',\n    vacancyResponsesAutoAction: '/employer/vacancyresponses/autoaction',\n    VacancyResponsesAutoInvite: '/employer/vacancyresponses/autoinvite',\n    vacancyResponsesCalls: '/employer/vacancyresponses/calls(.mvc)?',\n    vacancyResponseTest: '/applicant/vacancy_response/test',\n    vacancyRestore: '/employer/vacancy/restore/:archivedVacancyId',\n    vacancySearch: '/search/vacancy',\n    vacancySearchZarplata: '/vacancy:q(\\\\?q=.*)?',\n    vacancySearchMap: '/search/vacancy/map',\n    vacancyMetroMain: '/metro',\n    vacancySearchMetroCatalog: '/metro/:line/:station?',\n    vacancySearchCatalogListMain: '/vacancies',\n    vacancySearchCatalogListByLetter: '/vacancies/:type(eng|rus|etc)/:char([a-z]{1,3})?/:page(page-\\\\d+)?',\n    vacancySearchCatalog: '/vacancies/:professionOrExtraFilter/:extraFilter?',\n    vacancySearchCatalogZarplata: '/vacancy/:professionOrExtraFilter([a-z_-]+)/:extraFilter?',\n    vacancySearchCatalogRegion: '/region/vacancies',\n    vacancyTemplate: '/employer/vacancies/templates/template',\n    vacancyView: '/vacancy/:id(\\\\d+)',\n    // Отдельное свойство, т.к. не получается сдружить именованный параметр с регуляркой \"ИЛИ\"\n    vacancyViewAliases: '/vacancy.do',\n    vacancyViewZarplata: '/vacancy/card/id:id(\\\\d+)(.+)?',\n    vrSignupLogin: '/vr_signup_login',\n    vrVacancies: '/employer/vr_vacancies',\n    wantWorkPayment: '/applicant/wantwork/payment',\n    skillsSurvey: '/skills_survey',\n    resumeProfile: '/profile',\n    applicantServices: '/applicant-services',\n    mentors: '/mentors',\n    mailto: '/employer/mailto',\n    vrsurvey: '/vrsurvey',\n    employerChangePassword: '/employer/settings/changepassword',\n    employerCompetencyMaps: '/employer/competency_maps',\n};\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountAddEmail/AccountAddEmail.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('.//AccountCaptcha.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountConnect/AccountConnect.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountDelete/AccountDelete.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountDeleteAffirmation/AccountDeleteAffirmation.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountDeleteConfirmation/AccountDeleteConfirmation.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountDeleteGratitude/AccountDeleteGratitude.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountHistory/AccountHistory.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountLogin/AccountLogin.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AccountPhoneVerification/AccountPhoneVerification.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AdvancedResumeSearch/AdvancedResumeSearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AdvancedVacancySearch/AdvancedVacancySearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/Agencies/Agencies.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AnonymousEmployer/AnonymousEmployer.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ApplicantAddAuthPhone.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantBlacklistEmployers/ApplicantBlacklistEmployers.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantBlacklistVacancy/ApplicantBlacklistVacancy.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ApplicantCountriesVisibility.route'));\n","import Loadable from 'react-loadable';\n\nconst ApplicantNegotiationsDynamic = Loadable(() =>\n    import('../../pages/ApplicantNegotiations/ApplicantNegotiations.route')\n);\n\nexport default ApplicantNegotiationsDynamic;\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantPhoneVerification/ApplicantPhoneVerification.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ApplicantPortrait.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantResumes/ApplicantResumes.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantRsvVerifications/ApplicantRsvVerifications.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantServicesPayment/ApplicantServicesPayment.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantSignup/ApplicantSignup.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ApplicantSkillVerificationsMethod.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ApplicantSkillVerificationsMethodsCatalog'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplicantSuitableVacancies/ApplicantSuitableVacancies.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable({\n    loader: () =>\n        import('../../pages/ApplicantVacancyResponsesSummaryPayment/ApplicantVacancyResponsesSummaryPayment.route'),\n    loading: () => null,\n});\n","import Loadable from 'react-loadable';\n\nexport default Loadable({\n    loader: () =>\n        import('../../pages/ApplicantVacancyResponsesSummarySuccess/ApplicantVacancyResponsesSummarySuccess.route'),\n    loading: () => null,\n});\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ApplyAgreement/ApplyAgreement.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Article.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AuthEmployer/AuthEmployer.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/AuthEmployerAlready/AuthEmployerAlready.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../AuthEmployerDuplicated/AuthEmployerDuplicated.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Away.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Blog.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/CareerMarathonPayment/CareerMarathonPayment.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/CareerMarathonSuccess/CareerMarathonSuccess.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerAddresses/EmployerAddresses.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerAdvices/EmployerAdvices.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./EmployerAutomationInfo.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerCarts/EmployerCarts.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerChangePassword/EmployerChangePassword.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerConstructorWebView/EmployerConstructorWebView.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerContactsVisibility/EmployerContactsVisibility.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerDocuments/EmployerDocuments.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerDocumentsManagement/EmployerDocumentsManagement.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerEmailTemplates/EmployerEmailTemplates.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerFinancialDocuments/EmployerFinancialDocuments.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerInvoiceFinish/EmployerInvoiceFinish.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerInvoicePayment/EmployerInvoicePayment.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerMakeupWebView/EmployerMakeupWebView.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./EmployerManagers.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./EmployerManagersCreate.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(\n    () => import('../../pages/EmployerNegotiationsChangeTopic/EmployerNegotiationsChangeTopic.route')\n);\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./EmployerQuotaHistory.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerReviewsSettings/EmployerReviewsSettings.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerSearchPublication/EmployerSearchPublication.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerSettings/EmployerSettings.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerSidebarEdit/EmployerSidebarEdit.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerStructure/EmployerStructure.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerStructureChangelog/EmployerStructureChangelog.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerSubscription/EmployerSubscription.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(\n    () => import('../../pages/EmployerUnpremoderatedVacancyList/EmployerUnpremoderatedVacancyList.route')\n);\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVacancies/EmployerVacancies.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVacanciesArchived/EmployerVacanciesArchived.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVacanciesDrafts/EmployerVacanciesDrafts.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVacanciesPromotion/EmployerVacanciesPromotion.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVacanciesTemplates/EmployerVacanciesTemplates.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerVerificationActs/EmployerVerificationActs.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerView/EmployerView.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./EmployersCompany.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployersList/EmployersList.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ErrorPage/ErrorPage.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/FastVacanciesSubscription/FastVacanciesSubscription.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Feedback.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ForbiddenPage/ForbiddenPage.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/IndexPage/IndexPage.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/LegacyPage/LegacyPage.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Mailto.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./OauthAuthorize.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./OauthAuthorizeEmployer.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/OauthMergeByCode/OauthMergeByCode.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PartTimeVacancies/PartTimeVacancies.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PersonalManager/PersonalManager.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceAddContacts/PriceAddContacts.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./PriceBranding.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceClickmeProducts/PriceClickmeProducts.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceDBAccess/PriceDBAccess.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceEmployerBrand/PriceEmployerBrand.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceProfRolesPublications/PriceProfRolesPublications.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceRecommended/PriceRecommended.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PriceRegionalPublications/PriceRegionalPublications.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./PriceZp.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ProxyExternalService/ProxyExternalService.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/PurchaseServices/PurchaseServices.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/RememberPassword/RememberPassword.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/RestorePassword/RestorePassword.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderAdditional/ResumeBuilderAdditional.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderContacts/ResumeBuilderContacts.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ResumeBuilderCreds.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderEducation/ResumeBuilderEducation.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderExperience/ResumeBuilderExperience.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderPersonal/ResumeBuilderPersonal.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderPhoto/ResumeBuilderPhoto.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeBuilderPosition/ResumeBuilderPosition.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeCompletion/ResumeCompletion.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeFolder/ResumeFolder.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeFolders/ResumeFolders.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeFoldersSearch/ResumeFoldersSearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeSavedSearch/ResumeSavedSearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeSearch/ResumeSearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./ResumeSearchCatalog.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeView/ResumeView.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ResumeVisibility/ResumeVisibility.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./SalaryStat.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./SearchCatalogList.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/ShortResume/ShortResume.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/Subscribe/Subscribe.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/TargetAgenciesPayment/TargetAgenciesPayment.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/TargetEmployerResumes/TargetEmployerResumes.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./Unsubscribe.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacanciesProbationCatalog/VacanciesProbationCatalog.route'));\n","import Loadable from 'react-loadable';\n\nconst VacancyConstructorDynamic = Loadable(() => import('../../pages/VacancyConstructor/VacancyConstructor.route'));\n\nexport default VacancyConstructorDynamic;\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() =>\n    import('../../pages/VacancyConstructorMobilePreview/VacancyConstructorMobilePreview.route')\n);\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() =>\n    import('../../pages/VacancyConstructorTemplatePreview/VacancyConstructorTemplatePreview.route')\n);\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyCreate/VacancyCreate.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyCreatePromo/VacancyCreatePromo.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyDuplicate/VacancyDuplicate.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyEdit/VacancyEdit.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyFavorite/VacancyFavorite.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyMetroCatalog/VacancyMetroCatalog.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancyMetroMain.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyPreview/VacancyPreview.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyPrint/VacancyPrint.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyResponse/VacancyResponse.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancyResponses.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancyResponsesAutoAction.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancyResponsesAutoInvite.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancyResponsesCalls.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyRestore/VacancyRestore.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancySavedSearch/VacancySavedSearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancySearch/VacancySearch.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancySearchCatalog.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VacancySearchMap.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyTemplate/VacancyTemplate.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VacancyView/VacancyView.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VideoVacancy.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('./VrSignupLogin.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/VrVacancies/VrVacancies.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/WantWorkPayment/WantWorkPayment.route'));\n","import AccountAddEmail from 'lux/pages/AccountAddEmail';\nimport AccountCaptcha from 'lux/pages/AccountCaptcha';\nimport AccountConnect from 'lux/pages/AccountConnect';\nimport AccountDelete from 'lux/pages/AccountDelete';\nimport AccountDeleteAffirmation from 'lux/pages/AccountDeleteAffirmation';\nimport AccountDeleteConfirmation from 'lux/pages/AccountDeleteConfirmation';\nimport AccountDeleteGratitude from 'lux/pages/AccountDeleteGratitude';\nimport AccountHistory from 'lux/pages/AccountHistory';\nimport AccountLogin from 'lux/pages/AccountLogin';\nimport AccountPhoneVerification from 'lux/pages/AccountPhoneVerification';\nimport AdvancedResumeSearch from 'lux/pages/AdvancedResumeSearch';\nimport AdvancedVacancySearch from 'lux/pages/AdvancedVacancySearch';\nimport Agencies from 'lux/pages/Agencies';\nimport AnonymousEmployer from 'lux/pages/AnonymousEmployer';\nimport ApplicantAddAuthPhone from 'lux/pages/ApplicantAddAuthPhone';\nimport ApplicantBlacklistEmployers from 'lux/pages/ApplicantBlacklistEmployers';\nimport ApplicantBlacklistVacancy from 'lux/pages/ApplicantBlacklistVacancy';\nimport ApplicantCountriesVisibility from 'lux/pages/ApplicantCountriesVisibility';\nimport ApplicantNegotiations from 'lux/pages/ApplicantNegotiations';\nimport ApplicantPhoneVerification from 'lux/pages/ApplicantPhoneVerification';\nimport ApplicantPortrait from 'lux/pages/ApplicantPortrait';\nimport ApplicantResumes from 'lux/pages/ApplicantResumes';\nimport ApplicantRsvVerifications from 'lux/pages/ApplicantRsvVerifications';\nimport ApplicantServicesPayment from 'lux/pages/ApplicantServicesPayment';\nimport ApplicantSignup from 'lux/pages/ApplicantSignup';\nimport ApplicantSkillVerificationsMethod from 'lux/pages/ApplicantSkillVerificationsMethod';\nimport ApplicantSkillVerificationsMethodsCatalog from 'lux/pages/ApplicantSkillVerificationsMethods';\nimport ApplicantSuitableVacancies from 'lux/pages/ApplicantSuitableVacancies';\nimport ApplicantVacancyResponsesSummaryPayment from 'lux/pages/ApplicantVacancyResponsesSummaryPayment';\nimport ApplicantVacancyResponsesSummarySuccess from 'lux/pages/ApplicantVacancyResponsesSummarySuccess';\nimport ApplyAgreement from 'lux/pages/ApplyAgreement';\nimport Article from 'lux/pages/Article';\nimport AuthEmployer from 'lux/pages/AuthEmployer';\nimport AuthEmployerAlready from 'lux/pages/AuthEmployerAlready';\nimport AuthEmployerDuplicated from 'lux/pages/AuthEmployerDuplicated';\nimport Away from 'lux/pages/Away';\nimport Blog from 'lux/pages/Blog';\nimport CareerMarathonPayment from 'lux/pages/CareerMarathonPayment';\nimport CareerMarathonSuccess from 'lux/pages/CareerMarathonSuccess';\nimport EmployerAddresses from 'lux/pages/EmployerAddresses';\nimport EmployerAdvices from 'lux/pages/EmployerAdvices';\nimport EmployerAutomationInfo from 'lux/pages/EmployerAutomationInfo';\nimport EmployerCarts from 'lux/pages/EmployerCarts';\nimport EmployerChangePassword from 'lux/pages/EmployerChangePassword';\nimport EmployerConstructor from 'lux/pages/EmployerConstructor';\nimport EmployerConstructorWebview from 'lux/pages/EmployerConstructorWebView';\nimport EmployerContactsVisibility from 'lux/pages/EmployerContactsVisibility';\nimport EmployerDocuments from 'lux/pages/EmployerDocuments';\nimport EmployerDocumentsManagement from 'lux/pages/EmployerDocumentsManagement';\nimport EmployerEmailTemplates from 'lux/pages/EmployerEmailTemplates';\nimport EmployerFinancialDocuments from 'lux/pages/EmployerFinancialDocuments';\nimport EmployerInvoiceFinish from 'lux/pages/EmployerInvoiceFinish';\nimport EmployerInvoicePayment from 'lux/pages/EmployerInvoicePayment';\nimport EmployerMakeupWebView from 'lux/pages/EmployerMakeupWebView';\nimport EmployerManagers from 'lux/pages/EmployerManagers';\nimport EmployerManagersCreate from 'lux/pages/EmployerManagersCreate';\nimport EmployerNegotiationsChangeTopic from 'lux/pages/EmployerNegotiationsChangeTopic';\nimport EmployerQuotaHistory from 'lux/pages/EmployerQuotaHistory';\nimport EmployerReviewsSettings from 'lux/pages/EmployerReviewsSettings';\nimport EmployerSearchPublication from 'lux/pages/EmployerSearchPublication';\nimport EmployerSettings from 'lux/pages/EmployerSettings';\nimport EmployerSidebarEdit from 'lux/pages/EmployerSidebarEdit';\nimport EmployerSimpleEdit from 'lux/pages/EmployerSimpleEdit';\nimport EmployerStructure from 'lux/pages/EmployerStructure';\nimport EmployerStructureChangelog from 'lux/pages/EmployerStructureChangelog';\nimport EmployerSubscription from 'lux/pages/EmployerSubscription';\nimport EmployerUnpremoderatedVacancyList from 'lux/pages/EmployerUnpremoderatedVacancyList';\nimport EmployerVacancies from 'lux/pages/EmployerVacancies';\nimport EmployerVacanciesArchived from 'lux/pages/EmployerVacanciesArchived';\nimport EmployerVacanciesDrafts from 'lux/pages/EmployerVacanciesDrafts';\nimport EmployerVacanciesPromotion from 'lux/pages/EmployerVacanciesPromotion';\nimport EmployerVacanciesTemplates from 'lux/pages/EmployerVacanciesTemplates';\nimport EmployerVerificationActs from 'lux/pages/EmployerVerificationActs';\nimport EmployerView from 'lux/pages/EmployerView';\nimport EmployersCompany from 'lux/pages/EmployersCompany';\nimport EmployersList from 'lux/pages/EmployersList';\nimport ErrorPage from 'lux/pages/ErrorPage';\nimport FastVacanciesSubscription from 'lux/pages/FastVacanciesSubscription';\nimport Feedback from 'lux/pages/Feedback';\nimport ForbiddenPage from 'lux/pages/ForbiddenPage';\nimport IndexPage from 'lux/pages/IndexPage';\nimport LegacyPage from 'lux/pages/LegacyPage';\nimport Mailto from 'lux/pages/Mailto';\nimport OauthAuthorize from 'lux/pages/OauthAuthorize';\nimport OauthAuthorizeEmployer from 'lux/pages/OauthAuthorizeEmployer';\nimport OauthMergeByCode from 'lux/pages/OauthMergeByCode';\nimport PartTimeVacancies from 'lux/pages/PartTimeVacancies';\nimport PersonalManager from 'lux/pages/PersonalManager';\nimport PriceAddContacts from 'lux/pages/PriceAddContacts';\nimport PriceBranding from 'lux/pages/PriceBranding';\nimport PriceClickmeProducts from 'lux/pages/PriceClickmeProducts';\nimport PriceDBAccess from 'lux/pages/PriceDBAccess';\nimport PriceEmployerBrand from 'lux/pages/PriceEmployerBrand';\nimport PriceProfRolesPublications from 'lux/pages/PriceProfRolesPublications';\nimport PriceRecommended from 'lux/pages/PriceRecommended';\nimport PriceRegionalPublications from 'lux/pages/PriceRegionalPublications';\nimport PriceZp from 'lux/pages/PriceZp';\nimport ProxyExternalService from 'lux/pages/ProxyExternalService';\nimport PurchaseServices from 'lux/pages/PurchaseServices';\nimport RememberPassword from 'lux/pages/RememberPassword';\nimport RestorePassword from 'lux/pages/RestorePassword';\nimport ResumeBuilderAdditional from 'lux/pages/ResumeBuilderAdditional';\nimport ResumeBuilderContacts from 'lux/pages/ResumeBuilderContacts';\nimport ResumeBuilderCreds from 'lux/pages/ResumeBuilderCreds';\nimport ResumeBuilderEducation from 'lux/pages/ResumeBuilderEducation';\nimport ResumeBuilderExperience from 'lux/pages/ResumeBuilderExperience';\nimport ResumeBuilderPersonal from 'lux/pages/ResumeBuilderPersonal';\nimport ResumeBuilderPhoto from 'lux/pages/ResumeBuilderPhoto';\nimport ResumeBuilderPosition from 'lux/pages/ResumeBuilderPosition';\nimport ResumeCompletion from 'lux/pages/ResumeCompletion';\nimport ResumeFolder from 'lux/pages/ResumeFolder';\nimport ResumeFolders from 'lux/pages/ResumeFolders';\nimport ResumeFoldersSearch from 'lux/pages/ResumeFoldersSearch';\nimport ResumeSavedSearch from 'lux/pages/ResumeSavedSearch';\nimport ResumeSearch from 'lux/pages/ResumeSearch';\nimport ResumeSearchCatalog from 'lux/pages/ResumeSearchCatalog';\nimport ResumeView from 'lux/pages/ResumeView';\nimport ResumeVisibility from 'lux/pages/ResumeVisibility';\nimport SalaryStat from 'lux/pages/SalaryStat';\nimport SearchCatalogList from 'lux/pages/SearchCatalogList';\nimport ShortResume from 'lux/pages/ShortResume';\nimport Subscribe from 'lux/pages/Subscribe';\nimport TargetAgenciesPayment from 'lux/pages/TargetAgenciesPayment';\nimport TargetEmployerResumes from 'lux/pages/TargetEmployerResumes';\nimport Unsubscribe from 'lux/pages/Unsubscribe';\nimport VacanciesProbationCatalog from 'lux/pages/VacanciesProbationCatalog';\nimport VacancyConstructor from 'lux/pages/VacancyConstructor';\nimport VacancyConstructorMobilePreview from 'lux/pages/VacancyConstructorMobilePreview';\nimport VacancyConstructorTemplatePreview from 'lux/pages/VacancyConstructorTemplatePreview';\nimport VacancyCreate from 'lux/pages/VacancyCreate';\nimport VacancyCreatePromo from 'lux/pages/VacancyCreatePromo';\nimport VacancyDuplicate from 'lux/pages/VacancyDuplicate';\nimport VacancyEdit from 'lux/pages/VacancyEdit';\nimport VacancyFavorite from 'lux/pages/VacancyFavorite';\nimport VacancyMetroCatalog from 'lux/pages/VacancyMetroCatalog';\nimport VacancyMetroMain from 'lux/pages/VacancyMetroMain';\nimport VacancyPreview from 'lux/pages/VacancyPreview';\nimport VacancyPrint from 'lux/pages/VacancyPrint';\nimport VacancyResponse from 'lux/pages/VacancyResponse';\nimport VacancyResponses from 'lux/pages/VacancyResponses';\nimport VacancyResponsesAutoAction from 'lux/pages/VacancyResponsesAutoAction';\nimport VacancyResponsesAutoInvite from 'lux/pages/VacancyResponsesAutoInvite';\nimport VacancyResponsesCalls from 'lux/pages/VacancyResponsesCalls';\nimport VacancyRestore from 'lux/pages/VacancyRestore';\nimport VacancySavedSearch from 'lux/pages/VacancySavedSearch';\nimport VacancySearch from 'lux/pages/VacancySearch';\nimport VacancySearchCatalog from 'lux/pages/VacancySearchCatalog';\nimport VacancySearchMap from 'lux/pages/VacancySearchMap';\nimport VacancyTemplate from 'lux/pages/VacancyTemplate';\nimport VacancyView from 'lux/pages/VacancyView';\nimport VideoVacancy from 'lux/pages/VideoVacancy';\nimport VrSignupLogin from 'lux/pages/VrSignupLogin';\nimport VrVacancies from 'lux/pages/VrVacancies';\nimport WantWorkPayment from 'lux/pages/WantWorkPayment';\n\nimport paths from 'lux/modules/routePaths';\n\nconst routes = [\n    {\n        path: [\n            paths.mentors,\n            paths.support,\n            paths.skillsSurvey,\n            paths.resumeProfile,\n            paths.employerReviews,\n            paths.applicantServices,\n            paths.vrsurvey,\n            paths.brandingProxyService,\n            paths.employerCompetencyMaps,\n        ],\n        component: ProxyExternalService,\n        strict: false,\n        exact: false,\n        forceReload: true,\n        isProxyService: true,\n    },\n    {\n        path: paths.accountAddEmail,\n        component: AccountAddEmail,\n    },\n    {\n        path: paths.accountCaptcha,\n        component: AccountCaptcha,\n        forceReload: true,\n    },\n    {\n        path: paths.agencies,\n        component: Agencies,\n    },\n    {\n        path: paths.applicantBlacklistVacancy,\n        component: ApplicantBlacklistVacancy,\n    },\n    {\n        path: paths.applicantBlacklistEmployers,\n        component: ApplicantBlacklistEmployers,\n    },\n    {\n        path: paths.applicantNegotiations,\n        component: ApplicantNegotiations,\n    },\n    {\n        path: paths.applicantPortrait,\n        component: ApplicantPortrait,\n    },\n    {\n        path: paths.applyAgreement,\n        component: ApplyAgreement,\n    },\n    {\n        path: paths.resumeVisibility,\n        component: ResumeVisibility,\n    },\n    {\n        path: paths.applicantServicesPayment,\n        component: ApplicantServicesPayment,\n    },\n    {\n        path: paths.fastVacanciesSubscription,\n        component: FastVacanciesSubscription,\n    },\n    {\n        path: paths.partTimeVacancies,\n        component: PartTimeVacancies,\n    },\n    {\n        path: paths.wantWorkPayment,\n        component: WantWorkPayment,\n    },\n    {\n        path: paths.vacancyPreview,\n        component: VacancyPreview,\n    },\n    {\n        path: paths.vacancyPreviewDraft,\n        component: VacancyPreview,\n    },\n    {\n        path: paths.salaryStat,\n        component: SalaryStat,\n    },\n    {\n        path: [\n            paths.resumeSearchCatalogListMain,\n            paths.resumeSearchCatalogListByLetter,\n            paths.vacancySearchCatalogListMain,\n            paths.vacancySearchCatalogListByLetter,\n        ],\n        component: SearchCatalogList,\n    },\n    {\n        path: [paths.resumeSearchCatalog, paths.resumeSearchCatalogRegion],\n        component: ResumeSearchCatalog,\n    },\n    {\n        path: [paths.vacancyView, paths.vacancyViewAliases, paths.vacancyViewZarplata],\n        component: VacancyView,\n        forceReload: true,\n    },\n    {\n        path: paths.VacancySavedSearch,\n        component: VacancySavedSearch,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeSavedSearch,\n        component: ResumeSavedSearch,\n        forceReload: true,\n    },\n    {\n        path: paths.targetAgenciesPayment,\n        component: TargetAgenciesPayment,\n    },\n    {\n        path: paths.careerMarathonPayment,\n        component: CareerMarathonPayment,\n    },\n    {\n        path: paths.careerMarathonSuccess,\n        component: CareerMarathonSuccess,\n    },\n    {\n        path: paths.applicantVacancyResponsesSummaryPayment,\n        component: ApplicantVacancyResponsesSummaryPayment,\n    },\n    {\n        path: paths.applicantVacancyResponsesSummarySuccess,\n        component: ApplicantVacancyResponsesSummarySuccess,\n    },\n    {\n        path: paths.vacancyResponse,\n        component: VacancyResponse,\n    },\n    {\n        path: paths.vacancyResponseTest,\n        component: VacancyResponse,\n    },\n    {\n        path: paths.anonymousEmployer,\n        component: AnonymousEmployer,\n        forceReload: true,\n    },\n    {\n        path: paths.accountHistory,\n        component: AccountHistory,\n    },\n    {\n        path: paths.accountHistoryMoney,\n        component: AccountHistory,\n    },\n    {\n        path: paths.accountHistoryExpenditures,\n        component: AccountHistory,\n    },\n    {\n        path: paths.accountHistoryReplenishments,\n        component: AccountHistory,\n    },\n    {\n        path: paths.accountHistoryServices,\n        component: AccountHistory,\n    },\n    {\n        path: paths.employerUnpremoderatedVacancyList,\n        component: EmployerUnpremoderatedVacancyList,\n    },\n    {\n        path: paths.employerVacancies,\n        component: EmployerVacancies,\n    },\n    {\n        path: paths.employerVacanciesDrafts,\n        component: EmployerVacanciesDrafts,\n    },\n    {\n        path: paths.employerVacanciesPromotion,\n        component: EmployerVacanciesPromotion,\n    },\n    {\n        path: paths.employerVacanciesArchived,\n        component: EmployerVacanciesArchived,\n        forceReload: true,\n    },\n    {\n        path: paths.employerVacanciesTemplates,\n        component: EmployerVacanciesTemplates,\n    },\n    {\n        path: paths.employerAdvices,\n        component: EmployerAdvices,\n    },\n    {\n        path: paths.vacancyConstructorTemplatePreview,\n        component: VacancyConstructorTemplatePreview,\n        forceReload: true,\n    },\n    {\n        path: paths.vacancyConstructorMobilePreview,\n        component: VacancyConstructorMobilePreview,\n    },\n    {\n        path: paths.vacancyConstructor,\n        component: VacancyConstructor,\n    },\n    {\n        path: paths.vacancyCreate,\n        component: VacancyCreate,\n    },\n    {\n        path: paths.vacancyCreatePromo,\n        component: VacancyCreatePromo,\n    },\n    {\n        path: paths.vacancyEdit,\n        component: VacancyEdit,\n    },\n    {\n        path: paths.vacancyRestore,\n        component: VacancyRestore,\n    },\n    {\n        path: paths.vacancyDuplicate,\n        component: VacancyDuplicate,\n    },\n    {\n        path: paths.videoVacancy,\n        component: VideoVacancy,\n        forceReload: true,\n    },\n    {\n        path: paths.vacancyTemplate,\n        component: VacancyTemplate,\n    },\n    {\n        path: paths.targetEmployerResumes,\n        component: TargetEmployerResumes,\n    },\n    {\n        path: paths.employerConstructorWebview,\n        component: EmployerConstructorWebview,\n    },\n    {\n        path: paths.employerContactsVisibility,\n        component: EmployerContactsVisibility,\n    },\n    {\n        path: paths.employersCompany,\n        component: EmployersCompany,\n    },\n    {\n        path: [paths.employersList, paths.employersListZarplata],\n        component: EmployersList,\n        forceReload: true,\n    },\n    {\n        path: paths.employerMakeupWebView,\n        component: EmployerMakeupWebView,\n    },\n    {\n        path: paths.vacancyPrint,\n        component: VacancyPrint,\n    },\n    {\n        path: paths.applicantResumes,\n        component: ApplicantResumes,\n    },\n    {\n        path: paths.applicantSkillVerificationsMethod,\n        component: ApplicantSkillVerificationsMethod,\n    },\n    {\n        path: paths.applicantSkillVerificationsMethods,\n        component: ApplicantSkillVerificationsMethodsCatalog,\n    },\n    {\n        path: paths.applicantRsvVerifications,\n        component: ApplicantRsvVerifications,\n    },\n    {\n        path: paths.applicantResumesList,\n        component: ApplicantResumes,\n    },\n    {\n        path: paths.applicantPhoneVerification,\n        component: ApplicantPhoneVerification,\n    },\n    {\n        path: paths.shortResume,\n        component: ShortResume,\n    },\n    {\n        path: paths.resumeCompletion,\n        component: ResumeCompletion,\n    },\n    {\n        path: paths.applicantSuitableVacancies,\n        component: ApplicantSuitableVacancies,\n    },\n    {\n        path: paths.resumeViewByID,\n        component: ResumeView,\n    },\n    {\n        path: paths.resumeView,\n        component: ResumeView,\n    },\n    {\n        path: paths.employerDocuments,\n        component: EmployerDocuments,\n    },\n    {\n        path: paths.employerQuotaHistory,\n        component: EmployerQuotaHistory,\n    },\n    {\n        path: paths.employerReviewsSettings,\n        component: EmployerReviewsSettings,\n    },\n    {\n        path: paths.employerStructure,\n        component: EmployerStructure,\n    },\n    {\n        path: paths.employerStructureChangelog,\n        component: EmployerStructureChangelog,\n    },\n    {\n        path: paths.employerDocumentsManagement,\n        component: EmployerDocumentsManagement,\n    },\n    {\n        path: paths.employerEmailTemplates,\n        component: EmployerEmailTemplates,\n        forceReload: true,\n    },\n    {\n        path: paths.employerCarts,\n        component: EmployerCarts,\n    },\n    {\n        path: paths.employerNegotiationsChangeTopic,\n        component: EmployerNegotiationsChangeTopic,\n        forceReload: true,\n    },\n    {\n        path: paths.employerConstructor,\n        component: EmployerConstructor,\n    },\n    {\n        path: [paths.employerView, paths.employerViewZarplata],\n        component: EmployerView,\n        forceReload: true,\n    },\n    {\n        path: paths.employerSimpleEdit,\n        component: EmployerSimpleEdit,\n    },\n    {\n        path: paths.employerSidebarEdit,\n        component: EmployerSidebarEdit,\n    },\n    {\n        path: paths.oauthAuthorize,\n        component: OauthAuthorize,\n    },\n    {\n        path: paths.oauthAuthorizeEmployer,\n        component: OauthAuthorizeEmployer,\n    },\n    {\n        path: paths.oauthMergeByCode,\n        component: OauthMergeByCode,\n    },\n    {\n        path: paths.accountPhoneVerification,\n        component: AccountPhoneVerification,\n    },\n    {\n        path: paths.personalManager,\n        component: PersonalManager,\n    },\n    {\n        path: paths.vrVacancies,\n        component: VrVacancies,\n    },\n    {\n        path: paths.priceDBAccess,\n        component: PriceDBAccess,\n    },\n    {\n        path: paths.priceEmployerBrand,\n        component: PriceEmployerBrand,\n    },\n    {\n        path: paths.priceRegionalPublications,\n        component: PriceRegionalPublications,\n    },\n    {\n        path: paths.priceProfRolesPublications,\n        component: PriceProfRolesPublications,\n    },\n    {\n        path: paths.priceRecommended,\n        component: PriceRecommended,\n    },\n    {\n        path: paths.priceClickmeProducts,\n        component: PriceClickmeProducts,\n    },\n    {\n        path: paths.priceBranding,\n        component: PriceBranding,\n    },\n    {\n        path: paths.priceAddContacts,\n        component: PriceAddContacts,\n    },\n    {\n        path: paths.priceZpResumeAccess,\n        component: PriceZp,\n    },\n    {\n        path: paths.priceZpPublications,\n        component: PriceZp,\n    },\n    {\n        path: paths.priceZpBundles,\n        component: PriceZp,\n    },\n    {\n        path: paths.priceZpPromotion,\n        component: PriceZp,\n    },\n    {\n        path: paths.priceZpBackoffice,\n        component: PriceZp,\n    },\n    {\n        path: [paths.applicantSignup, paths.authRegistrationZarplata, paths.registrationZarplata],\n        component: ApplicantSignup,\n        forceReload: true,\n    },\n    {\n        path: paths.applicantSignupVerify,\n        component: ApplicantSignup,\n        forceReload: true,\n    },\n    {\n        path: paths.rememberPassword,\n        component: RememberPassword,\n        forceReload: true,\n    },\n    {\n        path: paths.restorePassword,\n        component: RestorePassword,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeSearch,\n        component: ResumeSearch,\n    },\n    {\n        path: paths.resumeSearchAliases,\n        component: ResumeSearch,\n        forceReload: true,\n    },\n    {\n        path: paths.advancedResumeSearchVariants,\n        component: AdvancedResumeSearch,\n        forceReload: true,\n    },\n    {\n        path: paths.advancedVacancySearch,\n        component: AdvancedVacancySearch,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeFolder,\n        component: ResumeFolder,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeFolders,\n        component: ResumeFolders,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeFoldersSearch,\n        component: ResumeFoldersSearch,\n        forceReload: true,\n    },\n    {\n        path: paths.resumeBuilderPersonal,\n        component: ResumeBuilderPersonal,\n    },\n    {\n        path: paths.resumeBuilderExperience,\n        component: ResumeBuilderExperience,\n    },\n    {\n        path: paths.resumeBuilderPhoto,\n        component: ResumeBuilderPhoto,\n    },\n    {\n        path: paths.resumeBuilderContacts,\n        component: ResumeBuilderContacts,\n    },\n    {\n        path: paths.resumeBuilderCreds,\n        component: ResumeBuilderCreds,\n    },\n    {\n        path: paths.resumeBuilderAdditional,\n        component: ResumeBuilderAdditional,\n    },\n    {\n        path: paths.unsubscribe,\n        component: Unsubscribe,\n    },\n    {\n        path: paths.resumeBuilderPosition,\n        component: ResumeBuilderPosition,\n    },\n    {\n        path: paths.resumeBuilderEducation,\n        component: ResumeBuilderEducation,\n    },\n    {\n        path: paths.authEmployer,\n        component: AuthEmployer,\n        forceReload: true,\n    },\n    {\n        path: paths.authEmployerAlready,\n        component: AuthEmployerAlready,\n        forceReload: true,\n    },\n    {\n        path: paths.authEmployerDuplicated,\n        component: AuthEmployerDuplicated,\n    },\n    {\n        path: paths.accountConnect,\n        component: AccountConnect,\n        forceReload: true,\n    },\n    {\n        path: [paths.accountLogin, paths.authLoginZarplata],\n        component: AccountLogin,\n        forceReload: true,\n    },\n    {\n        path: paths.vacancyResponses,\n        component: VacancyResponses,\n    },\n    {\n        path: paths.vacancyResponsesAutoAction,\n        component: VacancyResponsesAutoAction,\n    },\n    {\n        path: paths.VacancyResponsesAutoInvite,\n        component: VacancyResponsesAutoInvite,\n    },\n    {\n        path: paths.vacancyResponsesCalls,\n        component: VacancyResponsesCalls,\n    },\n    {\n        path: [paths.vacancySearch, paths.vacancySearchZarplata],\n        component: VacancySearch,\n    },\n    {\n        path: paths.vacancySearchMap,\n        component: VacancySearchMap,\n        forceReload: true,\n    },\n    {\n        path: paths.specializedPartTimeVacancies,\n        component: PartTimeVacancies,\n        exact: true,\n    },\n    {\n        path: paths.vacancyMetroMain,\n        component: VacancyMetroMain,\n    },\n    {\n        path: paths.vacancySearchMetroCatalog,\n        component: VacancyMetroCatalog,\n    },\n    {\n        path: paths.vacanciesProbationCatalog,\n        component: VacanciesProbationCatalog,\n        exact: true,\n    },\n    {\n        path: paths.vacanciesProbationCatalogProfarea,\n        component: VacanciesProbationCatalog,\n    },\n    {\n        path: paths.vacancyFavorite,\n        component: VacancyFavorite,\n    },\n    {\n        path: paths.employerFinancialDocuments,\n        component: EmployerFinancialDocuments,\n    },\n    {\n        path: paths.employerVerificationActs,\n        component: EmployerVerificationActs,\n        forceReload: true,\n    },\n    {\n        path: paths.accountDelete,\n        component: AccountDelete,\n    },\n    {\n        path: paths.accountDeleteConfirmation,\n        component: AccountDeleteConfirmation,\n    },\n    {\n        path: paths.accountDeleteAffirmation,\n        component: AccountDeleteAffirmation,\n    },\n    {\n        path: paths.accountDeleteGratitude,\n        component: AccountDeleteGratitude,\n    },\n    {\n        path: paths.indexPage,\n        component: IndexPage,\n        forceReload: true,\n    },\n    {\n        path: paths.employerAddresses,\n        component: EmployerAddresses,\n    },\n    {\n        path: paths.employerAutomationInfo,\n        component: EmployerAutomationInfo,\n    },\n    {\n        path: paths.vrSignupLogin,\n        component: VrSignupLogin,\n    },\n    {\n        path: [paths.subscribe, paths.subscribeZarplata],\n        component: Subscribe,\n    },\n    {\n        path: paths.mailto,\n        component: Mailto,\n    },\n    {\n        path: paths.applicantCountriesVisibility,\n        component: ApplicantCountriesVisibility,\n    },\n    {\n        path: paths.applicantAddAuthPhone,\n        component: ApplicantAddAuthPhone,\n    },\n    {\n        path: paths.employerManagers,\n        component: EmployerManagers,\n    },\n    {\n        path: paths.employerSubscription,\n        component: EmployerSubscription,\n    },\n    {\n        path: paths.employerSettingsEmailTemplates,\n        component: EmployerEmailTemplates,\n    },\n    {\n        path: paths.employerInvoicePurchase,\n        component: PurchaseServices,\n        forceReload: true,\n    },\n    {\n        path: paths.employerInvoicePayment,\n        component: EmployerInvoicePayment,\n        forceReload: true,\n    },\n    {\n        path: paths.employerInvoiceFinish,\n        component: EmployerInvoiceFinish,\n        forceReload: true,\n    },\n    {\n        path: paths.employerSettings,\n        component: EmployerSettings,\n        forceReload: true,\n    },\n    {\n        path: paths.employerSearchPublication,\n        component: EmployerSearchPublication,\n        forceReload: true,\n    },\n    {\n        path: paths.employerManagersCreate,\n        component: EmployerManagersCreate,\n        forceReload: true,\n    },\n    {\n        path: [paths.eventsForStudents, paths.events],\n        component: LegacyPage,\n        exact: false,\n        forceReload: true,\n    },\n    {\n        path: paths.blog,\n        component: Blog,\n        exact: false,\n        forceReload: true,\n    },\n    {\n        path: paths.article,\n        component: Article,\n        forceReload: true,\n    },\n    {\n        path: [paths.vacancySearchCatalog, paths.vacancySearchCatalogRegion, paths.vacancySearchCatalogZarplata],\n        component: VacancySearchCatalog,\n    },\n    {\n        path: paths.employerChangePassword,\n        component: EmployerChangePassword,\n        forceReload: true,\n    },\n    {\n        path: paths.feedback,\n        component: Feedback,\n        forceReload: true,\n    },\n    {\n        path: paths.away,\n        component: Away,\n    },\n];\n\nroutes.push({\n    component: LegacyPage,\n});\n\nexport const forbiddenPageRoute = {\n    path: '*',\n    component: ForbiddenPage,\n    forceReload: true,\n};\nexport const errorPageRoute = {\n    path: '*',\n    component: ErrorPage,\n    forceReload: true,\n};\n\nexport default routes;\n","import { Primitive } from 'type-fest';\n\nimport urlParser from 'bloko/common/urlParser';\n\nconst DEFAULT_TEXT_VALUE = 'пустое_значение';\n\ninterface SearchTypeParams extends SearchType {\n    name: string | null;\n    path: RegExp | string;\n    paramsExisting?: string[] | [];\n    removeArgs?: string[] | [];\n    updateArgs: Record<string, string>[];\n}\n\nclass SearchType {\n    constructor(\n        public name: string | null,\n        public path: RegExp | string,\n        public updateArgs: Record<string, string>[] = []\n    ) {\n        this.name = name;\n        this.path = new RegExp(path);\n        this.updateArgs = updateArgs;\n    }\n}\n\nclass SearchTypeWithParamsExisting extends SearchType {\n    constructor(\n        name: string | null,\n        path: RegExp | string,\n        public paramsExisting: string[] = [],\n        updateArgs: Record<string, string>[] = []\n    ) {\n        super(name, path, updateArgs);\n        this.paramsExisting = paramsExisting;\n    }\n}\n\nclass SearchTypeWithArgsToRemove extends SearchType {\n    constructor(\n        name: string | null,\n        path: RegExp | string,\n        public removeArgs: string[] = [],\n        updateArgs: Record<string, string>[] = []\n    ) {\n        super(name, path, updateArgs);\n        this.removeArgs = removeArgs;\n    }\n}\n\nconst ResumeSimple = new SearchType('resume_simple', '^/search/resume$');\nconst ResumeCatalog = new SearchType('resume_catalog_list', '^/resumes');\nconst ResumeCatalogRegion = new SearchType('resume_catalog_region', '^/region/resumes');\nconst VacancySimple = new SearchType('vacancy_simple', '^/search/vacancy$');\nconst VacancyMap = new SearchType('vacancy_map', '^/search/vacancy/map');\nconst VacancyCatalog = new SearchType(\n    'vacancy_catalog_list',\n    '^/vacancies(?!/podrabotka|[/a-zA-Z_-]*/podrabotka)/?([a-zA-Z_-]*)/?[a-zA-Z_-]*$'\n);\nconst VacancyCatalogRegion = new SearchType('vacancy_catalog_region', '^/region/vacancies');\nconst VacancyCatalogMetro = new SearchType('vacancy_catalog_metro', '^/metro');\nconst VacancyCatalogPodrabotka = new SearchType(\n    'vacancy_catalog_podrabotka',\n    '^/vacancies/?([a-zA-Z_-]*)?/podrabotka$'\n);\nconst VacancyProbation = new SearchType('vacancy_catalog_stazhirovki', '^/stazhirovki([/a-zA-Z_-]*)?$');\nconst VacancySezonnayaRabota = new SearchType('catalog_sezonnaya_rabota', '/vacancies/sezonnaya_rabota', [\n    { text: DEFAULT_TEXT_VALUE },\n]);\nconst VacancyCatalogProfessions = new SearchType('vacancy_catalog_professions', '/catalog/[a-zA-Z_-]*');\n\nconst ResumeSimilarByVacancy = new SearchTypeWithParamsExisting('resume_similar_by_vacancy', '/search/resume', [\n    'vacancy_id',\n]);\nconst ResumeSimilarByResume = new SearchTypeWithParamsExisting('resume_similar_by_resume', '/search/resume', [\n    'resume',\n]);\nconst VacancyByEmployer = new SearchTypeWithParamsExisting('vacancy_by_employer', '/search/vacancy', ['employer_id']);\nconst VacancySimilarByResume = new SearchTypeWithParamsExisting('vacancy_similar_by_resume', '/search/vacancy', [\n    'resume',\n]);\n\nconst EmployersList = new SearchTypeWithArgsToRemove('employers_list', '/employers_list', ['query']);\nconst ResumeAdvanced = new SearchTypeWithArgsToRemove(null, '/search/resume/advanced', ['text']);\nconst EmployerResumeFolders = new SearchTypeWithArgsToRemove(null, '/employer/resumefolders/search', ['text']);\nconst VacancyAdvanced = new SearchTypeWithArgsToRemove(null, '/search/vacancy/advanced', ['text']);\n\nconst SEARCH_TYPES = [\n    EmployersList,\n    ResumeSimple,\n    ResumeAdvanced,\n    VacancySimple,\n    ResumeSimilarByVacancy,\n    ResumeSimilarByResume,\n    ResumeCatalog,\n    ResumeCatalogRegion,\n    EmployerResumeFolders,\n    VacancyAdvanced,\n    VacancyByEmployer,\n    VacancySimilarByResume,\n    VacancyMap,\n    VacancyCatalog,\n    VacancyCatalogRegion,\n    VacancyCatalogMetro,\n    VacancyCatalogPodrabotka,\n    VacancyCatalogProfessions,\n    VacancyProbation,\n    VacancySezonnayaRabota,\n];\n\nclass SearchPageLocationForGA {\n    searchTypes: SearchTypeParams[];\n    updateArgs: Record<string, never>;\n    removeArgs: [];\n    filteredSearchTypes: Record<string, SearchTypeParams[]>;\n\n    /**\n     * @param search_types list of SearchType objects.\n     * @param update_args arguments to add/update in result url.\n     * @param remove_args arguments to remove from result url.\n     * @param filtered_search_types SearchType objects filtered by url and params.\n     */\n\n    constructor() {\n        this.searchTypes = SEARCH_TYPES;\n        this.updateArgs = {};\n        this.removeArgs = [];\n        this.filteredSearchTypes = {};\n    }\n\n    _getTypesWithParamsExisting(searchTypesList: SearchTypeParams[]): SearchTypeParams[] {\n        return searchTypesList.filter((type) => type instanceof SearchTypeWithParamsExisting);\n    }\n\n    _getTypesWithoutParams(searchTypesList: SearchTypeParams[]): SearchTypeParams[] {\n        return searchTypesList.filter((type: SearchTypeParams) => type instanceof SearchType);\n    }\n\n    _filterSearchTypes(urlPath: string): Record<string, SearchTypeParams[]> {\n        const filteredSearchTypesByPath: SearchTypeParams[] = this.searchTypes.filter((type: SearchTypeParams) => {\n            const match = new RegExp(type.path, 'g').exec(urlPath);\n            if (match && match[1]) {\n                type.updateArgs.push({ text: match[1] });\n            }\n            return match;\n        });\n\n        const filteredSearchTypesByParams = {\n            typesWithoutParams: this._getTypesWithoutParams(filteredSearchTypesByPath),\n            typesWithParamsExisting: this._getTypesWithParamsExisting(filteredSearchTypesByPath),\n        };\n        return filteredSearchTypesByParams;\n    }\n\n    _getSearchType(urlQueryDict: Record<string, Primitive[] | Primitive>): SearchTypeParams | undefined {\n        let currentSearchType;\n        if (this.filteredSearchTypes.typesWithParamsExisting) {\n            currentSearchType = this.filteredSearchTypes.typesWithParamsExisting.find((searchType) => {\n                return searchType?.paramsExisting?.find((value: string) => {\n                    return Object.keys(urlQueryDict).find((queryValue: string) => {\n                        return queryValue === value;\n                    });\n                });\n            });\n        }\n        if (!currentSearchType && this.filteredSearchTypes.typesWithoutParams) {\n            currentSearchType = this.filteredSearchTypes.typesWithoutParams[0];\n        }\n        return currentSearchType;\n    }\n\n    prepareUrl(pathname: string, search: string): string {\n        this.filteredSearchTypes = this._filterSearchTypes(pathname);\n\n        const searchParsed = urlParser(`${pathname}${search}`);\n        const searchParams = searchParsed.params;\n        const searchType = this._getSearchType(searchParams);\n\n        if (searchType) {\n            if (searchParams.text) {\n                const text = searchParams.text.toString();\n                searchParams.text = text.length ? text.toLowerCase() : DEFAULT_TEXT_VALUE;\n            } else if (searchParams.query) {\n                const text = searchParams.query.toString();\n                searchParams.text = text.length ? text.toLowerCase() : DEFAULT_TEXT_VALUE;\n            } else {\n                searchParams.text = [DEFAULT_TEXT_VALUE];\n            }\n\n            if (searchType.updateArgs) {\n                searchType.updateArgs.forEach((args) => {\n                    Object.entries(args).map(([key, value]) => (searchParams[key] = value.toString()));\n                });\n            }\n\n            if (searchType.name) {\n                searchParams.st = searchType.name;\n            }\n\n            if (searchType.removeArgs) {\n                searchType.removeArgs.forEach((arg) => delete searchParams[arg]);\n            }\n        }\n\n        return searchParsed.href;\n    }\n}\n\nexport default SearchPageLocationForGA;\n","import { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\nimport { AnyAction, Middleware } from 'redux';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport { Counter, CounterType } from 'lux/models/counters';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport SearchPageLocationForGA from 'lux/modules/analytics/pageLocationForGA';\nimport { resetCheckedExperiment } from 'lux/modules/checkedExperiments';\n\nconst resetMicroFrontendNodes = (): void => {\n    const containers = document.querySelectorAll('.HH-MicroFrontendsMiddleware-Container');\n\n    [...containers].forEach((node) => {\n        node.remove();\n    });\n};\n\nconst trackUrl = (locationChangeAction: LocationChangeAction): void => {\n    const pathname = locationChangeAction.payload.location.pathname;\n    const query = locationChangeAction.payload.location.search;\n\n    const pageLocationForGA = new SearchPageLocationForGA().prepareUrl(pathname, query);\n    const resultPageLocationForGA = `${location.protocol}//${location.host}${pageLocationForGA}`;\n\n    Analytics.trackPageView(resultPageLocationForGA);\n};\n\nconst destroyYaBanners = () => {\n    if (window.globalVars?.features?.yandex_adfox_enabled && window.Ya?.adfoxCode) {\n        const containers = document.querySelectorAll<HTMLDivElement>('.HH-Banner-Adfox');\n        [...containers].forEach((node) => {\n            if (node.dataset.adfoxRequested === 'true') {\n                window.Ya?.adfoxCode.destroy(node.id);\n            }\n        });\n    }\n};\n\nconst sendDV360Event = (topLevelSite: TopLevelSite, counters: Record<string, Counter[]>): void => {\n    if ([TopLevelSite.KZ, TopLevelSite.AZ, TopLevelSite.UZ].includes(topLevelSite)) {\n        const goal = {\n            [TopLevelSite.AZ]: 'allaz0',\n            [TopLevelSite.KZ]: 'hhklr0',\n            [TopLevelSite.UZ]: 'alluz0',\n        }[topLevelSite as TopLevelSite.AZ | TopLevelSite.KZ | TopLevelSite.UZ];\n\n        if (goal) {\n            counters.googleUniversalAnalytics?.forEach((item) => {\n                if (item.type === CounterType.DV360) {\n                    Analytics.sendDv360Conversion(String(item.id), goal);\n                }\n            });\n        }\n    }\n};\n\nconst locationChangeMiddleware: Middleware =\n    (store) => (next) => (action: LocationChangeAction | LocationChangeAction[]) => {\n        let locationChangeAction = null;\n        const { counters, topLevelSite } = store.getState() as {\n            counters: Record<string, Counter[]>;\n            topLevelSite: TopLevelSite;\n        };\n\n        if (Array.isArray(action)) {\n            locationChangeAction = action?.find?.((action: LocationChangeAction) => action?.type === LOCATION_CHANGE);\n        } else {\n            locationChangeAction = action?.type === LOCATION_CHANGE ? action : null;\n        }\n\n        if (locationChangeAction) {\n            sendDV360Event(topLevelSite, counters);\n        }\n\n        if (locationChangeAction && !locationChangeAction?.payload?.isFirstRendering) {\n            trackUrl(locationChangeAction);\n            resetCheckedExperiment();\n            destroyYaBanners();\n            resetMicroFrontendNodes();\n        }\n\n        return next(action as AnyAction);\n    };\n\nexport default locationChangeMiddleware;\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AccountConnect {\n    firstName?: string;\n    lastName?: string;\n    middleName?: string;\n    email?: string;\n    oauthSystem?: string;\n    companyName?: string;\n    isEmployer?: boolean;\n}\n\nexport default autoGeneratedReducer<AccountConnect>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AccountConnectResponse {\n    code?: number;\n    enteredEmail?: string;\n    errors?: {\n        login: string;\n        code: number;\n        captcha: string;\n        generalErrorTrl: string;\n    };\n    login?: string;\n    isNativeLoginAvailable?: boolean;\n    isSocialLoginAvailable?: boolean;\n}\n\nexport default autoGeneratedReducer<AccountConnectResponse>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Resume } from 'lux/models/resume/resume.types';\n\ntype AccountDeleteResume = Omit<Resume, 'title'> & {\n    title: string;\n};\n\nexport default autoGeneratedReducer<{\n    applicantName: string;\n    resumesList: {\n        resumes: {\n            published: AccountDeleteResume[];\n            unpublished: AccountDeleteResume[];\n        };\n        count: number;\n    };\n}>({\n    applicantName: '',\n    resumesList: {\n        resumes: {\n            published: [],\n            unpublished: [],\n        },\n        count: 0,\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface Service {\n    creationTime?: string;\n    price?: number;\n    names: { title: string; count?: string }[];\n}\n\ninterface AccountHistoryExpenditures {\n    services: Service[];\n    currency: string;\n}\n\nexport default autoGeneratedReducer<AccountHistoryExpenditures>({ services: [], currency: '' });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\ninterface Bill {\n    price: number;\n    status: string;\n    date?: string;\n    files: {\n        billFileUrlDoc?: string;\n        billFileUrlPdf?: string;\n    };\n}\n\ninterface AccountHistoryReplenishments {\n    bills: Bill[];\n    currency: CurrencyType;\n    documentLinksVisibility: boolean;\n}\n\nexport default autoGeneratedReducer<AccountHistoryReplenishments>({\n    bills: [],\n    documentLinksVisibility: false,\n    currency: CurrencyType.RUR,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ServiceCode } from 'lux/models/price/productCodes';\n\ninterface TemporalServices {\n    name: string;\n    code: string;\n    period: string;\n    status: string;\n    areaIds: string[];\n}\n\ninterface SingleServices {\n    count: string;\n    code: string;\n    serviceCode: ServiceCode;\n    areaIds: string[];\n    profAreaIds: string[];\n    profRoleGroupIdsTrl: string[];\n    zpCrossPostAvailable: boolean;\n    activationTime?: string;\n    parsedActivationTime?: string;\n    parsedExpirationTime?: string;\n}\n\ninterface FreeServices {\n    name: string;\n    count: string;\n    maxFree: string;\n    serviceCode: ServiceCode;\n    areaIds: string[];\n    profAreaIds: string[];\n    profRoleGroupIdsTrl: string[];\n    nextFreeUpdate?: string;\n    expiredDate?: string;\n}\n\ninterface AccountHistoryServices {\n    employerActiveTemporalServices: TemporalServices[];\n    employerTemporalServices: TemporalServices[];\n    employerActiveSingleServices: SingleServices[];\n    employerFreeServices: FreeServices[];\n}\n\nexport default autoGeneratedReducer<AccountHistoryServices>({\n    employerActiveTemporalServices: [],\n    employerTemporalServices: [],\n    employerActiveSingleServices: [],\n    employerFreeServices: [],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AccountHistoryTab {\n    href: string;\n    name: string;\n    selected: boolean;\n}\n\nexport interface AccountHistoryActionsDataProps {\n    tabs: AccountHistoryTab[];\n}\n\nexport default autoGeneratedReducer<AccountHistoryActionsDataProps>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ContactPhoneItem } from 'lux/models/contactPhones';\n\ninterface AccountPhoneVerification {\n    logoutBackurl: string;\n    client: {\n        firstName: string;\n        lastName: string;\n        midName: string;\n        id?: string;\n        isEmployer?: boolean;\n        phone?: ContactPhoneItem;\n    };\n}\n\nexport default autoGeneratedReducer<AccountPhoneVerification>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Professionalarea {\n    id: number;\n    title: string;\n}\n\ninterface Agencies {\n    professionalareas: Professionalarea[];\n    statistics?: {\n        openVacanciesCount: number;\n        agenciesCount: number;\n    };\n}\n\nexport default autoGeneratedReducer<Agencies>({\n    professionalareas: [],\n    statistics: {\n        openVacanciesCount: 0,\n        agenciesCount: 0,\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AnonymousDashboard {\n    backgroundScope: string;\n    backgroundIndex: string;\n    bigPromoEmployerId: string;\n    bigPromoSlogan: string;\n    bigPromoHighlightedTextInSlogan: string | null;\n    bigPromoLinkText: string;\n    bigPromoLinkUrl: string;\n    bigPromoFootnote: string | null;\n}\n\nexport default autoGeneratedReducer<AnonymousDashboard>({\n    backgroundScope: '',\n    backgroundIndex: '',\n    bigPromoEmployerId: '',\n    bigPromoSlogan: '',\n    bigPromoHighlightedTextInSlogan: null,\n    bigPromoLinkText: '',\n    bigPromoLinkUrl: '',\n    bigPromoFootnote: null,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { DBAccessProductType, PublicationProductType } from 'lux/models/price/product.types';\n\ninterface AnonymousEmployerState {\n    publicationPrice: PublicationProductType | null;\n    dbAccessPrice: DBAccessProductType | null;\n    applicantCount: number | null;\n    suggestedProfessions: string[];\n    averageEmployersOnline: number | null;\n    statisticsDate: string | null;\n}\n\nexport default autoGeneratedReducer<AnonymousEmployerState>({\n    suggestedProfessions: [],\n    applicantCount: null,\n    publicationPrice: null,\n    dbAccessPrice: null,\n    averageEmployersOnline: null,\n    statisticsDate: null,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface TimeInterval {\n    timeFrom: string;\n    timeTo: string;\n}\n\ninterface AppleBusinessChat {\n    href: string;\n    isEnabled: boolean;\n    weekend?: TimeInterval;\n    workday?: TimeInterval;\n}\n\nexport default autoGeneratedReducer<AppleBusinessChat>({\n    isEnabled: false,\n    href: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ApplicantActivity {\n    userActivityScore: number;\n    userActivityScoreChange?: number;\n}\n\nexport default autoGeneratedReducer<ApplicantActivity>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ApplicantEmployerPoliteness {\n    allTopicCount: number;\n    employerId: number;\n    readTopicPercent: number;\n    replyTotalWorkingTimeDays: number;\n}\n\ninterface ApplicantEmployerPolitenessState {\n    employerPolitenessIndexes: Record<number, ApplicantEmployerPoliteness>;\n}\n\nexport default autoGeneratedReducer<ApplicantEmployerPolitenessState>({\n    employerPolitenessIndexes: {},\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Topic } from 'lux/models/applicantNegotiationTopic.types';\nimport { Paging } from 'lux/models/paging.types';\n\nimport { NegotiationsFilterTab } from 'lux/models/applicantNegotiations/applicantNegotiationsActionsData';\n\nexport interface Negotiations {\n    topicList: Topic[];\n    total?: number;\n}\n\ninterface ApplicantNegotiations extends Negotiations {\n    paging?: Paging;\n    filterInUse: NegotiationsFilterTab;\n}\n\nexport default autoGeneratedReducer<ApplicantNegotiations>({\n    topicList: [],\n    filterInUse: NegotiationsFilterTab.All,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\ninterface VacanciesShortState {\n    vacanciesList: VacancySearchItem[];\n    total?: number;\n}\n\nexport default autoGeneratedReducer<VacanciesShortState>({\n    vacanciesList: [],\n    total: undefined,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ApplicantPortraitItemType {\n    name: string;\n    resumeCount: number;\n}\n\nexport interface ApplicantPortraitCategoryType {\n    name: string;\n    items: ApplicantPortraitItemType[];\n}\n\nexport default autoGeneratedReducer<ApplicantPortraitCategoryType[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ApplicantResumesStatistics {\n    recommendationsForAllResumes?: {\n        needResponseStreak: boolean;\n        responsesCount: number;\n        responsesRequired: number;\n    };\n    resumes?: Record<\n        string,\n        {\n            statistics: {\n                searchShows: {\n                    count: number;\n                    countNew: number;\n                };\n            };\n        }\n    >;\n}\n\nexport default autoGeneratedReducer<ApplicantResumesStatistics>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ApplicantSettingsMenuItem {\n    url: string;\n    active?: boolean;\n    name: string;\n}\n\nexport default autoGeneratedReducer<ApplicantSettingsMenuItem[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nenum SingupFildNames {\n    Login = 'login',\n    Password = 'password',\n    FirstName = 'firstName',\n    LastName = 'lastName',\n}\n\ninterface SignupField {\n    name: SingupFildNames;\n    conditions: {\n        minCount: number;\n        maxCount: number;\n        parts: { minLength: number; maxLength: number }[];\n    };\n}\n\ninterface ApplicantSignup {\n    fields: SignupField[];\n}\n\nexport default autoGeneratedReducer<ApplicantSignup>({ fields: [] });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SubscriptionField {\n    channel: string;\n    isDisabled: boolean;\n    label: string;\n    formLabel: string;\n    name: string;\n    type: string;\n}\n\ninterface ApplicantSubscriptions {\n    formItems: { [channel: string]: { subscription: SubscriptionField[] } };\n    initialValues: { [fieldName: string]: string[] };\n    email: string | null;\n    emailVerified: boolean | null;\n}\n\nexport default autoGeneratedReducer<ApplicantSubscriptions>({\n    formItems: {},\n    initialValues: {},\n    email: null,\n    emailVerified: null,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport default autoGeneratedReducer<{\n    agreementUrl: string;\n    policyUrl: string;\n    backUrl: string;\n}>({\n    agreementUrl: '',\n    policyUrl: '',\n    backUrl: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ArticleViews {\n    count: number | null;\n    isEnabled: boolean;\n}\n\nexport default autoGeneratedReducer<ArticleViews>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface Artifact {\n    maxCount: number;\n    maxFileSize: number;\n    maxTitleSize: number;\n}\ninterface ArtifactRules {\n    imageMimeType: string[];\n    photo: Artifact;\n    portfolio: Artifact;\n}\n\nexport default autoGeneratedReducer<ArtifactRules>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerCategory {\n    '@value': number;\n    '@code': string;\n    '@translationKey': string;\n}\n\nexport default autoGeneratedReducer<EmployerCategory[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerField {\n    '@name': string;\n    '@status': string;\n    conditions: {\n        part: Array<{\n            '@minlength'?: number;\n            '@maxlength'?: number;\n            '@regexp'?: string;\n            '@required'?: boolean;\n        }>;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerField[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AuthEmployerInitialData {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    phoneFull?: string;\n    usePhoneFull?: boolean;\n    employerCategory?: string;\n    areaId?: string[];\n}\n\nexport default autoGeneratedReducer<AuthEmployerInitialData>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface AuthPhone {\n    raw: string;\n    formatted?: string;\n}\n\nexport default autoGeneratedReducer<AuthPhone>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AvailableVacancyActions {\n    update?: boolean;\n    toggleOption?: boolean;\n    edit?: boolean;\n    enableAutoProlongation?: boolean;\n    disableAutoProlongation?: boolean;\n    upgrade?: boolean;\n    archive?: boolean;\n    delete?: boolean;\n    hide?: boolean;\n    duplicate?: boolean;\n    restore?: boolean;\n    restoreToArchive?: boolean;\n    print?: boolean;\n}\n\nexport default autoGeneratedReducer<AvailableVacancyActions>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AdfoxSearchParams {\n    puid11: string;\n    puid23: string;\n    puid14: string;\n    puid30: string;\n    puid12: string;\n    puid13: string;\n}\n\nexport type AdsSearchParams = Partial<AdfoxSearchParams>;\n\nexport default autoGeneratedReducer<AdsSearchParams>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface AdfoxVacancyParams {\n    puid21: string;\n    puid22: string;\n    puid23: string;\n    puid24: string;\n    puid25: string;\n    puid26: string;\n    puid27: string;\n    puid28: string;\n    puid30: string;\n    puid31: string;\n    puid32: string;\n}\n\nexport default autoGeneratedReducer<Partial<AdfoxVacancyParams>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { BannerPlace, type BannerObject } from 'lux/models/banners';\n\nexport interface Banner extends BannerObject {\n    pp?: string;\n    ps?: string;\n    p2?: string;\n    ownerId?: string;\n}\n\nexport default autoGeneratedReducer<Partial<Record<BannerPlace, Banner[]>>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport default autoGeneratedReducer<Record<number | string, number>>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface BrandedTemplate {\n    title: string;\n    name: string;\n}\n\nexport default autoGeneratedReducer<BrandedTemplate[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface BrandingPromotion {\n    hasBrandedTemplates: boolean;\n    hasBrandingChameleonService: boolean;\n    hasBrandingConstructorService: boolean;\n    possibleToBuyBranding: boolean;\n}\n\nexport interface BrandingPromotionWithTemplate extends BrandingPromotion {\n    isBrandingTemplateApplied?: boolean;\n}\n\nexport default autoGeneratedReducer<BrandingPromotion>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ActionType, FilterType } from 'lux/models/candidatesList';\n\ninterface Candidates {\n    collection: {\n        actions: { type: ActionType }[];\n        filters: { type: FilterType }[];\n    };\n}\n\nexport default autoGeneratedReducer<Candidates>({ collection: { actions: [], filters: [] } });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { SalaryRange } from '@hh.ru/types-hh-microcore';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { VacancyAnalyzerAdvice } from 'lux/models/vacancyCreate/vacancyAdvices.types';\n\nexport interface MarketRange {\n    upper: number;\n    bottom: number;\n}\n\nexport interface VacancyCompensation {\n    currency: CurrencyType;\n    from: number | null;\n    to: number | null;\n    gross: boolean;\n}\n\nexport enum CompetitionLevel {\n    High = 'HIGH',\n    Medium = 'MEDIUM',\n    Low = 'LOW',\n    Undefined = 'UNDEFINED',\n}\n\nexport interface CanvacVacancySalaryData {\n    calculationTime: string;\n    marketRange: MarketRange;\n    vacancyCompensation: VacancyCompensation;\n    competitionLevel: CompetitionLevel;\n    salaryRange: SalaryRange;\n    applicantsPerVacancy: number;\n    publicationType: string;\n    advices: VacancyAnalyzerAdvice[];\n}\n\nexport default autoGeneratedReducer<CanvacVacancySalaryData>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Chatik {\n    chatikOrigin: string;\n    websocketOrigin: string;\n    entryPointExp?: 'b' | 'c' | 'control';\n}\n\nexport default autoGeneratedReducer<Chatik>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface CompanyOfTheDay {\n    companyName: string;\n    vacanciesNumber: number;\n    id: number;\n    workInCompanyId: number;\n    placeId: number;\n    viewUrl?: string | null;\n    logoUrl?: string;\n}\n\nexport default autoGeneratedReducer<CompanyOfTheDay[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ConfigState {\n    hhcdnHost: string;\n    staticHost: string;\n    imageResizingCdnHost: string;\n    devBuildNotifyEnabled: boolean;\n}\n\nexport default autoGeneratedReducer<ConfigState>({\n    hhcdnHost: '',\n    staticHost: '',\n    imageResizingCdnHost: '',\n    devBuildNotifyEnabled: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum ContactPhonePostfix {\n    City = 'city',\n    Mobile = 'mobile',\n    Msk = 'msk',\n    Other = 'other',\n    Regions = 'regions',\n    Spb = 'spb',\n}\n\nexport interface ContactPhoneItem {\n    country: string;\n    city: string;\n    number: string;\n    postfix: ContactPhonePostfix;\n}\n\ntype ContactPhones = ContactPhoneItem[];\n\nexport default autoGeneratedReducer<ContactPhones>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface CountriesProfileVisibilityAgreement {\n    vacancyId?: number;\n    show: boolean;\n    confirmed: boolean;\n    countryType: string;\n}\n\nexport default autoGeneratedReducer<CountriesProfileVisibilityAgreement>({\n    show: false,\n    confirmed: false,\n    countryType: 'common',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Crosslinks {\n    id: number;\n    domain: string;\n    trl: string;\n}\n\nexport default autoGeneratedReducer<{ links: Crosslinks[]; translit: string }>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface Currency {\n    code: CurrencyType;\n    name: string;\n    rate: number;\n    site: boolean;\n}\n\nexport interface Currencies {\n    default: CurrencyType;\n    list: Currency[];\n}\n\nexport default autoGeneratedReducer<Currencies>({ default: CurrencyType.RUR, list: [] });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum DeviceTypes {\n    Huawei = 'huawei',\n    IOS = 'ios',\n    Android = 'android',\n    WinPhone = 'winphone',\n}\n\nexport interface Device {\n    type: DeviceTypes | undefined;\n}\n\nexport default autoGeneratedReducer<Device>({\n    type: undefined,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { DistanceValues } from 'lux/models/resume/resumeCommon.types';\n\ninterface Distance {\n    code: DistanceValues;\n    value: number;\n}\n\nexport interface Distances {\n    default: string;\n    list: Distance[];\n}\n\nexport default autoGeneratedReducer<Distances>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CountryId } from 'lux/models/countryId';\n\ntype EmployerRegistrationPresentsByCountryId = Partial<Record<CountryId, string>>;\n\nexport default autoGeneratedReducer<EmployerRegistrationPresentsByCountryId>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { NavItems } from 'lux/models/supernovaNaviMenu';\n\ninterface EmployerSettingsMenu {\n    employerManagersLink: string;\n    employerManagerName: string;\n    menuItems: NavItems;\n}\n\nexport default autoGeneratedReducer<EmployerSettingsMenu>({\n    employerManagersLink: '/employer/managers',\n    menuItems: [],\n    employerManagerName: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ServiceAdditional {\n    serviceNames: Record<string, string>;\n}\n\nexport default autoGeneratedReducer<ServiceAdditional>({\n    serviceNames: {},\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { AdviceType } from 'lux/modules/employer/adviceTypes';\n\nexport interface McpManagersAdviceDetails {\n    totalUnreadResponsesCount: number;\n    managers: {\n        managerId: number;\n        fullName: string;\n        unreadResponsesCount: number;\n        affectedVacanciesCount: number;\n    }[];\n}\n\nexport interface ManagerAdviceDetails {\n    unreadResponsesCount: number;\n    vacancies: {\n        vacancyId: number;\n        vacancyName: string;\n        unreadResponsesCount: number;\n    }[];\n}\n\ninterface EmployerAdvice {\n    [AdviceType.McpManagersUnreadResponses]: McpManagersAdviceDetails;\n    [AdviceType.ManagerUnreadResponses]: ManagerAdviceDetails;\n}\n\nexport default autoGeneratedReducer<EmployerAdvice>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { AdviceType } from 'lux/modules/employer/adviceTypes';\n\nexport interface EmployerAdviceItem {\n    adviceType: AdviceType;\n    adviceDetails: {\n        unreadResponsesCount: number;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerAdviceItem[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface EmployerAutomationStatistics {\n    employerId?: number;\n    employerManagerId?: number;\n    dataPeriodDays: number;\n    coreData: {\n        responses: number;\n        invitations: number;\n        notProcessedNotAutomatedResponses: number;\n        autoActionsPassed: number;\n        autoActionsFailed: number;\n        autoInvitations: number;\n        activeVacancyCount: number;\n        activeVacancyOkForAutoInvitationCount: number;\n        activeAutoActionVacancyCount: number;\n        activeAutoInvitationVacancyCount: number;\n    };\n    processedData: {\n        totalPossibleEconomyMinutes: number;\n        totalPossibleEconomyMinutesPerDay: number;\n        autoActionPossibleEconomyMinutes: number;\n        autoActionPossibleEconomyMinutesPerDay: number;\n        autoActionPossibleEconomyMinutesByRatioApproximation: number;\n        autoInvitationPossibleEconomyMinutes: number;\n        autoInvitationPossibleEconomyMinutesPerDay: number;\n        totalCurrentEconomyMinutes: number;\n        totalCurrentEconomyMinutesPerDay: number;\n        autoActionCurrentEconomyMinutes: number;\n        autoActionCurrentEconomyMinutesPerDay: number;\n        autoInvitationCurrentEconomyMinutes: number;\n        autoInvitationCurrentEconomyMinutesPerDay: number;\n        autoActionEconomyMinutesLeft: number;\n        autoActionSavedCandidateCount: number;\n        autoInvitationEconomyMinutesLeft: number;\n        autoInvitationEconomyRubLeft: number;\n        notAutomatedVacancyOkForAutoInvitationCount: number;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerAutomationStatistics>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Employer, EmployerBillingSummary } from 'lux/models/oldEmployer/employerBillingSummary';\n\nexport interface EmployerBillingInfo {\n    billingSummary?: EmployerBillingSummary;\n    employer?: Employer;\n    clickme?: {\n        availableBalance: number;\n        balance: number;\n        bonusBalance: number;\n        realBalance: number;\n        reservedBalance: number;\n    };\n    talantixTariffDaysLeft?: number;\n    quotas?: {\n        vacanciesQuotas?: number;\n        contactsQuotas?: number;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerBillingInfo>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface EmployerChangePassword {\n    permissions: Record<string, boolean>;\n}\n\nexport default autoGeneratedReducer<EmployerChangePassword>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerShortInfo {\n    areaId?: number;\n    creationTime?: number;\n    hasMoney?: boolean;\n    hasPublications?: boolean;\n    hasResumeAccess?: boolean;\n    hasVacancies?: boolean;\n    paid?: boolean;\n    state?: string;\n}\n\nexport default autoGeneratedReducer<EmployerShortInfo>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface EmployerCompanyMenuItem {\n    url: string;\n    active: boolean;\n    name: string;\n}\n\nexport default autoGeneratedReducer<EmployerCompanyMenuItem[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport Widget from 'lux/models/employerConstructor/widget.types';\n\nexport default autoGeneratedReducer<Widget>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum EmployerConsumptionSegmentType {\n    XLarge = 'XLarge',\n    XMedium = 'XMedium',\n    XSmall = 'XSmall',\n    XMicro = 'XMicro',\n}\n\nexport default autoGeneratedReducer<EmployerConsumptionSegmentType>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerDepartment {\n    code: string;\n    name: string;\n}\n\nexport default autoGeneratedReducer<EmployerDepartment[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport default autoGeneratedReducer<\n    Partial<{\n        maxActiveDocuments: number;\n        maxFileSize: number;\n        maxFileSizeInMb: number;\n        allowedMimeTypes: string[];\n        allowedTypes: string[];\n        allowedDocumentChanges: string[];\n    }>\n>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerEdo {\n    payerId: number;\n    payerName: string;\n    inn: string;\n    fio: string;\n    phone: string;\n    email: string;\n    operator: string;\n    date: string;\n    status: string;\n}\n\nexport default autoGeneratedReducer<EmployerEdo[]>([]);\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nexport enum EmployerEmailTemplateVisibilityType {\n    Common = 'common',\n    Anonymous = 'anonymous',\n}\n\nexport interface EmployerEmailTemplate {\n    type: string;\n    text: string;\n    isSMS: boolean;\n}\n\nexport type EmployerEmailTemplates = Record<EmployerEmailTemplateVisibilityType, Record<string, EmployerEmailTemplate>>;\n\nconst CHANGE_EMPLOYER_EMAIL_TEMPLATE = 'CHANGE_EMPLOYER_EMAIL_TEMPLATE';\n\ninterface PayloadTypes {\n    [CHANGE_EMPLOYER_EMAIL_TEMPLATE]: {\n        visibilityType: EmployerEmailTemplateVisibilityType;\n        template: EmployerEmailTemplate;\n    };\n}\n\nconst actionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const changeEmployerEmailTemplateAction = actionCreator(CHANGE_EMPLOYER_EMAIL_TEMPLATE);\n\nexport default createReducer<EmployerEmailTemplates, PayloadTypes>(null, {\n    [CHANGE_EMPLOYER_EMAIL_TEMPLATE]: (state, { payload }) => ({\n        ...state,\n        [payload.visibilityType]: {\n            ...state[payload.visibilityType],\n            [payload.template.type]: payload.template,\n        },\n    }),\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerImplants {\n    extraAccounts: {\n        disabled: boolean;\n        employer: {\n            id: number;\n            name: string;\n        };\n        hhid: number;\n        userId: number;\n    }[];\n}\n\nexport default autoGeneratedReducer<EmployerImplants>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ArticleItemWithDate } from 'lux/models/article.types';\nimport { Employer, EmployerBillingSummary } from 'lux/models/oldEmployer/employerBillingSummary';\n\ninterface OldEmployer {\n    eventsMain: {\n        body: { events: ArticleItemWithDate[] };\n    };\n    billingSummary: EmployerBillingSummary;\n    employer: Employer;\n}\n\ninterface EmployerIndexPage {\n    oldEmployer?: OldEmployer;\n}\n\nexport default autoGeneratedReducer<EmployerIndexPage>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerInsider {\n    code: string;\n    title: string;\n}\n\nexport default autoGeneratedReducer<EmployerInsider[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport CartStatus from 'lux/models/cartStatus';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { Service } from 'lux/models/price/service.types';\n\nexport type InvoiceCartService<T extends Service = Service> = T & {\n    clickmeAccountName?: string;\n    activationTime?: string;\n    expirationTime: string;\n    profRoleGroupTrls?: string[];\n    regionTrl?: string;\n    tariffName?: string;\n};\n\nexport interface EmployerInvoiceCart {\n    agreementId: number;\n    autoActivationAllowed: boolean;\n    autoActivationAware: boolean;\n    cartId: number;\n    cost: number;\n    costWithoutDiscount: number;\n    currency: CurrencyType;\n    defaultDiscountRate: number;\n    grossPrice: number;\n    payerId: number;\n    services: InvoiceCartService[][];\n    status: CartStatus;\n    useAgreementMoney: boolean;\n    shouldBeRendered: boolean;\n}\n\nexport default autoGeneratedReducer<EmployerInvoiceCart>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface EmployerManager {\n    id: string;\n    lastName: string;\n    firstName: string;\n    type: string;\n}\n\nexport default autoGeneratedReducer<EmployerManager>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ManagerPhone {\n    fullPhoneNumber?: string;\n    phoneComment?: string;\n}\n\nexport interface EmployerManager {\n    id: string;\n    text: string;\n    additional: { shortFirstName: string; shortMiddleName: string; lastName: string };\n    email: string;\n    phone: ManagerPhone;\n    additionalPhone: null | ManagerPhone;\n    isMCP: boolean;\n    humanPhone: string;\n}\n\nexport default autoGeneratedReducer<EmployerManager[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\n\ninterface Manager {\n    id: string;\n    fullName: string;\n}\n\ninterface Quota {\n    creationTime: string;\n    authorFullName: string;\n    targetFullName: string;\n    changes: {\n        name: string;\n        oldValue: string | null;\n        newValue: string | null;\n    };\n}\n\ninterface EmployerQuotaHistory {\n    managers: Manager[];\n    quotas: {\n        dates: {\n            date: string;\n            list: Quota[];\n        }[];\n        paging: Paging | null;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerQuotaHistory>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface NegotiationsLink {\n    transitionType: string;\n    location: string;\n}\n\ntype NegotiationsLinks = Record<string, NegotiationsLink[]>;\n\nexport default autoGeneratedReducer<NegotiationsLinks>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { BrandedTemplate } from 'lux/models/brandedVacancyTemplates';\nimport { CurrencyType } from 'lux/models/currencies.types';\n\ntype RankType = 'LAST_CHANGE_TIME_EXCEPT_EMPLOYER_INBOX' | 'RELEVANCE';\n\nexport interface EmployerSearchPublicationSettings {\n    useOpenResumeNewWindow: boolean;\n    useSendSmsToInvite: boolean;\n    useTemplateVacancy: boolean;\n    useWantWorkAutoreply: boolean;\n    vacancyResponseRankType: RankType;\n    htmlEditor: 'CKEDITOR' | 'JSXEDITOR' | 'NONE';\n    currencyCode: CurrencyType;\n    templateVacancy: string;\n    brandingTemplates: BrandedTemplate[];\n    defaultTemplateName: string | null;\n    employerManagerId?: string;\n}\n\nexport default autoGeneratedReducer<EmployerSearchPublicationSettings>({\n    useOpenResumeNewWindow: false,\n    useSendSmsToInvite: false,\n    useTemplateVacancy: false,\n    useWantWorkAutoreply: false,\n    vacancyResponseRankType: 'LAST_CHANGE_TIME_EXCEPT_EMPLOYER_INBOX',\n    htmlEditor: 'NONE',\n    currencyCode: CurrencyType.RUR,\n    templateVacancy: '',\n    brandingTemplates: [],\n    defaultTemplateName: null,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface EmployerVacanciesRiseProps {\n    error?: { message: string; reason?: string };\n    success?: { message: string };\n}\n\nexport default autoGeneratedReducer<EmployerVacanciesRiseProps>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface EmployerVacancyPromotion {\n    vacancy: {\n        id: string;\n        name: string;\n        template: string | null;\n    };\n}\n\nexport default autoGeneratedReducer<EmployerVacancyPromotion>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\n\nexport interface EmployersCompanyIndustry {\n    id: string;\n    parentId: string | null;\n    title: string;\n    translit: string;\n}\n\nexport interface EmployerCompany {\n    id: string;\n    name: string;\n    vacanciesOpen: number;\n}\n\ninterface EmployersCompany {\n    area: {\n        id: string;\n        locativeCase: string;\n    };\n    industries: EmployersCompanyIndustry[];\n    employers: {\n        list: EmployerCompany[];\n        count: number;\n        paging: Paging;\n    } | null;\n}\n\nexport default autoGeneratedReducer<EmployersCompany>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\n\nexport interface Employer {\n    id: number;\n    name: string;\n    organizationFormId: number | null;\n    vacanciesOpen: number;\n}\n\ninterface EmployerListState {\n    totalEmployersFound: number;\n    employers: Employer[];\n    paging: Paging | null;\n}\n\nexport default autoGeneratedReducer<EmployerListState>({ totalEmployersFound: 0, employers: [], paging: null });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ErrorPage {\n    errorMessage?: string;\n    isError: boolean;\n    xsrfError?: boolean | string;\n}\n\nexport default autoGeneratedReducer<ErrorPage>({\n    errorMessage: '',\n    isError: false,\n    xsrfError: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface InitialExperimentsState {\n    enabled: Record<string, string>;\n}\n\nexport const INITIAL_STATE: InitialExperimentsState = {\n    enabled: {},\n};\n\nexport default autoGeneratedReducer<InitialExperimentsState>(INITIAL_STATE);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Paging } from 'lux/models/paging.types';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nexport interface FavoriteVacancies {\n    vacancies?: VacancySearchItem[];\n    paging?: Paging;\n}\n\nexport default autoGeneratedReducer<FavoriteVacancies>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum FeedbackRecipient {\n    SUPPORT = 'SUPPORT',\n    MARKET = 'MARKET',\n    SALES = 'SALES',\n    APPLICANT = 'APPLICANT',\n    QUALITY = 'QUALITY',\n}\n\ntype FeedbackRecipients = { [K in FeedbackRecipient]?: string };\n\ninterface FeedbackPage {\n    feedbackRecipients: FeedbackRecipients;\n}\n\nexport default autoGeneratedReducer<FeedbackPage>({\n    feedbackRecipients: { [FeedbackRecipient.MARKET]: 'feedback.send.market' },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ntype BillItem = Record<\n    string,\n    {\n        name: string;\n    }\n>;\n\ntype Filter = {\n    ids: number[];\n    items: BillItem;\n};\n\ntype DateRange = {\n    start: string;\n    end: string;\n};\n\ninterface FinancialDocumentDeedsFilters {\n    payers: Filter;\n    bills: Filter;\n    periods: {\n        allTheTime: DateRange;\n        year: DateRange;\n        quarter: DateRange;\n        month: DateRange;\n    };\n}\n\nexport default autoGeneratedReducer<FinancialDocumentDeedsFilters>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nenum FloodlightUtmTypes {\n    UtmMedium = 'utm_medium',\n    UtmSource = 'utm_source',\n    UtmCampaign = 'utm_campaign',\n    UtmTerm = 'utm_term',\n}\nexport interface FloodlightUtm {\n    [FloodlightUtmTypes.UtmMedium]?: string;\n    [FloodlightUtmTypes.UtmSource]?: string;\n    [FloodlightUtmTypes.UtmCampaign]?: string;\n    [FloodlightUtmTypes.UtmTerm]?: string;\n}\n\nexport default autoGeneratedReducer<FloodlightUtm>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface FolderContent {\n    canChangeFolderOwnership: boolean;\n    isTrash: boolean;\n    managersCount: number;\n    owner: {\n        firstname: string;\n        id: number;\n        lastname: string;\n        middlename: string;\n    };\n    resumeIds: number[];\n    visibleTo: number[];\n}\n\nexport default autoGeneratedReducer<FolderContent>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Resume } from 'lux/models/resume/resume.types';\n\ninterface GiftedResumes {\n    resumes: Resume[];\n}\n\nexport default autoGeneratedReducer<GiftedResumes>({ resumes: [] });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum Lang {\n    RU = 'RU',\n    EN = 'EN',\n    AZ = 'AZ',\n    KZ = 'KZ',\n    UA = 'UA',\n    UZ = 'UZ',\n    KG = 'KG',\n}\n\nexport default autoGeneratedReducer<Lang[]>([Lang.RU]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface LinkCheckResult {\n    status: 'UNSAFE';\n    info: {\n        title: string;\n        description: string;\n        imageUrl?: string;\n        link?: {\n            title: string;\n            url: string;\n        };\n    };\n}\n\nexport interface LinkCheck {\n    targetUrl: string;\n    result?: LinkCheckResult;\n}\n\nexport default autoGeneratedReducer<LinkCheck>({ targetUrl: '' });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport Metallic from 'lux/models/vacancy/metallicVacancyType.types';\n\nexport interface LowActivityAdviceVacancy {\n    name: string;\n    vacancyId: number;\n    publicationType: Metallic;\n    negotiations: {\n        responsesCount: number;\n        notProcessedResponsesCount: number;\n    };\n    links: {\n        desktop: string;\n        mobile: string;\n    };\n}\n\nexport default autoGeneratedReducer<LowActivityAdviceVacancy[]>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface Mailto {\n    resumeUrl: string;\n    resumeHash: string;\n    simhash: string;\n    template: {\n        subject: string;\n        content: string;\n    };\n}\n\nexport default autoGeneratedReducer<Mailto>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ManagerAnnouncementBanner {\n    body: string;\n    click: string;\n    isExternalAdvertising?: boolean;\n    advertiserLegalName?: string;\n    viewUrl: string;\n}\n\nexport default autoGeneratedReducer<ManagerAnnouncementBanner>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ClusterGroup {\n    value: string;\n}\n\nexport interface AreaGroup extends ClusterGroup {\n    priority: number;\n    name: string;\n    childrenAreas: AreaGroup[];\n}\n\ninterface EnrichClusterGroup extends ClusterGroup {\n    text: string;\n}\n\nexport interface ManagerName {\n    firstName: string;\n    lastName: string;\n    middleName?: string;\n}\n\nexport interface ManagerClusterGroup extends ClusterGroup {\n    name: ManagerName;\n}\n\nexport interface ManagerCluster {\n    areaCluster: {\n        clusterGroups: AreaGroup[];\n        isComposite?: boolean;\n    };\n    employerManagerCluster: {\n        clusterGroups: ManagerClusterGroup[];\n        isComposite?: boolean;\n    };\n    premoderationStatusCluster: {\n        clusterGroups: EnrichClusterGroup[];\n    };\n    vacancyMetallicCluster: {\n        clusterGroups: EnrichClusterGroup[];\n    };\n    vacancyTypeCluster: {\n        clusterGroups: EnrichClusterGroup[];\n    };\n}\n\nexport default autoGeneratedReducer<Partial<ManagerCluster>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface NegotiationStats {\n    allTopicCount: number;\n    index: {\n        hint: string;\n        readTopicMultiplier: number;\n        replyTopicMultiplier: number;\n        replyTopicTimeBonus: number;\n        value: number;\n    } | null;\n    readTopicPercent: number;\n    replyByManagerTotalWorkingTimeDays: number;\n    replyTopicPercent: number;\n}\n\ninterface ManagerNegotiationStats {\n    employerIndex: NegotiationStats;\n    employerManagerIndex: NegotiationStats;\n    hasPolitenessIndex: boolean;\n}\n\nexport default autoGeneratedReducer<Partial<ManagerNegotiationStats>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { EmployerStateType, EmployerStateExtName } from 'lux/models/negotiationTopic.types';\n\nexport interface NegotiationsHistoryItem {\n    '@employerState': EmployerStateType;\n    '@changeTime': number;\n    '@employerStateExtName': EmployerStateExtName;\n    '@senderApplicantUserId': number | null;\n    '@senderEmployerManagerId': number | null;\n    '@withMessage': boolean;\n    '@senderFullName'?: string;\n}\n\nexport interface NegotiationsHistory {\n    '@archived': boolean;\n    '@vacancyId': number;\n    '@topicId': number;\n    '@canEdit': boolean;\n    '@name': string;\n    items: NegotiationsHistoryItem[];\n}\n\nexport default autoGeneratedReducer<NegotiationsHistory[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Draft {\n    draftId: number;\n    name: string;\n    completedFieldsPercentage: number;\n    suitableResumesCountTotal: number;\n    suitableResumesCountLastMonth: number;\n}\n\nexport interface NextDraftScheduled {\n    draftId: number;\n    availableDraft: {\n        name: string;\n        requiredPublications: PublicationTypeCount[];\n    };\n    draftScheduledPublication: {\n        isoDateTimePublication: string;\n        gmt: string;\n    };\n}\n\nexport interface PublicationTypeCount {\n    publicationType: string;\n    count: number;\n}\n\nexport interface NewEmployerDashboardVacancy {\n    draft?: Draft;\n    nextDraftScheduled?: NextDraftScheduled;\n    bill?: string;\n    employerRegionTrl?: string;\n    employerRegionResumesCount: number;\n    employerRegion: number;\n    giftsCount: number;\n}\n\nexport default autoGeneratedReducer<NewEmployerDashboardVacancy>({\n    employerRegionResumesCount: 0,\n    employerRegion: 0,\n    giftsCount: 0,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport default autoGeneratedReducer({\n    header: '',\n    title: '',\n    ogTitle: '',\n    keywords: '',\n    description: '',\n    ogDescription: '',\n    rssHref: '',\n    rssTitle: '',\n    canonical: '',\n    h1: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ntype PersonalManagerMessengersTypes = 'telegram' | 'whatsapp';\n\nexport default autoGeneratedReducer<{\n    workingHoursFrom?: string;\n    workingHoursTo?: string;\n    available: boolean;\n    smallPhoto: string;\n    yearsInCompany: number;\n    firstName: string;\n    lastName: string;\n    skype?: string;\n    email?: string;\n    phonesWithComments: {\n        comment: string;\n        extension: string;\n        phone: string;\n    }[];\n    messenger?: {\n        messengers: PersonalManagerMessengersTypes[];\n        phone: string;\n    };\n    lastRatingValue?: string;\n    vacationEndDay?: string;\n    vacationEndMonth?: string;\n}>({\n    available: false,\n    smallPhoto: '',\n    yearsInCompany: NaN,\n    firstName: '',\n    lastName: '',\n    phonesWithComments: [],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface PersonalManagerMenu {\n    isAssigned: boolean;\n}\n\nexport default autoGeneratedReducer<PersonalManagerMenu>({ isAssigned: false });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface PlatformInfo {\n    platform: string;\n    userPlatform: string;\n    appDomain?: string;\n    appType?: string;\n    appVersion?: string;\n}\n\nexport default autoGeneratedReducer<PlatformInfo>({\n    platform: 'XHH',\n    userPlatform: 'DESKTOP_WEB',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface PolitenessIndex {\n    readTopicPercent: number;\n}\n\nexport default autoGeneratedReducer<PolitenessIndex>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface PostponedActions {\n    'add-to-favorites-sign'?: number;\n    'complete-resume'?: string;\n    'proforientation-sign'?: boolean;\n    'vacancy-saved-search-open'?: string;\n    'autosearch-add'?: string;\n    vacancy?: {\n        vacancyId: number;\n        name: string;\n        compensation: number;\n        acceptIncompleteResumes?: boolean;\n        immediateRedirectUrl?: string;\n    };\n}\n\nexport default autoGeneratedReducer<PostponedActions>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ServicePriceItem } from 'lux/models/price/priceBranding/priceBranding.types';\n\ninterface PriceBranding {\n    items: ServicePriceItem[];\n    defaultPriceRegions: string[];\n    hasEmployerConstructor: boolean;\n    tabName: string;\n}\n\nconst initialState = {\n    items: [],\n    defaultPriceRegions: [],\n    hasEmployerConstructor: false,\n    tabName: '',\n};\nexport default autoGeneratedReducer<PriceBranding>(initialState);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { YearMonthDayString } from 'bloko/blocks/calendar/datesHelper';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport {\n    TariffProductType,\n    RegionIdType,\n    StartAfterPayment,\n    SubProductType,\n    ProductType,\n} from 'lux/models/price/product.types';\nimport { ServiceCode } from 'lux/models/price/productCodes';\n\nexport type PriceCartProductType<T extends ProductType = ProductType> = T & {\n    activationDate: YearMonthDayString | StartAfterPayment;\n    profRoleGroupTrls: string[];\n    regionTrl: string;\n    itemId: string;\n    scaledPrice?: number;\n};\n\nexport interface ZpCartProductProps {\n    product: PriceCartProductType<TariffProductType>;\n    translations: { tariffTitle: Record<string, string> };\n}\n\ninterface PriceCartGiftType {\n    code: ServiceCode;\n    products: Record<string, SubProductType>;\n    profRoleGroups: string[];\n    region: RegionIdType;\n}\n\nexport interface PriceCart {\n    translations: { tariffTitle: Record<string, string> };\n    products: PriceCartProductType[];\n    gifts: PriceCartGiftType[];\n    discountInPercent: number;\n    discountInAmount: number;\n    totalPriceWithoutDiscount: number;\n    totalPrice: number;\n    scaledPrice?: number;\n    totalProfit?: number;\n    currency: CurrencyType;\n    vat: number;\n    autoActivation: boolean;\n}\n\nexport default autoGeneratedReducer<PriceCart>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\nimport { ModelData } from 'bloko/common/tree/types';\n\nimport { RegionsListAdditional } from 'lux/components/Price/RegionSelectorPopup/RegionsList';\n\nimport {\n    DBAccessProductType,\n    ProductIdType,\n    RegionIdType,\n    SubProductType,\n    PeriodType,\n} from 'lux/models/price/product.types';\nimport { ServiceCode } from 'lux/models/price/productCodes';\n\nexport interface GiftType {\n    code: ServiceCode;\n    codeTrl: string;\n    products: Record<string, SubProductType>;\n    profRoleGroups: string[];\n    region: RegionIdType;\n}\n\nexport interface PriceDbAccess {\n    regions: RegionIdType[];\n    regionPeriods: Record<RegionIdType, PeriodType[]>;\n    regionPeriodsWithProfareas: Record<RegionIdType, PeriodType[]>;\n    periodsProductsByRegion: Record<RegionIdType, Record<PeriodType, ProductIdType[]>>;\n    products: Record<ProductIdType, DBAccessProductType>;\n    gifts: GiftType[];\n    defaultPeriod: PeriodType;\n    hasAddContactsTab: boolean;\n    isBundleSelectedByDefault: boolean;\n    priceTrls: { regions: Record<RegionIdType, string> };\n    allPriceRegions: ModelData<RegionsListAdditional>[];\n    allProfRoleGroups: ModelData[];\n}\n\nexport default autoGeneratedReducer<PriceDbAccess>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface PricePageMetaInfo {\n    description: string;\n    pageTitle: string;\n    priceRegionTrl?: string;\n    title?: string;\n    employerBudgetLink: string;\n}\n\nexport default autoGeneratedReducer<PricePageMetaInfo>({\n    description: '',\n    pageTitle: '',\n    employerBudgetLink: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ProductIdType, RegionIdType, BillingPlatform } from 'lux/models/price/product.types';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\n\nexport interface Aspe {\n    id: string;\n    serviceEntry: ServiceItemCode;\n    entriesCount: number;\n    balance: number;\n    billingPlatforms?: BillingPlatform[];\n}\n\nexport interface EmployerService {\n    productId: ProductIdType;\n    employerServiceId: string;\n    shortTitle: string;\n    aspes: Aspe[];\n    creationTime: string;\n    expirationTime: string;\n    activationTime: string;\n    region: RegionIdType;\n}\n\nexport interface PriceAddContacts {\n    activeAccesses: EmployerService[];\n    dbAccessUrl: string;\n    purchaseUrl: string;\n    tabName: string;\n}\n\nexport default autoGeneratedReducer<PriceAddContacts>({\n    tabName: '',\n    purchaseUrl: '',\n    dbAccessUrl: '',\n    activeAccesses: [],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ProbationCatalogItem {\n    id: number;\n    title: string;\n    translit: string;\n}\n\ninterface ProbationCatalog {\n    probationCatalog: ProbationCatalogItem[];\n}\n\nexport default autoGeneratedReducer<ProbationCatalog>({ probationCatalog: [] });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ProfessionalRoleCategory {\n    id: string;\n    name: string;\n    url: string;\n}\n\nexport interface ProfessionalRoleCategoryCounted extends ProfessionalRoleCategory {\n    count: number;\n}\n\ninterface ProfessionalRoleCategoryCollection {\n    title: string;\n    collection: ProfessionalRoleCategory[];\n    collectionCounted: ProfessionalRoleCategoryCounted[];\n}\n\nexport default autoGeneratedReducer<ProfessionalRoleCategoryCollection>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface ProfessionsListProfession {\n    catalogPath: string;\n    compensationFrom: number;\n    compensationTo: number;\n    count: number;\n    id: string;\n    name: string;\n    query: string;\n    quirk: string;\n    professions: ProfessionsListProfession[];\n}\n\ninterface ProfessionsList {\n    currency: CurrencyType;\n    professions?: ProfessionsListProfession[];\n    [`remote_count`]: number;\n}\n\nexport default autoGeneratedReducer<ProfessionsList>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nenum PersonalManagerRatingValue {\n    Excellent = 'EXCELLENT',\n    Good = 'GOOD',\n    Bad = 'BAD',\n}\n\ntype RatingTags = {\n    [key in PersonalManagerRatingValue]?: { tagId: string }[];\n};\n\nexport default autoGeneratedReducer<RatingTags>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ReadOnlyBanner {\n    days: number;\n    isReadOnly: boolean;\n}\n\nexport default autoGeneratedReducer<ReadOnlyBanner>({\n    days: 0,\n    isReadOnly: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\ninterface RecommendedVacancies {\n    itemsOnPage: number;\n    resultsFound: number;\n    totalPages: number;\n    type: string;\n    lastActivityTimeByHHID: Record<string, { dt: string }>;\n    vacancies: VacancySearchItem[];\n    hasVacanciesWithAddress: boolean;\n    queries: Record<string, string>;\n}\n\nexport default autoGeneratedReducer<RecommendedVacancies>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface RelocationWarning {\n    vacancyId?: number;\n    show: boolean;\n    regionTrl?: string;\n    confirmed: boolean;\n}\n\nexport default autoGeneratedReducer<RelocationWarning>({ show: false, confirmed: false });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface RestorePasswordConditions {\n    code?: {\n        mincount: number;\n        maxcount: number;\n        string: {\n            required: boolean;\n            type: string;\n        };\n    };\n\n    password?: {\n        mincount: number;\n        maxcount: number;\n        string: {\n            minlength: number;\n            maxlength: number;\n            regexp: string;\n            required: boolean;\n            type: string;\n        };\n    };\n}\n\nexport default autoGeneratedReducer<RestorePasswordConditions>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Folder {\n    name?: string;\n    shared?: boolean;\n    selected?: boolean;\n    resumes?: number;\n}\n\nexport type FoldersGroupType = Partial<Record<number, Folder>>;\n\nexport interface FoldersInvariants {\n    own?: FoldersGroupType;\n    shared?: FoldersGroupType;\n    trash?: FoldersGroupType;\n    totalResumesCount?: number;\n    searchFolderIds?: string[];\n}\n\nexport interface TrashFolder {\n    name?: string;\n    selected?: boolean;\n    resumes?: number;\n    id?: string;\n}\n\ninterface ResumeFolders {\n    foldersInvariants: FoldersInvariants;\n    foldersByResume: Partial<Record<string, string[]>>;\n    searchUrl?: string;\n    emptySearchUrl?: string;\n}\n\nexport default autoGeneratedReducer<ResumeFolders>({\n    foldersInvariants: {},\n    foldersByResume: {},\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ResumeFieldStatus, ResumeFieldInvariant } from 'lux/models/resume/resume.types';\n\ninterface ResumeFieldPart {\n    name?: string;\n    required: boolean;\n    type?: string;\n    subtype?: string;\n    minlength?: string;\n    maxlength?: string;\n    regexp?: string;\n    minvalue?: string;\n    maxvalue?: string;\n    minsize?: number;\n    maxsize?: number;\n    enum?: string[];\n}\n\ntype ResumeFieldParts = Record<string, ResumeFieldPart>;\n\ninterface FieldCondition {\n    status: ResumeFieldStatus;\n    weight: number;\n    mincount: number;\n    maxcount: number;\n    parts: ResumeFieldParts[];\n}\n\ntype ResumeFormCondition = Partial<Record<ResumeFieldInvariant, FieldCondition>>;\n\nexport default autoGeneratedReducer<ResumeFormCondition>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ResumeBaseFields } from 'lux/models/resume/resume.types';\nimport { Language } from 'lux/models/resume/resumeCommon.types';\n\nimport { ResumeFieldValueList } from 'lux/models/resumeForm/fields.types';\n\ntype DefaultFields =\n    | 'area'\n    | 'citizenship'\n    | 'educationLevel'\n    | 'email'\n    | 'employment'\n    | 'firstName'\n    | 'lastName'\n    | 'keySkills'\n    | 'middleName'\n    | 'professionalRole'\n    | 'relocation'\n    | 'salary'\n    | 'workSchedule'\n    | 'workTicket';\n\ntype ResumeFormDefaultsForWrap = Pick<ResumeBaseFields, DefaultFields>;\ntype CustomFieldForWrap = Pick<ResumeBaseFields, 'language' | 'phone'>;\ntype ResumeFormDefaults = {\n    [Property in keyof ResumeFormDefaultsForWrap]: ResumeFieldValueList<ResumeFormDefaultsForWrap[Property]>;\n} & {\n    [Property in keyof CustomFieldForWrap]: CustomFieldForWrap[Property][];\n} & {\n    nativeLanguage: Language[];\n};\n\nexport default autoGeneratedReducer<Partial<ResumeFormDefaults>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ResumeBaseFields } from 'lux/models/resume/resume.types';\n\nimport * as Field from 'lux/models/resumeForm/fields.types';\n\ntype CustomFieldProps = 'birthday' | 'metro' | 'salary';\ntype ResumeFieldForWrap = Omit<ResumeBaseFields, CustomFieldProps>;\nexport type ResumeFormFields = {\n    [Property in keyof ResumeFieldForWrap]: Field.ResumeFieldValueList<ResumeFieldForWrap[Property]> | [];\n} & {\n    birthday: Field.DateValueList;\n    metro: Field.MetroValueList;\n    salary: Field.SalaryValueList;\n};\n\nexport default autoGeneratedReducer<Partial<ResumeFormFields>>({\n    title: [{ string: '' }],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { LangsList } from 'lux/models/resume/resumeCommon.types';\n\ninterface ResumeFormVacancy {\n    id: LangsList;\n    text: string;\n}\n\nexport default autoGeneratedReducer<ResumeFormVacancy[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { ResumeBaseFields } from 'lux/models/resume/resume.types';\n\ninterface ModerationNote {\n    value: string;\n    field: keyof ResumeBaseFields;\n    block: string;\n    general: boolean | null;\n    significant: boolean;\n}\n\nexport default autoGeneratedReducer<ModerationNote[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport VacancyCompensation from 'lux/models/vacancy/compensation.type';\n\ninterface ResumeFormVacancy {\n    id: number;\n    name: string;\n    currency: VacancyCompensation;\n}\n\nexport default autoGeneratedReducer<ResumeFormVacancy>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ResumeLimits {\n    max: number;\n    remaining: number;\n}\n\nexport default autoGeneratedReducer<ResumeLimits>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\n\nimport { JobSearchStatus } from 'lux/models/applicantUserStatuses';\nimport DriverLicenseOption from 'lux/models/driverLicense.types';\nimport { EducationLevel, Gender } from 'lux/models/resume/resumeCommon.types';\nimport { SearchPeriodOption, RelocationOption } from 'lux/models/resumeSearchCriteria';\nimport { LogicOption, ExpPeriodOption, ExpCompanySizeOption, PosOption } from 'lux/models/search/resume/searchQueries';\nimport {\n    CriteriaKey,\n    OrderByOption,\n    ExperienceOption,\n    FilterExpPeriodOption,\n} from 'lux/models/search/searchCriteria.types';\n\nexport interface ResumeSearchDictionaries {\n    [CriteriaKey.SearchPeriod]: SearchPeriodOption[];\n    [CriteriaKey.OrderBy]: OrderByOption[];\n    [CriteriaKey.Logic]: LogicOption[];\n    [CriteriaKey.Pos]: PosOption[];\n    [CriteriaKey.ExpPeriod]: ExpPeriodOption[];\n    [CriteriaKey.ExpCompanySize]: ExpCompanySizeOption[];\n    [CriteriaKey.ExpIndustry]: string[];\n    [CriteriaKey.FilterExpPeriodForIndustry]: FilterExpPeriodOption[];\n    [CriteriaKey.Relocation]: RelocationOption[];\n    [CriteriaKey.Employment]: EmploymentLower[];\n    [CriteriaKey.Experience]: ExperienceOption[];\n    [CriteriaKey.Education]: EducationLevel[];\n    [CriteriaKey.Gender]: Gender[];\n    [CriteriaKey.Schedule]: ScheduleCamelCase[];\n    [CriteriaKey.DriverLicenseTypes]: DriverLicenseOption[];\n    [CriteriaKey.JobSearchStatus]: JobSearchStatus[];\n    searchDefaults?: {\n        [CriteriaKey.ExpCompanySize]: ExpCompanySizeOption;\n        [CriteriaKey.ExpIndustry]: string;\n        [CriteriaKey.ExpPeriod]: ExpPeriodOption;\n        [CriteriaKey.FilterExpPeriodForIndustry]: FilterExpPeriodOption;\n        [CriteriaKey.Gender]: Gender;\n        [CriteriaKey.Logic]: LogicOption;\n        [CriteriaKey.Pos]: PosOption;\n    };\n}\n\nexport default autoGeneratedReducer<ResumeSearchDictionaries>({\n    [CriteriaKey.SearchPeriod]: [],\n    [CriteriaKey.OrderBy]: [],\n    [CriteriaKey.Logic]: [],\n    [CriteriaKey.Pos]: [],\n    [CriteriaKey.ExpPeriod]: [],\n    [CriteriaKey.ExpCompanySize]: [],\n    [CriteriaKey.ExpIndustry]: [],\n    [CriteriaKey.FilterExpPeriodForIndustry]: [],\n    [CriteriaKey.Relocation]: [],\n    [CriteriaKey.Experience]: [],\n    [CriteriaKey.Employment]: [],\n    [CriteriaKey.Education]: [],\n    [CriteriaKey.Gender]: [],\n    [CriteriaKey.Schedule]: [],\n    [CriteriaKey.DriverLicenseTypes]: [],\n    [CriteriaKey.JobSearchStatus]: [],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ResumeSearchQuery {\n    ItemsOnPage: [number];\n    PageNumber: [string];\n    Collection: string[];\n    VacancyId: [string];\n    ShowOnlyNewResponses: [boolean];\n    ShowOnlyNew: [boolean];\n}\n\nexport default autoGeneratedReducer<ResumeSearchQuery>({\n    ItemsOnPage: [50],\n    PageNumber: ['0'],\n    Collection: [],\n    VacancyId: ['0'],\n    ShowOnlyNewResponses: [false],\n    ShowOnlyNew: [false],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nenum ResumeShareKind {\n    Vkontakte = 'vk',\n    Facebook = 'fb',\n    Twitter = 'twitter',\n    Odnoklassniki = 'ok',\n    GooglePlus = 'gplus',\n    Linkedin = 'li',\n    Mail = 'mail',\n}\n\ninterface ResumeShareButton {\n    type: ResumeShareKind;\n    url: string;\n    query: string;\n    title: string;\n    text: string;\n}\n\nexport default autoGeneratedReducer<{\n    buttons: ResumeShareButton[];\n    topDomain: string;\n}>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface ResumeViewList {\n    employerManagerId: number;\n    fullName: string;\n    lastViewDate: { '@timestamp': number; $: string };\n}\n\ninterface ResumeViewHistory {\n    showResumeFallbackWarning: boolean;\n    resumeView?: ResumeViewList[];\n}\n\nexport default autoGeneratedReducer<ResumeViewHistory>({ showResumeFallbackWarning: false });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport * as ResumeTypes from 'lux/models/resume/resumeCommon.types';\n\nexport interface ResumeZp {\n    zpId: string;\n    creationTime?: string;\n    lastModified?: string;\n    birthDate: string;\n    skills: string[];\n    age: number;\n    firstName: string;\n    lastName: string;\n    middleName: string;\n    fullName: string;\n    gender: ResumeTypes.Gender;\n    email: string;\n    title: string;\n    about: string;\n    salary: ResumeTypes.Salary;\n    experiences?: Experience[];\n    totalExperience: number;\n    photoUrl: string;\n    phone: ResumeTypes.Phone;\n    educations: Education[];\n    searchCity?: string;\n    businessTripsReadiness?: TripsReadiness;\n    workType?: WorkTypes;\n    schedule?: Schedule;\n}\n\nexport enum TripsReadiness {\n    Ready = 'READY',\n    NotReady = 'NOT_READY',\n}\n\nexport interface Experience {\n    startDate: string;\n    endDate?: string;\n    companyName: string;\n    position: string;\n    description: string;\n    profAreas?: string[];\n    employeesCount?: string;\n    city?: string;\n}\n\nexport interface Education {\n    from: string;\n    to: string;\n    city?: string;\n    form: string;\n    institution: string;\n    faculty?: string;\n    speciality?: string;\n}\n\nexport enum WorkTypes {\n    FullDay = 'FULL_DAY',\n    FlyInFlyOut = 'FLY_IN_FLY_OUT',\n    TempOrFreelance = 'TEMP_JOB_OR_FREELANCE',\n    Probation = 'PROBATION',\n    PartTime = 'PART_TIME',\n}\n\nexport enum Schedule {\n    FullDay = 'FULL_DAY',\n    Shift = 'SHIFT',\n    Flexible = 'FLEXIBLE',\n    Remote = 'REMOTE',\n}\n\nexport default autoGeneratedReducer<ResumeZp>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface ResumeComplaint {\n    topicId: number;\n    vacancyId: number;\n    redirectUrl: string;\n}\n\nexport type ResumeComplaintState = Record<string, ResumeComplaint>;\n\nexport default autoGeneratedReducer<ResumeComplaintState>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SalaryStatItem {\n    name?: string;\n    num: number[];\n}\n\nexport interface SalaryStat {\n    grouping: string;\n    items: SalaryStatItem[];\n}\n\nexport default autoGeneratedReducer<SalaryStat>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CriteriaKey } from 'lux/models/search/searchCriteria.types';\n\nexport interface SavedFilters {\n    [CriteriaKey.AgeFrom]?: number;\n    [CriteriaKey.AgeTo]?: number;\n    [CriteriaKey.Area]?: string[];\n    [CriteriaKey.DriverLicenseTypes]?: string[];\n    [CriteriaKey.Gender]?: string;\n    [CriteriaKey.Relocation]?: string;\n    [CriteriaKey.Education]?: string;\n    [CriteriaKey.Experience]?: string[];\n    [CriteriaKey.Language]?: string[];\n    [CriteriaKey.Specialization]?: string[];\n    [CriteriaKey.University]?: { id: string }[];\n    [CriteriaKey.Citizenship]?: string[];\n    [CriteriaKey.SalaryFrom]?: number;\n    [CriteriaKey.SalaryTo]?: number;\n    [CriteriaKey.CurrencyCode]?: string;\n    [CriteriaKey.Label]?: string[];\n    distance?: string;\n    searchText?: string;\n}\n\nexport default autoGeneratedReducer<SavedFilters>({});\n","import createReducer, { ActionCreatorHelper } from '@hh.ru/redux-create-reducer';\n\nimport { CurrentInterview, TopicNegotiationInterviewInfo } from 'lux/models/candidatesList';\n\nconst SET_SCHEDULED_INTERVIEW_REMIND = 'SET_SCHEDULED_INTERVIEW_REMIND';\nconst REMOVE_SCHEDULED_INTERVIEW_REMIND = 'REMOVE_SCHEDULED_INTERVIEW_REMIND';\n\ninterface PayloadTypes {\n    [SET_SCHEDULED_INTERVIEW_REMIND]: { currentInterview: CurrentInterview };\n    [REMOVE_SCHEDULED_INTERVIEW_REMIND]: { topicId: string };\n}\n\nconst ActionCreator = ActionCreatorHelper<PayloadTypes>();\n\nexport const setScheduledInterviewRemind = ActionCreator(SET_SCHEDULED_INTERVIEW_REMIND);\nexport const removeScheduledInterviewRemind = ActionCreator(REMOVE_SCHEDULED_INTERVIEW_REMIND);\n\ntype ScheduledInterviews = Record<string, TopicNegotiationInterviewInfo | undefined>;\n\nexport default createReducer<ScheduledInterviews, PayloadTypes>(\n    {},\n    {\n        [SET_SCHEDULED_INTERVIEW_REMIND]: (state, action) => {\n            const { currentInterview } = action.payload;\n            const { topicId } = currentInterview;\n            const scheduledInterview = state?.[topicId];\n\n            if (!scheduledInterview) {\n                return state;\n            }\n\n            return {\n                ...state,\n                [topicId]: {\n                    ...scheduledInterview,\n                    currentInterview,\n                },\n            };\n        },\n        [REMOVE_SCHEDULED_INTERVIEW_REMIND]: (state, action) => {\n            const { topicId } = action.payload;\n            const scheduledInterview = state?.[topicId];\n\n            if (!scheduledInterview) {\n                return state;\n            }\n\n            return {\n                ...state,\n                [topicId]: {\n                    ...scheduledInterview,\n                    currentInterview: null,\n                },\n            };\n        },\n    }\n);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { EmploymentLower } from 'lux/microcoreModels/employment';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\nimport { SearchField } from 'lux/models/vacancySearch/vacancySearchDictionaries';\nimport { EducationOption, ItemsOnPageOption, LabelOption, SearchPeriodOption } from 'lux/models/vacancySearchCriteria';\n\nimport { CriteriaKey, ExperienceOption, OrderByOption, PartTimeOption } from 'lux/models/search/searchCriteria.types';\n\nenum StaticGroup {\n    Area = 'AREA',\n    NoGroupping = 'NO_GROUPING',\n    WorkExperience = 'WORK_EXPERIENCE',\n}\n\ninterface AdvancedVacancySearch {\n    [CriteriaKey.Text]?: string;\n    randomExampleNumber: 1 | 2 | 3 | 4 | 5;\n    searchFields?: SearchField[];\n    industrySelectedValues?: string[];\n    [CriteriaKey.Salary]?: string;\n    selectedValues: {\n        [CriteriaKey.AcceptTemporary]?: boolean;\n        [CriteriaKey.Education]?: EducationOption[];\n        [CriteriaKey.Experience]?: ExperienceOption;\n        [CriteriaKey.ExcludedText]?: string;\n        [CriteriaKey.Employment]?: EmploymentLower[];\n        [CriteriaKey.Schedule]?: ScheduleCamelCase[];\n        [CriteriaKey.PartTime]?: PartTimeOption[];\n        [CriteriaKey.Label]?: LabelOption[];\n        [CriteriaKey.OrderBy]?: OrderByOption;\n        [CriteriaKey.Industry]?: string[];\n        [CriteriaKey.SearchPeriod]?: SearchPeriodOption;\n        [CriteriaKey.ItemsOnPage]?: ItemsOnPageOption;\n        [CriteriaKey.Salary]?: string;\n        [CriteriaKey.Text]?: string;\n        searchFields?: SearchField[];\n        [CriteriaKey.OnlyWithSalary]?: boolean;\n    };\n    searchSettings?: {\n        includeArchived: boolean;\n        includeClosed: boolean;\n        statisticGroups: {\n            id: StaticGroup;\n            name: string;\n            selected: boolean;\n        }[];\n    };\n}\n\nexport default autoGeneratedReducer<AdvancedVacancySearch>({\n    [CriteriaKey.Text]: '',\n    randomExampleNumber: 1,\n    searchFields: [],\n    selectedValues: {},\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { SearchCatalogType } from 'lux/models/searchCatalogType';\n\nexport enum CommonExtraFilter {\n    PolnayaZanyatost = 'polnaya_zanyatost',\n    ChastichnayaZanyatost = 'chastichnaya_zanyatost',\n    ProektnayaRabota = 'proektnaya_rabota',\n    PolniyDen = 'polniy_den',\n    SmenniyGrafik = 'smenniy_grafik',\n    VakhtoviyMetod = 'vakhtoviy_metod',\n    GibkiyGrafik = 'gibkiy_grafik',\n}\n\nexport enum VacancyExtraFilter {\n    Podrabotka = 'podrabotka',\n    BezOpytaRaboty = 'bez_opyta_raboty',\n    UdalennayaRabota = 'udalennaya_rabota',\n    ZaPoslednieTriDnya = 'za_poslednie_tri_dnya',\n    ZaSutki = 'za_sutki',\n    OtPryamihRabotodateley = 'ot_pryamih_rabotodateley',\n    RabotaDlyaInvalidov = 'rabota_dlya_invalidov',\n}\n\nexport interface SearchCatalog {\n    type: SearchCatalogType;\n    profession: string;\n    relevantExtraFilters: CommonExtraFilter[] | VacancyExtraFilter[];\n}\n\nexport default autoGeneratedReducer<SearchCatalog>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\n\nconst DEFAULT_CLUSTERS_SETTINGS: SearchClustersSettings = {\n    send: false,\n    type: SearchType.Resume,\n    actionPath: '/search/resume',\n};\n\nexport interface SearchClustersSettings {\n    send: boolean;\n    actionPath: string;\n    type: SearchType;\n}\n\nexport default autoGeneratedReducer<SearchClustersSettings>(DEFAULT_CLUSTERS_SETTINGS);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { AngaraExplanation } from 'lux/components/Debug/SearchExplanation/utils';\n\nexport default autoGeneratedReducer<AngaraExplanation | null>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport NovaFilters from 'lux/models/novaFilters';\nimport { VacancySearchResult } from 'lux/models/vacancySearch/vacancySearchResult';\n\nexport interface Coordinates {\n    lat: number;\n    lng: number;\n}\n\nexport interface BBox {\n    topRight: Coordinates;\n    bottomLeft: Coordinates;\n}\n\nexport interface GeoCluster {\n    bbox: BBox;\n    centerPoint: Coordinates;\n    count: number;\n    geohash: string;\n}\n\nexport interface Vacancy {\n    address: Coordinates;\n    company: {\n        id: number;\n        name: string;\n        url: string;\n    };\n    compensation: {\n        currencyCode: CurrencyType;\n        from: number;\n        to: number;\n    };\n    id: number;\n    name: string;\n    url: string;\n}\n\ninterface SearchMapResponse {\n    vacanciesFromResponse: Vacancy[];\n    geoClusters: GeoCluster[];\n    mapHasGeoClusters: boolean;\n    query: string;\n    clusters?: NovaFilters;\n    vacancySearchResult?: VacancySearchResult;\n    sendResponse: boolean;\n}\n\nconst DEFAULT_STATE: SearchMapResponse = {\n    vacanciesFromResponse: [],\n    geoClusters: [],\n    mapHasGeoClusters: false,\n    query: '',\n    sendResponse: false,\n};\n\nexport default autoGeneratedReducer<SearchMapResponse>(DEFAULT_STATE);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Session {\n    isFallback: boolean;\n    securityCheckFailed: boolean;\n    hasExtraAccounts: boolean;\n    isMultiAccount: boolean;\n}\n\nexport default autoGeneratedReducer<Session>({\n    isFallback: false,\n    securityCheckFailed: false,\n    hasExtraAccounts: false,\n    isMultiAccount: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SkillsSurveyTrls {\n    vacancyFieldTitleProfession: string;\n    resumeFieldTitleProfession: string;\n}\n\nexport default autoGeneratedReducer<SkillsSurveyTrls>({\n    vacancyFieldTitleProfession: '',\n    resumeFieldTitleProfession: '',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { TariffProductType, DBAccessProductType } from 'lux/models/price/product.types';\n\nexport interface SnippetAccessResumeInterface {\n    productList: TariffProductType[] | DBAccessProductType[] | null;\n    area: string | null;\n    isShowSnippetResume: boolean;\n    sim?: {\n        has: boolean;\n        simServiceEntryCode: string;\n        vacancyId: number;\n    };\n}\n\nexport default autoGeneratedReducer<SnippetAccessResumeInterface>({\n    productList: [],\n    area: '',\n    isShowSnippetResume: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SocialNetworksLinksModel {\n    name: 'vk' | 'fb' | 'ok' | 'twitter' | 'instagram' | 'telegram' | 'viber' | 'dzen';\n    url: string;\n}\n\nexport default autoGeneratedReducer<SocialNetworksLinksModel[]>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SortingFilter {\n    name: string;\n    selected: boolean;\n    text: string;\n}\n\nexport default autoGeneratedReducer<SortingFilter[]>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface StayInTouchApp {\n    href: string;\n    name: string;\n}\n\nexport interface StayInTouch {\n    apps: StayInTouchApp[];\n    mobilePage: string | null;\n}\n\nexport default autoGeneratedReducer<StayInTouch>({ apps: [], mobilePage: null });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface Subscription {\n    state: boolean;\n    isDisabled: boolean;\n    label: string;\n    type: string;\n}\n\ninterface SubscriptionInformer {\n    isShow: boolean;\n    applicantSubscriptions: Record<'email' | 'sms' | 'push', { disabled: boolean; subscription: Subscription[] }>;\n    employerSubscriptions: {\n        email: {\n            mailingSubscriptionTypes: { mailingSubscriptionType: number[] }[];\n            suitableResumesSubscriptionActive: boolean;\n            eventMailingSubscriptionActive: boolean;\n        };\n        sms: {\n            siteNewsAndAdvertising: boolean;\n        };\n    };\n}\n\nexport default autoGeneratedReducer<SubscriptionInformer>({\n    isShow: false,\n    applicantSubscriptions: {\n        email: {\n            disabled: false,\n            subscription: [],\n        },\n        sms: {\n            disabled: false,\n            subscription: [],\n        },\n        push: {\n            disabled: false,\n            subscription: [],\n        },\n    },\n    employerSubscriptions: {\n        email: {\n            mailingSubscriptionTypes: [],\n            suitableResumesSubscriptionActive: false,\n            eventMailingSubscriptionActive: false,\n        },\n        sms: {\n            siteNewsAndAdvertising: false,\n        },\n    },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { UserStat } from 'lux/models/userStats';\n\nexport interface NavItemAnalytics {\n    name: string;\n    params?: Record<string, string | number>;\n}\n\nexport interface NavItem {\n    name: string;\n    url: string;\n    translations: {\n        [x: string]: string;\n    };\n    params?: Array<{\n        [x: string]: string;\n    }>;\n    analytics?: NavItemAnalytics;\n    subItems?: NavItems;\n    target?: 'blank';\n    bgColor?: string;\n    active?: boolean;\n    dropdown?: boolean;\n    external?: boolean;\n    highlighted?: boolean;\n    counter?: UserStat;\n    badge?: string;\n    trackClicks?: boolean;\n    trackElementShown?: boolean;\n    employer?: boolean;\n    arrowed?: boolean;\n}\n\nexport type NavItems = NavItem[];\n\nexport const footerReducer = autoGeneratedReducer<NavItems>([]);\nexport default autoGeneratedReducer<NavItems>([]);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface SupportChat {\n    available: boolean;\n    workday?: {\n        timeFrom: string;\n        timeTo: string;\n    };\n    weekend?: {\n        timeFrom: string;\n        timeTo: string;\n    };\n}\n\nexport default autoGeneratedReducer<SupportChat>({ available: false });\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CallStatuses } from 'lux/models/employer/vacancyresponses/calls.types';\n\nexport interface CallItem {\n    callerNumber: string;\n    creationTime: string;\n    durationSeconds: number;\n    formattedCallerNumber: string;\n    id: number;\n    lastChangeTime: string;\n    status: CallStatuses;\n    viewTime: string;\n}\n\nexport interface TopicCall {\n    items: CallItem[];\n    pickedUpPhone: boolean;\n}\n\nexport default autoGeneratedReducer<Record<number, TopicCall>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Lang } from 'lux/models/langs';\n\ntype Trl = Partial<Record<Lang, Record<string, string>>>;\n\nexport default autoGeneratedReducer<Trl>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\nimport NullableBoolean from 'lux/modules/types/nullableBoolean';\n\ninterface Publication {\n    canPublishCount: NullableBoolean;\n    count: number;\n    priceRegionIds: number[];\n    regionsTrls: string[];\n    serviceName: string;\n    shouldBeProlongatedCount: NullableBoolean;\n    unlimited: boolean;\n    vacancyServiceCode: MetallicVacancyType;\n}\n\ninterface AbortReasonProlongation {\n    reason: string;\n    reasonTrl: string;\n    vacancyId: number;\n}\n\nexport interface UpdateInfo {\n    canProlongateAsOtherType: NullableBoolean;\n    cantBeProlongated: NullableBoolean;\n    hasUnlimitedPublications: boolean;\n    notNeedProlongation: AbortReasonProlongation[] | NullableBoolean;\n    promoPublicationInfo: NullableBoolean;\n    totalProlongations: number;\n    unavailablePublications: Publication[];\n    vacancyIdsWithFreeRenewal: number[];\n    vacancyProlongationWithServiceTypeChangeInfo?: {\n        services: {\n            serviceTrl: string;\n            service: string;\n        };\n    }[];\n    prolongationInfo: {\n        vacancyId: number;\n        canProlongate: boolean;\n        canProlongateAsOtherType: NullableBoolean;\n        notProlongatedReason: NullableBoolean;\n    }[];\n    spentPublications: Publication[];\n}\n\nexport default autoGeneratedReducer<Partial<UpdateInfo>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nenum UserSearchPointSource {\n    Address = 'ADDRESS',\n    PointsLog = 'POINTS_LOG',\n}\n\ninterface UserSearchPoints {\n    userId: number;\n    lat: number;\n    lng: number;\n    source: UserSearchPointSource;\n}\n\ntype UserSearchPointsByResumeHash = Record<string, UserSearchPoints>;\n\nexport default autoGeneratedReducer<UserSearchPointsByResumeHash>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { LangsList } from 'lux/models/resume/resumeCommon.types';\n\nexport interface UserTargeting {\n    userId?: number;\n    siteId?: number;\n    lang?: LangsList;\n    domainAreaId?: number;\n}\n\nexport default autoGeneratedReducer<UserTargeting>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nexport interface VacancyOfTheDay {\n    name: string;\n    vacancyOfTheDayId: null | number;\n    area: {\n        id: number;\n        name: string;\n    };\n    click?: string;\n    vacancyId: number;\n    compensation: {\n        from: number;\n        to: number;\n        currencyCode: CurrencyType;\n        gross: boolean;\n    };\n    company: {\n        id: number;\n        visibleName: string;\n        department?: {\n            // tempexp_clickme-vacancy-of-the-day-experiment_next-line\n            code: string;\n            '@code': string;\n        };\n    };\n    links: {\n        desktop: string;\n    };\n    viewUrl: string;\n}\n\nexport interface VacanciesOfTheDay {\n    // tempexp_clickme-vacancy-of-the-day-experiment_start\n    clickmeVacanciesPlacesList: string[];\n    readyToShuffleVacancies: boolean;\n    clickmeVacancies: VacancyOfTheDay[];\n    firstFakeVacancyIndex: number;\n    // tempexp_clickme-vacancy-of-the-day-experiment_end\n    vacancies: VacancyOfTheDay[];\n    compensation: {\n        currencyCode: CurrencyType;\n        from: number;\n        to: number;\n    };\n}\n\nexport interface VacanciesOfTheDayState extends VacanciesOfTheDay {\n    isLoading: boolean;\n    success: boolean;\n}\n\nexport default autoGeneratedReducer<VacanciesOfTheDayState>({\n    isLoading: true,\n    success: true,\n    vacancies: [],\n    // tempexp_clickme-vacancy-of-the-day-experiment_start\n    readyToShuffleVacancies: false,\n    clickmeVacanciesPlacesList: [],\n    clickmeVacancies: [],\n    firstFakeVacancyIndex: 100,\n    // tempexp_clickme-vacancy-of-the-day-experiment_end\n    compensation: { from: 0, to: 0, currencyCode: CurrencyType.RUR },\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport VacancyDefaultBody from 'lux/models/vacancy/defaultBody';\n\ninterface VacancyTemplateForEdit extends VacancyDefaultBody {\n    shared: boolean;\n    canModify: boolean;\n}\n\nexport default autoGeneratedReducer<VacancyTemplateForEdit>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface VacancyAnalyticsConversion {\n    recommendationsLength?: number;\n    startDate: string;\n    conversion?: number;\n    conversionGrade?: string;\n    viewCount?: number;\n    responseCount?: number;\n}\n\nexport default autoGeneratedReducer<VacancyAnalyticsConversion | null>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { PictureType, PictureSetting } from 'lux/models/vacancyConstructorTemplate/vacancyConstructorTypes';\n\nexport type VacancyConstructorSettings = Partial<Record<PictureType, PictureSetting>>;\n\nexport default autoGeneratedReducer<VacancyConstructorSettings>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface VacancyDiscountPromoControlsInfo {\n    visibility: boolean;\n    extraPublicationsNeeded?: number;\n}\n\nexport default autoGeneratedReducer<VacancyDiscountPromoControlsInfo>({\n    visibility: false,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { PurchaseProductList } from 'lux/models/vacancyCreate/availablePublicationTypes';\n\ninterface VacancyPurchaseProducts {\n    products: PurchaseProductList;\n}\n\nexport default autoGeneratedReducer<VacancyPurchaseProducts>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface WithZpCrossPost {\n    needToSetValue: boolean;\n    value?: boolean;\n}\n\nconst initialState: WithZpCrossPost = {\n    needToSetValue: false,\n};\n\nexport default autoGeneratedReducer<WithZpCrossPost>(initialState);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport VacancyDefaultBody from 'lux/models/vacancy/defaultBody';\nimport { VacancyAction } from 'lux/modules/vacancyActions';\n\nimport availablePublicationTypes from 'lux/models/vacancyCreate/availablePublicationTypes';\nimport vacancyAdvices from 'lux/models/vacancyCreate/vacancyAdvices';\nimport vacancyAnalysis from 'lux/models/vacancyCreate/vacancyAnalysis';\nimport { VacancyCreateTemplate } from 'lux/models/vacancyCreate/vacancyCreate.types';\nimport vacancyCreateInitialBody from 'lux/models/vacancyCreate/vacancyCreateInitialBody';\nimport vacancyDiscountPromoControlsInfo from 'lux/models/vacancyCreate/vacancyDiscountPromoControlsInfo';\nimport vacancyPurchaseProducts from 'lux/models/vacancyCreate/vacancyPurchaseProducts';\nimport vacancyResponsesFilters from 'lux/models/vacancyCreate/vacancyResponsesFilters';\nimport withZpCrossPost from 'lux/models/vacancyCreate/withZpCrossPost';\n\nexport default {\n    availablePublicationTypes,\n    withZpCrossPost,\n    vacancyCreateDrafts: autoGeneratedReducer([]),\n    vacancyCreateDraftId: autoGeneratedReducer<number>(null),\n    vacancyCreateTemplates: autoGeneratedReducer<VacancyCreateTemplate[]>(null),\n    vacancyCreateTemplateId: autoGeneratedReducer<number>(null),\n    vacancyCreatePreparedTemplateId: autoGeneratedReducer<number>(null),\n    vacancyCreateDefaultBody: autoGeneratedReducer<Partial<VacancyDefaultBody>>({}),\n    vacancyCreateInitialBody,\n    vacancyCreateRules: autoGeneratedReducer({}),\n    vacancyCreateDraftSaveEnabled: autoGeneratedReducer(true),\n    vacancyCreateError: autoGeneratedReducer<{ insufficientPermissions?: boolean }>({}),\n    vacancyCreatePublicationSessionKey: autoGeneratedReducer(''),\n    vacancyCreatePublicationUrl: autoGeneratedReducer(''),\n    vacancyDiscountPromoControlsInfo,\n    vacancyPurchaseProducts,\n    vacancyCreateSavedToDraft: autoGeneratedReducer(false),\n    vacancyCreateAllowRegions: autoGeneratedReducer(false),\n    vacancyCreateLoadSourceStatus: autoGeneratedReducer(null),\n    messageToModerator: autoGeneratedReducer({}),\n    isPromoVacancy: autoGeneratedReducer(false),\n    isVacancyEditAfterModerationNotAllowed: autoGeneratedReducer(false),\n    promoVacancyProfessions: autoGeneratedReducer([]),\n    promoVacancyAreas: autoGeneratedReducer([]),\n    promoVacancyArticleUrl: autoGeneratedReducer(null),\n    isVacancyCreationAllowed: autoGeneratedReducer(true),\n    isVacancyEditAllowed: autoGeneratedReducer(true),\n    isAddressAddAllowed: autoGeneratedReducer(true),\n    isVacancyDiscriminationCheckEnabled: autoGeneratedReducer(false),\n    vacancyResponsesFilters,\n    vacancyCreateSelectPublicationType: autoGeneratedReducer(false),\n    vacancyAction: autoGeneratedReducer<VacancyAction>(null),\n    formErrorKeys: autoGeneratedReducer([]),\n    otherRoleWarning: autoGeneratedReducer(false),\n    isZpEmployer: autoGeneratedReducer(false),\n    vacancyAdvices,\n    vacancyAnalysis,\n};\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport enum VacancyFeature {\n    Archive = 'archive',\n    CanApply = 'canApply',\n    CanChangeOpenClosed = 'canChangeOpenClosed',\n    Duplicate = 'duplicate',\n    Edit = 'edit',\n    Prolongate = 'prolongate',\n}\n\ninterface VacancyFeaturesState {\n    feature?: VacancyFeature[];\n    isUpdatable?: boolean;\n}\n\nexport default autoGeneratedReducer<VacancyFeaturesState>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { CountryCode } from 'lux/models/countryId';\nimport MetallicVacancyType from 'lux/models/vacancy/metallicVacancyType.types';\n\nexport interface VacancyFull {\n    address?: {\n        '@disabled': boolean;\n        '@id': number;\n        building: string;\n        city: string;\n        displayName: string;\n    };\n    vacancyId: number;\n    publicationDate: {\n        $: string;\n    };\n    area: {\n        '@id': number;\n        '@regionId': number;\n        '@countryIsoCode': CountryCode;\n        name: string;\n        path: string;\n    };\n    metallic: string;\n    name: string;\n    company: {\n        id: number;\n    };\n    publicationType: MetallicVacancyType | null;\n    keySkills: {\n        keySkill: string[];\n    };\n}\n\nexport default autoGeneratedReducer<VacancyFull>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface VacancyInternalInfo {\n    vacancyId: number;\n    vacancyPremoderateStatus: string;\n    approved: boolean;\n    canChangeClosureStatus: boolean;\n    canBeProlongated: boolean;\n    canBeArchived: boolean;\n    userTestId: number;\n    viewCount: number;\n    ownerEmployerManagerId: number;\n    ownerEmployerManagerHhid: number;\n    daysBeingPublic?: number;\n    freeRestoreDays: number;\n}\n\nexport default autoGeneratedReducer<VacancyInternalInfo>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface MetroStation {\n    id: string;\n    name: string;\n    translit: string;\n}\n\nexport interface MetroLine {\n    id: string;\n    name: string;\n    translit: string;\n    cityId: string;\n    color: string;\n    metroStations: Array<MetroStation>;\n}\n\ninterface VacancyMetro {\n    metroLines: Array<MetroLine> | null;\n}\n\nexport default autoGeneratedReducer<VacancyMetro>({\n    metroLines: null,\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport type VacancyOnlineUsersCounters = Record<number, { includingCurrent: number; excludingCurrent: number }>;\n\nexport default autoGeneratedReducer<VacancyOnlineUsersCounters>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { Negotiations } from 'lux/models/applicantNegotiations/applicantNegotiations';\nimport { Resume } from 'lux/models/resume/resume.types';\nimport { ResumeAccessType } from 'lux/models/resume/resumeAccess.types';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\nimport PopupType from 'lux/models/vacancyResponsePopup/popupType.types';\n\ninterface BlackAndWhiteList {\n    canAdd: number;\n    containsEmployer: boolean;\n    limit: number;\n}\n\nexport interface ResumeVisibility {\n    hash: string;\n    id: number;\n    accessType: ResumeAccessType;\n    blacklist: BlackAndWhiteList;\n    whitelist: BlackAndWhiteList;\n    connectedEmployers: { employerId: number; name: string }[];\n}\n\nexport interface VacancyResponsePopup {\n    type?: PopupType;\n    vacancy?: {\n        companyUrl?: string;\n        vacancyId: number;\n        alreadyApplied: boolean;\n        hasQuickResponse: boolean;\n        hiddenResumeIds: string[];\n        unusedResumeIds: string[];\n        usedResumeIds: string[];\n        unfinishedResumeIds: string[];\n        letterMaxLength: number;\n        responseImpossible: boolean;\n        resumeVisibility: Record<string, ResumeVisibility>;\n        negotiations: Negotiations;\n        test: {\n            hasTest: boolean;\n            required: boolean;\n            testGuid?: string;\n        };\n        shortVacancy: VacancySearchItem;\n        resume: Pick<\n            Resume,\n            | 'id'\n            | 'title'\n            | 'accessType'\n            | 'vacancyTypesForResponse'\n            | 'primaryEducation'\n            | 'educationLevel'\n            | 'specialization'\n            | 'shortExperience'\n        >;\n    };\n    onCancelCallback?: () => void;\n}\n\nexport default autoGeneratedReducer<VacancyResponsePopup>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\ninterface VacancyResponseSummary {\n    items: {\n        id: string;\n        name: string;\n        value: {\n            formatted: string;\n            raw: {\n                id: string;\n                name: string;\n                percentage?: number;\n            }[];\n        } | null;\n    }[];\n    isPurchased: boolean;\n}\n\nexport default autoGeneratedReducer<VacancyResponseSummary>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport DriverLicense from 'lux/models/driverLicense.types';\nimport { EducationLevel, Gender } from 'lux/models/resume/resumeCommon.types';\nimport { RelocationOption } from 'lux/models/resumeSearchCriteria';\nimport { ExperienceOption } from 'lux/models/search/searchCriteria.types';\n\ntype ResponsesFilter = {\n    gender: Gender[];\n    education: EducationLevel[];\n    relocation: RelocationOption[];\n    experience: ExperienceOption[];\n    // eslint-disable-next-line camelcase\n    driver_license_types: DriverLicense[];\n    distanceFilterIsAtTheTop?: boolean;\n};\n\nexport default autoGeneratedReducer<ResponsesFilter>({\n    gender: [],\n    education: [],\n    relocation: [],\n    experience: [],\n    // eslint-disable-next-line camelcase\n    driver_license_types: [],\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nimport { OrderByOption } from 'lux/models/search/searchCriteria.types';\n\nexport interface NovaSort {\n    orderBy: OrderByOption;\n    searchPeriod: string;\n}\n\nexport default autoGeneratedReducer<NovaSort>({\n    orderBy: OrderByOption.Relevance,\n    searchPeriod: '0',\n});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface VacancyTestTask {\n    id: number;\n    description: string;\n    multiple: string;\n    open: string;\n    candidateSolutions: {\n        id: string;\n        text: string;\n    }[];\n}\n\nexport interface VacancyTest {\n    uidPk: number;\n    guid: string;\n    name: string;\n    description: string;\n    required: string;\n    startTime: string;\n    tasks: VacancyTestTask[];\n}\n\nexport default autoGeneratedReducer<Record<number, VacancyTest>>({});\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface Vacation {\n    name: string;\n    dateTo: string;\n}\n\nexport default autoGeneratedReducer<Vacation>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface VrVacancy {\n    vacancyId: number;\n    name: string;\n    responses: number;\n}\n\nexport default autoGeneratedReducer<VrVacancy[]>(null);\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface WorkInOtherCityItem {\n    id: number;\n    domain: string;\n    name: string;\n}\n\nexport interface WorkInOtherCityInterface {\n    link: WorkInOtherCityItem[];\n}\n\nexport default autoGeneratedReducer<WorkInOtherCityInterface>(null);\n","import { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\nimport { combineReducers } from 'redux';\n\nimport { CountersValue } from '@hh.ru/chatik-integration/lib/CounterUpdater';\nimport { HhcaptchaType, Otp, RecaptchaType } from '@hh.ru/hhcaptcha';\nimport { Breakpoint as MagritteBreakpoint } from '@hh.ru/magritte-ui';\nimport { createRootReducer, autoGeneratedReducer, ReducerObject } from '@hh.ru/redux-create-reducer';\nimport {\n    WorkExperience,\n    ChatWritePossibility,\n    WorkingDay,\n    WorkingTimeInterval,\n    WorkingTimeMode,\n} from '@hh.ru/types-hh-microcore';\nimport { Breakpoint as BlokoBreakpoint } from 'bloko/common/media';\nimport { ModelData, AdditionalDefault } from 'bloko/common/tree/types';\n\nimport { DeepLinkCommandName } from 'lux/components/DeepLinkCommand/types';\nimport loginForm from 'lux/models/LoginForm';\nimport { Account } from 'lux/models/account';\nimport accountConnect from 'lux/models/accountConnect';\nimport accountConnectResponse from 'lux/models/accountConnectResponse';\nimport accountDelete from 'lux/models/accountDelete';\nimport accountHistoryExpenditures from 'lux/models/accountHistory/accountHistoryExpenditures';\nimport accountHistoryMoney from 'lux/models/accountHistory/accountHistoryMoney';\nimport accountHistoryReplenishments from 'lux/models/accountHistory/accountHistoryReplenishments';\nimport accountHistoryServices from 'lux/models/accountHistory/accountHistoryServices';\nimport accountHistoryActionsData from 'lux/models/accountHistoryActionsData';\nimport accountPhoneVerification from 'lux/models/accountPhone/verification';\nimport accountTemporarilyLocked from 'lux/models/accountTemporarilyLocked';\nimport agencies from 'lux/models/agencies';\nimport anonymousDashboard from 'lux/models/anonymousDashboard';\nimport anonymousEmployer from 'lux/models/anonymousEmployer';\nimport anonymousSignUp from 'lux/models/anonymousSignUp';\n// tempexp_28466_next_line\nimport anonymousSignUpModalShow from 'lux/models/anonymousSignUp/anonymousSignUpModalShow';\n// tempexp_27495_next_line\nimport anonymousSignUpPagination from 'lux/models/anonymousSignUp/paginationSigUpStore';\nimport appLink from 'lux/models/appLink';\nimport appleBusinessChat from 'lux/models/appleBusinessChat';\nimport { applicantPossibleJobOffers, jobSearchStatusPostChangeModal } from 'lux/models/applicant/jobSearchStatus';\nimport { ApplicantSuitableVacancyByResumeHash } from 'lux/models/applicant/suitableVacancyByResume';\nimport applicantActivity from 'lux/models/applicantActivity';\nimport applicantBlacklistEmployers from 'lux/models/applicantBlacklistEmployers';\nimport applicantBlacklistVacancy from 'lux/models/applicantBlacklistVacancy';\nimport applicantEmployerPoliteness from 'lux/models/applicantEmployerPoliteness';\nimport applicantEmployerManagersActivity from 'lux/models/applicantNegotiations/applicantEmployerManagersActivity';\nimport applicantNegotiations from 'lux/models/applicantNegotiations/applicantNegotiations';\nimport applicantNegotiationsActionsData from 'lux/models/applicantNegotiations/applicantNegotiationsActionsData';\nimport vacanciesShort from 'lux/models/applicantNegotiations/vacanciesShort';\nimport applicantPaymentServices from 'lux/models/applicantPaymentServices';\nimport applicantPortraitCategories from 'lux/models/applicantPortraitCategories';\nimport applicantResponseStreaks from 'lux/models/applicantResponseStreaks';\nimport applicantResumes from 'lux/models/applicantResumes';\nimport applicantResumesStatistics from 'lux/models/applicantResumesStatistics';\nimport rsvCompetencyData from 'lux/models/applicantRsvVerification';\nimport applicantServicesPayment from 'lux/models/applicantServicesPayment';\nimport applicantSettingsMenu from 'lux/models/applicantSettingsMenu';\nimport applicantSignup from 'lux/models/applicantSignup';\nimport applicantSkillsVerificationError from 'lux/models/applicantSkillsVerificationError';\nimport {\n    ApplicantSkillsVerificationMethod,\n    ApplicantSkillsVerificationMethods,\n} from 'lux/models/applicantSkillsVerificationMethods';\nimport applicantSkillsVerificationResult from 'lux/models/applicantSkillsVerificationResult';\nimport applicantSubscriptions from 'lux/models/applicantSubscriptions';\nimport applicantUserStatuses from 'lux/models/applicantUserStatuses';\nimport applicantVacancyResponseStatuses from 'lux/models/applicantVacancyResponseStatuses';\nimport applyAgreement from 'lux/models/applyAgreement';\nimport { ArticleItemWithImage, ArticleItemWithTopic } from 'lux/models/article.types';\nimport articlePage from 'lux/models/articlePage';\nimport articleRating from 'lux/models/articleRating';\nimport articleViews from 'lux/models/articleViews';\nimport artifactRules from 'lux/models/artifactRules';\nimport assessments from 'lux/models/assessments';\nimport auctionConfirmationModal from 'lux/models/auctionConfirmationModal';\nimport auctionData from 'lux/models/auctionData';\nimport auctionHhtmSourceLabel from 'lux/models/auctionHhtmSourceLabel';\nimport authNewEmployerCategories from 'lux/models/authNewEmployerCategories';\nimport authNewEmployerFields from 'lux/models/authNewEmployerFields';\nimport authNewEmployerInitialValues from 'lux/models/authNewEmployerInitialValues';\nimport authPhone from 'lux/models/authPhone';\nimport authUrl from 'lux/models/authUrl';\nimport autoInvite from 'lux/models/autoInvite';\nimport availableVacancyActions from 'lux/models/availableVacancyActions';\nimport adsSearchParams from 'lux/models/banners/adsSearchParams';\nimport adsVacancyParams from 'lux/models/banners/adsVacancyParams';\nimport banners from 'lux/models/banners/banners';\nimport blogPage from 'lux/models/blogPage';\nimport blogViews from 'lux/models/blogViews';\nimport brandedVacancyTemplates from 'lux/models/brandedVacancyTemplates';\nimport brandingPromotion from 'lux/models/brandingPromotion';\nimport candidates from 'lux/models/candidates';\nimport candidatesList, { TopicNegotiationInterviewInfo } from 'lux/models/candidatesList';\nimport canvacVacancySalaryData from 'lux/models/canvacVacancySalaryData';\nimport chatBot from 'lux/models/chatBot';\nimport chatik from 'lux/models/chatik';\n// tempexp_25664_next_line\nimport clickmeAutoCampaignPromotion from 'lux/models/clickme/clickmeAutoCampaignPromotion';\nimport clickmeProducts from 'lux/models/clickme/clickmeProducts';\nimport clickmeVacancyPage from 'lux/models/clickme/clickmeVacancyPage';\nimport clickmeAutoCampaign from 'lux/models/clickmeAutoCampaign';\nimport companiesOfTheDay from 'lux/models/companiesOfTheDay';\nimport complaintReasonTypes from 'lux/models/complaintReasonTypes';\nimport config from 'lux/models/config';\nimport contactPhones from 'lux/models/contactPhones';\nimport counters from 'lux/models/counters';\nimport countriesProfileVisibilityAgreement from 'lux/models/countriesProfileVisibilityAgreement';\nimport countryId, { CountryCode } from 'lux/models/countryId';\nimport crosslinks from 'lux/models/crosslinks';\nimport currencies from 'lux/models/currencies';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport device from 'lux/models/device';\nimport displayType from 'lux/models/displayType';\nimport distances from 'lux/models/distances';\nimport employerInfo from 'lux/models/employer/employerInfo';\nimport employerLastSearches from 'lux/models/employer/employerLastSearches';\nimport employerLogo from 'lux/models/employer/employerLogo';\nimport employerRegistrationPresentsByCountryId from 'lux/models/employer/registrationPresentsByCountryId';\nimport commentsByUserId from 'lux/models/employer/resume/commentsByUser';\nimport pinnedChatMessages from 'lux/models/employer/resume/pinnedChatMessages';\nimport resumeComments from 'lux/models/employer/resume/resumeComments';\nimport employerSettingsMenu from 'lux/models/employer/settingsMenu';\nimport employerDivisionChangelog from 'lux/models/employer/structure/changelog/employerDivisionChangelog';\nimport serviceAdditional from 'lux/models/employer/structure/serviceAdditional';\nimport checkedTopics from 'lux/models/employer/vacancyresponses/checkedTopics';\nimport { EmployerAddress } from 'lux/models/employerAddresses.types';\nimport employerAddressesPage from 'lux/models/employerAddressesPage';\nimport employerAdvice from 'lux/models/employerAdvice';\nimport employerAdvices from 'lux/models/employerAdvice/list';\nimport employerAutomationStatistics from 'lux/models/employerAutomation/employerAutomationStatistics';\nimport employerAutomationVacanciesAutoAction from 'lux/models/employerAutomation/employerAutomationVacanciesAutoAction';\nimport employerAutomationVacanciesAutoInvite from 'lux/models/employerAutomation/employerAutomationVacanciesAutoInvite';\nimport employerBillingInfo from 'lux/models/employerBillingInfo';\nimport employerButtons from 'lux/models/employerButtons';\nimport employerCarts from 'lux/models/employerCarts';\nimport employerCategories from 'lux/models/employerCategories';\nimport employerChangePassword from 'lux/models/employerChangePassword';\nimport employerChecks from 'lux/models/employerChecks';\nimport employerCompanyMenu from 'lux/models/employerCompanyMenu';\nimport employerConstructor from 'lux/models/employerConstructor';\nimport employerConstructorAutoAddWidget from 'lux/models/employerConstructor/autoAddWidget';\nimport employerConstructorSettings from 'lux/models/employerConstructor/settings';\nimport employerConsumptionSegmentType from 'lux/models/employerConsumptionSegmentType';\nimport employerContactsVisibility from 'lux/models/employerContactsVisibility';\nimport employerDepartments from 'lux/models/employerDepartments';\nimport employerDivisions, { EmployerDivision } from 'lux/models/employerDivisions';\nimport employerDocuments from 'lux/models/employerDocuments/employerDocuments';\nimport employerDocumentsSettings from 'lux/models/employerDocuments/settings';\nimport { EmployerNavItem } from 'lux/models/employerDocumentsMenu';\nimport employerEdoList from 'lux/models/employerEdoList';\nimport employerEmailTemplates from 'lux/models/employerEmailTemplates';\nimport employerImplants from 'lux/models/employerImplants';\nimport employerIndexPage from 'lux/models/employerIndexPage';\nimport employerInsiders from 'lux/models/employerInsiders';\nimport employerInvoiceActivationInfo from 'lux/models/employerInvoiceActivationInfo';\nimport employerInvoiceCart from 'lux/models/employerInvoiceCart';\nimport employerInvoiceFinish from 'lux/models/employerInvoiceFinish';\nimport employerInvoicePayment from 'lux/models/employerInvoicePayment';\nimport employerInvoicePurchase from 'lux/models/employerInvoicePurchase';\nimport employerMailTemplates from 'lux/models/employerMailTemplates';\nimport employerManager from 'lux/models/employerManager';\nimport employerManagerPersonalData from 'lux/models/employerManagerPersonalData';\nimport employerManagersList from 'lux/models/employerManagersList';\nimport employerManagersPage from 'lux/models/employerManagersPage';\nimport employerMarketSegmentType from 'lux/models/employerMarketSegmentType';\nimport employerNegotiations from 'lux/models/employerNegotiations';\nimport employerNegotiationsChangeTopic from 'lux/models/employerNegotiationsChangeTopic';\nimport employerQuotaHistory from 'lux/models/employerQuotaHistory';\nimport employerRecommendedSkills from 'lux/models/employerRecommendedSkills';\nimport employerResumesNegotiationLinks from 'lux/models/employerResumes/negotiationLinks';\nimport employerSearchPublicationSettings from 'lux/models/employerSearchPublicationSettings';\nimport employerSettingsPage from 'lux/models/employerSettingsPage';\nimport employerStatus from 'lux/models/employerStatus';\nimport draftsPurchaseInfo from 'lux/models/employerVacancies/draftsPurchaseInfo';\nimport managerVacancies from 'lux/models/employerVacancies/managerVacancies';\nimport managerVacanciesGroups from 'lux/models/employerVacancies/managerVacanciesGroups';\nimport suitableCounterByVacancy from 'lux/models/employerVacancies/suitableCounterByVacancy';\nimport vacanciesCount from 'lux/models/employerVacancies/vacanciesCount';\nimport { DEFAULT_FILTERS_VALUES, VacanciesFilters } from 'lux/models/employerVacancies/vacancy.types';\nimport vacancyHiringPlans from 'lux/models/employerVacancies/vacancyHiringPlans';\nimport vacancyUpgrades from 'lux/models/employerVacancies/vacancyUpgrades';\nimport employerVacanciesRise from 'lux/models/employerVacanciesRise';\nimport employerVacancyPromotion from 'lux/models/employerVacancyPromotion';\nimport employersCompany from 'lux/models/employersCompany';\nimport employersList from 'lux/models/employersList';\nimport errorPage from 'lux/models/errorPage';\nimport experiments from 'lux/models/experiments';\nimport extraFilters from 'lux/models/extraFilters';\nimport favoriteVacancies from 'lux/models/favoriteVacancies';\nimport feedbackRecipients from 'lux/models/feedbackRecipients';\nimport financialDocumentDeedsFilters from 'lux/models/financialDocumentDeeds/filters';\nimport financialDocumentDeeds from 'lux/models/financialDocumentDeeds/financialDocumentDeeds';\nimport floodlightUtm from 'lux/models/floodlightUtm';\nimport folderContent from 'lux/models/folderContent';\nimport giftedResumes from 'lux/models/giftedResumes';\nimport globalStatistics from 'lux/models/globalStatistics';\nimport isResumeCardRedesignOnboarding from 'lux/models/isRedesignOnboarding';\nimport langs from 'lux/models/langs';\nimport linkCheck from 'lux/models/linkCheck';\nimport locale, { SiteLanguages } from 'lux/models/locale.types';\nimport lowActivityVacancies from 'lux/models/lowActivityVacancies';\nimport loyaltySurvey from 'lux/models/loyaltySurvey';\nimport mailto from 'lux/models/mailto';\nimport managerAnnouncementBanner from 'lux/models/managerAnnouncementBanner';\nimport managerCluster from 'lux/models/managerCluster';\nimport managerNegotiationStats from 'lux/models/managerNegotiationStats';\nimport { ManagerListItem } from 'lux/models/managersList';\nimport messengers from 'lux/models/messengers';\nimport microFrontends from 'lux/models/microFrontends';\nimport negotiationsHistory from 'lux/models/negotiationsHistory';\nimport newEmployerDashboardVacancy from 'lux/models/newEmployerDashboardVacancy';\nimport notifications from 'lux/models/notifications';\nimport { NovaFilterKey } from 'lux/models/novaFilters';\nimport oldEmployerUpdates from 'lux/models/oldEmployer/oldEmployerUpdates';\nimport pageMetaData from 'lux/models/pageMetaData';\nimport { Paging } from 'lux/models/paging.types';\nimport personalManager from 'lux/models/personalManager';\nimport personalManagerMenu from 'lux/models/personalManagerMenu';\nimport pickVacancyOnResumeSearch from 'lux/models/pickVacancyOnResumeSearch';\nimport platformInfo from 'lux/models/platformInfo';\nimport politenessIndex from 'lux/models/politenessIndex';\nimport postponedActions from 'lux/models/postponedActions';\nimport priceBranding from 'lux/models/price/priceBranding';\nimport priceCart from 'lux/models/price/priceCart';\nimport priceData from 'lux/models/price/priceData';\nimport priceDBAccess from 'lux/models/price/priceDbAccess';\nimport priceEmployerBrand from 'lux/models/price/priceEmployerBrand';\nimport pricePageMetaInfo from 'lux/models/price/pricePageMetaInfo';\nimport priceRecommended from 'lux/models/price/priceRecommended';\nimport priceZp from 'lux/models/price/priceZp';\nimport priceProfRolesPublications from 'lux/models/price/profRolesPublications';\nimport priceRegionalPublications from 'lux/models/price/regionalPublications';\nimport priceAddContacts from 'lux/models/priceAddContacts';\nimport priceClickmeProducts from 'lux/models/priceClickmeProducts';\nimport printVersion from 'lux/models/printVersion';\nimport probationCatalog from 'lux/models/probationCatalog';\nimport professionalRoleCategoryCollection from 'lux/models/professionalRoleCategoryCollection';\nimport professionalRoleTree from 'lux/models/professionalRoleTree';\nimport professionsList from 'lux/models/professionsList';\nimport ratingTags from 'lux/models/ratingTags';\nimport readOnlyBanner from 'lux/models/readOnlyBanner';\nimport recommendedVacancies from 'lux/models/recommendedVacancies';\nimport relatedVacancies from 'lux/models/relatedVacancies';\nimport relatedVacanciesForEmployer from 'lux/models/relatedVacanciesForEmployer';\nimport relocationWarning from 'lux/models/relocationWarning';\nimport restorePasswordConditions from 'lux/models/restorePasswordConditions';\nimport resume from 'lux/models/resume';\nimport { ResumeId } from 'lux/models/resume/resume.types';\nimport { ResumeAccessType } from 'lux/models/resume/resumeAccess.types';\nimport { EducationLevel } from 'lux/models/resume/resumeCommon.types';\nimport { VerifiedSkills } from 'lux/models/resume/resumeVerifiedSkills.types';\nimport { ResumeCountriesVisibilitySettings } from 'lux/models/resumeCountriesVisibility';\nimport { ResumeExportTypes } from 'lux/models/resumeExportTypes.types';\nimport resumeFolders from 'lux/models/resumeFolders';\nimport resumeFormAttributes from 'lux/models/resumeForm/attributes';\nimport resumeFormConditions from 'lux/models/resumeForm/conditions';\nimport resumeFormDefaults from 'lux/models/resumeForm/defaults';\nimport resumeFormFields from 'lux/models/resumeForm/fields';\nimport resumeFormLanguages from 'lux/models/resumeForm/languages';\nimport resumeFormModerationNotes from 'lux/models/resumeForm/moderationNotes';\nimport resumeFormVacancy from 'lux/models/resumeForm/vacancy';\nimport { Language, LanguageLevel } from 'lux/models/resumeLanguage';\nimport resumeLimits from 'lux/models/resumeLimits';\nimport resumeSavedSearch from 'lux/models/resumeSavedSearch';\nimport resumeSearchDictionaries from 'lux/models/resumeSearchDictionaries';\nimport resumeSearchQuery from 'lux/models/resumeSearchQuery';\nimport resumeShareButtons from 'lux/models/resumeShareButtons';\nimport resumeViewHistory from 'lux/models/resumeViewHistory';\nimport resumeVisibilityEmployerBlacklist from 'lux/models/resumeVisibility/resumeVisibilityEmployerBlacklist';\nimport resumeVisibilityEmployerWhitelist from 'lux/models/resumeVisibility/resumeVisibilityEmployerWhitelist';\nimport resumeVisibilityEmployerSearchResultsBlacklist from 'lux/models/resumeVisibility/resumeVisibilitySearchResultsBlacklist';\nimport resumeVisibilityEmployerSearchResultsWhitelist from 'lux/models/resumeVisibility/resumeVisibilitySearchResultsWhitelist';\nimport resumeZp from 'lux/models/resumeZp';\nimport resumesComplaint from 'lux/models/resumesComplaint';\nimport resumesRelevantExperience from 'lux/models/resumesRelevantExperience';\nimport rsvUserCompetencies from 'lux/models/rsvUserCompetencies';\nimport salaryStat from 'lux/models/salaryStat';\nimport savedFilters from 'lux/models/savedFilters';\nimport scheduledInterviews from 'lux/models/scheduledInterviews';\nimport advancedSearch from 'lux/models/search/advancedSearch';\nimport advancedVacancySearch from 'lux/models/search/advancedVacancySearch';\nimport resumeSearchResult from 'lux/models/search/resume/resumeSearchResult';\nimport searchQueries from 'lux/models/search/resume/searchQueries';\nimport searchCatalog from 'lux/models/searchCatalog';\nimport searchCatalogList from 'lux/models/searchCatalogList';\nimport searchCatalogType from 'lux/models/searchCatalogType';\nimport searchClusters from 'lux/models/searchClusters';\nimport searchClustersOrder from 'lux/models/searchClustersOrder';\nimport searchClustersSettings from 'lux/models/searchClustersSettings';\nimport searchClustersTip from 'lux/models/searchClustersTip';\nimport searchExplanation from 'lux/models/searchExplanation';\nimport searchMapResponse from 'lux/models/searchMapResponse';\nimport session from 'lux/models/session';\nimport skillsSurveyTrls from 'lux/models/skillsSurveyTrls';\nimport snippetAccessResume from 'lux/models/snippetAccessResume/snippetAccessResume';\nimport socialNetworksLinks from 'lux/models/socialNetworksLinks';\nimport sortingFilters from 'lux/models/sortingFilters';\nimport stayInTouch from 'lux/models/stayInTouch';\nimport subscriptionInformer from 'lux/models/subscriptionInformer';\nimport suitableVacancies from 'lux/models/suitableVacancies';\nimport supernovaNaviMenu, { NavItem, footerReducer } from 'lux/models/supernovaNaviMenu';\nimport supernovaSearchName from 'lux/models/supernovaSearchName';\nimport supernovaUserType from 'lux/models/supernovaUserType';\nimport supportChat from 'lux/models/supportChat';\nimport topLevelSite from 'lux/models/topLevelSite';\nimport topPromoBanner from 'lux/models/topPromoBanner';\nimport topicsCallHistory from 'lux/models/topicsCallHistory';\nimport trl from 'lux/models/trl';\nimport unpremoderatedVacancyList from 'lux/models/unpremoderatedVacancyList';\nimport updateInfo from 'lux/models/updateInfo';\nimport userLabelsForVacancies from 'lux/models/userLabelsForVacancies/userLabels';\nimport userNotifications from 'lux/models/userNotifications';\nimport userSearchPointsByResumeHash from 'lux/models/userSearchPointsByResumeHash';\nimport userStats from 'lux/models/userStats';\nimport userTargeting from 'lux/models/userTargeting';\nimport userType, { UserType } from 'lux/models/userType';\nimport vacanciesGroupsByRegion from 'lux/models/vacanciesGroupsByRegion';\nimport vacanciesOfTheDay from 'lux/models/vacanciesOfTheDay';\nimport vacancyTemplateForEdit from 'lux/models/vacancy/templateForEdit';\nimport vacancyTemplates from 'lux/models/vacancy/templates';\nimport vacancyAnalyticsConversion from 'lux/models/vacancyAnalyticsConversion';\nimport vacancyCallsPage from 'lux/models/vacancyCallsPage';\nimport vacancyConstructorSettings from 'lux/models/vacancyConstructorSettings';\nimport vacancyCreate from 'lux/models/vacancyCreate';\nimport vacancyFeatures from 'lux/models/vacancyFeatures';\nimport vacancyFull from 'lux/models/vacancyFull';\nimport vacancyInternalInfo from 'lux/models/vacancyInternalInfo';\nimport vacancyMessages from 'lux/models/vacancyMessages';\nimport vacancyMetro from 'lux/models/vacancyMetro';\nimport vacancyOnlineUsersCounters from 'lux/models/vacancyOnlineUsersCounters';\nimport vacancyResponseFlags from 'lux/models/vacancyResponseFlags';\nimport vacancyResponsePopup from 'lux/models/vacancyResponsePopup';\nimport vacancyResponseQuestions from 'lux/models/vacancyResponseQuestions';\nimport vacancyResponseSummary from 'lux/models/vacancyResponseSummary';\nimport autoAction from 'lux/models/vacancyResponsesAutomation/autoAction';\nimport { AutomationStatistics } from 'lux/models/vacancyResponsesAutomation/automationStatistics';\nimport vacancyResponsesFiltersDicts from 'lux/models/vacancyResponsesFiltersDicts';\nimport vacancySavedSearches from 'lux/models/vacancySavedSearch';\nimport novaSorts from 'lux/models/vacancySearch/novaSorts';\nimport vacancySearchDictionaries from 'lux/models/vacancySearch/vacancySearchDictionaries';\nimport vacancySearchResult from 'lux/models/vacancySearch/vacancySearchResult';\nimport { MapCriteria } from 'lux/models/vacancySearchCriteria';\nimport vacancyTests from 'lux/models/vacancyTests';\nimport vacancyView from 'lux/models/vacancyView';\nimport vacancyViewTab from 'lux/models/vacancyViewTab';\nimport vacation from 'lux/models/vacation';\nimport verificationActs from 'lux/models/verificationActs/verificationActs';\nimport vrSignupLogin from 'lux/models/vrSignupLogin';\nimport vrVacancies from 'lux/models/vrVacancies';\nimport workInOtherCity from 'lux/models/workInOtherCities';\n\nimport { ResumeAuditData } from 'lux/modules/applicantServices';\n\nexport type SuitableVacancyByResumeHash = Record<string, number>;\n\nconst reducers = {\n    auctionData,\n    auctionHhtmSourceLabel,\n    auctionConfirmationModal,\n    authPhone,\n    autoAction,\n    autoInvite,\n    employerAutomationStatistics,\n    employerAutomationVacanciesAutoAction,\n    employerAutomationVacanciesAutoInvite,\n    autoActionPromo: autoGeneratedReducer<boolean>(null),\n    authNewEmployerAreaIdsToRedirect: autoGeneratedReducer<string[]>([]),\n    authNewEmployerCategories,\n    authNewEmployerFields,\n    authNewEmployerInitialValues,\n    authNewEmployerPhoneMask: autoGeneratedReducer<string>(null),\n    autoUpdateAvailableForAnyResume: autoGeneratedReducer<boolean>(false),\n    activeResumeAccessType: autoGeneratedReducer<ResumeAccessType>(null),\n    accountTemporarilyLocked,\n    accountPhoneVerification,\n    applicantPortraitCategories,\n    applicantSignup,\n    applicantVacancyResponseStatuses,\n    applicantResumes,\n    applicantResponseStreaks,\n    ...applicantServicesPayment,\n    applicantSuitableVacancyByResume: autoGeneratedReducer<ApplicantSuitableVacancyByResumeHash>({}),\n    account: autoGeneratedReducer<Account>(null),\n    accountConnect,\n    accountConnectOAuth: autoGeneratedReducer<{ id?: string; url?: string }>({}),\n    accountConnectResponse,\n    actualAccount: autoGeneratedReducer<Account>(null),\n    accountHistoryServices,\n    accountHistoryReplenishments,\n    accountHistoryExpenditures,\n    articlePage,\n    articleRating,\n    articleViews,\n    artifactRules,\n    archiveSearch: autoGeneratedReducer<boolean>(false),\n    hhidAccount: autoGeneratedReducer<Account>(null),\n    accountDelete,\n    adsSearchParams,\n    adsVacancyParams,\n    alreadyRegisteredEmployer: autoGeneratedReducer<{ id: string; name: string }>(null),\n    anonymousUserType: autoGeneratedReducer<UserType.Applicant | UserType.Employer>(null),\n    anonymousAgreementAccepted: autoGeneratedReducer(false),\n    advancedSearch,\n    advancedVacancySearch,\n    agencies,\n    anonymousEmployer,\n    allowedSMSCountries: autoGeneratedReducer<CountryCode>(null),\n    appleBusinessChat,\n    abortPageContent: autoGeneratedReducer<boolean>(false),\n    applicantActivity,\n    applicantBlacklistVacancy,\n    applicantBlacklistEmployers,\n    applicantSkillsVerificationMethod: autoGeneratedReducer<ApplicantSkillsVerificationMethod | null>(null),\n    applicantSkillsVerificationMethods: autoGeneratedReducer<ApplicantSkillsVerificationMethods>([]),\n    applicantSkillsVerificationExpiring: autoGeneratedReducer<ApplicantSkillsVerificationMethods>([]),\n    applicantSkillVerificationPromoBannerVisible: autoGeneratedReducer<string>(null),\n    applicantSkillsVerificationResult,\n    applicantSkillsVerificationError,\n    applicantEmployerManagersActivity,\n    applicantNews: autoGeneratedReducer<ArticleItemWithImage[]>([]),\n    applicantArticles: autoGeneratedReducer<ArticleItemWithImage[]>([]),\n    applicantLatestResume: autoGeneratedReducer<{\n        '@found': boolean;\n        resumeHash: string;\n        resumeId: number;\n        title: string;\n    }>(null),\n    applicantFaq: autoGeneratedReducer<ArticleItemWithTopic[]>([]),\n    applicantShowProfileOnboarding: autoGeneratedReducer<boolean>(false),\n    addressesSuggestRemoteMode: autoGeneratedReducer(false),\n    analyticsParams: autoGeneratedReducer({ hhtmFrom: '', hhtmSource: '' }),\n    applicantInfo: autoGeneratedReducer({ total: 0, finished: 0, visible: 0, searchable: 0 }),\n    applicantNegotiations,\n    applicantNegotiationsActionsData,\n    applicantPaymentServices,\n    applicantResumesStatistics,\n    applicantSettingsMenu,\n    applicantSubscriptions,\n    applicantUseful: autoGeneratedReducer<ArticleItemWithTopic[]>([]),\n    applicantUserStatuses,\n    applicantUserStatusesTrigger: autoGeneratedReducer<string>(null),\n    applyAgreement,\n    jobSearchStatusPostChangeModal,\n    applicantPossibleJobOffers,\n    authUrl,\n    automationStatistics: autoGeneratedReducer<AutomationStatistics>({}),\n    availableVacancyActions,\n    brandedVacancyTemplates,\n    employerSubscriptions: autoGeneratedReducer({ initialValues: {}, employerId: '' }),\n    emailVerification: autoGeneratedReducer({ email: '', needVerification: false, mailURL: '' }),\n    employerTests: autoGeneratedReducer<{ id: string; name: string }[]>([]),\n    employerResumesNegotiationLinks,\n    employerRegistrationPresentsByCountryId,\n    applicantResumesIdentifiers: autoGeneratedReducer<{ '@id': number }[]>([]),\n    areaTree: autoGeneratedReducer<ModelData<AdditionalDefault>[]>([]),\n    assessments,\n    loginForm,\n    backofficeCanEditTemplate: autoGeneratedReducer(true),\n    backUrl: autoGeneratedReducer<string>(null),\n    banners,\n    blogPage,\n    blogViews,\n    brandingPromotion,\n    vltnDayLink: autoGeneratedReducer(''),\n    cancelFetchBanners: autoGeneratedReducer<boolean>(false),\n    candidates,\n    candidatesList,\n    canvacVacancySalaryData,\n    applicantEmployerPoliteness,\n    captchaAccountState: autoGeneratedReducer({ state: '', backurl: '', failurl: '' }),\n    careerMarathon: autoGeneratedReducer({ email: '', emailVerified: false }),\n    catalogLinks: autoGeneratedReducer<{ path: string; title: string }[]>([]),\n    chatBot,\n    chatik,\n    chatikIntegration: autoGeneratedReducer(false),\n    chatikCounters: autoGeneratedReducer<CountersValue>({ unreadCount: null, unreadSupportCount: null }),\n    checkedTopics,\n    clickmeAutoCampaign,\n    // tempexp_25664_next_line\n    clickmeAutoCampaignPromotionExpEnabled: autoGeneratedReducer(false),\n    clickmeInfo: autoGeneratedReducer<{ available: boolean; defaultValue: boolean }>(null),\n    // tempexp_25664_next_line\n    clickmeAutoCampaignPromotion,\n    clickmeProducts,\n    clickmeVacancyPage,\n    commentsByUserId,\n    companiesOfTheDay,\n    config,\n    counters,\n    countryPhoneCode: autoGeneratedReducer(''),\n    untrustedEmployer: autoGeneratedReducer(false),\n    contactPhones,\n    companiesOfTheDayTrls: autoGeneratedReducer({ area: '' }),\n    currencies,\n    complaintReasonTypes,\n    chatWritePossibilities: autoGeneratedReducer<{ trlKey: string; value: ChatWritePossibility }[]>([]),\n    criteriaCurrencyCode: autoGeneratedReducer<CurrencyType>(CurrencyType.RUR),\n    crosslinks,\n    currentManagerId: autoGeneratedReducer(''),\n    countryId,\n    countriesProfileVisibilityAgreement,\n    defaultCountryCompanySearchId: autoGeneratedReducer<string>(null),\n    savedAreaIds: autoGeneratedReducer<string[]>([]),\n    discriminationWarning: autoGeneratedReducer(false),\n    displayType,\n    distances,\n    domainRegionTrl: autoGeneratedReducer<string>(''),\n    draftsPurchaseInfo,\n    employerAddresses: autoGeneratedReducer<EmployerAddress[]>([]),\n    employerAddressesCount: autoGeneratedReducer<number>(null),\n    employerAddressesPage,\n    employerArticles: autoGeneratedReducer<ArticleItemWithImage[]>([]),\n    employerBillingInfo,\n    employerCarts,\n    employerChecks,\n    employerAdvice,\n    employerAdvices,\n    employerButtons,\n    employerNegotiationsChangeTopic,\n    employerQuotaHistory,\n    employerCompanyMenu,\n    employerConstructorWebViewMode: autoGeneratedReducer(false),\n    employerConstructorAutoAddWidget,\n    employerConstructorSettings,\n    employerConstructor,\n    employerContactsVisibility,\n    employerCategories,\n    employerChangePassword,\n    employerDocuments,\n    employerPageIsViewMode: autoGeneratedReducer<boolean>(false),\n    employerCurrentDivision: autoGeneratedReducer<EmployerDivision>(null),\n    employerDocumentsSettings,\n    employerEdoList,\n    employerEmailTemplates,\n    employerDocumentsMenu: autoGeneratedReducer<EmployerNavItem[]>([]),\n    employerDepartments,\n    employerDivisions,\n    employerFaq: autoGeneratedReducer<ArticleItemWithTopic[]>([]),\n    employerHasDivisions: autoGeneratedReducer(false),\n    employerId: autoGeneratedReducer<string>(''),\n    employerImplants,\n    employerName: autoGeneratedReducer<string>(''),\n    employerIndexPage,\n    employerLogo,\n    edoDictionary: autoGeneratedReducer<{\n        items: {\n            id: string;\n            text: string;\n        }[];\n    }>(null),\n    employerInfo,\n    employerInsiders,\n    employerInvoiceFinish,\n    employerInvoicePurchase,\n    employerInvoicePayment,\n    employerInvoiceCart,\n    employerInvoiceActivationInfo,\n    employerSearchPublicationSettings,\n    employerLastSearches,\n    employersListQuery: autoGeneratedReducer<string>(null),\n    employerSeoCities: autoGeneratedReducer<string[]>([]),\n    employerSettingsVacancyPublication: autoGeneratedReducer<{ htmlEditor?: string }>({}),\n    employerInsiderInterview: autoGeneratedReducer<{ articles: { code: number; title: string }[]; employerId: number }>(\n        null\n    ),\n    employerManager,\n    employerManagerPersonalData,\n    employerNoAdviceArticles: autoGeneratedReducer<{ id: string; title: string }[]>([]),\n    employerManagersPage,\n    employerManagersList,\n    employerMarketSegmentType,\n    employerConsumptionSegmentType,\n    employersCompany,\n    employersList,\n    employerNews: autoGeneratedReducer<ArticleItemWithImage[]>([]),\n    employerExperiences: autoGeneratedReducer<{\n        experience: {\n            code: WorkExperience;\n            searchCode: string;\n            trKey: string;\n            idInt: number;\n            id: string;\n        }[];\n    }>({ experience: [] }),\n    employerReviewsApplicantProfileBadge: autoGeneratedReducer(false),\n    employerReviewsIsOpenEmployer: autoGeneratedReducer(false),\n    employerSearchSettings: autoGeneratedReducer<{ openInNewWindow?: string }>({}),\n    employerSettingsMenu,\n    employerNegotiations,\n    employerSettingsPage,\n    employerStatus,\n    employerMailTemplates,\n    employerViewSelectedAreas: autoGeneratedReducer<string[]>([]),\n    employerVacanciesRise,\n    employerVacancyPromotion,\n    employerVacancyPromotionExpEnabled: autoGeneratedReducer(false),\n    employerRegistrationTimeInDelta: autoGeneratedReducer(false),\n    enableSimilarSavedSearch: autoGeneratedReducer(false),\n    enableVacancySnippets: autoGeneratedReducer<boolean>(true),\n    experiments,\n    extraFilters,\n    educationLevels: autoGeneratedReducer<{ value: EducationLevel; text: string }[]>([]),\n    errorCode: autoGeneratedReducer<number>(null),\n    favoriteVacancies,\n    fastVacanciesSubscriptionSettings: autoGeneratedReducer<{ sendEmail?: boolean; sendPush?: boolean }>({}),\n    favoriteVacanciesCount: autoGeneratedReducer<number>(null),\n    features: autoGeneratedReducer<Record<string, unknown>>({}),\n    feedbackRecipients,\n    filteredVacancyResponsesCount: autoGeneratedReducer<number>(null),\n    floodlightGtagEnabled: autoGeneratedReducer<boolean>(false),\n    floodlightUtm,\n    financialDocumentDeeds,\n    financialDocumentDeedsFilters,\n    financialDocumentDeedsPaging: autoGeneratedReducer<Paging>(null),\n    financialDocumentDeedsTotalRows: autoGeneratedReducer<number>(null),\n    fetchingData: autoGeneratedReducer<boolean>(false),\n    folderContent,\n    footer: footerReducer,\n    forbidden: autoGeneratedReducer(false),\n    errorPage,\n    globalInvitations: autoGeneratedReducer<number>(null),\n    getPageHtmlEnabled: autoGeneratedReducer(false),\n    globalStatistics,\n    hasBrandedTemplates: autoGeneratedReducer(false),\n    hasEditSidebarButton: autoGeneratedReducer(false),\n    hasForceReloadDreamJob: autoGeneratedReducer(false),\n    hasListOfVacanciesByRoles: autoGeneratedReducer(false),\n    hasVacancyResponsesSummaryService: autoGeneratedReducer(false),\n    hasVideoInterview: autoGeneratedReducer(false),\n    hasChameleon: autoGeneratedReducer(false),\n    headerMenu: supernovaNaviMenu,\n    hideFooterServices: autoGeneratedReducer(false),\n    hhid: autoGeneratedReducer<string>(null),\n    industriesTree: autoGeneratedReducer<ModelData[]>([]),\n    infoTip: autoGeneratedReducer<{ name?: string; context?: Record<string, unknown> }>({}),\n    isBot: autoGeneratedReducer<boolean>(false),\n    isClickmeAnalyticsEnabled: autoGeneratedReducer<boolean>(false),\n    isExpDistrictOnVacancySearch: autoGeneratedReducer<boolean>(false),\n    isLightPage: autoGeneratedReducer(false),\n    isMapVacancySearch: autoGeneratedReducer(false),\n    isNewEmployer: autoGeneratedReducer(false),\n    isNewVacancy: autoGeneratedReducer(false),\n    isResumeCardRedesignOnboarding,\n    isResumeCardRedesignOnboardingModal: autoGeneratedReducer<boolean>(false),\n    isSearchCatalog: autoGeneratedReducer<boolean>(false),\n    isAdjustDetectedRegionResumeExpEnabled: autoGeneratedReducer(false),\n    isWebView: autoGeneratedReducer(false),\n    hideLayout: autoGeneratedReducer(false),\n    isIFrame: autoGeneratedReducer(false),\n    isMultiAccount: autoGeneratedReducer(false),\n    isTinkoffBusinessError: autoGeneratedReducer(false),\n    isVacancySnippetRedesignExp: autoGeneratedReducer(false),\n    langs,\n    languages: autoGeneratedReducer<{ language: Language[] }>({ language: [] }),\n    languageLevels: autoGeneratedReducer<{ level: LanguageLevel[] }>({ level: [] }),\n    lastVacancyResponseInfo: autoGeneratedReducer<{ letter?: string; resumeHash?: string }>({}),\n    lastUpdatedSearchQueryText: autoGeneratedReducer(''),\n    linkCheck,\n    loyaltySurvey,\n    locale,\n    logos: autoGeneratedReducer({ logoDomain: '', smallLogoDomain: '' }),\n    loginError: autoGeneratedReducer<{ code: string; trl: string }>(null),\n    loginTileType: autoGeneratedReducer<UserType.Applicant | UserType.Employer>(null),\n    lowActivityVacancies,\n    mainContentVisible: autoGeneratedReducer(true),\n    managerAnnouncementBanner,\n    managersList: autoGeneratedReducer<ManagerListItem[]>([]),\n    managersListLoaded: autoGeneratedReducer(false),\n    moderators: autoGeneratedReducer<{ id: string; fullName: string }[]>([]),\n    mapVacancySearchQuery: autoGeneratedReducer<Partial<MapCriteria>>({}),\n    managerNegotiationStats,\n    managerCluster,\n    managerVacanciesActiveGroupId: autoGeneratedReducer(null),\n    managerVacanciesGroups,\n    mapHasGeoClusters: autoGeneratedReducer(false),\n    mailto,\n    messengers,\n    metaRole: autoGeneratedReducer<string>(null),\n    metroCatalog: autoGeneratedReducer({\n        currentStation: '',\n        cityMetro: '',\n        currentLine: '',\n        currentLineTranslation: '',\n    }),\n    managerActiveCount: autoGeneratedReducer<{ count: number }>(null),\n    metroCities: autoGeneratedReducer<string[]>([]),\n    microFrontends,\n    mobileAppPromotionVisible: autoGeneratedReducer(false),\n    newEmployerDashboardVacancy,\n    newTargetEmployerResumes: autoGeneratedReducer<string[]>([]),\n    notifications,\n    noMenu: autoGeneratedReducer(false),\n    numOfOpenVacancies: autoGeneratedReducer<number>(null),\n    negotiationsHistory,\n    novaSorts,\n    oauthInfo: autoGeneratedReducer<{\n        name?: string;\n        redirectUri?: string;\n        isAccountSelection?: boolean;\n        state?: string;\n        requestRedirectUri?: string;\n        oauthDenyAccessUrl?: string;\n        accountChangeUrl?: string;\n        errorReason?: string;\n    }>({}),\n    oldEmployerUpdates,\n    overlayMenu: autoGeneratedReducer(false),\n    pageMetaData,\n    permissions: autoGeneratedReducer<string[]>([]),\n    personalManager,\n    personalManagerMenu,\n    pickVacancyOnResumeSearch,\n    postponedActions,\n    previousEmployerTargets: autoGeneratedReducer<\n        {\n            activationTime: number;\n            id: number;\n            smsCount: number;\n        }[]\n    >([]),\n    priceCart,\n    priceData,\n    priceDBAccess,\n    priceEmployerBrand,\n    priceNewCartEnabled: autoGeneratedReducer(false),\n    pricePageMetaInfo,\n    priceRecommended,\n    priceProfRolesPublications,\n    priceRegionalPublications,\n    priceClickmeProducts,\n    priceAddContacts,\n    priceZp,\n    printVersion,\n    // TODO add types PORTFOLIO-16270\n    priceBranding,\n    probationCatalog,\n    rsvUserCompetencies,\n    rsvCompetencyData,\n    partTimeTypes: autoGeneratedReducer<{\n        workingDays: WorkingDay[];\n        workingTimeIntervals: WorkingTimeInterval[];\n        workingTimeModes: WorkingTimeMode[];\n    }>(null),\n    profareaTree: autoGeneratedReducer<ModelData<AdditionalDefault>[]>([]),\n    professionsList,\n    professionalRoleCategoryCollection,\n    professionalRolesFromSearch: autoGeneratedReducer<string[]>([]),\n    professionalRoleTree: autoGeneratedReducer<professionalRoleTree>({\n        items: [],\n        roleNotFoundSubstituteIds: [],\n    }),\n    partTimeVacancies: autoGeneratedReducer({ areaTrl: '' }),\n    publishedForResponseResumeHash: autoGeneratedReducer<string>(null),\n    ratingTags,\n    runActionArgument: autoGeneratedReducer<string>(null),\n    readOnlyBanner,\n    registeredEmployerCompanyName: autoGeneratedReducer<string>(''),\n    registeredEmployerEmail: autoGeneratedReducer<string>(''),\n    redirectCatalogPath: autoGeneratedReducer<string>(null),\n    remoteWorkCounter: autoGeneratedReducer<{ areaId?: number; count?: number }>({}),\n    renderRestriction: autoGeneratedReducer<{\n        breakpoint?: BlokoBreakpoint;\n        force: boolean;\n        magritteBreakpoint?: MagritteBreakpoint;\n        renderRestriction: false;\n    }>({\n        force: false,\n        renderRestriction: false,\n    }),\n    request: autoGeneratedReducer<{ protocol: string; host: string; url: string; id: string | null }>({\n        protocol: 'https',\n        host: 'hh.ru',\n        url: '',\n        id: null,\n    }),\n    regionClarification: autoGeneratedReducer<{ host: string; translations: { area: string } }>(null),\n    resume,\n    resumeSearchAutoInvitePromo: autoGeneratedReducer<boolean>(false),\n    registrationTimeMillis: autoGeneratedReducer<number>(null),\n    resumeAnalyticLabel: autoGeneratedReducer<string>(null),\n    resumeCountriesVisibility: autoGeneratedReducer<ResumeCountriesVisibilitySettings>({\n        visibleForCommonCountries: false,\n        visibleForUzbekistan: false,\n    }),\n    resumeIdsProfTestAttached: autoGeneratedReducer<number[]>([]),\n    resumeViewHistory,\n    resumeVisibilityEmployerBlacklist,\n    resumeVisibilityEmployerWhitelist,\n    resumeVisibilityEmployerSearchResultsBlacklist,\n    resumeVisibilityEmployerSearchResultsWhitelist,\n    resumeBuilderField: autoGeneratedReducer<string>(null),\n    resumeCommentsLimit: autoGeneratedReducer<number>(null),\n    resumesComplaint,\n    resumesForUpdate: autoGeneratedReducer<string[]>(null),\n    resumeFolders,\n    resumeFormError: autoGeneratedReducer<string>(null),\n    resumeFormHash: autoGeneratedReducer(''),\n    resumeFormAttributes,\n    resumeFormConditions,\n    resumeFormDefaults,\n    resumeFormFields,\n    resumeTitle: autoGeneratedReducer<string>(null),\n    resumeComments,\n    resumeFormModerationNotes,\n    resumeFormLanguages,\n    resumeFormVacancy,\n    resumeLimits,\n    resumeSearchDictionaries,\n    resumeSearchResult,\n    resumeSearchQuery,\n    resumeShareButtons,\n    resumeLanguages: autoGeneratedReducer<SiteLanguages[]>([]),\n    resumeExportTypes: autoGeneratedReducer<ResumeExportTypes>([]),\n    resumeServicePrice: autoGeneratedReducer<{\n        amount: number;\n        currency: CurrencyType;\n    }>(null),\n    resumeSavedSearch,\n    resumeVerifiedSkills: autoGeneratedReducer<Record<ResumeId, VerifiedSkills>>({}),\n    resumeViewBackoffice: autoGeneratedReducer<{\n        visibilityHistoryLink?: string;\n        contactsVisibilityHistoryLink?: string;\n        moderationLink?: string;\n        loginAsUserLink?: string;\n        userServicesLink?: string;\n    }>({}),\n    resumeZp,\n    resumesRelevantExperience,\n    relocationWarning,\n    relatedVacancies,\n    recommendedVacancies,\n    relatedVacanciesForEmployer,\n    restorePasswordConditions,\n    resumeAuditRecommendation: autoGeneratedReducer<ResumeAuditData>(null),\n    responsesCommentExp: autoGeneratedReducer<boolean>(false),\n    salaryStat,\n    savedFilters,\n    searchCatalog,\n    searchCatalogList,\n    searchCatalogProfession: autoGeneratedReducer<string>(''),\n    searchCatalogRedirect: autoGeneratedReducer<boolean>(true),\n    searchCatalogType,\n    searchXSControls: autoGeneratedReducer<boolean>(false),\n    searchLoading: autoGeneratedReducer<boolean>(false),\n    savedVacancySearch: autoGeneratedReducer<{ totalPages: number; totalItems: number }>(null),\n    searchPreference: autoGeneratedReducer({ isShown: false }),\n    searchCounts: autoGeneratedReducer<{\n        isLoad: boolean;\n        value: number;\n        // eslint-disable-next-line camelcase\n        matchingResultMap?: { [key: number]: { match_percentage: number } };\n        usedResumeId?: number;\n        isSuitableSearch?: boolean;\n    }>({ isLoad: false, value: 0 }),\n    searchClusters,\n    searchClustersOrder,\n    searchQuery: autoGeneratedReducer<string>(null),\n    searchClustersChanged: autoGeneratedReducer(false),\n    searchClustersLastAppliedFilter: autoGeneratedReducer<{ filterName: NovaFilterKey }>(null),\n    searchClustersTip,\n    searchClustersTipAlternativePosition: autoGeneratedReducer<boolean>(false),\n    searchClustersSettings,\n    searchExplanation,\n    searchMapResponse,\n    searchOldEducation: autoGeneratedReducer(false),\n    searchQueries,\n    searchSessionId: autoGeneratedReducer<string>(null),\n    mailTemplates: autoGeneratedReducer<Record<string, { template: string }>>(null),\n    searchRating: autoGeneratedReducer(false),\n    similarSavedSearchEnabled: autoGeneratedReducer(false),\n    scheduledInterviews,\n    socialNetworksLinks,\n    subscriptionInformer,\n    surveys: autoGeneratedReducer<\n        {\n            id: string;\n            text: string;\n            url: string;\n            userId: string;\n        }[]\n    >([]),\n    suggestedKeySkills: autoGeneratedReducer<{ name: string; source?: string }[]>([]),\n    employerRecommendedSkills,\n    suggestedKeySkillsNewEngineProfessions: autoGeneratedReducer<string[]>([]),\n    session,\n    smilesShoudBeShown: autoGeneratedReducer(false),\n    showBrandingInfoModal: autoGeneratedReducer(false),\n    additionalCheck: autoGeneratedReducer(false),\n    showEmployerRatingBlock: autoGeneratedReducer(false),\n    showSkillSurveyOnVacancyEditPage: autoGeneratedReducer(false),\n    showManagerContactsVacancyInfotip: autoGeneratedReducer(false),\n    showResumeCountriesVisibilitySettingsModal: autoGeneratedReducer<boolean>(false),\n    showSubscriptionButton: autoGeneratedReducer(true),\n    showWebimButtonOnLogin: autoGeneratedReducer(false),\n    skillsSurveyTrls,\n    showResumeSearchConditions: autoGeneratedReducer(false),\n    sortingFilters,\n    showEmployerStatisticsLinks: autoGeneratedReducer(false),\n    supernovaMainMenu: autoGeneratedReducer<NavItem>({ name: '', url: '', translations: {} }),\n    supernovaSearchView: autoGeneratedReducer<{\n        large: boolean;\n        largeXS: boolean;\n        expanded: boolean;\n    }>({ large: false, largeXS: false, expanded: false }),\n    supernovaSearchName,\n    supernovaSearchArea: autoGeneratedReducer({ translations: { area: '' } }),\n    supernovaUserType,\n    supportChat,\n    stayInTouch,\n    suitableCounterByVacancy,\n    giftedResumes,\n    suitableVacancies,\n    targetAgenciesServiceInfo: autoGeneratedReducer({ areaTrl: '', profAreaTrl: '' }),\n    topLevelDomain: autoGeneratedReducer<string>(null),\n    topicsCallHistory,\n    topLevelSite,\n    topPromoBanner,\n    trl,\n    userAlreadyBeenLoggedIn: autoGeneratedReducer<boolean>(false),\n    userType,\n    userId: autoGeneratedReducer<string>(null),\n    appLink,\n    device,\n    criteriaTextUpdated: autoGeneratedReducer<string | string[]>(''),\n    criteriaExcludedTextUpdated: autoGeneratedReducer<string>(''),\n    unsubscribe: autoGeneratedReducer<Record<string, string>>({}),\n    unpremoderatedVacancyList,\n    userStats,\n    userFeatures: autoGeneratedReducer<string[]>(null),\n    userLabelsForVacancies,\n    userNotifications,\n    // TODO Удалить после перехода всех микрофронтов на remoteEntry\n    useRemoteEntryWay: autoGeneratedReducer<boolean>(false),\n    userTargeting,\n    userSearchPointsByResumeHash,\n    updateInfo,\n    vacanciesOfTheDay,\n    vacancyConstructorExpirationDate: autoGeneratedReducer<number>(null),\n    ...vacancyCreate,\n    vacancyFeatures,\n    vacancyFull,\n    vacanciesGroupsByRegion,\n    vacanciesShort,\n    vacancyInternalInfo,\n    managerVacancies,\n    vacanciesInitialFilters: autoGeneratedReducer<VacanciesFilters>(DEFAULT_FILTERS_VALUES),\n    vacanciesCount,\n    vacancyBuilderInputRedesignEnabled: autoGeneratedReducer<boolean>(false),\n    vacancyOnlineUsersCounters,\n    vacancyCallsPage,\n    vacancyResponsesFiltersDicts,\n    vacancyResponseFiltersLoading: autoGeneratedReducer(false),\n    vacancyResponseFlags,\n    vacancyUpgrades,\n    vacancyAnalyticsConversion,\n    vacancyHiringPlans,\n    vacancyHiringPlanValidationRules: autoGeneratedReducer({}),\n    vacancyMetro,\n    otp: autoGeneratedReducer<Otp>({}),\n    recaptcha: autoGeneratedReducer<RecaptchaType>({\n        isBot: false,\n        siteKey: null,\n        captchaState: null,\n        captchaError: false,\n    }),\n    hhcaptcha: autoGeneratedReducer<HhcaptchaType>({\n        isBot: false,\n        captchaState: null,\n        captchaError: false,\n        captchaKey: null,\n    }),\n    captchaText: autoGeneratedReducer<string>(''),\n    vacancyResponsePopupVisible: autoGeneratedReducer(false),\n    vacancySavedSearches,\n    vacancySearchDictionaries,\n    vacancySearchResult,\n    vacancyTests,\n    vacancyView,\n    vacancyViewTab,\n    vacancyWizard: autoGeneratedReducer({\n        totalEmployersFound: 0,\n        employerHits: [],\n        rootAreaId: 0,\n    }),\n    vacancyTemplates,\n    vacancyTemplateForEdit,\n    vacancyViewsCount: autoGeneratedReducer<null>(null),\n    vacancyConstructorMobilePreview: autoGeneratedReducer<{ templateId: string | null }>({\n        templateId: null,\n    }),\n    vacancyConstructorSettings,\n    vacation,\n    vacancyResponsePopup,\n    vacancyResponseSummary,\n    vacancyResponseQuestions,\n    vacancySummaryTopicId: autoGeneratedReducer<number>(null),\n    vacancyMessages,\n    verificationActs,\n    vrSignupLogin,\n    vrVacancies,\n    wantWorkEmployer: autoGeneratedReducer<{\n        employerInfo: { id: number; name: string };\n        employerLogo: { logoUrl: string | null };\n    }>({ employerInfo: { id: NaN, name: '' }, employerLogo: { logoUrl: null } }),\n    workInOtherCity,\n    xsrfToken: autoGeneratedReducer(''),\n    employerDivisionChangelog,\n    serviceAdditional,\n    supernovaAnonymousDashboard: anonymousDashboard,\n    pinnedChatMessages,\n    politenessIndex,\n    preparedVacancyTemplates: autoGeneratedReducer<{ id: number; name: string }[]>([]),\n    snippetAccessResume,\n    zpEmployerOnboarding: autoGeneratedReducer<{ showOnboardingModal: boolean }>({ showOnboardingModal: false }),\n    accountHistoryActionsData,\n    accountHistoryMoney,\n    scheduleInterviewRemindInfo: autoGeneratedReducer<TopicNegotiationInterviewInfo>(null),\n    talantixTariff: autoGeneratedReducer<string | null>(null),\n    useXhhLayout: autoGeneratedReducer<boolean>(true),\n    webviewAppType: autoGeneratedReducer<string>(null),\n    platformInfo,\n    // tempexp_27678_next_line\n    isCommunicationFeedbackExp: autoGeneratedReducer<boolean>(false),\n\n    enableResumesMerge: autoGeneratedReducer<boolean>(false),\n    isCookiesPolicyInformerVisible: autoGeneratedReducer<boolean>(false),\n    employerCountryIdBySeller: autoGeneratedReducer<number>(null),\n    // tempexp_28466_next_line\n    anonymousSignUpModalShow,\n    // tempexp_27541_next_line\n    anonymousSignUp,\n    // tempexp_27495_file\n    anonymousSignUpPagination,\n    linkedSpecializations: autoGeneratedReducer<\n        { id: number; title: string; url: string; resumeCounter: number; skillsCounter: number; professionId: number }[]\n    >([]),\n    deepLinkCommandName: autoGeneratedReducer<DeepLinkCommandName>(null),\n    isZpImportResumeModalOpen: autoGeneratedReducer<boolean>(false),\n    topicsWaitingForResponseCount: autoGeneratedReducer<{\n        topicsWaitingForResponseCount: number;\n        withSubtitle: boolean;\n    }>(null),\n    showRelatedProfessionsSnippet: autoGeneratedReducer<boolean>(false),\n    // tempexp_28316_next-line\n    tempexp28316: autoGeneratedReducer<boolean>(false),\n    videoCallsDisabled: autoGeneratedReducer<boolean>(false),\n};\n\ntype Store<R = typeof reducers> = { [K in keyof R]: R[K] extends ReducerObject<infer D, unknown> ? D : never };\ndeclare module 'react-redux' {\n    interface DefaultRootState extends Store {\n        router: RouterState;\n    }\n}\n\nexport const rootReducer = createRootReducer(reducers);\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (history: History) =>\n    combineReducers({\n        ...rootReducer,\n        router: connectRouter(history),\n    });\n","import trlMutator from 'lux/modules/state/trlMutator';\n\nconst mutators = [trlMutator];\n\nexport default function mutate(data, params = {}) {\n    return mutators.reduce((data, mutator) => mutator(data, params), data);\n}\n","export default function (data, params = {}) {\n    if (!data?.trl) {\n        return data;\n    }\n    if (params.noTrl) {\n        const trl = data.trl;\n        Object.keys(trl).forEach((lang) => {\n            const trls = trl[lang];\n            Object.keys(trls).forEach((key) => {\n                trls[key] = `[${lang}:${key}]`;\n            });\n        });\n        return data;\n    }\n\n    const trl = data.trl;\n    Object.keys(trl).forEach((lang) => {\n        const trls = trl[lang];\n        Object.keys(trls).forEach((key) => {\n            const value = trls[key];\n            trls[key] = value.replace(/&#(\\d+);/g, (_, code) => String.fromCharCode(code));\n        });\n    });\n    return data;\n}\n","import * as Sentry from '@sentry/browser';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport batchMiddleware, { batchReducer, BATCH } from '@hh.ru/redux-batch-middleware';\nimport { makeSetStoreField, SET_FIELD_DATA_AS_IS } from '@hh.ru/redux-create-reducer';\nimport createSentryMiddleware from '@hh.ru/redux-sentry-middleware';\nimport makeSPAMiddleware from '@hh.ru/redux-spa-middleware';\n\nimport statSender from 'HHC/Performance/StatsSender';\nimport locationChangeMiddleware from 'lux/middlewares/locationChangeMiddleware';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport fetcher from 'lux/modules/fetcher';\nimport { createHistory, getHistory } from 'lux/modules/history';\nimport appReducers, { rootReducer } from 'lux/modules/rootReducer';\nimport routes from 'lux/modules/routes';\nimport mutate from 'lux/modules/state/mutators';\nimport { setStore } from 'lux/modules/typedStore';\n\nlet storeInstance;\nlet _getOrCreateStore;\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nfunction getNoTrlValue() {\n    try {\n        const value = new URLSearchParams(getHistory()?.location?.search).get('notrl');\n        return value !== null && value !== 'false';\n    } catch (ignore) {} // eslint-disable-line no-empty\n    return false;\n}\n\nconst showErrorWithMetricsSending = (error, uniqueType) => {\n    if (error.name === 'ChunkLoadError') {\n        statSender.sendMetrics({\n            report: 'spa-js-loading-failed',\n            value: 1,\n        });\n    }\n    return showDefaultError(error, uniqueType);\n};\n\nif (!process.env.LUX_SERVER) {\n    window.globalVars = window.globalVars || {};\n    window.globalVars.lux = window.globalVars.lux || {};\n\n    const stateNode = document.getElementById('HH-Lux-InitialState');\n    let stateError = null;\n\n    try {\n        window.globalVars.lux.initialState = JSON.parse(stateNode.content?.textContent || stateNode.innerText);\n    } catch (error) {\n        if (process.env.NODE_ENV !== 'test') {\n            stateError = new Error('React initial state error');\n            stateError.code = 'REACT_INITIAL_STATE_ERROR';\n        }\n    }\n\n    createHistory();\n\n    _getOrCreateStore = () => {\n        if (stateError !== null) {\n            throw stateError;\n        }\n\n        if (!storeInstance) {\n            const initialState = window.globalVars.lux.initialState;\n\n            const spaMiddleware = makeSPAMiddleware(\n                fetcher,\n                routes,\n                {},\n                rootReducer,\n                makeSetStoreField,\n                SET_FIELD_DATA_AS_IS,\n                showErrorWithMetricsSending,\n                [\n                    'forbidden',\n                    'searchLoading',\n                    'applicantResponseStreaks',\n                    'applicantVacancyResponseStatuses',\n                    'searchPreference',\n                    'vacancyResponsePopup',\n                    'supernovaSearchName',\n                    'resumeSearchResult',\n                    'vacancySearchResult',\n                    'showResumeSearchConditions',\n                ]\n            );\n\n            const middleware = [\n                spaMiddleware,\n                thunkMiddleware,\n                locationChangeMiddleware,\n                batchMiddleware,\n                routerMiddleware(getHistory()),\n            ];\n\n            if (process.env.NODE_ENV !== 'test' && window.globalVars.features.sentry_logging) {\n                middleware.push(\n                    createSentryMiddleware(Sentry, {\n                        breadcrumbMessageFromAction,\n                    })\n                );\n            }\n\n            const composedEnhancers = composeEnhancers(applyMiddleware(...middleware));\n            storeInstance = createStore(\n                batchReducer(appReducers(getHistory())),\n                mutate(initialState, { noTrl: getNoTrlValue() }),\n                composedEnhancers\n            );\n            setStore(storeInstance);\n        }\n\n        // eslint-disable-next-line\n        if (window.globalVars?.features?.store_debug) {\n            const storeInitialState = createStore(batchReducer(appReducers(getHistory()))).getState();\n            import('@hh.ru/redux-dev-helper')\n                .then(({ default: storeDevToolInit }) => storeDevToolInit(storeInstance, storeInitialState))\n                .catch(console.error);\n        }\n\n        return storeInstance;\n    };\n}\n\nlet serverStoreInstance;\n\nif (process.env.LUX_SERVER) {\n    _getOrCreateStore = function (initialState) {\n        if (initialState) {\n            const composedEnhancers = composeEnhancers(\n                applyMiddleware(batchMiddleware, routerMiddleware(getHistory()))\n            );\n            serverStoreInstance = createStore(\n                batchReducer(appReducers(getHistory())),\n                mutate(initialState, { noTrl: getNoTrlValue() }),\n                composedEnhancers\n            );\n        }\n\n        return serverStoreInstance;\n    };\n}\n\nconst getOrCreateStore = _getOrCreateStore;\n\nexport default getOrCreateStore;\n\nfunction breadcrumbMessageFromAction(action) {\n    if (action.type === BATCH) {\n        return `[ ${action.payload\n            .reduce((acc, action) => [...acc, breadcrumbMessageFromAction(action)], [])\n            .join('; ')} ]`;\n    }\n    if (action.type === '@@router/LOCATION_CHANGE') {\n        return `${action.type} (${action.payload.pathname})`;\n    }\n    if (action.type === SET_FIELD_DATA_AS_IS) {\n        return `${action.type} (${action.source}: ${Object.keys(action.payload).join(', ')})`;\n    }\n    return action.type;\n}\n","export const REGULAR_SPACE = '\\u0020';\nexport const NON_BREAKING_SPACE = '\\u00a0';\nexport const NARROW_NON_BREAKING_SPACE = '\\u202f';\nexport const THIN_SPACE = '\\u2009';\nexport const ARROW_UP = '\\u2191';\nexport const ARROW_DOWN = '\\u2193';\nexport const ARROW_RIGHT = '\\u2192';\nexport const COLON = '\\u003a';\nexport const EN_DASH = '\\u2013';\nexport const LEFT_DOUBLE_QUOTE = '\\u00ab';\nexport const RIGHT_DOUBLE_QUOTE = '\\u00bb';\nexport const EM_DASH = '\\u2014';\nexport const ELLIPSIS = '\\u2026';\nexport const DOT = '\\u2022';\nexport const MIDDLE_DOT = '\\u00B7';\nexport const COMMA = '\\u002c';\n","import { DefaultRootState } from 'react-redux';\nimport { Store } from 'redux';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nlet promiseResolveFunction: (store: Store) => void = () => {};\nconst storeInstancePromise: Promise<Store<DefaultRootState>> = new Promise(\n    (resolve) => (promiseResolveFunction = resolve)\n);\n\nexport const setStore = promiseResolveFunction;\n\nexport const getStore = (): Promise<Store<DefaultRootState>> => storeInstancePromise;\n","import { TypedUseSelectorHook, useSelector as originalUseSelector, DefaultRootState } from 'react-redux';\n\nexport const useSelector: TypedUseSelectorHook<DefaultRootState> = originalUseSelector;\n","enum UserLabel {\n    Favorite = 'FAVORITE',\n    Response = 'RESPONSE',\n    Invite = 'INVITE',\n    Discard = 'DISCARD',\n}\n\nexport default UserLabel;\n","export const UXFeedback = {\n    sendEvent(eventName: string): void {\n        window.dispatchEvent(\n            new CustomEvent('HH-UXFeedback-Open', {\n                detail: eventName,\n            })\n        );\n    },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"banner--arZLpbGS_9YtXMuJhPjg\",\"content\":\"content--LYSgGRS6K9X9t4z5lk06\",\"title\":\"title--WAh3AIPsCPqD_HFc5QTK\",\"buttons\":\"buttons--cxIS_sRt3BVlT1ntIl2K\"};","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { H2Promo } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport styles from './index.less';\n\nconst TrlKeys = {\n    title: 'app_promo_banner.title',\n    install: 'app_promo_banner.install',\n    close: 'app_promo_banner.close',\n};\n\ntype Props = {\n    appHref: string;\n    onInstall: () => void;\n    onClose: () => void;\n};\n\nconst ZPView: TranslatedComponent<Props> = ({ trls, appHref, onInstall, onClose }) => {\n    return (\n        <div className={styles.banner}>\n            <div className={styles.content}>\n                <div className={styles.title}>\n                    <H2Promo Element=\"span\">{trls[TrlKeys.title]}</H2Promo>\n                </div>\n            </div>\n            <div className={styles.buttons}>\n                <Button stretched Element={Link} to={appHref} kind={ButtonKind.Primary} onClick={onInstall}>\n                    {trls[TrlKeys.install]}\n                </Button>\n                <VSpacing base={4} />\n                <Button stretched kind={ButtonKind.Primary} appearance={ButtonAppearance.Flat} onClick={onClose}>\n                    {trls[TrlKeys.close]}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(ZPView);\n","import { FC, useEffect, useCallback } from 'react';\nimport add from 'date-fns/add';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport parseISO from 'date-fns/parseISO';\n\nimport Modal from 'bloko/blocks/modal';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ZPView from 'lux/components/AppPromoBanner/ZPView';\n\nconst APP_PROMO_BANNER_HIDDEN_UNTIL = 'appPromoBannerHiddenUntil';\n\nconst DAYS_AFTER_INSTALL = 14;\nconst DAYS_AFTER_CLOSE = 1;\n\nconst AppPromoBanner: FC = () => {\n    const [isShowModal, openModal, closeModal] = useOnOffState(false);\n    const isZP = useIsZarplataPlatform();\n    const isMobile = useBreakpoint(Breakpoint.L) === Breakpoint.XS;\n    const appLink = useSelector((state) => state.appLink);\n    const isEmployer = useSelector(({ userType }) => userType) === UserType.Employer;\n\n    const handleInstallClick = () => {\n        closeModal();\n        LocalStorageWrapper.setItem(\n            APP_PROMO_BANNER_HIDDEN_UNTIL,\n            add(new Date(), { days: DAYS_AFTER_INSTALL }).toISOString()\n        );\n    };\n\n    const showModal = useCallback(() => {\n        openModal();\n        LocalStorageWrapper.setItem(\n            APP_PROMO_BANNER_HIDDEN_UNTIL,\n            add(new Date(), { days: DAYS_AFTER_CLOSE }).toISOString()\n        );\n    }, [openModal]);\n\n    useEffect(() => {\n        const lastShownDate = LocalStorageWrapper.getItem(APP_PROMO_BANNER_HIDDEN_UNTIL);\n\n        if (!lastShownDate || (lastShownDate && differenceInMilliseconds(parseISO(lastShownDate), new Date()) < 0)) {\n            showModal();\n        }\n    }, [showModal]);\n\n    if (!isMobile || !isZP || isEmployer || !appLink.detected || !isShowModal) {\n        return null;\n    }\n\n    return (\n        <Modal visible={isShowModal} onClose={closeModal} closeButtonShow={false}>\n            <ZPView appHref={appLink.href} onInstall={handleInstallClick} onClose={closeModal} />\n        </Modal>\n    );\n};\n\nexport default AppPromoBanner;\n","import fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/notifications': {\n            queryParams: {\n                notificationCode: string;\n            };\n            body: null;\n            response: void;\n        };\n    }\n}\n\nconst putNotificationToBell = (): void => {\n    void fetcher.post('/shards/notifications', null, {\n        params: {\n            notificationCode: 'RESUME_KINGDOM_OF_VACANCY',\n        },\n    });\n};\n\nexport default putNotificationToBell;\n","import Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nexport const RESUME_CREATION_SCENARIO = 'RESUME_CREATION_SCENARIO';\n\nconst TrlKeys = {\n    title: 'resumeCreationScenario.notification.title',\n    text: 'resumeCreationScenario.notification.text',\n    button: 'resumeCreationScenario.notification.button',\n};\n\ninterface Props {\n    onClick: () => void;\n    onClose: () => void;\n    removeNotification: () => void;\n}\n\nconst ResumeCreationScenarioNotification: TranslatedComponent<Props> = ({ trls, onClick, removeNotification }) => {\n    const handleClick = () => {\n        onClick();\n        removeNotification();\n    };\n\n    return (\n        <>\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            {trls[TrlKeys.text]}\n            <VSpacing base={4} />\n            <Button onClick={handleClick} scale={ButtonScale.Small}>\n                {trls[TrlKeys.button]}\n            </Button>\n        </>\n    );\n};\n\nexport default {\n    Element: translation(ResumeCreationScenarioNotification),\n    kind: 'message',\n    onClose: (_: unknown, { onClose }: Props): void => onClose(),\n};\n","import { useEffect, memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { useChatik } from '@hh.ru/chatik-integration';\nimport Storage from 'bloko/common/storage/LocalStorageWrapper';\n\nimport { RESUME_SCENARIO_NOTIFICATION_LS_KEY } from 'lux/components/ChatikIntegration/constants';\nimport putNotificationToBell from 'lux/components/ChatikIntegration/utils/putNotificationToBell';\nimport { RESUME_CREATION_SCENARIO } from 'lux/components/Notifications/ResumeCreationScenario';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\n/**\n * Не показываем уведомление на работодательских страницах,\n * поиске по вакансиям и экране создания резюме.\n */\nconst RESTRICTED_ROUTES = [\n    '/employer', // работодательские страницы\n    '/profile', // экраны создания резюме\n    '/search/vacancy', // поиск по вакансиям\n    '/vacancy', // конкретная вакансия\n];\n\nconst isRestrictedRoute = (pathname: string): boolean => {\n    return RESTRICTED_ROUTES.some((routePath) => pathname.startsWith(routePath));\n};\n\nconst handleNotification = (shouldPutToBell = false): void => {\n    shouldPutToBell && putNotificationToBell();\n    Storage.setItem(RESUME_SCENARIO_NOTIFICATION_LS_KEY, 'handled');\n};\n\nconst ResumeCreationScenario = () => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const { openChatik } = useChatik();\n\n    const applicantInfo = useSelector(({ applicantInfo }) => applicantInfo);\n    const totalResumeCount = applicantInfo.total;\n\n    useEffect(() => {\n        if (totalResumeCount !== 0 || isRestrictedRoute(location.pathname)) {\n            return;\n        }\n\n        const notificationStatus = Storage.getItem(RESUME_SCENARIO_NOTIFICATION_LS_KEY);\n\n        if (notificationStatus === 'handled') {\n            return;\n        }\n\n        if (notificationStatus === 'shown') {\n            handleNotification(true);\n            return;\n        }\n\n        setTimeout(() => {\n            Storage.setItem(RESUME_SCENARIO_NOTIFICATION_LS_KEY, 'shown');\n\n            dispatch(\n                addNotification(RESUME_CREATION_SCENARIO, {\n                    onClick: () => {\n                        // @ts-expect-error экспериментайльный алиас не поддержан на уровне типов\n                        openChatik({ view: 'widget', chatId: 'kingdom_of_vacancy' });\n                        handleNotification();\n                    },\n                    onClose: () => handleNotification(true),\n                })\n            );\n        }, 100);\n    }, [dispatch, location.pathname, openChatik, totalResumeCount]);\n\n    return null;\n};\n\nexport default memo(ResumeCreationScenario);\n","import { FC, PropsWithChildren } from 'react';\n\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nexport const CHATIK_ERROR = 'CHATIK_ERROR';\n\ninterface ChatikNotificationProps {\n    content?: string;\n    title?: string;\n}\n\nconst ChatikNotification: FC<ChatikNotificationProps & PropsWithChildren> = ({ content, title }) => {\n    if (!content && !title) {\n        return null;\n    }\n\n    return title ? (\n        <>\n            <Text strong>{title}</Text>\n            <VSpacing base={1} />\n            {content}\n        </>\n    ) : (\n        <>{content}</>\n    );\n};\n\nexport default {\n    Element: ChatikNotification,\n    kind: 'error',\n    autoClose: true,\n};\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ChatikProviderProps } from '@hh.ru/chatik-integration';\n\nimport { CHATIK_ERROR } from 'lux/components/Notifications/ChatikError';\nimport { addNotificationAction } from 'lux/models/notifications';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\n\ntype InitParams = ChatikProviderProps['initParams'];\n\nconst useInitParams = (origin: string): InitParams => {\n    const dispatch = useDispatch();\n    const webviewAppType = useSelector((state) => state.webviewAppType);\n\n    const initParams = useMemo(\n        () =>\n            ({\n                origin,\n                webviewAppType,\n                incomingMessageHandlers: {\n                    showNotification: (notification: { content: string; title?: string }) => {\n                        dispatch(\n                            addNotificationAction({\n                                type: CHATIK_ERROR,\n                                uniqueType: true,\n                                id: notification.content,\n                                props: notification,\n                            })\n                        );\n                    },\n                    uxfbEvent: (data: { name: string }) => {\n                        UXFeedback.sendEvent(data.name);\n                    },\n                    openVacancySearch: () => {\n                        window.location.assign(paths.vacancySearch);\n                    },\n                },\n            } as InitParams),\n        [origin, webviewAppType, dispatch]\n    );\n\n    return initParams;\n};\nexport default useInitParams;\n","import { useLayoutEffect, useRef } from 'react';\n\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst CHECK_TITLE_INTERVAL_MS = 500;\nexport const COUNTER_SPLITTER = ' ・ ';\nexport const MAX_UNREAD_CHATS_COUNTER = 99;\nexport const PLUS_SIGN = '+';\n\nconst stringifyCounter = (count: number): string =>\n    count > MAX_UNREAD_CHATS_COUNTER ? `${MAX_UNREAD_CHATS_COUNTER}${PLUS_SIGN}` : count.toString();\n\nexport const getDocumentTitleWithCounter = (documentTitle: string, counter: number): string => {\n    const documentTitleParts = documentTitle.split(COUNTER_SPLITTER);\n\n    const currentCounterStr = stringifyCounter(counter);\n\n    if (documentTitleParts.length === 1 && counter > 0) {\n        return `${currentCounterStr}${COUNTER_SPLITTER}${documentTitle}`;\n    }\n\n    if (documentTitleParts.length === 1 && counter === 0) {\n        return documentTitle;\n    }\n\n    const prevCounterStr = documentTitleParts[0];\n\n    if (prevCounterStr === currentCounterStr) {\n        return documentTitle;\n    }\n\n    if (counter === 0) {\n        return documentTitleParts.slice(1).join('');\n    }\n\n    return `${currentCounterStr}${COUNTER_SPLITTER}${documentTitleParts.slice(1).join('')}`;\n};\n\nconst addCounterInDocumentTitle = (counter: number): void => {\n    const currentDocumentTitle = document.title ?? '';\n    const newDocumentTitle = getDocumentTitleWithCounter(currentDocumentTitle, counter);\n\n    if (currentDocumentTitle !== newDocumentTitle) {\n        document.title = newDocumentTitle;\n    }\n};\n\n/**\n * Хук добавляет количество непрочитанных чатов в document.title,\n * с помощью интервала, проверяя и заменяя document.title через CHECK_TITLE_INTERVAL_MS.\n * Реализован таким образом поскольку в проекте нет общего подхода для страниц с title через пропсы\n */\nexport const useUnreadChatsCountTitleNotification = (): void => {\n    const userType = useSelector(({ userType }) => userType);\n    const isErrorPage = useSelector((state) => state.errorPage.isError);\n\n    const isMobile = useBreakpoint() === Breakpoint.XS;\n    const isApplicant = userType === UserType.Applicant;\n\n    const checkTitleInterval = useRef<ReturnType<typeof setInterval>>();\n    const prevUnreadChatsCountRef = useRef<number>();\n\n    const unreadCount = useSelector((state) => state.chatikCounters.unreadCount) ?? 0;\n\n    const titleNotificationEnabled = isApplicant && Boolean(unreadCount) && !isMobile && !isErrorPage;\n\n    useLayoutEffect(() => {\n        if (isErrorPage) {\n            checkTitleInterval.current && clearInterval(checkTitleInterval.current);\n\n            return;\n        }\n\n        // prevUnreadChatsCountRef.current === 1 для того чтобы не сбрасывать интервал и очистить title от counter\n        if ((!unreadCount || !titleNotificationEnabled) && prevUnreadChatsCountRef.current !== 1) {\n            checkTitleInterval.current && clearInterval(checkTitleInterval.current);\n\n            return;\n        }\n\n        prevUnreadChatsCountRef.current = unreadCount;\n\n        checkTitleInterval.current && clearInterval(checkTitleInterval.current);\n        checkTitleInterval.current = setInterval(() => addCounterInDocumentTitle(unreadCount), CHECK_TITLE_INTERVAL_MS);\n\n        // eslint-disable-next-line consistent-return\n        return () => {\n            checkTitleInterval.current && clearInterval(checkTitleInterval.current);\n        };\n    }, [isErrorPage, titleNotificationEnabled, unreadCount]);\n};\n","import postMessage from 'Modules/PostMessage';\n\ninterface Params {\n    topLevelDomain: string;\n    data: string;\n    service: string;\n}\n\nconst TEST_IFRAME_ID = 'xhh_test_iframe';\n\nconst sendDebugDataToTestHH = ({ data, service, topLevelDomain }: Params): void => {\n    const testIframe = document.getElementById(TEST_IFRAME_ID) as HTMLIFrameElement;\n\n    if (testIframe && testIframe.contentWindow) {\n        postMessage.trigger({\n            target: testIframe.contentWindow,\n            message: {\n                name: 'debug_data',\n                data: { payload: data, service },\n            },\n        });\n\n        return;\n    }\n\n    const src = location.host.includes('pyn.ru') ? `https://test.${location.host}` : `https://test.${topLevelDomain}`;\n\n    const iframe = document.createElement('iframe');\n    iframe.src = src;\n    iframe.id = TEST_IFRAME_ID;\n    iframe.style.display = 'none';\n\n    iframe.onload = () => {\n        if (!iframe.contentWindow) {\n            return;\n        }\n\n        postMessage.trigger({\n            target: iframe.contentWindow,\n            message: {\n                name: 'debug_data',\n                data: { payload: data, service },\n            },\n        });\n    };\n\n    document.body.appendChild(iframe);\n};\n\nexport default sendDebugDataToTestHH;\n","import Storage from 'bloko/common/storage/LocalStorageWrapper';\n\nimport sendDebugDataToTestHH from 'lux/modules/sendDebugDataToTestHH';\n\nlet wasCollected = false;\n\nexport const collectDebugData = (topLevelDomain: string | null): void => {\n    if (wasCollected || !topLevelDomain) {\n        return;\n    }\n\n    const chatikDebugData = Storage.getItem('chatik_debug_last_opened_data');\n\n    if (!chatikDebugData) {\n        return;\n    }\n\n    sendDebugDataToTestHH({ data: chatikDebugData, service: 'chatik', topLevelDomain });\n    wasCollected = true;\n};\n","import { UXFeedback } from 'lux/modules/uxfeedback';\n\nconst getUxFeedbackEventName = (): string => {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `close_chat_${window.globalVars.userType}`;\n};\n\nexport const triggerUxFeedback = (): void => {\n    UXFeedback.sendEvent(getUxFeedbackEventName());\n};\n","import Analytics from '@hh.ru/analytics-js';\nimport { ChatikProviderProps } from '@hh.ru/chatik-integration';\nimport modalHelper from 'bloko/common/modalHelper';\n\nimport ActiveOverlay from 'HHC/ActiveOverlay';\n\nimport { triggerUxFeedback } from 'lux/components/ChatikIntegration/utils/uxFeedback';\n\ntype OnCloseCallback = Required<ChatikProviderProps>['onClose'];\ntype OnOpenCallback = Required<ChatikProviderProps>['onOpen'];\ntype OnResizeEndCallback = Required<ChatikProviderProps>['onResizeEnd'];\ntype OnDragEndCallback = Required<ChatikProviderProps>['onDragEnd'];\n\n/**\n * Если передвижение (ресайз или драг-н-дроп) было на меньшее кол-во пикселей,\n * то считаем, что это было сделано случайно и не отправляем событие в аналитику.\n */\nconst MOVEMENT_LOGGING_GAP = 44;\n\nexport const onClose: OnCloseCallback = ({ reason, view }) => {\n    ActiveOverlay.overlayClosed();\n\n    if (view === 'overlay') {\n        modalHelper.enableScroll();\n    }\n\n    if (reason === 'overlay-click') {\n        Analytics.sendHHEventButtonClick('chat_list_close', {\n            hhtmSource: 'chat_list',\n            type: 'OVERLAY_CLICK',\n        });\n    }\n\n    triggerUxFeedback();\n};\n\nexport const onOpen: OnOpenCallback = ({ view }) => {\n    ActiveOverlay.overlayOpened();\n\n    if (view === 'overlay') {\n        modalHelper.disableScroll();\n    }\n};\n\nexport const onResizeEnd: OnResizeEndCallback = (from, to) => {\n    const heightDiff = Math.abs(from.height - to.height);\n    const widthDiff = Math.abs(from.width - to.width);\n\n    if (widthDiff < MOVEMENT_LOGGING_GAP && heightDiff < MOVEMENT_LOGGING_GAP) {\n        return;\n    }\n\n    Analytics.sendHHEventButtonClick('chat_resize', {\n        heightFrom: from.height,\n        widthFrom: from.width,\n        heightTo: to.height,\n        widthTo: to.width,\n    });\n};\n\nexport const onDragEnd: OnDragEndCallback = (from, to) => {\n    const topDiff = Math.abs(from.top - to.top);\n    const leftDiff = Math.abs(from.left - to.left);\n\n    if (topDiff < MOVEMENT_LOGGING_GAP && leftDiff < MOVEMENT_LOGGING_GAP) {\n        return;\n    }\n\n    Analytics.sendHHEventButtonClick('chat_move', {\n        topFrom: from.top,\n        bottomFrom: from.bottom,\n        leftFrom: from.left,\n        rightFrom: from.right,\n        topTo: to.top,\n        bottomTo: to.bottom,\n        leftTo: to.left,\n        rightTo: to.right,\n    });\n};\n","import Cookies from 'bloko/common/Cookies';\n\nimport { ANON_SOCKET_COOKIE_NAME } from 'lux/components/ChatikIntegration/constants';\nimport { UserType } from 'lux/models/userType';\n\nexport const shouldUseCounterUpdater = ({\n    userType,\n    websocketOrigin,\n    chatikOrigin,\n    force,\n}: {\n    userType: UserType;\n    force: boolean;\n    websocketOrigin?: string;\n    chatikOrigin?: string;\n}): boolean => {\n    if (!websocketOrigin || !chatikOrigin) {\n        return false;\n    }\n\n    if (force) {\n        return true;\n    }\n\n    /**\n     * Для анонимов подключаемся к сокету только если есть кука\n     * Сейчас она выставляется на сутки при открытии чата с поддержкой\n     * Если будет много нагрузки, то можно сетить куку не при открытии чата,\n     * а именно после отправки сообщения в поддержку\n     */\n    if (userType === UserType.Anonymous) {\n        return typeof window === 'undefined' ? false : Boolean(Cookies.get(ANON_SOCKET_COOKIE_NAME));\n    }\n\n    return true;\n};\n","import { FC, useCallback, PropsWithChildren, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ChatikProvider, ChatikProviderProps } from '@hh.ru/chatik-integration';\nimport { CounterUpdater, OnUpdate } from '@hh.ru/chatik-integration/lib/CounterUpdater';\nimport { websocket } from '@hh.ru/chatik-integration/lib/Websocket';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Cookies from 'bloko/common/Cookies';\n\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ResumeCreationScenario from 'lux/components/ChatikIntegration/components/ResumeCreationScenario';\nimport { ANON_SOCKET_COOKIE_NAME, COLLECT_DEBUG_DATA_DELAY_MS } from 'lux/components/ChatikIntegration/constants';\nimport useInitParams from 'lux/components/ChatikIntegration/hooks/useInitParams';\nimport { useUnreadChatsCountTitleNotification } from 'lux/components/ChatikIntegration/hooks/useUnreadChatsCountTitleNotification';\nimport { collectDebugData } from 'lux/components/ChatikIntegration/utils/collectDebugData';\nimport { onOpen, onClose, onResizeEnd, onDragEnd } from 'lux/components/ChatikIntegration/utils/handlers';\nimport { shouldUseCounterUpdater } from 'lux/components/ChatikIntegration/utils/shouldUseCounterUpdater';\n\ntype OnOpenCallback = Required<ChatikProviderProps>['onOpen'];\n\nconst chatikSetCountersAction = makeSetStoreField('chatikCounters');\n\nconst ChatikIntegration: FC<PropsWithChildren> = ({ children }) => {\n    const dispatch = useDispatch();\n    const [forceCounter, setForceCounter] = useState(false);\n    const chatik = useSelector((state) => state.chatik);\n    const userType = useSelector(({ userType }) => userType);\n    const topLevelDomain = useSelector((state) => state.topLevelDomain);\n\n    const isAnonym = userType === UserType.Anonymous;\n    const chatikOrigin = chatik?.chatikOrigin || '';\n    const websocketOrigin = chatik?.websocketOrigin || '';\n\n    const initParams = useInitParams(chatikOrigin);\n\n    const shouldShowResumeCreationScenario = useExperiment(\n        'apps_profession_middle_ages',\n        userType === UserType.Applicant\n    );\n\n    useUnreadChatsCountTitleNotification();\n\n    useEffect(() => {\n        if (websocketOrigin && !isAnonym) {\n            websocket.connect({ origin: websocketOrigin });\n        }\n    }, [websocketOrigin, isAnonym]);\n\n    const handleOpen = useCallback<OnOpenCallback>(\n        (params) => {\n            if (isAnonym && Cookies.get(ANON_SOCKET_COOKIE_NAME)) {\n                setForceCounter(true);\n            }\n\n            onOpen(params);\n            setTimeout(() => collectDebugData(topLevelDomain), COLLECT_DEBUG_DATA_DELAY_MS);\n        },\n        [isAnonym, topLevelDomain]\n    );\n\n    const handleCounterUpdate: OnUpdate = useCallback(\n        ({ unreadCount, unreadSupportCount }) => {\n            dispatch(\n                chatikSetCountersAction({\n                    unreadCount: typeof unreadCount === 'number' ? unreadCount : null,\n                    unreadSupportCount: typeof unreadSupportCount === 'number' ? unreadSupportCount : null,\n                })\n            );\n        },\n        [dispatch]\n    );\n\n    return (\n        <ChatikProvider\n            initParams={initParams}\n            onOpen={handleOpen}\n            onClose={onClose}\n            onResizeEnd={onResizeEnd}\n            onDragEnd={onDragEnd}\n        >\n            {children}\n\n            {shouldShowResumeCreationScenario && <ResumeCreationScenario />}\n\n            {shouldUseCounterUpdater({ userType, websocketOrigin, chatikOrigin, force: forceCounter }) && (\n                <CounterUpdater\n                    onUpdate={handleCounterUpdate}\n                    websocketOrigin={websocketOrigin}\n                    chatikOrigin={chatikOrigin}\n                />\n            )}\n        </ChatikProvider>\n    );\n};\n\nexport default ChatikIntegration;\n","export const DEEP_LINK_COMMAND_QUERY_KEY = 'dl_command';\n","import { useCallback } from 'react';\n\nimport { useChatik } from '@hh.ru/chatik-integration';\n\ntype UseOpenChatCommandResult = (urlSearchParams: URLSearchParams) => void;\n\nconst CHAT_ID_SEARCH_PARAM_KEY = 'chat_id';\nconst CHAT_ALIAS_SEARCH_PARAM_KEY = 'chat_alias';\nconst VALID_ALIASES = ['support', 'kingdom_of_vacancy'];\n\nexport const useOpenChatCommand = (): UseOpenChatCommandResult => {\n    const { openChatik } = useChatik();\n\n    return useCallback(\n        (urlSearchParams: URLSearchParams) => {\n            const chatId =\n                urlSearchParams.get(CHAT_ALIAS_SEARCH_PARAM_KEY) ?? urlSearchParams.get(CHAT_ID_SEARCH_PARAM_KEY);\n\n            if (!chatId) {\n                openChatik({ view: 'medium' });\n                return;\n            }\n\n            openChatik({\n                // @ts-expect-error экспериментайльный алиас не поддержан на уровне типов\n                chatId: VALID_ALIASES.includes(chatId) ? chatId : Number(chatId),\n                view: 'medium',\n            });\n        },\n        [openChatik]\n    );\n};\n","export enum DeepLinkCommandName {\n    OpenChat = 'open_chat',\n}\n\nexport type DeepLinkCommandNameMap = {\n    [key in DeepLinkCommandName]: (params: URLSearchParams) => void;\n};\n","import { DEEP_LINK_COMMAND_QUERY_KEY } from 'lux/components/DeepLinkCommand/constants';\nimport { DeepLinkCommandName } from 'lux/components/DeepLinkCommand/types';\n\nexport const getCommandFromQueryParams = (params: URLSearchParams): DeepLinkCommandName | null =>\n    params.get(DEEP_LINK_COMMAND_QUERY_KEY) as DeepLinkCommandName | null;\n","import RoutePaths from 'lux/modules/routePaths';\n\ninterface DeepLinkAccessiblePaths {\n    employer: string[];\n    applicant: string[];\n}\n\nexport const deepLinkAccessiblePaths: DeepLinkAccessiblePaths = {\n    employer: [RoutePaths.employerVacancies],\n    applicant: [RoutePaths.applicantResumes, '/profile/resume/professional_role', RoutePaths.shortResume],\n};\n","import { FC, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { DEEP_LINK_COMMAND_QUERY_KEY } from 'lux/components/DeepLinkCommand/constants';\nimport { useOpenChatCommand } from 'lux/components/DeepLinkCommand/hooks/useOpenChatCommand';\nimport { DeepLinkCommandNameMap, DeepLinkCommandName } from 'lux/components/DeepLinkCommand/types';\nimport { getCommandFromQueryParams } from 'lux/components/DeepLinkCommand/utils/getCommandFromQueryParams';\nimport { isDeepLinkAccessible } from 'lux/components/DeepLinkCommand/utils/isDeepLinkAccessible';\n\nexport const DeepLinkCommandExecutor: FC = () => {\n    const dispatch = useDispatch();\n    const userType = useSelector(({ userType }) => userType);\n    const { pathname } = useLocation();\n\n    const openChatCommand = useOpenChatCommand();\n\n    const commandMapRef = useRef<DeepLinkCommandNameMap>({\n        [DeepLinkCommandName.OpenChat]: openChatCommand,\n    });\n\n    useEffect(() => {\n        if (!isDeepLinkAccessible(userType, pathname)) {\n            return;\n        }\n\n        const queryParams = new URLSearchParams(window.location.search);\n        const deepLinkCommandName = getCommandFromQueryParams(queryParams);\n\n        if (!deepLinkCommandName) {\n            return;\n        }\n\n        const command = commandMapRef.current[deepLinkCommandName];\n\n        if (command) {\n            command(queryParams);\n\n            queryParams.delete(DEEP_LINK_COMMAND_QUERY_KEY);\n            const queryString = queryParams.toString();\n            const path = window.location.pathname + queryString ? `?${queryString}` : '';\n\n            window.history.replaceState(window.history.state, document.title, path);\n        }\n    }, [dispatch, pathname, userType]);\n\n    return null;\n};\n\nexport default DeepLinkCommandExecutor;\n","import { deepLinkAccessiblePaths } from 'lux/components/DeepLinkCommand/constants/deepLinkAccessiblePaths';\nimport { UserType } from 'lux/models/userType';\n\nexport const isDeepLinkAccessible = (userType: UserType, path: string): boolean => {\n    const isUserEmployerOrApplicant = userType === UserType.Employer || userType === UserType.Applicant;\n\n    if (!isUserEmployerOrApplicant) {\n        return false;\n    }\n\n    return deepLinkAccessiblePaths[userType].some((accessiblePath) => accessiblePath === path);\n};\n","import { useState, useEffect, useRef, type FC } from 'react';\n\nimport Checkbox from 'bloko/blocks/checkbox';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './loader.less';\n\nlet _DevBuildLoader: FC = () => null;\n\nif (process.env.NODE_ENV === 'development') {\n    const CONNECTION_CLOSE = 2;\n    const MAX_PERCENTAGE = 100;\n    const CONNECT_ATTEMPT_COUNT = 10;\n\n    const __DevBuildLoader = () => {\n        const { devBuildNotifyEnabled } = useSelector(({ config }) => config);\n        const [percent, setPercent] = useState(100);\n        const connectCount = useRef(0);\n\n        const [show, setShow] = useState(true);\n        const previousPercent = useRef(percent);\n        const [liveReload, setLiveReload] = useState(false);\n\n        useEffect(() => {\n            if (!devBuildNotifyEnabled) {\n                return;\n            }\n            if (liveReload && previousPercent.current !== percent && percent === 100) {\n                window.location.reload();\n            }\n\n            previousPercent.current = percent;\n        }, [percent, liveReload, devBuildNotifyEnabled]);\n\n        useEffect(() => {\n            if (!devBuildNotifyEnabled) {\n                return;\n            }\n            const options = LocalStorageWrapper.getItem('dev_build_settings');\n\n            if (options) {\n                try {\n                    const { liveReload, show } = JSON.parse(options) as { liveReload: boolean; show: boolean };\n                    setLiveReload(liveReload);\n                    if (show !== undefined) {\n                        setShow(show);\n                    }\n                } catch (_ignore) {} // eslint-disable-line\n            }\n        }, [devBuildNotifyEnabled]);\n\n        useEffect(() => {\n            let timeoutId: ReturnType<typeof setTimeout>;\n            const checkDevBuild = () => {\n                connectCount.current += 1;\n                const evtSource = new EventSource('/shards/dev_build');\n\n                evtSource.onmessage = (event) => {\n                    const percent = parseInt(event.data as string, 10);\n                    setPercent(percent);\n                };\n\n                evtSource.addEventListener('open', () => {\n                    connectCount.current = 1;\n                });\n\n                evtSource.onerror = (eventSource) => {\n                    /* Есть кейсы, при которых разработка включает режим проксирования и находится на урле `hh.ru`\n                    Отключая проксю, SSE отваливается и пытается переподключиться на бой. В итоге получает\n                    кучу 404. В SSE нельзя получить status code, поэтому ограничил количество реконектов 10 */\n                    if (\n                        (eventSource.currentTarget as unknown as { readyState: number })?.readyState ===\n                            CONNECTION_CLOSE &&\n                        connectCount.current < CONNECT_ATTEMPT_COUNT\n                    ) {\n                        clearTimeout(timeoutId);\n                        timeoutId = setTimeout(checkDevBuild, 1000);\n                    }\n                };\n            };\n            if (devBuildNotifyEnabled) {\n                checkDevBuild();\n            }\n            return () => clearTimeout(timeoutId);\n        }, [devBuildNotifyEnabled]);\n\n        if (percent === MAX_PERCENTAGE || !show) {\n            return null;\n        }\n\n        const buildInProgress = percent > 0;\n\n        return (\n            <div className={styles.wrapper}>\n                <label className={styles.progressLabel}>\n                    {buildInProgress ? 'Build in progress:' : 'Build started'}\n                    {buildInProgress && (\n                        <progress className={styles.progress} max={MAX_PERCENTAGE} value={percent}>\n                            {percent}\n                        </progress>\n                    )}\n                </label>\n                <Checkbox\n                    checked={liveReload}\n                    onChange={(event) => {\n                        setLiveReload(event.target.checked);\n                        LocalStorageWrapper.setItem(\n                            'dev_build_settings',\n                            JSON.stringify({ liveReload: event.target.checked })\n                        );\n                    }}\n                >\n                    refresh after build\n                </Checkbox>\n            </div>\n        );\n    };\n\n    _DevBuildLoader = __DevBuildLoader;\n}\n\nconst DevBuildLoader = _DevBuildLoader;\n\nexport default DevBuildLoader;\n","import { RProgress } from '@hh.ru/rprogress';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\nconst COLOR_RED = '#d9000e';\nconst COLOR_BLUE = '#7195af';\n\nconst LinearProgress = () => {\n    const isZP = useIsZarplataPlatform();\n\n    return <RProgress color={isZP ? COLOR_BLUE : COLOR_RED} />;\n};\n\nexport default LinearProgress;\n","export default (tokensVersion: string): { tokensString: string; themeClassName: string } => {\n    const [major, minor, patch] = tokensVersion.split('.');\n    const tokensString = `\n.magritte-hh-day-theme {\n  --magritte-color-background-primary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-tertiary-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-background-accent-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-background-accent-heavy-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-positive-heavy-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-negative-heavy-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-warning-heavy-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-background-special-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-special-heavy-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-background-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-background-body-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-background-state-secondary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-secondary-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-secondary-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-background-state-tertiary-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-background-state-tertiary-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-tertiary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-accent-hovered-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-background-state-accent-pressed-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-background-state-accent-disabled-v${major}-${minor}-${patch}: #edf6ff7a;\n  --magritte-color-background-state-positive-hovered-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-state-positive-pressed-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-state-positive-disabled-v${major}-${minor}-${patch}: #e8f9ec7a;\n  --magritte-color-background-state-negative-hovered-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-state-negative-pressed-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-state-negative-disabled-v${major}-${minor}-${patch}: #fef2ef7a;\n  --magritte-color-background-state-warning-hovered-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-state-warning-pressed-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff3e67a;\n  --magritte-color-background-state-special-hovered-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-state-special-pressed-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-state-special-disabled-v${major}-${minor}-${patch}: #f7f4ff7a;\n  --magritte-color-background-state-accent-heavy-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-background-state-accent-heavy-pressed-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-background-state-accent-heavy-disabled-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-background-state-positive-heavy-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-background-state-positive-heavy-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-background-state-positive-heavy-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-background-state-negative-heavy-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-background-state-negative-heavy-pressed-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-background-state-negative-heavy-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-background-state-warning-heavy-hovered-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-background-state-warning-heavy-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-background-state-warning-heavy-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-background-state-special-heavy-hovered-v${major}-${minor}-${patch}: #c4acf9;\n  --magritte-color-background-state-special-heavy-pressed-v${major}-${minor}-${patch}: #c4acf9;\n  --magritte-color-background-state-special-heavy-disabled-v${major}-${minor}-${patch}: #b99bf87a;\n  --magritte-color-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-stroke-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-stroke-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-stroke-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-stroke-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-stroke-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #dce3eb7a;\n  --magritte-color-stroke-state-accent-hovered-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-stroke-state-accent-disabled-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-stroke-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-stroke-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-stroke-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-stroke-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-stroke-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-stroke-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-stroke-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-stroke-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-text-primary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-text-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-text-tertiary-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-text-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-text-accent-secondary-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-text-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-text-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-text-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-text-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-text-warning-secondary-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-text-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-text-special-secondary-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-text-state-primary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-text-state-primary-disabled-v${major}-${minor}-${patch}: #0000007a;\n  --magritte-color-text-state-secondary-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-text-state-secondary-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-text-state-tertiary-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-text-state-tertiary-disabled-v${major}-${minor}-${patch}: #aabbca7a;\n  --magritte-color-text-state-accent-hovered-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-text-state-accent-disabled-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-text-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #468ffd7a;\n  --magritte-color-text-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-text-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-text-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #83d99c7a;\n  --magritte-color-text-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-text-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-text-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #ff8a777a;\n  --magritte-color-text-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-text-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-text-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-text-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #ff99007a;\n  --magritte-color-text-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-text-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-text-state-special-secondary-hovered-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-text-state-special-secondary-disabled-v${major}-${minor}-${patch}: #a579f47a;\n  --magritte-color-text-state-contrast-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-text-state-contrast-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-text-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #ffffff3d;\n  --magritte-color-icon-primary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-icon-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-icon-tertiary-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-icon-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-icon-accent-secondary-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-icon-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-icon-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-icon-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-icon-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-icon-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-icon-warning-secondary-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-icon-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-icon-special-secondary-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-icon-state-primary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-icon-state-primary-disabled-v${major}-${minor}-${patch}: #0000007a;\n  --magritte-color-icon-state-secondary-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-icon-state-secondary-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-icon-state-tertiary-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-icon-state-tertiary-disabled-v${major}-${minor}-${patch}: #aabbca7a;\n  --magritte-color-icon-state-accent-hovered-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-icon-state-accent-disabled-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-icon-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #468ffd7a;\n  --magritte-color-icon-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-icon-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-icon-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #83d99c7a;\n  --magritte-color-icon-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-icon-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-icon-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #ff8a777a;\n  --magritte-color-icon-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-icon-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-icon-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-icon-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #ff99007a;\n  --magritte-color-icon-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-icon-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-icon-state-special-secondary-hovered-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-icon-state-special-secondary-disabled-v${major}-${minor}-${patch}: #a579f47a;\n  --magritte-color-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-icon-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #ffffff3d;\n  --magritte-color-visualisation-line-1-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-visualisation-line-2-v${major}-${minor}-${patch}: #0d8847;\n  --magritte-color-visualisation-line-3-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-visualisation-line-4-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-visualisation-line-5-v${major}-${minor}-${patch}: #ac6600;\n  --magritte-color-visualisation-line-6-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-visualisation-point-1-v${major}-${minor}-${patch}: #ac3225;\n  --magritte-color-visualisation-point-2-v${major}-${minor}-${patch}: #026d36;\n  --magritte-color-visualisation-point-3-v${major}-${minor}-${patch}: #0058cc;\n  --magritte-color-visualisation-point-4-v${major}-${minor}-${patch}: #7a34d3;\n  --magritte-color-visualisation-point-5-v${major}-${minor}-${patch}: #8a5100;\n  --magritte-color-visualisation-point-6-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-card-background-blank-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-card-background-extra-1-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-card-background-extra-2-v${major}-${minor}-${patch}: #FFF1F3;\n  --magritte-color-component-card-background-extra-3-v${major}-${minor}-${patch}: #E8F7FE;\n  --magritte-color-component-card-background-extra-4-v${major}-${minor}-${patch}: #FDF4D7;\n  --magritte-color-component-card-background-extra-5-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-component-card-background-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-card-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-card-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-component-card-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-neutral-inner-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-phantom-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-phantom-inner-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-inner-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-inner-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-phantom-hovered-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-pressed-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-inner-hovered-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-inner-pressed-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-state-neutral-inner-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-state-phantom-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-phantom-inner-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-card-background-state-blank-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-blank-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-blank-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-neutral-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-card-background-state-neutral-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-card-background-state-neutral-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-card-background-state-extra-1-hovered-v${major}-${minor}-${patch}: #e7f2ff;\n  --magritte-color-component-card-background-state-extra-1-pressed-v${major}-${minor}-${patch}: #e7f2ff;\n  --magritte-color-component-card-background-state-extra-1-disabled-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-card-background-state-extra-2-hovered-v${major}-${minor}-${patch}: #feecef;\n  --magritte-color-component-card-background-state-extra-2-pressed-v${major}-${minor}-${patch}: #feecef;\n  --magritte-color-component-card-background-state-extra-2-disabled-v${major}-${minor}-${patch}: #fff5f7;\n  --magritte-color-component-card-background-state-extra-3-hovered-v${major}-${minor}-${patch}: #e0f4fe;\n  --magritte-color-component-card-background-state-extra-3-pressed-v${major}-${minor}-${patch}: #e0f4fe;\n  --magritte-color-component-card-background-state-extra-3-disabled-v${major}-${minor}-${patch}: #eff9fe;\n  --magritte-color-component-card-background-state-extra-4-hovered-v${major}-${minor}-${patch}: #fdf0c7;\n  --magritte-color-component-card-background-state-extra-4-pressed-v${major}-${minor}-${patch}: #fdf0c7;\n  --magritte-color-component-card-background-state-extra-4-disabled-v${major}-${minor}-${patch}: #fdf8e7;\n  --magritte-color-component-card-background-state-extra-5-hovered-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-card-background-state-extra-5-pressed-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-card-background-state-extra-5-disabled-v${major}-${minor}-${patch}: #f9f7ff;\n  --magritte-color-component-card-background-state-contrast-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-contrast-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-contrast-disabled-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-positive-hovered-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-card-background-state-positive-pressed-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-card-background-state-positive-disabled-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-card-background-state-negative-hovered-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-card-background-state-negative-pressed-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-card-background-state-negative-disabled-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-card-background-state-warning-hovered-v${major}-${minor}-${patch}: #ffeedd;\n  --magritte-color-component-card-background-state-warning-pressed-v${major}-${minor}-${patch}: #ffeedd;\n  --magritte-color-component-card-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff7ee;\n  --magritte-color-component-button-background-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-neutral-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-button-background-neutral-tertiary-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-background-accent-secondary-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-button-background-accent-tertiary-v${major}-${minor}-${patch}: #e7f2ff00;\n  --magritte-color-component-button-background-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-positive-secondary-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-button-background-positive-tertiary-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-negative-secondary-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-button-background-negative-tertiary-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-contrast-secondary-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-contrast-tertiary-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-positive-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-negative-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-contrast-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-background-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #20262b;\n  --magritte-color-component-button-background-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #20262b00;\n  --magritte-color-component-button-background-state-neutral-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-state-neutral-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-button-background-state-neutral-secondary-focused-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-button-background-state-neutral-tertiary-hovered-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-tertiary-pressed-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-state-neutral-tertiary-focused-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-state-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-button-background-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-background-state-accent-focused-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-background-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-button-background-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #e7f2ff;\n  --magritte-color-component-button-background-state-accent-secondary-focused-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-button-background-state-accent-tertiary-hovered-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-button-background-state-accent-tertiary-pressed-v${major}-${minor}-${patch}: #e7f2ff00;\n  --magritte-color-component-button-background-state-accent-tertiary-focused-v${major}-${minor}-${patch}: #e7f2ff00;\n  --magritte-color-component-button-background-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-button-background-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-state-positive-focused-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-button-background-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-button-background-state-positive-secondary-focused-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-button-background-state-positive-tertiary-hovered-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-button-background-state-positive-tertiary-pressed-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-state-positive-tertiary-focused-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-button-background-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-state-negative-focused-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-button-background-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-button-background-state-negative-secondary-focused-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-button-background-state-negative-tertiary-hovered-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-button-background-state-negative-tertiary-pressed-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-state-negative-tertiary-focused-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-state-contrast-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-button-background-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-state-contrast-focused-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-button-background-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-contrast-secondary-focused-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-contrast-tertiary-hovered-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-button-background-state-contrast-tertiary-pressed-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-background-state-contrast-tertiary-focused-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-text-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-text-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-text-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-accent-secondary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-text-accent-tertiary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-text-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-text-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-text-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-text-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-text-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-icon-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-icon-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-accent-secondary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-icon-accent-tertiary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-icon-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-icon-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-icon-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-icon-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-icon-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-counter-text-neutral-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-neutral-secondary-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-button-counter-text-neutral-tertiary-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-button-counter-text-accent-v${major}-${minor}-${patch}: #a4c9fe;\n  --magritte-color-component-button-counter-text-accent-secondary-v${major}-${minor}-${patch}: #5e9eff;\n  --magritte-color-component-button-counter-text-accent-tertiary-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-button-counter-text-positive-v${major}-${minor}-${patch}: #c1edcc;\n  --magritte-color-component-button-counter-text-positive-secondary-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-button-counter-text-positive-tertiary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-button-counter-text-negative-v${major}-${minor}-${patch}: #ffdad1;\n  --magritte-color-component-button-counter-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-button-counter-text-negative-tertiary-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-button-counter-text-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-counter-text-contrast-secondary-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-button-counter-text-contrast-tertiary-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-button-counter-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-contrast-disabled-v${major}-${minor}-${patch}: #3f4850;\n  --magritte-color-component-button-counter-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #3f4850;\n  --magritte-color-component-button-counter-text-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-loader-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-accent-secondary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-loader-icon-accent-tertiary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-button-loader-icon-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-loader-icon-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-loader-icon-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-loader-icon-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-loader-icon-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-state-neutral-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-contrast-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-button-text-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-button-icon-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-stroke-state-neutral-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-button-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-button-stroke-state-positive-focused-accessible-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-component-button-stroke-state-contrast-focused-accessible-v${major}-${minor}-${patch}: #a4c9fe7a;\n  --magritte-color-component-button-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-switch-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-switch-background-container-checked-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-switch-background-container-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-switch-background-toggle-checked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-toggle-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-container-checked-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-switch-background-state-container-checked-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-switch-background-state-container-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-switch-background-state-container-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-switch-background-state-toggle-checked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-checked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-container-checked-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-component-switch-background-state-container-unchecked-disabled-v${major}-${minor}-${patch}: #dce3eb7a;\n  --magritte-color-component-switch-background-state-toggle-checked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-icon-state-toggle-checked-disabled-v${major}-${minor}-${patch}: #0ea6587a;\n  --magritte-color-component-switch-icon-state-toggle-unchecked-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-tabs-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-tabs-background-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tabs-background-unselected-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-unselected-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-unselected-focused-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-selected-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tabs-background-state-unselected-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-tabs-text-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tabs-text-unselected-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-tabs-counter-text-selected-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-tabs-counter-text-unselected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-input-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-input-stroke-state-field-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-stroke-state-field-focused-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-input-stroke-state-field-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-input-stroke-state-field-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-background-field-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-focused-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-invalid-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-stroke-field-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-text-label-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-placeholder-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-limit-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-description-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-value-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-input-text-state-label-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-input-text-state-placeholder-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-limit-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-description-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-value-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-invalid-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-label-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-label-focused-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-component-input-text-state-label-invalid-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-input-text-state-placeholder-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-placeholder-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-placeholder-invalid-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-invalid-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-input-text-state-description-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-description-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-description-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-input-counter-background-content-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-input-counter-background-state-content-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-input-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-input-counter-text-content-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-input-icon-content-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-grip-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-icon-state-content-hovered-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-grip-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-icon-state-content-focused-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-content-invalid-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-cell-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-cell-background-state-hovered-v${major}-${minor}-${patch}: #eef1f7cc;\n  --magritte-color-component-cell-background-state-pressed-v${major}-${minor}-${patch}: #dce3ebcc;\n  --magritte-color-component-divider-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-link-text-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-link-text-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-link-text-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-text-accent-secondary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-text-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-warning-secondary-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-link-text-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-link-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-link-text-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-link-text-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-link-text-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-link-text-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-link-text-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-neutral-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-neutral-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-neutral-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-accent-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-accent-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-accent-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-positive-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-positive-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-positive-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-warning-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-warning-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-warning-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-negative-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-negative-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-negative-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-contrast-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-contrast-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-contrast-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-link-icon-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-link-icon-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-icon-accent-secondary-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-icon-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-warning-secondary-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-link-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-link-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-link-icon-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-link-icon-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-link-icon-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-link-icon-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-link-icon-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-link-icon-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-neutral-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-neutral-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-neutral-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-accent-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-accent-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-accent-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-positive-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-positive-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-positive-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-warning-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-warning-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-warning-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-negative-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-negative-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-negative-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-contrast-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-contrast-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-contrast-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-counter-background-content-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-counter-background-attention-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-counter-background-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-counter-background-neutral-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-counter-background-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-background-state-content-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-attention-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-contrast-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-text-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-attention-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-attention-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-counter-text-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-accent-secondary-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-component-counter-text-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-neutral-secondary-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-counter-text-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-counter-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-attention-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-attention-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-tag-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tag-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-tag-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-tag-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-component-tag-background-special-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-component-tag-background-state-neutral-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-component-tag-background-state-positive-disabled-v${major}-${minor}-${patch}: #e8f9ec7a;\n  --magritte-color-component-tag-background-state-negative-disabled-v${major}-${minor}-${patch}: #fef2ef7a;\n  --magritte-color-component-tag-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff3e67a;\n  --magritte-color-component-tag-background-state-special-disabled-v${major}-${minor}-${patch}: #f7f4ff7a;\n  --magritte-color-component-tag-text-neutral-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-tag-text-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-tag-text-negative-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-tag-text-warning-v${major}-${minor}-${patch}: #ac6600;\n  --magritte-color-component-tag-text-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-tag-text-state-neutral-disabled-v${major}-${minor}-${patch}: #5e6c777a;\n  --magritte-color-component-tag-text-state-positive-disabled-v${major}-${minor}-${patch}: #00984f7a;\n  --magritte-color-component-tag-text-state-negative-disabled-v${major}-${minor}-${patch}: #ee47357a;\n  --magritte-color-component-tag-text-state-warning-disabled-v${major}-${minor}-${patch}: #ac66007a;\n  --magritte-color-component-tag-text-state-special-disabled-v${major}-${minor}-${patch}: #883be97a;\n  --magritte-color-component-tag-icon-neutral-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-tag-icon-positive-v${major}-${minor}-${patch}: #0d8847;\n  --magritte-color-component-tag-icon-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-tag-icon-warning-v${major}-${minor}-${patch}: #9c5b03;\n  --magritte-color-component-tag-icon-special-v${major}-${minor}-${patch}: #7a34d3;\n  --magritte-color-component-tag-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #54606a7a;\n  --magritte-color-component-tag-icon-state-positive-disabled-v${major}-${minor}-${patch}: #0d88477a;\n  --magritte-color-component-tag-icon-state-negative-disabled-v${major}-${minor}-${patch}: #d640307a;\n  --magritte-color-component-tag-icon-state-warning-disabled-v${major}-${minor}-${patch}: #9c5b037a;\n  --magritte-color-component-tag-icon-state-special-disabled-v${major}-${minor}-${patch}: #7a34d37a;\n  --magritte-color-component-tooltip-background-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tooltip-text-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tooltip-stroke-content-v${major}-${minor}-${patch}: #3B3B3B;\n  --magritte-color-component-tab-bar-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tab-bar-text-unselected-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-tab-bar-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tab-bar-icon-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tab-bar-icon-unselected-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-tab-bar-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-navigation-bar-text-title-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-navigation-bar-text-subtitle-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-navigation-bar-background-content-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-action-text-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-text-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-action-text-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-action-text-accent-secondary-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-action-text-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-text-positive-secondary-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-text-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-text-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-text-warning-secondary-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-text-contrast-secondary-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-text-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-action-text-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-action-text-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-text-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-action-text-state-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-action-text-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-action-text-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8cbbff;\n  --magritte-color-component-action-text-state-positive-pressed-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-text-state-positive-hovered-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-action-text-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-text-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-text-state-negative-pressed-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-text-state-negative-hovered-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-action-text-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-text-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-text-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-text-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-action-text-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-text-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-action-text-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-text-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-action-text-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-text-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-icon-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-icon-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-action-icon-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-action-icon-accent-secondary-v${major}-${minor}-${patch}: #8cbbff;\n  --magritte-color-component-action-icon-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-icon-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-icon-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-icon-negative-secondary-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-icon-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-icon-warning-secondary-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-icon-contrast-secondary-v${major}-${minor}-${patch}: #9E9E9E;\n  --magritte-color-component-action-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-action-icon-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-action-icon-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-icon-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-action-icon-state-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-action-icon-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-action-icon-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8cbbff;\n  --magritte-color-component-action-icon-state-positive-pressed-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-icon-state-positive-hovered-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-action-icon-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-icon-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-icon-state-negative-pressed-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-icon-state-negative-hovered-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-action-icon-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-icon-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-icon-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-icon-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-action-icon-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-icon-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-action-icon-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-action-icon-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-icon-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-neutral-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-positive-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-warning-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-contrast-focused-accessible-v${major}-${minor}-${patch}: #a4c9fe7a;\n  --magritte-color-component-action-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-neutral-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-accent-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-positive-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-warning-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-negative-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-contrast-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-neutral-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-accent-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-positive-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-warning-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-negative-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-contrast-secondary-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-neutral-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-neutral-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-accent-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-negative-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-negative-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-contrast-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-disabled-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-background-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-stroke-neutral-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-accent-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-negative-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-contrast-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-loader-icon-content-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-snackbar-background-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-snackbar-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-icon-positive-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-snackbar-icon-negative-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-snackbar-stroke-content-v${major}-${minor}-${patch}: #3B3B3B;\n  --magritte-color-component-snackbar-text-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-action-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-state-action-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-snackbar-text-state-action-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-state-action-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-bottom-sheet-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-bottom-sheet-grabber-content-v${major}-${minor}-${patch}: #bbc8d48f;\n  --magritte-color-component-drop-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-_overlay-background-content-v${major}-${minor}-${patch}: #20262b99;\n  --magritte-color-component-chips-background-checked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-background-unchecked-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-checked-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-background-unchecked-accent-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-chips-background-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-chips-background-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-background-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-state-checked-accent-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-chips-background-state-checked-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-background-state-checked-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #d1e4fe;\n  --magritte-color-component-chips-background-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-chips-background-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-text-checked-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-unchecked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-checked-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-unchecked-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-text-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-text-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-text-state-checked-accent-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-accent-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-text-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-text-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-text-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-chips-icon-checked-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-unchecked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-checked-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-unchecked-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-icon-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-icon-state-checked-accent-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-accent-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-icon-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-icon-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chips-icon-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-counter-text-checked-neutral-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-chips-counter-text-unchecked-neutral-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chips-counter-text-checked-accent-v${major}-${minor}-${patch}: #a4c9fe;\n  --magritte-color-component-chips-counter-text-unchecked-accent-v${major}-${minor}-${patch}: #5e9eff;\n  --magritte-color-component-chips-counter-text-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-counter-text-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-counter-text-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-counter-text-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-avatar-online-content-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-avatar-background-color-01-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-avatar-background-color-02-v${major}-${minor}-${patch}: #ff859f;\n  --magritte-color-component-avatar-background-color-03-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-avatar-background-color-04-v${major}-${minor}-${patch}: #e8c33d;\n  --magritte-color-component-avatar-background-color-05-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-avatar-background-color-06-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-avatar-background-color-07-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-avatar-background-color-08-v${major}-${minor}-${patch}: #50b5e8;\n  --magritte-color-component-avatar-background-color-09-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-avatar-text-letters-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-avatar-stroke-image-v${major}-${minor}-${patch}: #0000001f;\n  --magritte-color-component-avatar-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-swipe-button-background-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-swipe-button-background-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-swipe-button-background-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-swipe-button-background-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-swipe-button-background-warning-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-swipe-button-background-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-swipe-button-background-state-neutral-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-swipe-button-background-state-neutral-hovered-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-swipe-button-background-state-accent-pressed-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-swipe-button-background-state-accent-hovered-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-component-swipe-button-background-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-swipe-button-background-state-positive-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-swipe-button-background-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-swipe-button-background-state-negative-hovered-v${major}-${minor}-${patch}: #fdb5a7;\n  --magritte-color-component-swipe-button-background-state-warning-pressed-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-swipe-button-background-state-warning-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-swipe-button-background-state-special-pressed-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-swipe-button-background-state-special-hovered-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-swipe-button-text-label-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-text-state-label-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-text-state-label-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-state-content-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-state-content-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-modal-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-breadcrumbs-text-primary-v${major}-${minor}-${patch}: #20262b;\n  --magritte-color-component-breadcrumbs-text-secondary-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-breadcrumbs-text-tertiary-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-breadcrumbs-text-state-secondary-hovered-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-breadcrumbs-text-state-secondary-pressed-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-progress-bar-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-progress-bar-foreground-accent-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-progress-bar-foreground-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-progress-bar-foreground-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-dot-pages-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-dot-pages-foreground-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-number-pages-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-item-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-number-pages-item-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-icon-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-number-pages-item-icon-state-content-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-icon-state-content-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-background-selected-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-unselected-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-number-pages-item-background-content-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-number-pages-item-background-state-unselected-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-state-content-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-state-unselected-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-item-background-state-content-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-time-picker-background-selection-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-date-picker-item-text-neutral-unselected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-neutral-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-date-picker-item-background-neutral-unselected-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-date-picker-item-background-neutral-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-special-primary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-date-picker-item-background-special-secondary-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-disabled-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-range-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-item-background-state-special-primary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-date-picker-item-background-state-special-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-range-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-background-primary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-table-background-state-primary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-table-background-state-primary-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-table-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-table-text-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-table-text-state-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-text-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-text-state-neutral-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-table-icon-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-table-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-secondary-tabs-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-secondary-tabs-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-secondary-tabs-indicator-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-counter-text-selected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-secondary-tabs-counter-text-unselected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-segmented-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-segmented-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-segmented-background-content-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-segmented-item-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-segmented-item-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-unselected-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-segmented-item-icon-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-background-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-segmented-item-background-unselected-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-form-label-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-form-label-text-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-counter-content-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-form-label-counter-state-content-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-skeleton-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-scrollable-container-fade-content-v${major}-${minor}-${patch}: linear-gradient(0deg, #00000000 0%, #000000 100%);\n  --magritte-color-component-chat-bubble-background-incoming-v${major}-${minor}-${patch}: #F8F8F8;\n  --magritte-color-component-chat-bubble-background-outgoing-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-background-bot-v${major}-${minor}-${patch}: #f9f7ff;\n  --magritte-color-component-chat-bubble-border-incoming-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-chat-bubble-border-outgoing-v${major}-${minor}-${patch}: #0d63e3;\n  --magritte-color-component-chat-bubble-border-bot-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-border-image-v${major}-${minor}-${patch}: #0000001a;\n  --magritte-color-component-chat-bubble-snippet-background-incoming-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-chat-bubble-snippet-background-outgoing-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-chat-bubble-snippet-background-bot-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-snippet-line-incoming-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-snippet-line-outgoing-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-chat-bubble-snippet-line-bot-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-chat-bubble-attach-background-incoming-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-attach-background-outgoing-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-chat-bubble-attach-background-bot-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-component-chat-bubble-attach-icon-incoming-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chat-bubble-attach-icon-outgoing-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-attach-icon-bot-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chat-bubble-button-background-content-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-button-background-state-content-hovered-v${major}-${minor}-${patch}: #e7defe;\n  --magritte-color-component-chat-bubble-button-background-state-content-pressed-v${major}-${minor}-${patch}: #e7defe;\n  --magritte-color-component-chat-bubble-button-background-state-content-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-chat-bubble-button-text-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-text-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chat-bubble-button-icon-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-icon-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chat-bubble-button-counter-text-content-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-chat-bubble-button-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-chat-bubble-button-loader-icon-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-service-button-background-apple-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-apple-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-yandex-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-yandex-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-vk-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-vk-secondary-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-mail-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-mail-secondary-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-ok-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-ok-secondary-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-tinkoff-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-tinkoff-secondary-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-google-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-google-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-esia-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-esia-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-more-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-more-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-apple-hovered-v${major}-${minor}-${patch}: #2A333B;\n  --magritte-color-component-service-button-background-state-apple-pressed-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-state-apple-focused-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-state-apple-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-apple-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-apple-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-yandex-hovered-v${major}-${minor}-${patch}: #E3391A;\n  --magritte-color-component-service-button-background-state-yandex-pressed-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-state-yandex-focused-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-state-yandex-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-yandex-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-yandex-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-vk-hovered-v${major}-${minor}-${patch}: #006BE5;\n  --magritte-color-component-service-button-background-state-vk-pressed-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-state-vk-focused-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-state-vk-secondary-hovered-v${major}-${minor}-${patch}: #CFD9E5;\n  --magritte-color-component-service-button-background-state-vk-secondary-pressed-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-state-vk-secondary-focused-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-state-mail-hovered-v${major}-${minor}-${patch}: #E58E00;\n  --magritte-color-component-service-button-background-state-mail-pressed-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-state-mail-focused-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-state-mail-secondary-hovered-v${major}-${minor}-${patch}: #E5D8C3;\n  --magritte-color-component-service-button-background-state-mail-secondary-pressed-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-state-mail-secondary-focused-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-state-ok-hovered-v${major}-${minor}-${patch}: #D9742C;\n  --magritte-color-component-service-button-background-state-ok-pressed-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-state-ok-focused-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-state-ok-secondary-hovered-v${major}-${minor}-${patch}: #E3D6CD;\n  --magritte-color-component-service-button-background-state-ok-secondary-pressed-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-state-ok-secondary-focused-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-state-tinkoff-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-tinkoff-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-tinkoff-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-hovered-v${major}-${minor}-${patch}: #E0DAAD;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-pressed-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-focused-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-state-google-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-google-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-google-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-esia-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-esia-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-more-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-more-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-text-apple-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-yandex-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-vk-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-mail-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-ok-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-google-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-esia-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-tinkoff-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-more-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-apple-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-apple-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-yandex-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-yandex-secondary-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-icon-vk-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-vk-secondary-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-icon-mail-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-mail-secondary-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-icon-ok-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-ok-secondary-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-icon-google-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-google-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-esia-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-esia-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-tinkoff-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-tinkoff-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-more-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-more-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-checkable-card-background-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-checked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-tone-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-unchecked-tone-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-tone-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-checked-tone-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-checked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-stroke-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-card-stroke-checked-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-checked-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-card-stroke-state-checked-pressed-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-card-stroke-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-checkable-background-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-checked-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-checkable-background-state-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-checked-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-background-state-checked-pressed-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-background-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-stroke-checked-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-checkable-stroke-state-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-checked-hovered-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-stroke-state-checked-pressed-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-checkable-stroke-state-unchecked-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-stroke-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-checkable-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-checkable-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-checkable-icon-checked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-icon-state-unchecked-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-checkable-icon-state-checked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-icon-state-checked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-gradient-visualisation-fill-1-v${major}-${minor}-${patch}: linear-gradient(0deg, #d6403000 0%, #d64030 100%);\n  --magritte-gradient-visualisation-fill-2-v${major}-${minor}-${patch}: linear-gradient(0deg, #0d884700 0%, #0d8847 100%);\n  --magritte-gradient-visualisation-fill-3-v${major}-${minor}-${patch}: linear-gradient(0deg, #0070ff00 0%, #0070ff 100%);\n  --magritte-gradient-visualisation-fill-4-v${major}-${minor}-${patch}: linear-gradient(0deg, #9054ea00 0%, #9054ea 100%);\n  --magritte-gradient-visualisation-fill-5-v${major}-${minor}-${patch}: linear-gradient(0deg, #ac660000 0%, #ac6600 100%);\n  --magritte-gradient-visualisation-fill-6-v${major}-${minor}-${patch}: linear-gradient(0deg, #6a788500 0%, #6a7885 100%);\n  --magritte-gradient-component-modal-overlay-v${major}-${minor}-${patch}: linear-gradient(180deg, #00000000 0%, #0000007a 100%);\n  --magritte-shadow-level-3-color-v${major}-${minor}-${patch}: #7090b052;\n  --magritte-shadow-level-3-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-3-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-3-y-v${major}-${minor}-${patch}: 12px;\n  --magritte-shadow-level-3-blur-v${major}-${minor}-${patch}: 24px;\n  --magritte-shadow-level-3-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-2-color-v${major}-${minor}-${patch}: #7090b03d;\n  --magritte-shadow-level-2-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-2-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-2-y-v${major}-${minor}-${patch}: 8px;\n  --magritte-shadow-level-2-blur-v${major}-${minor}-${patch}: 16px;\n  --magritte-shadow-level-2-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-1-color-v${major}-${minor}-${patch}: #7090b029;\n  --magritte-shadow-level-1-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-1-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-1-y-v${major}-${minor}-${patch}: 4px;\n  --magritte-shadow-level-1-blur-v${major}-${minor}-${patch}: 12px;\n  --magritte-shadow-level-1-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-y-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-blur-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-color-v${major}-${minor}-${patch}: #00000000;\n  --magritte-shadow-level-0-type-v${major}-${minor}-${patch}: dropShadow;\n}`;\n\n    return { tokensString, themeClassName: 'magritte-hh-day-theme' };\n};\n","export default (tokensVersion: string): { tokensString: string; themeClassName: string } => {\n    const [major, minor, patch] = tokensVersion.split('.');\n    const tokensString = `\n.magritte-zp-day-theme {\n  --magritte-color-background-primary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-tertiary-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-background-accent-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-background-accent-heavy-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-positive-heavy-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-negative-heavy-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-warning-heavy-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-background-special-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-special-heavy-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-background-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-background-body-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-background-state-primary-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-background-state-secondary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-secondary-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-secondary-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-background-state-accent-hovered-v${major}-${minor}-${patch}: #D8DBDE;\n  --magritte-color-background-state-accent-pressed-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-background-state-accent-disabled-v${major}-${minor}-${patch}: #f1f4f77a;\n  --magritte-color-background-state-positive-hovered-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-state-positive-pressed-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-background-state-positive-disabled-v${major}-${minor}-${patch}: #e8f9ec7a;\n  --magritte-color-background-state-negative-hovered-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-state-negative-pressed-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-background-state-negative-disabled-v${major}-${minor}-${patch}: #fef2ef7a;\n  --magritte-color-background-state-warning-hovered-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-state-warning-pressed-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff3e67a;\n  --magritte-color-background-state-special-hovered-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-state-special-pressed-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-background-state-special-disabled-v${major}-${minor}-${patch}: #f7f4ff7a;\n  --magritte-color-background-state-tertiary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-tertiary-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-background-state-tertiary-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-background-state-accent-heavy-hovered-v${major}-${minor}-${patch}: #82ACC9;\n  --magritte-color-background-state-accent-heavy-pressed-v${major}-${minor}-${patch}: #82ACC9;\n  --magritte-color-background-state-accent-heavy-disabled-v${major}-${minor}-${patch}: #7195af7a;\n  --magritte-color-background-state-positive-heavy-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-background-state-positive-heavy-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-background-state-positive-heavy-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-background-state-negative-heavy-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-background-state-negative-heavy-pressed-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-background-state-negative-heavy-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-background-state-warning-heavy-hovered-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-background-state-warning-heavy-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-background-state-warning-heavy-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-background-state-special-heavy-hovered-v${major}-${minor}-${patch}: #c4acf9;\n  --magritte-color-background-state-special-heavy-pressed-v${major}-${minor}-${patch}: #c4acf9;\n  --magritte-color-background-state-special-heavy-disabled-v${major}-${minor}-${patch}: #b99bf87a;\n  --magritte-color-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-stroke-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-stroke-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-stroke-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-stroke-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-stroke-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #dce3eb7a;\n  --magritte-color-stroke-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-stroke-state-accent-disabled-v${major}-${minor}-${patch}: #7195af7a;\n  --magritte-color-stroke-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-stroke-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-stroke-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-stroke-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-stroke-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-stroke-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-stroke-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-stroke-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-text-primary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-text-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-text-tertiary-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-text-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-text-accent-secondary-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-text-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-text-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-text-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-text-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-text-warning-secondary-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-text-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-text-special-secondary-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-text-state-primary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-text-state-primary-disabled-v${major}-${minor}-${patch}: #0000007a;\n  --magritte-color-text-state-secondary-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-text-state-secondary-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-text-state-tertiary-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-text-state-tertiary-disabled-v${major}-${minor}-${patch}: #aabbca7a;\n  --magritte-color-text-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-text-state-accent-disabled-v${major}-${minor}-${patch}: #7195af7a;\n  --magritte-color-text-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8FA7B8;\n  --magritte-color-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #a3bfd27a;\n  --magritte-color-text-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-text-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-text-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #83d99c7a;\n  --magritte-color-text-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-text-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-text-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #ff8a777a;\n  --magritte-color-text-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-text-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-text-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-text-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #ff99007a;\n  --magritte-color-text-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-text-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-text-state-special-secondary-hovered-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-text-state-special-secondary-disabled-v${major}-${minor}-${patch}: #a579f47a;\n  --magritte-color-text-state-contrast-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-text-state-contrast-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-text-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #ffffff3d;\n  --magritte-color-icon-primary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-icon-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-icon-tertiary-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-icon-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-icon-accent-secondary-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-icon-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-icon-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-icon-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-icon-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-icon-warning-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-icon-warning-secondary-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-icon-special-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-icon-special-secondary-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-icon-state-primary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-icon-state-primary-disabled-v${major}-${minor}-${patch}: #0000007a;\n  --magritte-color-icon-state-secondary-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-icon-state-secondary-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-icon-state-tertiary-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-icon-state-tertiary-disabled-v${major}-${minor}-${patch}: #aabbca7a;\n  --magritte-color-icon-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-icon-state-accent-disabled-v${major}-${minor}-${patch}: #7195af7a;\n  --magritte-color-icon-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8FA7B8;\n  --magritte-color-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #a3bfd27a;\n  --magritte-color-icon-state-positive-hovered-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-icon-state-positive-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-icon-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #83d99c7a;\n  --magritte-color-icon-state-negative-hovered-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-icon-state-negative-disabled-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-icon-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #ff8a777a;\n  --magritte-color-icon-state-warning-hovered-v${major}-${minor}-${patch}: #d17c09;\n  --magritte-color-icon-state-warning-disabled-v${major}-${minor}-${patch}: #d17c097a;\n  --magritte-color-icon-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-icon-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #ff99007a;\n  --magritte-color-icon-state-special-hovered-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-icon-state-special-disabled-v${major}-${minor}-${patch}: #9054ea7a;\n  --magritte-color-icon-state-special-secondary-hovered-v${major}-${minor}-${patch}: #a579f4;\n  --magritte-color-icon-state-special-secondary-disabled-v${major}-${minor}-${patch}: #a579f47a;\n  --magritte-color-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #ffffff7a;\n  --magritte-color-icon-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #ffffff3d;\n  --magritte-color-visualisation-line-1-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-visualisation-line-2-v${major}-${minor}-${patch}: #0d8847;\n  --magritte-color-visualisation-line-3-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-visualisation-line-4-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-visualisation-line-5-v${major}-${minor}-${patch}: #ac6600;\n  --magritte-color-visualisation-line-6-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-visualisation-point-1-v${major}-${minor}-${patch}: #ac3225;\n  --magritte-color-visualisation-point-2-v${major}-${minor}-${patch}: #026d36;\n  --magritte-color-visualisation-point-3-v${major}-${minor}-${patch}: #0058cc;\n  --magritte-color-visualisation-point-4-v${major}-${minor}-${patch}: #7a34d3;\n  --magritte-color-visualisation-point-5-v${major}-${minor}-${patch}: #8a5100;\n  --magritte-color-visualisation-point-6-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-card-background-blank-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-card-background-extra-1-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-card-background-extra-2-v${major}-${minor}-${patch}: #FFF1F3;\n  --magritte-color-component-card-background-extra-3-v${major}-${minor}-${patch}: #E8F7FE;\n  --magritte-color-component-card-background-extra-4-v${major}-${minor}-${patch}: #FDF4D7;\n  --magritte-color-component-card-background-extra-5-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-component-card-background-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-card-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-card-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-component-card-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-neutral-inner-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-phantom-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-phantom-inner-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-inner-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-neutral-inner-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-card-stroke-state-phantom-hovered-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-pressed-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-inner-hovered-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-phantom-inner-pressed-v${major}-${minor}-${patch}: #ccd5df00;\n  --magritte-color-component-card-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-state-neutral-inner-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-card-stroke-state-phantom-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-phantom-inner-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-card-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-card-background-state-blank-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-blank-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-blank-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-card-background-state-neutral-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-card-background-state-neutral-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-card-background-state-neutral-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-card-background-state-extra-1-hovered-v${major}-${minor}-${patch}: #e7f2ff;\n  --magritte-color-component-card-background-state-extra-1-pressed-v${major}-${minor}-${patch}: #e7f2ff;\n  --magritte-color-component-card-background-state-extra-1-disabled-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-card-background-state-extra-2-hovered-v${major}-${minor}-${patch}: #feecef;\n  --magritte-color-component-card-background-state-extra-2-pressed-v${major}-${minor}-${patch}: #feecef;\n  --magritte-color-component-card-background-state-extra-2-disabled-v${major}-${minor}-${patch}: #fff5f7;\n  --magritte-color-component-card-background-state-extra-3-hovered-v${major}-${minor}-${patch}: #e0f4fe;\n  --magritte-color-component-card-background-state-extra-3-pressed-v${major}-${minor}-${patch}: #e0f4fe;\n  --magritte-color-component-card-background-state-extra-3-disabled-v${major}-${minor}-${patch}: #eff9fe;\n  --magritte-color-component-card-background-state-extra-4-hovered-v${major}-${minor}-${patch}: #fdf0c7;\n  --magritte-color-component-card-background-state-extra-4-pressed-v${major}-${minor}-${patch}: #fdf0c7;\n  --magritte-color-component-card-background-state-extra-4-disabled-v${major}-${minor}-${patch}: #fdf8e7;\n  --magritte-color-component-card-background-state-extra-5-hovered-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-card-background-state-extra-5-pressed-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-card-background-state-extra-5-disabled-v${major}-${minor}-${patch}: #f9f7ff;\n  --magritte-color-component-card-background-state-contrast-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-contrast-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-contrast-disabled-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-card-background-state-positive-hovered-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-card-background-state-positive-pressed-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-card-background-state-positive-disabled-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-card-background-state-negative-hovered-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-card-background-state-negative-pressed-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-card-background-state-negative-disabled-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-card-background-state-warning-hovered-v${major}-${minor}-${patch}: #ffeedd;\n  --magritte-color-component-card-background-state-warning-pressed-v${major}-${minor}-${patch}: #ffeedd;\n  --magritte-color-component-card-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff7ee;\n  --magritte-color-component-button-background-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-neutral-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-button-background-neutral-tertiary-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-background-accent-secondary-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-component-button-background-accent-tertiary-v${major}-${minor}-${patch}: #f1f4f700;\n  --magritte-color-component-button-background-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-positive-secondary-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-button-background-positive-tertiary-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-negative-secondary-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-button-background-negative-tertiary-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-contrast-secondary-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-contrast-tertiary-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-positive-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-negative-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-button-background-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #f4f6fb00;\n  --magritte-color-component-button-background-state-contrast-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-background-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #20262b;\n  --magritte-color-component-button-background-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #20262b00;\n  --magritte-color-component-button-background-state-neutral-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-state-neutral-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-background-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-button-background-state-neutral-secondary-focused-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-button-background-state-neutral-tertiary-hovered-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-button-background-state-neutral-tertiary-pressed-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-state-neutral-tertiary-focused-v${major}-${minor}-${patch}: #eef1f700;\n  --magritte-color-component-button-background-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-button-background-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-background-state-accent-focused-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-background-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #D8DBDE;\n  --magritte-color-component-button-background-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-component-button-background-state-accent-secondary-focused-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-component-button-background-state-accent-tertiary-hovered-v${major}-${minor}-${patch}: #D8DBDE;\n  --magritte-color-component-button-background-state-accent-tertiary-pressed-v${major}-${minor}-${patch}: #f1f4f700;\n  --magritte-color-component-button-background-state-accent-tertiary-focused-v${major}-${minor}-${patch}: #f1f4f700;\n  --magritte-color-component-button-background-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-button-background-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-state-positive-focused-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-background-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-button-background-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #e0f6e5;\n  --magritte-color-component-button-background-state-positive-secondary-focused-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-button-background-state-positive-tertiary-hovered-v${major}-${minor}-${patch}: #f0fbf3;\n  --magritte-color-component-button-background-state-positive-tertiary-pressed-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-state-positive-tertiary-focused-v${major}-${minor}-${patch}: #e0f6e500;\n  --magritte-color-component-button-background-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-button-background-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-state-negative-focused-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-background-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-button-background-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #fdede9;\n  --magritte-color-component-button-background-state-negative-secondary-focused-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-button-background-state-negative-tertiary-hovered-v${major}-${minor}-${patch}: #fff6f4;\n  --magritte-color-component-button-background-state-negative-tertiary-pressed-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-state-negative-tertiary-focused-v${major}-${minor}-${patch}: #fdede900;\n  --magritte-color-component-button-background-state-contrast-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-button-background-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-state-contrast-focused-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-background-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-button-background-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-contrast-secondary-focused-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-background-state-contrast-tertiary-hovered-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-button-background-state-contrast-tertiary-pressed-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-background-state-contrast-tertiary-focused-v${major}-${minor}-${patch}: #343c4300;\n  --magritte-color-component-button-text-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-text-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-text-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-text-accent-tertiary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-text-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-text-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-text-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-text-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-text-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-icon-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-icon-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-icon-accent-tertiary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-icon-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-icon-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-icon-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-icon-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-icon-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-icon-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-counter-text-neutral-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-neutral-secondary-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-button-counter-text-neutral-tertiary-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-button-counter-text-accent-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-component-button-counter-text-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-counter-text-accent-tertiary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-counter-text-positive-v${major}-${minor}-${patch}: #c1edcc;\n  --magritte-color-component-button-counter-text-positive-secondary-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-button-counter-text-positive-tertiary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-button-counter-text-negative-v${major}-${minor}-${patch}: #ffdad1;\n  --magritte-color-component-button-counter-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-button-counter-text-negative-tertiary-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-button-counter-text-contrast-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-button-counter-text-contrast-secondary-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-button-counter-text-contrast-tertiary-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-button-counter-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-button-counter-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-button-counter-text-state-contrast-disabled-v${major}-${minor}-${patch}: #3f4850;\n  --magritte-color-component-button-counter-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #3f4850;\n  --magritte-color-component-button-counter-text-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-loader-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-neutral-secondary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-neutral-tertiary-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-loader-icon-accent-tertiary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-button-loader-icon-positive-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-loader-icon-positive-tertiary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-button-loader-icon-negative-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-loader-icon-negative-tertiary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-button-loader-icon-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-button-loader-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-loader-icon-contrast-tertiary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-button-text-state-neutral-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-text-state-contrast-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-button-text-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-neutral-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-accent-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-positive-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-negative-tertiary-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-button-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-button-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-button-icon-state-contrast-tertiary-disabled-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-button-stroke-state-neutral-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-button-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-button-stroke-state-positive-focused-accessible-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-component-button-stroke-state-contrast-focused-accessible-v${major}-${minor}-${patch}: #a4c9fe7a;\n  --magritte-color-component-button-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-switch-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-switch-background-container-checked-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-switch-background-container-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-switch-background-toggle-checked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-toggle-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-container-checked-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-switch-background-state-container-checked-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-switch-background-state-container-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-switch-background-state-container-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-switch-background-state-toggle-checked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-checked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-container-checked-disabled-v${major}-${minor}-${patch}: #0dc2677a;\n  --magritte-color-component-switch-background-state-container-unchecked-disabled-v${major}-${minor}-${patch}: #dce3eb7a;\n  --magritte-color-component-switch-background-state-toggle-checked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-background-state-toggle-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-switch-icon-state-toggle-checked-disabled-v${major}-${minor}-${patch}: #0ea6587a;\n  --magritte-color-component-switch-icon-state-toggle-unchecked-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-tabs-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-tabs-background-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tabs-background-unselected-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-unselected-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-unselected-focused-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tabs-background-state-selected-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tabs-background-state-unselected-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-tabs-text-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tabs-text-unselected-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-tabs-counter-text-selected-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-tabs-counter-text-unselected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-input-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-input-stroke-state-field-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-stroke-state-field-focused-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-input-stroke-state-field-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-input-stroke-state-field-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-background-field-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-focused-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-invalid-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-input-background-state-field-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-stroke-field-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-input-text-label-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-placeholder-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-limit-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-description-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-value-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-input-text-state-label-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-input-text-state-placeholder-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-limit-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-description-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-value-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-focused-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-value-invalid-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-input-text-state-label-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-text-state-label-focused-v${major}-${minor}-${patch}: #468ffd;\n  --magritte-color-component-input-text-state-label-invalid-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-input-text-state-placeholder-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-placeholder-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-placeholder-invalid-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-limit-invalid-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-input-text-state-description-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-description-focused-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-input-text-state-description-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-input-counter-background-content-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-input-counter-background-state-content-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-input-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-input-counter-text-content-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-input-icon-content-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-grip-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-icon-state-content-hovered-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-grip-hovered-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-input-icon-state-content-focused-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-content-invalid-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-input-icon-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-cell-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-cell-background-state-hovered-v${major}-${minor}-${patch}: #eef1f7cc;\n  --magritte-color-component-cell-background-state-pressed-v${major}-${minor}-${patch}: #dce3ebcc;\n  --magritte-color-component-divider-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-link-text-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-link-text-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-link-text-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-text-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-text-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-warning-secondary-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-link-text-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-link-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-link-text-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-link-text-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-link-text-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-text-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-link-text-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-link-text-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-text-state-neutral-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-neutral-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-neutral-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-accent-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-accent-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-accent-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-positive-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-positive-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-positive-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-warning-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-warning-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-warning-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-negative-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-negative-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-negative-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-contrast-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-text-state-contrast-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-text-state-contrast-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-link-icon-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-link-icon-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-icon-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-icon-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-positive-secondary-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-warning-secondary-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-negative-secondary-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-link-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-link-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-link-icon-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-link-icon-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-positive-hovered-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-link-icon-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-link-icon-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-link-icon-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-link-icon-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-negative-hovered-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-link-icon-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-link-icon-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-link-icon-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-link-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-link-icon-state-neutral-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-neutral-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-neutral-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-accent-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-accent-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-accent-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-positive-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-positive-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-positive-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-warning-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-warning-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-warning-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-negative-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-negative-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-negative-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-contrast-visited-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-icon-state-contrast-visited-hovered-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-link-icon-state-contrast-visited-pressed-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-link-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-counter-background-content-v${major}-${minor}-${patch}: #FFE000;\n  --magritte-color-component-counter-background-attention-v${major}-${minor}-${patch}: #FFE000;\n  --magritte-color-component-counter-background-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-counter-background-neutral-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-counter-background-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-background-state-content-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-attention-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-background-state-contrast-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-counter-text-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-counter-text-attention-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-counter-text-attention-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-counter-text-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-accent-secondary-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-counter-text-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-neutral-secondary-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-counter-text-contrast-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-counter-text-contrast-secondary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-attention-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-attention-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-counter-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-tag-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-tag-background-positive-v${major}-${minor}-${patch}: #E8F9EC;\n  --magritte-color-component-tag-background-negative-v${major}-${minor}-${patch}: #FEF2EF;\n  --magritte-color-component-tag-background-warning-v${major}-${minor}-${patch}: #FFF3E6;\n  --magritte-color-component-tag-background-special-v${major}-${minor}-${patch}: #F7F4FF;\n  --magritte-color-component-tag-background-state-neutral-disabled-v${major}-${minor}-${patch}: #f1f4f97a;\n  --magritte-color-component-tag-background-state-positive-disabled-v${major}-${minor}-${patch}: #e8f9ec7a;\n  --magritte-color-component-tag-background-state-negative-disabled-v${major}-${minor}-${patch}: #fef2ef7a;\n  --magritte-color-component-tag-background-state-warning-disabled-v${major}-${minor}-${patch}: #fff3e67a;\n  --magritte-color-component-tag-background-state-special-disabled-v${major}-${minor}-${patch}: #f7f4ff7a;\n  --magritte-color-component-tag-text-neutral-v${major}-${minor}-${patch}: #5e6c77;\n  --magritte-color-component-tag-text-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-tag-text-negative-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-tag-text-warning-v${major}-${minor}-${patch}: #ac6600;\n  --magritte-color-component-tag-text-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-tag-text-state-neutral-disabled-v${major}-${minor}-${patch}: #5e6c777a;\n  --magritte-color-component-tag-text-state-positive-disabled-v${major}-${minor}-${patch}: #00984f7a;\n  --magritte-color-component-tag-text-state-negative-disabled-v${major}-${minor}-${patch}: #ee47357a;\n  --magritte-color-component-tag-text-state-warning-disabled-v${major}-${minor}-${patch}: #ac66007a;\n  --magritte-color-component-tag-text-state-special-disabled-v${major}-${minor}-${patch}: #883be97a;\n  --magritte-color-component-tag-icon-neutral-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-tag-icon-positive-v${major}-${minor}-${patch}: #0d8847;\n  --magritte-color-component-tag-icon-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-tag-icon-warning-v${major}-${minor}-${patch}: #9c5b03;\n  --magritte-color-component-tag-icon-special-v${major}-${minor}-${patch}: #7a34d3;\n  --magritte-color-component-tag-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #54606a7a;\n  --magritte-color-component-tag-icon-state-positive-disabled-v${major}-${minor}-${patch}: #0d88477a;\n  --magritte-color-component-tag-icon-state-negative-disabled-v${major}-${minor}-${patch}: #d640307a;\n  --magritte-color-component-tag-icon-state-warning-disabled-v${major}-${minor}-${patch}: #9c5b037a;\n  --magritte-color-component-tag-icon-state-special-disabled-v${major}-${minor}-${patch}: #7a34d37a;\n  --magritte-color-component-tooltip-background-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tooltip-text-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tooltip-stroke-content-v${major}-${minor}-${patch}: #3B3B3B;\n  --magritte-color-component-tab-bar-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-tab-bar-text-unselected-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-tab-bar-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tab-bar-icon-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-tab-bar-icon-unselected-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-tab-bar-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-navigation-bar-text-title-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-navigation-bar-text-subtitle-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-navigation-bar-background-content-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-action-text-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-text-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-action-text-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-action-text-accent-secondary-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-component-action-text-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-text-positive-secondary-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-text-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-text-negative-secondary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-text-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-text-warning-secondary-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-text-contrast-secondary-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-text-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-text-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-text-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-action-text-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-action-text-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-text-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-action-text-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-action-text-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-component-action-text-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8FA7B8;\n  --magritte-color-component-action-text-state-positive-pressed-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-text-state-positive-hovered-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-action-text-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-text-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-text-state-negative-pressed-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-text-state-negative-hovered-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-action-text-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-text-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-text-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-text-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-action-text-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-text-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-action-text-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-text-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-action-text-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-text-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-icon-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-icon-neutral-secondary-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-action-icon-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-action-icon-accent-secondary-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-component-action-icon-positive-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-icon-positive-secondary-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-icon-negative-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-icon-negative-secondary-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-icon-warning-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-icon-warning-secondary-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-icon-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-icon-contrast-secondary-v${major}-${minor}-${patch}: #9E9E9E;\n  --magritte-color-component-action-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-positive-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-warning-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-negative-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-contrast-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-action-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #54606a;\n  --magritte-color-component-action-icon-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-action-icon-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-action-icon-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-action-icon-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-action-icon-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #A3BFD2;\n  --magritte-color-component-action-icon-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #8FA7B8;\n  --magritte-color-component-action-icon-state-positive-pressed-v${major}-${minor}-${patch}: #00984f;\n  --magritte-color-component-action-icon-state-positive-hovered-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-action-icon-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-action-icon-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-action-icon-state-negative-pressed-v${major}-${minor}-${patch}: #d64030;\n  --magritte-color-component-action-icon-state-negative-hovered-v${major}-${minor}-${patch}: #ee4735;\n  --magritte-color-component-action-icon-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-action-icon-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #ff9f8f;\n  --magritte-color-component-action-icon-state-warning-pressed-v${major}-${minor}-${patch}: #e38805;\n  --magritte-color-component-action-icon-state-warning-hovered-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-action-icon-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #ffa439;\n  --magritte-color-component-action-icon-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-action-icon-state-contrast-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-action-icon-state-contrast-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-action-icon-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-icon-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #ABABAB;\n  --magritte-color-component-action-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-neutral-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-positive-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-warning-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-action-stroke-state-contrast-focused-accessible-v${major}-${minor}-${patch}: #a4c9fe7a;\n  --magritte-color-component-action-stroke-state-neutral-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-neutral-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-neutral-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-accent-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-negative-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-hovered-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-pressed-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-state-contrast-disabled-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-background-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-accent-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-positive-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-warning-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-negative-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-contrast-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-neutral-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-accent-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-positive-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-warning-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-negative-secondary-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-contrast-secondary-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-neutral-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-neutral-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-accent-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-negative-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-action-background-state-negative-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-contrast-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-disabled-v${major}-${minor}-${patch}: #49545d;\n  --magritte-color-component-action-background-state-neutral-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-neutral-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-neutral-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-accent-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-positive-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-warning-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-negative-secondary-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-action-background-state-contrast-secondary-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-secondary-pressed-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-background-state-contrast-secondary-disabled-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-action-stroke-neutral-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-accent-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-negative-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-action-stroke-contrast-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-loader-icon-content-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-snackbar-background-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-snackbar-icon-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-icon-positive-v${major}-${minor}-${patch}: #5bcf83;\n  --magritte-color-component-snackbar-icon-negative-v${major}-${minor}-${patch}: #fe725f;\n  --magritte-color-component-snackbar-stroke-content-v${major}-${minor}-${patch}: #3B3B3B;\n  --magritte-color-component-snackbar-text-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-action-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-state-action-hovered-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-snackbar-text-state-action-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-snackbar-text-state-action-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-bottom-sheet-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-bottom-sheet-grabber-content-v${major}-${minor}-${patch}: #bbc8d48f;\n  --magritte-color-component-drop-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-_overlay-background-content-v${major}-${minor}-${patch}: #20262b99;\n  --magritte-color-component-chips-background-checked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-background-unchecked-neutral-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-checked-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-background-unchecked-accent-v${major}-${minor}-${patch}: #F1F4F7;\n  --magritte-color-component-chips-background-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-chips-background-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-background-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-background-state-checked-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-chips-background-state-checked-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-background-state-checked-accent-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-chips-background-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #d1e4fe;\n  --magritte-color-component-chips-background-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #EDF6FF;\n  --magritte-color-component-chips-background-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-chips-text-checked-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-unchecked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-checked-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-unchecked-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-text-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-text-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-text-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-text-state-checked-accent-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-accent-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-text-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-text-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-text-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-text-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-chips-icon-checked-neutral-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-unchecked-neutral-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-checked-accent-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-unchecked-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-icon-state-checked-neutral-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-neutral-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chips-icon-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-icon-state-checked-accent-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-accent-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chips-icon-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-icon-state-unchecked-accent-hovered-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-icon-state-unchecked-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-chips-icon-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-counter-text-checked-neutral-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-chips-counter-text-unchecked-neutral-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chips-counter-text-checked-accent-v${major}-${minor}-${patch}: #B8D5E8;\n  --magritte-color-component-chips-counter-text-unchecked-accent-v${major}-${minor}-${patch}: #98B7CC;\n  --magritte-color-component-chips-counter-text-state-checked-neutral-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-counter-text-state-unchecked-neutral-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-chips-counter-text-state-checked-accent-disabled-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-chips-counter-text-state-unchecked-accent-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-avatar-online-content-v${major}-${minor}-${patch}: #0ea658;\n  --magritte-color-component-avatar-background-color-01-v${major}-${minor}-${patch}: #96aabb;\n  --magritte-color-component-avatar-background-color-02-v${major}-${minor}-${patch}: #ff859f;\n  --magritte-color-component-avatar-background-color-03-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-avatar-background-color-04-v${major}-${minor}-${patch}: #e8c33d;\n  --magritte-color-component-avatar-background-color-05-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-avatar-background-color-06-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-avatar-background-color-07-v${major}-${minor}-${patch}: #76adfe;\n  --magritte-color-component-avatar-background-color-08-v${major}-${minor}-${patch}: #50b5e8;\n  --magritte-color-component-avatar-background-color-09-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-avatar-text-letters-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-avatar-stroke-image-v${major}-${minor}-${patch}: #0000001f;\n  --magritte-color-component-avatar-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-swipe-button-background-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-swipe-button-background-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-swipe-button-background-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-swipe-button-background-negative-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-swipe-button-background-warning-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-swipe-button-background-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-swipe-button-background-state-neutral-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-swipe-button-background-state-neutral-hovered-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-swipe-button-background-state-accent-pressed-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-swipe-button-background-state-accent-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-swipe-button-background-state-positive-pressed-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-swipe-button-background-state-positive-hovered-v${major}-${minor}-${patch}: #83d99c;\n  --magritte-color-component-swipe-button-background-state-negative-pressed-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-swipe-button-background-state-negative-hovered-v${major}-${minor}-${patch}: #fdb5a7;\n  --magritte-color-component-swipe-button-background-state-warning-pressed-v${major}-${minor}-${patch}: #ff9900;\n  --magritte-color-component-swipe-button-background-state-warning-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-swipe-button-background-state-special-pressed-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-swipe-button-background-state-special-hovered-v${major}-${minor}-${patch}: #af8bf5;\n  --magritte-color-component-swipe-button-text-label-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-text-state-label-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-text-state-label-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-state-content-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-swipe-button-icon-state-content-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-modal-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-breadcrumbs-text-primary-v${major}-${minor}-${patch}: #20262b;\n  --magritte-color-component-breadcrumbs-text-secondary-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-breadcrumbs-text-tertiary-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-breadcrumbs-text-state-secondary-hovered-v${major}-${minor}-${patch}: #6a7885;\n  --magritte-color-component-breadcrumbs-text-state-secondary-pressed-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-progress-bar-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-progress-bar-foreground-accent-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-progress-bar-foreground-positive-v${major}-${minor}-${patch}: #0dc267;\n  --magritte-color-component-progress-bar-foreground-special-v${major}-${minor}-${patch}: #883be9;\n  --magritte-color-component-dot-pages-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-dot-pages-foreground-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-background-content-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-number-pages-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-item-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-number-pages-item-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-icon-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-number-pages-item-icon-state-content-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-icon-state-content-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-number-pages-item-background-selected-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-unselected-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-number-pages-item-background-content-v${major}-${minor}-${patch}: #dce3eb00;\n  --magritte-color-component-number-pages-item-background-state-unselected-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-state-content-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-number-pages-item-background-state-unselected-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-item-background-state-content-pressed-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-number-pages-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-time-picker-background-selection-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-date-picker-item-text-neutral-unselected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-text-contrast-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-neutral-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-stroke-neutral-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-date-picker-item-background-neutral-unselected-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-date-picker-item-background-neutral-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-special-primary-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-date-picker-item-background-special-secondary-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-state-neutral-unselected-disabled-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-hovered-v${major}-${minor}-${patch}: #343c43;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-date-picker-item-background-state-neutral-selected-range-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-date-picker-item-background-state-special-primary-hovered-v${major}-${minor}-${patch}: #ff8a77;\n  --magritte-color-component-date-picker-item-background-state-special-secondary-hovered-v${major}-${minor}-${patch}: #fdb972;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-unselected-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-date-picker-item-text-state-neutral-selected-range-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-background-primary-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-table-background-state-primary-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-table-background-state-primary-pressed-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-table-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-table-text-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-table-text-state-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-text-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-text-state-neutral-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-table-icon-neutral-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-table-icon-state-neutral-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-icon-state-neutral-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-table-icon-state-neutral-disabled-v${major}-${minor}-${patch}: #7686947a;\n  --magritte-color-component-secondary-tabs-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-secondary-tabs-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-secondary-tabs-indicator-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-secondary-tabs-counter-text-selected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-secondary-tabs-counter-text-unselected-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-segmented-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-segmented-stroke-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-segmented-background-content-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-segmented-item-text-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-text-unselected-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-segmented-item-text-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-text-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-selected-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-unselected-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-segmented-item-icon-state-unselected-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-icon-state-unselected-pressed-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-segmented-item-background-selected-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-segmented-item-background-unselected-v${major}-${minor}-${patch}: #ffffff00;\n  --magritte-color-component-form-label-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-form-label-text-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-text-state-content-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-content-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-hovered-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-pressed-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-icon-state-content-disabled-v${major}-${minor}-${patch}: #768694;\n  --magritte-color-component-form-label-counter-content-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-form-label-counter-state-content-disabled-v${major}-${minor}-${patch}: #AABBCA;\n  --magritte-color-component-skeleton-background-content-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-scrollable-container-fade-content-v${major}-${minor}-${patch}: linear-gradient(0deg, #00000000 0%, #000000 100%);\n  --magritte-color-component-chat-bubble-background-incoming-v${major}-${minor}-${patch}: #F8F8F8;\n  --magritte-color-component-chat-bubble-background-outgoing-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-background-bot-v${major}-${minor}-${patch}: #f9f7ff;\n  --magritte-color-component-chat-bubble-border-incoming-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-chat-bubble-border-outgoing-v${major}-${minor}-${patch}: #0d63e3;\n  --magritte-color-component-chat-bubble-border-bot-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-border-image-v${major}-${minor}-${patch}: #0000001a;\n  --magritte-color-component-chat-bubble-snippet-background-incoming-v${major}-${minor}-${patch}: #F1F1F1;\n  --magritte-color-component-chat-bubble-snippet-background-outgoing-v${major}-${minor}-${patch}: #2b7fff;\n  --magritte-color-component-chat-bubble-snippet-background-bot-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-snippet-line-incoming-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-snippet-line-outgoing-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-chat-bubble-snippet-line-bot-v${major}-${minor}-${patch}: #b99bf8;\n  --magritte-color-component-chat-bubble-attach-background-incoming-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-attach-background-outgoing-v${major}-${minor}-${patch}: #f3f9ff;\n  --magritte-color-component-chat-bubble-attach-background-bot-v${major}-${minor}-${patch}: #9054ea;\n  --magritte-color-component-chat-bubble-attach-icon-incoming-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chat-bubble-attach-icon-outgoing-v${major}-${minor}-${patch}: #0070ff;\n  --magritte-color-component-chat-bubble-attach-icon-bot-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-chat-bubble-button-background-content-v${major}-${minor}-${patch}: #f3eeff;\n  --magritte-color-component-chat-bubble-button-background-state-content-hovered-v${major}-${minor}-${patch}: #e7defe;\n  --magritte-color-component-chat-bubble-button-background-state-content-pressed-v${major}-${minor}-${patch}: #e7defe;\n  --magritte-color-component-chat-bubble-button-background-state-content-disabled-v${major}-${minor}-${patch}: #F4F6FB;\n  --magritte-color-component-chat-bubble-button-text-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-text-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chat-bubble-button-icon-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-icon-state-content-disabled-v${major}-${minor}-${patch}: #8293a2;\n  --magritte-color-component-chat-bubble-button-counter-text-content-v${major}-${minor}-${patch}: #8da0b0;\n  --magritte-color-component-chat-bubble-button-counter-text-state-content-disabled-v${major}-${minor}-${patch}: #BBC8D4;\n  --magritte-color-component-chat-bubble-button-loader-icon-content-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-chat-bubble-button-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-service-button-background-apple-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-apple-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-yandex-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-yandex-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-vk-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-vk-secondary-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-mail-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-mail-secondary-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-ok-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-ok-secondary-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-tinkoff-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-tinkoff-secondary-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-google-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-google-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-esia-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-esia-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-more-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-more-secondary-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-apple-hovered-v${major}-${minor}-${patch}: #2A333B;\n  --magritte-color-component-service-button-background-state-apple-pressed-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-state-apple-focused-v${major}-${minor}-${patch}: #171C20;\n  --magritte-color-component-service-button-background-state-apple-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-apple-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-apple-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-yandex-hovered-v${major}-${minor}-${patch}: #E3391A;\n  --magritte-color-component-service-button-background-state-yandex-pressed-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-state-yandex-focused-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-background-state-yandex-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-yandex-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-yandex-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-vk-hovered-v${major}-${minor}-${patch}: #006BE5;\n  --magritte-color-component-service-button-background-state-vk-pressed-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-state-vk-focused-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-background-state-vk-secondary-hovered-v${major}-${minor}-${patch}: #CFD9E5;\n  --magritte-color-component-service-button-background-state-vk-secondary-pressed-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-state-vk-secondary-focused-v${major}-${minor}-${patch}: #E6F1FF;\n  --magritte-color-component-service-button-background-state-mail-hovered-v${major}-${minor}-${patch}: #E58E00;\n  --magritte-color-component-service-button-background-state-mail-pressed-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-state-mail-focused-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-background-state-mail-secondary-hovered-v${major}-${minor}-${patch}: #E5D8C3;\n  --magritte-color-component-service-button-background-state-mail-secondary-pressed-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-state-mail-secondary-focused-v${major}-${minor}-${patch}: #FFF0D9;\n  --magritte-color-component-service-button-background-state-ok-hovered-v${major}-${minor}-${patch}: #D9742C;\n  --magritte-color-component-service-button-background-state-ok-pressed-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-state-ok-focused-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-background-state-ok-secondary-hovered-v${major}-${minor}-${patch}: #E3D6CD;\n  --magritte-color-component-service-button-background-state-ok-secondary-pressed-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-state-ok-secondary-focused-v${major}-${minor}-${patch}: #FDEFE4;\n  --magritte-color-component-service-button-background-state-tinkoff-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-tinkoff-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-tinkoff-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-hovered-v${major}-${minor}-${patch}: #E0DAAD;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-pressed-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-state-tinkoff-secondary-focused-v${major}-${minor}-${patch}: #FBF4C1;\n  --magritte-color-component-service-button-background-state-google-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-google-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-google-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-google-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-esia-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-esia-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-esia-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-more-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-secondary-hovered-v${major}-${minor}-${patch}: #DBDBDB;\n  --magritte-color-component-service-button-background-state-more-secondary-pressed-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-background-state-more-secondary-focused-v${major}-${minor}-${patch}: #F5F5F5;\n  --magritte-color-component-service-button-text-apple-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-yandex-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-vk-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-mail-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-ok-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-text-google-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-esia-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-tinkoff-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-text-more-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-apple-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-apple-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-yandex-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-yandex-secondary-v${major}-${minor}-${patch}: #fc3f1d;\n  --magritte-color-component-service-button-icon-vk-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-vk-secondary-v${major}-${minor}-${patch}: #0077ff;\n  --magritte-color-component-service-button-icon-mail-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-mail-secondary-v${major}-${minor}-${patch}: #ff9e00;\n  --magritte-color-component-service-button-icon-ok-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-service-button-icon-ok-secondary-v${major}-${minor}-${patch}: #f38231;\n  --magritte-color-component-service-button-icon-google-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-google-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-esia-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-esia-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-tinkoff-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-tinkoff-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-more-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-service-button-icon-more-secondary-v${major}-${minor}-${patch}: #0d1115;\n  --magritte-color-component-checkable-card-background-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-checked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-unchecked-tone-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-unchecked-tone-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-background-state-checked-tone-hovered-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-checked-tone-pressed-v${major}-${minor}-${patch}: #F1F4F9;\n  --magritte-color-component-checkable-card-background-state-checked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-card-stroke-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-card-stroke-checked-v${major}-${minor}-${patch}: #7195AF;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-checked-hovered-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-checkable-card-stroke-state-checked-pressed-v${major}-${minor}-${patch}: #618096;\n  --magritte-color-component-checkable-card-stroke-state-unchecked-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-card-stroke-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-card-stroke-state-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-checkable-background-unchecked-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-checked-v${major}-${minor}-${patch}: #FFE000;\n  --magritte-color-component-checkable-background-state-unchecked-hovered-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-unchecked-pressed-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-unchecked-disabled-v${major}-${minor}-${patch}: #ffffff;\n  --magritte-color-component-checkable-background-state-checked-hovered-v${major}-${minor}-${patch}: #CCB300;\n  --magritte-color-component-checkable-background-state-checked-pressed-v${major}-${minor}-${patch}: #CCB300;\n  --magritte-color-component-checkable-background-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-unchecked-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-stroke-checked-v${major}-${minor}-${patch}: #FFE000;\n  --magritte-color-component-checkable-stroke-state-unchecked-hovered-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-unchecked-pressed-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-checked-hovered-v${major}-${minor}-${patch}: #CCB300;\n  --magritte-color-component-checkable-stroke-state-checked-pressed-v${major}-${minor}-${patch}: #CCB300;\n  --magritte-color-component-checkable-stroke-state-unchecked-disabled-v${major}-${minor}-${patch}: #DCE3EB;\n  --magritte-color-component-checkable-stroke-state-checked-disabled-v${major}-${minor}-${patch}: #CCD5DF;\n  --magritte-color-component-checkable-stroke-state-invalid-v${major}-${minor}-${patch}: #ff4d3a;\n  --magritte-color-component-checkable-stroke-state-negative-focused-accessible-v${major}-${minor}-${patch}: #ff4d3a7a;\n  --magritte-color-component-checkable-stroke-state-accent-focused-accessible-v${major}-${minor}-${patch}: #0070ff7a;\n  --magritte-color-component-checkable-icon-checked-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-checkable-icon-state-unchecked-hovered-v${major}-${minor}-${patch}: #EEF1F7;\n  --magritte-color-component-checkable-icon-state-checked-hovered-v${major}-${minor}-${patch}: #000000;\n  --magritte-color-component-checkable-icon-state-checked-disabled-v${major}-${minor}-${patch}: #0000007a;\n  --magritte-gradient-visualisation-fill-1-v${major}-${minor}-${patch}: linear-gradient(0deg, #d6403000 0%, #d64030 100%);\n  --magritte-gradient-visualisation-fill-2-v${major}-${minor}-${patch}: linear-gradient(0deg, #0d884700 0%, #0d8847 100%);\n  --magritte-gradient-visualisation-fill-3-v${major}-${minor}-${patch}: linear-gradient(0deg, #0070ff00 0%, #0070ff 100%);\n  --magritte-gradient-visualisation-fill-4-v${major}-${minor}-${patch}: linear-gradient(0deg, #9054ea00 0%, #9054ea 100%);\n  --magritte-gradient-visualisation-fill-5-v${major}-${minor}-${patch}: linear-gradient(0deg, #ac660000 0%, #ac6600 100%);\n  --magritte-gradient-visualisation-fill-6-v${major}-${minor}-${patch}: linear-gradient(0deg, #6a788500 0%, #6a7885 100%);\n  --magritte-gradient-component-modal-overlay-v${major}-${minor}-${patch}: linear-gradient(180deg, #00000000 0%, #0000007a 100%);\n  --magritte-shadow-level-3-color-v${major}-${minor}-${patch}: #7090b052;\n  --magritte-shadow-level-3-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-3-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-3-y-v${major}-${minor}-${patch}: 12px;\n  --magritte-shadow-level-3-blur-v${major}-${minor}-${patch}: 24px;\n  --magritte-shadow-level-3-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-2-color-v${major}-${minor}-${patch}: #7090b03d;\n  --magritte-shadow-level-2-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-2-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-2-y-v${major}-${minor}-${patch}: 8px;\n  --magritte-shadow-level-2-blur-v${major}-${minor}-${patch}: 16px;\n  --magritte-shadow-level-2-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-1-color-v${major}-${minor}-${patch}: #7090b029;\n  --magritte-shadow-level-1-type-v${major}-${minor}-${patch}: dropShadow;\n  --magritte-shadow-level-1-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-1-y-v${major}-${minor}-${patch}: 4px;\n  --magritte-shadow-level-1-blur-v${major}-${minor}-${patch}: 12px;\n  --magritte-shadow-level-1-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-x-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-y-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-blur-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-spread-v${major}-${minor}-${patch}: 0px;\n  --magritte-shadow-level-0-color-v${major}-${minor}-${patch}: #00000000;\n  --magritte-shadow-level-0-type-v${major}-${minor}-${patch}: dropShadow;\n}`;\n\n    return { tokensString, themeClassName: 'magritte-zp-day-theme' };\n};\n","import { FC, PropsWithChildren } from 'react';\n\nimport { ThemeProvider } from '@hh.ru/magritte-ui';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport hhDayTheme from 'lux/themes/magritteHHDayTheme';\nimport zpDayTheme from 'lux/themes/magritteZPDayTheme';\n\nconst MagritteThemeProvider: FC<PropsWithChildren> = ({ children }) => {\n    const isZP = useIsZarplataPlatform();\n    const theme = isZP ? zpDayTheme : hhDayTheme;\n\n    return <ThemeProvider themeProducer={theme}>{children}</ThemeProvider>;\n};\n\nexport default MagritteThemeProvider;\n","import { useEffect, useRef, VFC } from 'react';\n\nimport notificationElementShown from '@hh.ru/analytics-js-events/build/xhh/common/notifications/notification_element_shown';\n\ninterface NotificationAnalyticsProps {\n    notificationName: string;\n    children: React.ReactNode;\n}\n\nconst NotificationAnalytics: VFC<NotificationAnalyticsProps> = ({ notificationName, children }) => {\n    const elementRef = useRef(null);\n    useEffect(() => {\n        if (elementRef.current) {\n            notificationElementShown(elementRef.current, { notificationName });\n        }\n    }, [notificationName]);\n    return <div ref={elementRef}>{children}</div>;\n};\n\nexport default NotificationAnalytics;\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst SimilarResumeForVacancies = ({ trls }) => `${trls[SimilarResumeForVacancies.trls.explanation]}`;\n\nSimilarResumeForVacancies.trls = {\n    explanation: 'novafilters.similarSavedSearch.explanation',\n};\n\nSimilarResumeForVacancies.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport const similarResumeForVacancies = {\n    Element: translation(SimilarResumeForVacancies),\n    kind: 'ok',\n    autoClose: true,\n    autoCloseDelay: 3000,\n};\n\nexport const SIMILAR_RESUME_FOR_VACANCIES = 'SIMILAR_RESUME_FOR_VACANCIES';\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Link, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\n\nimport { FAVORITE_ERROR } from 'lux/components/Notifications/vacancyFavoriteNotifyTypes';\nimport useFavorite from 'lux/hooks/useFavorite';\nimport { removeNotificationByTypeAction } from 'lux/models/notifications';\n\nconst AllowReplacement = ({ title, vacancyId, employerId }) => {\n    const { toggleIsFavoriteVacancy } = useFavorite({ cleanup: true, vacancyId, employerId });\n    const dispatch = useDispatch();\n\n    return (\n        <Link\n            kind={LinkKind.Tertiary}\n            appearance={LinkAppearance.Pseudo}\n            onClick={() => {\n                toggleIsFavoriteVacancy();\n                dispatch(removeNotificationByTypeAction([FAVORITE_ERROR]));\n            }}\n        >\n            {' '}\n            {title}\n        </Link>\n    );\n};\n\nAllowReplacement.propTypes = {\n    title: PropTypes.string.isRequired,\n    vacancyId: PropTypes.number.isRequired,\n    employerId: PropTypes.number.isRequired,\n};\n\nexport default AllowReplacement;\n","import PropTypes from 'prop-types';\n\nimport AllowReplacement from 'lux/components/VacancyFavorite/AllowReplacement';\nimport translation from 'lux/components/translation';\n\nconst Error = ({ trls, code, ...props }) => {\n    return (\n        <div>\n            {trls[Error.trls[code || 'genericError']]}\n            {code === 'limitExceededError' && <AllowReplacement title={trls[Error.trls.allowReplacement]} {...props} />}\n        </div>\n    );\n};\n\nError.trls = {\n    vacancyNotFoundError: 'vacancyToFavorite.error.vacancyNotFound',\n    vacancyNotAvailableError: 'vacancyToFavorite.error.vacancyNotAvailable',\n    vacancyNotVisibleError: 'vacancyToFavorite.error.vacancyNotVisible',\n    vacancyArchivedError: 'vacancyToFavorite.error.vacancyArchived',\n    vacancyAlreadyInFavoriteList: 'vacancyToFavorite.error.vacancyAlreadyInFavoriteList',\n    vacancyNotFoundInFavoriteList: 'vacancyToFavorite.error.vacancyNotFoundInFavoriteList',\n    genericError: 'error.500.tryagain',\n    limitExceededError: 'vacancyToFavorite.error.limitExceeded',\n    allowReplacement: 'vacancysearchresults.vacancy.favorite.error.limitexceeded.proceed',\n};\n\nError.propTypes = {\n    trls: PropTypes.object.isRequired,\n    code: PropTypes.string,\n};\n\nexport default {\n    Element: translation(Error),\n    kind: 'error',\n};\n","import PropTypes from 'prop-types';\n\nimport translation from 'lux/components/translation';\n\nconst Success = ({ trls }) => trls[Success.trls.content];\n\nSuccess.trls = {\n    content: 'vacancyToFavorite.success',\n};\n\nSuccess.propTypes = {\n    trls: PropTypes.object.isRequired,\n};\n\nexport default {\n    Element: translation(Success),\n    kind: 'ok',\n    autoClose: true,\n};\n","import {\n    JobSearchStatusAfterResponse,\n    JOB_SEARCH_STATUS_AFTER_RESPONSE,\n} from 'lux/components/VacancyResponseForm/JobSearchStatusNotification';\nimport { RESUME_AUTO_HIDE, ResumeAutoHide } from 'lux/components/VacancyResponseForm/ResumeAutoHideNotification';\nimport { VacancyResponse, VACANCY_RESPONSE } from 'lux/components/VacancyResponseForm/VacancyResponseNotification';\n\nimport {\n    accountDeleteResumesSendSuccess,\n    ACCOUNT_DELETE_RESUMES_SEND_SUCCESS,\n} from 'lux/components/Notifications/AccountDelete';\nimport { resendErrorNotification, RESEND_CODE_ERROR } from 'lux/components/Notifications/AccountLoginResendError';\nimport { ADD_AUTH_PHONE_SUCCESS, addAuthPhoneSuccess } from 'lux/components/Notifications/AddAuthPhoneSuccess';\nimport applicantJobSearchStatusSuccess, {\n    APPLICANT_JOB_SEARCH_STATUS_SUCCESS,\n} from 'lux/components/Notifications/ApplicantJobSearchStatusSuccess';\nimport { applicantNoCallAnswer, APPLICANT_NO_CALL_ANSWER } from 'lux/components/Notifications/ApplicantNoCallAnswer';\nimport {\n    resumeSaveError,\n    resumeSaveSuccess,\n    anonymousConversionSuccess,\n    anonymousConversionError,\n    resumeLimitExceededError,\n    RESUME_SAVE_ERROR,\n    RESUME_SAVE_SUCCESS,\n    ANONYMOUS_CONVERSION_SUCCESS,\n    ANONYMOUS_CONVERSION_ERROR,\n    RESUME_LIMIT_EXCEEDED_ERROR,\n} from 'lux/components/Notifications/ApplicantResumes';\nimport {\n    paymentFormError,\n    APPLICANT_SERVICE_PAYMENT_ERROR,\n} from 'lux/components/Notifications/ApplicantServicesPayment';\nimport ArchiveVacancyApplicantsFeedbackSuccess, {\n    ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS,\n} from 'lux/components/Notifications/ArchiveVacancyApplicantsFeedbackSuccess';\nimport {\n    ACCOUNT_DELETED_EMAIL,\n    authEmployerAccountDeletedEmail,\n    RESET_PASSWORD_EMAIL_SUCCESS,\n    resetPasswordEmailSuccess,\n} from 'lux/components/Notifications/AuthEmployer';\nimport {\n    CHANGE_TOPIC_ERROR_NO_FA,\n    CHANGE_TOPIC_ERROR,\n    changeTopicErrorNoQa,\n    changeTopicError,\n} from 'lux/components/Notifications/ChangeTopicError';\nimport chatikError, { CHATIK_ERROR } from 'lux/components/Notifications/ChatikError';\nimport {\n    SAVED_CLICKME_AUTOCAMPAIGN_INFO_ERROR,\n    savedClickmeAutoCampaignError,\n} from 'lux/components/Notifications/ClickmeAutoCampaign';\nimport defaultError, { DEFAULT_ERROR } from 'lux/components/Notifications/DefaultError';\nimport {\n    callTrackingDisableSuccess,\n    CALL_TRACKING_DISABLE_SUCCESS,\n    callTrackingAlreadyDisabled,\n    CALL_TRACKING_ALREADY_DISABLED,\n} from 'lux/components/Notifications/DisableCallTracking';\nimport { emailTemplateSaveSuccess, EMAIL_TEMPLATE_SAVE_SUCCESS } from 'lux/components/Notifications/EmailTemplate';\nimport {\n    employerAccountSwitchError,\n    EMPLOYER_ACCOUNT_SWITCH_ERROR,\n} from 'lux/components/Notifications/EmployerAccountSwitcher';\nimport { employerAddressDeleted, EMPLOYER_ADDRESS_DELETED } from 'lux/components/Notifications/EmployerAddresses';\nimport { AUCTION_ERROR, auctionError } from 'lux/components/Notifications/EmployerAuction';\nimport {\n    employerCartsDelayedCartInfo,\n    EMPLOYER_CARTS_DELAYED_CART_INFO,\n} from 'lux/components/Notifications/EmployerCarts';\nimport {\n    EMPLOYER_CHANGE_PASSWORD_SUCCESS,\n    employerChangePasswordSuccess,\n} from 'lux/components/Notifications/EmployerChangePassword';\nimport {\n    employerConstructorPictureFileTooLarge,\n    EMPLOYER_CONSTRUCTOR_PICTURE_FILE_TOO_LARGE,\n    employerConstructorUnsupportedPictureFileFormat,\n    EMPLOYER_CONSTRUCTOR_UNSUPPORTED_PICTURE_FILE_FORMAT,\n    employerConstructorInvalidPictureSize,\n    EMPLOYER_CONSTRUCTOR_INVALID_PICTURE_SIZE,\n    employerConstructorSaveTemplateOk,\n    EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_OK,\n    employerConstructorSaveTemplateError,\n    EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_ERROR,\n    employerConstructorImageUploaded,\n    EMPLOYER_CONSTRUCTOR_IMAGE_UPLOADED,\n    employerConstructorImageResized,\n    EMPLOYER_CONSTRUCTOR_IMAGE_RESIZED,\n    employerConstructorResponseTimeOut,\n    EMPLOYER_CONSTRUCTOR_RESPONSE_TIMEOUT,\n    employerConstructorEditForbiddenError,\n    EMPLOYER_CONSTRUCTOR_EDIT_FORBIDDEN,\n} from 'lux/components/Notifications/EmployerConstructor';\nimport {\n    deletedTemplateOk,\n    EMPLOYER_DOCUMENT_DELETED_TEMPLATE_DELETE,\n    uploadedTemplateOk,\n    EMPLOYER_DOCUMENT_UPLOADED_TEMPLATE_OK,\n    maxFilesWarningTemplate,\n    EMPLOYER_DOCUMENT_MAX_FILES_TEMPLATE,\n    maxLengthFileTemplate,\n    EMPLOYER_DOCUMENT_MAX_FILE_LENGTH_TEMPLATE,\n    uploadError,\n    EMPLOYER_DOCUMENT_UPLOAD_ERROR,\n    deleteError,\n    EMPLOYER_DOCUMENT_DELETE_ERROR,\n} from 'lux/components/Notifications/EmployerDocuments';\nimport {\n    EMPLOYER_FINANCIAL_DOCUMENTS_ORDER_ORIGINALS_SUCCESS,\n    orderOriginalsSuccess,\n} from 'lux/components/Notifications/EmployerFinancialDocuments';\nimport {\n    MCPChangedSuccess,\n    MCP_CHANGED_SUCCESS,\n    MCPChangeSudoForbidden,\n    MCP_CHANGE_SUDO_FORBIDDEN,\n} from 'lux/components/Notifications/EmployerManagersPage';\nimport {\n    employerLogoFileTooLarge,\n    EMPLOYER_LOGO_FILE_TOO_LARGE,\n    employerLogoUnsupportedFileFormat,\n    EMPLOYER_LOGO_UNSUPPORTED_FILE_FORMAT,\n    employLogoUploadSuccess,\n    EMPLOYER_LOGO_UPLOAD_SUCCESS,\n    employLogoUploadTimeout,\n    EMPLOYER_LOGO_UPLOAD_TIMEOUT,\n    employerSidebarAutosearchSaved,\n    EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED,\n    employerSidebarAutosearchSavedApplicant,\n    EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED_APPLICANT,\n    employerSidebarAutosearchTooMany,\n    EMPLOYER_SIDEBAR_AUTOSEARCH_TOO_MANY,\n} from 'lux/components/Notifications/EmployerSidebar';\nimport {\n    EMPLOYER_SIDEBAR_SAVE_SUCCESS,\n    employerSaveSidebarSuccess,\n    EMPLOYER_SIDEBAR_SAVE_ERROR,\n    employerSaveSidebarError,\n} from 'lux/components/Notifications/EmployerSidebarEdit';\nimport {\n    SAVE_EMPLOYER_DESCRIPTION_ERROR,\n    employerSaveDescriptionError,\n    SAVE_EMPLOYER_DESCRIPTION_SUCCESS,\n    employerSaveDescriptionSuccess,\n} from 'lux/components/Notifications/EmployerSimpleEdit';\nimport { createDivisionSuccess, DIVISION_CREATED } from 'lux/components/Notifications/EmployerStructure';\nimport {\n    archiveVacancySuccess,\n    ARCHIVE_VACANCY_SUCCESS,\n    vacancyUpgradeSuccess,\n    VACANCY_UPGRADE_SUCCESS,\n    vacancyUpdateSuccess,\n    VACANCY_UPDATE_SUCCESS,\n    autoProlongationPurchaseSuccess,\n    AUTO_PROLONGATION_PURCHASE_SUCCESS,\n    autoProlongationPurchaseSuccesses,\n    AUTO_PROLONGATION_PURCHASE_SUCCESSES,\n    vacancyAutoProlongationSuccess,\n    VACANCY_AUTO_PROLONGATION_SUCCESS,\n    vacancyAutoProlongationSuccesses,\n    VACANCY_AUTO_PROLONGATION_SUCCESSES,\n    vacancyAutoProlongationError,\n    VACANCY_AUTO_PROLONGATION_ERROR,\n    vacancyAutoProlongationErrors,\n    VACANCY_AUTO_PROLONGATION_ERRORS,\n    vacancyDraftDeleteSuccess,\n    VACANCY_DRAFT_DELETE_SUCCESS,\n    vacancyDraftMoveSuccess,\n    VACANCY_DRAFT_MOVE_SUCCESS,\n    vacancyDraftDeleteError,\n    VACANCY_DRAFT_DELETE_ERROR,\n    emptyFiltersResult,\n    EMPTY_FILTERS_RESULT,\n    autoUpdatesScheduled,\n    AUTO_UPDATES_SCHEDULED,\n    autoUpdatesRemoved,\n    AUTO_UPDATES_REMOVED,\n    EDIT_AUTO_UPDATE_SCHEDULE,\n    autoUpdatesEdited,\n    AUTO_PUBLICATION_DISABLED,\n    autoPublicationDisabled,\n    CANCEL_SCHEDULED_PUBLICATION_SUCCESS,\n    cancelScheduledPublicationSuccess,\n    TOGGLE_VACANCY_OPTION_SUCCESS,\n    toggleVacancyOptionSuccess,\n    TOGGLE_VACANCY_OPTION_ERROR,\n    toggleVacancyOptionError,\n    CHANGE_VACANCY_VISIBILITY_SUCCESS,\n    changeVacancyVisibilitySuccess,\n} from 'lux/components/Notifications/EmployerVacancies';\nimport {\n    draftMultiPublicationOk,\n    DRAFT_MULTI_PUBLICATION_OK,\n} from 'lux/components/Notifications/EmployerVacanciesDraft';\nimport { hiringPlanUpdateSuccess, HIRING_PLAN_UPDATE_SUCCESS } from 'lux/components/Notifications/HiringPlan';\nimport {\n    showResumeViewHistoryErrorFetchingNotification,\n    RESUME_VIEW_HISTORY_ERROR_FETCHING,\n} from 'lux/components/Notifications/HistoryErrorFetchingNotification';\nimport { INVALID_DATE_INTERVAL, invalidDateInterval } from 'lux/components/Notifications/InvalidDateInterval';\nimport { INVOICE_PAYMENT_FORM_ERROR, invoicePaymentFormError } from 'lux/components/Notifications/InvoicePaymentForm';\nimport { MAIL_TO_LIMIT_EXCEEDED, mailtoLimitExceeded } from 'lux/components/Notifications/MailtoLimitExceeded';\nimport { managerDeleteSuccess, MANAGER_DELETE_SUCCESS } from 'lux/components/Notifications/ManagerDeleteSuccess';\nimport {\n    MANAGER_EDIT_SUCCESS,\n    managerEditSuccess,\n    MANAGER_FORM_ERROR,\n    managerFormError,\n} from 'lux/components/Notifications/ManagerForm';\nimport networkError, { NETWORK_ERROR } from 'lux/components/Notifications/NetworkError';\nimport {\n    personalManagerRatingSuccess,\n    PERSONAL_MANAGER_RATING_SUCCESS,\n} from 'lux/components/Notifications/PersonalManager';\nimport { politenessIndexNotification, POLITENESS_INDEX } from 'lux/components/Notifications/PolitenessIndex';\nimport {\n    PRICE_ADD_CONTACTS_MAX_CONTACTS_AMOUNT_EXCEEDED,\n    priceAddContactsMaxContactsAmountExceeded,\n} from 'lux/components/Notifications/PriceAddContacts';\nimport {\n    PRICE_BRANDING_SUBMIT_APPLICATION_SUCCESS,\n    submitApplicationSuccess,\n    PRICE_BRANDING_SUBMIT_APPLICATION_DUPLICATE,\n    submitApplicationDuplicate,\n} from 'lux/components/Notifications/PriceBranding';\nimport {\n    addToCartErrorNotification,\n    ADD_TO_CART_ERROR_NOTIFICATION,\n} from 'lux/components/Notifications/PriceCartError';\nimport {\n    PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_DUPLICATE,\n    PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_SUCCESS,\n    submitClickmeProductsApplicationDuplicate,\n    submitClickmeProductsApplicationSuccess,\n} from 'lux/components/Notifications/PriceClickmeProducts';\nimport {\n    PRICE_DBACCESS_PRODUCTS_NOT_FOUND,\n    priceDBAccessProductsNotFound,\n} from 'lux/components/Notifications/PriceDBAccess';\nimport {\n    PURCHASE_NOTIFICATION_NOTICE,\n    purchaseNotificationNotice,\n} from 'lux/components/Notifications/PurchaseNotification';\nimport {\n    changeActivationTypeError,\n    EMPLOYER_INVOICE_PURCHASE_CHANGE_ACTIVATION_TYPE_ERROR,\n} from 'lux/components/Notifications/PurchaseServices';\nimport regionClarification, { REGION_CLARIFICATION } from 'lux/components/Notifications/RegionClarification';\nimport { BATCHED_RESPONSES_READ, batchedResponsesRead } from 'lux/components/Notifications/ResponsesActions';\nimport {\n    resumeBatchUpdateSuccess,\n    RESUME_BATCH_UPDATE_SUCCESS,\n    resumeBatchUpdateError,\n    RESUME_BATCH_UPDATE_ERROR,\n} from 'lux/components/Notifications/ResumeBatchUpdate';\nimport {\n    completionBlacklistSuccess,\n    completionBlacklistError,\n    completionDefaultError,\n    COMPLETION_BLACK_LIST_SUCCESS,\n    COMPLETION_BLACK_LIST_ERROR,\n    COMPLETION_DEFAULT_ERROR,\n} from 'lux/components/Notifications/ResumeComplaint';\nimport resumeContactsError, { RESUME_CONTACTS_ERROR } from 'lux/components/Notifications/ResumeContactsError';\nimport resumeCreationScenario, { RESUME_CREATION_SCENARIO } from 'lux/components/Notifications/ResumeCreationScenario';\nimport {\n    nameIsEmptyError,\n    NAME_IS_EMPTY,\n    nameIsTooLongError,\n    NAME_IS_TOO_LONG,\n    FOLDER_DELETE_ERROR,\n    folderDeleteError,\n} from 'lux/components/Notifications/ResumeFolders';\nimport {\n    maxResumeLimit,\n    resumeFormVisibilityError,\n    MAX_RESUME_LIMIT,\n    RESUME_FORM_VISIBILITY_ERROR,\n} from 'lux/components/Notifications/ResumeForm';\nimport {\n    resumeFormArtifactsEditErrorNotification,\n    RESUME_FORM_ARTIFACTS_EDIT_ERROR_NOTIFICATION,\n} from 'lux/components/Notifications/ResumeFormEditError';\nimport { HISTORY_LOAD_ERROR, negotiationsHistoryError } from 'lux/components/Notifications/ResumeSidebar';\nimport {\n    contactInformationViewErrorMessage,\n    CONTACT_INFORMATION_VIEW_ERROR_MESSAGE,\n    contactInformationViewInfoMessage,\n    CONTACT_INFORMATION_VIEW_INFO_MESSAGE,\n    contactInformationViewQuotaExceeded,\n    CONTACT_INFORMATION_VIEW_QUOTA_EXCEEDED,\n    contactInformationViewResumeCountryMismatch,\n    CONTACT_INFORMATION_VIEW_RESUME_COUNTRY_MISMATCH,\n    contactInformationViewResumeContentIsTooLarge,\n    CONTACT_INFORMATION_VIEW_RESUME_CONTENT_IS_TOO_LARGE,\n    resumeViewModerationCorrectedMessage,\n    RESUME_VIEW_MODERATION_CORRECTED_MESSAGE,\n    resumeCommentEditMessage,\n    RESUME_COMMENT_EDIT_MESSAGE,\n    resumeCommentAddMessage,\n    RESUME_COMMENT_ADD_MESSAGE,\n    resumeCommentAdded,\n    RESUME_COMMENT_ADDED,\n} from 'lux/components/Notifications/ResumeView';\nimport {\n    TALANTIX_RESUME_IMPORT_FAILED,\n    TALANTIX_RESUME_IMPORTED_PROMO,\n    TALANTIX_RESUME_IMPORTED,\n    talantixResumeImported,\n    talantixResumeImportFailed,\n    talalantixResumeImportedPromo,\n} from 'lux/components/Notifications/ResumeViewHeader';\nimport {\n    SEARCH_PUBLICATION_EDIT_SUCCESS,\n    searchPublicationEditSuccess,\n    SEARCH_PUBLICATION_EDIT_ERROR,\n    searchPublicationEditError,\n} from 'lux/components/Notifications/SearchPublicationSettings';\nimport {\n    SIMILAR_RESUME_FOR_VACANCIES,\n    similarResumeForVacancies,\n} from 'lux/components/Notifications/SimilarResumeForVacancies';\nimport smsError, { SMS_ERROR } from 'lux/components/Notifications/SmsError';\nimport { subscribeFormSuccess, SUBSCRIBE_FORM_SUCCESS } from 'lux/components/Notifications/SubscribeForm';\nimport {\n    targetEmployerMarkedReadError,\n    TARGET_EMPLOYER_MARKED_READ,\n} from 'lux/components/Notifications/TargetEmployerResumes';\nimport { vacancyActionErrorNotification, VACANCY_ACTION_ERROR } from 'lux/components/Notifications/VacancyActionError';\nimport {\n    SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY,\n    saveSuccessfullyAuctionModalNotification,\n} from 'lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification';\nimport {\n    draftLoadOk,\n    VACANCY_CREATE_DRAFT_LOAD_OK,\n    draftLoadError,\n    VACANCY_CREATE_DRAFT_LOAD_ERROR,\n    templateLoadOk,\n    VACANCY_CREATE_TEMPLATE_LOAD_OK,\n    templateLoadError,\n    VACANCY_CREATE_TEMPLATE_LOAD_ERROR,\n    vacancySubmitGenericError,\n    VACANCY_CREATE_SUBMIT_GENERIC_ERROR,\n    draftSaveOk,\n    VACANCY_CREATE_DRAFT_SAVE_OK,\n    draftSaveError,\n    VACANCY_CREATE_DRAFT_SAVE_ERROR,\n    vacancySubmitDuplicateError,\n    VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR,\n    vacancySubmitPermissionError,\n    VACANCY_CREATE_SUBMIT_PERMISSION_ERROR,\n    billingSudoSpendMoneyError,\n    VACANCY_CREATE_BILLING_SUDO_SPEND_MONEY_ERROR,\n} from 'lux/components/Notifications/VacancyCreate';\nimport favoriteError from 'lux/components/Notifications/VacancyFavoriteError';\nimport favoriteSuccess from 'lux/components/Notifications/VacancyFavoriteSuccess';\nimport ApplicantResponseAbort, { APPLICANT_RESPONSE_ABORT } from 'lux/components/Notifications/VacancyResponseAbort';\nimport ApplicantResponseError, { APPLICANT_RESPONSE_ERROR } from 'lux/components/Notifications/VacancyResponseError';\nimport { DISCARD_CANDIDATES, discardCandidates } from 'lux/components/Notifications/VacancyResponses';\nimport BrokenVacancyResponseFilters, {\n    FILTERS_CAN_NOT_BE_DISPLAYED,\n} from 'lux/components/Notifications/VacancyResponsesFiltersForm';\nimport {\n    EMAIL_VERIFICATION_WAS_SENT_AGAIN,\n    EMAIL_VERIFICATION_WAS_SENT_AGAIN_ERROR,\n    EMAIL_VERIFICATION_WAS_SENT_AGAIN_TOO_OFTEN,\n    emailVerificationSend,\n    emailVerificationSendError,\n} from 'lux/components/Notifications/VacancySavedSearch';\nimport {\n    vacancySearchItemContactsError,\n    VACANCY_SEARCH_ITEM_CONTACTS_ERROR,\n} from 'lux/components/Notifications/VacancySearchItemContactsError';\nimport {\n    vacancySavedSearchSubscriptionError,\n    vacancySavedSearchSubscriptionWrongEmail,\n    vacancySavedSearchSubscriptionSuccessApplicant,\n    vacancySavedSearchSubscriptionSuccessAnonymous,\n    vacancySavedSearchSubscriptionAuthorization,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_WRONG_EMAIL,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_APPLICANT,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_ANONYMOUS,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_AUTHORIZATION,\n    vacancySavedSearchSubscriptionSuccessFromButton,\n    VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON,\n} from 'lux/components/Notifications/VacancySearchSubscriptions';\nimport {\n    VACANCY_PUBLISHED,\n    vacancyPublished,\n    VACANCY_RESTORED_TO_ARCHIVE,\n    vacancyRestoredToArchive,\n    VACANCY_ERROR_MESSAGE,\n    vacancyErrorMessage,\n    vacancyBlacklistVacancyLimitError,\n    VACANCY_BLACKLIST_VACANCY_LIMIT_ERROR,\n    vacancyBlacklistEmployerLimitError,\n    VACANCY_BLACKLIST_EMPLOYER_LIMIT_ERROR,\n    VACANCY_SCHEDULED,\n    vacancyScheduled,\n} from 'lux/components/Notifications/VacancyView';\nimport { vacancyViewsCount, VACANCY_VIEW_COUNT } from 'lux/components/Notifications/VacancyViewsCount';\nimport { VIDEO_INTERVIEW_NOTIFICATIONS } from 'lux/components/Notifications/VideoInterviewModal';\nimport {\n    videoInterviewSearchModalEnable,\n    VIDEO_INTERVIEW_SEARCH_MODAL_ENABLE,\n} from 'lux/components/Notifications/VideoInterviewSearchModal';\nimport {\n    VR_REPORT_ERROR,\n    VR_REPORT_EMPTY,\n    vrVacancyReportError,\n    vrVacancyEmptyError,\n} from 'lux/components/Notifications/VrVacancies';\nimport { FAVORITE_ERROR, FAVORITE_SUCCESS } from 'lux/components/Notifications/vacancyFavoriteNotifyTypes';\n\nexport default {\n    [FAVORITE_SUCCESS]: favoriteSuccess,\n    [FAVORITE_ERROR]: favoriteError,\n    [APPLICANT_RESPONSE_ERROR]: ApplicantResponseError,\n    [APPLICANT_RESPONSE_ABORT]: ApplicantResponseAbort,\n    [ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS]: ArchiveVacancyApplicantsFeedbackSuccess,\n    [FILTERS_CAN_NOT_BE_DISPLAYED]: BrokenVacancyResponseFilters,\n    [BATCHED_RESPONSES_READ]: batchedResponsesRead,\n    [VR_REPORT_ERROR]: vrVacancyReportError,\n    [VR_REPORT_EMPTY]: vrVacancyEmptyError,\n    [HISTORY_LOAD_ERROR]: negotiationsHistoryError,\n    [RESUME_AUTO_HIDE]: ResumeAutoHide,\n    [RESUME_SAVE_ERROR]: resumeSaveError,\n    [RESUME_SAVE_SUCCESS]: resumeSaveSuccess,\n    [DISCARD_CANDIDATES]: discardCandidates,\n    [RESUME_LIMIT_EXCEEDED_ERROR]: resumeLimitExceededError,\n    [RESUME_CONTACTS_ERROR]: resumeContactsError,\n    [RESUME_BATCH_UPDATE_SUCCESS]: resumeBatchUpdateSuccess,\n    [RESUME_BATCH_UPDATE_ERROR]: resumeBatchUpdateError,\n    [MAX_RESUME_LIMIT]: maxResumeLimit,\n    [SUBSCRIBE_FORM_SUCCESS]: subscribeFormSuccess,\n    [RESUME_FORM_VISIBILITY_ERROR]: resumeFormVisibilityError,\n    [ANONYMOUS_CONVERSION_SUCCESS]: anonymousConversionSuccess,\n    [ANONYMOUS_CONVERSION_ERROR]: anonymousConversionError,\n    [CONTACT_INFORMATION_VIEW_ERROR_MESSAGE]: contactInformationViewErrorMessage,\n    [CONTACT_INFORMATION_VIEW_INFO_MESSAGE]: contactInformationViewInfoMessage,\n    [CONTACT_INFORMATION_VIEW_QUOTA_EXCEEDED]: contactInformationViewQuotaExceeded,\n    [CONTACT_INFORMATION_VIEW_RESUME_COUNTRY_MISMATCH]: contactInformationViewResumeCountryMismatch,\n    [CONTACT_INFORMATION_VIEW_RESUME_CONTENT_IS_TOO_LARGE]: contactInformationViewResumeContentIsTooLarge,\n    [RESUME_VIEW_MODERATION_CORRECTED_MESSAGE]: resumeViewModerationCorrectedMessage,\n    [RESUME_COMMENT_EDIT_MESSAGE]: resumeCommentEditMessage,\n    [RESUME_COMMENT_ADD_MESSAGE]: resumeCommentAddMessage,\n    [RESUME_COMMENT_ADDED]: resumeCommentAdded,\n    [DEFAULT_ERROR]: defaultError,\n    [NETWORK_ERROR]: networkError,\n    [CHATIK_ERROR]: chatikError,\n    [RESUME_CREATION_SCENARIO]: resumeCreationScenario,\n    [EMAIL_VERIFICATION_WAS_SENT_AGAIN]: emailVerificationSend,\n    [EMAIL_VERIFICATION_WAS_SENT_AGAIN_ERROR]: emailVerificationSendError,\n    [EMAIL_VERIFICATION_WAS_SENT_AGAIN_TOO_OFTEN]: emailVerificationSendError,\n    [EMPLOYER_CONSTRUCTOR_PICTURE_FILE_TOO_LARGE]: employerConstructorPictureFileTooLarge,\n    [EMPLOYER_CONSTRUCTOR_UNSUPPORTED_PICTURE_FILE_FORMAT]: employerConstructorUnsupportedPictureFileFormat,\n    [EMPLOYER_CONSTRUCTOR_INVALID_PICTURE_SIZE]: employerConstructorInvalidPictureSize,\n    [EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_OK]: employerConstructorSaveTemplateOk,\n    [EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_ERROR]: employerConstructorSaveTemplateError,\n    [EMPLOYER_CONSTRUCTOR_IMAGE_UPLOADED]: employerConstructorImageUploaded,\n    [EMPLOYER_CONSTRUCTOR_IMAGE_RESIZED]: employerConstructorImageResized,\n    [EMPLOYER_CONSTRUCTOR_RESPONSE_TIMEOUT]: employerConstructorResponseTimeOut,\n    [EMPLOYER_CONSTRUCTOR_EDIT_FORBIDDEN]: employerConstructorEditForbiddenError,\n    [EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED]: employerSidebarAutosearchSaved,\n    [EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED_APPLICANT]: employerSidebarAutosearchSavedApplicant,\n    [EMPLOYER_SIDEBAR_AUTOSEARCH_TOO_MANY]: employerSidebarAutosearchTooMany,\n    [EMPLOYER_SIDEBAR_SAVE_SUCCESS]: employerSaveSidebarSuccess,\n    [EMPLOYER_SIDEBAR_SAVE_ERROR]: employerSaveSidebarError,\n    [SAVE_EMPLOYER_DESCRIPTION_ERROR]: employerSaveDescriptionError,\n    [SAVE_EMPLOYER_DESCRIPTION_SUCCESS]: employerSaveDescriptionSuccess,\n    [RESUME_VIEW_HISTORY_ERROR_FETCHING]: showResumeViewHistoryErrorFetchingNotification,\n    [ARCHIVE_VACANCY_SUCCESS]: archiveVacancySuccess,\n    [VACANCY_UPGRADE_SUCCESS]: vacancyUpgradeSuccess,\n    [VACANCY_UPDATE_SUCCESS]: vacancyUpdateSuccess,\n    [AUTO_PROLONGATION_PURCHASE_SUCCESS]: autoProlongationPurchaseSuccess,\n    [AUTO_PROLONGATION_PURCHASE_SUCCESSES]: autoProlongationPurchaseSuccesses,\n    [VACANCY_AUTO_PROLONGATION_SUCCESS]: vacancyAutoProlongationSuccess,\n    [VACANCY_AUTO_PROLONGATION_SUCCESSES]: vacancyAutoProlongationSuccesses,\n    [VACANCY_AUTO_PROLONGATION_ERROR]: vacancyAutoProlongationError,\n    [VACANCY_AUTO_PROLONGATION_ERRORS]: vacancyAutoProlongationErrors,\n    [VACANCY_DRAFT_DELETE_SUCCESS]: vacancyDraftDeleteSuccess,\n    [VACANCY_DRAFT_MOVE_SUCCESS]: vacancyDraftMoveSuccess,\n    [VACANCY_DRAFT_DELETE_ERROR]: vacancyDraftDeleteError,\n    [EMPTY_FILTERS_RESULT]: emptyFiltersResult,\n    [PERSONAL_MANAGER_RATING_SUCCESS]: personalManagerRatingSuccess,\n    [EMPLOYER_CHANGE_PASSWORD_SUCCESS]: employerChangePasswordSuccess,\n    [EMPLOYER_DOCUMENT_DELETED_TEMPLATE_DELETE]: deletedTemplateOk,\n    [EMPLOYER_DOCUMENT_UPLOADED_TEMPLATE_OK]: uploadedTemplateOk,\n    [EMPLOYER_DOCUMENT_MAX_FILES_TEMPLATE]: maxFilesWarningTemplate,\n    [EMPLOYER_DOCUMENT_MAX_FILE_LENGTH_TEMPLATE]: maxLengthFileTemplate,\n    [EMPLOYER_DOCUMENT_UPLOAD_ERROR]: uploadError,\n    [EMPLOYER_DOCUMENT_DELETE_ERROR]: deleteError,\n    [EMPLOYER_LOGO_FILE_TOO_LARGE]: employerLogoFileTooLarge,\n    [EMPLOYER_LOGO_UNSUPPORTED_FILE_FORMAT]: employerLogoUnsupportedFileFormat,\n    [EMPLOYER_LOGO_UPLOAD_SUCCESS]: employLogoUploadSuccess,\n    [EMPLOYER_LOGO_UPLOAD_TIMEOUT]: employLogoUploadTimeout,\n    [VACANCY_CREATE_DRAFT_LOAD_OK]: draftLoadOk,\n    [VACANCY_CREATE_DRAFT_LOAD_ERROR]: draftLoadError,\n    [VACANCY_CREATE_TEMPLATE_LOAD_OK]: templateLoadOk,\n    [VACANCY_CREATE_TEMPLATE_LOAD_ERROR]: templateLoadError,\n    [VACANCY_CREATE_DRAFT_SAVE_OK]: draftSaveOk,\n    [VACANCY_CREATE_DRAFT_SAVE_ERROR]: draftSaveError,\n    [COMPLETION_BLACK_LIST_SUCCESS]: completionBlacklistSuccess,\n    [COMPLETION_BLACK_LIST_ERROR]: completionBlacklistError,\n    [COMPLETION_DEFAULT_ERROR]: completionDefaultError,\n    [VACANCY_CREATE_SUBMIT_GENERIC_ERROR]: vacancySubmitGenericError,\n    [VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR]: vacancySubmitDuplicateError,\n    [VACANCY_CREATE_SUBMIT_PERMISSION_ERROR]: vacancySubmitPermissionError,\n    [VACANCY_CREATE_BILLING_SUDO_SPEND_MONEY_ERROR]: billingSudoSpendMoneyError,\n    [VACANCY_ACTION_ERROR]: vacancyActionErrorNotification,\n    [VACANCY_BLACKLIST_VACANCY_LIMIT_ERROR]: vacancyBlacklistVacancyLimitError,\n    [VACANCY_BLACKLIST_EMPLOYER_LIMIT_ERROR]: vacancyBlacklistEmployerLimitError,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR]: vacancySavedSearchSubscriptionError,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_WRONG_EMAIL]: vacancySavedSearchSubscriptionWrongEmail,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_ANONYMOUS]: vacancySavedSearchSubscriptionSuccessAnonymous,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_APPLICANT]: vacancySavedSearchSubscriptionSuccessApplicant,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON]: vacancySavedSearchSubscriptionSuccessFromButton,\n    [VACANCY_SAVED_SEARCH_SUBSCRIPTION_AUTHORIZATION]: vacancySavedSearchSubscriptionAuthorization,\n    [VACANCY_RESPONSE]: VacancyResponse,\n    [JOB_SEARCH_STATUS_AFTER_RESPONSE]: JobSearchStatusAfterResponse,\n    [VACANCY_VIEW_COUNT]: vacancyViewsCount,\n    [APPLICANT_SERVICE_PAYMENT_ERROR]: paymentFormError,\n    [DRAFT_MULTI_PUBLICATION_OK]: draftMultiPublicationOk,\n    [RESUME_FORM_ARTIFACTS_EDIT_ERROR_NOTIFICATION]: resumeFormArtifactsEditErrorNotification,\n    [AUTO_UPDATES_SCHEDULED]: autoUpdatesScheduled,\n    [AUTO_UPDATES_REMOVED]: autoUpdatesRemoved,\n    [EDIT_AUTO_UPDATE_SCHEDULE]: autoUpdatesEdited,\n    [AUTO_PUBLICATION_DISABLED]: autoPublicationDisabled,\n    [CANCEL_SCHEDULED_PUBLICATION_SUCCESS]: cancelScheduledPublicationSuccess,\n    [TOGGLE_VACANCY_OPTION_SUCCESS]: toggleVacancyOptionSuccess,\n    [CHANGE_VACANCY_VISIBILITY_SUCCESS]: changeVacancyVisibilitySuccess,\n    [TOGGLE_VACANCY_OPTION_ERROR]: toggleVacancyOptionError,\n    [VACANCY_PUBLISHED]: vacancyPublished,\n    [VACANCY_RESTORED_TO_ARCHIVE]: vacancyRestoredToArchive,\n    [VACANCY_ERROR_MESSAGE]: vacancyErrorMessage,\n    [VACANCY_SEARCH_ITEM_CONTACTS_ERROR]: vacancySearchItemContactsError,\n    [VACANCY_SCHEDULED]: vacancyScheduled,\n    [NAME_IS_EMPTY]: nameIsEmptyError,\n    [NAME_IS_TOO_LONG]: nameIsTooLongError,\n    [FOLDER_DELETE_ERROR]: folderDeleteError,\n    [TALANTIX_RESUME_IMPORTED]: talantixResumeImported,\n    [TALANTIX_RESUME_IMPORTED_PROMO]: talalantixResumeImportedPromo,\n    [TALANTIX_RESUME_IMPORT_FAILED]: talantixResumeImportFailed,\n    [TARGET_EMPLOYER_MARKED_READ]: targetEmployerMarkedReadError,\n    ...VIDEO_INTERVIEW_NOTIFICATIONS,\n    [PRICE_ADD_CONTACTS_MAX_CONTACTS_AMOUNT_EXCEEDED]: priceAddContactsMaxContactsAmountExceeded,\n    [PRICE_DBACCESS_PRODUCTS_NOT_FOUND]: priceDBAccessProductsNotFound,\n    [PRICE_BRANDING_SUBMIT_APPLICATION_SUCCESS]: submitApplicationSuccess,\n    [PRICE_BRANDING_SUBMIT_APPLICATION_DUPLICATE]: submitApplicationDuplicate,\n    [PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_SUCCESS]: submitClickmeProductsApplicationSuccess,\n    [PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_DUPLICATE]: submitClickmeProductsApplicationDuplicate,\n    [SAVED_CLICKME_AUTOCAMPAIGN_INFO_ERROR]: savedClickmeAutoCampaignError,\n    [DIVISION_CREATED]: createDivisionSuccess,\n    [ACCOUNT_DELETED_EMAIL]: authEmployerAccountDeletedEmail,\n    [RESET_PASSWORD_EMAIL_SUCCESS]: resetPasswordEmailSuccess,\n    [RESEND_CODE_ERROR]: resendErrorNotification,\n    [ACCOUNT_DELETE_RESUMES_SEND_SUCCESS]: accountDeleteResumesSendSuccess,\n    [ADD_TO_CART_ERROR_NOTIFICATION]: addToCartErrorNotification,\n    [VIDEO_INTERVIEW_SEARCH_MODAL_ENABLE]: videoInterviewSearchModalEnable,\n    [EMPLOYER_ADDRESS_DELETED]: employerAddressDeleted,\n    [EMPLOYER_CARTS_DELAYED_CART_INFO]: employerCartsDelayedCartInfo,\n    [SIMILAR_RESUME_FOR_VACANCIES]: similarResumeForVacancies,\n    [EMPLOYER_FINANCIAL_DOCUMENTS_ORDER_ORIGINALS_SUCCESS]: orderOriginalsSuccess,\n    [MANAGER_DELETE_SUCCESS]: managerDeleteSuccess,\n    [APPLICANT_NO_CALL_ANSWER]: applicantNoCallAnswer,\n    [MCP_CHANGED_SUCCESS]: MCPChangedSuccess,\n    [MCP_CHANGE_SUDO_FORBIDDEN]: MCPChangeSudoForbidden,\n    [EMPLOYER_INVOICE_PURCHASE_CHANGE_ACTIVATION_TYPE_ERROR]: changeActivationTypeError,\n    [CALL_TRACKING_DISABLE_SUCCESS]: callTrackingDisableSuccess,\n    [CALL_TRACKING_ALREADY_DISABLED]: callTrackingAlreadyDisabled,\n    [EMPLOYER_ACCOUNT_SWITCH_ERROR]: employerAccountSwitchError,\n    [REGION_CLARIFICATION]: regionClarification,\n    [INVALID_DATE_INTERVAL]: invalidDateInterval,\n    [APPLICANT_JOB_SEARCH_STATUS_SUCCESS]: applicantJobSearchStatusSuccess,\n    [POLITENESS_INDEX]: politenessIndexNotification,\n    [CHANGE_TOPIC_ERROR]: changeTopicError,\n    [CHANGE_TOPIC_ERROR_NO_FA]: changeTopicErrorNoQa,\n    [SMS_ERROR]: smsError,\n    [PURCHASE_NOTIFICATION_NOTICE]: purchaseNotificationNotice,\n    [SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY]: saveSuccessfullyAuctionModalNotification,\n    [ADD_AUTH_PHONE_SUCCESS]: addAuthPhoneSuccess,\n    [AUCTION_ERROR]: auctionError,\n    [MANAGER_EDIT_SUCCESS]: managerEditSuccess,\n    [MANAGER_FORM_ERROR]: managerFormError,\n    [SEARCH_PUBLICATION_EDIT_SUCCESS]: searchPublicationEditSuccess,\n    [SEARCH_PUBLICATION_EDIT_ERROR]: searchPublicationEditError,\n    [INVOICE_PAYMENT_FORM_ERROR]: invoicePaymentFormError,\n    [MAIL_TO_LIMIT_EXCEEDED]: mailtoLimitExceeded,\n    [HIRING_PLAN_UPDATE_SUCCESS]: hiringPlanUpdateSuccess,\n    [EMAIL_TEMPLATE_SAVE_SUCCESS]: emailTemplateSaveSuccess,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport notificationCloseButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/notifications/notification_close_button_click';\nimport Notification from 'bloko/blocks/notificationManager/Notification';\n\nimport Debug from 'HHC/Debug';\nimport { removeNotificationByIdAction } from 'lux/models/notifications';\n\nimport NotificationAnalytics from 'lux/components/Notifications/NotificationAnalytics';\nimport config from 'lux/components/Notifications/config';\n\nconst Notifications = ({ notifications, removeNotificationByIdAction }) => {\n    return notifications.map(({ type, id, props }) => {\n        if (!config[type] || (typeof config[type] === 'object' && !config[type].Element)) {\n            Debug.log('out error', new Error(`Notification ${type} is not defined`));\n            return null;\n        }\n\n        const { Element, onClose, notificationName, ...notificationProps } = config[type];\n        const removeNotification = removeNotificationByIdAction.bind(null, id);\n        const bindedOnClose = onClose && onClose.bind(null, removeNotification, props);\n        const onCloseCallback = (...args) => {\n            bindedOnClose && bindedOnClose(...args);\n            removeNotification(...args);\n            notificationName && notificationCloseButtonClick({ notificationName });\n        };\n\n        const children = <Element {...props} removeNotification={removeNotification} />;\n        return (\n            <Notification {...notificationProps} key={id} onClose={onCloseCallback}>\n                {notificationName ? (\n                    <NotificationAnalytics notificationName={notificationName}>{children}</NotificationAnalytics>\n                ) : (\n                    children\n                )}\n            </Notification>\n        );\n    });\n};\n\nNotifications.propTypes = {\n    /** Список нотификаций */\n    notifications: PropTypes.array,\n    /** Функция для удаления нотификации */\n    removeNotificationByIdAction: PropTypes.func,\n};\n\nexport default connect((state) => ({ notifications: state.notifications }), { removeNotificationByIdAction })(\n    Notifications\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"resumesVisibilitySettingsModalContent\":\"resumes-visibility-settings-modal-content--X1u6tHL9aYxcSCTmQa8A\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport buttonClickCloseResumesCountriesVisibilitySettingsModal from '@hh.ru/analytics-js-events/build/xhh/applicant/resumes_countries_visibility_settings_modal/button_click_close_resumes_countries_visibility_settings_modal';\nimport buttonClickProcessingConditionsResumesCountriesVisibilitySettingsModal from '@hh.ru/analytics-js-events/build/xhh/applicant/resumes_countries_visibility_settings_modal/button_click_processing_conditions_resumes_countries_visibility_settings_modal';\nimport buttonClickProcessingRulesResumesCountriesVisibilitySettingsModal from '@hh.ru/analytics-js-events/build/xhh/applicant/resumes_countries_visibility_settings_modal/button_click_processing_rules_resumes_countries_visibility_settings_modal';\nimport formSubmitSaveResumesCountriesVisibilitySettingsModal from '@hh.ru/analytics-js-events/build/xhh/applicant/resumes_countries_visibility_settings_modal/form_submit_save_resumes_countries_visibility_settings_modal';\nimport screenShownResumesCountriesVisibilitySettingsModal, {\n    HhtmFrom,\n} from '@hh.ru/analytics-js-events/build/xhh/applicant/resumes_countries_visibility_settings_modal/screen_shown_resumes_countries_visibility_settings_modal';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer/lib/createReducer';\nimport Button, { ButtonKind, ButtonType } from 'bloko/blocks/button';\nimport Modal, { ModalContent, ModalFooter, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ResumeCountriesVisibilitySettings } from 'lux/models/resumeCountriesVisibility';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport ResumesCountriesVisibilityForm from 'lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilityForm';\nimport { CountrySelection } from 'lux/components/ResumesCountriesVisibility/types';\n\nimport styles from './resumes-visibility-settings-modal.less';\n\nconst TrlKeys = {\n    title: 'components.appliciant_countries_visibility.visibility_settings_modal.header',\n    save: 'components.appliciant_countries_visibility.visibility_settings_modal.save',\n};\n\nconst SAVE_URL = '/applicant/settings/resume_countries_visibility';\n\nconst buildCheckBoxAnalyticData = (state: ResumeCountriesVisibilitySettings): string | null => {\n    const array: CountrySelection[] = [];\n    if (state.visibleForCommonCountries) {\n        array.push('common');\n    }\n    if (state.visibleForUzbekistan) {\n        array.push('uzbekistan');\n    }\n\n    if (array.length === 0) {\n        return null;\n    }\n    return array.join(',');\n};\n\nconst setShowingModalAction = makeSetStoreField('showResumeCountriesVisibilitySettingsModal');\n\nconst ResumesCountriesVisibilitySettingsModal: TranslatedComponent = ({ trls }) => {\n    const hhtmFrom = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource) as HhtmFrom;\n\n    const checkBoxInitialState = useSelector(({ resumeCountriesVisibility }) => resumeCountriesVisibility);\n\n    const [checkBoxState, setCheckBoxState] = useState(checkBoxInitialState);\n\n    const [isFetching, setIsFetching] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const checkBoxStateAnalyticValue = buildCheckBoxAnalyticData(checkBoxState);\n\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    const onClose = () => {\n        buttonClickCloseResumesCountriesVisibilitySettingsModal({\n            checkbox: checkBoxStateAnalyticValue,\n            hhtmFrom,\n        });\n        dispatch(setShowingModalAction(false));\n    };\n\n    const handleChange = useCallback(\n        (name: 'visibleForCommonCountries' | 'visibleForUzbekistan') => {\n            setCheckBoxState((prev) => ({ ...prev, [name]: !prev[name] }));\n        },\n        [setCheckBoxState]\n    );\n\n    const onSubmit = () => {\n        setIsFetching(true);\n        fetcher\n            .postFormData(SAVE_URL, { ...checkBoxState, isModal: true })\n            .then(() => {\n                formSubmitSaveResumesCountriesVisibilitySettingsModal({\n                    checkbox: checkBoxStateAnalyticValue,\n                    hhtmFrom,\n                });\n            })\n            .catch((error) => {\n                dispatch(showDefaultError(error));\n            })\n            .finally(() => {\n                setIsFetching(false);\n                dispatch(setShowingModalAction(false));\n            });\n    };\n\n    useEffect(() => {\n        screenShownResumesCountriesVisibilitySettingsModal({ hhtmFrom });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Modal data-qa=\"resumes-countries-visibility-settings-modal\" visible onClose={onClose} useBottomSheet>\n            <div className={styles.resumesVisibilitySettingsModalContent}>\n                <ModalTitle data-qa=\"resumes-countries-visibility-settings-title-modal\">\n                    {trls[TrlKeys.title]}\n                </ModalTitle>\n                <VSpacing base={5} />\n                <ModalContent>\n                    <ResumesCountriesVisibilityForm\n                        isFetching={isFetching}\n                        settings={checkBoxState}\n                        handleChange={handleChange}\n                        dataQaKey={'modal'}\n                        conditionsClickHandler={(country: CountrySelection) => {\n                            buttonClickProcessingConditionsResumesCountriesVisibilitySettingsModal({\n                                conditions: country,\n                                hhtmFrom,\n                            });\n                        }}\n                        rulesClickHandler={(country: CountrySelection) => {\n                            buttonClickProcessingRulesResumesCountriesVisibilitySettingsModal({\n                                rules: country,\n                                hhtmFrom,\n                            });\n                        }}\n                    />\n                </ModalContent>\n                <ModalFooter>\n                    <Button\n                        type={ButtonType.Button}\n                        kind={ButtonKind.Primary}\n                        disabled={isFetching}\n                        stretched={isXs}\n                        onClick={onSubmit}\n                        data-qa=\"resumes-countries-visibility-settings-button-modal\"\n                    >\n                        {trls[TrlKeys.save]}\n                    </Button>\n                </ModalFooter>\n            </div>\n        </Modal>\n    );\n};\n\nexport default translation(ResumesCountriesVisibilitySettingsModal);\n","import { FC } from 'react';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ResumesCountriesVisibilitySettingsModal from 'lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilitySettingsModal';\n\nconst ResumesCountriesVisibilitySettingsModalContainer: FC = () => {\n    const shouldBeShown = useSelector(\n        ({ showResumeCountriesVisibilitySettingsModal }) => showResumeCountriesVisibilitySettingsModal\n    );\n    return shouldBeShown ? <ResumesCountriesVisibilitySettingsModal /> : null;\n};\n\nexport default ResumesCountriesVisibilitySettingsModalContainer;\n","import { useEffect, FC } from 'react';\nimport { useDispatch, DefaultRootState } from 'react-redux';\nimport { ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { Action } from '@hh.ru/redux-create-reducer';\nimport NotificationManager, { NotificationManagerProps } from 'bloko/blocks/notificationManager';\nimport Metrics from 'bloko/common/metrics';\nimport throttle from 'bloko/common/throttle';\n\nimport sendNotificationManagerAnalytics from 'HH/SendNotificationManagerAnalytics';\nimport { ACTION_SMART_BANNER_LOADED } from 'lux/components/AppSmartBanner/utils';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst RESIZE_THROTTLE_MS = 100;\n\n// tempexp_28215_start\nconst sendNotificationManagerAnalyticsAction: ActionCreator<ThunkAction<void, DefaultRootState, unknown, Action>> =\n    (notificationManager: HTMLElement) => (dispatch, getState) => {\n        sendNotificationManagerAnalytics(notificationManager, getState);\n    };\n\nconst Features = {\n    sendNotificationsKeysEnabled: 'send_notifications_keys_enabled',\n};\n// tempexp_28215_end\n\nconst SupernovaNotificationManager: FC = (props: NotificationManagerProps) => {\n    // tempexp_28215_start\n    const dispatch = useDispatch();\n    const sendNotificationsKeysEnabled = useSelector(\n        ({ features }) => features[Features.sendNotificationsKeysEnabled] as boolean\n    );\n\n    useEffect(() => {\n        const notificationManager = document.querySelector('.Bloko-Notification-Manager') as HTMLElement;\n        if (!notificationManager) {\n            return;\n        }\n        if (!sendNotificationsKeysEnabled) {\n            sendNotificationManagerAnalytics(notificationManager);\n        } else {\n            dispatch(sendNotificationManagerAnalyticsAction(notificationManager));\n        }\n    }, [dispatch, sendNotificationsKeysEnabled]);\n    // tempexp_28215_end\n    useEffect(() => {\n        const notificationManager = document.querySelector('.Bloko-Notification-Manager') as HTMLElement;\n        if (!notificationManager) {\n            return undefined;\n        }\n        const containers = [...document.querySelectorAll<HTMLElement>('.HH-Supernova-NotificationManager-Container')];\n        const getVisibleContainer = () => containers.find((container) => container.offsetWidth) as HTMLElement;\n        let container = getVisibleContainer();\n\n        let bottom: number;\n        if (container) {\n            bottom = Metrics.getMetrics(container).bottom;\n        }\n\n        const setPosition = () => {\n            const scroll = Math.max(bottom - window.pageYOffset, 0);\n            notificationManager.style.top = `${scroll}px`;\n        };\n\n        window.addEventListener('scroll', setPosition);\n        setPosition();\n\n        const updateBottomPosition = () => {\n            container = getVisibleContainer();\n            bottom = Metrics.getMetrics(container).bottom;\n            setPosition();\n        };\n        const throttledUpdateBottomPosition = throttle(updateBottomPosition, RESIZE_THROTTLE_MS);\n\n        window.addEventListener('resize', throttledUpdateBottomPosition);\n        window.addEventListener(ACTION_SMART_BANNER_LOADED, updateBottomPosition);\n\n        return function cleanup() {\n            window.removeEventListener('resize', throttledUpdateBottomPosition);\n            window.removeEventListener(ACTION_SMART_BANNER_LOADED, updateBottomPosition);\n        };\n    }, []);\n    return <NotificationManager {...props} />;\n};\n\nexport default SupernovaNotificationManager;\n","import { ComponentProps, FC, useCallback, useEffect, PropsWithChildren } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Notification from 'bloko/blocks/notificationManager/Notification';\n\nimport Notices, { MarkAsViewedEvent } from 'Modules/Notices';\nimport { markUserNotificationsAsViewed } from 'Modules/UserNotifications';\nimport { isComplexUserNotification, UserNotification } from 'lux/models/userNotifications';\n\ninterface SynchronizedNotificationProps extends ComponentProps<typeof Notification> {\n    closeEvent?: string;\n    markAsViewedEvent?: MarkAsViewedEvent;\n    notification: UserNotification;\n    analyticsElementName?: string;\n}\n\nconst markAsViewed = (notification: UserNotification) =>\n    isComplexUserNotification(notification)\n        ? markUserNotificationsAsViewed(notification.id)\n        : Notices.markAsViewed(notification.templateKey);\n\nconst sendAnalytics = (name: string | undefined, element: HTMLDivElement | null) => {\n    if (element && name) {\n        Analytics.sendHHEventElementShown(element, {\n            name,\n        });\n    }\n};\n\nconst SynchronizedNotification: FC<SynchronizedNotificationProps & PropsWithChildren> = ({\n    closeEvent,\n    markAsViewedEvent = MarkAsViewedEvent.OnShow,\n    notification,\n    analyticsElementName,\n    closeFuncRef,\n    onClose,\n    children,\n    ...notificationProps\n}) => {\n    const sendShownAnalytics = useCallback<(element: HTMLDivElement | null) => void>(\n        (element) => sendAnalytics(analyticsElementName, element),\n        [analyticsElementName]\n    );\n\n    const onCloseHandler = useCallback(() => {\n        closeEvent && Analytics.sendHHEventButtonClick(closeEvent);\n        if (markAsViewedEvent === MarkAsViewedEvent.OnHide) {\n            void markAsViewed(notification);\n        }\n        onClose?.();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [markAsViewedEvent, closeEvent, onClose]);\n\n    useEffect(() => {\n        if (markAsViewedEvent === MarkAsViewedEvent.OnShow) {\n            void markAsViewed(notification);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [markAsViewedEvent]);\n\n    return (\n        <Notification onClose={onCloseHandler} closeFuncRef={closeFuncRef} {...notificationProps}>\n            <div ref={sendShownAnalytics}>{children}</div>\n        </Notification>\n    );\n};\n\nexport default SynchronizedNotification;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport BlokoLink from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\ndeclare global {\n    interface FetcherPutApi {\n        '/shards/user_agreements/adv_agreement': {\n            body: void;\n            queryParams: { source: string; accepted: boolean };\n            response: void;\n        };\n    }\n}\n\nconst TrlKeys = {\n    text: 'advertisementAgreement.notification.text',\n    linkOne: 'advertisementAgreement.notification.text.link.1',\n    linkTwo: 'advertisementAgreement.notification.text.link.2',\n    accept: 'advertisementAgreement.notification.accept',\n    close: 'advertisementAgreement.notification.close',\n};\n\nconst Features = {\n    enableNotification: 'enable_advertisement_agreement_notification',\n};\n\nconst AdvertisementAgreement: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const dispatch = useDispatch();\n    const [disabled, setDisabled] = useState(false);\n    const isNotificationEnabled = useSelector(({ features }) => features[Features.enableNotification] as boolean);\n    if (!isNotificationEnabled) {\n        return null;\n    }\n\n    const makeRequest = (isAccepted: boolean) => {\n        setDisabled(true);\n        void fetcher\n            .put('/shards/user_agreements/adv_agreement', undefined, {\n                params: { source: 'web_notification', accepted: isAccepted },\n            })\n            .catch((error) => {\n                dispatch(showDefaultError(error));\n            })\n            .finally(() => {\n                setDisabled(false);\n                onClose();\n            });\n    };\n\n    const onAccept = () => {\n        makeRequest(true);\n    };\n\n    const onDecline = () => {\n        makeRequest(false);\n    };\n\n    return (\n        <SynchronizedNotification\n            notification={notification}\n            markAsViewedEvent={MarkAsViewedEvent.None}\n            onClose={onDecline}\n        >\n            <p>\n                {formatToReactComponent(trls[TrlKeys.text], {\n                    '{0}': (\n                        <BlokoLink disableVisited Element={Link} to=\"/article/30901\" target=\"_blank\">\n                            {trls[TrlKeys.linkOne]}\n                        </BlokoLink>\n                    ),\n                    '{1}': (\n                        <BlokoLink disableVisited Element={Link} to=\"/article/30901#clause1\" target=\"_blank\">\n                            {trls[TrlKeys.linkTwo]}\n                        </BlokoLink>\n                    ),\n                })}\n            </p>\n            <NotificationFooter>\n                <Button scale={ButtonScale.Small} onClick={onAccept} disabled={disabled}>\n                    {trls[TrlKeys.accept]}\n                </Button>\n                <FormSpacer />\n                <Button scale={ButtonScale.Small} onClick={onDecline} disabled={disabled}>\n                    {trls[TrlKeys.close]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(AdvertisementAgreement);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'applicant.feedback.about.vacancy.notification.title',\n    text: 'applicant.feedback.about.vacancy.notification',\n    link: 'applicant.feedback.about.vacancy.notification.link',\n};\n\nconst ApplicantFeedbackAboutVacancy: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            kind={NotificationKind.Ok}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n        >\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <p>{trls[TrlKeys.text]}</p>\n            <NotificationFooter>\n                <Link\n                    href={`/applicant/negotiations?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n                    target=\"_blank\"\n                    onClick={() => closeNotificationRef.current?.()}\n                >\n                    {trls[TrlKeys.link]}\n                </Link>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(ApplicantFeedbackAboutVacancy);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--eQ7xldo1F6v_rj2Od_iE\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button, { ButtonKind, ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ChangeForm from 'lux/components/Applicant/JobSearchStatus/ChangeForm';\nimport { APPLICANT_JOB_SEARCH_STATUS_SUCCESS } from 'lux/components/Notifications/ApplicantJobSearchStatusSuccess';\nimport translation from 'lux/components/translation';\nimport { JobSearchStatus, JobSearchStatusForm } from 'lux/models/applicantUserStatuses';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport styles from './applicant-job-search-status.less';\n\nconst TrlKeys = {\n    heading: 'notification.applicant.job.search.status.heading',\n    save: 'notification.applicant.job.search.status.save',\n};\n\nconst CHANGE_FORM_ID = JobSearchStatusForm.RenewNotification;\n\nconst Content: TranslatedComponent<{ onClose: VoidFunction }> = ({ onClose, trls }) => {\n    const [isDisabled, setIsDisabled] = useState(true);\n    const dispatch = useDispatch();\n\n    return (\n        <div data-qa=\"applicant-job-search-status-notification\">\n            <NotificationHeading>{trls[TrlKeys.heading]}</NotificationHeading>\n            <div className={styles.wrapper}>\n                <VSpacing base={2} />\n                <ChangeForm\n                    setDisabled={setIsDisabled}\n                    onSuccess={(newStatus) => {\n                        if (newStatus !== JobSearchStatus.AcceptedJobOffer) {\n                            dispatch(addNotification(APPLICANT_JOB_SEARCH_STATUS_SUCCESS));\n                        }\n                        onClose();\n                    }}\n                    isCompact\n                    formId={CHANGE_FORM_ID}\n                />\n            </div>\n            <NotificationFooter>\n                <Button\n                    scale={ButtonScale.Small}\n                    kind={ButtonKind.Primary}\n                    data-qa=\"applicant-job-search-status-notification-confirm\"\n                    type={ButtonType.Submit}\n                    form={CHANGE_FORM_ID}\n                    disabled={isDisabled}\n                >\n                    {trls[TrlKeys.save]}\n                </Button>\n            </NotificationFooter>\n        </div>\n    );\n};\n\nexport default translation(Content);\n","import { FC, useEffect, useRef, PropsWithChildren } from 'react';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport useMarkAsRead from 'lux/components/Applicant/JobSearchStatus/useMarkAsRead';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Content from 'lux/components/UserNotifications/variants/ApplicantJobSearchStatus/Content';\n\nconst ApplicantJobSearchStatus: FC<ComplexNotificationComponentProps & PropsWithChildren> = ({\n    onClose,\n    ...notification\n}) => {\n    const triggerName = useSelector((state) => state.applicantUserStatusesTrigger);\n    const markAsReadRef = useRef(useMarkAsRead(triggerName));\n    useEffect(() => {\n        if (notification.id === undefined) {\n            markAsReadRef.current();\n        }\n    }, [notification.id]);\n\n    return (\n        <SynchronizedNotification\n            notification={notification}\n            markAsViewedEvent={notification.id === undefined ? MarkAsViewedEvent.None : MarkAsViewedEvent.OnShow}\n            onClose={onClose}\n        >\n            <Content onClose={onClose} />\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(ApplicantJobSearchStatus);\n","import { ComponentType } from 'react';\n\nimport Notification, { NotificationKind } from 'bloko/blocks/notificationManager/Notification';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    /* eslint-disable camelcase */\n    email_verification_was_sent_again_too_often: 'notifications.email_verification_was_sent_again_too_often',\n    email_verification_was_sent_again_error: 'notifications.email_verification_was_sent_again_error',\n    manager_quota_change_fail: 'notifications.manager_quota_change_fail',\n    esiaAccountNotLinked: 'notifications.esiaAccountNotLinked',\n    zarplataNoSocialRegistration: 'notifications.zarplataNoSocialRegistration',\n    oauthConnectInternalError: 'notifications.oauth_connect_internal_error',\n    email_verification_error: 'notifications.email_verification_error',\n    email_verification_completed: 'notifications.email_verification_completed',\n\n    survey_was_ignored: 'notifications.survey_was_ignored',\n    survey_was_finished: 'notifications.survey_was_finished',\n    phone_has_been_verified: 'notifications.phone_has_been_verified',\n    manager_quota_change_success: 'notifications.manager_quota_change_success',\n    all_surveys_were_ignored: 'notifications.all_surveys_were_ignored',\n    account_deleted: 'notifications.account_deleted',\n    resume_merge_success: 'resume_merge.notification.success',\n    /* eslint-enable camelcase */\n};\n\nconst baseNotificationFactory = ({\n    error = false,\n    autoClose = false,\n    synchronized = true,\n} = {}): ComponentType<SimpleNotificationComponentProps> => {\n    const NotificationComponent = synchronized ? SynchronizedNotification : Notification;\n\n    const BaseNotification: TranslatedComponent<SimpleNotificationComponentProps> = ({\n        trls,\n        onClose,\n        templateKey,\n        ...notification\n    }) => (\n        <NotificationComponent\n            kind={error ? NotificationKind.Error : NotificationKind.Ok}\n            onClose={onClose}\n            notification={{ templateKey, ...notification }}\n            autoClose={autoClose}\n        >\n            {trls[TrlKeys[templateKey as keyof typeof TrlKeys]]}\n        </NotificationComponent>\n    );\n\n    return translation(BaseNotification);\n};\n\nexport default baseNotificationFactory;\n","import { FC, PropsWithChildren } from 'react';\n\nimport BillingCartActivationNotification from 'lux/components/BillingCartActivationNotification';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexUserNotification } from 'lux/models/userNotifications';\n\nconst BillingCartActivation: FC<ComplexUserNotification & PropsWithChildren> = (props) => {\n    return (\n        <SynchronizedNotification notification={props}>\n            <BillingCartActivationNotification {...props} />\n        </SynchronizedNotification>\n    );\n};\n\nexport default BillingCartActivation;\n","import { FC, useCallback, PropsWithChildren } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport urlParser from 'bloko/common/urlParser';\n\nimport BrandingMakeupNotification from 'lux/components/BrandingMakeupNotification';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { NotificationLinkProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst hhtmFromLabelMap = {\n    [ComplexUserNotificationsTemplateKey.SuggestionEmployerMakeup]: 'notification_prolongation_page',\n    [ComplexUserNotificationsTemplateKey.SuggestionVacancyMakeup]: 'notification_prolongation_vac',\n};\n\nconst BrandingMakeup: FC<ComplexUserNotification & PropsWithChildren> = ({ params, templateKey, ...props }) => {\n    const key = templateKey as keyof typeof hhtmFromLabelMap;\n\n    const LinkComponent: FC<NotificationLinkProps & PropsWithChildren> = useCallback(\n        ({ to, ...props }) => {\n            const url = urlParser(to);\n            url.params = {\n                ...url.params,\n                from: 'user-notification',\n                hhtmFromLabel: hhtmFromLabelMap[key],\n            };\n            return <BlokoLink Element={Link} disableVisited to={url.href} {...props} />;\n        },\n        [key]\n    );\n\n    return (\n        <SynchronizedNotification notification={{ params, templateKey, ...props }}>\n            <p>\n                <BrandingMakeupNotification\n                    LinkComponent={LinkComponent}\n                    TextComponent=\"p\"\n                    params={params}\n                    templateKey={templateKey}\n                    {...props}\n                />\n            </p>\n        </SynchronizedNotification>\n    );\n};\n\nexport default BrandingMakeup;\n","import Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    part1: 'branding.suggestion.buy.employer.page.constructor.notification.part_1',\n    part2: 'branding.suggestion.buy.employer.page.constructor.notification.part_2',\n    part3: 'branding.suggestion.buy.employer.page.constructor.notification.part_3',\n    link: 'branding.suggestion.buy.employer.page.constructor.notification.link',\n};\n\nconst BuyEmployerPageConstructor: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    return (\n        <SynchronizedNotification notification={notification} onClose={onClose}>\n            <p>\n                {trls[TrlKeys.part1]}\n                <strong>{trls[TrlKeys.part2]}</strong>\n                {trls[TrlKeys.part3]}\n            </p>\n            <Link\n                disableVisited\n                href={`https://branding.hh.ru/employer_constructor?hhtmFrom=${hhtmSource}&hhtmFromLabel=notification_prolongation&utm_source=hh.ru&utm_medium=referral&utm_campaign=notification_prolongation`}\n            >\n                {trls[TrlKeys.link]}\n            </Link>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(BuyEmployerPageConstructor);\n","import Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    part1: 'branding.suggestion.buy.vacancy.constructor.notification.part_1',\n    part2: 'branding.suggestion.buy.vacancy.constructor.notification.part_2',\n    part3: 'branding.suggestion.buy.vacancy.constructor.notification.part_3',\n    link: 'branding.suggestion.buy.vacancy.constructor.notification.link',\n};\n\nconst BuyVacancyPageConstructor: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    return (\n        <SynchronizedNotification notification={notification} onClose={onClose}>\n            <p>\n                {trls[TrlKeys.part1]}\n                <strong>{trls[TrlKeys.part2]}</strong>\n                {trls[TrlKeys.part3]}\n            </p>\n            <Link\n                disableVisited\n                href={`https://branding.hh.ru/vacancy_constructor?hhtmFrom=${hhtmSource}&hhtmFromLabel=notification_prolongation&utm_source=hh.ru&utm_medium=referral&utm_campaign=notification_prolongation`}\n            >\n                {trls[TrlKeys.link]}\n            </Link>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(BuyVacancyPageConstructor);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'vacancy.call.tracking.tele2owners.warning.title',\n    text: 'vacancy.call.tracking.tele2owners.warning.notification',\n    link: 'vacancy.call.tracking.tele2owners.warning.link',\n};\n\nconst CallTracking: TranslatedComponent<ComplexNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n        >\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <p>{trls[TrlKeys.text]}</p>\n            <NotificationFooter>\n                <Link\n                    href={`/article/28992?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n                    target=\"_blank\"\n                    onClick={() => closeNotificationRef.current?.()}\n                >\n                    {trls[TrlKeys.link]}\n                </Link>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(CallTracking);\n","// tempexp_28472_file\nimport { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'marketing.special.clientDay.notification.title',\n    description: 'marketing.special.clientDay.notification.description',\n    link: 'marketing.special.clientDay.notification.link',\n};\n\nconst analyticsName = 'client_day_notification';\n\nconst ClientDay: TranslatedComponent<SimpleNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const link = notification.params?.link;\n    if (!link) {\n        return null;\n    }\n    return (\n        <SynchronizedNotification\n            analyticsElementName={analyticsName}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            markAsViewedEvent={MarkAsViewedEvent.OnShow}\n            onClose={onClose}\n            closeEvent={`${analyticsName}_close`}\n        >\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <Text>{trls[TrlKeys.description]}</Text>\n            <NotificationFooter>\n                <Button\n                    scale={ButtonScale.Small}\n                    Element={Link}\n                    target=\"_blank\"\n                    onClick={() => {\n                        Analytics.sendHHEventButtonClick(`${analyticsName}_link`);\n                        closeNotificationRef.current?.();\n                    }}\n                    to={link}\n                >\n                    {trls[TrlKeys.link]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(ClientDay);\n","import Link from 'bloko/blocks/link';\nimport Notification, { NotificationKind } from 'bloko/blocks/notificationManager/Notification';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'emailVerification.wasComplited.error.again',\n    link: 'emailVerification.wasComplited.error.link',\n};\n\nconst EmailVerificationErrorAgain: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    params,\n}) => (\n    <Notification kind={NotificationKind.Error} onClose={onClose}>\n        {formatToReactComponent(trls[TrlKeys.text], {\n            '{0}': <Link href={params.currentUrl}>{trls[TrlKeys.link]}</Link>,\n        })}\n    </Notification>\n);\n\nexport default translation(EmailVerificationErrorAgain);\n","import Link from 'bloko/blocks/link';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/Notification';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    /* eslint-disable camelcase */\n    email_verification_was_sent: 'notifications.email_verification_was_sent',\n    email_verification_was_sent_again: 'notifications.email_verification_was_sent_again',\n    /* eslint-enable camelcase */\n};\n\nconst EmailVerificationWasSent: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    params,\n    templateKey,\n}) => (\n    <SynchronizedNotification kind={NotificationKind.Ok} onClose={onClose} notification={{ params, templateKey }}>\n        {formatToReactComponent(trls[TrlKeys[templateKey as keyof typeof TrlKeys]], {\n            '{0}': (\n                <Link href={params.mailerUrl} target=\"_blank\">\n                    {params.email}\n                </Link>\n            ),\n        })}\n    </SynchronizedNotification>\n);\n\nexport default translation(EmailVerificationWasSent);\n","import { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    description1: 'notifications.employerHhRatingResultsNotification.description.1',\n    description2: 'notifications.employerHhRatingResultsNotification.description.2',\n    link: 'notifications.employerHhRatingResultsNotification.link',\n};\n\nconst EmployerHhRatingResults: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const userType = useSelector(({ userType }) => userType);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const sendLinkClickAnalytics = () => {\n        Analytics.sendHHEventButtonClick(`link_${notification.templateKey}`);\n    };\n    return (\n        <SynchronizedNotification\n            analyticsElementName={notification.templateKey}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n            onClose={onClose}\n            closeEvent={`close_${notification.templateKey}`}\n        >\n            <p>{trls[TrlKeys.description1]}</p>\n            <p>{trls[TrlKeys.description2]}</p>\n            <NotificationFooter>\n                <Link\n                    href={`https://rating.hh.ru/history/rating2023/?utm_source=hh.ru&utm_medium=banner&utm_campaign=notification_rating2023&utm_term=${userType}`}\n                    target=\"_blank\"\n                    onClick={sendLinkClickAnalytics}\n                >\n                    {trls[TrlKeys.link]}\n                </Link>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(EmployerHhRatingResults);\n","import { useEffect } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale, ButtonKind } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport useDeleteUserNotificationById from 'lux/components/SupernovaMainMenu/UserNotifications/useDeleteNotification';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    text: 'employerItAccreditation.notification.text',\n    add: 'employerItAccreditation.notification.add',\n    close: 'employerItAccreditation.notification.close',\n};\n\nconst EmployerItAccreditation: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const [, deleteNotification] = useDeleteUserNotificationById(notification.id);\n\n    useEffect(() => {\n        void deleteNotification();\n    }, [deleteNotification]);\n\n    return (\n        <SynchronizedNotification\n            notification={notification}\n            markAsViewedEvent={MarkAsViewedEvent.None}\n            onClose={onClose}\n            analyticsElementName=\"employer_it_accreditation_notice\"\n        >\n            <p>{trls[TrlKeys.text]}</p>\n            <NotificationFooter>\n                <Button\n                    Element={Link}\n                    to={'/employer/edit/sidebar'}\n                    scale={ButtonScale.Small}\n                    kind={ButtonKind.Primary}\n                    onClick={() => {\n                        Analytics.sendHHEventButtonClick('employer_it_accreditation_notice', {\n                            goal: 'PORTFOLIO-18871',\n                        });\n                        onClose();\n                    }}\n                >\n                    {trls[TrlKeys.add]}\n                </Button>\n                <FormSpacer />\n                <Button scale={ButtonScale.Small} onClick={onClose}>\n                    {trls[TrlKeys.close]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(EmployerItAccreditation);\n","import { useEffect, useState, useMemo, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport Checkbox from 'bloko/blocks/checkbox';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport { H2 } from 'bloko/blocks/header';\nimport Link from 'bloko/blocks/link';\nimport Modal, { ModalContent, ModalFooter, ModalHeader } from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport Notices from 'Modules/Notices';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface VacancyAutoUpdateInfo {\n    vacancyId: number;\n    vacancyName: string;\n    autoProlongationsCount: number;\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/employer/overspending': {\n            queryParams: void;\n            response: { vacancyWithAutoUpdateViews: VacancyAutoUpdateInfo[] };\n        };\n    }\n}\n\nconst TrlKeys = {\n    dateTo: 'dateTo',\n    vacancyMany: 'vacancy.many',\n    vacancySome: 'vacancy.some',\n    vacancyOne: 'vacancy.one',\n    title: 'employer.overspending.vacancy.title',\n    more: 'employer.overspending.vacancy.more',\n    spent: 'employer.overspending.vacancy.spent',\n    disable: 'employer.overspending.vacancy.disable',\n    ok: 'employer.overspending.vacancy.ok',\n    continue: 'employer.overspending.vacancy.continue',\n    one: 'employer.overspending.vacancy.one',\n    some: 'employer.overspending.vacancy.some',\n    many: 'employer.overspending.vacancy.many',\n    hide: 'employer.overspending.vacancy.hide',\n    autoprolongation: 'employer.overspending.vacancy.autoprolongation',\n    months: [\n        'calendar.genitive.month.0',\n        'calendar.genitive.month.1',\n        'calendar.genitive.month.2',\n        'calendar.genitive.month.3',\n        'calendar.genitive.month.4',\n        'calendar.genitive.month.5',\n        'calendar.genitive.month.6',\n        'calendar.genitive.month.7',\n        'calendar.genitive.month.8',\n        'calendar.genitive.month.9',\n        'calendar.genitive.month.10',\n        'calendar.genitive.month.11',\n    ],\n};\n\nconst get7DaysRangeTrl = (trls: Record<string, string>) => {\n    const dateObj = new Date();\n    const currentMonth = dateObj.getMonth();\n    const currentDate = dateObj.getDate();\n    dateObj.setDate(currentDate - 7);\n    const previousDate = dateObj.getDate();\n    const previousMonthTrl = previousDate > currentDate ? ` ${trls[TrlKeys.months[currentMonth - 1]]}` : '';\n    return `${previousDate}${previousMonthTrl} ${trls[TrlKeys.dateTo]}${NON_BREAKING_SPACE}${currentDate} ${\n        trls[TrlKeys.months[currentMonth]]\n    }`;\n};\n\nconst markModalViewed = (permanent = false) =>\n    Notices.markAsViewed('employerOverspendingInfo', permanent && { permanent });\n\nconst EmployerOverspending: TranslatedComponent<SimpleNotificationComponentProps> = ({ trls, onClose }) => {\n    const dispatch = useDispatch();\n    const pathname = useSelector(({ router }) => router.location.pathname);\n    const [vacancyUpdateInfo, setVacancyUpdateInfo] = useState<VacancyAutoUpdateInfo[]>([]);\n    const checkboxStateRef = useRef(false);\n\n    useEffect(() => {\n        fetcher.get('/shards/employer/overspending').then(({ vacancyWithAutoUpdateViews }) => {\n            if (!vacancyWithAutoUpdateViews.length) {\n                onClose();\n                return;\n            }\n            markModalViewed();\n            Analytics.sendHHEvent('overspending_modal_shown');\n            setVacancyUpdateInfo(vacancyWithAutoUpdateViews);\n        }, onClose);\n    }, [onClose]);\n\n    const hideModalHandler = useCallback(() => {\n        markModalViewed(checkboxStateRef.current);\n        Analytics.sendHHEventButtonClick('overspending_close', { hide: checkboxStateRef.current });\n        onClose();\n    }, [onClose]);\n\n    const continueHandler = useCallback(() => {\n        markModalViewed(checkboxStateRef.current);\n        Analytics.sendHHEventButtonClick('overspending_continue', { hide: checkboxStateRef.current });\n        onClose();\n        if (pathname !== '/employer/vacancies') {\n            dispatch(push('/employer/vacancies'));\n        }\n    }, [onClose, pathname, dispatch]);\n\n    const [overspendingToDisplay, overspendingRest, overspendingRestVacanciesCount] = useMemo(\n        () => [\n            vacancyUpdateInfo.slice(0, 10),\n            vacancyUpdateInfo.slice(10),\n            vacancyUpdateInfo.slice(10).reduce((sum, { autoProlongationsCount }) => sum + autoProlongationsCount, 0),\n        ],\n        [vacancyUpdateInfo]\n    );\n\n    return (\n        <Modal\n            onClose={onClose}\n            backgroundClick={false}\n            closeButtonShow={false}\n            escapePress={false}\n            visible={vacancyUpdateInfo.length > 0}\n        >\n            <ModalHeader>\n                <H2>\n                    <ConversionNumber\n                        value={vacancyUpdateInfo.length}\n                        one={trls[TrlKeys.one]}\n                        some={trls[TrlKeys.some]}\n                        many={trls[TrlKeys.many]}\n                        hasValue={false}\n                        format={(trl) =>\n                            format(trls[TrlKeys.title], {\n                                '{0}': get7DaysRangeTrl(trls),\n                                '{1}': `${vacancyUpdateInfo.length} ${trl}`,\n                            })\n                        }\n                    />\n                </H2>\n            </ModalHeader>\n            <ModalContent>\n                <div className=\"employer-overspending-row\">\n                    <Text strong>{trls[TrlKeys.autoprolongation]}</Text>\n                    <div className=\"employer-overspending-count\">\n                        <Text strong>{trls[TrlKeys.spent]}</Text>\n                    </div>\n                </div>\n                {overspendingToDisplay.map(({ vacancyId, autoProlongationsCount, vacancyName }) => (\n                    <div key={vacancyId} className=\"employer-overspending-row\">\n                        <div>\n                            <Link href={`/vacancy/${vacancyId}`} target=\"_blank\">\n                                {vacancyName}\n                            </Link>\n                        </div>\n                        <div>{autoProlongationsCount}</div>\n                    </div>\n                ))}\n                {overspendingRest.length > 0 && (\n                    <div className=\"employer-overspending-row\">\n                        <div>\n                            {trls[TrlKeys.more]}{' '}\n                            <ConversionNumber\n                                value={overspendingRest.length}\n                                one={trls[TrlKeys.vacancyOne]}\n                                some={trls[TrlKeys.vacancySome]}\n                                many={trls[TrlKeys.vacancyMany]}\n                            />\n                        </div>\n                        <div>{overspendingRestVacanciesCount}</div>\n                    </div>\n                )}\n                <div className=\"employer-overspending-info\">{trls[TrlKeys.disable]}</div>\n            </ModalContent>\n            <ModalFooter>\n                <div className=\"employer-overspending-footer-content\">\n                    <div>\n                        <Checkbox onChange={({ target: { checked } }) => (checkboxStateRef.current = checked)}>\n                            {trls[TrlKeys.hide]}\n                        </Checkbox>\n                    </div>\n                    <div>\n                        <VSpacing base={2} />\n                        <Button appearance={ButtonAppearance.Outlined} onClick={hideModalHandler}>\n                            {trls[TrlKeys.ok]}\n                        </Button>\n                        <FormSpacer>\n                            <Button kind={ButtonKind.Primary} onClick={continueHandler}>\n                                {trls[TrlKeys.continue]}\n                            </Button>\n                        </FormSpacer>\n                    </div>\n                </div>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(EmployerOverspending);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    text: 'supernova.notification.prices.increase',\n    moreLink: 'notifications.siteWasUnavailable.link',\n};\n\nconst EmployerPricesIncrease: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            analyticsElementName=\"employer_prices_increase\"\n            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n        >\n            <p>{trls[TrlKeys.text]}</p>\n            <NotificationFooter>\n                <Link\n                    href={`/article/25341?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n                    target=\"_blank\"\n                    onClick={() => closeNotificationRef.current?.()}\n                >\n                    {trls[TrlKeys.moreLink]}\n                </Link>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(EmployerPricesIncrease);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    text: 'supernova.notification.employer.year.results.text',\n    link: 'supernova.notification.employer.year.results.link',\n};\n\nconst EmployerYearResults: TranslatedComponent<ComplexNotificationComponentProps> = ({ onClose, trls, ...props }) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n            notification={props}\n        >\n            <p>{trls[TrlKeys.text]}</p>\n            <NotificationFooter>\n                <Link\n                    href={`/article/stats2022?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n                    target=\"_blank\"\n                    onClick={() => closeNotificationRef.current?.()}\n                >\n                    {trls[TrlKeys.link]}\n                </Link>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(EmployerYearResults);\n","import esiaAuthorizationErrorElementShown from '@hh.ru/analytics-js-events/build/xhh/common/authorization/esia/esia_authorization_error_element_shown';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ElementShownAnchor from 'lux/components/ElementShownAnchor';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'notifications.esiaAccountNotLinked.caption',\n    text1: 'notifications.esiaAccountNotLinked.text.1',\n    text2: 'notifications.esiaAccountNotLinked.text.2',\n    ok: 'notifications.esiaAccountNotLinked.ok',\n};\n\nconst EsiaAccountNotLinked: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    return (\n        <SynchronizedNotification notification={notification} onClose={onClose}>\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <ElementShownAnchor fn={esiaAuthorizationErrorElementShown}>\n                <p>{trls[TrlKeys.text1]}</p>\n                <VSpacing base={3} />\n                <p>{trls[TrlKeys.text2]}</p>\n                <VSpacing base={1} />\n            </ElementShownAnchor>\n            <NotificationFooter>\n                <Button scale={ButtonScale.Small} data-qa=\"esia-account-not-linked-button-ok\" onClick={onClose}>\n                    {trls[TrlKeys.ok]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(EsiaAccountNotLinked);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    content: 'branding.reminder.fill.employer.constructor.notification',\n    link: 'branding.reminder.fill.employer.constructor.link',\n};\n\nconst FillEmployerPageConstructor: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => (\n    <SynchronizedNotification notification={notification} onClose={onClose}>\n        <p>{trls[TrlKeys.content]}</p>\n        <BlokoLink Element={Link} disableVisited to={`/employer/constructor?&hhtmFromLabel=notification_prolongation`}>\n            {trls[TrlKeys.link]}\n        </BlokoLink>\n    </SynchronizedNotification>\n);\n\nexport default translation(FillEmployerPageConstructor);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    content: 'branding.reminder.fill.vacancy.constructor.notification',\n    link: 'branding.reminder.fill.vacancy.constructor.link',\n};\n\nconst FillEmployerVacancyPageConstructor: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => (\n    <SynchronizedNotification notification={notification} onClose={onClose}>\n        <p>{trls[TrlKeys.content]}</p>\n        <BlokoLink\n            Element={Link}\n            disableVisited\n            to={`/employer/vacancyconstructor?hhtmFromLabel=notification_prolongation`}\n        >\n            {trls[TrlKeys.link]}\n        </BlokoLink>\n    </SynchronizedNotification>\n);\n\nexport default translation(FillEmployerVacancyPageConstructor);\n","import { useRef } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    content: 'notifications.greetingsFromZarplata.content',\n    link: 'notifications.greetingsFromZarplata.link',\n};\n\nconst SiteWasUnavailable: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification notification={notification} closeFuncRef={closeNotificationRef} onClose={onClose}>\n            {trls[TrlKeys.content]}\n            {NON_BREAKING_SPACE}\n            <BlokoLink Element={Link} to=\"/article/32350\">\n                {trls[TrlKeys.link]}\n            </BlokoLink>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(SiteWasUnavailable);\n","import { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: {\n        title: 'hhrating.registration.invitation.notification.title',\n        description: 'hhrating.registration.invitation.notification.description',\n        link: 'hhrating.registration.invitation.notification.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: {\n        title: 'hhrating.vote.invitation.notification.title',\n        description: 'hhrating.vote.invitation.notification.description',\n        link: 'hhrating.vote.invitation.notification.link',\n    },\n};\n\nconst notificationContent = {\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: {\n        trlKeys: TrlKeys[ComplexUserNotificationsTemplateKey.HHRatingRegistration],\n        link: '/shards/notifications/view_registration_hhrating',\n        analyticsName: 'hhrating_registration_invitation',\n    },\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: {\n        trlKeys: TrlKeys[ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation],\n        link: '/shards/notifications/view_vote_hhrating',\n        analyticsName: 'hhrating_vote_invitation',\n    },\n};\n\nconst sendClickAnalytics = (eventName: string) => {\n    // Internal analytics is sent from bff\n    Analytics.sendEvent(eventName, 'view', 'supernova');\n};\n\nconst HHRating: TranslatedComponent<ComplexNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const { trlKeys, link, analyticsName } =\n        notificationContent[notification.templateKey as keyof typeof notificationContent];\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            analyticsElementName={analyticsName}\n            closeEvent={`${analyticsName}_close`}\n            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n        >\n            <p>{trls[trlKeys.title]}</p>\n            <p>{trls[trlKeys.description]}</p>\n            <NotificationFooter>\n                <Button\n                    Element=\"a\"\n                    kind={ButtonKind.Primary}\n                    appearance={ButtonAppearance.Outlined}\n                    scale={ButtonScale.Small}\n                    onClick={() => {\n                        sendClickAnalytics(analyticsName);\n                        closeNotificationRef.current?.();\n                    }}\n                    target=\"_blank\"\n                    href={`${link}?notification_medium=priority`}\n                >\n                    {trls[trlKeys.link]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(HHRating);\n","// tempexp_26167_file\nimport { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { analyticsName, link } from 'lux/modules/notifications/HRElkaSpecial';\n\nconst TrlKeys = {\n    title: 'marketing.special.hr.elka.notification.title',\n    description: 'marketing.special.hr.elka.notification.description',\n    link: 'marketing.special.hr.elka.notification.link.tree',\n};\n\nconst HRElkaSpecial: TranslatedComponent<ComplexNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const sendAnalytics = useRef<() => void>(() => {\n        Analytics.sendHHEventButtonClick(`${analyticsName}_link`);\n        closeNotificationRef.current?.();\n    });\n    return (\n        <SynchronizedNotification\n            analyticsElementName={analyticsName}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            markAsViewedEvent={MarkAsViewedEvent.OnShow}\n            onClose={onClose}\n            closeEvent={`${analyticsName}_close`}\n            kind={NotificationKind.Message}\n        >\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <p>{trls[TrlKeys.description]}</p>\n            <NotificationFooter>\n                <Button\n                    scale={ButtonScale.Small}\n                    Element={Link}\n                    target=\"_blank\"\n                    onClick={sendAnalytics.current}\n                    to={link}\n                >\n                    {trls[TrlKeys.link]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(HRElkaSpecial);\n","import { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\nimport { analyticsNameMap, linkMap } from 'lux/modules/notifications/HRSpace';\n\nconst TrlKeys = {\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]: {\n        title: 'hrspace.notification.applicant.title',\n        description: 'hrspace.notification.applicant.description',\n        link: 'hrspace.notification.applicant.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]: {\n        title: 'hrspace.notification.employer.title',\n        description: 'hrspace.notification.employer.description',\n        link: 'hrspace.notification.employer.link',\n    },\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]: {\n        title: 'hrspace.notification.it_employer.title',\n        description: 'hrspace.notification.it_employer.description',\n        link: 'hrspace.notification.it_employer.link',\n    },\n};\n\ntype TemplateKeys = keyof typeof TrlKeys;\n\nconst HRSpace: TranslatedComponent<ComplexNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const key = notification.templateKey as TemplateKeys;\n    const closeNotificationRef = useRef<VoidFunction>(null);\n\n    return (\n        <SynchronizedNotification\n            analyticsElementName={analyticsNameMap[key]}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n            closeEvent={`${analyticsNameMap[key]}_close`}\n        >\n            <NotificationHeading>{trls[TrlKeys[key].title]}</NotificationHeading>\n            <p>{trls[TrlKeys[key].description]}</p>\n            <NotificationFooter>\n                <Button\n                    kind={ButtonKind.Primary}\n                    appearance={ButtonAppearance.Outlined}\n                    scale={ButtonScale.Small}\n                    Element=\"a\"\n                    target=\"_blank\"\n                    onClick={() => {\n                        Analytics.sendEvent(key, 'view', 'priority');\n                        Analytics.sendHHEventButtonClick(`${analyticsNameMap[key]}_link_priority`);\n                        closeNotificationRef.current?.();\n                    }}\n                    href={linkMap[key]}\n                >\n                    {trls[TrlKeys[key].link]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(HRSpace);\n","import { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { LoyaltySurveyType, runLoyaltySurvey } from 'lux/models/loyaltySurvey';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [LoyaltySurveyType.Adv]: 'notification.employer.loyaltySurvey.ADV.content.personal.manager',\n    [LoyaltySurveyType.Branding]: 'notification.employer.loyaltySurvey.BRANDING.content.personal.manager',\n    [LoyaltySurveyType.Clickme]: 'notification.employer.loyaltySurvey.CLICKME.content.personal.manager',\n    [LoyaltySurveyType.MainServices]: 'notification.employer.loyaltySurvey.MAIN_SERVICES.content.personal.manager',\n    button: 'notification.employer.loyaltySurvey.button',\n};\n\nconst REMOVE_NOTIFICATION_URL = '/surveys/loyalty/remove_notification';\n\ndeclare global {\n    interface FetcherPostApi {\n        [REMOVE_NOTIFICATION_URL]: {\n            queryParams: void;\n            body: void;\n            response: void;\n        };\n    }\n}\n\nconst LoyaltySurvey: TranslatedComponent<SimpleNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const params = useSelector(({ loyaltySurvey }) => loyaltySurvey);\n    const account = useSelector(({ account }) => account);\n    const surveyStarted = useRef(false);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const dispatch = useDispatch();\n\n    if (!params.showNotification) {\n        return null;\n    }\n\n    return (\n        <SynchronizedNotification\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={() => {\n                if (!surveyStarted.current) {\n                    Analytics.sendHHEventButtonClick('loyalty_survey_cancel', { from: 'action_block' });\n                }\n\n                fetcher.postFormData(REMOVE_NOTIFICATION_URL).catch(console.error);\n            }}\n            kind={NotificationKind.Message}\n        >\n            <div>\n                {format(trls[TrlKeys[notification.params.type as LoyaltySurveyType]], {\n                    '{0}': account?.firstName || '',\n                })}\n            </div>\n            <NotificationFooter>\n                <Button\n                    onClick={() => {\n                        Analytics.sendHHEventButtonClick('loyalty_survey_start', { from: 'action_block' });\n                        surveyStarted.current = true;\n                        closeNotificationRef.current?.();\n                        dispatch(runLoyaltySurvey(true));\n                    }}\n                    scale={ButtonScale.Small}\n                    data-qa=\"loyalty-survey-show-popup\"\n                >\n                    {trls[TrlKeys.button]}\n                </Button>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(LoyaltySurvey);\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport Notification from 'bloko/blocks/notificationManager/Notification';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport SendHHAnalytics from 'HH/SendHHAnalytics';\nimport RemindModal from 'lux/components/InterviewReminder';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { CurrentInterview, removeInterviewRemind, setInterviewRemind } from 'lux/models/candidatesList';\n\nconst AUTO_CLOSE_DELAY_MS = 10 * 1000;\n\nconst TrlKeys = {\n    body: 'resume.interview.schedule.notification.body',\n    button: 'resume.interview.schedule.notification.button',\n    name: 'resume.interview.schedule.notification.default.name',\n};\n\nconst ScheduleInterview: TranslatedComponent<SimpleNotificationComponentProps> = ({ trls, ...notification }) => {\n    const { firstName, lastName, topicId } = notification.params;\n\n    const dispatch = useDispatch();\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const remindInfo = useSelectorNonNullable(({ scheduleInterviewRemindInfo }) => scheduleInterviewRemindInfo);\n\n    const handleClick = useCallback(() => {\n        setModalVisible(true);\n        void Analytics.sendHHEventButtonClick('schedule_interview_open', { from: 'notification' });\n    }, []);\n\n    const handleClose = useCallback(() => {\n        setModalVisible(false);\n    }, []);\n\n    const handleChangeRemind = useCallback(\n        (currentInterview: CurrentInterview) => {\n            dispatch(setInterviewRemind({ currentInterview }));\n        },\n        [dispatch]\n    );\n\n    const handleDeleteRemind = useCallback(() => {\n        dispatch(removeInterviewRemind({ id: topicId }));\n    }, [dispatch, topicId]);\n\n    useEffect(() => {\n        void SendHHAnalytics({ goal: 'schedule_interview_notification_shown' });\n        const url = urlParser(window.location.search);\n        delete url.params.interviewedTopicId;\n        window.history.replaceState(window.history.state, document.title, url.search);\n    }, []);\n\n    return (\n        <>\n            <Notification autoClose autoCloseDelay={AUTO_CLOSE_DELAY_MS}>\n                <div>\n                    {firstName && lastName ? `${firstName} ${lastName}` : trls[TrlKeys.name]} {trls[TrlKeys.body]}\n                    <NotificationFooter>\n                        <Button scale={ButtonScale.Small} onClick={handleClick}>\n                            {trls[TrlKeys.button]}\n                        </Button>\n                    </NotificationFooter>\n                </div>\n            </Notification>\n            <RemindModal\n                visible={modalVisible}\n                topicId={topicId}\n                remindInfo={remindInfo}\n                onClose={handleClose}\n                onChange={handleChangeRemind}\n                onDelete={handleDeleteRemind}\n                fromNotification\n            />\n        </>\n    );\n};\n\nexport default translation(ScheduleInterview);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    content: 'notifications.siteWasUnavailable.content',\n    link: 'notifications.siteWasUnavailable.link',\n};\n\nconst SiteWasUnavailable: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <SynchronizedNotification\n            analyticsElementName=\"site-was-unavailable\"\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            onClose={onClose}\n        >\n            {trls[TrlKeys.content]}\n            {NON_BREAKING_SPACE}\n            <Link\n                onClick={() => closeNotificationRef.current?.()}\n                target=\"_blank\"\n                href={`/article/24746?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n            >\n                {trls[TrlKeys.link]}\n            </Link>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(SiteWasUnavailable);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonScale } from 'bloko/blocks/button';\nimport BlokoLink from 'bloko/blocks/link';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/Notification';\nimport NotificationFooter from 'bloko/blocks/notificationManager/NotificationFooter';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport useSkillVerificationMethodsBreadcrumbs from 'lux/hooks/useSkillVerificationMethodsBreadcrumbs';\n\nconst TrlKeys = {\n    title: 'applicantSkillsNotification.expiration.title',\n    desc: 'applicantSkillsNotification.expiration.desc',\n    open: 'applicantSkillsNotification.expiration.open',\n};\n\nconst SkillVerificationExpiring: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    ...notification\n}) => {\n    const { createSkillVerificationMethodsPath } = useSkillVerificationMethodsBreadcrumbs();\n\n    return (\n        <SynchronizedNotification notification={notification} kind={NotificationKind.Error} autoClose={false}>\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            {trls[TrlKeys.desc]}\n            <NotificationFooter>\n                <BlokoLink Element={Link} to={createSkillVerificationMethodsPath()}>\n                    <Button scale={ButtonScale.Small} onClick={notification.onClose}>\n                        {trls[TrlKeys.open]}\n                    </Button>\n                </BlokoLink>\n            </NotificationFooter>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(SkillVerificationExpiring);\n","import vacancyBlockedVacancyLinkClick, {\n    NotificationCode,\n} from '@hh.ru/analytics-js-events/build/xhh/employer/notifications/vacancy_blocked_vacancy_link_click';\nimport Link from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { VacancyBlockedReason } from 'lux/components/Notifications/VacancyBlocked';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    goToVacancy: 'supernova.notification.employer.vacancy.blocked.go.to.vacancy',\n\n    [VacancyBlockedReason.VacancyBlockedDuePaidServices]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.paid.services',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.paid.services.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueBadDescription]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.bad.description',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.bad.description.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueTwoInOne]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.two.in.one',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.two.in.one.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueTraining]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.training',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.training.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueCaptionMissing]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.caption.missing',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.caption.missing.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueModerator]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.moderator',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.moderator.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueRelocateFromBelarus]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.relocate.from.belarus',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.relocate.from.belarus.advice',\n    },\n    [VacancyBlockedReason.VacancyBlockedDueReplacement]: {\n        main: 'supernova.notification.employer.vacancy.blocked.due.replacement',\n        advice: 'supernova.notification.employer.vacancy.blocked.due.replacement.advice',\n    },\n};\n\nconst VacancyBlocked: TranslatedComponent<ComplexNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const hhtmSource = useSelector(({ analyticsParams }) => analyticsParams.hhtmSource);\n    const notificationCode = notification.notificationCode as NotificationCode;\n\n    return (\n        <SynchronizedNotification analyticsElementName=\"vacancy_blocked\" notification={notification} onClose={onClose}>\n            {formatToReactComponent(trls[TrlKeys[notificationCode].main], {\n                '{0}': (\n                    <Text Element=\"span\" strong>\n                        {notification.params.vacancyName}\n                    </Text>\n                ),\n            })}\n            {notificationCode !== VacancyBlockedReason.VacancyBlockedDueModerator && (\n                <>\n                    <VSpacing base={1} />\n                    {trls[TrlKeys[notificationCode].advice]}\n                    <VSpacing base={1} />\n                    <Link\n                        onClick={() => {\n                            vacancyBlockedVacancyLinkClick({\n                                notificationCode,\n                                notificationType: 'bloko_notification',\n                            });\n                        }}\n                        target=\"_blank\"\n                        href={`/vacancy/${notification.params.vacancyId}?from=notification&hhtmFrom=${hhtmSource}&hhtmFromLabel=user_notification`}\n                    >\n                        {trls[TrlKeys.goToVacancy]}\n                    </Link>\n                </>\n            )}\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(VacancyBlocked);\n","import { useRef } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { ComplexNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    text: 'employer.publicationReadyDrafts.text',\n    vacancy: 'employer.publicationReadyDrafts.vacancy',\n    vacancies: 'employer.vacancyDraft.saveNotificaition.vacancies',\n    waiting: 'employer.publicationReadyDrafts.waitingForPublication',\n    titleOne: 'employer.publicationReadyDrafts.title.one',\n    titleSome: 'employer.publicationReadyDrafts.title.some',\n    titleMany: 'employer.publicationReadyDrafts.title.many',\n};\n\nconst VacancyDraftPublicationReady: TranslatedComponent<ComplexNotificationComponentProps> = ({\n    trls,\n    onClose,\n    ...notification\n}) => {\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const { params } = notification;\n    const ready = parseInt(params.ready || '0', 10);\n\n    if (ready === 0) {\n        onClose();\n        return null;\n    }\n\n    return (\n        <SynchronizedNotification notification={notification} onClose={onClose} closeFuncRef={closeNotificationRef}>\n            {ready !== 1 && (\n                <>\n                    <NotificationHeading>\n                        <ConversionNumber\n                            value={ready}\n                            one={trls[TrlKeys.titleOne]}\n                            some={trls[TrlKeys.titleSome]}\n                            many={trls[TrlKeys.titleMany]}\n                            hasValue\n                        />\n                    </NotificationHeading>\n                    {trls[TrlKeys.text]}\n                </>\n            )}\n            {NON_BREAKING_SPACE}\n            <Link\n                onClick={() => closeNotificationRef.current?.()}\n                to={ready === 1 ? `/employer/vacancy/create?draftId=${params.draft_id}` : '/employer/vacancies'}\n            >\n                {ready === 1 ? trls[TrlKeys.vacancy] : trls[TrlKeys.vacancies]}\n            </Link>\n            {ready === 1 && `${NON_BREAKING_SPACE}${trls[TrlKeys.waiting]}`}\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(VacancyDraftPublicationReady);\n","import { useRef } from 'react';\n\nimport Link from 'bloko/blocks/link';\nimport Notification from 'bloko/blocks/notificationManager/Notification';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    title: 'employer.vacancyDraft.saveNotificaition.title',\n    content: 'employer.vacancyDraft.saveNotificaition.text',\n    link: 'employer.vacancyDraft.saveNotificaition.vacancies',\n};\n\nconst VacancyDraftSaved: TranslatedComponent<SimpleNotificationComponentProps> = ({\n    trls,\n    templateKey,\n    ...notification\n}) => {\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    return (\n        <Notification kind={NotificationKind.Ok} autoClose closeFuncRef={closeNotificationRef} {...notification}>\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            {trls[TrlKeys.content]}\n            {NON_BREAKING_SPACE}\n            <Link onClick={() => closeNotificationRef.current?.()} href=\"/employer/vacancies\">\n                {trls[TrlKeys.link]}\n            </Link>\n        </Notification>\n    );\n};\n\nexport default translation(VacancyDraftSaved);\n","import { FC, PropsWithChildren } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport urlParser from 'bloko/common/urlParser';\n\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { NotificationLinkProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport VacancyScheduledPublicationNotification from 'lux/components/VacancyScheduledPublicationNotification';\nimport { ComplexUserNotification, ComplexUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst LinkComponent: FC<NotificationLinkProps & PropsWithChildren> = ({ to, ...props }) => {\n    const url = urlParser(to);\n    url.params = { ...url.params, from: 'user-notification', hhtmFromLabel: 'user_notification' };\n    return <BlokoLink Element={Link} disableVisited to={url.href} {...props} />;\n};\n\nconst VacancyScheduledPublication: FC<ComplexUserNotification & PropsWithChildren> = ({\n    params,\n    templateKey,\n    ...props\n}) => {\n    return (\n        <SynchronizedNotification\n            kind={\n                templateKey === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess ||\n                templateKey === ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses\n                    ? NotificationKind.Ok\n                    : NotificationKind.Error\n            }\n            notification={{ params, templateKey, ...props }}\n        >\n            <p>\n                <VacancyScheduledPublicationNotification\n                    Component={LinkComponent}\n                    params={params}\n                    templateKey={templateKey}\n                    {...props}\n                />\n            </p>\n        </SynchronizedNotification>\n    );\n};\n\nexport default VacancyScheduledPublication;\n","import { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link from 'bloko/blocks/link';\nimport NotificationHeading from 'bloko/blocks/notificationManager/NotificationHeading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport SynchronizedNotification from 'lux/components/UserNotifications/common/SynchronizedNotification';\nimport { SimpleNotificationComponentProps } from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport translation from 'lux/components/translation';\nimport { SimpleUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nconst TrlKeys = {\n    title: 'notifications.videointerview.promo.title',\n    content: 'notifications.videointerview.promo.content',\n    link: 'notifications.videointerview.promo.content.link',\n};\n\nconst VideoInterview: TranslatedComponent<SimpleNotificationComponentProps> = ({ trls, onClose, ...notification }) => {\n    const isVideoInterview = notification.templateKey === SimpleUserNotificationsTemplateKey.VideoInteview;\n    const closeNotificationRef = useRef<VoidFunction>(null);\n    const analyticsName = `${notification.templateKey}_notification`;\n    const sendLinkClickAnalytics = () => {\n        Analytics.sendHHEventButtonClick(analyticsName);\n    };\n\n    return (\n        <SynchronizedNotification\n            analyticsElementName={analyticsName}\n            notification={notification}\n            closeFuncRef={closeNotificationRef}\n            markAsViewedEvent={isVideoInterview ? MarkAsViewedEvent.OnHide : MarkAsViewedEvent.OnShow}\n            onClose={onClose}\n            closeEvent={`close_${notification.templateKey}_notification`}\n        >\n            <NotificationHeading>{trls[TrlKeys.title]}</NotificationHeading>\n            <p>\n                {formatToReactComponent(trls[TrlKeys.content], {\n                    '{0}': (\n                        <Link\n                            target=\"_blank\"\n                            href={`https://video.hh.ru?utm_source=hh.ru&utm_medium=referral&utm_campaign=notification_${\n                                isVideoInterview ? 'main' : 'vacancy'\n                            }`}\n                            onClick={sendLinkClickAnalytics}\n                        >\n                            {trls[TrlKeys.link]}\n                        </Link>\n                    ),\n                })}\n            </p>\n        </SynchronizedNotification>\n    );\n};\n\nexport default translation(VideoInterview);\n","import { ComponentType } from 'react';\n\nimport { ComplexUserNotificationsTemplateKey, SimpleUserNotificationsTemplateKey } from 'lux/models/userNotifications';\n\nimport {\n    ComplexNotificationComponentProps,\n    SimpleNotificationComponentProps,\n} from 'lux/components/UserNotifications/common/notificationComponentProps';\nimport AdvertisementAgreement from 'lux/components/UserNotifications/variants/AdvertisementAgreement';\nimport ApplicantFeedbackAboutVacancy from 'lux/components/UserNotifications/variants/ApplicantFeedbackAboutVacancy';\nimport ApplicantJobSearchStatus from 'lux/components/UserNotifications/variants/ApplicantJobSearchStatus';\nimport baseNotificationFactory from 'lux/components/UserNotifications/variants/BaseNotification';\nimport BillingCartActivation from 'lux/components/UserNotifications/variants/BillingCartActivation';\nimport BrandingMakeup from 'lux/components/UserNotifications/variants/BrandingMakeup';\nimport BuyEmployerPageConstructor from 'lux/components/UserNotifications/variants/BuyEmployerPageConstructor';\nimport BuyVacancyPageConstructor from 'lux/components/UserNotifications/variants/BuyVacancyPageConstructor';\nimport CallTracking from 'lux/components/UserNotifications/variants/CallTracking';\n// tempexp_28472_next-line\nimport ClientDay from 'lux/components/UserNotifications/variants/ClientDay';\nimport EmailVerificationErrorAgain from 'lux/components/UserNotifications/variants/EmailVerificationErrorAgain';\nimport EmailVerificationWasSent from 'lux/components/UserNotifications/variants/EmailVerificationWasSent';\nimport EmployerHhRatingResults from 'lux/components/UserNotifications/variants/EmployerHhRatingResults';\nimport EmployerItAccreditation from 'lux/components/UserNotifications/variants/EmployerItAccreditation';\nimport EmployerOverspending from 'lux/components/UserNotifications/variants/EmployerOverspending';\nimport EmployerPricesIncrease from 'lux/components/UserNotifications/variants/EmployerPricesIncrease';\nimport EmployerYearResults from 'lux/components/UserNotifications/variants/EmployerYearResults';\nimport EsiaAccountNotLinked from 'lux/components/UserNotifications/variants/EsiaAccountNotLinked';\nimport FillEmployerPageConstructor from 'lux/components/UserNotifications/variants/FillEmployerPageConstructor';\nimport FillEmployerVacancyPageConstructor from 'lux/components/UserNotifications/variants/FillEmployerVacancyPageConstructor';\nimport GreetingsFromZarplata from 'lux/components/UserNotifications/variants/GreetingsFromZarplata';\nimport HHRating from 'lux/components/UserNotifications/variants/HHRating';\nimport HRElkaSpecial from 'lux/components/UserNotifications/variants/HRElkaSpecial';\nimport HRSpace from 'lux/components/UserNotifications/variants/HRSpace';\nimport LoyaltySurvey from 'lux/components/UserNotifications/variants/LoyaltySurvey';\nimport ScheduleInterview from 'lux/components/UserNotifications/variants/ScheduleInterview';\nimport SiteWasUnavailable from 'lux/components/UserNotifications/variants/SiteWasUnavailable';\nimport SkillVerificationExpiring from 'lux/components/UserNotifications/variants/SkillVerificationExpiring';\nimport VacancyBlocked from 'lux/components/UserNotifications/variants/VacancyBlocked';\nimport VacancyDraftPublicationReady from 'lux/components/UserNotifications/variants/VacancyDraftPublicationReady';\nimport VacancyDraftSaved from 'lux/components/UserNotifications/variants/VacancyDraftSaved';\nimport VacancyScheduledPublication from 'lux/components/UserNotifications/variants/VacancyScheduledPublication';\nimport VideoInterview from 'lux/components/UserNotifications/variants/VideoInterview';\n\ntype UserNotificationConfig = {\n    [key in\n        | SimpleUserNotificationsTemplateKey\n        | ComplexUserNotificationsTemplateKey]?: key extends SimpleUserNotificationsTemplateKey\n        ? ComponentType<SimpleNotificationComponentProps>\n        : ComponentType<ComplexNotificationComponentProps>;\n};\n\nconst userNotificationsConfig: UserNotificationConfig = {\n    [SimpleUserNotificationsTemplateKey.SiteWasUnavailable]: SiteWasUnavailable,\n    [SimpleUserNotificationsTemplateKey.GreetingsFromZarplata]: GreetingsFromZarplata,\n    [SimpleUserNotificationsTemplateKey.EmployerOverspendingInfo]: EmployerOverspending,\n    [SimpleUserNotificationsTemplateKey.EmailVerificationErrorAgain]: EmailVerificationErrorAgain,\n    [SimpleUserNotificationsTemplateKey.EmailVerificationWasSent]: EmailVerificationWasSent,\n    [SimpleUserNotificationsTemplateKey.EmailVerificationWasSentAgain]: EmailVerificationWasSent,\n    [SimpleUserNotificationsTemplateKey.EmailVerificationCompleted]: baseNotificationFactory({ synchronized: false }),\n    [SimpleUserNotificationsTemplateKey.EmailVerificationError]: baseNotificationFactory({\n        synchronized: false,\n        error: true,\n    }),\n    [SimpleUserNotificationsTemplateKey.EmailVerificationWasSentAgainTooOften]: baseNotificationFactory({\n        error: true,\n    }),\n    [SimpleUserNotificationsTemplateKey.EmailVerificationWasSentAgainError]: baseNotificationFactory({ error: true }),\n    [SimpleUserNotificationsTemplateKey.ManagerQuotaChangeFail]: baseNotificationFactory({ error: true }),\n    [SimpleUserNotificationsTemplateKey.EsiaAccountNotLinked]: EsiaAccountNotLinked,\n    [SimpleUserNotificationsTemplateKey.ZarplataNoSocialRegistration]: baseNotificationFactory({\n        error: true,\n        autoClose: true,\n    }),\n    [SimpleUserNotificationsTemplateKey.OauthConnectInternalError]: baseNotificationFactory({\n        error: true,\n        autoClose: true,\n    }),\n    [SimpleUserNotificationsTemplateKey.SurveyWasIgnored]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.SurveyWasFinished]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.PhoneHasBeenVerified]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.ManagerQuotaChangeSuccess]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.AllSurveysWereIgnored]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.AccountDeleted]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.ScheduleInterview]: ScheduleInterview,\n    [SimpleUserNotificationsTemplateKey.LoyaltySurvey]: LoyaltySurvey,\n    [SimpleUserNotificationsTemplateKey.VacancyDraftSaved]: VacancyDraftSaved,\n    [SimpleUserNotificationsTemplateKey.ResumeMergeSuccess]: baseNotificationFactory(),\n    [SimpleUserNotificationsTemplateKey.VideoInteview]: VideoInterview,\n    [SimpleUserNotificationsTemplateKey.VideoInteviewVacancy]: VideoInterview,\n    [SimpleUserNotificationsTemplateKey.EmployerHhRatingResultsForApplicants]: EmployerHhRatingResults,\n    [SimpleUserNotificationsTemplateKey.EmployerHhRatingResultsForEmployers]: EmployerHhRatingResults,\n    [SimpleUserNotificationsTemplateKey.SkillVerificationExpiring]: SkillVerificationExpiring,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoQuotasFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPermissionFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationNoPublicationFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationValidationFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationUnknownFailure]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccesses]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyScheduledPublicationSuccess]: VacancyScheduledPublication,\n    [ComplexUserNotificationsTemplateKey.VacancyDraftPublicationReady]: VacancyDraftPublicationReady,\n    [ComplexUserNotificationsTemplateKey.EmployerPricesIncrease]: EmployerPricesIncrease,\n    [ComplexUserNotificationsTemplateKey.ApplicantFeedbackAboutVacancy]: ApplicantFeedbackAboutVacancy,\n    [ComplexUserNotificationsTemplateKey.CallTracking]: CallTracking,\n    [ComplexUserNotificationsTemplateKey.HHRatingRegistration]: HHRating,\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationForbidden]: BillingCartActivation,\n    [ComplexUserNotificationsTemplateKey.BillingDelayedCartActivationExpired]: BillingCartActivation,\n    [ComplexUserNotificationsTemplateKey.EmployerYearResults]: EmployerYearResults,\n    [ComplexUserNotificationsTemplateKey.EmployerItAccreditation]: EmployerItAccreditation,\n    [ComplexUserNotificationsTemplateKey.SuggestionVacancyMakeup]: BrandingMakeup,\n    [ComplexUserNotificationsTemplateKey.SuggestionEmployerMakeup]: BrandingMakeup,\n    [ComplexUserNotificationsTemplateKey.HHRatingVoteInvitation]: HHRating,\n    [ComplexUserNotificationsTemplateKey.FillEmployerPageConstructor]: FillEmployerPageConstructor,\n    [ComplexUserNotificationsTemplateKey.FillEmployerVacancyPageConstructor]: FillEmployerVacancyPageConstructor,\n    [ComplexUserNotificationsTemplateKey.BuyVacancyPageConstructor]: BuyVacancyPageConstructor,\n    [ComplexUserNotificationsTemplateKey.BuyEmployerPageConstructor]: BuyEmployerPageConstructor,\n    [ComplexUserNotificationsTemplateKey.ApplicantJobSearchStatus]: ApplicantJobSearchStatus,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoITEmployer]: HRSpace,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoEmployer]: HRSpace,\n    [ComplexUserNotificationsTemplateKey.HRSpacePromoApplicant]: HRSpace,\n    // tempexp_26167_next-line\n    [ComplexUserNotificationsTemplateKey.HRElkaSpecial]: HRElkaSpecial,\n    // tempexp_28472_next-line\n    [SimpleUserNotificationsTemplateKey.ClientDay]: ClientDay,\n    [ComplexUserNotificationsTemplateKey.AdvertisementAgreement]: AdvertisementAgreement,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueReplacement]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueModerator]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueTraining]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueBadDescription]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDuePaidServices]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueCaptionMissing]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueRelocateFromBelarus]: VacancyBlocked,\n    [ComplexUserNotificationsTemplateKey.VacancyBlockedDueTwoInOne]: VacancyBlocked,\n};\n\nexport default userNotificationsConfig;\n","import { useEffect, useState, useRef, FC } from 'react';\n\nimport Debug from 'HHC/Debug';\nimport {\n    isComplexUserNotification,\n    isSimpleUserNotification,\n    UserNotification,\n    UserNotifications,\n} from 'lux/models/userNotifications';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport config from 'lux/components/UserNotifications/config';\n\nconst DISABLED_NOTIFICATIONS_ON_FRONT = ['employerUniversity'];\n\nconst logUnknownNotificationKey = (key: string) => {\n    if (!DISABLED_NOTIFICATIONS_ON_FRONT.includes(key)) {\n        Debug.log('out', 'Unknown priority user notification template key', {\n            explain: key,\n        });\n    }\n};\n\nconst UserNotificationsManager: FC = () => {\n    const shownNotifications = useRef<UserNotification[]>([]);\n    const userNotifications = useSelector(({ userNotifications }) => userNotifications);\n    const [notifications, setNotifications] = useState<UserNotifications>([]);\n    useEffect(() => {\n        const notShownNotifications = userNotifications.reduce<UserNotifications>((result, notification) => {\n            let index;\n            if (isComplexUserNotification(notification)) {\n                if (!notification.isPriority) {\n                    return result;\n                }\n                const notificationId = notification.id;\n                index = shownNotifications.current.findIndex(\n                    (notification) => isComplexUserNotification(notification) && notification.id === notificationId\n                );\n            } else {\n                const notificationId = notification.templateKey;\n                index = shownNotifications.current.findIndex(\n                    (notification) =>\n                        isSimpleUserNotification(notification) && notification.templateKey === notificationId\n                );\n            }\n            if (index === -1) {\n                result.push(notification);\n            }\n            return result;\n        }, []);\n\n        if (notShownNotifications.length) {\n            shownNotifications.current.push(...notShownNotifications);\n            setNotifications((notifications) => [...notifications, ...notShownNotifications]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userNotifications]);\n    const closeHandler = (notification: UserNotification) => {\n        if (isComplexUserNotification(notification)) {\n            setNotifications((notifications) =>\n                notifications.filter((item) => isSimpleUserNotification(item) || item.id !== notification.id)\n            );\n            return;\n        }\n        setNotifications((notifications) =>\n            notifications.filter(\n                (item) => isComplexUserNotification(item) || item.templateKey !== notification.templateKey\n            )\n        );\n    };\n\n    return (\n        <>\n            {notifications.map((notification) => {\n                if (isComplexUserNotification(notification)) {\n                    const Notification = config[notification.templateKey];\n                    if (!Notification) {\n                        logUnknownNotificationKey(notification.templateKey);\n                        return null;\n                    }\n\n                    return (\n                        <Notification\n                            key={notification.id || notification.templateKey}\n                            onClose={() => closeHandler(notification)}\n                            {...notification}\n                        />\n                    );\n                }\n\n                const Notification = config[notification.templateKey];\n                if (!Notification) {\n                    logUnknownNotificationKey(notification.templateKey);\n                    return null;\n                }\n                return (\n                    <Notification\n                        key={notification.templateKey}\n                        onClose={() => closeHandler(notification)}\n                        {...notification}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nexport default UserNotificationsManager;\n","const hasTimeZoneOffset = (dateString: string): boolean =>\n    /([+-]\\d{2}:\\d{2}|[+-]\\d{4}|[+-]\\d{2}|Z)$/.test(dateString.slice(8));\n\nconst isValidDate = (value: unknown): boolean => {\n    if (typeof value !== 'string' && typeof value !== 'number') {\n        return false;\n    }\n    const date = new Date(value);\n    return !isNaN(date.getTime());\n};\n\nexport const findNotIsoDates = (data: Record<string, unknown>, path = ['initialState']): string[] => {\n    const result: string[] = [];\n\n    const recursiveFind = (data: Record<string, unknown>, path: string[]) => {\n        for (const key in data) {\n            const value = data[key];\n            const fullPath = [...path, key];\n\n            if (\n                typeof value === 'string' &&\n                (value.match(/\\d/g) || []).length >= 6 &&\n                isValidDate(value) &&\n                /-/.test(value) &&\n                !/[a-sA-Su-yU-Yа-яА-Я]/.test(value) &&\n                !hasTimeZoneOffset(value)\n            ) {\n                result.push(`${fullPath.join('.')}: '${value}'`);\n            }\n\n            if (value && typeof value === 'object') {\n                recursiveFind(value as Record<string, unknown>, fullPath);\n            }\n        }\n    };\n\n    if (!data || typeof data !== 'object') {\n        return result;\n    }\n\n    recursiveFind(data, path);\n    return result;\n};\n","import { createRef, Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport * as Sentry from '@sentry/browser';\nimport PropTypes from 'prop-types';\n\nimport {\n    BreakpointProvider as MagritteBreakpointProvider,\n    GridHighlighter,\n    SnackbarContextProvider,\n} from '@hh.ru/magritte-ui';\nimport BlokoBreakpointProvider from 'bloko/blocks/breakpointProvider';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport { TipProvider } from 'bloko/blocks/drop';\nimport { TranslationLangContext } from 'bloko/common/hooks/useTranslations';\n\nimport Debug from 'HHC/Debug';\nimport AppPromoBanner from 'lux/components/AppPromoBanner';\nimport ChatikIntegration from 'lux/components/ChatikIntegration';\nimport ContainerForXSL from 'lux/components/CodeInjector/ContainerForXSL';\nimport DeepLinkCommand from 'lux/components/DeepLinkCommand';\nimport DevBuildLoader from 'lux/components/DevBuild/Loader';\nimport LinearProgress from 'lux/components/LinearProgress';\nimport MagritteThemeProvider from 'lux/components/MagritteThemeProvider';\nimport Notifications from 'lux/components/Notifications';\nimport FullPageLayout from 'lux/components/PageLayout/FullPageLayout';\nimport ResumesCountriesVisibilitySettingsModalContainer from 'lux/components/ResumesCountriesVisibility/ResumesCountriesVisibilitySettingsModalContainer';\nimport SupernovaNotificationManager from 'lux/components/SupernovaNotificationManager';\nimport UserNotifications from 'lux/components/UserNotifications';\nimport translation from 'lux/components/translation';\nimport { findNotIsoDates } from 'lux/modules/findNotIsoDates';\nimport routes, { forbiddenPageRoute, errorPageRoute } from 'lux/modules/routes';\nimport { getStore } from 'lux/modules/typedStore';\n\nconst DATA_QA_RENDER_STATUS = 'lux-container lux-container-rendered';\nconst DATA_QA_FETCHING_STATUS = 'lux-container lux-container-fetching';\nconst RENDER_TIMEOUT = 50;\n\nconst Features = {\n    highlightMagritteGrid: 'highlight_magritte_grid',\n    notIsoDatesLogging: 'not_iso_dates_logging',\n};\n\nconst AppError = ({ trls }) => (\n    <Fragment>\n        <LinearProgress />\n        <ColumnsWrapper>\n            <div className=\"row-content\">\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    {trls[AppError.trls.error]}\n                </Column>\n            </div>\n        </ColumnsWrapper>\n    </Fragment>\n);\n\nAppError.trls = {\n    error: 'lux.error',\n};\n\nAppError.propTypes = {\n    trls: PropTypes.object,\n};\n\nconst ErrorPage = translation(AppError);\n\nclass AppContainer extends Component {\n    state = {\n        hasError: false,\n    };\n    static trls = {\n        error: 'lux.error',\n    };\n\n    static propTypes = {\n        isFetching: PropTypes.bool,\n        location: PropTypes.object,\n        lang: PropTypes.string,\n        forbidden: PropTypes.bool,\n        renderRestriction: PropTypes.shape({\n            breakpoint: PropTypes.string,\n            magritteBreakpoint: PropTypes.string,\n            force: PropTypes.bool,\n            renderRestriction: PropTypes.bool,\n        }),\n        errorCode: PropTypes.number,\n        isLegacyPage: PropTypes.bool,\n        renderCallback: PropTypes.func,\n        showGridHighlighter: PropTypes.bool,\n        notIsoDatesLogging: PropTypes.bool,\n        errorPage: PropTypes.shape({\n            isError: PropTypes.bool,\n        }),\n    };\n\n    element = createRef();\n\n    rootElementRef = (rootElement) => {\n        this.element.current = rootElement;\n        if (this.props.renderCallback && rootElement) {\n            this.props.renderCallback();\n        }\n    };\n\n    setDataQa(dataQa) {\n        if (this.element.current) {\n            this.element.current.dataset.qa = dataQa;\n        }\n    }\n\n    logNotIsoDates() {\n        if (!this.props.notIsoDatesLogging) {\n            return;\n        }\n\n        requestIdleCallback(async () => {\n            const start = performance.now();\n            const store = await getStore();\n            const state = store.getState();\n            const notIsoDates = findNotIsoDates(state);\n            const elapsedTime = performance.now() - start;\n\n            notIsoDates?.forEach((dateString) => {\n                Debug.log('out', 'Date without a time zone was found in the initial state', {\n                    explain: dateString,\n                    elapsedTime: `${elapsedTime}ms`,\n                    dateString,\n                });\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.setDataQa(DATA_QA_RENDER_STATUS);\n        this.logNotIsoDates();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.isFetching) {\n            this.setDataQa(DATA_QA_FETCHING_STATUS);\n        } else {\n            setTimeout(() => {\n                this.setDataQa(DATA_QA_RENDER_STATUS);\n            }, RENDER_TIMEOUT);\n        }\n\n        return nextProps.location !== this.props.location || nextState.hasError;\n    }\n\n    componentDidCatch(error, errorInfo) {\n        if (window.globalVars.features.sentry_logging) {\n            Sentry.withScope((scope) => {\n                scope.setTag('origin', 'componentDidCatch');\n                scope.setExtras(errorInfo);\n                Sentry.captureException(error);\n            });\n        }\n\n        this.setState({\n            hasError: true,\n        });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <TranslationLangContext.Provider value={this.props.lang}>\n                    <ErrorPage />\n                </TranslationLangContext.Provider>\n            );\n        }\n\n        const { errorCode, isLegacyPage } = this.props;\n        const shouldShow4xxErrorPage =\n            isLegacyPage && errorCode >= 400 && errorCode < 500 && ![401, 403].includes(errorCode);\n\n        return (\n            <div ref={this.rootElementRef}>\n                <DevBuildLoader />\n                <TranslationLangContext.Provider value={this.props.lang}>\n                    <BlokoBreakpointProvider\n                        storedBreakpointValue={this.props.renderRestriction.breakpoint}\n                        forceUseStoredBreakpoint={this.props.renderRestriction.force}\n                        renderRestriction={!!this.props.renderRestriction}\n                    >\n                        <MagritteThemeProvider>\n                            <MagritteBreakpointProvider\n                                storeActualBreakpointValueInCookie\n                                storedBreakpointValue={this.props.renderRestriction.magritteBreakpoint}\n                                force={this.props.renderRestriction.force}\n                                renderRestriction={!!this.props.renderRestriction}\n                            >\n                                <SnackbarContextProvider>\n                                    <GridHighlighter show={!!this.props.showGridHighlighter} />\n                                    <TipProvider>\n                                        <SupernovaNotificationManager>\n                                            <ChatikIntegration>\n                                                <DeepLinkCommand />\n                                                <LinearProgress />\n                                                <Notifications />\n                                                <UserNotifications />\n                                                <AppPromoBanner />\n\n                                                {shouldShow4xxErrorPage ? (\n                                                    <FullPageLayout>\n                                                        <ContainerForXSL place=\"legacy-page-layout-xsl\" />\n                                                    </FullPageLayout>\n                                                ) : (\n                                                    /* Из-за использования push react-router нужно явно указывать location */\n                                                    /* так как мы ловим его в redux-spa-middleware */\n                                                    <Switch location={this.props.location}>\n                                                        {this.props.forbidden && (\n                                                            <Route exact {...forbiddenPageRoute} />\n                                                        )}\n\n                                                        {this.props.errorPage.isError && (\n                                                            <Route exact {...errorPageRoute} />\n                                                        )}\n\n                                                        {!this.props.forbidden &&\n                                                            !this.props.errorPage.isError &&\n                                                            routes.map((route) => (\n                                                                <Route\n                                                                    exact\n                                                                    key={route.path || 'LegacyPage'}\n                                                                    {...route}\n                                                                />\n                                                            ))}\n                                                    </Switch>\n                                                )}\n                                                <ResumesCountriesVisibilitySettingsModalContainer />\n                                            </ChatikIntegration>\n                                        </SupernovaNotificationManager>\n                                    </TipProvider>\n                                </SnackbarContextProvider>\n                            </MagritteBreakpointProvider>\n                        </MagritteThemeProvider>\n                    </BlokoBreakpointProvider>\n                </TranslationLangContext.Provider>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => ({\n    isFetching: state.fetchingData,\n    location: state.router.location,\n    lang: state.langs[0],\n    forbidden: state.forbidden,\n    errorPage: state.errorPage,\n    renderRestriction: state.renderRestriction,\n    errorCode: state.errorCode,\n    isLegacyPage: state.request?.luxPageName === 'LegacyPage',\n    showGridHighlighter: state.features[Features.highlightMagritteGrid],\n    notIsoDatesLogging: state.features[Features.notIsoDatesLogging],\n}))(AppContainer);\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerConstructor/EmployerConstructor.route'));\n","import Loadable from 'react-loadable';\n\nexport default Loadable(() => import('../../pages/EmployerSimpleEdit/EmployerSimpleEdit.route'));\n","import { DefaultRootState } from 'react-redux';\nimport { ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { Action } from '@hh.ru/redux-create-reducer';\n\nimport { addNotificationAction } from 'lux/models/notifications';\n\nlet id = 0;\n\nconst actionCreator: ActionCreator<ThunkAction<Action | null, DefaultRootState, unknown, Action>> =\n    (type: string, props?: Record<string, unknown>, uniqueType?: boolean) => (dispatch, getState) => {\n        if (uniqueType) {\n            const state = getState();\n            const alreadyInStore = state.notifications.some((notification) => notification.type === type);\n            if (alreadyInStore) {\n                return null;\n            }\n        }\n\n        id += 1;\n\n        return dispatch(addNotificationAction({ type, props, uniqueType: !!uniqueType, id }));\n    };\n\nexport default actionCreator;\n","import { DefaultRootState } from 'react-redux';\nimport axios, { AxiosError } from 'axios';\nimport { ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { Action } from '@hh.ru/redux-create-reducer';\n\nimport { isAccountLoginRequiredError } from 'Modules/AccountLoginInterceptor';\nimport { DEFAULT_ERROR } from 'lux/components/Notifications/DefaultError';\nimport { NETWORK_ERROR } from 'lux/components/Notifications/NetworkError';\n\nimport addNotification from 'lux/requests/notifications/addNotification';\n\ninterface ShowErrorResult {\n    changeLocation?: boolean;\n    networkError?: boolean;\n    serverError?: boolean;\n}\n\nconst actionCreator: ActionCreator<ThunkAction<ShowErrorResult, DefaultRootState, unknown, Action>> =\n    (error: AxiosError, uniqueType = false) =>\n    (dispatch) => {\n        const locationCanceler = {\n            changeLocation: true,\n        };\n        if (axios.isCancel(error)) {\n            return locationCanceler;\n        }\n        const luxPageDisabled = error.response && error.response.status === 406;\n        const networkError = !error.response;\n        if (luxPageDisabled) {\n            return locationCanceler;\n        }\n        if (networkError) {\n            dispatch(addNotification(NETWORK_ERROR, undefined, uniqueType));\n            return { networkError: true };\n        }\n        console.error('Error on data fetch.', error);\n        if (!isAccountLoginRequiredError(error)) {\n            dispatch(addNotification(DEFAULT_ERROR, undefined, uniqueType));\n        }\n        return { serverError: true };\n    };\n\nexport default actionCreator;\n"],"names":["fetcher","catch","error","Debug","sendNotificationManagerAnalytics","notificationManagerElement","getState","notificationMetrics","attemptsLeft","sendNotificationMetricsAnalytics","setTimeout","shownNotificationsCount","children","length","count","viewportHeight","Metrics","height","notificationManagerBottom","lastElementChild","bottom","breakpoint","getBreakpoint","notifications","userNotifications","map","type","templateKey","setNotificationMetrics","Analytics","bodyHasActiveOverlayClass","overlayOpened","document","body","classList","contains","add","overlayClosed","remove","MarkAsViewedEvent","markAsViewed","name","data","axios","console","markUserNotificationsAsViewed","async","Array","isArray","ids","Number","concat","err","sendResponseAttempt","employerId","vacancyId","hhtmSourceLabel","sendExternal","topLevelSite","userType","category","UserType","vacancyResponseAttemptExternal","params","product_id","TopLevelSite","getDataQa","inFavorites","isSearch","isNarrowCard","prefix","narrowCardPostfix","makeToggleFavoriteAnonymous","requestHasBeenSent","makeToggleFavorite","isFavoriteVacancy","cleanup","DEFAULT_LOCALE","window","globalVars","lang","LOCALES","AZ","EN","KZ","RU","UA","UZ","KG","WINDOW_LOCALE","formatFromHyphenDateString","dateString","formatOutput","formatInput","format","parse","Date","date","formatString","parseISO","locale","querySelector","className","match","isXsFriendly","indexOf","isXs","Breakpoint","isS","animationStartCallback","animationEndCallback","scrollTop","qaState","SCROLL_PROCESSING","generateId","getUniqueId","element","uniqueID","br2nl","childNodes","node","nodeType","Node","TEXT_NODE","nodeValue","replace","ELEMENT_NODE","nodeName","join","isObject","val","isString","value","isNumber","treeToKeys","object","preKey","Object","entries","reduce","acc","key","subObject","newKey","objectToMerge","initStart","performance","now","hydrateRoot","createRoot","require","Provider","ConnectedRouter","Loadable","PropTypes","statsSender","getOrCreateStore","getHistory","domainsWhitelist","App","setLuxSentryBeforeSend","Components","urlHelper","isGoogleTranslateEnv","reactRootNode","getElementById","reactErrorNode","Error","style","display","store","dataset","ssrStatus","qa","code","setDomainWhitelist","event","fingerprint","some","includes","pageName","extra","state","request","luxPageName","RootComponent","renderCallback","history","renderStart","initEnd","propTypes","func","sendRenderTime","sendMetrics","report","renderTime","Math","floor","initTime","preloadReady","then","ssrFailedStatus","render","onRecoverableError","log","addEventListener","buildDeferredComponents","once","CONTENT_ID","INPUT_ID","ACTION_SMART_BANNER_LOADED","ACTION_SMART_BANNER_HIDE","STATUSES","JobSearchStatus","TrlKeys","ChangeForm","onSuccess","currentStatus","setDisabled","isCompact","statusesList","formId","trls","newStatus","setNewStatus","useState","setJobSearchStatus","useSetJobSearchStatus","originalStatus","useRef","formRef","useEffect","current","userStatusSelectElementShown","onStatusChange","status","calculateDisabled","userStatusSelectButtonClick","jobSearchStatus","toUpperCase","spacing","statusesToChoose","id","onSubmit","preventDefault","ref","checked","Fragment","wrapperProps","onChange","base","translation","triggerNameParam","triggerNameState","useSelector","applicantUserStatusesTrigger","triggerName","useCallback","undefined","FORM_ID_TO_SOURCE_MAPPING","JobSearchStatusForm","shouldShowSuccessNotification","applicantUserStatusesAction","makeSetStoreField","getAnalyticsFormSource","formHasSource","dispatch","useDispatch","applicantUserStatuses","userStatusSelectFormSubmit","formSource","showPostChangeModal","showDefaultError","Footer","searchInputRef","styles","NON_BREAKING_SPACE","appearance","LinkAppearance","onClick","focus","InputIcon","useBreakpoint","view","IconView","kind","IconKind","IconAppearance","scale","IconScale","suggestDomainItemKey","text","SuggestDomainItem","region","strong","WILDCARD","Search","pathname","search","router","location","dataProvider","useMemo","createRemoteDataProvider","encodeURIComponent","setValue","autoHighlightFirstSuggest","selectOnBlur","itemContent","itemKey","item","href","push","layer","LayerCssClass","placeholder","icon","AreaSwitcher","isDropdown","hhtmSource","analyticsParams","xmlContainerRef","content","setContent","controller","AbortController","removeNotificationByTypeAction","REGION_CLARIFICATION","signal","backUrl","ajax","for_current_domain","headers","HHTM_FROM_HEADER","innerHTML","abort","xs","s","m","l","container","classnames","LoadingScale","createContext","button","description","qrDescription","descriptionMobile","vk","telegram","viber","AutosearchMessengers","messengers","page","genericUserType","source","useSelectorNonNullable","chatBot","activeMessenger","setActiveMessenger","isXS","switchActiveMessenger","messengerType","index","open","Social","SocialAppearance","SocialScale","initial","IconColor","left","classNames","Element","target","rel","ButtonScale","ButtonKind","ButtonAppearance","StaticImg","path","alt","AutosearchMessengersModal","handleCloseModal","isVisible","visible","onClose","useBottomSheet","ModalHeader","ModalTitle","ModalFooter","ComplexUserNotificationsTemplateKey","first","second","link","articleLink","BillingCartActivationNotification","notification","isHHRu","useIsHhru","articleId","formatToReactComponent","showYear","ShowYear","expirationDate","to","countryId","CountryId","getDomainByCountryId","contentSecond","contentThird","linkMap","BrandingMakeupNotification","LinkComponent","TextComponent","site","employerStatus","getSiteByCountryId","useSiteByEmployerCountryId","ANON_SOCKET_COOKIE_NAME","RESUME_SCENARIO_NOTIFICATION_LS_KEY","EXPIRATION_TIME_IN_HOURS","COLLECT_DEBUG_DATA_DELAY_MS","fallbackCacheIncorrectHydration","querySelectorAll","forEach","HTMLElement","place","ContainerForXSL","styleClass","containerElementRef","jsClass","useContext","CodeInjectorContext","selectorForHackHydration","useLayoutEffect","appendChild","firstElementChild","tagName","toLowerCase","DIVIDER_NODE_NAME","suppressHydrationWarning","dangerouslySetInnerHTML","__html","makeLuxDivider","memo","logLevel","showPortal","setShowPortal","createPortal","placesNamesForXSL","placesNamesForMicroFrontends","portals","AZN","BYR","EUR","KZT","RUR","UAH","USD","UZS","GEL","KGS","ElementShownAnchor","fn","args","setElement","instance","stopSpying","values","useElementShown","RegionTypes","REGION_PROP_NAMES","Current","Other","MobileAppButton","appLink","onClickLink","Link","mode","ButtonMode","hideLabel","ariaLabel","forwardRef","method","props","xsrfToken","FormatMoney","currency","inCents","forceShowCents","amount","currencyNode","groupSeparator","parseFloat","Strings","HumanDate","textify","showClock","Always","preposition","currentDate","dateObject","abs","valueOf","getDate","setDate","day","month","getMonth","isCorrectMonth","NotCurrent","getFullYear","formatDate","useHHAuth","setVisibleZpImportResumeModal","useZpImportResumeModal","isZpImportResumeModalOpen","ClearButton","Infotip","show","showClearButton","onSeen","autoHide","markAsViewedEvent","otherProps","setVisible","showInfoTip","infoTip","mark","action","Notices","hideInfotip","renderContent","REMINDER_URL","RemindModal","topicId","remindInfo","currentInterview","allowedSchedulingParams","fromNotification","onDelete","timeError","setTimeError","toISOString","selectedDate","scheduledTime","split","timeRef","analyticsSentRef","elementRef","labelType","dispatchNotLuxDataUpdate","enableShortCuts","H2","SubHeader","applicantWasNotified","initialDate","highlighted","disableDaysBeforeDate","onDateClick","FormItem","size","invalid","InputType","defaultValue","nearestAllowedScheduleTime","FormError","negotiationInterviewId","stretched","response","from","NoIndex","AccountDeleteResumesSendSuccess","resumesCount","login","title","message","accountDeleteResumesSendSuccess","autoClose","ACCOUNT_DELETE_RESUMES_SEND_SUCCESS","ResendErrorNotification","resendErrorNotification","autoCloseDelay","RESEND_CODE_ERROR","ADD_AUTH_PHONE_SUCCESS","addAuthPhoneSuccess","phoneNumber","APPLICANT_JOB_SEARCH_STATUS_SUCCESS","ApplicantJobSearchStatusSuccess","applicantNoCallAnswer","APPLICANT_NO_CALL_ANSWER","ResumeSaveError","resumeSaveError","RESUME_SAVE_ERROR","ResumeSaveSuccess","save","resumeSaveSuccess","RESUME_SAVE_SUCCESS","AnonymousConversionSuccess","anonymousConversionSuccess","ANONYMOUS_CONVERSION_SUCCESS","AnonymousConversionError","anonymousConversionError","ANONYMOUS_CONVERSION_ERROR","ResumeLimitExceededError","resumeLimitExceededError","RESUME_LIMIT_EXCEEDED_ERROR","PaymentFormError","paymentFormError","APPLICANT_SERVICE_PAYMENT_ERROR","ARCHIVE_VACANCY_APPLICANTS_FEEDBACK_SUCCESS","ArchiveVacancyApplicantsFeedbackSuccess","AccountDeletedEmail","email","authEmployerAccountDeletedEmail","ACCOUNT_DELETED_EMAIL","ResetPasswordEmailSuccess","resetPasswordEmailSuccess","RESET_PASSWORD_EMAIL_SUCCESS","default","linkToPendingOrders","linkToPrice","ChangeTopicError","errorCode","titleKey","textKey","isChangeTopicActionError","formatNewLine","CHANGE_TOPIC_ERROR","changeTopicError","CHANGE_TOPIC_ERROR_NO_FA","ChangeTopicErrorNoFa","changeTopicErrorNoQa","SAVED_CLICKME_AUTOCAMPAIGN_INFO_ERROR","SavedClickmeAutoCampaignError","savedClickmeAutoCampaignError","DEFAULT_ERROR","CallTrackingDisableSuccess","callTrackingDisableSuccess","CALL_TRACKING_DISABLE_SUCCESS","CallTrackingAlreadyDisabled","callTrackingAlreadyDisabled","CALL_TRACKING_ALREADY_DISABLED","NotificationContent","emailTemplateSaveSuccess","EMAIL_TEMPLATE_SAVE_SUCCESS","EmployerAccountSwitchError","employerAccountSwitchError","EMPLOYER_ACCOUNT_SWITCH_ERROR","EmployerAddressDeleted","employerAddressDeleted","EMPLOYER_ADDRESS_DELETED","AuctionErrorType","AlreadyCreated","auctionError","errorType","AUCTION_ERROR","EMPLOYER_CARTS_DELAYED_CART_INFO","EmployerCartsNotificationKind","DelayedCartNotification","employerCartsDelayedCartInfo","notificationName","employerChangePasswordSuccess","EMPLOYER_CHANGE_PASSWORD_SUCCESS","EditForbiddenError","employerConstructorEditForbiddenError","EMPLOYER_CONSTRUCTOR_EDIT_FORBIDDEN","PictureFileTooLarge","employerConstructorPictureFileTooLarge","EMPLOYER_CONSTRUCTOR_PICTURE_FILE_TOO_LARGE","UnsupportedPictureFileFormat","employerConstructorUnsupportedPictureFileFormat","EMPLOYER_CONSTRUCTOR_UNSUPPORTED_PICTURE_FILE_FORMAT","InvalidPictureSize","minimumWidth","minimumHeight","employerConstructorInvalidPictureSize","EMPLOYER_CONSTRUCTOR_INVALID_PICTURE_SIZE","SaveTemplateOk","employerConstructorSaveTemplateOk","EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_OK","SaveTemplateError","employerConstructorSaveTemplateError","EMPLOYER_CONSTRUCTOR_SAVE_TEMPLATE_ERROR","ImageUploaded","employerConstructorImageUploaded","EMPLOYER_CONSTRUCTOR_IMAGE_UPLOADED","ImageResized","employerConstructorImageResized","EMPLOYER_CONSTRUCTOR_IMAGE_RESIZED","ResponseTimeOut","employerConstructorResponseTimeOut","EMPLOYER_CONSTRUCTOR_RESPONSE_TIMEOUT","DeletedTemplateOk","deletedTemplateOk","dataQa","EMPLOYER_DOCUMENT_DELETED_TEMPLATE_DELETE","UploadedTemplateOk","uploadedTemplateOk","EMPLOYER_DOCUMENT_UPLOADED_TEMPLATE_OK","MaxFilesWarningTemplate","maxFilesWarningTemplate","EMPLOYER_DOCUMENT_MAX_FILES_TEMPLATE","MaxLengthFileTemplate","maxFileSize","maxLengthFileTemplate","EMPLOYER_DOCUMENT_MAX_FILE_LENGTH_TEMPLATE","UploadError","uploadError","EMPLOYER_DOCUMENT_UPLOAD_ERROR","DeleteError","deleteError","EMPLOYER_DOCUMENT_DELETE_ERROR","OrderOriginalsSuccess","orderOriginalsSuccess","EMPLOYER_FINANCIAL_DOCUMENTS_ORDER_ORIGINALS_SUCCESS","EmployerMCPChangedSuccess","managerName","MCPChangedSuccess","MCP_CHANGED_SUCCESS","EmployerMCPSudoForbidden","MCPChangeSudoForbidden","MCP_CHANGE_SUDO_FORBIDDEN","FileTooLarge","employerLogoFileTooLarge","EMPLOYER_LOGO_FILE_TOO_LARGE","UnsupportedFileFormat","employerLogoUnsupportedFileFormat","EMPLOYER_LOGO_UNSUPPORTED_FILE_FORMAT","UploadSuccess","employLogoUploadSuccess","EMPLOYER_LOGO_UPLOAD_SUCCESS","UploadTimeout","employLogoUploadTimeout","EMPLOYER_LOGO_UPLOAD_TIMEOUT","AutosearchSaved","employerSidebarAutosearchSaved","EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED","AutosearchSavedApplicant","disableVisited","teaser","employerSidebarAutosearchSavedApplicant","EMPLOYER_SIDEBAR_AUTOSEARCH_SAVED_APPLICANT","AutosearchTooManyError","employerSidebarAutosearchTooMany","EMPLOYER_SIDEBAR_AUTOSEARCH_TOO_MANY","SaveSidebarSuccess","employerSaveSidebarSuccess","EMPLOYER_SIDEBAR_SAVE_SUCCESS","SaveSidebarError","employerSaveSidebarError","EMPLOYER_SIDEBAR_SAVE_ERROR","SaveDescriptionError","TEXT_TOO_LONG","TEXT_TOO_SHORT","TOO_MANY_CAPS","UNKNOWN","employerSaveDescriptionError","SAVE_EMPLOYER_DESCRIPTION_ERROR","SaveDescriptionSuccess","success","employerSaveDescriptionSuccess","SAVE_EMPLOYER_DESCRIPTION_SUCCESS","DivisionCreated","divisionName","createDivisionSuccess","DIVISION_CREATED","VacancyUpgradeMetallic","VacancyToggleAction","single","anyBegin","someEnd","manyEnd","descriptionOne","descriptionMany","Standard","StandardPlus","Premium","many","one","Disable","Enable","onlyOne","multiple","empty","FAILED_TO_DELETE_EXPIRED","PREMIUM_ALREDY_SET","PREMIUM_NOT_SET","FAILED_TO_DELETE","NOT_ZP_VACANCY","FAILED_TO_SPEND_SERVICE","FAILED_TO_RETURN_SERVICE","FAILED_TO_GET_SERVICE_COUNT","NOT_ENOUGH_QUOTAS","VACANCY_IS_NOT_ACTIVE","closed","SuccessQaWrapper","ErrorQaWrapper","ArchiveVacancySuccess","daysUntilReadOnly","countedBegin","isDescriptionVisible","NotificationTitle","NotificationHeading","trl","hasValue","archiveVacancySuccess","ARCHIVE_VACANCY_SUCCESS","VacancyUpgradeSuccess","metallic","vacancyUpgradeSuccess","VACANCY_UPGRADE_SUCCESS","VacancyUpdateSuccess","formatMultipleUpdate","vacancyUpdateSuccess","VACANCY_UPDATE_SUCCESS","autoProlongationPurchaseSuccess","AUTO_PROLONGATION_PURCHASE_SUCCESS","autoProlongationPurchaseSuccesses","AUTO_PROLONGATION_PURCHASE_SUCCESSES","VacancyAutoProlongationSuccess","vacancyAutoProlongationSuccess","VACANCY_AUTO_PROLONGATION_SUCCESS","VacancyAutoProlongationSuccesses","vacancyAutoProlongationSuccesses","VACANCY_AUTO_PROLONGATION_SUCCESSES","VacancyAutoProlongationError","vacancyAutoProlongationError","VACANCY_AUTO_PROLONGATION_ERROR","VacancyAutoProlongationErrors","vacancyAutoProlongationErrors","VACANCY_AUTO_PROLONGATION_ERRORS","VacancyDraftDeleteSuccess","draftsIds","vacancyDraftDeleteSuccess","VACANCY_DRAFT_DELETE_SUCCESS","VacancyDraftDeleteError","vacancyDraftDeleteError","VACANCY_DRAFT_DELETE_ERROR","VacancyDraftMoveSuccess","vacancyDraftMoveSuccess","VACANCY_DRAFT_MOVE_SUCCESS","emptyFiltersResult","EMPTY_FILTERS_RESULT","autoUpdatesScheduled","AUTO_UPDATES_SCHEDULED","AutoUpdatesRemoved","vacancyName","autoUpdatesRemoved","AUTO_UPDATES_REMOVED","autoUpdatesEdited","EDIT_AUTO_UPDATE_SCHEDULE","autoPublicationDisabled","AUTO_PUBLICATION_DISABLED","CancelScheduledPublicationSuccess","cancelScheduledPublicationSuccess","CANCEL_SCHEDULED_PUBLICATION_SUCCESS","ToggleVacancyOptionSuccess","toggleVacancyOptionSuccess","TOGGLE_VACANCY_OPTION_SUCCESS","ToggleVacancyOptionError","errorKey","toggleVacancyOptionError","TOGGLE_VACANCY_OPTION_ERROR","ChangeVacancyVisibilitySuccess","changeVacancyVisibilitySuccess","CHANGE_VACANCY_VISIBILITY_SUCCESS","DraftMultiPublicationOk","draftMultiPublicationOk","DRAFT_MULTI_PUBLICATION_OK","NotificattionContent","hiringPlanUpdateSuccess","HIRING_PLAN_UPDATE_SUCCESS","ResumeViewHistoryErrorFetchingNotification","showResumeViewHistoryErrorFetchingNotification","RESUME_VIEW_HISTORY_ERROR_FETCHING","INVALID_DATE_INTERVAL","invalidDateInterval","invoicePaymentFormError","submitError","INVOICE_PAYMENT_FORM_ERROR","mailtoLimitExceeded","MAIL_TO_LIMIT_EXCEEDED","ManagerDeleteSuccess","deleteFullName","managerDeleteSuccess","MANAGER_DELETE_SUCCESS","managerEditSuccess","MANAGER_EDIT_SUCCESS","MANAGER_FORM_ERROR","managerFormError","NETWORK_ERROR","ManagerRatingOk","personalManagerRatingSuccess","PERSONAL_MANAGER_RATING_SUCCESS","POLITENESS_INDEX","politenessIndexNotification","MaxContactsAmountExceeded","maxContactsAmount","NumberFormatter","ADD_CONTACTS_ARTICLE_LINK","priceAddContactsMaxContactsAmountExceeded","PRICE_ADD_CONTACTS_MAX_CONTACTS_AMOUNT_EXCEEDED","submitApplicationSuccess","PRICE_BRANDING_SUBMIT_APPLICATION_SUCCESS","submitApplicationDuplicate","PRICE_BRANDING_SUBMIT_APPLICATION_DUPLICATE","addToCartErrorNotification","ADD_TO_CART_ERROR_NOTIFICATION","NotificationsSuccess","NotificationPayment","NotificationFormats","NotificationPrice","NotificationDetails","submitClickmeProductsApplicationSuccess","PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_SUCCESS","submitClickmeProductsApplicationDuplicate","PRICE_CLICKME_PRODUCTS_SUBMIT_APPLICATION_DUPLICATE","priceDBAccessProductsNotFound","PRICE_DBACCESS_PRODUCTS_NOT_FOUND","purchaseNotificationNotice","PURCHASE_NOTIFICATION_NOTICE","EMPLOYER_INVOICE_PURCHASE_CHANGE_ACTIVATION_TYPE_ERROR","ChangeActivationTypeErrorCode","changeActivationTypeError","RegionClarification","removeNotification","onChangeClick","translations","host","area","exception","FormSpacer","sendHHAnalytics","goal","BathedResponsesRead","batchedResponsesRead","BATCHED_RESPONSES_READ","ResumeBatchUpdateSuccess","resumeBatchUpdateSuccess","RESUME_BATCH_UPDATE_SUCCESS","ResumeBatchUpdateError","resumeBatchUpdateError","RESUME_BATCH_UPDATE_ERROR","completionBlacklistSuccess","COMPLETION_BLACK_LIST_SUCCESS","completionBlacklistError","COMPLETION_BLACK_LIST_ERROR","completionDefaultError","COMPLETION_DEFAULT_ERROR","RESUME_CONTACTS_ERROR","NAME_IS_EMPTY","NameIsEmpty","nameIsEmptyError","NAME_IS_TOO_LONG","NameIsTooLong","nameIsTooLongError","FOLDER_DELETE_ERROR","folderName","folderDeleteError","MaxResumeLimit","max","heading","maxResumeLimit","connect","resumeLimits","MAX_RESUME_LIMIT","ResumeFormVisibilityError","resumeFormVisibilityError","RESUME_FORM_VISIBILITY_ERROR","EditErrorNotification","showError","resumeFormArtifactsEditErrorNotification","RESUME_FORM_ARTIFACTS_EDIT_ERROR_NOTIFICATION","negotiationsHistoryError","HISTORY_LOAD_ERROR","Kind","ContactInformationViewGeneric","QuotaExceeded","ResumeCountryMismatch","ResumeContentIsTooLarge","ResumeCommentAdd","ResumeCommentEdit","ResumeModerationCorrected","ResumeCommentAdded","ContactInformationViewInfo","footer","NotificationTemplate","hasHeading","hasFooter","footerLink","CONTACT_INFORMATION_VIEW_ERROR_NOTIFICATION_DELAY","contactInformationViewErrorMessage","CONTACT_INFORMATION_VIEW_ERROR_MESSAGE","contactInformationViewInfoMessage","CONTACT_INFORMATION_VIEW_INFO_MESSAGE","contactInformationViewQuotaExceeded","CONTACT_INFORMATION_VIEW_QUOTA_EXCEEDED","contactInformationViewResumeCountryMismatch","CONTACT_INFORMATION_VIEW_RESUME_COUNTRY_MISMATCH","contactInformationViewResumeContentIsTooLarge","CONTACT_INFORMATION_VIEW_RESUME_CONTENT_IS_TOO_LARGE","resumeViewModerationCorrectedMessage","RESUME_VIEW_MODERATION_CORRECTED_MESSAGE","resumeCommentEditMessage","RESUME_COMMENT_EDIT_MESSAGE","resumeCommentAddMessage","RESUME_COMMENT_ADD_MESSAGE","resumeCommentAdded","RESUME_COMMENT_ADDED","TalantixResumeImportFailedNotification","trlKeys","mail","network","account","system","api","permission","TalantixResumeImportedNotification","top","TalantixResumeImportedNotificationPromo","TALANTIX_RESUME_IMPORTED","talantixResumeImported","TALANTIX_RESUME_IMPORT_FAILED","talantixResumeImportFailed","_","TALANTIX_RESUME_IMPORTED_PROMO","talalantixResumeImportedPromo","searchPublicationEditSuccess","SEARCH_PUBLICATION_EDIT_SUCCESS","searchPublicationEditError","SEARCH_PUBLICATION_EDIT_ERROR","SMS_ERROR","subscribeFormSuccess","SUBSCRIBE_FORM_SUCCESS","TargetEmployerMarkedRead","targetEmployerMarkedReadError","TARGET_EMPLOYER_MARKED_READ","vacancyActionErrorNotification","VACANCY_ACTION_ERROR","VacancyAuctionSaveSuccessfullyModalNotification","saveSuccessfullyAuctionModalNotification","SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY","VacancyBlockedReason","clear","messagePre","messageLink","messagePost","autoCloseProps","useRemoveUponLeavingPage","removeNotificationCallback","url","VACANCY_CREATE_GET_URL","DraftLoadOk","urlWithoutDraft","parsedUrl","urlParser","draftId","cancelScrollCorrection","draftLoadOk","VACANCY_CREATE_DRAFT_LOAD_OK","draftLoadError","VACANCY_CREATE_DRAFT_LOAD_ERROR","TemplateLoadOk","useUrl","templateName","vacancyCreateTemplates","vacancyCreateTemplateId","find","preparedTemplateName","preparedVacancyTemplates","vacancyCreatePreparedTemplateId","urlWithoutTemplate","templateId","preparedTemplateId","trim","templateLoadOk","VACANCY_CREATE_TEMPLATE_LOAD_OK","templateLoadError","VACANCY_CREATE_TEMPLATE_LOAD_ERROR","vacancySubmitGenericError","VACANCY_CREATE_SUBMIT_GENERIC_ERROR","draftSaveOk","VACANCY_CREATE_DRAFT_SAVE_OK","draftSaveError","VACANCY_CREATE_DRAFT_SAVE_ERROR","VacancySubmitDuplicateError","vacancySubmitDuplicateError","VACANCY_CREATE_SUBMIT_DUPLICATE_ERROR","vacancySubmitPermissionError","VACANCY_CREATE_SUBMIT_PERMISSION_ERROR","billingSudoSpendMoneyError","VACANCY_CREATE_BILLING_SUDO_SPEND_MONEY_ERROR","APPLICANT_RESPONSE_ABORT","VacancyResponseError","APPLICANT_RESPONSE_ERROR","DiscardCandidates","discardCandidates","DISCARD_CANDIDATES","BrokenFilters","reload","FILTERS_CAN_NOT_BE_DISPLAYED","EMAIL_VERIFICATION_WAS_SENT_AGAIN","EMAIL_VERIFICATION_WAS_SENT_AGAIN_TOO_OFTEN","EMAIL_VERIFICATION_WAS_SENT_AGAIN_ERROR","SendDoubleOptInResponse","EmailVerificationWasSendAgain","EmailVerificationWasSendAgainTooOften","EmailVerificationWasSendAgainError","EmailVerificationSend","mailerUrl","emailVerificationSendError","emailVerificationSend","vacancySearchItemContactsError","VACANCY_SEARCH_ITEM_CONTACTS_ERROR","mainText","linkText","alreadyTitle","VACANCY_SAVED_SEARCH_SUBSCRIPTION_ERROR","vacancySavedSearchSubscriptionError","VACANCY_SAVED_SEARCH_SUBSCRIPTION_WRONG_EMAIL","vacancySavedSearchSubscriptionWrongEmail","VACANCY_SAVED_SEARCH_SUBSCRIPTION_AUTHORIZATION","SubscriptionErrorNotificationAuthorisation","vacancySavedSearchSubscriptionAuthorization","VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_APPLICANT","SubscriptionSuccessApplicant","routePaths","vacancySavedSearchSubscriptionSuccessApplicant","VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_ANONYMOUS","SubscriptionSuccessAnonymous","vacancySavedSearchSubscriptionSuccessAnonymous","VACANCY_SAVED_SEARCH_SUBSCRIPTION_SUCCESS_FROM_BUTTON","SubscriptionSuccessFromButton","alreadySaved","vacancySavedSearchSubscriptionSuccessFromButton","ErrorIds","SuccessIds","scheduled","published","untrusted","closedUntrusted","waiting","needFix","restored","publish","limit","vacancyPublished","approved","trusted","VACANCY_PUBLISHED","VacancyRestoredToArchive","vacancyRestoredToArchive","VACANCY_RESTORED_TO_ARCHIVE","VacancyBlacklistVacancyLimitError","vacancyBlacklistVacancyLimitError","VACANCY_BLACKLIST_VACANCY_LIMIT_ERROR","VacancyBlacklistEmployerLimitError","vacancyBlacklistEmployerLimitError","VACANCY_BLACKLIST_EMPLOYER_LIMIT_ERROR","vacancyErrorMessage","VACANCY_ERROR_MESSAGE","vacancyScheduled","VACANCY_SCHEDULED","dispatchModal","isNewVacancy","vacancyMessages","vacancyView","hasOwn","metallicId","addNotification","parseInt","query","adays","feedbackSent","VacancyMessageTypes","company","makeVacancyVisible","successScheduled","VacancyViewsCount","responseButtonProps","VacancyActionResponseKind","isSecondary","close","vacancyViewsCount","VACANCY_VIEW_COUNT","LinkQuestionnaire","linkQuestionnaire","UnlinkQuestionnaire","unlinkQuestionnaire","DeleteQuestionnaire","deleteQuestionnaire","EditQuestionnaire","editQuestionnaire","AddQuestionnaire","VIDEO_INTERVIEW_NOTIFICATIONS","videoInterviewSearchModalEnable","fullName","VIDEO_INTERVIEW_SEARCH_MODAL_ENABLE","LoadError","errorLoading","vrVacancyReportError","EmptyError","errorEmpty","vrVacancyEmptyError","VR_REPORT_ERROR","VR_REPORT_EMPTY","FAVORITE_SUCCESS","FAVORITE_ERROR","NovaFilterUpdateContext","useUpdateAbortController","abortControllerRef","abortController","NovaFilterUpdateContextProvider","cancelNovaFilterUpdateRef","SearchType","typicalFilters","CriteriaKey","controlledLabels","LabelOption","criteriaCurrencyCode","criteriaTextUpdated","currencies","resumeSearchResult","searchCatalogRedirect","searchClusters","searchType","vacancySearchResult","searchParams","untypedSearchParams","filter","filterFromClusters","selectedValues","NovaFilterKey","labels","label","currencyCodeDefault","urlParams","WITH_TOP_FILTER_CATALOG","NOVAFILTERS_EXCLUDE_HIDDEN_INPUT","criteria","SORTS_WITH_DEFAULT_VALUE","getSharedSearchParams","rangeKeys","onlyWith","onlyWithStr","LogicOption","PosOption","ExpPeriodOption","enableVacancySnippets","novaSorts","NovaFilterSetting","enableSimilarSavedSearch","salary","onlyWithSalary","orderBy","OrderByOption","searchPeriod","SearchPeriodOption","getVacancySearchParams","getResumeSearchParams","getVacancyMapSearchParams","searchClustersAction","setShowSubscriptionButtonAction","searchMapResponseAction","abortSignal","clusters","searchClustersOrder","dispatchEvent","CustomEvent","detail","actions","setOrderArea","setOrderDistrict","setOrderMetro","setOrderProfRole","setOrderIndustry","setOrderSubIndustry","replaceVacancySearchResult","vacanciesFromResponse","vacancies","geoClusters","mapHasGeoClusters","queries","sendResponse","resumeSearchResultAction","bannersAction","searchCountsAction","resumeCommentsAction","commentsByUserIdAction","resumeVerifiedSkillsAction","Promise","reject","ModalHelper","banners","resumeComments","commentsByUserId","microFrontends","resumesRelevantExperience","resumeVerifiedSkills","cancelFetchingData","setOrderSkill","setOrderDriverLicenceTypes","setOrderLabel","isLoad","updateMicroFrontends","updateResumesRelevantExperience","totalResults","stats","totalUngroupedResults","searchCatalogAction","userLabelsForVacanciesAction","adsSearchParamsAction","chatBotAction","infoTipAction","searchCatalog","userLabelsForVacancies","adsSearchParams","redirectCatalogPath","redirect","counts","updateSavedAreaIds","searchLoadingAction","searchClustersTipAction","searchPreferenceAction","cancelFetchBannersAction","tipTimeout","countsRequest","showClustersTip","searchClustersSettings","searchCounts","isAdjustDetectedRegionResumeExpEnabled","searchClustersLastAppliedFilter","actionPath","getSearchParams","lastAppliedFilterName","isResumeSearch","L_save_area","String","adjustSavedArea","filterName","sharedFetchArgs","fetchMapVacancies","getFetchVacancyCounts","fetchCountsRequest","fetchResponse","getFetchVacancies","getFetchResume","DEFAULT_TIP_STATE","clearTimeout","isXsOrS","isShown","finally","isDesktop","dispatchSendFilterForm","sendFilterForm","debouncedDispatchSendFilterForm","debounce","useSendFilterForm","isDebounced","abortAndGetUpdatedSignal","dispatchCallback","useDebouncedCountsRequest","debouncedSendFilterForm","useDebouncedSendFilterFormByBreakpoint","PARAMS_BLACKLIST","ShowClusters","Range","NOVAFILTERS_CRITERIA_ETC_FILTERS","FromSearchLine","ForceFiltersSaving","isMetroCheckedOrIndeterminate","selectedMetro","color","indeterminate","MetroType","ios","android","winphone","huawei","STORAGE_VARIABLE_NAME","AppSmartBanner","device","isWebView","isCookiesPolicyInformerVisible","isTopPromoBannerVisible","topPromoBanner","isShow","setIsVisible","wrapperRef","isTopPromoBannerEnabled","detected","media","hiddenUntil","Storage","clientHeight","appInstallBannerElementShown","linkParam","hide","bannerHeight","offsetHeight","speed","scrollTo","hideUntil","DAY","onLinkClick","appInstallBannerButtonClick","sendLinkAnalytics","AppLinkType","H3Section","FoundOnHHVariants","ReasonVariants","ModalStep","FoundOnHH","NotFoundOnHH","FoundOnHHContent","onSet","renderRadio","variant","ACCEPTABLE_LOGOS","LogoType","OffersContent","addOffer","selectedOffers","possibleJobOffers","applicantPossibleJobOffers","userStatusSelectOfferCompanyScreenShown","userStatusSelectOfferCompanyElementShown","employerIdList","offer","vacancyIdList","Boolean","selectedVacanciesIds","logoUrl","logos","logo","findAcceptableLogo","resumeId","TextSize","importance","TextImportance","vacancyNames","src","WithoutResponse","ContactedByMyself","ReasonsContent","WhatConfusedContent","maxLength","minLength","rows","noresize","loading","setLoading","cancelFetchRef","fetchOffers","setModalStep","setApplicantPossibleJobOffers","cancelToken","cancel","ChooseOfferStep","ChooseReasonStep","cancelFetch","FoundOnHHStep","others","WriteWhatConfused","anotherAnswer","finish","answer","continue","done","getModalTitle","step","topLevelDomain","userStatus","statusKey","PostChangeModal","foundOnHHValue","setFoundOnHHValue","reasonValue","setReasonValue","modalStep","useFetchPossibleJobOffers","modalVisible","jobSearchStatusPostChangeModal","showStatusChangeNotification","userStatuses","userStatusAnalytics","setSelectedOffers","whatConfusedText","setWhatConfusedText","userStatusSelectWhereFoundScreenShown","hideModal","hidePostChangeModal","handleClose","finishChooseOffers","offers","userStatusSelectOfferCompanyButtonClick","toString","closeButton","STEP_CONTENT","mainAction","disabled","userStatusSelectWhereFoundButtonClick","offerFromHH","secondaryAction","userStatusSelectOfferCompanyEmptyButtonClick","newValue","userStatusSelectSendWhatConfused","ModalContent","usePlatformInfo","platformInfo","useIsIosEmployerWebViewSpecificVersion","applicationVersion","userPlatform","appType","appVersion","Features","CookiesPolicy","isBelarus","useIsBelarus","isCookiesPolicyBannerEnabled","features","excludedAppVersion","criticalCookiesRegexpList","criticalCookiesRegexpString","reselectCookiePolicy","RESELECT_PARAMETER","isIosJTBApplicantWebView","appDomain","useIsIosJTBApplicantWebView","isExcludedAppVersion","shouldShow","isAlreadyAnswered","Cookies","COOKIE_AGREEMENT_NAME","needToClear","LocalStorageWrapper","LOCALSTORAGE_KEY","clearCookies","ColumnsWrapper","setTopLevelCookie","COOKIE_EXPIRE_TIME","checkUrlAndReload","COOKIE_SUBSCRIPTION_INFORMER_NAME","COOKIE_POLICY_ARTICLE_LINK","COOKIE_POLICY_BANNER_ENABLED_CLASS","isCookiesPolicyInformerVisibleAction","CookiesPolicyInformer","enableCookiePolicyInformer","useFeatureEnabled","isRussia","useIsRussia","cookieAgreementValue","cookiesBannerElementShown","LinkKind","cookiesBannerAcceptButtonClick","ImportantNotificationsKind","ImportantNotifications","hasDefaultLayout","Ok","Warning","EmailVerification","needVerification","mailURL","emailVerification","isSuccess","setSuccess","hasError","setError","isLoading","sendData","LoadingColor","EmployerInformer","suspiciousState","EmployerSuspiciousState","stepsConfig","header","imageName","additionalInfo","EMPLOYER_ZP_ONBOARDING_MODAL","EmployerZpOnboarding","showModal","setShowModal","setStep","isStart","isEnd","isAllowedScreen","nextBtnTrl","nextButtonTrl","getNextButtonTrl","MobileBannerContent","hasAppLink","H1","lite","MobileBannerImage","MobileBanner","userTypeForCheck","supernovaUserType","SupernovaUserType","currentYear","FooterCopyright","items","section","getAppLinkHref","appHref","mobilePage","getQrCodeDataQa","isEmployer","isRabotaBy","MobileAppLinks","isApplicant","showHeader","desktopView","employerMainPageAnalyticsEnabled","applicationItemsRef","apps","stayInTouch","footerAnalytics","Text","typography","TextTypography","VSpacing","EnumChatBotInvariants","Icon","TelegramSize24","ViberSize24","VkSize24","NavItemsChatBot","subItems","HSpacingContainer","Button","FooterIconKind","LangRU","LangUA","LangUZ","LangKZ","LangAZ","LangEN","LangKG","Employer","SiteLanguages","buildLocaleUrl","language","Lang","isMobileFriendly","availableLanguages","siteLanguage","languagesToSwitch","SPALink","VendorAnalytics","isSeoLink","LinkStyle","NaviItemLink","targetProps","NaviItems","nav","linkKind","SupernovaLinkKind","direction","navLinksRef","navName","menu","ChatBot","NavItemLink","NavItemsDocs","NavSeparator","FooterRecommendTechInfo","FooterRequisites","staticHost","config","socialIconsMap","fb","FacebookSize24","ok","OkSize24","twitter","TwitterSize24","instagram","InstagramDefaultSize24","dzen","DzenSize24","SocialNetworks","links","socialNetworksLinks","socialNetworkItemsRef","FooterNav","useUserTypeForMenu","isZarplata","useIsZarplataPlatform","isHhru","additional","articles","forTeens","about","misc","applicantServices","employerServices","docs","additionalMenu","subItem","needCustomTemplate","isApplicantZarplata","gteL","gteM","MobileAppButtons","TextStyle","SupernovaMenuItem","badge","useIsRabotaBy","supervonaItemsAnalyticsForCountriesEnabled","superNovauserType","needSendAnalytics","menuItemRef","talantixLinkContactsHideElementShown","buttonEventName","eventData","talantixLinkContactsHideButtonClick","sendAnalytics","Badge","Services","hideFooterServices","menuItem","withSpacing","hideLayout","isIFrameView","isIFrame","print","paths","Counter","SKIP_ANSWER_VALUE","FormSteps","FORM_STEPS_ARRAY","Third","Fourth","First","Second","DEFAULT_ANSWER_CONFIG","stepsRadio","LoyaltySurveyType","stepText","rate","min","lastQuestion","counterPart","StepHeader","total","answers","indexStep","stepRadio","answerSkipped","H3","counter","SELECTOR_VALUES","VALUES_FIRST_SECOND_QUESTIONS","Steps","defaultChecked","autoFocus","SURVEY_URL","LoyaltySurveyModal","loyaltySurvey","setShowError","surveyLoadError","setSurveyLoadError","surveySaveError","setSurveySaveError","surveySuccessSave","setSurveySuccessSave","surveyResult","setSurveyResult","disableSubmit","setDisableSubmit","finishSurvey","el","deleteUserNotification","sid","fetchSurvey","runSurvey","survey","passedStepsCount","keys","saveAnswers","useFormData","stepChange","shouldFinish","FormData","stepVariant","get","JSON","stringify","ignore","newStep","closeModal","runLoyaltySurvey","NotificationKind","submitButton","Form","ModalError","SiteException","hasRemoveIcon","cookieName","needShow","setShow","IconLink","HIDE_PERIOD_IN_MINUTES","SiteExceptions","session","isFallback","securityCheckFailed","OverlayTypes","MenuItem","showOverlay","handleClick","AreaSwitcherOverlay","DefaultMenuItem","useTrackClicks","trackClicks","overlayMenuAnalytics","active","external","MainContent","renderer","MenuServiceItemBadge","badgeElement","supervonaItemsAnalyticForCountriesEnabled","needSendAnalytic","Lightning","SubItems","Education","Beginner","Beta","ApplicantServicesOverlay","services","headerMenu","Advancement","Overlay","RenderProjectSelectedItem","setOverlay","None","Advertising","Responses","Automation","Research","EmployerProjectsOverlay","projects","Selected","OverlayContent","overlayType","setOverlayType","overlay","ApplicantOverlay","EmployerOverlay","ServicesMenuItem","menuHeaderButtonClick","Switchers","setRegionClarification","renderOverlayMenuItem","menuItemTypeToComponentMapping","mainContent","switchers","fill","employerProjects","areaSwitcher","AreaSwitcherMenuItem","Component","SupernovaOverlayMenu","regionClarification","bgColor","overlayRef","offsetWidth","addNotificationAction","uniqueType","ResizeObserver","resizeObserver","paddingRight","scrollHeight","observe","disconnect","SEO_QUERIES","hhtmFromLabel","TopPromoBanner","isShowBanner","setShowState","isShowTopPromoBanner","isCookiesPolicyInformerShown","isCookiesBannerShown","useIsShowTopBanner","isFirstShow","showBannerRef","topPromoBannerShown","banner_name","is_first_shown","isMobile","handleVisit","topPromoBannerVisited","hideTopPromoBanner","desktop","mobile","desctiption","stopPropagation","topPromoBannerClosed","additionalQueryParams","UnsupportedBrowser","bloko","getUserAgentDetails","userAgentDetails","navigator","userAgent","isSupported","FullPageLayout","useLocation","isLightPage","isLegacyPage","mainContentRef","mainContentVisible","showZpEmployerOnboardingModal","zpEmployerOnboarding","showOnboardingModal","isMenuHidden","useIsMenuHidden","isDashboardMenu","rule","checkIsDashboard","useXhhLayout","Portal","LightPageLayoutHeader","isBroadMainContent","SubscriptionInformer","IsDashboardContext","SupernovaMainMenu","MainContentRefContext","promo","logoDomain","AddButton","addQuery","ExpCompanySizeOption","ConditionSelect","setQuery","isHidden","preparedTrls","searchQueries","options","resumeSearchDictionaries","CustomSelectLayer","light","option","optionText","CustomSelectOption","CustomSelectOptionSecondaryText","SpanWrapper","IndustrySelect","isNaviSearch","industryTree","industriesTree","industryTreeTreeCollection","fromTree","defaultValues","selectedValuesTrl","formatValue","collection","submit","searchPlaceholder","notFound","showTreeSelectorPopup","PosSelectOption","handleChange","EXTERNAL_OPTIONS","WORKPLACE_OPTIONS","includesSome","a","b","includesEvery","every","getHasWorkplaceOptions","PosSelect","setSelectedValues","workPlaceOptionsFiltered","newValues","valuesCount","PosSelectorDrop","setHasWorkplaceOptions","handlePosChange","getStateWithDefaultValues","placement","DownPlacement","DownLayer","flexible","PosSelectTitle","QueryConditions","autoInvite","hasWorkplaceOptions","isHeadHunterPlatform","useIsHeadHunterPlatform","autoInviteHandlerFormChange","AutoInviteContext","IndustryXsSelector","setValues","conversionTrl","getConversionType","renderTagList","removable","companySizeHint","BottomSheetSelector","currentOption","setCurrentOption","modalIsVisible","setModalIsVisible","optionsTrl","H2Section","reversed","titles","QuerySettingsXsSelector","setModalVisible","optionValue","optionsTrls","Option","hidden","HIDDEN_FIELDS","QuerySettingsXsModal","currentQuery","setCurrentQuery","searchQueryDefault","closeButtonShow","escapePress","field","ButtonType","QuerySettingsXsButton","settingsCount","SEARCH_QUERY_KEYS","BadgeAppearance","RemoveButton","onRemove","baseline","IconDynamic","updateLastSearchQueryText","SearchQuery","setFromSuggest","sendSuggestShownAnalytics","sendSuggestItemClickAnalytics","useSendSuggestAnalytics","setText","tipVisible","showTip","hideTip","useOnOffState","lastSearches","employerLastSearches","remoteDataProvider","staticDataProvider","createStaticDataProvider","removeDuplicates","enrichResumeSearchSuggest","updateText","inputValue","handleInputChange","onDesktopSuggestShown","onExternalClose","TipPlacement","SmartSuggest","defaultSearch","suggestStartInputLength","submitButtonTitle","renderItems","renderItem","onMobileSuggestShown","SuggestLayer","autoComplete","searchQuery","setSearchQuery","SearchQueryInput","ShowConditions","showSearchConditions","advancedSearch","setChecked","Wrapper","isModal","SearchQueries","autoInviteQueries","filters","setQueries","fromSuggest","lastElementId","addQueryRef","removeQuery","DATA_QA_ATTR_PREFIX","common","uzbekistan","descriptionEnd","conditions","rules","ARTICLES","ResumesCountriesVisibilityFormDescription","dataQaKey","country","conditionsClickHandler","rulesClickHandler","ResumesCountriesVisibilityForm","isFetching","settings","visibleForCommonCountries","visibleForUzbekistan","imgProps","isShowSubscriptionInformer","applicantSubscriptions","employerSubscriptions","subscriptionInformer","formData","append","subscription","mailingSubscriptionTypes","subscriptions","sms","mailingSubscriptionType","badgeType","new","enabled","absolute","BadgeElement","hasForceReloadDreamJob","hasOwnProperty","badgeTypeName","SupernovaLink","Primary","Secondary","Dimmed","OnWhite","WithLine","MagritteNeutralSecondary","React","sort","elements","MESSENGERS","messenger","EMPLOYER_MESSENGERS","NEW_EMPLOYER_MESSENGERS","SupportChatMessengers","sendSupportAnalytics","messengersToRender","whatsapp","MessengerType","city","number","linkId","dropdownContext","SupernovaDropdownContext","updateRef","NotificationText","multiline","isProgressRemove","setProgressRemove","e","SupernovaCounter","dotOnly","dropdown","forIcon","primary","large","SupernovaIconView","ACTIVE_ATTRS","tabIndex","forwardedRef","analytics","wrapper","ChatikActivator","isDashboard","unreadCount","chatikCounters","isChatikOpen","closeChatik","openChatik","useChatik","addSocketEventListener","chatId","unreadChatCount","Chatik","AuthStep","_authWindow","timer","authUri","check","clearInterval","setInterval","Loader","ChooseStep","Cell","right","CellText","Divider","marginTop","marginBottom","ResumeList","resumes","resume","CopyStep","applicantResumes","_attributes","hash","string","onAgain","ErrorStep","ImportStep","setResumes","resumeHash","steps","choose","auth","import","copy","ImportResumeModal","Step","SupernovaButton","secondary","tinted","SupernovaNaviItem","isButton","noMobile","noSmallScreen","smallScreen","noTabletScreen","userTypeSwitcher","arrowed","CreateResume","applicantInfo","isZp","useGoogleAnalytics","resumeCreationButtonClick","renderMaxResumesWarning","zpButton","hhButton","remaining","AppleBusinessChat","sendIconClickAnalytics","sendLinkClickAnalytics","supernova","workday","weekend","appleBusinessChat","timeFrom","timeTo","AppleBusinessChatComponent","AccountActions","trackElementShown","refCallback","OptionHighlight","SupernovaDropdownOption","highlight","supportUnavailable","tab","toggled","trackClick","userStat","userStats","isPrice","sendCheck","useExperimentCheckFunction","useTrackElementShown","AppleBusinessChatActivator","AppleBusinessChatContext","employer","applicant","AccountTypeBadge","firstName","middleName","lastName","allFieldsEmpty","actualAccount","hhidAccount","SupernovaDropdownSection","support","flex","ApplicantInfo","isMultiAccount","EmployerAccountType","employerCurrentDivisionAction","employerDivisionsAction","employerImplantsAction","EmployerAccountSwitcher","employerName","hasDivisions","hasImplants","currentDivision","employerCurrentDivision","divisions","employerDivisions","implants","employerImplants","Division","divisionId","Implant","hhid","extraAccounts","EmployerInfo","employerHasDivisions","hasExtraAccounts","SupernovaDropdownStaticOption","billingInfoAction","billingInfo","employerBillingInfo","fetchBillingInfo","onClickmeClick","ClickmeBalance","useEmployerBillingInfo","billingSummary","CurrencyType","clickmeLinkRef","talantixTariffDaysLeft","clickme","realBalance","bonusBalance","Money","availableWithoutBlockedMoney","blockedMoney","numberFormatter","isContactsViewService","service","ServiceItemCode","OpenContacts","contactsTotal","serviceDescription","quotas","contactsQuotas","ResumeAccess","resumeAccessCodes","serviceCategories","accessCount","defaultCount","zero","remainingDays","days","onTalantixTariffDaysLeftLinkClick","TalantixDaysLeft","talantixLinkRef","Vacancies","vacanciesCount","nonFreeVacancyPublicationsCodes","freeVacancyPublicationsCodes","vacanciesQuotas","isVideoInterviewService","VideoInterview","videoInterviewTotal","EmployerBillingInfoSection","EmployerPanel","Acknowledge","employerReviewsApplicantProfileBadgeAction","EmployersReviews","elementName","Kakdela","LogoffSudoUser","LogoffUser","PersonalManager","personalManagerMenu","isAssigned","msk","other","regions","spb","zarplata","PersonalManagerPhones","contactPhones","vacation","postfix","logMessengerClick","SupportChatActivator","SupportChatPlate","fromLabel","SwitchAccount","loginUrl","authUrl","onClickHandler","UserInfo","SupernovaUserNotificationsIconKind","SupernovaUserNotificationsIcon","NotificationLayout","iconKind","removeComponent","sortFunc","arr","closeButtonIndexes","result","startsWith","i","slice","Notification","deleteNotification","useDeleteUserNotificationById","buttonName","innerRef","NotificationSpacer","UserNotificationsApplicantCalling","Empty","DataQaInvariants","ApplicantFindJob","Info","noServices","noQuotas","finished","AutoInviteDisable","disableReason","DisableReason","vacancyTitle","BillingCardsToCardId","cart_id","purchase_date","BillingCartActivation","upgrade","restore","linkActivation","BillingInvoiceFinish","showUpgradeOrRestoreContent","UPGRADE","RESTORE","upgradeOrRestoreContent","linkURL","vacancy_name","BrandingMakeup","NotificationLink","CallTracking","CareerConsultPaid","orderCode","CareerConsultWaitingForCall","callTimeDate","callTimeBegin","callTimeEnd","lastLink","LinkMap","CompleteResume","Mail","CompleteResumeWorkDone","CompleteResumeWaitingForCall","LINK_URL_MAP","LINK_CLICK_MAP","userStatusSelectOpenButtonClick","LINK_SHOWN_MAP","userStatusSelectOpenElementShown","DATA_QA_MAP","ResumeTargetEmployerDiscount","ChristmasTree","ICON_KIND_MAP","New","DefaultInvariant","linkRef","Employer2fa","EmployerChangeEmailByManager","employerManagerName","employer_manager_id","EmployerChangeEmailReminder","EmployerConstructor","EmployerLoyaltySurvey","showNotification","manager","employerManager","Question","EmployerReviewCanEnable","EmployerReviewFeedbackCreated","LEFT_DOUBLE_QUOTE","companyName","RIGHT_DOUBLE_QUOTE","employerReviewId","notificationContent","analyticsName","HHRating","eventName","HRElkaSpecial","HRSpace","analyticsNameMap","InterviewPractice","InterviewPracticePaid","InterviewPracticeWaitingForCall","UserNotificationsKingdomOfVacancy","ev","NegotiationInterview","Calendar","closestDay","scheduledDate","scheduledTimeLocal","topic_id","RESUME_RENEWAL","RESUME_MARK","ResumeRenewalExpired","serviceType","ResumeRenewalSoonExpires","isExpireTomorrow","expireTomorrow","VacancyAutoProlongation","vacancy_count","prolongation_date","FREE","PREMIUM","PREMIUM_ADVERTISING","PREMIUM_ANONYMOUS","STANDARD_PROMO","STANDARD","STANDARD_ADVERTISING","STANDARD_ANONYMOUS","STANDARD_PLUS","STANDARD_PLUS_ANONYMOUS","statisticsOne","statisticsSome","statisticsMany","statisticsZero","VacancyAutoPublication","Success","vacancy_id","publication_type","vacancySome","vacancyMany","vacancyUpdateIn","vacancyBuy","successesOne","successesSome","successesMany","VacancyAutoUpdate","vacancyLink","checkPlaceholder","update_time_from","update_time_to","goToVacancy","main","advice","VacancyBlocked","notificationCode","vacancyBlockedVacancyLinkClick","notificationType","VacancyDraftPublicationReady","ready","draft_id","VacancyScheduledPublication","VacancyScheduledPublicationNotification","ApplicantCalling","CareerConsult","AutoInviteDisabled","KingdomOfVacancy","EmptyAutoSearchVacancy","EmptyNotification","Content","SupernovaUserNotification","explain","isComplexUserNotification","isSupernova","unreadNotificationIds","viewed","markNotificationsAsViewed","markUserNotificationsAsViewedByIds","unreadNotificationsCount","UserNotificationsMobile","useNotifications","BEHAVIOR","alignToActivatorBorders","arrowSize","fullScreenOnXS","placementOffset","setupFullWidthOnXS","showArrow","mainContentVisibleAction","SupernovaDropdown","activator","anchorFullHeight","arrowBreakpoints","fullWidthBreakpoints","Placement","onShown","activatorClick","activatorRef","arrowRef","breakpointRef","contentRef","dropdownOptionsRef","dropdownOptionsSort","dropdownVisibleRef","arrowVisible","setArrowVisible","dropdownVisible","setDropdownVisible","fullWidthOnS","setDropdownVisibleCallback","handleCloseByClickOutside","handleActivatorKeydown","keyCode","KeyCode","shiftKey","dropdownOptionsKeys","handleContentKeydown","findIndex","setArrowPosition","requestAnimation","arrowAnchorMetrics","metrics","contentMetrics","width","handleResize","nextBreakpoint","removeEventListener","onKeyDown","baseClassNames","BASE_CLASS_NAMES","paddingWrapperClassName","PADDING_WRAPPER_CLASS_NAME","behavior","closeByClickOutside","onlySetPlacement","UserTypeSwitcher","pageAnalyticsEvent","DropdownContent","ARROW_BREAKPOINTS","FULL_WIDTH_BREAKPOINTS","EmployerMenu","currentTab","setCurrentTab","appleBusinessChatVisible","setAppleBusinessChatVisible","Mobile","MultiAccountSwitchInfotip","isInfotipVisible","setInfotipVisible","infotipRef","InfoPlacement","theme","InfoTheme","showCloseButton","EmployerProfile","isSudo","Profile","EmployerSignup","FavVacancies","Favorites","Feedback","isMiddleAsia","useIsMiddleAsia","NAVI_ITEM_PROPS","pricelistZp","GenericNavItem","Help","logGoogleAnalytics","logSupportButtonClick","Login","postponedActions","vacancy","handleLogoClick","mainMenuAnalytics","Logo","onLightBg","ChatikActivatorMobile","ChatikContext","resizable","draggable","CreateResumeMobileButton","showResumeLimitsMessage","setShowResumeLimitsMessage","maxResumes","SupernovaDropdownSectionHeader","AppleBusinessChatMobile","currentScreen","setCurrentScreen","contextValue","setSupportScreen","isEnabled","MobileScreen","setDefaultScreen","MobileServices","filteredItems","UserNotificationsMenuItem","isExpanded","setExpanded","handleAreaSwitchClick","screenName","shouldShowCounter","MyResumes","pricelist","DROPDOWN_PROPS","applicants","NavItemWithDropdown","subMenuItems","SupernovaSearchName","SearchTabs","searchName","setSearchName","supernovaSearchName","isEmployerSearch","NaviSearchEmployerButtons","searchBaseState","AdvancedSearchButton","SearchNameSelect","SearchButton","employerSearch","NaviSearch","showResumeSearchConditions","supernovaSearchLargeXS","supernovaSearchView","largeXS","useSearchBaseState","searchProps","useSearchNavItemProps","areaSwitchVisible","setAreaSwitchVisible","setAreaSwitchHidden","supernovaSearchArea","resumeSearchQueriesCount","textConditionsCount","showAdvancedSearchButton","HiddenFields","isEmployerSearchWithHiddenQueries","SupernovaSearch","VacancySavedSearchButton","AreaSwitcherModal","SearchViewSwitcher","sendGoogleEvent","SEARCH_ENTRY_POINT_EXP_NAME","isSearchExp","useExperiment","sendSearchExpCheck","shouldRenderSearchForm","expanded","buttonContent","Signup","sendCloseAnalytics","AppleBusinessChatMenu","MenuPlacement","Support","handleTrackClick","SupportChatContext","chatInstance","isActive","setShouldRender","shouldRender","setActive","CreateSupportChatInstance","onOnlineOperatorsAppear","onOnlineOperatorsLeave","unsubscribe","SupportChatProvider","dedicatedAdminWebimLocationInHelp","useSupportChat","UserNotifications","hasUnreadNotifications","UserProfile","employerReviewsApplicantProfileBadge","VacancyResponses","supernovaSearchExpanded","searchExpanded","setSearchExpanded","mobileMenuExpanded","setMobileMenuExpanded","closeChatOnClickInAnotherMenuItem","SearchSuggest","SUPPORT_ANALYTICS_EVENTS","copiny","employerHelp","orderCall","personalManager","vishnu","supportChat","useAdvancedSearchHref","EmployerSearchHiddenFields","defaultCountryCompanySearchId","isEmployerSearchPage","ResumeSearchHiddenFields","domainAreaId","proxiedResumeSearchFormParams","proxiedSearchFormParams","isSuitableResumes","hiddenAreaList","useHiddenAreaList","hiddenAreaListElement","savedAreaId","ignoredCustomParams","textParams","pos","logic","expPeriod","searchNameToFieldsMap","VacancySearchHiddenFields","SupernovaSearchNameAnalyticsMapping","scaleProp","mobilePlaceholder","tooltipText","SearchInput","onFocus","onBlur","fwdRef","isDashboardMobileSearch","innerRightElement","inputName","InputScale","proxiedProps","onFocusLocal","formName","fieldName","Translated","tooLongQuery","criteriaTextUpdatedAction","SearchSuggestInputRefContext","submitForm","searchInputDefaultValue","queryText","setQueryText","initialState","callbacks","setState","callback","newState","force","useSetStateWithCallback","inputRef","searchValue","resumeSearchResultCriteria","vacancySearchResultCriteria","employersListQuery","searchInputValue","useSearchInputValue","suggestKey","setSuggestKey","remote","platform","newCriteriaTextUpdated","isMultiText","handleSuggestChange","searchOnFocus","SmartSuggestItems","mobileInputProps","MobileSuggest","debounceDelay","inputProps","pickerItems","setPickerItems","setInputValue","updatePickerDebounced","newPreparedSearchValue","Defaults","normalizeText","handleFormSubmit","handleMouseDown","suggestProps","showXsModal","setShowXsModal","input","cloneElement","rest","renderClonedInputElement","selectedText","SavedSearchButton","isAlreadySaved","iconAppearance","iconPosition","ButtonIconPosition","FormState","SaveSearchError","SavedSearchForm","emailInputValue","onEmailInputChange","emailError","existChatBot","existEmail","onClickMessengers","onClickEmailSubscribe","Header","H4Section","INFO_NAME","hideSavedSearchInfo","SavedSearchInfo","initIsShowInfo","isShowInfo","setShowInfo","hideInfo","SavedSearchSuccess","closeForm","ANALYTICS_PLACE","isAnonymous","isVacanciesMap","autosearch","isSavedSearch","isFormOpen","isShowButton","savedSearches","setEmailInputValue","setEmailError","resetLoading","isModalMessengersVisible","openModalMessengers","hideModalMessengers","emailValue","saveWithoutForm","formState","setFormState","saveSearch","geocode_type","precision","ored_clusters","saveAutoSearch","CONFLICT","onSaveClick","createButtonClick","parsedLoginUrl","postponed","assign","onAlreadySavedClick","createdButtonClick","emailButtonClick","emailSubscribeButtonClick","messengersButtonClick","switchMessengersButtonClick","formProps","proxiedVacancySearchFormParams","similarSavedSearchEnabled","ignoredParams","AdvancedSearchIconButton","SUPERNOVA_SEARCH_FORM_ID","isAnonymousDashboardSearch","mainPageSignUpEnable","useMainPageSignupEnable","isMountEffect","isServerEnv","useServerEnv","supernovaSearchLarge","sendFormSubmitEvent","useSendFormSubmitEvent","isMapVacancySearch","enableReload","showAdditionalParamsText","showSearchNameSelect","Platform","form","extractRequestUrlFromForm","openAnonymousSignUpMainPage","paddingLeft","BASE_PATHS_MAP","getAdvancedSearchHref","resumeSearchQueries","textParam","isSomeResumeSearchQueryEmpty","vacancySearchParams","currentParams","resumeSearchParams","isSearchPage","proxiedAreaIds","savedAreaIds","setSearchNameWithQueryUpdate","addEventPixelsRu","useAddEventPixelsRu","unreadSupportCount","isMagritte","useMagritte","blokoInline","BlokoIconColor","blokoCommon","magritteInline","LiferingOutlinedSize24","magritteCommon","Card","actionCard","padding","borderRadius","CardStyle","ChatWritePossibility","isFilledPhone","phone","BACKOFFICE_EDIT_PROHIBITED_FIELDS","isPublication","extractContactInfo","employerManagersList","managerId","managerData","fio","phones","additionalPhone","isKeyOfObject","formatters","contactInfo","contacts","insiderId","employerInsiders","address","employerAddresses","addressId","isAddress","departmentCode","employerDepartments","brandedTemplate","brandedVacancyTemplates","test","employerTests","userTestId","isVacancyTest","publication","selectedPublicationTypeData","vacancyProperties","publicationVacancyProperties","properties","prepareValue","additionalStateValues","getMissingValueWithDeleteMark","oldValue","resultValue","oldSubfield","emptyValues","filterEmptyValues","isDelete","filteredValues","prepareValues","isEdit","isBackoffice","isBackofficeEdit","valuesFilteredByTypeFields","additionalFields","ignoredFields","removedAdditionalFields","withoutFields","removeValue","filterValues","valuesFilteredByEmptyFields","vacancyCreateInitialBody","fromEntries","chatWritePossibility","EnabledAfterInvitation","shouldShowError","touched","dirtySinceLastSubmit","hasSubmitError","errors","hasErrors","formatRemoteValidationErrors","getIn","addressErrors","setIn","formatClickmeValidationErrors","clickmeAutoCampaign","compareFieldsScheme","oldField","newField","hiddenFromSearch","employerServiceId","withZpCrossPost","auction","bid","budget","clickmeProducts","clickmeReplenishmentChecked","autoCampaignChecked","oldPhones","oldValues","newPhones","shallowEqual","compareField","ResponseError","Unknown","LetterRequired","TestRequired","TestServiceDown","NegotiationsLimitExceeded","TooLongLetter","ChangeResumeVisibilityDenied","AlreadyApplied","SpamDetected","ResourcePolicyViolation","InappropriateLanguage","letterMaxLength","JOB_SEARCH_STATUS_FORM_ID","JobSearchStatusNotification","statusSaveDisabled","setStatusSaveDisabled","notificationRef","statusSetRef","markAsReadRef","useMarkAsRead","JobSearchStatusTrigger","responseSentElementShown","markAsRead","JobSearchStatusAfterResponse","JOB_SEARCH_STATUS_AFTER_RESPONSE","AutoHideTime","ResumeAutoHideNotification","autoHideTime","isVacancyResponse","ResumeAutoHide","RESUME_AUTO_HIDE","LOCALSTORAGE_KEY_FIRST","VacancyResponseNotification","readPercent","VacancyResponse","VACANCY_RESPONSE","createNotification","setResponseData","publishedForResponseResumeHash","sendNotification","sendGAAnalyticsToStorage","vacancyResponseCompleteGaExternal","response_label","vacancyResponseCompleteExternal","usedResume","respondedWithResume","responseData","topic","responseStatus","negotiations","topicList","n","hasResponseLetter","askJobSearchStatus","readTopicPercent","AlreadyRespondedPlate","topics","filteredTopics","invitedTopic","invited","respondedTopic","applied","Inconcistencies","inconsistencies","selectedResumeId","resumeInconsistencies","resumeInconsistency","inconsistency","inconsistenciesRef","selectedResume","resumeTitle","emptyTitle","caption","languageTrl","LANGUAGE","AREA","DISTANCE","EXPERIENCE","LastLetterLink","setLetter","lastLetter","lastVacancyResponseInfo","letter","isLastLetterUsed","toggleLastLetterUsed","useToggleState","Letter","required","isBottomSheet","defaultExpanded","setIsExpanded","handleLetterToggleClick","autogrow","minHeight","maxHeight","addLetter","expand","letterRequired","getEmployersList","employers","andTrl","employersNames","arrayToHumanReadableList","VisibilityHint","visibility","accessType","NO_ONE","whitelist","containsEmployer","noOne","employerToWhitelist","visibleName","canAdd","whitelistIsFull","toWhitelist","WHITELIST","addEmployer","BLACKLIST","connectedEmployers","blacklist","removeEmployerCurrent","removeEmployerMany","and","FormHint","changeVisibility","Resume","selected","setSelected","shortResume","isIncomplete","titleFirst","titleString","labelProps","resumeLink","toSettings","incompleteHint","ResumeSelector","setSelectedResume","shortVacancy","hasHiddenResumes","hiddenResumeIds","isSingleResume","resumeVisibility","saveLetterToLocalstorage","localstorageKey","letterText","getUserResumes","unusedResumeIds","applicantActivityAction","decorators","scrollToFirstError","FORM_ID","ResponseForm","submitting","setSubmitting","onResponse","onError","vacancyBodyFooterNodeRef","vacancySource","needRedirect","renderSubmit","applicantVacancyResponseStatuses","countriesProfileVisibilityAgreement","alreadyResponded","usedResumeIds","getVacancyResponseQuestion","useGetResponseQuestion","setLetterText","Source","responseQuestion","runActionFinally","skipTest","formdata","resume_hash","ignore_postponed","incomplete","mark_applicant_visible_in_vacancy_country","confirmed","lux","withoutTest","vacancyResponseUpdate","addUserLabelsForVacancies","UserLabel","applicantActivity","responsesStreak","responsesCount","responsesRequired","responseStreakUpdate","unusedResumes","UXFeedback","scrollToRespondedBlock","blockRef","scrollToElement","topOffset","centered","redirect_uri","redirectUrl","renderForm","initialValues","handleSubmit","ResponseQuestion","isLetterTextEmpty","submitTriggerRef","relocationWarningAction","countriesProfileVisibilityAgreementAction","vacancyResponsePopupAction","setVacancyResponsePopupVisible","setLastVacancyResponseInfo","ResponseType","fetchVacancyResponsePopup","handleQuickResponse","scrollToFooter","responseCallbackRef","enableRelocationWarning","vrImmediateRedirectUrl","openChat","onResponseComplete","onPopupCancelCallback","handleResponse","responseCallback","relocationWarning","vacancyResponseSetFetching","NeedLogin","NoResumes","Reload","Modal","responsePopup","onCancelCallback","PopupType","lastResponseLetter","lastResponseResumeHash","sendBottomSheetShownEvent","QuickResponse","RespondedText","OneResponse","MoreResponse","Discard","Invite","renderResponded","doResponse","scrollToSignupForm","hasForceQuickResponse","adVacancyClickUrl","vacancyOfTheDayClickUrl","onScrollToSignupForm","kardinalAnalyticsSent","setKardinalAnalyticsSent","useQuickResponse","resumeIdResponseStatuses","useResumeIdResponseStatuses","respondedProps","respondedIds","invitedIds","discardedIds","usedResumeCount","getRespondedProps","doResponseHappened","forceQuickResponse","relatedVacancies","getHhtmSourceLabel","isHrZarplataDomain","useIsHrZarplataDomain","isTest","alreadyApplied","registerInteraction","useRegisterInteraction","onResponseClick","SendFloodlightConversion","cat","sendAnythingClickAnalytics","VacancyOfTheDayLocation","clickUrl","SendKardinalAnalytics","employer_id","StatisticsProcessing","scrollWithAttention","SIGNUP_FORM_ATTENTION_CLASS","sendAdvertisingAnalytics","currentUrl","replaceState","postData","stayOnPage","countriesProfileVisibilityAgreementRef","getVacancyResponseQuestionRef","markApplicantVisibleInVacancyCountry","postVacancyResponsePopup","isServerError","respData","firstContact","SendHHAnalytics","AdvertisingPopup","vacancyResponsePopup","companyUrl","enableVacancySnippetsAction","isActivityMeterExp","hasVacanciesWithAddress","isVacancySnippetsEnabled","isBackofficeUser","archiveSearch","setVacancySnippetEnable","vacancySearchToggleVacancySnippetButtonClick","isFullDescription","mapButtonShown","mapButtonClick","TipLayer","reduced","pressed","VacancyActionResponsePlace","Main","AfterBody","ResponseSummary","VideoVacancy","VacancyActionResponse","resumeFormNodeRef","hideResponded","RespondedNode","isRedesign","renderCustomWrapper","onRespondClick","showSignupForm","isBrandingPreview","hasResponseStatus","responseInfo","showResponse","allowShowContactsButton","loadScrollHandler","RESUME_FORM_ATTENTION_CLASS","loadScrollHandlerToFooter","renderWrapper","responseUrl","onClickCallback","onButtonClick","BlokoLink","LOCALSTORAGE_BASE_KEY","LSCache","saveVacancyResponseQuestion","question","questionId","vacancyResponseQuestionsAction","vacancyResponseQuestions","getSavedQuestion","resumeFormNode","attentionClass","requestAnimationFrame","WrappedComponent","TranslationWrapper","defaultLang","langs","useTranslations","T","useCountryId","experimentName","callHook","sendExperimentCheckAnalytics","experimentGroup","getCheckedExperiments","putCheckedExperiment","useExperimentGroupCheckFunction","exps","experiments","NOT_IN_EXPERIMENT_GROUP","getExperimentGroup","EXPERIMENT_GROUP","useExperimentControlCheckFunction","experimentNames","CONTROL_GROUP","toggleFavoriteApplicant","onFavoriteStateChanged","userLabels","toggleFavorite","toggle","isFavoriteVacancyState","removeUserLabelsForVacancies","useFavoriteApplicant","toggleFavoriteAnonymous","useFavoriteAnonymous","toggleIsFavoriteVacancy","isSendUxFeedback","isAvailableChangeFavoriteState","featureName","featureValue","isNoMenu","noMenu","MagritteContext","usePlatform","responseStatuses","responded","discarded","useTopLevelSite","useIsHeadhunterKg","isHhKz","isHhUz","isHeadhunterKg","BREADCRUMB_SEARCH_DATA_KEYS","resumeViewByID","resumeView","applicantSkillVerificationsMethod","applicantSkillVerificationsMethods","supportedPathnames","skillsVerificationMethods","locationPathname","locationSearch","isMatchResumeLocation","matchPath","exact","isMatchSkillsLocation","createSkillVerificationMethodsPath","methodID","skillsVerificationMethodPath","URLSearchParams","resumeUrl","createBreadcrumbsSearch","getResumePageData","SocialNetworksCode","autoGeneratedReducer","ACCOUNT_HISTORY_MONEY","StateStatus","accountHistoryMoneyAction","ActionCreatorHelper","ActionCreator","createReducer","hasPersonalManager","agreements","hrs","orders","balances","employerCountry","payload","AuthSystemMethods","OPEN_ANONYMOUS_SIGN_UP_MODAL","CLOSE_ANONYMOUS_SIGN_UP_MODAL","closeAnonymousSignUpModal","queryParams","anonymousSignUp","available","alreadyShown","OPEN_ANONYMOUS_SIGN_UP_MAIN_PAGE","CLOSE_ANONYMOUS_SIGN_UP_MAIN_PAGE","closeAnonymousSignUpMainPage","opened","OPEN_ANONYMOUS_SIGN_UP_PAGINATION","CLOSE_ANONYMOUS_SIGN_UP_PAGINATION","openAnonymousSignUpPaginationPage","closeAnonymousSignUpPaginationPage","setJobSearchStatusPostChangeModal","REMOVE_EMPLOYER","REMOVE_ALL_EMPLOYERS","INITIAL_STATE","paging","list","found","actionCreator","removeEmployer","removeAllEmployers","newList","REMOVE_VACANCY","removeVacancy","ManagerInactiveTrlCode","NegotiationsFilterTab","ApplicantNegotiationStatus","ApplicantNegitiationsOrder","OrderDirection","deleteAction","filterByStatus","order","PaymentServicesFromBackend","APPLICANT_RESPONSE_STREAK_UPDATE","overall","RESUMES_SET_TO_UPDATE_VALUE","resumesSetToUpdateValueAction","toUpdate","ApplicantRsvCompetencyLevelType","ApplicantRsvCompetencyLevelUuid","applicantRsvCompetencyLevelMap","Basic","Intermediate","Advanced","applicantRsvCompetencyLevelOrder","ApplicantPackageType","ApplicantPaymentSource","ApplicantPaymentType","applicantPackageType","applicantServiceType","applicantPaymentBackUrl","applicantAnalyticsAction","applicantPaymentTypes","applicantAvailableResumeServices","applicantPackageContent","applicantAvailableQuantities","applicantServicesPrices","applicantPaymentSource","Desktop","applicantFindJobRecommendedQuantity","REFRESH_APPLICANT_SKILLS_VERIFICATION_ERROR","refreshApplicantSkillsVerificationError","ApplicantSkillsVerificationResultKeys","REFRESH_APPLICANT_SKILLS_VERIFICATION_RESULTS","refreshApplicantSkillsVerificationResults","APPLICANT_VACANCY_RESPONSE_STATUS_UPDATE","APPLICANT_VACANCY_RESPONSE_STATUS_SET_FETCHING","actionHelper","ARTICLE_BREADCRUMBS","ArticlesMark","PartnerMark","BusinessMark","YoungProfessionalsMark","PressReleaseMark","ImageType","VoteType","REVOKE_ASSESSMENT","State","AssessmentCode","revoke","assessments","assessment","assessmentId","Revoked","TOOGLE_CONFIRMATION_MODAL","SET_CONFIRMATION_MODAL_DATA","toogleConfirmationModal","setConfirmationModalData","price","CampaignCreationStatus","CAMPAIGN_CREATION_ENABLED_STATUSES","NotCreated","CampaignDraftCreated","AuctionCampaignStatus","AuctionFieldName","AuctionFieldError","BidFrequencyStatus","SET_BID_RATING_DATA","SET_BID_RATING_LOADING","SET_PRODUCT_INFO_DATA","SET_PRODUCT_INFO_LOADING","UPDATE_AUCTION_CONTROL_INFO","UPDATE_AUCTION_STATUS","UPDATE_AUCTION_CAMPAIGN_INFO","CHANGE_USE_AVAILABLE_MONEY","SET_CREATED_AUCTION_DATA","setBidRatingData","setBidRatingLoading","setProductInfoData","setProductInfoLoading","updateAuctionControlInfo","updateAuctionStatus","updateAuctionCampaignInfo","changeUseAvailableMoney","setCreatedAuctionData","defaultControlInfo","minValue","initialValue","bidRating","productInfo","controls","currentVacancyAuctionCampaign","campaignStatus","useAvailableMoney","SET_AUCTION_HHTM_SOURCE_LABEL","setAuctionHhtmlSourceLabel","AUTH_URL_UPDATE","authUrlUpdate","AutoInviteCriteria","DaysOfWeek","ScheduleMode","BlogArticleItemViewType","Large","Medium","Special","Mini","Promo","rubrics","rubric","isBlogEnable","layout","isDenseCategory","isViewsCountEnabled","slider","MARK_TOPICS_AS_VIEWED","INVITE_TO_VIDEOCALL","SET_CANDIDATES_LIST","REMOVE_INTERVIEW_REMIND","SET_INTERVIEW_REMIND","SET_NOT_APPEARANCE_DATE","SET_COMMUNICATION_FEEDBACK_FOR_CANDIDATE_TOPIC","MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_CANDIDATE_TOPIC","MARK_REMINDER_AS_SHOWN_FOR_CANDIDATE_TOPIC","ActionType","FilterType","Advice","ConnectedServiceTypes","TagName","setCandidatesList","markTopicsAsViewed","removeInterviewRemind","setInterviewRemind","inviteToVideocall","setNotAppearanceDate","setCommunicationFeedbackForCandidateTopic","markFeedbackAdviceAsSelectedForCandidateTopic","markReminderAsShownForCandidateTopic","getNewCollectionObject","newCount","moveCount","newOrUpdated","getNewCollection","collections","collectionNameFrom","collectionNameTo","ResponseCollection","collectionFromIndex","collectionToIndex","responsesIndex","getUpdatedTopicInterviewInfo","topicsNegotiationInterviewInfo","topicIds","readCount","readTopics","shortTopicList","hasNewMessages","workflowCollections","enteringCollections","sum","currentTopic","lastState","elementsJson","candidatesList","lastNonappearanceComplaintDate","communicationFeedback","shouldShownReminder","feedbackAdviceWasSelected","ChatBotMessengerTypes","AutoCampaignCreationStatus","CampaignStatus","AccountStatus","SET_CLICKME_AUTO_CAMPAIGN_DATA","SET_CLICKME_AUTO_CAMPAIGN_DRAFT","setClickmeAutoCampaignData","autoCampaignInfoFromVacancy","clickmeAutoCampaignData","campaignCreationStatus","Disabled","accountStatus","AccountOkBalance","campaignInfo","campaignDraft","availableMoney","hideClickmeBalance","accountBalance","minBudget","vacancyPremoderateStatus","SET_AVAILABLE_CLICKME_PRODUCTS_DATA","SET_CLICKME_PRODUCTS_DATA_LOADING","SET_CLICKME_PRODUCTS_DATA_IS_LOADED","ProductName","setAvailableClickmeProductsData","setClickmeProductsDataLoading","setClickmeProductsDataIsLoaded","initialProducts","autoCampaign","products","clickmeReplenishment","isLoaded","availableProducts","ClickmeFieldName","SET_CLICKME_AUTO_CAMPAIGN","SET_CLICKME_AUTO_CAMPAIGN_FIELD","SET_CLICKME_PRODUCT_FOR_CART","SET_CLICKME_AUTO_CAMPAIGN_LOADING","SET_CLICKME_AUTO_CAMPAIGN_ERROR","SET_SAVE_CLICKME_AUTO_CAMPAIGN_LOADING","SET_CLICKME_AUTO_CAMPAIGN_VALIDATION_ERRORS","SET_SAVE_CLICKME_AUTO_CAMPAIGN_ERROR","setClickmeAutoCampaign","setClickmeAutoCampaignField","setClickmeAutoCampaignLoading","setClickmeAutoCampaignError","setClickmeProductForCart","setSaveClickmeAutoCampaignLoading","setAutoCampaignValidationErrors","setSaveAutoCampaignError","autoCampaignInfo","clickmeProductForCart","saveAutoCampaignLoading","saveAutoCampaignValidationErrors","saveAutoCampaignError","autoCampaignInfoError","SET_CLICKME_AUTO_CAMPAIGN_INFO","SET_CLICKME_AUTO_CAMPAIGN_CONFIG","SourceCode","setClickmeAutoCampaignInfo","setClickmeAutoCampaignConfig","initClickmeInfo","onClickBack","COMPLAINT_REASON_TYPES","ComplaintReason","complaintReasonTypesAction","needComment","reasonType","CounterType","DisplayType","EMPLOYER_INFO_SET_DESCRIPTION","EMPLOYER_INFO_DESCRIPTION_STATUS","EMPLOYER_INFO_SET_SITE","EMPLOYER_INFO_SET_INDUSTRIES","Status","EmployerCategory","accreditedITEmployer","industries","hrBrand","saveDescriptionStatus","Dirty","organizationFormId","isTrusted","canEditDescription","hasUnsavedChanges","employerCountryCode","previousEmployerTargets","itAccreditationBlocked","setDescription","setDescriptionStatus","setSite","setIndustries","REMOVE_SAVED_SEARCH","removeSavedSearch","savedSearch","EMPLOYER_LOGO_SET_LOGO_STATUS","EMPLOYER_LOGO_SET_LOGO_URL","logoStatus","setLogoUrl","setLogoStatus","Action","actionCreatorHelper","addCommentToUser","AddCommentToUser","addBatchCommentsToUser","AddBatchCommentsToUser","updateComments","UpdateCommentsByUserId","getComments","userId","commentId","comments","Set","commentIds","maxOffset","hasMore","startFetch","Fetching","loadComments","Fetched","addComment","Prepend","addComments","AddComments","editComment","Edit","markDeleteComment","MarkDelete","Clear","Initial","Complete","markDelete","ChangeType","changes","ADD_CHECKED_TOPIC","REMOVE_CHECKED_TOPIC","SET_CHECKED_TOPICS","setCheckedTopics","addCheckedTopic","removeCheckedTopic","CHANGE_ADDRESSES_LOADING_STATUS","CHANGE_ADDRESSES_LIST","CHANGE_ADDRESSES_COUNT","changeAddressesLoadingStatus","changeAddressesList","changeAddressesCount","addresses","addressesCount","loadingComponent","UPDATE_EMPLOYER_AUTO_ACTION_VACANCIES","updateEmployerAutoActionVacancies","newEmployerAutomationVacanciesData","UPDATE_EMPLOYER_AUTO_INVITE_VACANCIES","updateEmployerAutoInviteVacancies","SET_EMPLOYER_BUTTON","setEmployerButton","ServiceActivationType","UPDATE_EMPLOYER_CARTS_DATA","updateEmployerCarts","newEmployerCartsData","EmployerCategoryCode","EMPLOYER_CONSTRUCTOR_FETCH","EMPLOYER_CONSTRUCTOR_SET_SAVED","EMPLOYER_CONSTRUCTOR_SET_EDIT_MODE","EMPLOYER_CONSTRUCTOR_SET_PREVIEW_MODE_WITH_BRANDING","EMPLOYER_CONSTRUCTOR_SET_STATUS","EMPLOYER_CONSTRUCTOR_UPDATE_WIDGETS_ORDER","EMPLOYER_CONSTRUCTOR_ADD_IMAGE","EMPLOYER_CONSTRUCTOR_MODIFY_IMAGE","EMPLOYER_CONSTRUCTOR_SET_MODAL_ERROR","EMPLOYER_CONSTRUCTOR_MODIFY_WIDGET","EMPLOYER_CONSTRUCTOR_ADD_WIDGET","EMPLOYER_CONSTRUCTOR_REMOVE_WIDGET","EMPLOYER_CONSTRUCTOR_UPDATE_HEADER","EMPLOYER_CONSTRUCTOR_RESET_DESCRIPTION_ERROR","EMPLOYER_CONSTRUCTOR_SET_DESCRIPTION_ERROR","EMPLOYER_CONSTRUCTOR_SET_SIDEBAR_COLOR","PICTURE_RESIZE_MAX_TRIES","editMode","previewModeWithBranding","version","canEdit","modalError","widgets","widgetsOrder","saveStatus","pictureId","resizeStatus","images","tabPrices","hasConstructor","hasService","readyToActivateCartId","sidebarColors","setEditMode","setPreviewModeWithBranding","setConstructorStatus","employerConstructorUpdateWidgetsOrder","employerConstructorModifyWidget","employerConstructorAddWidget","employerConstructorRemoveWidget","employerConstructorUpdateHeader","employerConstructorSetSaved","employerConstructorAddImage","employerConstructorModifyImage","setModalError","setSaveDescriptionErrorType","resetSaveDescriptionErrorType","setSidebarColor","switchImagesActionWrapper","widgetId","widget","image","saveDescriptionErrorType","PictureType","pictureSettings","VisibilityReason","TopicState","ErrorReason","serviceUrlTemplate","visibilityHistory","applicantUserId","requestedResume","otherResumes","resumeById","vacancyById","setEmployerContactsVisibility","resetEmployerContactsVisibility","ADD_EMPLOYER_DIVISION","DELETE_EMPLOYER_DIVISION","UPDATE_EMPLOYER_DIVISION","UPDATE_QUOTA_COUNTS","addEmployerDivision","updateEmployerDivision","updateQuotaCounts","deleteEmployerDivision","servicesInfo","serviceId","availableQuotas","availableQuotasCount","deletedDivision","EMPLOYER_DOCUMENTS","ADD_EMPLOYER_DOCUMENT","UPDATE_EMPLOYER_DOCUMENT","DELETE_EMPLOYER_DOCUMENT","DocumentError","addEmployerDocumentAction","updateEmployerDocumentAction","deleteEmployerDocumentAction","ActivationType","BillStatus","BackUrlType","SET_ORGANISATION_TYPES_DATA","SET_PAYER_METADATA","SET_BILL_TYPES_DATA","SET_PAYERS_DATA","SET_PAYERS_LOADING","setOrganisationTypesData","setPayerMetadata","setBillTypesData","setPayersData","setPayersLoading","hasPayers","hasPersonAgreement","payers","payersLoading","CountryCode","paymentTypesOrder","paymentTypes","organisationTypes","payerMetadata","payer","countries","vats","billTypes","sellers","cart","cartId","activations","currentActivationType","UPDATE_TEMPLATE","updateTemplate","mailTemplates","anonymous","variables","transliteration","mapping","template","ManagerType","ImplantType","currentManagerType","Manager","managerTypes","permissions","multiManagerPermissions","implantTypes","moderationData","canPostVacancyImmediately","managerTypesForModeration","moderatedManagers","DELETE_MANAGER","FILTER_LOADING","deleteManager","filterLoading","managersViewMeta","ableToCreateManager","canEditEmployerManagerQuotas","managersCreationLimitReached","onlyOneManagerEnabled","MCPSGroup","resumeViewsAccessDenied","ResumeViewHistory","showResumeViewsNumbers","giveMCPAllowed","userEmail","isShowMCP","managersShown","negotiationStats","resumeViews","EmployerMarketSegmentType","SET_COMMUNICATION_FEEDBACK_FOR_TOPIC","MARK_FEEDBACK_ADVICE_AS_SELECTED_FOR_TOPIC","MARK_REMINDER_AS_SHOWN_FOR_TOPIC","setCommunicationFeedbackForTopic","markFeedbackAdviceAsSelectedForTopic","markReminderAsShownForTopic","replaceItem","array","itemIndex","newItem","copyArray","splice","maximumTopicsPerUser","responseLetters","topicIndex","ChangeTopicActionError","ChangeTopicFieldError","ChangeTopicContentError","isChangeTopicContentError","ChangeTopicFormErrorCode","isCustomError","UPDATE_CHANGE_TOPIC","SET_LOADING_CHANGE_TOPIC","SET_ERROR_CHANGE_TOPIC","updateChangeTopic","setLoadingChangeTopic","setErrorChangeTopic","changeTopic","useSendSmsToInvite","states","templates","topicsWontBeUpdated","UPDATE_RECOMMENDED_SKILLS","UPDATE_RECOMMENDED_COMPETENCE","UPDATE_SKILLS_IN_INPUT","updateRecommendedSkills","updateRecommendedCompetence","updateSkillsInInput","recommendedKeySkills","recommendedCompetencies","skillsInInput","ChangeEmailHoverTip","SET_NEW_EMAIL","setNewEmail","newEmail","changeEmailHoverTip","targetEmployerManagerId","changeEmailForMyself","EmployerState","NotSuspicious","accepted","SET_DRAFT_PURCHASE_INFO","setDraftPurchaseInfo","info","FILTER_VACANCIES","CHANGE_LOADING_LIST_STATUS","SORT_VACANCIES","ADD_VACANCIES","ARCHIVE_MANAGER_VACANCY","REMOVE_MANAGER_VACANCIES","MOVE_MANAGER_VACANCIES","UPGRADE_MANAGER_VACANCY","UPDATE_MANAGER_VACANCIES","SET_DRAFTS","DISABLE_AUTO_PUBLICATION","CANCEL_SCHEDULED_PUBLICATION","REFRESH_MANAGER_VACANCY","UPDATE_MANAGER_VACANCY_AUCTION_CAMPAIGN_INFO","SET_AUCTION_CAMPAIGN_CREATED","UPDATE_HIRING_PLAN_DATA","CHANGE_MANAGER_VACANCY_VISIBILITY","moveManagerVacancies","addVacancies","setDrafts","sortVacancies","changeListLoadingStatus","archiveManagerVacancies","removeManagerVacancies","upgradeManagerVacancy","updateManagerVacancies","filterVacancies","removeAutoPublicationDraft","removeScheduledPublication","refreshManagerVacancy","updateManagerVacancyAuctionCampaignInfo","setAuctionCampaignCreated","updateHasHiringPlan","changeManagerVacancyVisibility","getTotalVacanciesCount","oldShownVacanciesCount","newShownVacanciesCount","oldTotalVacanciesCount","delta","vacancyIds","drafts","draftsTotalCount","newManagerDrafts","newTotalDraftsCount","newVacanciesList","managerVacancy","checkedVacancies","oldManagerVacancies","newManagerVacanciesList","filterList","activeVacanciesCount","managerToTransfer","filterEmployerManagerIdList","groupId","groupManagersIds","isManagerToTransferFiltered","isGroupContainsManager","ALL_VACANCIES_GROUP_ID","has","vacanciesFromState","resultList","isCheckedVacancy","newVacancy","newActiveVacanciesCount","autoProlongationState","isAnyVacancyHasBrandingTemplate","isAuctionPresent","isCallsPresent","managerVacancies","newVacancies","draftsData","filteredData","managerVacanciesFromState","vacancyPosition","updatedVacancy","autoPublications","newAutoPublications","billsByDrafts","scheduledPublications","newScheduledPublications","publicationTime","newCampaignInfo","vacanciesList","auctionData","hasHiringPlan","UPDATE_VACANCIES_GROUPS","updateVacanciesGroups","STATIC_GROUPS_COUNT","shouldShowVacanciesGroups","managerVacanciesGroups","payloadGroups","Map","groups","group","set","newGroups","payloadGroup","delete","staticGroups","dynamicGroupsFiltered","currentGroupId","groupName","localeCompare","SUITABLE_COUNTER","fetchSuitableCounterFailed","fetchSuitableCounterStart","fetchSuitableCounterSuccess","VacanciesType","setVacanciesCount","fetchAndUpdateVacanciesCount","employerManagerId","DEFAULT_FILTERS_VALUES","areaId","vacancyMetallic","vacancyType","premoderateStatus","VACANCIES_GROUPS_HEIGHT","VacancyActionType","VacancyPromotionType","hiringPlanDefaultFormValue","plannedCount","plannedHireDate","FETCH_VACANCY_UPGRADES_FAILED","FETCH_VACANCY_UPGRADES_START","FETCH_VACANCY_UPGRADES_SUCCESS","fetchVacancyUpgradesFailed","fetchVacancyUpgradesStart","fetchVacancyUpgradesSuccess","clearUpgradeInfo","CommonExtraFilter","VacancyExtraFilter","UPDATE_FINANCIAL_DOCUMENT_DEEDS","updateFinancialDocumentDeedsAction","indexedDeeds","deed","deedId","GlobalStatisticsCategory","SET_IS_RESUME_CARD_REDESIGN_ONBOARDING","setIsResumeCardRedesignOnboarding","protocolHost","isSeoDomain","HeadHunter","RUN_LOYALTY_SURVEY","showBanner","MicroFrontendServiceName","UPDATE_MICRO_FRONTENDS","DELETE_MICRO_FRONTEND","deleteMicroFrontend","prev","ADD_NOTIFICATION","REMOVE_NOTIFICATION_BY_ID","REMOVE_NOTIFICATION_BY_TYPE","removeNotificationByIdAction","notificationTypes","OTHER_ROLES_ID","CommonKeys","Age","Company","Compensation","Etc","SubIndustry","Neighbours","PartTime","VacancyId","MARK_UPDATE_VIEWED","markUpdateViewed","update","SHOW_PICK_VACANCY_MODAL","showPickVacancyModal","isShowModal","PriceDataTab","EmployerBrandItemTypes","RecommendedPriceItemType","RecommendedTabVariants","UNLIMITED_RESUME_THRESHOLD","ZpTabName","ZpProductFields","publicationsCountFields","BusinessCount","PromoCount","AnonymousCount","UPDATE_ZP_TARIFF","updateZpTariff","tariffName","product","tariff","backofficeTariffs","tariffs","newParams","newProduct","newLoading","updatedTariff","ServiceCode","additionalPurchaseCodes","Add","Reservation","publicationsCodes","Standart","StandartPlus","Anonymous","Advertizing","FreeRegionalVacancy","ZpPromo","ZpBusiness","ZpAnonymous","ZpDemo","Variant","UPDATE_TAB_DATA","ADD_SCOPE","DELETE_SCOPE","UPDATE_SCOPE","UPDATE_COUNTS","updateTabData","addScope","deleteScope","updateScope","updateCounts","variantInfo","variants","Single","lastAddedScope","scopes","defaultScope","priceRegionId","updatedScope","newTabData","setPublicationsAmount","publicationsAmount","setPriceRegion","priceRegion","setZpCrossPost","zpCrossPostChecked","setProductsData","productsData","FormComponent","Params","ServiceInputType","PriceItemCode","CHANGE_VIEW","changeView","PUSH_RELATED_VACANCIES","pushRelatedVacanciesAction","PUSH_RELATED_EMPLOYER_VACANCIES","pushRelatedVacanciesForEmployerAction","RESUME","RESUME_UPDATED","RESUME_ACCESS_TYPE","RESUME_CHANGE_KEY_SKILL","RESUME_UPDATE_CONTACT_PHONES","RESUME_SET_AUTO_VOTE_SKILL","RESUME_SET_TO_UPDATE_VALUE_ACTION","resumeUpdatedAction","resumeChangeKeySkillAction","resumeUpdateContactPhonesAction","resumeSetAutoVoteSkillAction","resumeSetToUpdateValueAction","updated","openedContacts","skillId","increased","newKeySkills","advancedKeySkills","skill","voted","autoVoteSkill","ResumeAccessType","EVERYONE","Everyone","CLIENTS","Clients","WhiteList","BlackList","DIRECT","Direct","NoOne","RESUME_ACCESS_TYPES","resumeAccessType","DistanceValues","PreferredContact","Relocation","TravelTime","TripsReadiness","Gender","LangsList","Permission","Statuses","Recommendations","EducationLevel","LanguageLevel","PersonalSiteTypes","PhotoState","ValidationSchema","LoadingActivityName","SELECT_RESUME_SAVED_SEARCH","RESUME_SAVED_SEARCH_LOADING","SELECT_ALL_RESUME_SAVED_SEARCHES","SET_RESUME_SAVED_SEARCH_COUNTERS","selectResumeSavedSearchAction","resumeSavedSearchLoadingAction","selectAllSavedSearchesAction","setResumeSavedSearchCountersAction","isAllSelected","selectedItems","filterValue","currentLoadingActivityName","updatedSavedSearchArray","savedSearchId","resultsAll","resultsNew","RelocationOption","RESUME_VISIBILITY_EMPLOYER_BLACKLIST","RESUME_VISIBILITY_EMPLOYER_BLACKLIST_FETCHING","perPage","pager","resumeVisibilityEmployerBlacklistAction","resumeVisibilityEmployerBlacklistFetchingAction","RESUME_VISIBILITY_EMPLOYER_WHITELIST","RESUME_VISIBILITY_EMPLOYER_WHITELIST_FETCHING","resumeVisibilityEmployerWhitelistAction","resumeVisibilityEmployerWhitelistFetchingAction","RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST","RESUME_VISIBILITY_SEARCH_RESULTS_BLACKLIST_FETCHING","resumeVisibilitySearchResultsBlacklistFetching","resumeVisibilitySearchResultsBlacklist","RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST","RESUME_VISIBILITY_SEARCH_RESULTS_WHITELIST_FETCHING","resumeVisibilitySearchResultsWhitelistFetching","resumeVisibilitySearchResultsWhitelist","UPDATE_RESUMES_RELEVANT_EXPERIENCE","RelevantExperienceResumesType","experience","resumeShowInfotip","isAnalyticsEnabled","CompetencyResult","UPDATE_RSV_USER_COMPETENCIES_MODAL","UPDATE_RSV_USER_COMPETENCIES_RESULT","updateRsvUserCompetenciesModal","updateRsvUserCompetenciesResult","isModalWindowOpened","competenciesResult","ExclusionOption","ADVANCED_SEARCH_UPDATE_VERIFIED_LANGUAGE_FILTER","advancedSearchUpdateVerifiedLanguageFilter","keySkills","university","exclusion","SettingName","SettingType","FilterExpPeriodOption","activeSettings","availableSettings","vacancySimilarBuyContacts","normalSearchResults","normalGroupedSearchResults","Area","AcceptTemporary","Citizenship","District","DriverLicenseTypes","Employment","Experience","ExcludedText","FilterExpIndustry","FilterExpPeriodForIndustry","Industry","Language","Label","Metro","ProfessionalRole","SearchDebug","Salary","Schedule","SearchField","Skill","University","VerifiedSkills","VerifiedLanguages","WorkTicket","AgeFrom","AgeTo","BottomLeftLat","BottomLeftLng","Clusters","ControlFlag","CurrencyCode","DateFrom","DateTo","EmployerId","EmployerManagerId","ExpCompanySize","ExpIndustry","ExpPeriod","Folder","GeocodeType","Geohash","Height","IsAutosearch","IsDefaultArea","ItemsOnPage","Lenient","Logic","NoMagic","OnlyWithAge","OnlyWithGender","OnlyWithPhoto","OnlyWithSalary","OrderBy","Page","Pos","Precision","RecommendedByUid","SalaryFrom","SalaryTo","SavedSearchId","SearchPeriod","Specialization","TopRightLat","TopRightLng","Width","SearchFieldOption","ExperienceOption","PartTimeOption","LetterGroupType","SearchCatalogListType","SearchCatalogType","EMPTY_CLUSTER","EMPTY_RANGE_CLUSTER","EMPTY_GENDER_CLUSTER","NOVA_FILTER_UPDATE_SELECTED_VALUES","searchClustersUpdate","SEARCH_CLUSTER_ORDER_AREA","SEARCH_CLUSTER_ORDER_DISTRICT","SEARCH_CLUSTER_ORDER_METRO","SEARCH_CLUSTER_ORDER_PROF_ROLE","SEARCH_CLUSTER_ORDER_INDUSTRY","SEARCH_CLUSTER_ORDER_SUB_INDUSTRY","SEARCH_CLUSTER_ORDER_SKILL","SEARCH_CLUSTER_ORDER_DRIVER_LICENCE_TYPES","SEARCH_CLUSTER_ORDER_LABEL","MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT","MIN_APPLICANT_SUITABLE_VACANCIES_COUNT","Employers","Resumes","Applicant","paymentNotAvailableSites","GE","TOP_PROMO_BANNER_HIDE","LOADED_MORE_UNPREMODERATED_VACANCIES","REMOVE_UNPREMODERATED_VACANCY","loadedMoreUnpremoderatedVacanciesAction","removeUnpremoderatedVacancyAction","moderatorId","USER_LABELS_FOR_VACANCIES_ADD","USER_LABELS_FOR_VACANCIES_REMOVE","NotificationPriority","SimpleUserNotificationsTemplateKey","DELETE_USER_NOTIFICATION","MARK_AS_VIEWED_USER_NOTIFICATIONS","ADD_USER_NOTIFICATIONS","simpleNotificationsKeys","isSimpleUserNotification","complexNotificationsKeys","addUserNotifications","UserStat","INCREMENT_APPLICANT_INVITATIONS_COUNT","incrementApplicantInvitationsCount","ApplicantInvitations","RESET_TO_DEFAULT","ADD_VACANCIES_TO_PROFROLES","SET_PROFROLE_EXPANDED","SET_FIRST_PAGE_LOADED_WITH_ROLES","ADD_PROF_ROLES","resetToDefault","addVacanciesToProfRole","setProfRoleExpanded","firstPageLoadedWithRoles","addProfRoles","regionPropName","regionType","dataRegion","modifedDataRegion","countsByProfRole","profRole","profRoleId","firstPageLoaded","currentRegion","countsByProfArea","countsByProfCategory","TemplatesGroup","REMOVE_VACANCY_TEMPLATE","removeVacancyTemplate","CALLS_TO_UPDATE","updateCallsList","phoneCalls","calls","callsToResume","UPDATE_AVAILABLE_PUBLICATION_TYPES_PARAMS","SET_AVAILABLE_PUBLICATION_TYPES_LOADING","SET_AVAILABLE_PUBLICATION_TYPES_DATA","updateAvailablePublicationTypesParams","setAvailablePublicationTypesLoading","setAvailablePublicationTypesData","areaIds","professionalRoleIds","withClickme","UPDATE_VACANCY_ADVICES","CLEAN_VACANCY_ADVICES","REMOVE_HIDDEN","ADD_HIDDEN","supported","BuilderSupportedAdvice","vacancyUpdateAdvices","vacancyCleanAdvices","removeHiddenVacancyAdvices","addHiddenVacancyAdvices","newVisible","oldVisibleWithoutOutdated","newHidden","VacancyAdvice","UPDATE_VACANCY_ANALYSIS","CLEAN_VACANCY_ANALYSIS","advices","vacancyUpdateAnalysis","vacancyCleanAnalysis","UPDATE_VACANCY_INITIAL_BODY","vacancyUpdateInitialBodyAction","VacancyResponsesFiltersFields","D","F","ERR","NA","EVU","UPDATE_FLAG","VacancyResponseFlag","updateFlag","PopupTypes","SET_RESPONSE_QUESTION","AnswerType","SurveyAnswerOptionProp","ActionKind","setAutoActionAction","SetAutoAction","resetAutoActionAction","ResetAutoAction","SELECT_ALL_VACANCY_SAVED_SEARCHES","SELECT_VACANCY_SAVED_SEARCH","GET_VACANCY_SAVED_SEARCH","VACANCY_SAVED_SEARCH_LOADING","selectVacancySavedSearchAction","getVacancySavedSearchAction","vacancySavedSearchLoadingAction","emailVerified","searchFields","partTime","ADD_MORE_VACANCIES","REPLACE_VACANCY_SEARCH_RESULT","SET_IS_LOADING","REPLACE_VACANCIES","SAVE_AUTO_SEARCH","addMoreVacancies","replaceVacancies","setIsLoading","isClustersEnabled","searchWizardBase","queryRanks","selectedClusters","showClusters","totalResultsForList","vacancyHint","ItemsOnPageOption","EducationOption","VACANCY_VIEW","VACANCY_VIEW_SET_VISIBILITY_CONTACTS","VACANCY_VIEW_SET_BRANDING_CONSTRUCTOR_EXAMPLE","VACANCY_VIEW_REMOVE_BRANDING_CONSTRUCTOR_EXAMPLE","BrandingType","vacancySetVisibilityContactsAction","platforms","vacancyOnMapLink","employerOrganizationFormId","driverLicenseTypes","insider","confirmableKeySkills","providers","publicationType","publicationDate","validThroughTime","compensation","parttimeOptions","publicationTypeTrl","isVisibleContacts","brandingType","Constructor","vacancyConstructorTemplate","VacancyViewTab","setVacancyViewActiveTab","TODAY","AddressFields","period","dateFrom","dateTo","ordersInfo","canPickup","deliveryAddress","street","building","office","deliveryPerson","pickupIntervals","fields","payerAddress","electronicRecord","streetPrefix","SET_VR_SIGNUP_LOGIN_FINGERPRINTS","setVrSingUpLoginFingerprints","VrLeadCheckFields","VrResumeExistenceType","alreadyLoggedIn","vrResponseHash","forceResumeCreation","alreadyHasNegotiationAttempt","fingerprints","checkedExperiments","resetCheckedExperiment","COUNTER_OVERLIMIT","AdviceType","ADVICE_TYPES","subscribe","filteredSubmitErrors","submitErrors","submitResult","call","resolve","forms","namedItem","scrollTarget","getAttribute","getBoundingClientRect","setHistory","process","createHistory","lastValueSeparatorTrl","humanReadableList","previousItem","filteredLastSearches","accountAddEmail","accountConnect","accountCaptcha","accountDelete","accountDeleteAffirmation","accountDeleteConfirmation","accountDeleteGratitude","accountHistory","accountHistoryExpenditures","accountHistoryMoney","accountHistoryReplenishments","accountHistoryServices","accountLogin","accountPhoneVerification","advancedResumeSearch","advancedResumeSearchVariants","advancedVacancySearch","agencies","anonymousEmployer","applicantBlacklistVacancy","applicantBlacklistEmployers","applicantCountriesVisibility","applicantNegotiations","applicantPortrait","applicantPhoneVerification","applicantRsvVerifications","applicantResumesList","applicantServicesPayment","applicantSignup","applicantSignupVerify","applicantSuitableVacancies","applicantVacancyResponsesSummaryPayment","applicantVacancyResponsesSummarySuccess","applyAgreement","article","authEmployer","authEmployerAlready","authEmployerDuplicated","authEmployerSuccess","authLoginZarplata","authRegistrationZarplata","away","brandingProxyService","blog","careerMarathonPayment","careerMarathonSuccess","employerAutomationInfo","employerAdvices","employerCarts","employerSettings","employerEmailTemplates","employerManagersCreate","employerNegotiationsChangeTopic","employerConstructor","employerConstructorWebview","employerContactsVisibility","employerDocuments","employerDocumentsManagement","employerFinancialDocuments","employerVerificationActs","employerMakeupWebView","employerManagers","employerInvoicePayment","employerInvoicePurchase","employerInvoiceFinish","employerQuotaHistory","employerReviewsSettings","employerSidebarEdit","employerSimpleEdit","employerStructure","employerReviews","employersCompany","employersList","employersListZarplata","employerStructureChangelog","employerSubscription","employerSearchPublication","employerUnpremoderatedVacancyList","employerSettingsEmailTemplates","employerVacancies","employerVacanciesArchived","employerVacanciesDrafts","employerVacanciesTemplates","employerVacanciesPromotion","employerView","employerViewZarplata","events","eventsForStudents","fastVacanciesSubscription","feedback","indexPage","oauthAuthorize","oauthAuthorizeEmployer","oauthMergeByCode","partTimeVacancies","priceAddContacts","priceBranding","priceClickmeProducts","priceDBAccess","priceEmployerBrand","priceRecommended","priceRegionalPublications","priceProfRolesPublications","priceZpResumeAccess","priceZpPublications","priceZpBundles","priceZpPromotion","priceZpBackoffice","registrationZarplata","rememberPassword","restorePassword","resumeBuilderAdditional","resumeBuilderContacts","resumeBuilderCreds","resumeBuilderEducation","resumeBuilderExperience","resumeBuilderPersonal","resumeBuilderPhoto","resumeBuilderPosition","resumeCompletion","resumeFolder","resumeFolders","resumeFoldersSearch","resumeSearch","resumeSearchAliases","resumeSearchCatalogListMain","resumeSearchCatalogListByLetter","resumeSearchCatalog","resumeSearchCatalogRegion","resumeSavedSearch","salaryStat","applicantAddAuthPhone","specializedPartTimeVacancies","subscribeZarplata","targetAgenciesPayment","targetEmployerResumes","vacanciesProbationCatalog","vacanciesProbationCatalogProfarea","vacancyConstructor","videoVacancy","vacancyConstructorMobilePreview","vacancyConstructorTemplatePreview","vacancyCreate","vacancyCreatePromo","vacancyDuplicate","vacancyEdit","vacancyFavorite","vacancyPreview","vacancyPreviewDraft","vacancyPrint","vacancyResponse","VacancySavedSearch","vacancyResponses","vacancyResponsesAutoAction","VacancyResponsesAutoInvite","vacancyResponsesCalls","vacancyResponseTest","vacancyRestore","vacancySearch","vacancySearchZarplata","vacancySearchMap","vacancyMetroMain","vacancySearchMetroCatalog","vacancySearchCatalogListMain","vacancySearchCatalogListByLetter","vacancySearchCatalog","vacancySearchCatalogZarplata","vacancySearchCatalogRegion","vacancyTemplate","vacancyViewAliases","vacancyViewZarplata","vrSignupLogin","vrVacancies","wantWorkPayment","skillsSurvey","resumeProfile","mentors","mailto","vrsurvey","employerChangePassword","employerCompetencyMaps","loader","routes","component","ProxyExternalService","strict","forceReload","isProxyService","AccountAddEmail","AccountCaptcha","Agencies","ApplicantBlacklistVacancy","ApplicantBlacklistEmployers","ApplicantNegotiations","ApplicantPortrait","ApplyAgreement","ResumeVisibility","ApplicantServicesPayment","FastVacanciesSubscription","PartTimeVacancies","WantWorkPayment","VacancyPreview","SalaryStat","SearchCatalogList","ResumeSearchCatalog","VacancyView","ResumeSavedSearch","TargetAgenciesPayment","CareerMarathonPayment","CareerMarathonSuccess","ApplicantVacancyResponsesSummaryPayment","ApplicantVacancyResponsesSummarySuccess","AnonymousEmployer","AccountHistory","EmployerUnpremoderatedVacancyList","EmployerVacancies","EmployerVacanciesDrafts","EmployerVacanciesPromotion","EmployerVacanciesArchived","EmployerVacanciesTemplates","EmployerAdvices","VacancyConstructorTemplatePreview","VacancyConstructorMobilePreview","VacancyConstructor","VacancyCreate","VacancyCreatePromo","VacancyEdit","VacancyRestore","VacancyDuplicate","VacancyTemplate","TargetEmployerResumes","EmployerConstructorWebview","EmployerContactsVisibility","EmployersCompany","EmployersList","EmployerMakeupWebView","VacancyPrint","ApplicantResumes","ApplicantSkillVerificationsMethod","ApplicantSkillVerificationsMethodsCatalog","ApplicantRsvVerifications","ApplicantPhoneVerification","ShortResume","ResumeCompletion","ApplicantSuitableVacancies","ResumeView","EmployerDocuments","EmployerQuotaHistory","EmployerReviewsSettings","EmployerStructure","EmployerStructureChangelog","EmployerDocumentsManagement","EmployerEmailTemplates","EmployerCarts","EmployerNegotiationsChangeTopic","EmployerView","EmployerSimpleEdit","EmployerSidebarEdit","OauthAuthorize","OauthAuthorizeEmployer","OauthMergeByCode","AccountPhoneVerification","VrVacancies","PriceDBAccess","PriceEmployerBrand","PriceRegionalPublications","PriceProfRolesPublications","PriceRecommended","PriceClickmeProducts","PriceBranding","PriceAddContacts","PriceZp","ApplicantSignup","RememberPassword","RestorePassword","ResumeSearch","AdvancedResumeSearch","AdvancedVacancySearch","ResumeFolder","ResumeFolders","ResumeFoldersSearch","ResumeBuilderPersonal","ResumeBuilderExperience","ResumeBuilderPhoto","ResumeBuilderContacts","ResumeBuilderCreds","ResumeBuilderAdditional","Unsubscribe","ResumeBuilderPosition","ResumeBuilderEducation","AuthEmployer","AuthEmployerAlready","AuthEmployerDuplicated","AccountConnect","AccountLogin","VacancyResponsesAutoAction","VacancyResponsesCalls","VacancySearch","VacancySearchMap","VacancyMetroMain","VacancyMetroCatalog","VacanciesProbationCatalog","VacancyFavorite","EmployerFinancialDocuments","EmployerVerificationActs","AccountDelete","AccountDeleteConfirmation","AccountDeleteAffirmation","AccountDeleteGratitude","IndexPage","EmployerAddresses","EmployerAutomationInfo","VrSignupLogin","Subscribe","Mailto","ApplicantCountriesVisibility","ApplicantAddAuthPhone","EmployerManagers","EmployerSubscription","PurchaseServices","EmployerInvoicePayment","EmployerInvoiceFinish","EmployerSettings","EmployerSearchPublication","EmployerManagersCreate","LegacyPage","Blog","Article","VacancySearchCatalog","EmployerChangePassword","Away","forbiddenPageRoute","ForbiddenPage","errorPageRoute","ErrorPage","DEFAULT_TEXT_VALUE","constructor","updateArgs","this","RegExp","SearchTypeWithParamsExisting","paramsExisting","super","SearchTypeWithArgsToRemove","removeArgs","ResumeSimple","ResumeCatalog","ResumeCatalogRegion","VacancySimple","VacancyMap","VacancyCatalog","VacancyCatalogRegion","VacancyCatalogMetro","VacancyCatalogPodrabotka","VacancyProbation","VacancySezonnayaRabota","VacancyCatalogProfessions","ResumeSimilarByVacancy","ResumeSimilarByResume","VacancyByEmployer","VacancySimilarByResume","SEARCH_TYPES","searchTypes","filteredSearchTypes","_getTypesWithParamsExisting","searchTypesList","_getTypesWithoutParams","_filterSearchTypes","urlPath","filteredSearchTypesByPath","exec","typesWithoutParams","typesWithParamsExisting","_getSearchType","urlQueryDict","currentSearchType","queryValue","prepareUrl","searchParsed","st","arg","next","locationChangeAction","counters","LOCATION_CHANGE","googleUniversalAnalytics","sendDV360Event","isFirstRendering","pageLocationForGA","SearchPageLocationForGA","resultPageLocationForGA","protocol","trackUrl","yandex_adfox_enabled","Ya","adfoxCode","adfoxRequested","destroy","applicantName","resumesList","unpublished","bills","documentLinksVisibility","employerActiveTemporalServices","employerTemporalServices","employerActiveSingleServices","employerFreeServices","professionalareas","statistics","openVacanciesCount","agenciesCount","backgroundScope","backgroundIndex","bigPromoEmployerId","bigPromoSlogan","bigPromoHighlightedTextInSlogan","bigPromoLinkText","bigPromoLinkUrl","bigPromoFootnote","suggestedProfessions","applicantCount","publicationPrice","dbAccessPrice","averageEmployersOnline","statisticsDate","employerPolitenessIndexes","filterInUse","SingupFildNames","formItems","agreementUrl","policyUrl","CompetitionLevel","hhcdnHost","imageResizingCdnHost","devBuildNotifyEnabled","ContactPhonePostfix","countryType","DeviceTypes","employerManagersLink","menuItems","serviceNames","EmployerConsumptionSegmentType","EmployerEmailTemplateVisibilityType","CHANGE_EMPLOYER_EMAIL_TEMPLATE","visibilityType","useOpenResumeNewWindow","useTemplateVacancy","useWantWorkAutoreply","vacancyResponseRankType","htmlEditor","currencyCode","templateVacancy","brandingTemplates","defaultTemplateName","totalEmployersFound","errorMessage","isError","xsrfError","FeedbackRecipient","feedbackRecipients","MARKET","FloodlightUtmTypes","targetUrl","employerRegionResumesCount","employerRegion","giftsCount","ogTitle","keywords","ogDescription","rssHref","rssTitle","canonical","h1","smallPhoto","yearsInCompany","NaN","phonesWithComments","defaultPriceRegions","hasEmployerConstructor","tabName","pageTitle","employerBudgetLink","purchaseUrl","dbAccessUrl","activeAccesses","probationCatalog","PersonalManagerRatingValue","isReadOnly","foldersInvariants","foldersByResume","PageNumber","Collection","ShowOnlyNewResponses","ShowOnlyNew","ResumeShareKind","showResumeFallbackWarning","WorkTypes","SET_SCHEDULED_INTERVIEW_REMIND","REMOVE_SCHEDULED_INTERVIEW_REMIND","scheduledInterview","StaticGroup","randomExampleNumber","DEFAULT_CLUSTERS_SETTINGS","send","vacancyFieldTitleProfession","resumeFieldTitleProfession","productList","isShowSnippetResume","suitableResumesSubscriptionActive","eventMailingSubscriptionActive","siteNewsAndAdvertising","footerReducer","UserSearchPointSource","readyToShuffleVacancies","clickmeVacanciesPlacesList","clickmeVacancies","firstFakeVacancyIndex","needToSetValue","availablePublicationTypes","vacancyCreateDrafts","vacancyCreateDraftId","vacancyCreateDefaultBody","vacancyCreateRules","vacancyCreateDraftSaveEnabled","vacancyCreateError","vacancyCreatePublicationSessionKey","vacancyCreatePublicationUrl","vacancyDiscountPromoControlsInfo","vacancyPurchaseProducts","vacancyCreateSavedToDraft","vacancyCreateAllowRegions","vacancyCreateLoadSourceStatus","messageToModerator","isPromoVacancy","isVacancyEditAfterModerationNotAllowed","promoVacancyProfessions","promoVacancyAreas","promoVacancyArticleUrl","isVacancyCreationAllowed","isVacancyEditAllowed","isAddressAddAllowed","isVacancyDiscriminationCheckEnabled","vacancyResponsesFilters","vacancyCreateSelectPublicationType","vacancyAction","formErrorKeys","otherRoleWarning","isZpEmployer","vacancyAdvices","vacancyAnalysis","VacancyFeature","metroLines","gender","education","relocation","driver_license_types","reducers","auctionHhtmSourceLabel","auctionConfirmationModal","authPhone","autoAction","employerAutomationStatistics","employerAutomationVacanciesAutoAction","employerAutomationVacanciesAutoInvite","autoActionPromo","authNewEmployerAreaIdsToRedirect","authNewEmployerCategories","authNewEmployerFields","authNewEmployerInitialValues","authNewEmployerPhoneMask","autoUpdateAvailableForAnyResume","activeResumeAccessType","accountTemporarilyLocked","applicantPortraitCategories","applicantResponseStreaks","applicantSuitableVacancyByResume","accountConnectOAuth","accountConnectResponse","articlePage","articleRating","articleViews","artifactRules","adsVacancyParams","alreadyRegisteredEmployer","anonymousUserType","anonymousAgreementAccepted","allowedSMSCountries","abortPageContent","applicantSkillsVerificationMethod","applicantSkillsVerificationMethods","applicantSkillsVerificationExpiring","applicantSkillVerificationPromoBannerVisible","applicantSkillsVerificationResult","applicantSkillsVerificationError","applicantEmployerManagersActivity","applicantNews","applicantArticles","applicantLatestResume","applicantFaq","applicantShowProfileOnboarding","addressesSuggestRemoteMode","hhtmFrom","searchable","applicantNegotiationsActionsData","applicantPaymentServices","applicantResumesStatistics","applicantSettingsMenu","applicantUseful","automationStatistics","availableVacancyActions","employerResumesNegotiationLinks","employerRegistrationPresentsByCountryId","applicantResumesIdentifiers","areaTree","loginForm","backofficeCanEditTemplate","blogPage","blogViews","brandingPromotion","vltnDayLink","cancelFetchBanners","candidates","canvacVacancySalaryData","applicantEmployerPoliteness","captchaAccountState","backurl","failurl","careerMarathon","catalogLinks","chatik","chatikIntegration","checkedTopics","clickmeAutoCampaignPromotionExpEnabled","clickmeInfo","clickmeAutoCampaignPromotion","clickmeVacancyPage","companiesOfTheDay","countryPhoneCode","untrustedEmployer","companiesOfTheDayTrls","complaintReasonTypes","chatWritePossibilities","crosslinks","currentManagerId","discriminationWarning","displayType","distances","domainRegionTrl","draftsPurchaseInfo","employerAddressesCount","employerAddressesPage","employerArticles","employerChecks","employerAdvice","employerButtons","employerCompanyMenu","employerConstructorWebViewMode","employerConstructorAutoAddWidget","employerConstructorSettings","employerCategories","employerPageIsViewMode","employerDocumentsSettings","employerEdoList","employerDocumentsMenu","employerFaq","employerIndexPage","employerLogo","edoDictionary","employerInfo","employerInvoiceCart","employerInvoiceActivationInfo","employerSearchPublicationSettings","employerSeoCities","employerSettingsVacancyPublication","employerInsiderInterview","employerManagerPersonalData","employerNoAdviceArticles","employerManagersPage","employerMarketSegmentType","employerConsumptionSegmentType","employerNews","employerExperiences","employerReviewsIsOpenEmployer","employerSearchSettings","employerSettingsMenu","employerNegotiations","employerSettingsPage","employerMailTemplates","employerViewSelectedAreas","employerVacanciesRise","employerVacancyPromotion","employerVacancyPromotionExpEnabled","employerRegistrationTimeInDelta","extraFilters","educationLevels","favoriteVacancies","fastVacanciesSubscriptionSettings","favoriteVacanciesCount","filteredVacancyResponsesCount","floodlightGtagEnabled","floodlightUtm","financialDocumentDeeds","financialDocumentDeedsFilters","financialDocumentDeedsPaging","financialDocumentDeedsTotalRows","fetchingData","folderContent","forbidden","errorPage","globalInvitations","getPageHtmlEnabled","globalStatistics","hasBrandedTemplates","hasEditSidebarButton","hasListOfVacanciesByRoles","hasVacancyResponsesSummaryService","hasVideoInterview","hasChameleon","supernovaNaviMenu","isBot","isClickmeAnalyticsEnabled","isExpDistrictOnVacancySearch","isNewEmployer","isResumeCardRedesignOnboarding","isResumeCardRedesignOnboardingModal","isSearchCatalog","isTinkoffBusinessError","isVacancySnippetRedesignExp","languages","languageLevels","level","lastUpdatedSearchQueryText","linkCheck","smallLogoDomain","loginError","loginTileType","lowActivityVacancies","managerAnnouncementBanner","managersList","managersListLoaded","moderators","mapVacancySearchQuery","managerNegotiationStats","managerCluster","managerVacanciesActiveGroupId","metaRole","metroCatalog","currentStation","cityMetro","currentLine","currentLineTranslation","managerActiveCount","metroCities","mobileAppPromotionVisible","newEmployerDashboardVacancy","newTargetEmployerResumes","numOfOpenVacancies","negotiationsHistory","oauthInfo","oldEmployerUpdates","overlayMenu","pageMetaData","pickVacancyOnResumeSearch","priceCart","priceData","priceNewCartEnabled","pricePageMetaInfo","priceZp","printVersion","rsvUserCompetencies","rsvCompetencyData","partTimeTypes","profareaTree","professionsList","professionalRoleCategoryCollection","professionalRolesFromSearch","professionalRoleTree","roleNotFoundSubstituteIds","areaTrl","ratingTags","runActionArgument","readOnlyBanner","registeredEmployerCompanyName","registeredEmployerEmail","remoteWorkCounter","renderRestriction","resumeSearchAutoInvitePromo","registrationTimeMillis","resumeAnalyticLabel","resumeCountriesVisibility","resumeIdsProfTestAttached","resumeViewHistory","resumeVisibilityEmployerBlacklist","resumeVisibilityEmployerWhitelist","resumeVisibilityEmployerSearchResultsBlacklist","resumeVisibilityEmployerSearchResultsWhitelist","resumeBuilderField","resumeCommentsLimit","resumesComplaint","resumesForUpdate","resumeFormError","resumeFormHash","resumeFormAttributes","resumeFormConditions","resumeFormDefaults","resumeFormFields","resumeFormModerationNotes","resumeFormLanguages","resumeFormVacancy","resumeSearchQuery","resumeShareButtons","resumeLanguages","resumeExportTypes","resumeServicePrice","resumeViewBackoffice","resumeZp","recommendedVacancies","relatedVacanciesForEmployer","restorePasswordConditions","resumeAuditRecommendation","responsesCommentExp","savedFilters","searchCatalogList","searchCatalogProfession","searchCatalogType","searchXSControls","searchLoading","savedVacancySearch","searchPreference","searchClustersChanged","searchClustersTip","searchClustersTipAlternativePosition","searchExplanation","searchMapResponse","searchOldEducation","searchSessionId","searchRating","scheduledInterviews","surveys","suggestedKeySkills","employerRecommendedSkills","suggestedKeySkillsNewEngineProfessions","smilesShoudBeShown","showBrandingInfoModal","additionalCheck","showEmployerRatingBlock","showSkillSurveyOnVacancyEditPage","showManagerContactsVacancyInfotip","showResumeCountriesVisibilitySettingsModal","showSubscriptionButton","showWebimButtonOnLogin","skillsSurveyTrls","sortingFilters","showEmployerStatisticsLinks","supernovaMainMenu","suitableCounterByVacancy","giftedResumes","suitableVacancies","targetAgenciesServiceInfo","profAreaTrl","topicsCallHistory","userAlreadyBeenLoggedIn","criteriaExcludedTextUpdated","unpremoderatedVacancyList","userFeatures","useRemoteEntryWay","userTargeting","userSearchPointsByResumeHash","updateInfo","vacanciesOfTheDay","vacancyConstructorExpirationDate","vacancyFeatures","vacancyFull","vacanciesGroupsByRegion","vacanciesShort","vacancyInternalInfo","vacanciesInitialFilters","vacancyBuilderInputRedesignEnabled","vacancyOnlineUsersCounters","vacancyCallsPage","vacancyResponsesFiltersDicts","vacancyResponseFiltersLoading","vacancyResponseFlags","vacancyUpgrades","vacancyAnalyticsConversion","vacancyHiringPlans","vacancyHiringPlanValidationRules","vacancyMetro","otp","recaptcha","siteKey","captchaState","captchaError","hhcaptcha","captchaKey","captchaText","vacancyResponsePopupVisible","vacancySavedSearches","vacancySearchDictionaries","vacancyTests","vacancyViewTab","vacancyWizard","employerHits","rootAreaId","vacancyTemplates","vacancyTemplateForEdit","vacancyConstructorSettings","vacancyResponseSummary","vacancySummaryTopicId","verificationActs","wantWorkEmployer","workInOtherCity","employerDivisionChangelog","serviceAdditional","supernovaAnonymousDashboard","anonymousDashboard","pinnedChatMessages","politenessIndex","snippetAccessResume","accountHistoryActionsData","scheduleInterviewRemindInfo","talantixTariff","webviewAppType","isCommunicationFeedbackExp","enableResumesMerge","employerCountryIdBySeller","anonymousSignUpModalShow","anonymousSignUpPagination","linkedSpecializations","deepLinkCommandName","topicsWaitingForResponseCount","showRelatedProfessionsSnippet","tempexp28316","videoCallsDisabled","rootReducer","createRootReducer","combineReducers","connectRouter","mutators","noTrl","fromCharCode","storeInstance","_getOrCreateStore","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","getNoTrlValue","showErrorWithMetricsSending","statSender","stateNode","stateError","textContent","innerText","middleware","makeSPAMiddleware","SET_FIELD_DATA_AS_IS","thunkMiddleware","locationChangeMiddleware","batchMiddleware","routerMiddleware","sentry_logging","createSentryMiddleware","Sentry","breadcrumbMessageFromAction","composedEnhancers","applyMiddleware","createStore","batchReducer","appReducers","mutator","mutate","setStore","store_debug","storeInitialState","storeDevToolInit","BATCH","REGULAR_SPACE","NARROW_NON_BREAKING_SPACE","THIN_SPACE","ARROW_UP","ARROW_DOWN","ARROW_RIGHT","EN_DASH","EM_DASH","ELLIPSIS","DOT","MIDDLE_DOT","COMMA","promiseResolveFunction","storeInstancePromise","getStore","originalUseSelector","sendEvent","ZPView","onInstall","H2Promo","APP_PROMO_BANNER_HIDDEN_UNTIL","AppPromoBanner","openModal","isZP","lastShownDate","differenceInMilliseconds","RESUME_CREATION_SCENARIO","ResumeCreationScenarioNotification","RESTRICTED_ROUTES","handleNotification","shouldPutToBell","putNotificationToBell","ResumeCreationScenario","totalResumeCount","routePath","notificationStatus","CHATIK_ERROR","ChatikNotification","origin","incomingMessageHandlers","uxfbEvent","openVacancySearch","COUNTER_SPLITTER","addCounterInDocumentTitle","currentDocumentTitle","newDocumentTitle","documentTitle","documentTitleParts","currentCounterStr","getDocumentTitleWithCounter","TEST_IFRAME_ID","testIframe","contentWindow","postMessage","iframe","createElement","onload","wasCollected","triggerUxFeedback","reason","ActiveOverlay","modalHelper","onResizeEnd","heightDiff","heightFrom","widthFrom","heightTo","widthTo","onDragEnd","topDiff","leftDiff","topFrom","bottomFrom","leftFrom","rightFrom","topTo","bottomTo","leftTo","rightTo","shouldUseCounterUpdater","websocketOrigin","chatikOrigin","chatikSetCountersAction","ChatikIntegration","forceCounter","setForceCounter","isAnonym","initParams","useInitParams","shouldShowResumeCreationScenario","isErrorPage","checkTitleInterval","prevUnreadChatsCountRef","titleNotificationEnabled","useUnreadChatsCountTitleNotification","websocket","handleOpen","onOpen","chatikDebugData","sendDebugDataToTestHH","collectDebugData","handleCounterUpdate","CounterUpdater","onUpdate","DEEP_LINK_COMMAND_QUERY_KEY","VALID_ALIASES","DeepLinkCommandName","deepLinkAccessiblePaths","RoutePaths","openChatCommand","urlSearchParams","useOpenChatCommand","commandMapRef","OpenChat","accessiblePath","isDeepLinkAccessible","command","queryString","LinearProgress","RProgress","tokensVersion","major","minor","patch","tokensString","themeClassName","MagritteThemeProvider","zpDayTheme","hhDayTheme","ThemeProvider","themeProducer","NotificationAnalytics","notificationElementShown","SimilarResumeForVacancies","explanation","similarResumeForVacancies","AllowReplacement","useFavorite","allowReplacement","vacancyNotFoundError","vacancyNotAvailableError","vacancyNotVisibleError","vacancyArchivedError","vacancyAlreadyInFavoriteList","vacancyNotFoundInFavoriteList","genericError","limitExceededError","favoriteSuccess","favoriteError","ApplicantResponseError","ApplicantResponseAbort","BrokenVacancyResponseFilters","resumeContactsError","defaultError","networkError","chatikError","resumeCreationScenario","applicantJobSearchStatusSuccess","smsError","Notifications","notificationProps","bind","bindedOnClose","notificationCloseButtonClick","setShowingModalAction","ResumesCountriesVisibilitySettingsModal","checkBoxInitialState","checkBoxState","setCheckBoxState","setIsFetching","checkBoxStateAnalyticValue","buildCheckBoxAnalyticData","screenShownResumesCountriesVisibilitySettingsModal","buttonClickCloseResumesCountriesVisibilitySettingsModal","checkbox","buttonClickProcessingConditionsResumesCountriesVisibilitySettingsModal","buttonClickProcessingRulesResumesCountriesVisibilitySettingsModal","formSubmitSaveResumesCountriesVisibilitySettingsModal","ResumesCountriesVisibilitySettingsModalContainer","SupernovaNotificationManager","sendNotificationsKeysEnabled","notificationManager","sendNotificationManagerAnalyticsAction","containers","getVisibleContainer","setPosition","scroll","pageYOffset","updateBottomPosition","throttledUpdateBottomPosition","throttle","SynchronizedNotification","closeEvent","analyticsElementName","closeFuncRef","sendShownAnalytics","onCloseHandler","AdvertisementAgreement","makeRequest","isAccepted","onDecline","ApplicantFeedbackAboutVacancy","closeNotificationRef","CHANGE_FORM_ID","isDisabled","setIsDisabled","ApplicantJobSearchStatus","email_verification_was_sent_again_too_often","email_verification_was_sent_again_error","manager_quota_change_fail","esiaAccountNotLinked","zarplataNoSocialRegistration","oauthConnectInternalError","email_verification_error","email_verification_completed","survey_was_ignored","survey_was_finished","phone_has_been_verified","manager_quota_change_success","all_surveys_were_ignored","account_deleted","resume_merge_success","synchronized","NotificationComponent","BaseNotification","hhtmFromLabelMap","BuyEmployerPageConstructor","BuyVacancyPageConstructor","ClientDay","EmailVerificationErrorAgain","email_verification_was_sent","email_verification_was_sent_again","EmailVerificationWasSent","EmployerHhRatingResults","EmployerItAccreditation","get7DaysRangeTrl","dateObj","currentMonth","previousDate","markModalViewed","permanent","EmployerOverspending","vacancyUpdateInfo","setVacancyUpdateInfo","checkboxStateRef","vacancyWithAutoUpdateViews","hideModalHandler","continueHandler","overspendingToDisplay","overspendingRest","overspendingRestVacanciesCount","autoProlongationsCount","backgroundClick","EmployerPricesIncrease","EmployerYearResults","EsiaAccountNotLinked","esiaAuthorizationErrorElementShown","FillEmployerPageConstructor","FillEmployerVacancyPageConstructor","SiteWasUnavailable","LoyaltySurvey","surveyStarted","ScheduleInterview","handleChangeRemind","handleDeleteRemind","interviewedTopicId","SkillVerificationExpiring","useSkillVerificationMethodsBreadcrumbs","VacancyDraftSaved","isVideoInterview","GreetingsFromZarplata","baseNotificationFactory","DISABLED_NOTIFICATIONS_ON_FRONT","logUnknownNotificationKey","UserNotificationsManager","shownNotifications","setNotifications","notShownNotifications","isPriority","notificationId","closeHandler","hasTimeZoneOffset","isValidDate","isNaN","getTime","DATA_QA_RENDER_STATUS","AppError","AppContainer","magritteBreakpoint","showGridHighlighter","notIsoDatesLogging","createRef","rootElementRef","rootElement","setDataQa","logNotIsoDates","requestIdleCallback","start","notIsoDates","recursiveFind","fullPath","findNotIsoDates","elapsedTime","componentDidMount","shouldComponentUpdate","nextProps","nextState","componentDidCatch","errorInfo","scope","setTag","setExtras","TranslationLangContext","shouldShow4xxErrorPage","storedBreakpointValue","forceUseStoredBreakpoint","storeActualBreakpointValueInCookie","SnackbarContextProvider","TipProvider","DeepLinkCommand","Switch","Route","route","locationCanceler","changeLocation","luxPageDisabled","isAccountLoginRequiredError","serverError"],"sourceRoot":""}