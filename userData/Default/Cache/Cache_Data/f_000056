{"version":3,"file":"24983.ff21274aee672d15406f.js","mappings":"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","sources":["xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/VacancyConstructorView.types.ts","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/TemplateContext.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/ContentWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/VacancyViewWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/NoPrint.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Sidebar/index.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/VacancyViewLayout.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/MapConfigToWidget.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/SectionWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Section.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Backplate/index.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/WidgetWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Spoiler.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/useSection.ts","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Content.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Backplate/ContentWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/Top.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/PictureWidget/PictureWidgetImage.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/PictureWidget/PictureWidgetWrapper.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/defaultConfigToComponentMap.ts","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/PictureWidget/index.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/VacancyBodyWidget.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/ExternalWidget.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/VacancyConstructorView.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/FirstSectionFooterBlock.tsx","xhh/./.yarn/unplugged/@hh.ru-branding-packages-virtual-211180981b/node_modules/@hh.ru/branding-packages/src/components/VacancyBodyBlock.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/VacancyBlock/vacancy-block.less?28ec","webpack://xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/vacancy-video.less?bf37","xhh/./webapp-static/js/HH/LoadBannerOnVisibleModule.js","xhh/./webapp-static/js/Modules/Maps/Utils.js","xhh/./webapp-static/js/Modules/Maps/showMap.js","xhh/./webapp-static/js/Modules/Maps/ymapsPromise.js","xhh/./webapp-static/js/Utils/VisibilityWatcher.js","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/AgreementText.tsx","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/VerificationFormStep.jsx","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/index.jsx","xhh/./webapp-static/lux/components/Banner/index.tsx","xhh/./webapp-static/lux/components/Banner/AdsExternalBanner.tsx","xhh/./webapp-static/lux/components/Clickme/ReferralLink.jsx","xhh/./webapp-static/lux/components/Banner/BannersGroup.jsx","xhh/./webapp-static/lux/components/Clickme/index.jsx","xhh/./webapp-static/lux/components/EmployerReviews/WidgetBig/checkRender.ts","webpack://xhh/./webapp-static/lux/components/EmployerReviews/WidgetBig/widgetBig.less?7973","xhh/./webapp-static/lux/components/EmployerReviews/WidgetBig/index.tsx","xhh/./webapp-static/lux/components/EmployerReviews/WidgetSmall/index.tsx","xhh/./webapp-static/lux/components/SkillsSurvey/index.tsx","xhh/./webapp-static/lux/components/VacancyActions/PrintButton.tsx","xhh/./webapp-static/lux/components/VacancyCreate/usePrintVacancy.ts","xhh/./webapp-static/lux/components/VacancyView/VacancyRowContent.tsx","xhh/./webapp-static/lux/components/VacancyView/DefaultContainer.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/multi-account-grouping.less?f53b","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/MultiAccountGroupingStep.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/sign-in-step.less?d568","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/SignInStep.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/sign-up-step.less?9378","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/SignUpStep.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/verification-step.less?2dff","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/VerificationStep.tsx","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/Form/index.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/sign-up-block.less?f795","xhh/./webapp-static/lux/components/VacancyView/SignUpBlock/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyAcceptTemporary.tsx","xhh/./webapp-static/lux/components/VacancyView/ResponseStatus/RespondButton.tsx","xhh/./webapp-static/lux/components/VacancyView/ResponseStatus/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyActionBlacklist.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyActionFavorite.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyActionShowContacts.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyActions.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyAdditionalAccept.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyAdditionalAccepts.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyAnonymousResponse.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyApplicantRespondedInfo.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyApplicantResponse.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyBlock/Employer.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyTitleRedesigned.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyBlock/Top.tsx","xhh/./webapp-static/lux/components/Banner/useAdvInfoRequest.ts","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/Sidebar.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/BetweenSections.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/EmployerViewTop.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/useWidgetList.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/FirstSectionFooter.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/VacancyBody.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/external/useMapWidgetToConfig.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyConstructor/index.tsx","xhh/./webapp-static/lux/components/VacancyView/brandingConstants.ts","xhh/./webapp-static/lux/components/VacancyView/useContentColumns.js","xhh/./webapp-static/lux/components/VacancyView/VacancyBrandedBody.jsx","xhh/./webapp-static/lux/components/EmployerBadges/EmployerBadge.tsx","xhh/./webapp-static/lux/components/EmployerBadges/PrepareEmployerBadges.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompany.tsx","xhh/./webapp-static/lux/components/MetroList/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompanyAddress.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompanyLogo.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompanyName.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/EmployerCards/employer-cards.less?ccb8","xhh/./webapp-static/lux/components/VacancyView/EmployerCards/Card.tsx","xhh/./webapp-static/lux/components/VacancyView/EmployerCards/Scroller.tsx","xhh/./webapp-static/lux/components/VacancyView/EmployerCards/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompanyRedesigned.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCompensation.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContacts/checkRender.ts","xhh/./webapp-static/lux/components/VacancyView/VacancyContactsLinkSwitch.jsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContacts/VacancyContacts.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContacts/VacancyContactsRedesigned.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContacts/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContactsDropContent.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyContactsDrop.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyCreationTime.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyDescription.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyDriverLicense.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyEmployment.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyAdaptiveBanners.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyFooter.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyIsArchived.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyKeySkills.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyMap.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyOnlineUsersCounter.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyParttimeOptions.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyPreviewTools.jsx","xhh/./webapp-static/lux/components/VacancyView/VacancyActionComplain.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyResponse.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyResponseQuestions.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancySectionWrapper.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancySimilarResumes.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancySkillSurvey.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyTitle.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/VacancyVideoModal.tsx","webpack://xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/fake-player.less?aee3","xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/FakePlayer.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/StickyContainer.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyVideo/index.tsx","xhh/./webapp-static/lux/components/VacancyView/VacancyWorkExperience.tsx","xhh/./webapp-static/lux/components/VacancyView/hooks/useBranding.ts","xhh/./webapp-static/lux/components/VacancyView/hooks/useCompanyLogo.ts","xhh/./webapp-static/lux/components/VacancyView/hooks/useContactsAnalytics.ts","xhh/./webapp-static/lux/components/VacancyView/hooks/useIsVisibleBody.js","xhh/./webapp-static/lux/components/VacancyView/hooks/usePreview.ts","xhh/./webapp-static/lux/components/VacancyView/useBannersAnalytics.ts","xhh/./webapp-static/lux/hooks/usePrintDetect.ts","xhh/./webapp-static/lux/models/price/product.types.ts","xhh/./webapp-static/lux/models/vacancyView.types.ts"],"sourcesContent":["export var TemplateWidget;\n(function (TemplateWidget) {\n    TemplateWidget[\"Picture\"] = \"PICTURE\";\n    TemplateWidget[\"VacancyBody\"] = \"VACANCY_BODY\";\n    TemplateWidget[\"VacancyAdditional\"] = \"VACANCY_ADDITIONAL\";\n    TemplateWidget[\"ExternalWidget\"] = \"EXTERNAL_WIDGET\";\n})(TemplateWidget || (TemplateWidget = {}));\nexport var SidebarBehaviorOnSmallScreen;\n(function (SidebarBehaviorOnSmallScreen) {\n    SidebarBehaviorOnSmallScreen[\"MoveToContent\"] = \"MoveToContent\";\n    SidebarBehaviorOnSmallScreen[\"Hide\"] = \"Hide\";\n})(SidebarBehaviorOnSmallScreen || (SidebarBehaviorOnSmallScreen = {}));\n","import { createContext, useContext } from 'react';\nconst TemplateContext = createContext({});\nexport default TemplateContext;\nexport const useTemplateContext = () => useContext(TemplateContext);\nexport const useStylingTemplate = () => {\n    const { constructor } = useTemplateContext();\n    return constructor.styling;\n};\nexport const useExternalComponents = () => {\n    const { externalComponents } = useTemplateContext();\n    return externalComponents;\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Column from 'bloko/blocks/column';\nimport { useTemplateContext } from '../TemplateContext';\nexport const columnSizes = (isRedesign) => ({\n    xs: '4',\n    s: '8',\n    m: isRedesign ? '12' : '8',\n    l: '10',\n});\nexport const SidebarWrapper = ({ children }) => (_jsx(Column, { xs: \"0\", s: \"0\", m: \"0\", l: \"6\", children: children }));\nexport const SidebarContentWrapper = ({ children }) => {\n    const { isRedesign } = useTemplateContext();\n    return (_jsx(Column, { ...columnSizes(isRedesign), l: \"0\", children: children }));\n};\nexport const MainContentWrapper = ({ children }) => {\n    const { isRedesign } = useTemplateContext();\n    return _jsx(Column, { ...columnSizes(isRedesign), children: children });\n};\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useStylingTemplate, useTemplateContext } from './TemplateContext';\nimport styles from './vacancy-view-wrapper.module.less';\nconst VacancyViewWrapper = ({ children }) => {\n    const { hasBackLayer, backgroundColor } = useStylingTemplate();\n    const { hasTopPadding } = useTemplateContext();\n    const color = backgroundColor?.lightTheme;\n    return (_jsx(\"div\", { style: {\n            backgroundColor: hasBackLayer && color ? color : undefined,\n        }, className: classNames(styles.vacancyViewWrapperPaddingBottom, {\n            [styles.vacancyViewWrapperPaddingTop]: hasTopPadding,\n        }), children: children }));\n};\nexport default VacancyViewWrapper;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styles from './noprint.module.less';\nconst NoPrint = ({ Element = 'div', children, ...otherProps }) => {\n    return (_jsx(Element, { ...otherProps, className: styles.noprint, children: children }));\n};\nexport default NoPrint;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { useExternalComponents, useTemplateContext } from '../../TemplateContext';\nimport NoPrint from '../NoPrint';\nconst Sidebar = ({ Wrapper }) => {\n    const { isRedesign } = useTemplateContext();\n    const { SidebarComponent } = useExternalComponents();\n    if (!SidebarComponent || !isRedesign) {\n        return null;\n    }\n    return (_jsx(Wrapper, { children: _jsxs(NoPrint, { children: [_jsx(SidebarComponent, {}), _jsx(VSpacing, { base: 9, xs: 6 })] }) }));\n};\nexport default Sidebar;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useExternalComponents, useTemplateContext } from './TemplateContext';\nimport { SidebarBehaviorOnSmallScreen } from './VacancyConstructorView.types';\nimport VacancyViewWrapper from './VacancyViewWrapper';\nimport { SidebarContentWrapper, SidebarWrapper } from './components/ContentWrapper';\nimport Sidebar from './components/Sidebar';\nconst VacancyViewLayout = ({ children, VacancyContainer, Top }) => {\n    const { isRedesign, sidebarBehaviorOnSmallScreen } = useTemplateContext();\n    const { ContainerWrapper } = useExternalComponents();\n    return (_jsx(VacancyViewWrapper, { children: _jsxs(VacancyContainer, { isRedesign: isRedesign, ContainerWrapper: ContainerWrapper, rightColumn: _jsx(Sidebar, { Wrapper: SidebarWrapper }), children: [_jsx(Top, {}), sidebarBehaviorOnSmallScreen === SidebarBehaviorOnSmallScreen.MoveToContent && (_jsx(Sidebar, { Wrapper: SidebarContentWrapper })), children] }) }));\n};\nexport default VacancyViewLayout;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport isValidKey from 'bloko/common/isValidKey';\nimport { useTemplateContext } from '../TemplateContext';\nconst getWidgetComponent = (config, configToComponentMap) => {\n    if (isValidKey(configToComponentMap, config.type)) {\n        return configToComponentMap[config.type];\n    }\n    return null;\n};\nconst MapConfigToWidget = ({ config }) => {\n    const { configToComponentMap } = useTemplateContext();\n    const WidgetComponent = getWidgetComponent(config, configToComponentMap);\n    if (!WidgetComponent) {\n        console.error('Error: unknown widget type', config);\n        return null;\n    }\n    return _jsx(WidgetComponent, { ...config });\n};\nexport default MapConfigToWidget;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { useStylingTemplate } from '../TemplateContext';\nimport { MainContentWrapper } from './ContentWrapper';\nimport getStringValueInPixels from './getStringValueInPixels';\nimport styles from './section-wrapper.module.less';\nconst SectionWrapper = ({ children }) => {\n    const { hasBackLayer, borderRadius } = useStylingTemplate();\n    return (_jsx(MainContentWrapper, { children: hasBackLayer ? (_jsxs(_Fragment, { children: [_jsx(\"div\", { className: styles.sectionWrapper, style: { borderRadius: hasBackLayer ? getStringValueInPixels(borderRadius?.value) : undefined }, children: children }), _jsx(VSpacing, { base: 7, xs: 5 })] })) : (_jsx(_Fragment, { children: children })) }));\n};\nexport default SectionWrapper;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport MapConfigToWidget from './MapConfigToWidget';\nimport SectionWrapper from './SectionWrapper';\nconst Section = ({ widgets }) => {\n    if (!widgets.length) {\n        return null;\n    }\n    return (_jsx(SectionWrapper, { children: _jsx(Text, { size: TextSize.Medium, children: widgets.map((config, index) => (_jsx(MapConfigToWidget, { config: config }, index))) }) }));\n};\nexport default Section;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classnames from 'classnames';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { useStylingTemplate } from '../../TemplateContext';\nimport getStringValueInPixels from '../getStringValueInPixels';\nimport styles from './backplate.module.less';\nconst Backplate = ({ children, forceStylesBackplate, height, dropShadow, flattenOnXs, separate, }) => {\n    const { hasBackLayer, borderRadius } = useStylingTemplate();\n    const hasBackPlate = forceStylesBackplate || !!hasBackLayer;\n    const isXS = useBreakpoint() === Breakpoint.XS;\n    if (!hasBackPlate) {\n        return (_jsxs(_Fragment, { children: [children, _jsx(VSpacing, { base: 1 })] }));\n    }\n    const style = {\n        height: getStringValueInPixels(height),\n        borderRadius: forceStylesBackplate && !(flattenOnXs && isXS) ? getStringValueInPixels(borderRadius?.value) : undefined,\n    };\n    return (_jsx(\"div\", { style: style, className: classnames(styles.backplate, {\n            [styles.dropShadow]: dropShadow,\n            [styles.flatten]: flattenOnXs,\n            [styles.separate]: separate,\n        }), children: children }));\n};\nexport default Backplate;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { useStylingTemplate } from '../TemplateContext';\nimport styles from './widget-wrapper.module.less';\nconst PaddingsOnSides = ({ children }) => (_jsx(\"div\", { className: styles.widgetWrapperPaddingsOnSides, children: children }));\nconst WidgetWrapper = ({ paddingsOnSides, children, topPadding, buttomPadding = true, }) => {\n    const { hasBackLayer } = useStylingTemplate();\n    const renderContent = () => (_jsxs(_Fragment, { children: [(topPadding || (topPadding === undefined && hasBackLayer)) && _jsx(VSpacing, { base: 7, xs: 5 }), children, buttomPadding && _jsx(VSpacing, { base: 7, xs: 5 })] }));\n    if (paddingsOnSides || (topPadding === undefined && hasBackLayer)) {\n        return _jsxs(PaddingsOnSides, { children: [\" \", renderContent()] });\n    }\n    return _jsxs(_Fragment, { children: [\" \", renderContent()] });\n};\nexport default WidgetWrapper;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useExternalComponents } from '../TemplateContext';\nimport Backplate from './Backplate';\nimport SectionWrapper from './SectionWrapper';\nimport WidgetWrapper from './WidgetWrapper';\nconst Spoiler = () => {\n    const { renderSpoiler } = useExternalComponents();\n    if (!renderSpoiler) {\n        return null;\n    }\n    return (_jsx(SectionWrapper, { children: _jsx(Backplate, { children: _jsx(WidgetWrapper, { children: renderSpoiler() }) }) }));\n};\nexport default Spoiler;\n","import { useTemplateContext } from '../TemplateContext';\nimport { TemplateWidget } from '../VacancyConstructorView.types';\nconst DIVIDER_TYPE = TemplateWidget.VacancyAdditional;\nconst mapSimpleWidgetConfigs = (configs) => configs.map((config) => ({ ...config, type: TemplateWidget.ExternalWidget }));\nconst useSection = () => {\n    const { constructor, externalComponents } = useTemplateContext();\n    const { widgets } = constructor;\n    const firstSectionBottomItems = mapSimpleWidgetConfigs(externalComponents.firstSectionBottomItems || []);\n    const secondSectionBottomItems = mapSimpleWidgetConfigs(externalComponents.secondSectionBottomItems || []);\n    const dividerIndex = widgets.findIndex((widget) => widget.type === DIVIDER_TYPE);\n    let firstSection = [];\n    let secondSection = [];\n    if (dividerIndex >= 0) {\n        firstSection = [...widgets.slice(0, dividerIndex), ...firstSectionBottomItems];\n        secondSection = [...widgets.slice(dividerIndex + 1), ...secondSectionBottomItems];\n    }\n    else {\n        firstSection = [...widgets, ...firstSectionBottomItems, ...secondSectionBottomItems];\n    }\n    return {\n        firstSection,\n        beforeSections: externalComponents.beforeSections,\n        betweenSections: externalComponents.betweenSections,\n        secondSection,\n    };\n};\nexport default useSection;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport TemplateContext from '../TemplateContext';\nimport Section from './Section';\nimport Spoiler from './Spoiler';\nimport useSection from './useSection';\nconst Content = () => {\n    const { firstSection, beforeSections, betweenSections, secondSection } = useSection();\n    const { hideContent } = useContext(TemplateContext);\n    return (_jsxs(_Fragment, { children: [_jsx(Spoiler, {}), !hideContent ? (_jsxs(_Fragment, { children: [!!beforeSections && (_jsxs(_Fragment, { children: [beforeSections(), _jsx(VSpacing, { base: 9, xs: 6 })] })), _jsx(Section, { widgets: firstSection }), !!betweenSections && (_jsxs(_Fragment, { children: [betweenSections(), _jsx(VSpacing, { base: 7, xs: 5 })] })), _jsx(Section, { widgets: secondSection })] })) : null] }));\n};\nexport default Content;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styles from './backplate.module.less';\nconst ContentWrapper = ({ children, flattenOnXs }) => {\n    return _jsx(\"div\", { className: flattenOnXs ? styles.contentWrapperFlattenOnXs : styles.contentWrapper, children: children });\n};\nexport default ContentWrapper;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { useExternalComponents } from '../TemplateContext';\nimport Backplate from './Backplate';\nimport ContentWrapper from './Backplate/ContentWrapper';\nimport { MainContentWrapper } from './ContentWrapper';\nconst Top = () => {\n    const { topContent } = useExternalComponents();\n    if (!topContent) {\n        return null;\n    }\n    return (_jsxs(MainContentWrapper, { children: [_jsx(Backplate, { forceStylesBackplate: true, flattenOnXs: true, dropShadow: true, children: _jsx(ContentWrapper, { flattenOnXs: true, children: topContent() }) }), _jsx(VSpacing, { base: 9, xs: 6 })] }));\n};\nexport default Top;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { IconScale } from '@hh.ru/bloko/build/blocks/icon';\nimport Loading from 'bloko/blocks/loading';\nimport styles from './picture-widget.module.less';\nconst PictureWidgetImage = ({ path, children, dataQa }) => {\n    const [loaded, setLoaded] = useState(false);\n    useLayoutEffect(() => {\n        setLoaded(false);\n        const tmpImg = new Image();\n        tmpImg.onload = () => {\n            setLoaded(true);\n        };\n        tmpImg.src = path;\n    }, [path]);\n    return (_jsxs(_Fragment, { children: [_jsx(\"img\", { className: classNames(styles.image, {\n                    [styles.imageLoaded]: loaded,\n                }), src: path, alt: \"\", \"data-qa\": dataQa }), children && (_jsx(\"div\", { className: classNames(styles.overlayContent, {\n                    [styles.overlayContentLoaded]: loaded,\n                }), children: children })), _jsx(\"div\", { className: classNames(styles.loader, {\n                    [styles.loaderHidden]: loaded,\n                }), children: _jsx(Loading, { scale: IconScale.Medium }) })] }));\n};\nexport default PictureWidgetImage;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classnames from 'classnames';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { useStylingTemplate } from '../../TemplateContext';\nimport Backplate from '../Backplate';\nimport WidgetWrapper from '../WidgetWrapper';\nimport styles from './picture-widget.module.less';\nconst getHeight = (brk, height) => {\n    if (!height) {\n        return undefined;\n    }\n    if ([Breakpoint.XS, Breakpoint.S].includes(brk)) {\n        return height.xs;\n    }\n    if (brk === Breakpoint.M) {\n        return height.m;\n    }\n    return height.default;\n};\nconst PictureWidgetWrapper = ({ height, renderMetaInfo, children, dataQa, }) => {\n    const { hasBackLayer } = useStylingTemplate();\n    const brk = useBreakpoint(Breakpoint.L);\n    const heightValue = getHeight(brk, height);\n    return (_jsxs(WidgetWrapper, { buttomPadding: !hasBackLayer, paddingsOnSides: false, topPadding: false, children: [_jsx(Backplate, { forceStylesBackplate: !hasBackLayer, height: heightValue, children: _jsx(\"div\", { className: classnames(styles.pictureWidget, {\n                        [styles.pictureWidgetWithHeight]: !!heightValue,\n                    }), \"data-qa\": dataQa, children: children }) }), !!renderMetaInfo && renderMetaInfo()] }));\n};\nexport default PictureWidgetWrapper;\n","import { TemplateWidget } from './VacancyConstructorView.types';\nimport ExternalWidget from './components/ExternalWidget';\nimport PictureWidget from './components/PictureWidget';\nimport VacancyBodyWidget from './components/VacancyBodyWidget';\nconst defaultConfigToComponentMap = {\n    [TemplateWidget.Picture]: PictureWidget,\n    [TemplateWidget.VacancyBody]: VacancyBodyWidget,\n    [TemplateWidget.ExternalWidget]: ExternalWidget,\n};\nexport default defaultConfigToComponentMap;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport PictureWidgetImage from './PictureWidgetImage';\nimport PictureWidgetWrapper from './PictureWidgetWrapper';\nconst PictureWidget = ({ picture, height, pictureStyle }) => {\n    if (!picture?.resizedPath) {\n        return null;\n    }\n    const dataQa = `branded-photo-${pictureStyle.toLowerCase()}`;\n    return (_jsx(PictureWidgetWrapper, { height: height, dataQa: `${dataQa}-container`, children: _jsx(PictureWidgetImage, { path: picture?.resizedPath, dataQa: dataQa }) }));\n};\nexport default PictureWidget;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useExternalComponents } from '../TemplateContext';\nimport Backplate from './Backplate';\nimport WidgetWrapper from './WidgetWrapper';\nconst VacancyBodyWidget = () => {\n    const vacancyBody = useExternalComponents().vacancyBody;\n    if (!vacancyBody) {\n        return null;\n    }\n    return (_jsx(Backplate, { children: _jsx(WidgetWrapper, { children: vacancyBody() }) }));\n};\nexport default VacancyBodyWidget;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Backplate from './Backplate';\nimport WidgetWrapper from './WidgetWrapper';\nconst ExternalWidget = ({ Element }) => {\n    if (!Element) {\n        return null;\n    }\n    return (_jsx(Backplate, { children: _jsx(WidgetWrapper, { children: Element }) }));\n};\nexport default ExternalWidget;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport TemplateContext from './TemplateContext';\nimport { SidebarBehaviorOnSmallScreen, } from './VacancyConstructorView.types';\nimport VacancyViewLayout from './VacancyViewLayout';\nimport Content from './components/Content';\nimport Top from './components/Top';\nimport defaultConfigToComponentMap from './defaultConfigToComponentMap';\nconst VacancyConstructorView = ({ betweenSections, configToComponentMap = defaultConfigToComponentMap, ContainerWrapper, firstSectionBottomItems, hasTopPadding, hideContent, isRedesign, renderSpoiler, secondSectionBottomItems, SidebarComponent, sidebarBehaviorOnSmallScreen = SidebarBehaviorOnSmallScreen.MoveToContent, templateData, topContent, vacancyBody, VacancyContainer, beforeSections, }) => {\n    const template = {\n        ...templateData,\n        hasTopPadding,\n        isRedesign,\n        hideContent,\n        sidebarBehaviorOnSmallScreen,\n        configToComponentMap,\n        externalComponents: {\n            vacancyBody,\n            firstSectionBottomItems,\n            betweenSections,\n            secondSectionBottomItems,\n            VacancyContainer,\n            topContent,\n            SidebarComponent,\n            ContainerWrapper,\n            renderSpoiler,\n            beforeSections,\n        },\n    };\n    return (_jsx(TemplateContext.Provider, { value: template, children: _jsx(VacancyViewLayout, { VacancyContainer: VacancyContainer, Top: Top, children: _jsx(Content, {}) }) }));\n};\nexport default VacancyConstructorView;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport style from './first-section-footer-block.module.less';\nconst FirstSectionFooterBlock = ({ children }) => {\n    return _jsx(\"div\", { className: style.firstSectionFooterBlock, children: children });\n};\nexport default FirstSectionFooterBlock;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport style from './vacancy-body-block.module.less';\nconst VacancyBodyBlock = ({ children }) => {\n    return _jsx(\"div\", { className: style.vacancyBodyBlock, children: children });\n};\nexport default VacancyBodyBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--FVo3cUofDgv3zkHBdMP1\",\"wrapperFlat\":\"wrapper-flat--H4DVL_qLjKLCo1sytcNI\",\"blockEmployer\":\"block-employer--jHuyqacEkkrEkSl3Yg3M\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"root--gITy5fOqMNuC4YFlktSz\",\"videoPlayer\":\"video-player--iIiQWwIYWJmJ0uNAEUew\",\"close\":\"close--sl0jOU1c2FXgTE4mD_w_\",\"stickyContainer\":\"sticky-container--eiW4RUZlFraXqs9kdhdV\"};","import Banners from 'HHC/Banners';\nimport visibilityWatcher from 'Utils/VisibilityWatcher';\n/**\n * Подгружает баннер в ноду компонента, при видимости этой ноды.\n *\n * @param {String|Number}   id              ID баннера\n * @param {Array}           ids             ID баннеров, имеет приоритет перед id\n * @param {String}          [templateName]  Имя шаблона для баннера, если имя шаблона не указано, то баннер будет\n *                                          добавлен в текущую ноду без применения шаблонов\n *\n * @name HH/LoadBannerOnVisibleModule\n * @constructor\n */\nexport default (element, params) => {\n    window.requestIdleCallback(() => {\n        visibilityWatcher.init({\n            element,\n            onVisible() {\n                const { ids, id, templateName, adfoxParams } = params;\n                let banners = [id];\n                if (ids) {\n                    banners = ids;\n                }\n                Banners.create(element, banners, templateName, adfoxParams);\n            },\n        });\n    });\n};\n","import { isObject } from 'Utils/Utils';\n\nexport const flatten = (metaData) => {\n    const result = {};\n    Object.keys(metaData).forEach((item) => {\n        if (isObject(metaData[item])) {\n            const child = flatten(metaData[item]);\n            Object.keys(child).forEach((key) => {\n                if (result[key]) {\n                    result[key] += `, ${child[key]}`;\n                } else {\n                    result[key] = child[key];\n                }\n            });\n        } else {\n            result[item] = metaData[item];\n        }\n    });\n    return result;\n};\n\nconst getMetaData = (geoObject) => {\n    return geoObject.properties.get('metaDataProperty.GeocoderMetaData');\n};\n\nconst getPart = (part, geoObject) => {\n    return flatten(getMetaData(geoObject))[part];\n};\n\nconst isPartEqual = (part, a, b) => {\n    return getPart(part, a) === getPart(part, b);\n};\n\nconst convertGeoObject = (object) => {\n    return flatten(getMetaData(object));\n};\n\nconst join = (array) => {\n    return array\n        .filter((item) => {\n            return item;\n        })\n        .join(', ');\n};\n\nconst geoObjectFromAddress = (address, ymaps) => {\n    let marker;\n    if (address.marker) {\n        marker = [address.marker['@lat'], address.marker['@lng']];\n    } else {\n        marker = [ymaps.geolocation.latitude, ymaps.geolocation.longitude];\n    }\n    return new ymaps.GeoObject({\n        geometry: {\n            type: 'Point',\n            coordinates: marker,\n        },\n        properties: {\n            metaDataProperty: {\n                GeocoderMetaData: {\n                    AddressLine: join([address.street, address.building]) || address.rawAddress,\n                    LocalityName: address.city,\n                    ThoroughfareName: address.street,\n                    PremiseNumber: address.building,\n                },\n            },\n            name: address.displayName,\n        },\n    });\n};\n\nconst getStreet = (converted) => {\n    return join([\n        converted.DependentLocalityName,\n        converted.ThoroughfareName,\n        converted.ThoroughfareNumber,\n        converted.DependentThoroughfareName,\n        converted.DependentThoroughfareNumber,\n    ]);\n};\n\nconst getMetro = (parts) => {\n    if (!Array.isArray(parts)) {\n        return {\n            line: '',\n            metro: '',\n            address: '',\n        };\n    }\n\n    const line = parts.find((item) => item.kind === 'route');\n    const metro = parts.find((item) => item.kind === 'metro');\n\n    return {\n        line: line?.name || '',\n        metro: metro?.name || '',\n        address: line && metro ? `${line.name}, ${metro.name}` : '',\n    };\n};\n\nconst getBuilding = (converted) => {\n    return join([converted.PremiseName, converted.PremiseNumber, converted.SubPremiseName, converted.SubPremiseNumber]);\n};\n\nconst addressFromYandex = (geoObject, map, metroStations, description, id) => {\n    const converted = convertGeoObject(geoObject);\n    const isMetroOnlyAddress = converted.kind?.split(',').includes('metro') && metroStations.length;\n    const coordinates = geoObject.geometry.getCoordinates();\n    const mapCenter = map.getCenter();\n    const street = getStreet(converted);\n    const building = getBuilding(converted);\n    let addressLine = getStreet(converted);\n    const { address, line, metro } = getMetro(\n        geoObject.properties.get('metaDataProperty.GeocoderMetaData.Address.Components')\n    );\n\n    if (!isMetroOnlyAddress) {\n        if (addressLine.length !== 0) {\n            addressLine += `, ${building}`;\n        } else {\n            addressLine = building;\n        }\n    }\n\n    if (!addressLine.length) {\n        addressLine = address;\n    }\n\n    const fullAddress = join([converted.LocalityName, addressLine]) || converted.AddressLine;\n    const mapData = {\n        points: {\n            center: {\n                lat: mapCenter[0],\n                lng: mapCenter[1],\n                zoom: map.getZoom(),\n            },\n        },\n    };\n    mapData.points.marker = {\n        lat: coordinates[0],\n        lng: coordinates[1],\n    };\n    return {\n        fullAddress,\n        renderedAddress: join([fullAddress].concat(metroStations.map((item) => item.renderedName))),\n        addressLine,\n        city: converted.LocalityName || converted.SubAdministrativeAreaName || converted.AdministrativeAreaName,\n        street: isMetroOnlyAddress || !street ? line : street,\n        building: isMetroOnlyAddress || !building ? metro : building,\n        description,\n        mapData: JSON.stringify(mapData),\n        metroStationId: metroStations.map((item) => item.id),\n        metroStations,\n        marker: coordinates.join(' '),\n        id,\n    };\n};\n\nconst prettyPrint = (address) => {\n    const prettyAddress = [];\n    if (address.city) {\n        prettyAddress.push(address.city);\n    }\n    if (address.street) {\n        prettyAddress.push(address.street);\n    }\n    if (address.building) {\n        prettyAddress.push(address.building);\n    }\n    if (address.metro) {\n        prettyAddress.push(address.metro);\n    }\n    if (!address.city && !address.street) {\n        prettyAddress.push(address.rawAddress);\n    }\n    return prettyAddress.join(', ');\n};\n\nexport default {\n    isPartEqual,\n    convertGeoObject,\n    geoObjectFromAddress,\n    join,\n    getStreet,\n    getBuilding,\n    addressFromYandex,\n    prettyPrint,\n};\n","import Utils from 'Modules/Maps/Utils';\nimport ymapsPromise from 'Modules/Maps/ymapsPromise';\n\nexport const defaults = {\n    mapZoom: 16,\n    placemarkIcon: `${window.globalVars.staticHost}/i/Components/VacancyMap/hh-placemark.svg`,\n    placemarkIconSize: [37, 53],\n    placemarkOffset: [-7, -12],\n    placemarkZIndex: 999,\n};\n\n/**\n * Инициализация Яндекс.Карты на элементе.\n *\n * @param {Element} element\n * @param {Object} params\n * @param {Object} params.address\n * @param {Boolean} [params.disableScrollZoom]\n * @param {Boolean} [params.disableDrag]\n * @param {Boolean} [params.disableDblClickZoom]\n * @param {Number} [params.mapZoom]\n * @param {String} [params.placemarkIcon]\n * @param {Array} [params.placemarkIconSize]\n * @param {Array} [params.placemarkOffset]\n * @param {Number} [params.placemarkZIndex]\n * @param {Object} [params.zoomControlPosition]\n * @param {Number} [params.zoomControlPosition.left]\n * @param {Number} [params.zoomControlPosition.top]\n * @param {Object} [params.geolocationPosition]\n * @param {Number} [params.geolocationPosition.left]\n * @param {Number} [params.geolocationPosition.top]\n * @param {Object} [params.autoFitToViewport]\n *\n * @returns {Promise} Резолвится с `mapInstance`, прокидывает реджект от `ymapsPromise`.\n */\nconst showMap = (element, params) => {\n    const {\n        address,\n        disableScrollZoom,\n        disableDrag,\n        disableDblClickZoom,\n        mapZoom,\n        onPlacemarkClick,\n        placemarkIcon,\n        placemarkIconSize,\n        placemarkOffset,\n        placemarkZIndex,\n        zoomControlPosition,\n        geolocationPosition,\n        autoFitToViewport,\n    } = { ...defaults, ...params };\n\n    return ymapsPromise().then((ymaps) => {\n        const { center, marker, bounds } = address.mapData.points;\n        let mapConfig = {};\n        // init by bounds\n        if (bounds) {\n            mapConfig = { bounds };\n        }\n        // init by center\n        if (center) {\n            mapConfig = {\n                center: [center.lat, center.lng],\n                zoom: center.zoom,\n            };\n        }\n        const mapInstance = new ymaps.Map(\n            element,\n            {\n                controls: zoomControlPosition ? [] : ['zoomControl'],\n                ...mapConfig,\n            },\n            {\n                maxZoom: 20,\n                // Отключить интерактивность POI (памятники, магазины) в подложке карты\n                yandexMapDisablePoiInteractivity: true,\n                // Отключить предложение открыть текущую карту в Яндекс.Картах\n                suppressMapOpenBlock: true,\n                // Автоматическое слежение за контейнером карты. По умолчанию карта перестроится автоматически в случае, когда она инициализируется из скрытого контейнера, либо мы программно поменяли его размеры, иначе необходимо вызвать map.container.fitToViewport.\n                autoFitToViewport,\n            }\n        );\n        if (zoomControlPosition) {\n            mapInstance.controls.add(\n                new ymaps.control.ZoomControl({\n                    options: {\n                        position: zoomControlPosition,\n                    },\n                })\n            );\n        }\n        if (geolocationPosition) {\n            mapInstance.controls.add(\n                new ymaps.control.GeolocationControl({\n                    options: {\n                        position: geolocationPosition,\n                    },\n                })\n            );\n        }\n\n        const behaviorsDisableMap = {\n            scrollZoom: disableScrollZoom,\n            drag: disableDrag,\n            dblClickZoom: disableDblClickZoom,\n        };\n        const behaviorsDisable = Object.keys(behaviorsDisableMap).filter((option) => behaviorsDisableMap[option]);\n\n        if (behaviorsDisable.length) {\n            mapInstance.behaviors.disable(behaviorsDisable);\n        }\n\n        if (marker) {\n            const markerCoords = [marker.lat, marker.lng];\n            const addressPlacemark = new ymaps.Placemark(\n                markerCoords,\n                {},\n                {\n                    iconLayout: 'default#image',\n                    iconImageHref: placemarkIcon,\n                    iconImageSize: placemarkIconSize,\n                    iconOffset: placemarkOffset,\n                    zIndex: placemarkZIndex,\n                }\n            );\n            if (onPlacemarkClick) {\n                addressPlacemark.events.add('click', (e) => {\n                    onPlacemarkClick();\n                    e.preventDefault();\n                });\n            }\n            mapInstance.geoObjects.add(addressPlacemark);\n            addressPlacemark.properties.set('balloonContent', Utils.prettyPrint(address));\n            // Коррекция центра (на случай если его координаты в XML не совпадают с координатами объекта)\n            mapInstance.setCenter(markerCoords, mapZoom);\n        }\n\n        mapInstance.container.fitToViewport();\n\n        return { mapInstance, ymaps };\n    });\n};\n\nexport default showMap;\n","import getYmapsPromise from 'bloko/common/getYmapsPromise';\n\nconst COUNTRY_UA = '2';\nconst defaultLocale = 'ru_RU';\n// Locales supported by Yandex.Maps API\nconst supportedLocales = ['ru_RU', 'en_US', 'en_RU', 'ru_UA', 'uk_UA', 'tr_TR'];\nconst country = window.globalVars.country;\nlet locale = window.globalVars.locale;\n// Workaround for en_RU locale on hh.ua\nif (country === COUNTRY_UA && locale === 'en_RU') {\n    locale = 'uk_UA';\n}\nexport default () =>\n    getYmapsPromise({\n        lang: supportedLocales.indexOf(locale) > -1 ? locale : defaultLocale,\n        apiKey: window.globalVars.features.ymaps_api_key || 'bd2ce8bf-561f-4940-be08-6e87317d767b',\n        suggestApiKey: window.globalVars.features.ymaps_suggest_api_key || 'b9e3758b-e8d8-4f3b-ae7e-92c27aea7f3a',\n    }).catch((error) => Promise.reject(error));\n","/**\n * Утилита следит за видимостью элемента на странице, и запускает калбеки при изменении состояния. <br>\n *\n * @type {Object}\n * @exports Utils/VisibilityWatcher\n */\nconst visibilityWatcher = {\n    /**\n     * Инициализирует вотчер на элементе.\n     *\n     * @param {Object}   options\n     * @param {Element}  options.element   DOM элемент за которым наблюдаем\n     * @param {Function} options.onVisible Функция, которая будет вызвана, когда элемент отобразится\n     *\n     * @member\n     * @method\n     */\n    init(options) {\n        let visible = false;\n        const element = options.element;\n        const checkVisible = () => {\n            if (visible) {\n                return;\n            }\n            if (element.offsetWidth || element.offsetHeight || element.getClientRects().length) {\n                visible = true;\n                options.onVisible();\n                window.removeEventListener('resize', checkVisible);\n                window.removeEventListener('element-displayed', checkVisible);\n                element.dataset.listenersSetted = 'false';\n            } else {\n                visible = false;\n            }\n        };\n        if (options.element.dataset.listenersSetted !== 'true') {\n            window.addEventListener('resize', checkVisible);\n            window.addEventListener('element-displayed', checkVisible);\n            options.element.dataset.listenersSetted = 'true';\n        }\n        checkVisible();\n    },\n};\nexport default visibilityWatcher;\n","import { MouseEventHandler } from 'react';\nimport classnames from 'classnames';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface AgreementTextProps {\n    text?: string;\n    link?: string;\n    buttonType?: AgreementButtonType;\n    withSocial?: boolean;\n    isIframeView?: boolean;\n    target?: string;\n}\n\nexport enum AgreementButtonType {\n    Continue = 'continue',\n    Signup = 'signup',\n}\n\nconst TrlKeys = {\n    bare: {\n        common: {\n            text: 'signup.agreementText.text',\n        },\n        russia: {\n            text: 'signup.agreementText.russia.text',\n            personalLink: 'signup.agreementText.russia.personal-data',\n        },\n        agreementLink: 'signup.agreementText.link',\n    },\n    withSocial: {\n        common: {\n            text: 'signup.agreementText.withSocial.text',\n        },\n        russia: {\n            text: 'signup.agreementText.withSocial.russia.text',\n            personalLink: 'signup.agreementText.russia.personal-data',\n        },\n\n        agreementLink: 'signup.agreementText.withSocial.link',\n    },\n\n    buttonType: {\n        continue: 'signup.agreementText.withSocial.buttonType.continue',\n        signup: 'signup.agreementText.withSocial.buttonType.signup',\n    },\n};\n\nconst agreementDataQa = 'account-signup-agreement';\nconst personalDataQa = 'account-signup-personal-data-russia';\n\nconst AgreementText: TranslatedComponent<AgreementTextProps> = ({\n    trls,\n    buttonType = AgreementButtonType.Continue,\n    withSocial = false,\n    isIframeView = false,\n    ...props\n}) => {\n    const agreementURL = useSelectorNonNullable((state) => state.authUrl['agreement-form']);\n    const isLightPage = useSelector(({ isLightPage }) => isLightPage);\n    const personalDataRussiaURL = useSelectorNonNullable((state) => state.authUrl['policy-url']);\n    const isRussia = useIsRussia();\n\n    const handleClickForVKminiApp: MouseEventHandler<HTMLAnchorElement> = (event) => {\n        if (!isIframeView) {\n            return;\n        }\n        event.preventDefault();\n        window.location.href = event.currentTarget.href;\n    };\n\n    const renderLink = (text: string, dataQa: string, to: string) => {\n        return (\n            <Link\n                {...props}\n                onClick={handleClickForVKminiApp}\n                className={classnames({ 'vk-mini-apps-link-disable': isIframeView })}\n                to={to}\n                data-qa={dataQa}\n            >\n                {text}\n            </Link>\n        );\n    };\n\n    const getText = () => {\n        if (withSocial) {\n            if (isRussia) {\n                return trls[TrlKeys.withSocial.russia.text];\n            }\n            return trls[TrlKeys.withSocial.common.text];\n        }\n        if (isRussia) {\n            return trls[TrlKeys.bare.russia.text];\n        }\n        return trls[TrlKeys.bare.common.text];\n    };\n\n    const getFormat = (): Record<string, JSX.Element | string> => {\n        if (withSocial) {\n            if (isRussia) {\n                return {\n                    '{0}': trls[TrlKeys.buttonType[buttonType]],\n                    '{1}': renderLink(trls[TrlKeys.withSocial.agreementLink], agreementDataQa, agreementURL),\n                    '{2}': renderLink(\n                        trls[TrlKeys.withSocial.russia.personalLink],\n                        personalDataQa,\n                        personalDataRussiaURL\n                    ),\n                };\n            }\n            return {\n                '{0}': trls[TrlKeys.buttonType[buttonType]],\n                '{1}': renderLink(trls[TrlKeys.withSocial.agreementLink], agreementDataQa, agreementURL),\n            };\n        }\n        if (isRussia) {\n            return {\n                '{0}': trls[TrlKeys.buttonType[buttonType]],\n                '{1}': renderLink(trls[TrlKeys.bare.agreementLink], agreementDataQa, agreementURL),\n                '{2}': renderLink(trls[TrlKeys.bare.russia.personalLink], personalDataRussiaURL, personalDataRussiaURL),\n            };\n        }\n        return {\n            '{0}': renderLink(trls[TrlKeys.bare.agreementLink], agreementDataQa, agreementURL),\n        };\n    };\n\n    return (\n        <div\n            className={classnames('account-agreement-text', {\n                'account-agreement-text_light-page': isLightPage,\n            })}\n        >\n            {formatToReactComponent(getText(), getFormat())}\n        </div>\n    );\n};\n\nexport default translation(AgreementText);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport DefaultVerification from 'lux/components/Verification/Verification';\nimport translation from 'lux/components/translation';\nimport formatAnalyticErrors from 'lux/modules/analytics/formatAnalyticErrors';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport { loginBy } from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\n\nconst VerificationFormStep = ({ Verification = DefaultVerification, isSignupPage, next, ...props }) => {\n    const dispatch = useDispatch();\n    const { login, authType, backurl } = useSelector(({ otp }) => otp);\n    const vacancyId = useSelector(({ postponedActions }) => postponedActions?.vacancy?.vacancyId);\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n\n    const onShownAnalytics = (elementRef) => {\n        if (elementRef.current) {\n            Analytics.sendHHEventElementShown(elementRef.current, {\n                elementName: 'code_confirmation',\n                vacancyId,\n                authType: loginBy[authType] || 'unknown',\n                isSignupPage,\n            });\n        }\n    };\n\n    const onSubmitAnalytics = (errorCode) => {\n        Analytics.sendHHEvent('form_submit', {\n            formName: 'code_confirmation',\n            vacancyId,\n            authType: loginBy[authType] || 'unknown',\n            errors: errorCode ? formatAnalyticErrors('code_verification', errorCode) : null,\n            isSignupPage,\n        });\n    };\n\n    const onSubmit = async (setIsSending, setVerification, code) => {\n        let response;\n        setIsSending(true);\n\n        try {\n            response = await fetcher.postFormData('/account/login/by_code', {\n                username: login,\n                code,\n                remember: true,\n                accountType: 'APPLICANT',\n                isApplicantSignup: isSignupPage,\n                backurl,\n            });\n        } catch (error) {\n            setIsSending(false);\n            const errorCode = error?.response?.data?.error?.key;\n            const isMultiAccountCreation = error?.response?.data?.isMultiAccountCreation;\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' && isMultiAccountCreation) {\n                try {\n                    await fetcher.post('/multiaccount_grouping/reset_employer_password', {\n                        code,\n                    });\n                } catch {\n                    onSubmitAnalytics(errorCode);\n                    dispatch(push(error.response.data.employerLoginURL));\n                    return;\n                }\n\n                onSubmitAnalytics(errorCode);\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' || errorCode === 'UNEXPECTED_USER_TYPE') {\n                dispatch(push(error.response.data.employerLoginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'UNEXPECTED_USER_TYPE' || errorCode === 'ANONYMOUS_ONLY') {\n                dispatch(push(error.response.data.loginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'ACCOUNT_NOT_FOUND') {\n                onSubmitAnalytics();\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            onSubmitAnalytics('SERVER_ERROR');\n            dispatch(showDefaultError(error));\n            return;\n        }\n\n        const errorCode = response?.data?.success ? null : response?.data?.verification?.key;\n        onSubmitAnalytics(errorCode);\n        setIsSending(false);\n\n        if (response?.data?.success) {\n            if (vrResponseHash) {\n                dispatch(push(`/vr_signup_login?vrResponseHash=${vrResponseHash}`));\n                return;\n            }\n            window.location.assign(backurl);\n            return;\n        }\n\n        setVerification(response?.data?.verification);\n    };\n\n    return (\n        <Verification\n            onShownAnalytics={onShownAnalytics}\n            authType={authType}\n            login={login}\n            onSubmit={onSubmit}\n            {...props}\n        />\n    );\n};\n\nVerificationFormStep.propTypes = {\n    trls: PropTypes.object,\n    login: PropTypes.string,\n    next: PropTypes.func,\n    isSignupPage: PropTypes.bool,\n    Verification: PropTypes.elementType,\n};\n\nexport default translation(VerificationFormStep);\n","import { useState, Fragment, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DefaultMultiAccountGrouping from 'lux/components/ApplicantSignInSignUpFlow/MultiAccountGroupingStep/MultiAccountGrouping';\nimport DefaultSignUp from 'lux/components/ApplicantSignInSignUpFlow/SignUpStep/SignUp';\nimport VerificationFormStep from 'lux/components/ApplicantSignInSignUpFlow/VerificationFormStep';\n\nconst SIGN_IN = 'SIGN_IN';\nconst SIGN_UP = 'SIGN_UP';\nconst VERIFICATION = 'VERIFICATION';\nconst MULTIACCOUNT_GROUPING = 'MULTIACCOUNT_GROUPING';\n\nconst ApplicantSignInSignUpFlow = ({\n    SignIn,\n    Verification,\n    MultiAccountGrouping = DefaultMultiAccountGrouping,\n    SignUp = DefaultSignUp,\n    isSignupPage = false,\n    onSignup,\n    onNextStep = () => null,\n    isExpanded,\n    onClickByPassword,\n    errorPageLogin = false,\n}) => {\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n    const [step, setStep] = useState(vrResponseHash ? VERIFICATION : SIGN_IN);\n    const [code, setCode] = useState('');\n    const [password, setPassword] = useState('');\n    const signUpRef = useRef();\n    const isIframeView = useSelector((state) => state.router.location.query.iframe_view === 'true');\n\n    const Wrapper = isSignupPage ? Column : Fragment;\n    const wrapperProps = isSignupPage ? { l: '16', m: '12', s: '4', xs: '4', container: true } : {};\n\n    useEffect(() => {\n        if (!isIframeView) {\n            return;\n        }\n\n        function enableLinksAfterComponentInited() {\n            signUpRef.current.querySelectorAll('.vk-mini-apps-link-disable').forEach((e) => {\n                e.classList.remove('vk-mini-apps-link-disable');\n            });\n        }\n\n        enableLinksAfterComponentInited();\n    }, [isIframeView]);\n\n    return (\n        <div ref={signUpRef}>\n            {step === SIGN_IN && (\n                <SignIn\n                    next={() => {\n                        setStep(VERIFICATION);\n                        onNextStep();\n                    }}\n                    isSignupPage={isSignupPage}\n                    onSignup={onSignup}\n                    onClickByPassword={onClickByPassword}\n                    isExpanded={isExpanded}\n                />\n            )}\n            {step === VERIFICATION && (\n                <Wrapper {...wrapperProps}>\n                    <VerificationFormStep\n                        Verification={Verification}\n                        cancel={() => setStep(SIGN_IN)}\n                        isSignupPage={isSignupPage}\n                        next={(code, isMultiAccountCreation) => {\n                            setStep(isSignupPage && isMultiAccountCreation ? MULTIACCOUNT_GROUPING : SIGN_UP);\n                            setCode(code);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === MULTIACCOUNT_GROUPING && (\n                <Wrapper {...wrapperProps}>\n                    <MultiAccountGrouping\n                        isSignupPage={isSignupPage}\n                        next={(password) => {\n                            setStep(SIGN_UP);\n                            setPassword(password);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === SIGN_UP && (\n                <Wrapper {...wrapperProps}>\n                    <SignUp\n                        isSignupPage={isSignupPage}\n                        code={code}\n                        password={password}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n        </div>\n    );\n};\n\nApplicantSignInSignUpFlow.propTypes = {\n    SignIn: PropTypes.elementType,\n    Verification: PropTypes.elementType,\n    MultiAccountGrouping: PropTypes.elementType,\n    SignUp: PropTypes.elementType,\n    isSignupPage: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    onSignup: PropTypes.func,\n    onNextStep: PropTypes.func,\n    onClickByPassword: PropTypes.func,\n    errorPageLogin: PropTypes.bool,\n};\n\nexport default ApplicantSignInSignUpFlow;\n","import { Component, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, DefaultRootState } from 'react-redux';\n\nimport LoadBannerOnVisibleSignature from 'HH/LoadBannerOnVisibleModule.d';\nimport { YandexAdfoxBannerProps } from 'lux/models/banners/YandexAdfoxBanner.types';\nimport { UserTargeting } from 'lux/models/userTargeting';\n\nlet loadBannerOnVisible: typeof LoadBannerOnVisibleSignature | undefined;\n\nif (!process.env.LUX_SERVER) {\n    /* eslint @typescript-eslint/no-var-requires: \"off\" */\n    /* eslint @typescript-eslint/no-unsafe-member-access: \"off\" */\n    loadBannerOnVisible = require('HH/LoadBannerOnVisibleModule').default as typeof LoadBannerOnVisibleSignature;\n}\n\ninterface BannerProps {\n    /** Индификатор баннера */\n    id: string;\n    /** Название шаблона для баннера */\n    templateName?: string;\n    /** Нода в которую кладется баннер */\n    children?: ReactNode;\n    /** Флаг отмены отправки запросов в баннерную систему */\n    cancelFetchBanners?: boolean;\n    /** Строка текущих get параметров URL */\n    search?: string;\n    /** Строка текущего URL без параметров */\n    pathname?: string;\n    /** Параметры для Yandex adfox баннеров */\n    adfoxParams?: Omit<YandexAdfoxBannerProps, 'id'>;\n    /** Строит пустой див вместо баннера **/\n    isEmpty?: boolean;\n    userTargeting?: UserTargeting;\n}\n\nclass Banner extends Component<BannerProps> {\n    element: HTMLElement | null = null;\n    static defaultProps = {\n        templateName: 'HHC-Banners-Place-Template',\n    };\n\n    componentDidMount() {\n        this.element = this.props.isEmpty ? null : (ReactDOM.findDOMNode(this) as HTMLElement);\n        if (this.element) {\n            this.element.addEventListener('HH-Banners-Init', this.setAutoHeight.bind(this));\n            this.initBanners();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.element) {\n            this.initBanners();\n        }\n    }\n\n    componentWillUnmount() {\n        this.element?.removeEventListener('HH-Banners-Init', this.setAutoHeight);\n    }\n\n    shouldComponentUpdate(nextProps: BannerProps) {\n        if (nextProps.cancelFetchBanners) {\n            return false;\n        }\n        return nextProps.search !== this.props.search || nextProps.pathname !== this.props.pathname;\n    }\n\n    initBanners() {\n        const { id, templateName, adfoxParams, userTargeting } = this.props;\n        if (this.element) {\n            this.element.style.height = `${this.element.clientHeight}px`;\n            this.element.innerHTML = '';\n        }\n        let adfoxParamsProperty;\n        if (adfoxParams) {\n            adfoxParamsProperty = {\n                ...adfoxParams,\n                type: 'adfox',\n                bannerId: id,\n                place: id,\n                bannerCommonTargeting: userTargeting,\n                bannerAdTargeting: adfoxParams.bannerAdTargeting || {},\n            };\n        }\n        const bannerParams = {\n            id,\n            templateName,\n            adfoxParams: adfoxParamsProperty,\n        };\n\n        loadBannerOnVisible?.(this.element, bannerParams);\n    }\n\n    setAutoHeight = (): void => {\n        if (this.element) {\n            this.element.style.height = 'auto';\n        }\n    };\n\n    render() {\n        return this.props.children || <div />;\n    }\n}\n\nexport default connect((state: DefaultRootState) => ({\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    cancelFetchBanners: state.cancelFetchBanners,\n    userTargeting: state.userTargeting,\n}))(Banner);\n","import type { FC } from 'react';\n\nimport { isExternalBannersRestricted } from 'HHC/Banners';\nimport { useIsBelarus } from 'lux/hooks/useCountries';\nimport { AdsExternalBannerProps } from 'lux/models/banners/AdsExternalBanner.types';\n\nimport Banner from 'lux/components/Banner';\n\nconst AdsExternalBanner: FC<AdsExternalBannerProps> = ({ id, cId, pp, p2, ...adfoxParams }) => {\n    const enableAdfox = pp && p2;\n    const shouldHideExternalBanners = isExternalBannersRestricted(useIsBelarus());\n\n    if (!enableAdfox || shouldHideExternalBanners) {\n        return <Banner key={cId} id={id} isEmpty={shouldHideExternalBanners} />;\n    }\n\n    return (\n        <Banner\n            key={cId}\n            id={id}\n            templateName=\"\"\n            adfoxParams={{\n                pp,\n                p2,\n                cId,\n                ...adfoxParams,\n            }}\n        >\n            <div\n                id={cId}\n                className={`HHC-Banner-${id} HH-Banner-Adfox banner-place banner-place_${id} banner-place-adfox banner-place-adfox_${id}`}\n                data-banner-id={id}\n                data-empty-class=\"banner-place_hide\"\n                data-loaded-class=\"banner-place_show\"\n            />\n        </Banner>\n    );\n};\n\nexport default AdsExternalBanner;\n","import PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport translation from 'lux/components/translation';\n\nconst ReferralLink = ({ trls }) => (\n    <div className=\"clickme__link-wrapper\">\n        <Link\n            to=\"https://clickme.hh.ru/new/dashboard?utm_source=block_referral\"\n            rel=\"noopener noreferrer\"\n            className=\"clickme__link\"\n            target=\"_blank\"\n        >\n            <Text size={TextSize.Small}>{trls[ReferralLink.trls.link]}</Text>\n        </Link>\n    </div>\n);\n\nReferralLink.trls = {\n    link: 'clickme.adv.here',\n};\n\nReferralLink.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport default translation(ReferralLink);\n","import { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nlet loadBannerOnVisible = () => {};\n\nif (!process.env.LUX_SERVER) {\n    loadBannerOnVisible = require('HH/LoadBannerOnVisibleModule').default;\n}\n\nclass BannersGroup extends Component {\n    static propTypes = {\n        /** Индификаторы баннеров */\n        banners: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string })),\n        /** Название шаблона для баннеров */\n        templateName: PropTypes.string,\n        /** Нода в которую кладется баннер */\n        children: PropTypes.node,\n        /** Класс для групповой банерной ноды */\n        groupClassNames: PropTypes.string,\n    };\n\n    static defaultProps = {\n        templateName: 'HHC-Banners-Place-Template',\n        groupClassNames: '',\n    };\n\n    componentDidMount() {\n        this.element = ReactDOM.findDOMNode(this);\n        this.initBanners();\n    }\n\n    initBanners() {\n        const { banners, templateName } = this.props;\n        const bannerParams = {\n            ids: banners.map(({ id }) => id),\n            templateName,\n        };\n        loadBannerOnVisible(this.element, bannerParams);\n    }\n\n    render() {\n        const { groupClassNames, children } = this.props;\n        return <div className={groupClassNames}>{children}</div>;\n    }\n}\n\nexport default BannersGroup;\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BannersGroup from 'lux/components/Banner/BannersGroup';\n\nimport ClickmeReferralLink from 'lux/components/Clickme/ReferralLink';\n\nconst Clickme = ({ banners, showReferralLink, children, groupClassNames }) => (\n    <Fragment>\n        {showReferralLink && <ClickmeReferralLink />}\n        <BannersGroup banners={banners} groupClassNames={groupClassNames}>\n            {children}\n        </BannersGroup>\n    </Fragment>\n);\n\nClickme.defaultProps = {\n    showReferralLink: false,\n    groupClassNames: '',\n};\n\nClickme.propTypes = {\n    banners: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string })),\n    showReferralLink: PropTypes.bool,\n    children: PropTypes.node,\n    groupClassNames: PropTypes.string,\n};\n\nexport default Clickme;\n","import { DefaultRootState } from 'react-redux';\n\nimport { CountryId } from 'lux/models/countryId';\nimport { UserType } from 'lux/models/userType';\n\nconst checkWidgetRender = (state: DefaultRootState): boolean => {\n    const isTrusted = state.employerInfo.isTrusted || state.vacancyView.company['@trusted'];\n    const isRussia = state.countryId === CountryId.Russia;\n    const hasBigWidgetMicrofrontend = !!state.microFrontends.employerReviewsBig;\n\n    return isRussia && isTrusted && hasBigWidgetMicrofrontend;\n};\n\nexport const checkWidgetRenderForVacancyView = (state: DefaultRootState): boolean => {\n    const userType = state.userType;\n    return [UserType.Anonymous, UserType.Applicant, UserType.NedoUser].includes(userType) && checkWidgetRender(state);\n};\n\nexport default checkWidgetRender;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--WZYwmnLAzfuEkEYfHMwD\",\"wrapperRedesigned\":\"wrapper_redesigned--qABTlM7VE7EmIwg9uhlD\"};","import { useEffect, useRef, FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ScrollToElement from 'Utils/ScrollToElement';\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport checkWidgetRender from 'lux/components/EmployerReviews/WidgetBig/checkRender';\n\nimport styles from './widgetBig.less';\n\nconst TrlKeys = {\n    title: 'employerReviews.bigWidget.title',\n};\n\nconst WidgetWrapper: FC<{ isRedesign: boolean; hasWrapper?: boolean } & PropsWithChildren> = ({\n    isRedesign,\n    hasWrapper,\n    children,\n}) =>\n    hasWrapper ? (\n        <div className={classnames({ [styles.wrapper]: hasWrapper, [styles.wrapperRedesigned]: isRedesign })}>\n            {children}\n        </div>\n    ) : (\n        <>{children}</>\n    );\n\nconst EmployerReviewsBigWidget: TranslatedComponent<{ isRedesign: boolean; hasWrapper?: boolean }> = ({\n    isRedesign,\n    hasWrapper = true,\n    trls,\n}) => {\n    const widgetElement = useRef<HTMLDivElement>(null);\n    const showWidget = useSelector(checkWidgetRender);\n\n    useEffect(() => {\n        const handler = () => ScrollToElement(widgetElement.current);\n        window.addEventListener('HH-Dream-Job-Scroll-To-Big-Widget', handler);\n        return () => window.removeEventListener('HH-Dream-Job-Scroll-To-Big-Widget', handler);\n    }, []);\n\n    const hasBigWidgetMicrofrontend = useSelector((state) => !!state.microFrontends.employerReviewsBig);\n\n    if (!showWidget || !hasBigWidgetMicrofrontend) {\n        return null;\n    }\n\n    return (\n        <div ref={widgetElement} className=\"noprint\">\n            <WidgetWrapper isRedesign={isRedesign} hasWrapper={hasWrapper}>\n                {isRedesign ? (\n                    <>\n                        {hasWrapper && <VSpacing base={12} xs={1} />}\n                        <H2>{trls[TrlKeys.title]}</H2>\n                        <VSpacing base={6} xs={3} />\n                    </>\n                ) : (\n                    <>\n                        <VSpacing base={7} />\n                        <H2>{trls[TrlKeys.title]}</H2>\n                        <VSpacing base={3} />\n                    </>\n                )}\n                <ContainerForMicroFrontend place=\"employerReviewsBig\" />\n            </WidgetWrapper>\n        </div>\n    );\n};\n\nexport default translation(EmployerReviewsBigWidget);\n","import { FC, ElementType, PropsWithChildren } from 'react';\n\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface EmployerReviewsSmallWidgetProps {\n    Wrapper?: ElementType;\n    isRedesign?: boolean;\n    white?: boolean;\n}\n\nconst DefaultWrapper: FC<PropsWithChildren> = ({ children }) => <>{children}</>;\n\nconst EmployerReviewsSmallWidget: FC<EmployerReviewsSmallWidgetProps> = ({\n    Wrapper = DefaultWrapper,\n    isRedesign,\n    white = false,\n}) => {\n    const isRussia = useIsRussia();\n    const isTrustedEmployer = useSelector(\n        (state) => state.employerInfo.isTrusted || state.vacancyView.company['@trusted']\n    );\n\n    if (!isRussia || !isTrustedEmployer) {\n        return null;\n    }\n\n    const place = white ? 'employerReviewsSmallWhite' : 'employerReviewsSmall';\n\n    return (\n        <Wrapper>\n            {isRedesign && <VSpacing base={4} />}\n            <ContainerForMicroFrontend place={place} />\n        </Wrapper>\n    );\n};\n\nexport default EmployerReviewsSmallWidget;\n","import { FC, MutableRefObject } from 'react';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\n\ninterface SkillsSurveyProps {\n    blockRef?: MutableRefObject<HTMLDivElement>;\n}\n\nconst SkillsSurvey: FC<SkillsSurveyProps> = ({ blockRef }) => {\n    return (\n        <div data-qa=\"resume-block-skill-survey-content\" ref={blockRef}>\n            <ContainerForMicroFrontend place=\"skills-view\" />\n        </div>\n    );\n};\n\nexport default SkillsSurvey;\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button from 'bloko/blocks/button';\nimport HoverTip, { TipLayer } from 'bloko/blocks/drop/Tip/HoverTip';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    print: 'vacancy.actions.print',\n};\n\ninterface PrintButtonProps {\n    id?: number | null;\n    draft?: boolean;\n    showHidden?: boolean;\n}\n\nconst PrintButton: TranslatedComponent<PrintButtonProps> = ({\n    id = null,\n    draft = false,\n    showHidden,\n    trls,\n    ...buttonProps\n}) => {\n    const paramName = draft ? 'draftId' : 'id';\n    const params = urlParser.stringify({ [paramName]: id, print: 'true', showHidden: showHidden ? 'true' : null });\n\n    return (\n        <HoverTip\n            host={process.env.LUX_SERVER ? null : document.body}\n            layer={TipLayer.Topmost}\n            render={() => trls[TrlKeys.print]}\n        >\n            <Button\n                icon={<Icon view={IconView.Printer} initial={IconColor.Gray50} scale={IconScale.Small} />}\n                Element={Link}\n                to={`/vacancy/view?${params}`}\n                target=\"_blank\"\n                data-qa=\"vacancy-print-view\"\n                {...buttonProps}\n            />\n        </HoverTip>\n    );\n};\n\nexport default translation(PrintButton);\n","import { useParams } from 'react-router-dom';\n\nimport { useSelector } from 'lux/modules/useSelector';\nimport VACANCY_ACTIONS from 'lux/modules/vacancyActions';\n\nconst usePrintVacancy = (): [number | null, boolean, boolean] => {\n    const isCreate = useSelector(\n        ({ vacancyAction }) =>\n            vacancyAction === VACANCY_ACTIONS.CREATE || vacancyAction === VACANCY_ACTIONS.CREATE_FROM_DRAFT\n    );\n    const isPromoVacancy = useSelector((state) => state.isPromoVacancy);\n    const vacancyCreateDraftId = useSelector((state) => state.vacancyCreateDraftId);\n    const {\n        vacancyId,\n        originalVacancyId,\n        archivedVacancyId,\n        draftId,\n    }: { vacancyId?: string; originalVacancyId?: string; archivedVacancyId?: string; draftId?: string } = useParams();\n\n    const id =\n        vacancyCreateDraftId ||\n        parseInt(vacancyId || originalVacancyId || archivedVacancyId || draftId || '', 10) ||\n        null;\n    const show = isCreate && !isPromoVacancy && !!id;\n    const isDraft = !!vacancyCreateDraftId;\n\n    return [id, isDraft, show];\n};\n\nexport default usePrintVacancy;\n","import { FC, PropsWithChildren } from 'react';\n\nimport RowContent from 'lux/components/RowContent';\n\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\n\ninterface VacancyRowContentProps {\n    isChameleonEmployerView: boolean;\n}\n\nconst VacancyRowContent: FC<VacancyRowContentProps & PropsWithChildren> = ({ children, isChameleonEmployerView }) => {\n    const { isConstructor } = useBranding();\n\n    if (isConstructor || isChameleonEmployerView) {\n        return <>{children}</>;\n    }\n\n    return <RowContent>{children}</RowContent>;\n};\n\nexport default VacancyRowContent;\n","import { FC, PropsWithChildren, ReactNode, useEffect } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Column, { ColumnsWrapper, ColumnsRow } from 'bloko/blocks/column';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport usePrintDetect from 'lux/hooks/usePrintDetect';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyRowContent from 'lux/components/VacancyView/VacancyRowContent';\n\ninterface VacancyDefaultContainerProps {\n    ContainerWrapper: FC<PropsWithChildren>;\n    rightColumn: ReactNode;\n    isChameleonEmployerView: boolean;\n    isRedesign: boolean;\n}\n\nconst VacancyDefaultContainer: FC<VacancyDefaultContainerProps & PropsWithChildren> = ({\n    ContainerWrapper = ColumnsWrapper,\n    children,\n    rightColumn,\n    isChameleonEmployerView,\n    isRedesign,\n}) => {\n    const isZarplata = useIsZarplataPlatform();\n    const isPrinting = usePrintDetect();\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const userType = useSelector(({ userType }) => userType);\n\n    useEffect(() => {\n        if (vacancyId) {\n            Analytics.sendEvent(userType, 'view-vacancy', undefined, undefined, undefined, {\n                // eslint-disable-next-line camelcase\n                product_id: vacancyId,\n            });\n        }\n        if (isZarplata) {\n            Analytics.addEventPixels('ZP_VIEW_PRODUCT');\n        }\n    }, [isZarplata, userType, vacancyId]);\n\n    const renderContent = (content: ReactNode) => {\n        if (isRedesign) {\n            return <Text size={isPrinting ? undefined : TextSize.Large}>{content}</Text>;\n        }\n        return content;\n    };\n    let mColumn: '9' | '8' | '12' = isChameleonEmployerView ? '9' : '8';\n    if (isRedesign) {\n        mColumn = '12';\n    }\n    return (\n        <ContainerWrapper>\n            <VacancyRowContent isChameleonEmployerView={isChameleonEmployerView}>\n                {renderContent(\n                    <ColumnsRow>\n                        <Column xs=\"4\" s=\"8\" m={mColumn} l={isRedesign ? '10' : '11'} container>\n                            {children}\n                        </Column>\n                        {rightColumn}\n                    </ColumnsRow>\n                )}\n            </VacancyRowContent>\n        </ContainerWrapper>\n    );\n};\n\nexport default VacancyDefaultContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--YAN8rh_qH2nBqvZ1NJ4Q\"};","import { FormItem } from 'bloko/blocks/form';\nimport { H2 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport MultiAccountGroupingForm, {\n    MultiAccountGroupingFormBaseProps,\n} from 'lux/components/ApplicantSignInSignUpFlow/MultiAccountGroupingStep/MultiAccountGroupingForm';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './multi-account-grouping.less';\n\nconst TrlKeys = {\n    passwordSent: 'registration.registered.passwordSent',\n    letterComeSoon: 'registration.registered.letterComeSoon',\n    letterMultiaccountNote: 'registration.registered.letterMultiaccountNote',\n    letterHighlightedPart: 'registration.registered.letterHighlightedPart',\n};\n\nconst MultiAccountGroupingStep: TranslatedComponent<MultiAccountGroupingFormBaseProps> = ({ trls, ...formProps }) => {\n    const { login } = useSelector(({ otp }) => otp);\n\n    return (\n        <MultiAccountGroupingForm\n            render={({ renderInput, renderError, renderSubmit }) => {\n                return (\n                    <div className={styles.wrapper}>\n                        <H2>\n                            {format(trls[TrlKeys.passwordSent], {\n                                '{0}': login as string,\n                            })}\n                        </H2>\n                        <VSpacing base={3} />\n                        <p>\n                            {formatToReactComponent(trls[TrlKeys.letterMultiaccountNote], {\n                                '{0}': (\n                                    <Text Element=\"span\" strong>\n                                        {trls[TrlKeys.letterHighlightedPart]}\n                                    </Text>\n                                ),\n                            })}\n                        </p>\n                        <p>{trls[TrlKeys.letterComeSoon]}</p>\n                        <VSpacing base={6} xs={4} />\n                        <FormItem>{renderInput()}</FormItem>\n                        {renderError()}\n                        <VSpacing base={4} />\n                        {renderSubmit()}\n                    </div>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(MultiAccountGroupingStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--qBX9EabgtXQ4UhT9fgCc\",\"container\":\"container--zbaxFtN6e9rCJRVLAxtz\",\"inputWrapper\":\"input-wrapper--v8vH1BYeiyZMN0s4UxlF\",\"buttonWrapper\":\"button-wrapper--ScU51CqKyS1jphdiA3Or\",\"agreement\":\"agreement--hdrZuu0VastBg7HeGIZQ\"};","import { H2 } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AgreementText from 'lux/components/ApplicantSignInSignUpFlow/AgreementText';\nimport SignInFormStep from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './sign-in-step.less';\n\nconst TrlKeys = {\n    header: 'signup.header.fillPhone',\n    submit: 'signupForm.create.submit',\n    inputPlaceholder: 'signup.placeholder.phoneNumber',\n};\n\nexport interface SignInStepProps {\n    callbackSubmit?: () => void;\n    next: () => void;\n}\n\nconst SignInStep: TranslatedComponent<SignInStepProps> = ({ next, trls, callbackSubmit }) => {\n    const backurl = useSelector(({ authUrl }) => authUrl?.backurl);\n\n    return (\n        <>\n            <SignInFormStep\n                isAutofocusEnabled={false}\n                backurl={backurl}\n                next={next}\n                callbackSubmit={callbackSubmit}\n                dataQaModifier=\"account-signup-vacancy-page\"\n                render={({ renderLogin, renderSubmitButton, renderCaptcha }) => (\n                    <div className={styles.wrapper}>\n                        <H2>{trls[TrlKeys.header]}</H2>\n                        <VSpacing base={6} xs={4} />\n                        <div className={styles.container}>\n                            <div className={styles.inputWrapper}>\n                                {renderLogin({ placeholder: trls[TrlKeys.inputPlaceholder] })}\n                            </div>\n                            <div className={styles.buttonWrapper}>\n                                {renderSubmitButton(trls[TrlKeys.submit], {\n                                    scale: undefined,\n                                })}\n                            </div>\n                        </div>\n                        {renderCaptcha()}\n                        <VSpacing base={6} xs={4} />\n                        <Text size={TextSize.Small}>\n                            <div className={styles.agreement}>\n                                <AgreementText />\n                            </div>\n                        </Text>\n                    </div>\n                )}\n            />\n        </>\n    );\n};\n\nexport default translation(SignInStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--n7asUwUVJrgjG9duLyyf\"};","import Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport useShowAdvertisementAgreement from 'lux/components/AdvertisementAgreement/useShowAdvertisementAgreement';\nimport useShowAdvertisementSubscriptionApplicant from 'lux/components/AdvertisementSubscription/useShowAdvertisementSubscriptionApplicant';\nimport SignUpForm, { SignUpSignFormBaseProps } from 'lux/components/ApplicantSignInSignUpFlow/SignUpStep/SignUpForm';\nimport translation from 'lux/components/translation';\n\nimport styles from './sign-up-step.less';\n\nconst TrlKeys = {\n    header1: 'signUpStep.header.1',\n    header2: 'signUpStep.header.2',\n};\n\nconst SignUpStep: TranslatedComponent<SignUpSignFormBaseProps> = ({ trls, ...formProps }) => {\n    const showAdvertisementAgreement = useShowAdvertisementAgreement();\n    const showAdvertisementSubscriptionApplicant = useShowAdvertisementSubscriptionApplicant();\n    return (\n        <SignUpForm\n            render={({\n                renderFirstNameField,\n                renderLastNameField,\n                renderAccountDeleteInactive,\n                renderSubmit,\n                renderAdvertisementAgreement,\n                renderAdvertisementSubscriptionApplicant,\n            }) => {\n                return (\n                    <>\n                        <div className={styles.wrapper}>\n                            <H2>\n                                {trls[TrlKeys.header1]} {trls[TrlKeys.header2]}\n                            </H2>\n                            <VSpacing base={6} xs={4} />\n                            {renderFirstNameField()}\n                            <VSpacing base={2} />\n                            {renderLastNameField()}\n                            <VSpacing base={4} />\n                            {renderAccountDeleteInactive()}\n                            {showAdvertisementSubscriptionApplicant && (\n                                <>\n                                    {renderAdvertisementSubscriptionApplicant()}\n                                    <VSpacing base={6} />\n                                </>\n                            )}\n                            {renderSubmit()}\n                            {showAdvertisementAgreement && (\n                                <div>\n                                    <Column l=\"5\" m=\"5\" s=\"5\" xs=\"4\" container>\n                                        <VSpacing base={5} />\n                                        {renderAdvertisementAgreement()}\n                                    </Column>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(SignUpStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--f4li1VNLAxqNoIEHE5oG\",\"formContainer\":\"form-container--liSwLDOtdWnN2kHJdQi0\",\"inputWrapper\":\"input-wrapper--RZEHUucY3UFFowAo7CtP\",\"buttonWrapper\":\"button-wrapper--CPILScj87ZUBxux33tOR\"};","import { H2 } from 'bloko/blocks/header';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport VerificationForm, { VerificationFormBaseProps } from 'lux/components/Verification/VerificationForm';\nimport translation from 'lux/components/translation';\n\nimport styles from './verification-step.less';\n\nconst TrlKeys = {\n    header: 'signUpForm.verification.header',\n    phone: {\n        sent: 'signUpForm.verification.codeSent.phone',\n        description1: 'signUpForm.verification.codeSentDescription.1.phone',\n        description2: 'signUpForm.verification.codeSentDescription.2.phone',\n    },\n    email: {\n        sent: 'signUpForm.verification.codeSent.email',\n        description: 'otp.confirm.sub.header',\n    },\n};\n\nexport interface VerificationStepProps extends VerificationFormBaseProps {\n    onCancel?: () => void;\n    cancelText?: string;\n    codePlaceholder?: string;\n    errorPageLogin?: boolean;\n}\n\nconst VerificationStep: TranslatedComponent<VerificationStepProps> = ({\n    trls,\n    errorPageLogin,\n    codePlaceholder,\n    onCancel,\n    cancelText,\n    ...formProps\n}) => {\n    const { authType, login } = formProps;\n\n    return (\n        <VerificationForm\n            render={({ renderInput, renderCodeError, renderCodeSender, renderSubmit }) => {\n                return (\n                    <div className={styles.wrapper}>\n                        <H2>{trls[TrlKeys.header]}</H2>\n                        <VSpacing base={2} />\n                        <p>\n                            {formatToReactComponent(\n                                trls[authType === 'EMAIL' ? TrlKeys.email.sent : TrlKeys.phone.sent],\n                                {\n                                    '{0}': <strong>{login}</strong>,\n                                }\n                            )}\n                        </p>\n                        <VSpacing base={2} />\n                        {authType === 'EMAIL' ? (\n                            <p>{trls[TrlKeys.email.description]}</p>\n                        ) : (\n                            <>\n                                <p>{trls[TrlKeys.phone.description1]}</p>\n                                <p>{trls[TrlKeys.phone.description2]}</p>\n                            </>\n                        )}\n                        <VSpacing base={6} xs={4} />\n                        <div className={styles.formContainer}>\n                            <div className={styles.inputWrapper}>\n                                {renderInput({\n                                    placeholder: codePlaceholder,\n                                    isAutofocus: true,\n                                })}\n                            </div>\n                            <div className={styles.buttonWrapper}>{renderSubmit({ isStretched: true })}</div>\n                        </div>\n                        <div>\n                            {renderCodeError()}\n                            <VSpacing base={6} xs={4} />\n                            <Text importance={TextImportance.Tertiary}>{renderCodeSender()}</Text>\n                        </div>\n                    </div>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(VerificationStep);\n","import { FC, useCallback, ComponentType } from 'react';\n\nimport { sendResponseAttempt } from 'Modules/VacancyAnalytics';\nimport ApplicantSignInSignUpFlow from 'lux/components/ApplicantSignInSignUpFlow';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport MultiAccountGroupingStep from 'lux/components/VacancyView/SignUpBlock/Form/MultiAccountGroupingStep';\nimport SignInStep, { SignInStepProps } from 'lux/components/VacancyView/SignUpBlock/Form/SignInStep';\nimport SignUpStep from 'lux/components/VacancyView/SignUpBlock/Form/SignUpStep';\nimport VerificationStep from 'lux/components/VacancyView/SignUpBlock/Form/VerificationStep';\n\nconst SignupForm: FC = () => {\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const employerId = useSelector((state) => state.vacancyView.company?.id);\n\n    const SignIn = useCallback<ComponentType<Omit<SignInStepProps, 'setHeader'>>>(\n        (props) => (\n            <SignInStep\n                {...props}\n                callbackSubmit={() => {\n                    if (!vacancyId) {\n                        return;\n                    }\n                    sendResponseAttempt({ vacancyId, employerId, hhtmSourceLabel: 'vacancy_signup_form' });\n                }}\n            />\n        ),\n        [employerId, vacancyId]\n    );\n\n    return (\n        <ApplicantSignInSignUpFlow\n            SignIn={SignIn}\n            Verification={VerificationStep}\n            MultiAccountGrouping={MultiAccountGroupingStep}\n            SignUp={SignUpStep}\n        />\n    );\n};\n\nexport default SignupForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--PCzysuHfAqtSAowiWDOB\",\"hybridConstructorWrapper\":\"hybrid-constructor-wrapper--mr1PjXtFXsxDXO6chEE2\"};","import { FC, useEffect, useRef, RefObject, ReactNode } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Backplate, MainContentWrapper } from '@hh.ru/branding-packages';\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Form from 'lux/components/VacancyView/SignUpBlock/Form';\n\nimport styles from './sign-up-block.less';\n\ninterface Props {\n    isBrandingConstructor?: boolean;\n    blockRef: RefObject<HTMLDivElement>;\n}\n\nconst SignUpBlock: FC<Props> = ({ isBrandingConstructor, blockRef }) => {\n    const showSignupForm = useSelector((state) => state.vacancyView.showSignupForm);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const analyticsSent = useRef(false);\n\n    useEffect(() => {\n        if (!showSignupForm) {\n            return undefined;\n        }\n        const signupFormTop = blockRef?.current?.offsetTop || 0;\n        const scrollHandler = () => {\n            if (!analyticsSent.current && window.scrollY + window.innerHeight / 2 > signupFormTop) {\n                Analytics.sendHHEvent('applicantRegistrationAttempt', {\n                    vacancy_id: vacancyId, // eslint-disable-line camelcase\n                });\n                analyticsSent.current = true;\n            }\n        };\n        window.addEventListener('scroll', scrollHandler);\n        return () => {\n            window.removeEventListener('scroll', scrollHandler);\n        };\n    }, [blockRef, showSignupForm, vacancyId]);\n\n    if (!showSignupForm) {\n        return null;\n    }\n\n    const renderLayout = (content: ReactNode) => {\n        if (isBrandingConstructor) {\n            return (\n                <MainContentWrapper>\n                    <Backplate separate forceStylesBackplate>\n                        {content}\n                    </Backplate>\n                </MainContentWrapper>\n            );\n        }\n        return (\n            <ColumnsRow>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"10\">\n                    {content}\n                    <VSpacing base={9} xs={6} />\n                </Column>\n            </ColumnsRow>\n        );\n    };\n\n    return (\n        <div className=\"noprint\">\n            {renderLayout(\n                <div className={styles.wrapper} ref={blockRef}>\n                    <Form />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SignUpBlock;\n","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    acceptTemporary: 'vacancy.view.acceptTemporary',\n};\n\ninterface VacancyAcceptTemporaryProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyAcceptTemporary: TranslatedComponent<VacancyAcceptTemporaryProps> = ({ isRedesign, trls }) => {\n    const acceptTemporary = useSelector((store) => store.vacancyView.acceptTemporary);\n    if (!acceptTemporary) {\n        return null;\n    }\n    return (\n        <p\n            className={classnames({ 'vacancy-description-list-item': isRedesign })}\n            data-qa=\"vacancy-view-accept-temporary\"\n        >\n            {trls[TrlKeys.acceptTemporary]}\n        </p>\n    );\n};\n\nexport default translation(VacancyAcceptTemporary);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport VacancyResponseLink from 'lux/components/VacancyResponseLink';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'button.placeOtherResponse',\n};\n\ninterface RespondButtonProps {\n    unusedResumeIds?: string[];\n    hiddenResumeIds?: string[];\n    vacancyId: number;\n}\n\nconst RespondButton: TranslatedComponent<RespondButtonProps> = ({\n    trls,\n    vacancyId,\n    unusedResumeIds,\n    hiddenResumeIds,\n}) => {\n    const { employerId } = useSelector((state) => state.vacancyView);\n    if (!(unusedResumeIds?.length || hiddenResumeIds?.length)) {\n        return null;\n    }\n    return (\n        <VacancyResponseLink\n            vacancyId={vacancyId}\n            employerId={employerId}\n            render={(onClick) => (\n                <BlokoLink\n                    Element={Link}\n                    rel=\"nofollow\"\n                    to={`/applicant/vacancy_response?vacancyId=${vacancyId}`}\n                    data-qa=\"vacancy-response-link-top-again\"\n                    onClick={onClick}\n                >\n                    {trls[TrlKeys.title]}\n                </BlokoLink>\n            )}\n            place=\"vacancy_top_button\"\n        />\n    );\n};\n\nexport default translation(RespondButton);\n","import classnames from 'classnames';\n\nimport Gap from 'bloko/blocks/gap';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useResumeIdResponseStatuses from 'lux/hooks/useResumeIdResponseStatuses';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport RespondButton from 'lux/components/VacancyView/ResponseStatus/RespondButton';\n\nconst TrlKeys = {\n    responded: 'vacancy.view.topic.status.responded',\n    discarded: 'vacancy.view.topic.status.discard',\n    invited: 'vacancy.view.topic.status.invitation',\n};\n\ninterface ResponseStatusProps {\n    headerMode?: boolean;\n}\n\nconst ResponseStatus: TranslatedComponent<ResponseStatusProps> = ({ trls, headerMode }) => {\n    const { vacancyId } = useSelector((state) => state.vacancyView);\n    const responseStatuses = useSelector((state) => state.applicantVacancyResponseStatuses);\n    const resumeIdResponseStatuses = useResumeIdResponseStatuses(vacancyId);\n    if (!vacancyId) {\n        return null;\n    }\n    const responseStatus = responseStatuses[vacancyId];\n    if (!responseStatus?.usedResumeIds?.length) {\n        return null;\n    }\n\n    const renderTopicStatus = () => {\n        if (resumeIdResponseStatuses === null) {\n            return null;\n        }\n        if (resumeIdResponseStatuses.invitedIds.length) {\n            return trls[TrlKeys.invited];\n        }\n        if (resumeIdResponseStatuses.discardedIds.length) {\n            return trls[TrlKeys.discarded];\n        }\n        return trls[TrlKeys.responded];\n    };\n\n    return (\n        <Gap bottom>\n            <div\n                className={classnames('vacancy-response', {\n                    'vacancy-response_invited': !!resumeIdResponseStatuses?.invitedIds?.length,\n                    'vacancy-response_header-mode': headerMode,\n                })}\n            >\n                <div className=\"vacancy-response__already-replied\">{renderTopicStatus()}</div>\n                <RespondButton\n                    vacancyId={vacancyId}\n                    unusedResumeIds={responseStatus.unusedResumeIds}\n                    hiddenResumeIds={responseStatus.hiddenResumeIds}\n                />\n            </div>\n        </Gap>\n    );\n};\n\nexport default translation(ResponseStatus);\n","import classnames from 'classnames';\n\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport IconDynamic from 'bloko/blocks/icon/IconDynamic';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport BlacklistMenu, { getTitle } from 'lux/components/VacancyView/BlacklistMenu';\nimport { BlacklistStatus } from 'lux/components/VacancyView/useBlacklistMenu';\n\nconst TrlKeys = {\n    blacklistAdd: 'pageControls.BlacklistAdd',\n    removeVacancy: 'pageControls.BlacklistRemoveVacancy',\n    removeEmployer: 'pageControls.BlacklistRemoveEmployer',\n};\n\ninterface VacancyActionBlacklistButtonProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyActionBlacklistButton: TranslatedComponent<VacancyActionBlacklistButtonProps> = ({ isRedesign, trls }) => {\n    const userType = useSelector((state) => state.userType);\n    const vacancyView = useSelector((state) => state.vacancyView);\n    const vacancyId = vacancyView.vacancyId;\n    const employerId = vacancyView.company?.id;\n    const vacancyType = vacancyView.type;\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n    if (userType !== UserType.Applicant || isBrandingPreview) {\n        return null;\n    }\n    const getDataQa = (status: BlacklistStatus, isLoading: boolean) => {\n        if (status === BlacklistStatus.Empty && !isLoading) {\n            return 'vacancy__blacklist-show-add';\n        }\n        if (status !== BlacklistStatus.Empty && !isLoading) {\n            return 'vacancy__blacklist-show-remove';\n        }\n        return undefined;\n    };\n    const renderIcon = (isBlacklisted: boolean) => {\n        return <Icon view={IconView.Eye} initial={IconColor.Gray50} crossed={!isBlacklisted} scale={IconScale.Small} />;\n    };\n    const getCommonProps = ({\n        status,\n        isLoading,\n        onClick,\n    }: {\n        status: BlacklistStatus;\n        isLoading: boolean;\n        onClick: () => void;\n    }) => {\n        return {\n            title: getTitle(status, {\n                blacklistAdd: trls[TrlKeys.blacklistAdd],\n                removeVacancy: trls[TrlKeys.removeVacancy],\n                removeEmployer: trls[TrlKeys.removeEmployer],\n            }),\n            'data-qa': getDataQa(status, isLoading),\n            onClick,\n            disabled: isLoading,\n        };\n    };\n    return (\n        <span className=\"vacancy-action\">\n            <BlacklistMenu\n                vacancyId={vacancyId}\n                employerId={employerId}\n                vacancyType={vacancyType}\n                checkInitialStatus\n                render={({ status, isLoading, onClick }) => {\n                    const isBlacklisted = [\n                        BlacklistStatus.BlacklistVacancy,\n                        BlacklistStatus.BlacklistEmployer,\n                    ].includes(status);\n                    return isRedesign ? (\n                        <button\n                            className=\"vacancy-action-blacklist-redesign vacancy-action-blacklist-redesign_appearance-outlined\"\n                            {...getCommonProps({\n                                status,\n                                isLoading,\n                                onClick,\n                            })}\n                        >\n                            <span\n                                className={classnames('vacancy-action-blacklist-icon-redesign', {\n                                    'vacancy-action-blacklist-icon-redesign_checked': isBlacklisted,\n                                })}\n                            />\n                        </button>\n                    ) : (\n                        <IconDynamic>\n                            <Button\n                                appearance={ButtonAppearance.Outlined}\n                                icon={renderIcon(isBlacklisted)}\n                                {...getCommonProps({\n                                    status,\n                                    isLoading,\n                                    onClick,\n                                })}\n                            />\n                        </IconDynamic>\n                    );\n                }}\n            />\n        </span>\n    );\n};\n\nexport default translation(VacancyActionBlacklistButton);\n","import classnames from 'classnames';\n\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Icon, { IconAppearance, IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport IconDynamic from 'bloko/blocks/icon/IconDynamic';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { getDataQa } from 'Modules/VacancyToFavorite';\nimport translation from 'lux/components/translation';\nimport useFavorite from 'lux/hooks/useFavorite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    add: 'hint.star',\n    remove: 'hint.starMirror',\n};\n\ninterface VacancyActionFavoriteProps {\n    constructorBrandedVacancy?: boolean;\n    isRedesign?: boolean;\n}\n\nconst VacancyActionFavorite: TranslatedComponent<VacancyActionFavoriteProps> = ({\n    constructorBrandedVacancy,\n    isRedesign,\n    trls,\n}) => {\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const employerId = useSelector(({ vacancyView }) => vacancyView.company.id);\n    const type = useSelector(({ vacancyView }) => vacancyView.type);\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n    const { isFavoriteVacancy, toggleIsFavoriteVacancy, isAvailableChangeFavoriteState } = useFavorite({\n        vacancyId,\n        employerId,\n        type,\n        isSendUxFeedback: true,\n    });\n    if (!isAvailableChangeFavoriteState && !isBrandingPreview) {\n        return null;\n    }\n    const renderIcon = () => {\n        let iconColor = constructorBrandedVacancy ? IconColor.White : IconColor.Gray50;\n        if (isFavoriteVacancy) {\n            iconColor = IconColor.Blue60;\n        }\n        return (\n            <Icon\n                view={IconView.Heart}\n                initial={iconColor}\n                appearance={isFavoriteVacancy ? IconAppearance.Filled : IconAppearance.Outlined}\n                scale={IconScale.Small}\n                data-qa=\"applicant-vacancy__favorite-add\"\n            />\n        );\n    };\n    const getKind = () => {\n        if (constructorBrandedVacancy) {\n            return ButtonKind.Inversed;\n        }\n        if (isRedesign) {\n            return ButtonKind.Success;\n        }\n        return undefined;\n    };\n    const commonProps = {\n        'data-qa': getDataQa(isFavoriteVacancy),\n        onClick: isBrandingPreview ? undefined : toggleIsFavoriteVacancy,\n        title: trls[isFavoriteVacancy ? TrlKeys.remove : TrlKeys.add],\n        disabled: isBrandingPreview,\n    };\n    return (\n        <span className=\"vacancy-action\">\n            <IconDynamic>\n                {isRedesign ? (\n                    <button\n                        className=\"vacancy-action-favorite-redesign vacancy-action-favorite-redesign_appearance-outlined\"\n                        {...commonProps}\n                    >\n                        <span\n                            className={classnames('vacancy-action-favorite-icon-redesign', {\n                                'vacancy-action-favorite-icon-redesign_checked': isFavoriteVacancy,\n                                'vacancy-action-favorite-icon-redesign_disabled': isBrandingPreview,\n                            })}\n                        />\n                    </button>\n                ) : (\n                    <Button\n                        appearance={ButtonAppearance.Outlined}\n                        kind={getKind()}\n                        icon={renderIcon()}\n                        {...commonProps}\n                    />\n                )}\n            </IconDynamic>\n        </span>\n    );\n};\n\nexport default translation(VacancyActionFavorite);\n","import { ReactNode, RefObject, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Button, { ButtonKind, ButtonAppearance, ButtonScale } from 'bloko/blocks/button';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SendFloodlightConversion from 'HH/SendFloodlightConversion';\nimport scrollToElement from 'Utils/ScrollToElement';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { vacancySetVisibilityContactsAction } from 'lux/models/vacancyView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyContactsDrop from 'lux/components/VacancyView/VacancyContactsDrop';\nimport useContactsAnalytics from 'lux/components/VacancyView/hooks/useContactsAnalytics';\n\nconst TrlKeys = {\n    showContacts: 'vacancy.action.showContacts',\n};\n\nconst SCROLL_TOP_OFFSET = -25;\n\ninterface VacancyActionShowContactsProps {\n    contactsNodeRef?: RefObject<HTMLDivElement>;\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    constructorBrandedVacancy?: boolean;\n    isRedesign?: boolean;\n}\n\nconst VacancyActionShowContacts: TranslatedComponent<VacancyActionShowContactsProps> = ({\n    contactsNodeRef,\n    vacancyBodyFooterNodeRef,\n    isRedesign,\n    constructorBrandedVacancy,\n    trls,\n}) => {\n    const contactInfo = useSelector((state) => state.vacancyView.contactInfo);\n    const isVisible = useSelector((state) => state.vacancyView.isVisibleContacts);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const employerId = useSelector((state) => state.vacancyView.company.id);\n    const userType = useSelector((state) => state.userType);\n    const dispatch = useDispatch();\n    const sendViewContactsAnalytics = useContactsAnalytics({\n        place: 'vacancy_top_button',\n    });\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n    const isAnonymousOnXs = userType === UserType.Anonymous && isXs;\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n\n    const showContactsHandler = useCallback(() => {\n        dispatch(vacancySetVisibilityContactsAction(true));\n        sendViewContactsAnalytics({\n            vacancyId,\n            employerId,\n            userType,\n        });\n        SendFloodlightConversion({\n            type: 'hh_co0',\n            cat: 'hh_bu0',\n        });\n        const contactsElement = contactsNodeRef?.current;\n        if (contactsElement && !isRedesign) {\n            scrollToElement(contactsElement, {\n                topOffset: SCROLL_TOP_OFFSET,\n                centered: false,\n            });\n        }\n    }, [dispatch, sendViewContactsAnalytics, vacancyId, employerId, userType, contactsNodeRef, isRedesign]);\n    const getKind = () => {\n        if (constructorBrandedVacancy) {\n            return ButtonKind.Inversed;\n        }\n        if (isRedesign) {\n            return ButtonKind.Success;\n        }\n        return undefined;\n    };\n    const renderContactsButton = () => (\n        <Button\n            appearance={ButtonAppearance.Outlined}\n            kind={getKind()}\n            scale={isRedesign ? ButtonScale.Large : undefined}\n            stretched\n            disabled={isBrandingPreview}\n            onClick={isBrandingPreview ? undefined : showContactsHandler}\n            data-qa=\"show-employer-contacts show-employer-contacts_top-button\"\n        >\n            {trls[TrlKeys.showContacts]}\n        </Button>\n    );\n\n    const renderWrapper = (content: ReactNode) => (\n        <div\n            className={classnames('vacancy-action vacancy-action_stretched', {\n                'vacancy-action_stretched-redesigned': isRedesign,\n            })}\n        >\n            {content}\n        </div>\n    );\n\n    if (isBrandingPreview) {\n        return renderWrapper(renderContactsButton());\n    }\n\n    if (!contactInfo || isAnonymousOnXs) {\n        return null;\n    }\n\n    return renderWrapper(\n        isRedesign ? (\n            <VacancyContactsDrop show={isVisible} vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} place=\"top\">\n                {renderContactsButton()}\n            </VacancyContactsDrop>\n        ) : (\n            renderContactsButton()\n        )\n    );\n};\n\nexport default translation(VacancyActionShowContacts);\n","import { RefObject } from 'react';\n\nimport Button, { ButtonKind, ButtonAppearance, ButtonType } from 'bloko/blocks/button';\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport Gap from 'bloko/blocks/gap';\nimport Icon, { IconAppearance, IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ResponseStatus from 'lux/components/VacancyView/ResponseStatus';\nimport VacancyActionBlacklist from 'lux/components/VacancyView/VacancyActionBlacklist';\nimport VacancyActionFavorite from 'lux/components/VacancyView/VacancyActionFavorite';\nimport VacancyActionResponse, { VacancyActionResponseKind } from 'lux/components/VacancyView/VacancyActionResponse';\nimport VacancyActionShowContacts from 'lux/components/VacancyView/VacancyActionShowContacts';\n\nconst TrlKeys = {\n    response: 'button.placeResponse',\n    showContacts: 'vacancy.action.showContacts',\n};\n\ninterface VacancyActionsProps {\n    contactsNodeRef?: RefObject<HTMLDivElement>;\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    resumeFormNodeRef?: RefObject<HTMLDivElement>;\n    constructorBrandedVacancy?: boolean;\n    isRedesign?: boolean;\n    hasWrapper?: boolean;\n}\n\nconst VacancyActions: TranslatedComponent<VacancyActionsProps> = ({\n    contactsNodeRef,\n    vacancyBodyFooterNodeRef,\n    resumeFormNodeRef,\n    constructorBrandedVacancy,\n    isRedesign,\n    hasWrapper = true,\n    trls,\n}) => {\n    const status = useSelector((state) => state.vacancyView.status);\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n    const userType = useSelector((state) => state.userType);\n    const isHidden =\n        !isBrandingPreview && (userType === UserType.Employer || userType === UserType.BackOffice || status.archived);\n    if (isHidden) {\n        return null;\n    }\n    const content =\n        isBrandingPreview && !isRedesign ? (\n            <Gap bottom>\n                <div className=\"template-preview-actions\">\n                    <div className=\"template-preview-actions__response\">\n                        <Button type={ButtonType.Button} kind={ButtonKind.Success} stretched>\n                            {trls[TrlKeys.response]}\n                        </Button>\n                    </div>\n                    <div className=\"template-preview-actions__contacts\">\n                        <Button\n                            type={ButtonType.Button}\n                            kind={constructorBrandedVacancy ? ButtonKind.Inversed : undefined}\n                            appearance={ButtonAppearance.Outlined}\n                            stretched\n                        >\n                            {trls[TrlKeys.showContacts]}\n                        </Button>\n                    </div>\n                    <FormSpacer>\n                        <Button\n                            kind={constructorBrandedVacancy ? ButtonKind.Inversed : undefined}\n                            appearance={ButtonAppearance.Outlined}\n                            type={ButtonType.Button}\n                            icon={\n                                <Icon\n                                    view={IconView.Heart}\n                                    initial={constructorBrandedVacancy ? IconColor.White : IconColor.Gray50}\n                                    appearance={IconAppearance.Outlined}\n                                    scale={IconScale.Small}\n                                />\n                            }\n                        />\n                    </FormSpacer>\n                </div>\n            </Gap>\n        ) : (\n            <>\n                {!constructorBrandedVacancy && <ResponseStatus />}\n                <div className=\"noprint\">\n                    <div className=\"vacancy-actions vacancy-actions_applicant\">\n                        <VacancyActionResponse\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            resumeFormNodeRef={resumeFormNodeRef}\n                            hasForceQuickResponse\n                            isRedesign={isRedesign}\n                            kind={VacancyActionResponseKind.Main}\n                        />\n                        <VacancyActionShowContacts\n                            contactsNodeRef={contactsNodeRef}\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            constructorBrandedVacancy={constructorBrandedVacancy}\n                            isRedesign={isRedesign}\n                        />\n                        <VacancyActionFavorite\n                            constructorBrandedVacancy={constructorBrandedVacancy}\n                            isRedesign={isRedesign}\n                        />\n                        <VacancyActionBlacklist isRedesign={isRedesign} />\n                    </div>\n                </div>\n            </>\n        );\n\n    if (!hasWrapper) {\n        return <>{content}</>;\n    }\n\n    return isRedesign ? (\n        content\n    ) : (\n        <ColumnsRow>\n            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                {content}\n                <VSpacing base={8} />\n            </Column>\n        </ColumnsRow>\n    );\n};\nexport default translation(VacancyActions);\n","import { FC } from 'react';\n\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\n\nconst VacancyAdditionalAccept: FC<Record<'icon' | 'text' | 'hint', string>> = ({ icon, text, hint }) => (\n    <div className=\"vacancy-icon-wrapper\">\n        <span className={`vacancy-icon vacancy-icon_accept-${icon}`} />\n        <span>\n            &nbsp;\n            {text}\n        </span>\n        &nbsp;\n        <span className=\"vacancy-noprint\">\n            <HoverTip placement={TipPlacement.Top} render={() => hint}>\n                <Icon view={IconView.QuestionMark} initial={IconColor.Gray50} scale={IconScale.Small} />\n            </HoverTip>\n        </span>\n    </div>\n);\n\nexport default VacancyAdditionalAccept;\n","import { DefaultRootState } from 'react-redux';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyAdditionalAccept from 'lux/components/VacancyView/VacancyAdditionalAccept';\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\nconst TrlKeys = {\n    acceptHandicapped: 'vacancy.view.acceptHandicapped',\n    acceptHandicappedHint: 'acceptHandicapped.info',\n    acceptKids: 'vacancy.view.acceptKids',\n    acceptKidsHint: 'acceptKids.info',\n};\n\nexport const checkVacancyAdditionalAcceptsRender = ({ vacancyView }: DefaultRootState): boolean =>\n    vacancyView['@acceptHandicapped'] || vacancyView['@acceptKids'];\ninterface VacancyAdditionalAcceptsProps {\n    hasVacancySectionWrapper?: boolean;\n    isRedesign: boolean;\n}\nconst VacancyAdditionalAccepts: TranslatedComponent<VacancyAdditionalAcceptsProps> = ({\n    isRedesign,\n    hasVacancySectionWrapper = true,\n    trls,\n}) => {\n    const acceptHandicapped = useSelector(({ vacancyView }) => vacancyView['@acceptHandicapped']);\n    const acceptKids = useSelector(({ vacancyView }) => vacancyView['@acceptKids']);\n    const showAdditionalAccepts = useSelector(checkVacancyAdditionalAcceptsRender) || !isRedesign;\n    if (!showAdditionalAccepts) {\n        return null;\n    }\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            {acceptHandicapped && (\n                <VacancyAdditionalAccept\n                    icon=\"handicapped\"\n                    text={trls[TrlKeys.acceptHandicapped]}\n                    hint={trls[TrlKeys.acceptHandicappedHint]}\n                />\n            )}\n            {acceptKids && (\n                <VacancyAdditionalAccept\n                    icon=\"kids\"\n                    text={trls[TrlKeys.acceptKids]}\n                    hint={trls[TrlKeys.acceptKidsHint]}\n                />\n            )}\n        </VacancySectionWrapper>\n    );\n};\n\nexport default translation(VacancyAdditionalAccepts);\n","import { FC } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\n\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyResponse from 'lux/components/VacancyView/VacancyResponse';\n\nexport const checkVacancyAnonymousResponseRender = (state: DefaultRootState): boolean => {\n    return [UserType.Anonymous, UserType.NedoUser].includes(state.userType);\n};\n\nexport interface VacancyAnonymousResponseProps {\n    isRedesign: boolean;\n}\n\nconst VacancyAnonymousResponse: FC<VacancyAnonymousResponseProps> = ({ isRedesign }) => {\n    const showResponse = useSelector(checkVacancyAnonymousResponseRender);\n\n    if (!showResponse) {\n        return null;\n    }\n\n    return (\n        <div className=\"noprint\">\n            <Column xs=\"4\" s=\"8\" m={isRedesign ? '12' : '8'} l={isRedesign ? '10' : '8'}>\n                <div className=\"vacancy-actions vacancy-actions_applicant\">\n                    <div className=\"vacancy-action vacancy-action_after-body\">\n                        <VacancyResponse isRedesign={isRedesign} />\n                    </div>\n                </div>\n            </Column>\n        </div>\n    );\n};\n\nexport default VacancyAnonymousResponse;\n","import { RefObject, FC } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport RespondedSuccess from 'lux/components/Applicant/Response/RespondedSuccess';\nimport { useIsHrZarplataDomain } from 'lux/hooks/useIsHrZarplataDomain';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const checkVacancyApplicantRespondedInfoRender = (state: DefaultRootState): boolean => {\n    if (![UserType.Applicant, UserType.NedoUser].includes(state.userType)) {\n        return false;\n    }\n\n    const vacancyId = state.vacancyView?.vacancyId;\n    const responseStatus = vacancyId ? state.applicantVacancyResponseStatuses?.[vacancyId] : undefined;\n    const alreadyResponded = (responseStatus?.usedResumeIds?.length || 0) > 0;\n\n    return !state.vacancyView.showResumeForm && alreadyResponded;\n};\n\ninterface VacancyApplicantRespondedInfoProps {\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    isRedesign: boolean;\n    withWrapper?: boolean;\n}\n\nconst VacancyApplicantRespondedInfo: FC<VacancyApplicantRespondedInfoProps> = ({\n    vacancyBodyFooterNodeRef,\n    isRedesign,\n    withWrapper,\n}) => {\n    const showRespondedInfo = useSelector(checkVacancyApplicantRespondedInfoRender);\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const topLevelSite = useSelector((state) => state.topLevelSite);\n    const isZarplataPlatform = useIsZarplataPlatform();\n    const isHrZarplataDomain = useIsHrZarplataDomain();\n    const isZarplataApplicant = isZarplataPlatform && !isHrZarplataDomain;\n    const showNewFooter = topLevelSite === TopLevelSite.RU || topLevelSite === TopLevelSite.BY || isZarplataApplicant;\n\n    if (!showRespondedInfo) {\n        return null;\n    }\n\n    const content = vacancyId && (\n        <div className=\"vacancy-actions_responded\">\n            <RespondedSuccess\n                vacancyId={vacancyId}\n                isRedesign={isRedesign}\n                {...(!showNewFooter && { defaultView: 'vacancybody' })}\n            />\n        </div>\n    );\n\n    return (\n        <>\n            <div ref={vacancyBodyFooterNodeRef} className=\"vacancy-actions-responded-scroll-target\" />\n            <div className=\"noprint\">\n                {withWrapper ? (\n                    <Column\n                        xs=\"4\"\n                        s={showNewFooter ? '7' : '8'}\n                        m={showNewFooter ? '7' : '8'}\n                        l={showNewFooter ? '7' : '10'}\n                    >\n                        <Gap top>{content}</Gap>\n                        <VSpacing base={4} />\n                    </Column>\n                ) : (\n                    <>{content}</>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default VacancyApplicantRespondedInfo;\n","import { FC, RefObject } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyResponse from 'lux/components/VacancyView/VacancyResponse';\n\nexport const checkVacancyApplicantResponseRender = (state: DefaultRootState): boolean => {\n    if (![UserType.Applicant, UserType.NedoUser].includes(state.userType)) {\n        return false;\n    }\n\n    const vacancyId = state.vacancyView?.vacancyId;\n    const responseStatus = vacancyId ? state.applicantVacancyResponseStatuses?.[vacancyId] : undefined;\n    const alreadyResponded = (responseStatus?.usedResumeIds?.length || 0) > 0;\n\n    return !state.vacancyView.showResumeForm && !alreadyResponded;\n};\n\ninterface VacancyApplicantResponseProps {\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    isRedesign: boolean;\n}\n\nconst VacancyApplicantResponse: FC<VacancyApplicantResponseProps> = ({ vacancyBodyFooterNodeRef, isRedesign }) => {\n    const showResponse = useSelector(checkVacancyApplicantResponseRender);\n    const topLevelSite = useSelector((store) => store.topLevelSite);\n\n    if (!showResponse) {\n        return null;\n    }\n\n    const showNewFooter = topLevelSite === TopLevelSite.RU || topLevelSite === TopLevelSite.BY;\n\n    return (\n        <div className=\"noprint\">\n            <Column xs=\"4\" s={showNewFooter ? '7' : '8'} m={showNewFooter ? '7' : '8'} l={showNewFooter ? '7' : '10'}>\n                <Gap top>\n                    <div className=\"vacancy-actions vacancy-actions_applicant\">\n                        <VacancyResponse\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            hideResponded={showNewFooter}\n                            isRedesign={isRedesign}\n                        />\n                    </div>\n                </Gap>\n            </Column>\n        </div>\n    );\n};\n\nexport default VacancyApplicantResponse;\n","import { FC, RefObject } from 'react';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport VacancyCompanyRedesigned from 'lux/components/VacancyView/VacancyCompanyRedesigned';\nimport VacancyVideo from 'lux/components/VacancyView/VacancyVideo';\n\nimport styles from './vacancy-block.less';\n\nconst VacancyBlockEmployer: FC<{ vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement> }> = ({\n    vacancyBodyFooterNodeRef,\n}) => {\n    return (\n        <ColumnsRow>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"6\">\n                <div className={styles.blockEmployer}>\n                    <div className={styles.wrapper}>\n                        <VacancyCompanyRedesigned />\n                    </div>\n                </div>\n                <VacancyVideo vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n            </Column>\n            <VSpacing base={14} xs={9} />\n        </ColumnsRow>\n    );\n};\n\nexport default VacancyBlockEmployer;\n","import classnames from 'classnames';\n\nimport { H1Section } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport HumanDate, { ShowYear } from 'lux/components/HumanDate';\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyCompensation from 'lux/components/VacancyView/VacancyCompensation';\n\nconst TrlKeys = {\n    archivedFrom: 'vacancy.view.archived.from',\n};\nconst VacancyTitleRedesigned: TranslatedComponent = ({ trls }) => {\n    const { status, name, validThroughTime } = useSelector((state) => state.vacancyView);\n    return (\n        <div\n            className={classnames('vacancy-title', {\n                'vacancy-title_archive': status.archived || status.disabled,\n            })}\n        >\n            <H1Section data-qa=\"vacancy-title\">\n                <AsyncHighlighter>{name}</AsyncHighlighter>\n            </H1Section>\n            {status.archived && validThroughTime && (\n                <Text strong size={TextSize.Small}>\n                    {trls[TrlKeys.archivedFrom]}\n                    {NON_BREAKING_SPACE}\n                    <HumanDate date={validThroughTime} showYear={ShowYear.Always} />\n                </Text>\n            )}\n            <VSpacing base={4} />\n            <VacancyCompensation isRedesign />\n        </div>\n    );\n};\n\nexport default translation(VacancyTitleRedesigned);\n","import { FC, RefObject, PropsWithChildren } from 'react';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport VacancyAcceptTemporary from 'lux/components/VacancyView/VacancyAcceptTemporary';\nimport VacancyActions from 'lux/components/VacancyView/VacancyActions';\nimport VacancyEmployment from 'lux/components/VacancyView/VacancyEmployment';\nimport VacancyOnlineUsersCounter from 'lux/components/VacancyView/VacancyOnlineUsersCounter';\nimport VacancyParttimeOptions from 'lux/components/VacancyView/VacancyParttimeOptions';\nimport VacancyTitleRedesigned from 'lux/components/VacancyView/VacancyTitleRedesigned';\nimport VacancyWorkExperience from 'lux/components/VacancyView/VacancyWorkExperience';\n\nimport styles from './vacancy-block.less';\n\nconst VacancyBlockTopWrapper: FC<PropsWithChildren & { hasWrapper: boolean }> = ({ children, hasWrapper }) => {\n    return hasWrapper ? (\n        <ColumnsRow>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"10\">\n                <div className={styles.wrapperFlat}>{children}</div>\n            </Column>\n            <VSpacing base={9} xs={6} />\n        </ColumnsRow>\n    ) : (\n        <>{children}</>\n    );\n};\n\ninterface VacancyBlockTopProps {\n    resumeFormNodeRef: RefObject<HTMLDivElement>;\n    contactsNodeRef: RefObject<HTMLDivElement>;\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    hasWrapper?: boolean;\n}\n\nconst VacancyBlockTop: FC<VacancyBlockTopProps> = ({\n    resumeFormNodeRef,\n    contactsNodeRef,\n    vacancyBodyFooterNodeRef,\n    hasWrapper = true,\n}) => {\n    return (\n        <VacancyBlockTopWrapper hasWrapper={hasWrapper}>\n            <VacancyTitleRedesigned />\n            <VSpacing base={5} />\n            <VacancyWorkExperience isRedesign />\n            <VacancyEmployment isRedesign />\n            <VacancyAcceptTemporary isRedesign />\n            <VacancyParttimeOptions isRedesign />\n            <div className=\"noprint\">\n                <VSpacing base={7} />\n                <VacancyOnlineUsersCounter isRedesign />\n                <VacancyActions\n                    contactsNodeRef={contactsNodeRef}\n                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    resumeFormNodeRef={resumeFormNodeRef}\n                    isRedesign\n                />\n            </div>\n        </VacancyBlockTopWrapper>\n    );\n};\n\nexport default VacancyBlockTop;\n","import { useLayoutEffect } from 'react';\nimport type { Primitive } from 'type-fest';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport { getPVRequestHeaders } from 'HHC/Banners';\nimport fetcher from 'lux/modules/fetcher';\n\nconst PLACE = '00000';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/pv/fake': {\n            body: void;\n            response: void;\n            queryParams: Record<string, Primitive | Primitive[]>;\n        };\n    }\n}\n\nconst useAdvInfoRequest = (): void => {\n    useLayoutEffect(() => {\n        const bannersBatchUrl = window.globalVars?.bannersBatchUrl;\n\n        if (bannersBatchUrl) {\n            const url = urlParser(bannersBatchUrl);\n\n            url.params.place = [PLACE];\n\n            void fetcher.post(`${url.protocol}//${url.host}/pv/fake` as '/pv/fake', undefined, {\n                withCredentials: true,\n                params: url.params,\n                headers: getPVRequestHeaders(),\n            });\n        }\n    }, []);\n};\n\nexport default useAdvInfoRequest;\n","import { FC, MutableRefObject, PropsWithChildren } from 'react';\n\nimport { Backplate, BackplateContentWrapper } from '@hh.ru/branding-packages';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport VacancyCompanyRedesigned from 'lux/components/VacancyView/VacancyCompanyRedesigned';\nimport VacancyVideo from 'lux/components/VacancyView/VacancyVideo';\n\ninterface SidebarProps {\n    vacancyBodyFooterNodeRef: MutableRefObject<HTMLDivElement>;\n}\n\nconst VideoVacancyWrapper: FC<PropsWithChildren> = ({ children }) => (\n    <>\n        <VSpacing base={7} xs={6} />\n        <Backplate forceStylesBackplate dropShadow>\n            <BackplateContentWrapper>{children}</BackplateContentWrapper>\n        </Backplate>\n    </>\n);\n\nconst Sidebar: FC<SidebarProps> = ({ vacancyBodyFooterNodeRef }) => {\n    return (\n        <>\n            <Backplate forceStylesBackplate dropShadow>\n                <BackplateContentWrapper>\n                    <VacancyCompanyRedesigned />\n                </BackplateContentWrapper>\n            </Backplate>\n            <VacancyVideo vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} Wrapper={VideoVacancyWrapper} />\n        </>\n    );\n};\nexport default Sidebar;\n","import { RefObject, FC } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport { ColumnsRow } from 'bloko/blocks/column';\n\nimport VacancyAnonymousResponse, {\n    checkVacancyAnonymousResponseRender,\n} from 'lux/components/VacancyView/VacancyAnonymousResponse';\nimport VacancyApplicantResponse, {\n    checkVacancyApplicantResponseRender,\n} from 'lux/components/VacancyView/VacancyApplicantResponse';\n\nexport const checkBetweenSectionsRender = (state: DefaultRootState): boolean =>\n    checkVacancyAnonymousResponseRender(state) || checkVacancyApplicantResponseRender(state);\n\nexport interface BetweenSectionsProps {\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    isRedesign: boolean;\n}\n\nconst BetweenSections: FC<BetweenSectionsProps> = ({ vacancyBodyFooterNodeRef, isRedesign }) => {\n    return (\n        <ColumnsRow>\n            <VacancyAnonymousResponse isRedesign={isRedesign} />\n            <VacancyApplicantResponse vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} isRedesign={isRedesign} />\n        </ColumnsRow>\n    );\n};\n\nexport default BetweenSections;\n","import { PropsWithChildren, FC, RefObject } from 'react';\n\nimport VacancyAcceptTemporary from 'lux/components/VacancyView/VacancyAcceptTemporary';\nimport VacancyActions from 'lux/components/VacancyView/VacancyActions';\nimport VacancyCompany from 'lux/components/VacancyView/VacancyCompany';\nimport VacancyEmployment from 'lux/components/VacancyView/VacancyEmployment';\nimport VacancyOnlineUsersCounter from 'lux/components/VacancyView/VacancyOnlineUsersCounter';\nimport VacancyParttimeOptions from 'lux/components/VacancyView/VacancyParttimeOptions';\nimport VacancyTitle from 'lux/components/VacancyView/VacancyTitle';\nimport VacancyWorkExperience from 'lux/components/VacancyView/VacancyWorkExperience';\n\ninterface EmployerViewTopProps {\n    resumeFormNodeRef: RefObject<HTMLDivElement>;\n    contactsNodeRef: RefObject<HTMLDivElement>;\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    hasWrapper?: boolean;\n}\n\nconst EmployerViewTop: FC<EmployerViewTopProps & PropsWithChildren> = ({\n    contactsNodeRef,\n    vacancyBodyFooterNodeRef,\n    resumeFormNodeRef,\n    hasWrapper,\n}) => {\n    return (\n        <>\n            <VacancyTitle hasWrapper={hasWrapper} />\n            <VacancyCompany hasWrapper={hasWrapper} />\n            <VacancyOnlineUsersCounter />\n            <VacancyActions\n                contactsNodeRef={contactsNodeRef}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                resumeFormNodeRef={resumeFormNodeRef}\n                hasWrapper={hasWrapper}\n            />\n            <VacancyWorkExperience />\n            <VacancyEmployment />\n            <VacancyAcceptTemporary />\n            <VacancyParttimeOptions />\n        </>\n    );\n};\n\nexport default EmployerViewTop;\n","import { ReactNode } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport { ExternalWidgetConfig } from '@hh.ru/branding-packages';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { MapperElementConfig } from 'lux/components/VacancyView/VacancyConstructor/external/externalWidgets.types';\n\nconst containsSameElements = (previous: unknown, next: unknown): boolean => {\n    if (!Array.isArray(next) || !Array.isArray(previous)) {\n        return false;\n    }\n    return previous.length === next.length && previous.every((element, index) => element === next[index]);\n};\n\nexport const useWidgetList = (\n    componentsCheckMap: string[],\n    MapWidgetToConfig: Record<string, MapperElementConfig>\n): ExternalWidgetConfig[] => {\n    const widgetConfigs = componentsCheckMap\n        .filter((item) => item in MapWidgetToConfig)\n        .map((item) => MapWidgetToConfig[item]);\n    const widgetConfigsToDisplay = useSelector(\n        (state): MapperElementConfig[] => widgetConfigs.filter(({ checkRender }) => !checkRender || checkRender(state)),\n        containsSameElements\n    );\n    return widgetConfigsToDisplay.map(({ checkRender, ...externalWidgetConfig }) => ({ ...externalWidgetConfig }));\n};\n\nconst getElementByWidgetNameFunction =\n    (widgetName: string, MapWidgetToConfig: Record<string, MapperElementConfig>) => (state: DefaultRootState) => {\n        if (widgetName in MapWidgetToConfig) {\n            const config = MapWidgetToConfig[widgetName];\n            const hasWidget = !config.checkRender || config.checkRender(state);\n            return hasWidget ? config.Element : null;\n        }\n        console.error('Incorrect name of the external widget');\n        return null;\n    };\n\ninterface UseExternalWidgetsResult {\n    firstSectionBottomItems: ExternalWidgetConfig[];\n    secondSectionBottomItems: ExternalWidgetConfig[];\n    betweenSections?: () => ReactNode;\n    vacancyBody?: () => ReactNode;\n    top?: () => ReactNode;\n}\n\ninterface UseExternalWidgetsArg {\n    firstSectionList: string[];\n    secondSectionList: string[];\n    betweenSectionsWidget: string;\n    vacancyBodyWidget: string;\n    MapWidgetToConfig: Record<string, MapperElementConfig>;\n    top: string;\n}\n\nconst useExternalWidget = (\n    widgetName: string,\n    MapWidgetToConfig: Record<string, MapperElementConfig>\n): (() => ReactNode) | undefined => {\n    const getElementByWidgetName = getElementByWidgetNameFunction(widgetName, MapWidgetToConfig);\n    const content = useSelector(getElementByWidgetName);\n    return content ? () => <>{content}</> : undefined;\n};\n\nexport const useExternalWidgets = (arg: UseExternalWidgetsArg): UseExternalWidgetsResult => {\n    const { firstSectionList, secondSectionList, betweenSectionsWidget, vacancyBodyWidget, MapWidgetToConfig, top } =\n        arg;\n    const betweenSections = useExternalWidget(betweenSectionsWidget, MapWidgetToConfig);\n    const vacancyBody = useExternalWidget(vacancyBodyWidget, MapWidgetToConfig);\n    const topContent = useExternalWidget(top, MapWidgetToConfig);\n    const firstSectionBottomItems = useWidgetList(firstSectionList, MapWidgetToConfig);\n    const secondSectionBottomItems = useWidgetList(secondSectionList, MapWidgetToConfig);\n    return {\n        firstSectionBottomItems,\n        secondSectionBottomItems,\n        betweenSections,\n        vacancyBody,\n        top: topContent,\n    };\n};\n\nexport default useExternalWidgets;\n","import { PropsWithChildren, FC } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport { FirstSectionFooterBlock } from '@hh.ru/branding-packages';\n\nimport VacancyCreationTime, { checkVacancyCreationTimeRender } from 'lux/components/VacancyView/VacancyCreationTime';\nimport { checkVacancyFooterRender } from 'lux/components/VacancyView/VacancyFooter';\nimport VacancyMap, { checkVacancyMapRender } from 'lux/components/VacancyView/VacancyMap';\nimport VacancySimilarResumes, {\n    checkVacancySimilarResumesRender,\n} from 'lux/components/VacancyView/VacancySimilarResumes';\n\nimport { MapperElementConfig } from 'lux/components/VacancyView/VacancyConstructor/external/externalWidgets.types';\nimport { useWidgetList } from 'lux/components/VacancyView/VacancyConstructor/external/useWidgetList';\n\nenum BlockName {\n    VacancyMap = 'VacancyMap',\n    VacancyCreationTime = 'VacancyCreationTime',\n    VacancySimilarResumes = 'VacancySimilarResumes',\n}\n\ninterface FirstSectionFooterProps {\n    isRedesign?: boolean;\n    hasWrapper?: boolean;\n}\n\nconst getMapBlockToConfig = (isRedesign: boolean, hasWrapper: boolean): Record<string, MapperElementConfig> => ({\n    [BlockName.VacancyMap]: {\n        Element: <VacancyMap isRedesign={isRedesign} hasVacancySectionWrapper={hasWrapper} />,\n        checkRender: checkVacancyMapRender,\n    },\n    [BlockName.VacancyCreationTime]: {\n        Element: <VacancyCreationTime isRedesign={isRedesign} />,\n        checkRender: (state: DefaultRootState) =>\n            checkVacancyCreationTimeRender(state) && checkVacancyFooterRender(state),\n    },\n    [BlockName.VacancySimilarResumes]: {\n        Element: <VacancySimilarResumes isRedesign={isRedesign} hasWrapper={hasWrapper} />,\n        checkRender: checkVacancySimilarResumesRender,\n    },\n});\n\nexport const checkFirstSectionFooterRender = (state: DefaultRootState): boolean =>\n    checkVacancyMapRender(state) ||\n    (checkVacancyCreationTimeRender(state) && checkVacancyFooterRender(state)) ||\n    checkVacancySimilarResumesRender(state);\n\nconst FirstSectionFooter: FC<FirstSectionFooterProps & PropsWithChildren> = ({ isRedesign, hasWrapper }) => {\n    const MapBlockToConfig = getMapBlockToConfig(!!isRedesign, !!hasWrapper);\n\n    const Blocklist = useWidgetList(Object.values(BlockName), MapBlockToConfig);\n\n    return (\n        <div>\n            {Blocklist.map(({ Element }, index) => (\n                <FirstSectionFooterBlock key={index}>{Element}</FirstSectionFooterBlock>\n            ))}\n        </div>\n    );\n};\n\nexport default FirstSectionFooter;\n","import { PropsWithChildren, FC } from 'react';\n\nimport { VacancyBodyBlock } from '@hh.ru/branding-packages';\n\nimport VacancyAdditionalAccepts, {\n    checkVacancyAdditionalAcceptsRender,\n} from 'lux/components/VacancyView/VacancyAdditionalAccepts';\nimport VacancyDescription from 'lux/components/VacancyView/VacancyDescription';\nimport VacancyDriverLicense, { checkVacancyDriverLicenseRender } from 'lux/components/VacancyView/VacancyDriverLicense';\nimport VacancyKeySkills, { checkVacancyKeySkillsRender } from 'lux/components/VacancyView/VacancyKeySkills';\nimport VacancySkillSurvey, { checkVacancySkillSurveyRender } from 'lux/components/VacancyView/VacancySkillSurvey';\n\nimport { MapperElementConfig } from 'lux/components/VacancyView/VacancyConstructor/external/externalWidgets.types';\nimport { useWidgetList } from 'lux/components/VacancyView/VacancyConstructor/external/useWidgetList';\n\nenum BlockName {\n    VacancyDescription = 'VacancyDescription',\n    VacancyAdditionalAccepts = 'VacancyAdditionalAccepts',\n    VacancyKeySkills = 'VacancyKeySkills',\n    VacancyDriverLicense = 'VacancyDriverLicense',\n    VacancySkillSurvey = 'VacancySkillSurvey',\n}\n\ninterface VacancyBodyProps {\n    isRedesign?: boolean;\n    hasWrapper?: boolean;\n}\n\nconst getMapBlockToConfig = (isRedesign: boolean, hasWrapper: boolean): Record<string, MapperElementConfig> => ({\n    [BlockName.VacancyDescription]: {\n        Element: <VacancyDescription hasVacancySectionWrapper={hasWrapper} />,\n    },\n    [BlockName.VacancyAdditionalAccepts]: {\n        Element: <VacancyAdditionalAccepts isRedesign={isRedesign} hasVacancySectionWrapper={hasWrapper} />,\n        checkRender: checkVacancyAdditionalAcceptsRender,\n    },\n    [BlockName.VacancyKeySkills]: {\n        Element: <VacancyKeySkills hasVacancySectionWrapper={hasWrapper} />,\n        checkRender: checkVacancyKeySkillsRender,\n    },\n    [BlockName.VacancyDriverLicense]: {\n        Element: <VacancyDriverLicense hasVacancySectionWrapper={hasWrapper} />,\n        checkRender: checkVacancyDriverLicenseRender,\n    },\n    [BlockName.VacancySkillSurvey]: {\n        Element: <VacancySkillSurvey hasVacancySectionWrapper={hasWrapper} />,\n        checkRender: checkVacancySkillSurveyRender,\n    },\n});\n\nconst VacancyBody: FC<VacancyBodyProps & PropsWithChildren> = ({ isRedesign, hasWrapper }) => {\n    const MapBlockToConfig = getMapBlockToConfig(!!isRedesign, !!hasWrapper);\n\n    const Blocklist = useWidgetList(Object.values(BlockName), MapBlockToConfig);\n\n    return (\n        <div>\n            {Blocklist.map(({ Element }, index) => (\n                <VacancyBodyBlock key={index}>{Element}</VacancyBodyBlock>\n            ))}\n        </div>\n    );\n};\n\nexport default VacancyBody;\n","import { MutableRefObject, useMemo } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport useBreakpoint from 'bloko/common/hooks/useBreakpoint';\n\nimport EmployerReviewsWidgetBig from 'lux/components/EmployerReviews/WidgetBig';\nimport employerReviewsWidgetCheckRender from 'lux/components/EmployerReviews/WidgetBig/checkRender';\nimport VacancyApplicantRespondedInfo, {\n    checkVacancyApplicantRespondedInfoRender,\n} from 'lux/components/VacancyView/VacancyApplicantRespondedInfo';\nimport Top from 'lux/components/VacancyView/VacancyBlock/Top';\nimport VacancyContacts from 'lux/components/VacancyView/VacancyContacts';\nimport checkVacancyContactsRender from 'lux/components/VacancyView/VacancyContacts/checkRender';\nimport VacancyResponseQuestions, {\n    checkVacancyResponseQuestionsRender,\n} from 'lux/components/VacancyView/VacancyResponseQuestions';\n\nimport BetweenSections, {\n    checkBetweenSectionsRender,\n} from 'lux/components/VacancyView/VacancyConstructor/external/BetweenSections';\nimport EmployerViewTop from 'lux/components/VacancyView/VacancyConstructor/external/EmployerViewTop';\nimport FirstSectionFooter, {\n    checkFirstSectionFooterRender,\n} from 'lux/components/VacancyView/VacancyConstructor/external/FirstSectionFooter';\nimport VacancyBody from 'lux/components/VacancyView/VacancyConstructor/external/VacancyBody';\nimport { MapperElementConfig } from 'lux/components/VacancyView/VacancyConstructor/external/externalWidgets.types';\n\nexport enum WidgetName {\n    EmployerReviewsWidgetBig = 'EmployerReviewsWidgetBig',\n    ApplicantRespondedInfo = 'ApplicantRespondedInfo',\n    VacancyContacts = 'VacancyContacts',\n    BetweenSections = 'BetweenSections',\n    VacancyResponseQuestions = 'VacancyResponseQuestions',\n    FirstSectionFooter = 'FirstSectionFooter',\n    VacancyBody = 'VacancyBody',\n    VacancyBlockTop = 'VacancyBlockTop',\n    EmployerViewTop = 'EmployerViewTop',\n}\n\ninterface UseMapWidgetToConfigArg {\n    vacancyBodyFooterNodeRef: MutableRefObject<HTMLDivElement>;\n    contactsNodeRef: MutableRefObject<HTMLDivElement>;\n    hasWrapper?: boolean;\n    isRedesign: boolean;\n    resumeFormNodeRef: MutableRefObject<HTMLDivElement>;\n}\n\nconst useMapWidgetToConfig = ({\n    isRedesign,\n    vacancyBodyFooterNodeRef,\n    contactsNodeRef,\n    hasWrapper = false,\n    resumeFormNodeRef,\n}: UseMapWidgetToConfigArg): Record<WidgetName, MapperElementConfig> => {\n    const breakpoint = useBreakpoint();\n    return useMemo(\n        () => ({\n            [WidgetName.EmployerReviewsWidgetBig]: {\n                Element: <EmployerReviewsWidgetBig isRedesign={isRedesign} hasWrapper={hasWrapper} />,\n                checkRender: employerReviewsWidgetCheckRender,\n            },\n            [WidgetName.ApplicantRespondedInfo]: {\n                Element: (\n                    <VacancyApplicantRespondedInfo\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        isRedesign={isRedesign}\n                    />\n                ),\n                checkRender: checkVacancyApplicantRespondedInfoRender,\n            },\n            [WidgetName.VacancyContacts]: {\n                Element: (\n                    <VacancyContacts\n                        isRedesign={isRedesign}\n                        blockRef={contactsNodeRef}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        hasVacancySectionWraper={hasWrapper}\n                    />\n                ),\n                checkRender: (state: DefaultRootState) => checkVacancyContactsRender(state, breakpoint),\n            },\n            [WidgetName.BetweenSections]: {\n                Element: (\n                    <BetweenSections isRedesign={isRedesign} vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                ),\n                checkRender: checkBetweenSectionsRender,\n            },\n            [WidgetName.VacancyResponseQuestions]: {\n                Element: (\n                    <VacancyResponseQuestions\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        hasButtomPadding={hasWrapper}\n                    />\n                ),\n                checkRender: checkVacancyResponseQuestionsRender,\n            },\n            [WidgetName.FirstSectionFooter]: {\n                Element: <FirstSectionFooter isRedesign={isRedesign} hasWrapper={hasWrapper} />,\n                checkRender: checkFirstSectionFooterRender,\n            },\n            [WidgetName.VacancyBody]: {\n                Element: <VacancyBody isRedesign={isRedesign} hasWrapper={hasWrapper} />,\n            },\n            [WidgetName.VacancyBlockTop]: {\n                Element: (\n                    <Top\n                        hasWrapper={hasWrapper}\n                        resumeFormNodeRef={resumeFormNodeRef}\n                        contactsNodeRef={contactsNodeRef}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    />\n                ),\n            },\n            [WidgetName.EmployerViewTop]: {\n                Element: (\n                    <EmployerViewTop\n                        resumeFormNodeRef={resumeFormNodeRef}\n                        contactsNodeRef={contactsNodeRef}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        hasWrapper={hasWrapper}\n                    />\n                ),\n            },\n        }),\n        [hasWrapper, isRedesign, contactsNodeRef, vacancyBodyFooterNodeRef, resumeFormNodeRef, breakpoint]\n    );\n};\n\nexport default useMapWidgetToConfig;\n\nexport const firstSectionList = [\n    WidgetName.VacancyContacts,\n    WidgetName.VacancyResponseQuestions,\n    WidgetName.FirstSectionFooter,\n];\nexport const secondSectionList = [WidgetName.EmployerReviewsWidgetBig, WidgetName.ApplicantRespondedInfo];\n","import { FC, MutableRefObject, PropsWithChildren, ReactNode } from 'react';\n\nimport { VacancyConstructorView, VacancyContainer } from '@hh.ru/branding-packages';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Sidebar from 'lux/components/VacancyView/VacancyConstructor/Sidebar';\nimport useMapWidgetToConfig, {\n    firstSectionList,\n    secondSectionList,\n    WidgetName,\n} from 'lux/components/VacancyView/VacancyConstructor/external/useMapWidgetToConfig';\nimport useExternalWidgets from 'lux/components/VacancyView/VacancyConstructor/external/useWidgetList';\n\ninterface VacancyConstructorProps {\n    VacancyContainer: VacancyContainer;\n    vacancyBodyFooterNodeRef: MutableRefObject<HTMLDivElement>;\n    contactsNodeRef: MutableRefObject<HTMLDivElement>;\n    resumeFormNodeRef: MutableRefObject<HTMLDivElement>;\n    isRedesign?: boolean;\n    isEmployerView: boolean;\n    ContainerWrapper: FC<PropsWithChildren>;\n    hideContent?: boolean;\n    hasTopPadding?: boolean;\n    renderSpoiler?: () => ReactNode;\n    beforeSections: () => ReactNode;\n}\n\nconst VacancyConstructor: FC<VacancyConstructorProps> = ({\n    VacancyContainer,\n    vacancyBodyFooterNodeRef,\n    contactsNodeRef,\n    resumeFormNodeRef,\n    isRedesign,\n    isEmployerView,\n    hasTopPadding,\n    ContainerWrapper,\n    hideContent,\n    renderSpoiler,\n    beforeSections,\n}) => {\n    const templateData = useSelector(({ vacancyView }) => vacancyView.branding);\n    const MapWidgetToConfig = useMapWidgetToConfig({\n        isRedesign: !!isRedesign,\n        vacancyBodyFooterNodeRef,\n        contactsNodeRef,\n        resumeFormNodeRef,\n    });\n\n    const { firstSectionBottomItems, secondSectionBottomItems, betweenSections, vacancyBody, top } = useExternalWidgets(\n        {\n            firstSectionList,\n            secondSectionList,\n            betweenSectionsWidget: WidgetName.BetweenSections,\n            vacancyBodyWidget: WidgetName.VacancyBody,\n            top: isEmployerView || !isRedesign ? WidgetName.EmployerViewTop : WidgetName.VacancyBlockTop,\n            MapWidgetToConfig,\n        }\n    );\n\n    if (!templateData) {\n        return null;\n    }\n\n    return (\n        <VacancyConstructorView\n            templateData={templateData}\n            VacancyContainer={VacancyContainer}\n            isRedesign={isRedesign}\n            topContent={top}\n            SidebarComponent={() => <Sidebar vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />}\n            hasTopPadding={hasTopPadding}\n            betweenSections={betweenSections}\n            ContainerWrapper={ContainerWrapper}\n            firstSectionBottomItems={firstSectionBottomItems}\n            secondSectionBottomItems={secondSectionBottomItems}\n            vacancyBody={vacancyBody}\n            hideContent={hideContent}\n            renderSpoiler={renderSpoiler}\n            beforeSections={beforeSections}\n        />\n    );\n};\n\nexport default VacancyConstructor;\n","import { BrandingType } from 'lux/models/vacancyView';\n\nexport interface BrandedPicture {\n    path: string;\n    blurredPath?: string;\n    width?: number;\n    height?: number;\n}\n\nexport interface VacancyConstructorTemplate {\n    name?: string;\n    topPicture?: BrandedPicture;\n    bottomPicture?: BrandedPicture;\n}\n\nexport const CHAMELEON_COLUMNS = { m: '9', l: '9' };\n\nexport const URL_TYPES = {\n    [BrandingType.Constructor]: 'vacancy-constructor',\n    [BrandingType.Chameleon]: 'makeup',\n};\n","import { useMemo } from 'react';\n\nimport { CHAMELEON_COLUMNS } from 'lux/components/VacancyView/brandingConstants';\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\n\nconst DEFAULT_COLUMN_PARAMS = {\n    xs: '4',\n    s: '8',\n    m: '8',\n    l: '10',\n};\n\nexport default () => {\n    const { isChameleon } = useBranding();\n\n    return useMemo(\n        () => ({\n            contentColumnParams: {\n                ...DEFAULT_COLUMN_PARAMS,\n                ...(isChameleon && CHAMELEON_COLUMNS),\n            },\n            bottomColumnParams: {\n                ...DEFAULT_COLUMN_PARAMS,\n                ...(isChameleon && CHAMELEON_COLUMNS),\n            },\n        }),\n        [isChameleon]\n    );\n};\n","import { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Column, { ColumnsRow, ColumnsWrapper } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport useAdvInfoRequest from 'lux/components/Banner/useAdvInfoRequest';\nimport LuxDividerRenderer from 'lux/components/CodeInjector/ContainerForXSL';\n\nimport VacancyDefaultContainer from 'lux/components/VacancyView/DefaultContainer';\nimport VacancySignUpBlock from 'lux/components/VacancyView/SignUpBlock';\nimport VacancyAcceptTemporary from 'lux/components/VacancyView/VacancyAcceptTemporary';\nimport VacancyActions from 'lux/components/VacancyView/VacancyActions';\nimport VacancyAdditionalAccepts from 'lux/components/VacancyView/VacancyAdditionalAccepts';\nimport VacancyBlockEmployer from 'lux/components/VacancyView/VacancyBlock/Employer';\nimport VacancyBlockTop from 'lux/components/VacancyView/VacancyBlock/Top';\nimport VacancyCompany from 'lux/components/VacancyView/VacancyCompany';\nimport VacancyConstructor from 'lux/components/VacancyView/VacancyConstructor';\nimport VacancyContacts from 'lux/components/VacancyView/VacancyContacts';\nimport VacancyDriverLicense from 'lux/components/VacancyView/VacancyDriverLicense';\nimport VacancyEmployment from 'lux/components/VacancyView/VacancyEmployment';\nimport VacancyFooter from 'lux/components/VacancyView/VacancyFooter';\nimport VacancyIsArchived from 'lux/components/VacancyView/VacancyIsArchived';\nimport VacancyKeySkills from 'lux/components/VacancyView/VacancyKeySkills';\nimport VacancyMap from 'lux/components/VacancyView/VacancyMap';\nimport VacancyOnlineUsersCounter from 'lux/components/VacancyView/VacancyOnlineUsersCounter';\nimport VacancyParttimeOptions from 'lux/components/VacancyView/VacancyParttimeOptions';\nimport VacancyPreviewTools from 'lux/components/VacancyView/VacancyPreviewTools';\nimport VacancyResponseQuestions from 'lux/components/VacancyView/VacancyResponseQuestions';\nimport VacancySimilarResumes from 'lux/components/VacancyView/VacancySimilarResumes';\nimport VacancySkillSurvey from 'lux/components/VacancyView/VacancySkillSurvey';\nimport VacancyTitle from 'lux/components/VacancyView/VacancyTitle';\nimport VacancyWorkExperience from 'lux/components/VacancyView/VacancyWorkExperience';\nimport useBranding from 'lux/components/VacancyView/hooks/useBranding';\nimport useIsVisibleBody from 'lux/components/VacancyView/hooks/useIsVisibleBody';\nimport useContentColumns from 'lux/components/VacancyView/useContentColumns';\n\nconst DefaultAdditionalWrapper = ({ columnParams, children }) => (\n    <ColumnsRow>\n        <Column {...columnParams}>{children}</Column>\n    </ColumnsRow>\n);\n\nconst DefaultDescriptionWrapper = ({ columnParams, children }) => (\n    <Column {...columnParams}>\n        <div className=\"vacancy-description-print\">{children}</div>\n    </Column>\n);\n\nconst VacancyBody = ({\n    status,\n    contactsNodeRef,\n    vacancyBodyFooterNodeRef,\n    isEmployerView,\n    bottomContent,\n    isRedesign,\n    CustomColumnsWrapper = ColumnsWrapper,\n    DescriptionWrapper = DefaultDescriptionWrapper,\n    AdditionalWrapper = DefaultAdditionalWrapper,\n    hasTopPadding,\n}) => {\n    const resumeFormNodeRef = useRef();\n    const { isVisibleBody, setIsVisibleBody } = useIsVisibleBody();\n    const { contentColumnParams, bottomColumnParams } = useContentColumns();\n    const branding = useBranding();\n\n    useAdvInfoRequest();\n\n    if (branding.isChameleon) {\n        return (\n            <VacancyDefaultContainer\n                ContainerWrapper={CustomColumnsWrapper}\n                isChameleonEmployerView={isEmployerView}\n                isRedesign={isRedesign}\n                rightColumn={\n                    isRedesign && (\n                        <Column xs=\"0\" s=\"0\" m=\"0\" l=\"6\" container>\n                            <div className=\"noprint\">\n                                <VacancyBlockEmployer vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                            </div>\n                        </Column>\n                    )\n                }\n            >\n                {isRedesign && (\n                    <>\n                        <VacancyBlockTop\n                            resumeFormNodeRef={resumeFormNodeRef}\n                            contactsNodeRef={contactsNodeRef}\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        />\n                        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"0\" container>\n                            <VacancyBlockEmployer vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                        </Column>\n                    </>\n                )}\n                {!isRedesign && (\n                    <>\n                        <VacancyTitle />\n                        <VacancyCompany />\n                        <VacancyOnlineUsersCounter />\n                        <VacancyActions\n                            contactsNodeRef={contactsNodeRef}\n                            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                            resumeFormNodeRef={resumeFormNodeRef}\n                        />\n                    </>\n                )}\n                <VacancyIsArchived isHiddenSwitcher={isVisibleBody} setVisibilityBody={setIsVisibleBody} />\n                <VacancySignUpBlock blockRef={vacancyBodyFooterNodeRef} />\n                {isVisibleBody && (\n                    <>\n                        <div className=\"vacancy-description\">\n                            <DescriptionWrapper columnParams={contentColumnParams}>\n                                {!isRedesign && (\n                                    <Gap bottom>\n                                        <VacancyWorkExperience />\n                                        <VacancyEmployment />\n                                        <VacancyAcceptTemporary />\n                                        <VacancyParttimeOptions />\n                                    </Gap>\n                                )}\n                                <LuxDividerRenderer place=\"vacancy-branded-xsl\" styleClass=\"vacancy-section\" />\n                            </DescriptionWrapper>\n                            <AdditionalWrapper columnParams={bottomColumnParams}>\n                                <VacancyAdditionalAccepts isRedesign={isRedesign} />\n                                <VacancyKeySkills />\n                                <VacancyDriverLicense />\n                                <VacancySkillSurvey />\n                                <VacancyContacts\n                                    isRedesign={isRedesign}\n                                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                                    blockRef={contactsNodeRef}\n                                />\n                                <VacancyResponseQuestions vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} />\n                                <VacancyMap isRedesign={isRedesign} />\n                                <VacancyPreviewTools />\n                                <VacancySimilarResumes />\n                            </AdditionalWrapper>\n                        </div>\n                        <ColumnsRow>\n                            <VacancyFooter\n                                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                                isRedesign={isRedesign}\n                            />\n                        </ColumnsRow>\n                    </>\n                )}\n                {bottomContent}\n            </VacancyDefaultContainer>\n        );\n    }\n\n    const isNotShowArchiveBlock = !status.archived && !status.disabled;\n\n    const renderSpoiler = isNotShowArchiveBlock\n        ? undefined\n        : () => (\n              <VacancyIsArchived\n                  isHiddenSwitcher={isVisibleBody}\n                  setVisibilityBody={setIsVisibleBody}\n                  hasVacancySectionWrapper={false}\n              />\n          );\n    const signUpBlock = () => <VacancySignUpBlock isBrandingConstructor blockRef={vacancyBodyFooterNodeRef} />;\n    return (\n        <VacancyConstructor\n            VacancyContainer={VacancyDefaultContainer}\n            ContainerWrapper={CustomColumnsWrapper}\n            vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n            resumeFormNodeRef={resumeFormNodeRef}\n            isEmployerView={isEmployerView}\n            hasTopPadding={!!hasTopPadding}\n            isRedesign={isRedesign}\n            hideContent={!isVisibleBody}\n            renderSpoiler={renderSpoiler}\n            beforeSections={signUpBlock}\n        />\n    );\n};\n\nDefaultDescriptionWrapper.propTypes = {\n    children: PropTypes.node,\n    columnParams: PropTypes.object,\n};\n\nDefaultAdditionalWrapper.propTypes = {\n    children: PropTypes.node,\n    columnParams: PropTypes.object,\n};\n\nVacancyBody.propTypes = {\n    status: PropTypes.shape({\n        archived: PropTypes.bool,\n        disabled: PropTypes.bool,\n    }),\n    contactsNodeRef: PropTypes.object,\n    vacancyBodyFooterNodeRef: PropTypes.object,\n    isEmployerView: PropTypes.bool,\n    CustomColumnsWrapper: PropTypes.func,\n    DescriptionWrapper: PropTypes.func,\n    AdditionalWrapper: PropTypes.func,\n    isRedesign: PropTypes.bool,\n    bottomContent: PropTypes.node,\n    hasTopPadding: PropTypes.bool,\n};\n\nexport default connect(({ vacancyView }) => ({\n    status: vacancyView.status,\n}))(VacancyBody);\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './employer-badges.less';\n\ninterface Badge {\n    type: string;\n    url: string;\n    description: string | string[];\n    dataQASpecific?: string[];\n}\n\ninterface EmployerBadgeProps {\n    badge: Badge;\n    dataQA?: string;\n}\n\nconst EmployerBadge: FC<EmployerBadgeProps & PropsWithChildren> = ({ badge, dataQA }) => {\n    const userType = useSelector((state) => state.userType);\n    const urlParams = `?utm_source=hh.ru&utm_medium=referral&utm_campaign=badge&utm_term=${userType}`;\n\n    const employerBadgeDescription = () => {\n        if (typeof badge.description === 'string') {\n            return <span>{badge.description}</span>;\n        }\n        return badge.description.map((str, index) => <span key={index}>{str}</span>);\n    };\n\n    const preparedDataQA = () => {\n        let fullDataQA = '';\n        if (dataQA) {\n            const dataQAWithType = `${dataQA}${badge.type}`;\n            fullDataQA += dataQAWithType;\n            if (badge.dataQASpecific) {\n                badge.dataQASpecific.forEach((spec) => {\n                    fullDataQA += ` ${dataQAWithType}__${spec}`;\n                });\n            }\n        }\n        return fullDataQA;\n    };\n\n    const iconClass = `icon${badge.type\n        .split('-')\n        .map((part) => part.charAt(0).toUpperCase() + part.slice(1))\n        .join('')}`;\n\n    return (\n        <>\n            <div className={styles.badge}>\n                <Link to={`${badge.url}${urlParams}`} rel=\"nofollow noindex\" data-qa={preparedDataQA()}>\n                    <span className={styles.wrapper}>\n                        <span className={classnames(styles.icon, styles[iconClass])}></span>\n                        <span className={styles.description}>{employerBadgeDescription()}</span>\n                    </span>\n                </Link>\n            </div>\n            <VSpacing base={2} />\n        </>\n    );\n};\n\nexport default EmployerBadge;\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { Badge, HrBrand, BadgeType } from 'lux/models/vacancyView.types';\n\nimport EmployerBadge from 'lux/components/EmployerBadges/EmployerBadge';\n\nconst TrlKeys = {\n    winners: 'employer.page.hrbrand.winner',\n    nominees: 'employer.page.hrbrand.nominee',\n};\n\ninterface Badges {\n    badge: Badge[];\n}\n\ninterface PrepareEmployerBadgesProps {\n    badges?: Badges;\n    hrBrand?: HrBrand;\n    dataQA?: string;\n}\n\nconst PrepareEmployerBadges: TranslatedComponent<PrepareEmployerBadgesProps> = ({ badges, hrBrand, dataQA, trls }) => {\n    const preparedBages: Badges = { badge: [] };\n    if (hrBrand) {\n        const description: string[] = [];\n        const dataQASpecific: string[] = [];\n        Object.keys(hrBrand).forEach((hrBrandType) => {\n            const year = hrBrand[hrBrandType]['@year'];\n            description.push(`${trls[TrlKeys[hrBrandType]]}${year ? ` ${year}` : ''}`);\n            if (dataQA) {\n                dataQASpecific.push(hrBrandType);\n            }\n        });\n        const newBadge = {\n            type: BadgeType.HrBrand,\n            url: hrBrand?.nominees?.['@url'] || hrBrand?.winners?.['@url'],\n            description,\n            dataQASpecific,\n        };\n        preparedBages.badge.push(newBadge);\n    }\n\n    return (\n        <>\n            {badges?.badge\n                .filter((badgeItem) => badgeItem.type === 'employer-hh-rating')\n                .map((badge) => (\n                    <EmployerBadge key={badge.type} badge={badge} dataQA={dataQA} />\n                ))}\n            {preparedBages.badge.map((badge) => (\n                <EmployerBadge key={badge.type} badge={badge} dataQA={dataQA} />\n            ))}\n        </>\n    );\n};\n\nexport default translation(PrepareEmployerBadges);\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport Icon, { IconKind, IconScale, IconView, IconAppearance, IconShape } from 'bloko/blocks/icon';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport PrepareEmployerBadges from 'lux/components/EmployerBadges/PrepareEmployerBadges';\nimport EmployerReviewsWidgetSmall from 'lux/components/EmployerReviews/WidgetSmall';\nimport InsiderInterviewLink from 'lux/components/InsiderInterviewLink';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyCompanyAddress from 'lux/components/VacancyView/VacancyCompanyAddress';\nimport VacancyCompanyLogo from 'lux/components/VacancyView/VacancyCompanyLogo';\nimport VacancyCompanyName from 'lux/components/VacancyView/VacancyCompanyName';\nimport useCompanyLogo from 'lux/components/VacancyView/hooks/useCompanyLogo';\n\nconst ReviewWidgetWrapper: FC<PropsWithChildren> = ({ children }) => (\n    <>\n        <VSpacing base={4} />\n        {children}\n    </>\n);\n\ninterface VacancyCompanyProps {\n    constructorBrandedVacancy?: boolean;\n    hasWrapper?: boolean;\n}\n\nconst VacancyCompany: FC<VacancyCompanyProps> = ({ constructorBrandedVacancy, hasWrapper = true }) => {\n    const insider = useSelector(({ vacancyView }) => vacancyView.insider);\n    const { id: companyId, badges } = useSelector(({ vacancyView }) => vacancyView.company);\n    const hrBrand = useSelector(({ vacancyView }) => vacancyView['hr-brand']);\n    const trusted = useSelector(({ vacancyView }) => vacancyView.company['@trusted']);\n    const companyLogo = useCompanyLogo();\n    const insiderInterview = companyId ? (\n        <InsiderInterviewLink\n            className=\"vacancy-insider\"\n            insider={insider}\n            companyId={companyId}\n            renderIcon={() => (\n                <span className=\"vacancy-insider__icon\">\n                    <Icon\n                        view={IconView.Bubble}\n                        kind={IconKind.Double}\n                        appearance={IconAppearance.Outlined}\n                        shape={IconShape.Round}\n                        scale={IconScale.Small}\n                    />\n                </span>\n            )}\n        />\n    ) : null;\n\n    const breakpoint = useBreakpoint(Breakpoint.L);\n    const isZarplata = useIsZarplataPlatform();\n    const showCompanyLogo = !constructorBrandedVacancy || (constructorBrandedVacancy && breakpoint === Breakpoint.XS);\n    const showReviewsWidget =\n        trusted && (!constructorBrandedVacancy || (constructorBrandedVacancy && breakpoint !== Breakpoint.XS));\n\n    const vacancyCompanyContent = (\n        <div className=\"vacancy-company-wrapper\">\n            <div\n                className={classnames('vacancy-company', {\n                    'vacancy-company_branded-with-logo': constructorBrandedVacancy && companyLogo,\n                    'vacancy-company_with-logo': !constructorBrandedVacancy && companyLogo,\n                })}\n                data-qa=\"vacancy-company\"\n            >\n                <div className=\"vacancy-company-top\">\n                    <div className=\"vacancy-company-top-details\">\n                        <VacancyCompanyName constructorBrandedVacancy={constructorBrandedVacancy} />\n                        {showReviewsWidget && <EmployerReviewsWidgetSmall Wrapper={ReviewWidgetWrapper} />}\n                        <VSpacing base={4} />\n                        <PrepareEmployerBadges badges={badges} hrBrand={hrBrand} dataQA={'vacancy-'} />\n                        <VSpacing base={2} />\n                        <VacancyCompanyAddress\n                            WrapperComponent={\n                                isZarplata\n                                    ? ({ children }) => <Text data-qa=\"vacancy-view-location\">{children}</Text>\n                                    : undefined\n                            }\n                        />\n                        <VSpacing base={8} />\n                        {insiderInterview}\n                    </div>\n                    {showCompanyLogo && <VacancyCompanyLogo constructorBrandedVacancy={constructorBrandedVacancy} />}\n                </div>\n            </div>\n        </div>\n    );\n\n    if (!hasWrapper) {\n        return <>{vacancyCompanyContent}</>;\n    }\n\n    return (\n        <>\n            <ColumnsRow>\n                {constructorBrandedVacancy ? (\n                    <Column xs=\"4\" s=\"6\" m=\"8\" l=\"10\">\n                        {vacancyCompanyContent}\n                    </Column>\n                ) : (\n                    <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                        {vacancyCompanyContent}\n                    </Column>\n                )}\n            </ColumnsRow>\n        </>\n    );\n};\n\nexport default VacancyCompany;\n","import { FC, Fragment } from 'react';\n\nimport MetroPoint from 'lux/components/MetroPoint';\nimport { VacancyViewMetroStation } from 'lux/models/vacancyView.types';\n\ninterface MetroListProps {\n    metroList?: Pick<VacancyViewMetroStation, 'name' | 'line'>[];\n    small?: boolean;\n}\n\nconst MetroList: FC<MetroListProps> = ({ metroList, small }) => {\n    return (\n        <>\n            {metroList?.map((metro, index) => (\n                <Fragment key={index}>\n                    {index !== 0 && ', '}\n                    <MetroPoint name={metro.name} color={metro?.line?.color} small={small} />\n                </Fragment>\n            ))}\n        </>\n    );\n};\n\nexport default MetroList;\n","import { ComponentType, ReactNode, FC } from 'react';\n\nimport addressMapButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/address_map_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport MetroList from 'lux/components/MetroList';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface DefaultWrapperComponentProps {\n    children: ReactNode;\n    archived?: boolean;\n    vacancyLink: string;\n    isRedesign?: boolean;\n}\n\nconst DefaultWrapperComponent: FC<DefaultWrapperComponentProps> = ({ children, vacancyLink, archived, isRedesign }) => {\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const address = useSelector(({ vacancyView }) => vacancyView.address);\n    const mapDisabled = useSelector(({ vacancyView }) => vacancyView.mapDisabled);\n    const mapDataAvailable = !!address?.mapData?.points;\n\n    const onClick = () => {\n        if (!vacancyId) {\n            return;\n        }\n        addressMapButtonClick({ hhtmSourceLabel: 'vacancy_top_button', vacancyId });\n    };\n\n    if (mapDataAvailable && !mapDisabled && !archived) {\n        return (\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to={`${vacancyLink}${vacancyId || ''}`}\n                target=\"_blank\"\n                data-qa=\"vacancy-view-link-location\"\n                kind={isRedesign ? LinkKind.Tertiary : undefined}\n                onClick={onClick}\n            >\n                {!isRedesign && <i className=\"icon-pin icon-pin_vacancy-address\" />}\n                {children}\n            </BlokoLink>\n        );\n    }\n    return <p data-qa=\"vacancy-view-location\">{children}</p>;\n};\n\nconst TrlKeys = {\n    noArea: 'vacancy.noArea',\n    manyArea: 'vacancy.manyArea',\n};\n\ninterface VacancyCompanyAddressProps {\n    WrapperComponent?: ComponentType<DefaultWrapperComponentProps>;\n    isRedesign?: boolean;\n}\n\nconst VacancyCompanyAddress: TranslatedComponent<VacancyCompanyAddressProps> = ({\n    WrapperComponent = DefaultWrapperComponent,\n    trls,\n    isRedesign,\n}) => {\n    const area = useSelector((state) => state.vacancyView.area);\n    const address = useSelector((state) => state.vacancyView.address);\n    const multi = useSelector((state) => state.vacancyView.multi);\n    const archived = useSelector((state) => state.vacancyView?.status?.archived);\n    const vacancyLink = useSelector((state) => state.vacancyView.vacancyOnMapLink);\n    const metroList = address?.metroStations?.metro;\n\n    const renderAddressContent = () => {\n        if (area?.name && !address?.city && !address?.street && !address?.mapData) {\n            if (multi) {\n                return trls[TrlKeys.manyArea];\n            }\n            if (area.name) {\n                return (\n                    <>\n                        {area.name}\n                        {metroList && (\n                            <>\n                                {', '}\n                                <MetroList metroList={metroList} />\n                            </>\n                        )}\n                    </>\n                );\n            }\n            return trls[TrlKeys.noArea];\n        }\n\n        if (address?.city || address?.street || address?.mapData) {\n            if (address.city) {\n                let addressDetail;\n                if (address.street) {\n                    addressDetail = `, ${[address.street, address.building].filter(Boolean).join(', ')}`;\n                } else if (address.rawAddress) {\n                    // старая логика, сейчас rawAddress deprecated на бекенде,\n                    // оставляю для сохранения вывода адресов, которые были заведены давно\n                    addressDetail = `, ${address.rawAddress}`;\n                } else if (address.building) {\n                    // случай когда в city пришло название деревни, а в building - дом\n                    addressDetail = `, ${address.building}`;\n                }\n\n                return (\n                    <span data-qa=\"vacancy-view-raw-address\">\n                        {isRedesign && address.city}\n                        {metroList && (\n                            <>\n                                {isRedesign && ', '}\n                                <MetroList metroList={metroList} />\n                                {!isRedesign && ', '}\n                            </>\n                        )}\n                        {!isRedesign && address.city}\n                        {addressDetail}\n                    </span>\n                );\n            }\n            return <span data-qa=\"vacancy-view-raw-address\">{address.rawAddress}</span>;\n        }\n\n        return null;\n    };\n    const addressContent = renderAddressContent();\n    return addressContent ? (\n        <WrapperComponent vacancyLink={vacancyLink} archived={archived} isRedesign={isRedesign}>\n            {addressContent}\n        </WrapperComponent>\n    ) : null;\n};\n\nexport default translation(VacancyCompanyAddress);\n","import { FC, MouseEventHandler, useCallback } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport SendHHAnalytics from 'HH/SendHHAnalytics';\nimport CdnImg from 'lux/components/CdnImg';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport useCompanyLogo from 'lux/components/VacancyView/hooks/useCompanyLogo';\nimport usePreview from 'lux/components/VacancyView/hooks/usePreview';\n\ninterface VacancyCompanyLogoProps {\n    constructorBrandedVacancy?: boolean;\n    isRedesign?: boolean;\n    noPrint?: boolean;\n}\n\nconst VacancyCompanyLogo: FC<VacancyCompanyLogoProps> = ({ constructorBrandedVacancy, isRedesign, noPrint }) => {\n    const companyId = useSelector((state) => state.vacancyView.company.id);\n    const companyName = useSelector((state) => state.vacancyView.company.name);\n    const request = useSelector((state) => state.request);\n    const companyLogo = useCompanyLogo();\n    const isPreview = usePreview(request.url);\n\n    const logoOnClick = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n        (event) => {\n            if (isPreview) {\n                event.preventDefault();\n                return;\n            }\n            void SendHHAnalytics({ data: { goal: 'vacancy-company-logo' } });\n        },\n        [isPreview]\n    );\n\n    if (!companyLogo) {\n        return null;\n    }\n\n    return (\n        <>\n            <div\n                className={\n                    isRedesign\n                        ? 'vacancy-company-logo-redesigned'\n                        : classnames('vacancy-company-logo', {\n                              'vacancy-company-logo_vacancyconstructor': constructorBrandedVacancy,\n                              'vacancy-company-logo_no-print': noPrint,\n                          })\n                }\n            >\n                <Link to={`/employer/${companyId || ''}`} onClick={logoOnClick}>\n                    <CdnImg\n                        loading=\"lazy\"\n                        path={companyLogo['@url']}\n                        alt={companyName}\n                        className={\n                            isRedesign\n                                ? 'vacancy-company-logo-image-redesigned'\n                                : classnames('vacancy-company-logo__image', {\n                                      'vacancy-company-logo__image_vacancyconstructor': constructorBrandedVacancy,\n                                  })\n                        }\n                    />\n                </Link>\n            </div>\n            {isRedesign && <VSpacing base={4} />}\n        </>\n    );\n};\n\nexport default VacancyCompanyLogo;\n","import { useMemo, useCallback, FC, MouseEventHandler } from 'react';\n\nimport employerButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/employer_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H2Section } from 'bloko/blocks/header';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\nimport ItAccreditation from 'lux/components/Employer/ItAccreditation';\nimport OrganizationForm from 'lux/components/Employer/OrganizationForm';\nimport TrustedEmployerCheck from 'lux/components/Employer/TrustedEmployerCheck';\nimport EmployerBadgesIconWrapper from 'lux/components/EmployerBadges/EmployerBadgesIconWrapper';\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport { Platform } from 'lux/models/locale.types';\nimport { BillingPlatform } from 'lux/models/price/product.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport usePreview from 'lux/components/VacancyView/hooks/usePreview';\n\ninterface VacancyCompanyNameProps {\n    constructorBrandedVacancy?: boolean;\n    isRedesign?: boolean;\n}\n\nconst VacancyCompanyName: FC<VacancyCompanyNameProps> = ({ constructorBrandedVacancy, isRedesign }) => {\n    const company = useSelector((state) => state.vacancyView.company);\n    const request = useSelector((state) => state.request);\n    const isCrossposted = useSelector(\n        (state) =>\n            state.locale.platform === Platform.Zarplata &&\n            state.vacancyView.platforms.includes(BillingPlatform.HH) &&\n            state.vacancyView.platforms.includes(BillingPlatform.ZP)\n    );\n    const isPreview = usePreview(request.url);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId);\n    const companyNameOnClick = useCallback<MouseEventHandler<HTMLAnchorElement>>(\n        (event) => {\n            if (isPreview) {\n                event.preventDefault();\n                return;\n            }\n            if (vacancyId) {\n                employerButtonClick({ vacancyId });\n            }\n        },\n        [isPreview, vacancyId]\n    );\n\n    const { id, visibleName, employerOrganizationFormId, department } = company;\n    const renderCompanyName = useMemo(() => {\n        if (id) {\n            if (isCrossposted) {\n                return (\n                    <H2Section Element=\"span\" lite>\n                        <OrganizationForm organizationFormId={employerOrganizationFormId} />\n                        <AsyncHighlighter>{visibleName}</AsyncHighlighter>\n                    </H2Section>\n                );\n            }\n\n            let companyHref = `/employer/${id}`;\n            if (department) {\n                companyHref += `?dpt=${department?.['@code']}`;\n            }\n\n            return (\n                <span className=\"vacancy-company-name\">\n                    <BlokoLink\n                        Element={Link}\n                        data-qa=\"vacancy-company-name\"\n                        to={companyHref}\n                        onClick={companyNameOnClick}\n                        kind={isRedesign ? LinkKind.Tertiary : undefined}\n                    >\n                        <H2Section Element=\"span\" lite>\n                            <OrganizationForm organizationFormId={employerOrganizationFormId} />\n                            <AsyncHighlighter>{visibleName}</AsyncHighlighter>\n                        </H2Section>\n                    </BlokoLink>\n                </span>\n            );\n        }\n\n        return (\n            <AsyncHighlighter>\n                <span className=\"vacancy-company-name\">\n                    {isRedesign ? (\n                        <H2Section Element=\"span\" lite>\n                            {visibleName}\n                        </H2Section>\n                    ) : (\n                        visibleName\n                    )}\n                </span>\n            </AsyncHighlighter>\n        );\n    }, [id, visibleName, isCrossposted, department, companyNameOnClick, isRedesign, employerOrganizationFormId]);\n\n    return (\n        <div data-qa=\"vacancy-company__details\" className=\"vacancy-company-details\">\n            {renderCompanyName}\n            <EmployerBadgesIconWrapper>\n                {company['@trusted'] && (\n                    <TrustedEmployerCheck\n                        isInverted={!isRedesign && constructorBrandedVacancy}\n                        isServiceIcon={isRedesign}\n                    />\n                )}\n                {company.accreditedITEmployer && (\n                    <ItAccreditation isInverted={!isRedesign && constructorBrandedVacancy} />\n                )}\n            </EmployerBadgesIconWrapper>\n        </div>\n    );\n};\n\nexport default VacancyCompanyName;\n","// extracted by mini-css-extract-plugin\nexport default {\"employerCardsWrapper\":\"employer-cards-wrapper--HjinF4PUlkgkJNN6kCRG\",\"employerCardsScrollbox\":\"employer-cards-scrollbox--Jb2GHpXNGnHt7M_CiC7o\",\"employerCardsSlider\":\"employer-cards-slider--B4vuK2Q4bdZROfi1Dn0R\",\"employerCard\":\"employer-card--GLgRFhvXLz0NsX3pdtgF\",\"employerCardRating\":\"employer-card-rating--BHbuDo7LNGcyrr2K1JCJ\",\"employerCardHrBrand\":\"employer-card-hr-brand--k9zfCtKSYqxgWZkLwu0C\",\"employerCardEmployerReviews\":\"employer-card-employer-reviews--CJZ5FwHVVrWvZ7MY9aJH\",\"employerCardInsiderInterview\":\"employer-card-insider-interview--EDoKDAGF1583oee3l9rF\",\"employerCardTitle\":\"employer-card-title--WgEcPTWRIZIeBHSM0zHz\",\"employerCardImageWrapper\":\"employer-card-image-wrapper--BOYzC3qLOjdGqEEUnQF5\",\"employerCardImage\":\"employer-card-image--pnCBm4WTvecRrpRfbgYL\",\"employerCardImageRating\":\"employer-card-image-rating--BubfxSsG9NmQ68iRxBmk\",\"employerCardImageHrBrand\":\"employer-card-image-hr-brand--RfX4ePgJRC59ckJJRNgS\",\"employerCardImageEmployerReviews\":\"employer-card-image-employer-reviews--s_4Z5usyBZVZ6ILDkVrw\",\"employerCardImageInsiderInterview\":\"employer-card-image-insider-interview--gz33LNN5k5h3VrEqv6IA\",\"employerCardsSliderControlLeft\":\"employer-cards-slider-control-left--jSmpMtYNC5wMSkdu1z2g\",\"employerCardsSliderControlRight\":\"employer-cards-slider-control-right--hLpXzOcps0WZgWaeRuVF\",\"employerCardsSliderControlRightShown\":\"employer-cards-slider-control-right-shown--_z7hp5bYEOIwC7RnxOII\",\"employerCardsSliderControlLeftShown\":\"employer-cards-slider-control-left-shown--OS1vWMs2ZZRDjqKeOvYd\",\"spin\":\"spin--N4O1lTjMGC9qlmS7kDPw\"};","import { ReactNode, useEffect, useRef, FC } from 'react';\nimport classnames from 'classnames';\n\nimport employerCardButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/employer_card_button_click';\nimport employerCardElementShown from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/employer_card_element_shown';\nimport Link from '@hh.ru/redux-spa-middleware/lib/Link';\nimport { HoverTip } from 'bloko/blocks/drop';\nimport { TipLayer, TipPlacement } from 'bloko/blocks/drop/Tip';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport style from './employer-cards.less';\n\nexport enum CardVariant {\n    Rating = 'rating',\n    HrBrand = 'hr-brand',\n    EmployerReviews = 'employer-reviews',\n    InsiderInterview = 'insider-interview',\n}\n\ninterface CardProps {\n    variant: CardVariant;\n    title: string;\n    subtitle: string;\n    position: number;\n    dataQa: string;\n    url?: string;\n    tip?: ReactNode;\n}\n\nconst Card: FC<CardProps> = ({ variant, title, subtitle, position, url, tip, dataQa }) => {\n    const wrapperRef = useRef(null);\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId as number);\n\n    useEffect(() => {\n        if (wrapperRef.current) {\n            employerCardElementShown(wrapperRef.current, { vacancyId, type: variant, position });\n        }\n    }, [position, variant, vacancyId]);\n\n    const handleClick = () => {\n        employerCardButtonClick({ vacancyId, type: variant, position });\n    };\n\n    const renderWrapper = (content: ReactNode) => {\n        const props = {\n            'data-qa': dataQa,\n            className: classnames(style.employerCard, {\n                [style.employerCardRating]: variant === CardVariant.Rating,\n                [style.employerCardHrBrand]: variant === CardVariant.HrBrand,\n                [style.employerCardEmployerReviews]: variant === CardVariant.EmployerReviews,\n                [style.employerCardInsiderInterview]: variant === CardVariant.InsiderInterview,\n            }),\n            ref: wrapperRef,\n            onClick: handleClick,\n        };\n        const wrapper = url ? (\n            <Link {...props} target=\"_blank\" rel=\"nofollow noindex\" to={url}>\n                {content}\n            </Link>\n        ) : (\n            <div {...props}>{content}</div>\n        );\n\n        if (tip) {\n            return (\n                <HoverTip\n                    dataQa=\"employer-card-tip\"\n                    placement={TipPlacement.Top}\n                    layer={TipLayer.Overlay}\n                    host={!process.env.LUX_SERVER ? document.body : null}\n                    render={() => tip}\n                >\n                    {wrapper}\n                </HoverTip>\n            );\n        }\n\n        return wrapper;\n    };\n\n    return renderWrapper(\n        <>\n            <VSpacing base={3} />\n            <div className={style.employerCardTitle}>\n                <Text strong>{title}</Text>\n                <div className={style.employerCardImageWrapper}>\n                    <span\n                        className={classnames(style.employerCardImage, {\n                            [style.employerCardImageRating]: variant === CardVariant.Rating,\n                            [style.employerCardImageHrBrand]: variant === CardVariant.HrBrand,\n                            [style.employerCardImageEmployerReviews]: variant === CardVariant.EmployerReviews,\n                            [style.employerCardImageInsiderInterview]: variant === CardVariant.InsiderInterview,\n                        })}\n                    />\n                </div>\n            </div>\n            <VSpacing base={1} />\n            <Text size={TextSize.Small}>{subtitle}</Text>\n            <VSpacing base={3} />\n        </>\n    );\n};\n\nexport default Card;\n","import { FC, useCallback, useEffect, useRef, useState, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Icon, { IconDynamic, IconKind, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport debounce from 'bloko/common/debounce';\nimport useResize from 'bloko/common/hooks/useResize';\n\nimport style from './employer-cards.less';\n\nconst DEFAULT_SCROLL_STEP = 150;\nconst TRACKING_INTERVAL_MS = 200;\n\nconst Scroller: FC<PropsWithChildren> = ({ children }) => {\n    const scrollboxRef = useRef<HTMLDivElement>(null);\n    const sliderRef = useRef<HTMLDivElement>(null);\n    const [leftControlVisible, setLeftControlVisible] = useState(false);\n    const [rightControlVisible, setRightControlVisible] = useState(false);\n\n    const setScroll = useCallback((delta: number) => {\n        if (scrollboxRef.current) {\n            scrollboxRef.current.scrollBy({ top: 0, left: delta });\n        }\n    }, []);\n\n    const recalculateControls: () => void = useCallback(() => {\n        if (!scrollboxRef.current || !sliderRef.current) {\n            return;\n        }\n\n        const sliderWidth = scrollboxRef.current.scrollWidth;\n        const wrapperWidth = scrollboxRef.current.getBoundingClientRect().width;\n        const currentScroll = scrollboxRef.current.scrollLeft;\n\n        if (wrapperWidth >= sliderWidth) {\n            setLeftControlVisible(false);\n            setRightControlVisible(false);\n            return;\n        }\n\n        setLeftControlVisible(currentScroll > 0);\n        setRightControlVisible(sliderWidth - currentScroll > wrapperWidth);\n    }, [scrollboxRef, sliderRef]);\n\n    useResize(debounce(recalculateControls, TRACKING_INTERVAL_MS));\n\n    useEffect(() => {\n        if (!scrollboxRef.current) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            return () => {};\n        }\n\n        const currentScrollbox = scrollboxRef.current;\n        const debouncedScroll = debounce(recalculateControls, TRACKING_INTERVAL_MS);\n        currentScrollbox.addEventListener('scroll', debouncedScroll);\n\n        return () => {\n            currentScrollbox.removeEventListener('scroll', debouncedScroll);\n        };\n    }, [recalculateControls, scrollboxRef]);\n\n    useEffect(() => {\n        recalculateControls();\n    }, [recalculateControls]);\n\n    return (\n        <>\n            <VSpacing base={2} />\n            <div className={style.employerCardsWrapper}>\n                <div\n                    onClick={() => setScroll(-DEFAULT_SCROLL_STEP)}\n                    className={classnames(style.employerCardsSliderControlLeft, {\n                        [style.employerCardsSliderControlLeftShown]: leftControlVisible,\n                    })}\n                >\n                    <IconDynamic>\n                        <span>\n                            <Icon\n                                view={IconView.Chevron}\n                                initial={IconColor.Blue60}\n                                highlighted={IconColor.Gray50}\n                                kind={IconKind.Left}\n                                scale={IconScale.Medium}\n                            />\n                        </span>\n                    </IconDynamic>\n                </div>\n                <div\n                    onClick={() => setScroll(DEFAULT_SCROLL_STEP)}\n                    className={classnames(style.employerCardsSliderControlRight, {\n                        [style.employerCardsSliderControlRightShown]: rightControlVisible,\n                    })}\n                >\n                    <IconDynamic>\n                        <span>\n                            <Icon\n                                view={IconView.Chevron}\n                                initial={IconColor.Blue60}\n                                highlighted={IconColor.Gray50}\n                                kind={IconKind.Right}\n                                scale={IconScale.Medium}\n                            />\n                        </span>\n                    </IconDynamic>\n                </div>\n                <div ref={scrollboxRef} className={style.employerCardsScrollbox}>\n                    <div ref={sliderRef} className={style.employerCardsSlider}>\n                        {children}\n                    </div>\n                </div>\n            </div>\n            <VSpacing base={5} />\n        </>\n    );\n};\n\nexport default Scroller;\n","import { ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport { LangTrls, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { Badge, BadgeType } from 'lux/models/vacancyView.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Card, { CardVariant } from 'lux/components/VacancyView/EmployerCards/Card';\nimport Scroller from 'lux/components/VacancyView/EmployerCards/Scroller';\n\nenum HrBrandPosition {\n    Nominee = 'nominee',\n    Winner = 'winner',\n}\n\ninterface EmployerCardsProps {\n    companyId?: number;\n    badges?: {\n        badge: Badge[];\n    };\n}\n\ninterface BadgeCard {\n    isVisible: boolean;\n    variant: CardVariant;\n    title: string;\n    subtitle: string;\n    dataQa: string;\n    url?: string;\n    tip?: ReactNode;\n}\n\nconst ratingTopTitleVariants = [20, 50, 100, 200] as const;\n\nconst TrlKeys = {\n    ratingTitle: {\n        top10: 'employer.cards.hhrating.title.top10',\n        top20: 'employer.cards.hhrating.title.top20',\n        top50: 'employer.cards.hhrating.title.top50',\n        top100: 'employer.cards.hhrating.title.top100',\n        top200: 'employer.cards.hhrating.title.top200',\n        member: 'employer.cards.hhrating.title.member',\n    },\n    hrBrandTitle: {\n        [HrBrandPosition.Nominee]: 'employer.cards.hrbrand.title.nominee',\n        [HrBrandPosition.Winner]: 'employer.cards.hrbrand.title.winner',\n    },\n    hrBrandTip: {\n        [HrBrandPosition.Nominee]: 'employer.cards.hrbrand.tip.nominee',\n        [HrBrandPosition.Winner]: 'employer.cards.hrbrand.tip.winner',\n    },\n    employerReviewsTitle: 'employer.cards.employerReviews.title',\n    employerReviewsSubtitle: 'employer.cards.employerReviews.subtitle',\n    ratingSubtitleTop10: 'employer.cards.hhrating.subtitle.top10',\n    ratingSubtitle: 'employer.cards.hhrating.subtitle.member',\n    hrBrandSubtitle: 'employer.cards.hrbrand.subtitle',\n    insiderInterviewTitle: 'employer.cards.insiderInterview.title',\n    insiderInterviewSubtitle: 'employer.cards.insiderInterview.subtitle',\n};\n\nconst getHhRatingCard = (badge: Badge | undefined, trls: LangTrls): BadgeCard => {\n    const getRatingInfo = (): { titleTrl: string; subtitleTrl: string; dataQa: string } => {\n        if (!badge?.position) {\n            return { titleTrl: '', subtitleTrl: '', dataQa: '' };\n        }\n\n        const position = parseInt(badge.position, 10);\n        const dataQa = classnames([\n            `employer-card-${CardVariant.Rating}`,\n            `employer-card-${CardVariant.Rating}_position-${position}`,\n            { [`employer-card-${CardVariant.Rating}_with-url`]: !!badge?.url },\n        ]);\n\n        if (position <= 10) {\n            return {\n                titleTrl: format(trls[TrlKeys.ratingTitle.top10], { '{}': position }),\n                subtitleTrl: trls[TrlKeys.ratingSubtitleTop10],\n                dataQa,\n            };\n        }\n\n        const stop = ratingTopTitleVariants.find((stop) => position <= stop);\n        return {\n            titleTrl: stop ? trls[TrlKeys.ratingTitle[`top${stop}`]] : trls[TrlKeys.ratingTitle.member],\n            subtitleTrl: trls[TrlKeys.ratingSubtitle],\n            dataQa,\n        };\n    };\n\n    const ratingInfo = getRatingInfo();\n\n    return {\n        isVisible: !!badge,\n        variant: CardVariant.Rating,\n        title: ratingInfo.titleTrl,\n        subtitle: ratingInfo.subtitleTrl,\n        dataQa: ratingInfo.dataQa,\n        url: badge?.url,\n    };\n};\n\nconst getHrBrandCard = (badges: Badge[], trls: LangTrls): BadgeCard => {\n    const isHrBrandPosition = (position?: string): position is HrBrandPosition =>\n        !!position && Object.values(HrBrandPosition).includes(position);\n\n    const renderTip = () => {\n        if (badges.length < 2) {\n            return null;\n        }\n\n        return badges.map((badge) => {\n            if (isHrBrandPosition(badge.position)) {\n                return (\n                    <p key={badge.position}>\n                        {trls[TrlKeys.hrBrandTip[badge.position]]}\n                        {badge.year ? ` ${badge.year}` : ''}\n                    </p>\n                );\n            }\n\n            return false;\n        });\n    };\n\n    if (badges.length === 0) {\n        return { isVisible: false, variant: CardVariant.HrBrand, title: '', subtitle: '', url: '', dataQa: '' };\n    }\n\n    const lastBadge = badges.find((badge) => !badge.year) || badges[0];\n\n    return {\n        isVisible: true,\n        variant: CardVariant.HrBrand,\n        title: isHrBrandPosition(lastBadge.position) ? trls[TrlKeys.hrBrandTitle[lastBadge.position]] : '',\n        subtitle: trls[TrlKeys.hrBrandSubtitle],\n        url: lastBadge.url,\n        tip: renderTip(),\n        dataQa: classnames([\n            `employer-card-${CardVariant.HrBrand}`,\n            `employer-card-${CardVariant.HrBrand}_position-${lastBadge.position || ''}`,\n            `employer-card-${CardVariant.HrBrand}_with-url`,\n        ]),\n    };\n};\n\nconst EmployerCards: TranslatedComponent<EmployerCardsProps> = ({ companyId, badges, trls }) => {\n    const employerReviewsIsOpenEmployer = useSelector((state) => state.employerReviewsIsOpenEmployer);\n    const insiderInfo = useSelector((state) => state.vacancyView.insider);\n\n    const ratingBadge = badges?.badge.find((badge) => badge.type === BadgeType.EmployerHHRating);\n    const hrBrandBadges = badges?.badge.filter((badge) => badge.type === BadgeType.HrBrand) || [];\n    const insiderInterviewBadge = insiderInfo && (insiderInfo.isVisible || insiderInfo['@isVisible']);\n\n    const badgeCards: (BadgeCard | null)[] = [\n        {\n            isVisible: employerReviewsIsOpenEmployer,\n            variant: CardVariant.EmployerReviews,\n            title: trls[TrlKeys.employerReviewsTitle],\n            subtitle: trls[TrlKeys.employerReviewsSubtitle],\n            dataQa: `employer-card-${CardVariant.EmployerReviews}`,\n        },\n        getHhRatingCard(ratingBadge, trls),\n        getHrBrandCard(hrBrandBadges, trls),\n        {\n            isVisible: !!insiderInterviewBadge,\n            variant: CardVariant.InsiderInterview,\n            title: trls[TrlKeys.insiderInterviewTitle],\n            subtitle: trls[TrlKeys.insiderInterviewSubtitle],\n            url: `/interview/${insiderInfo?.id || ''}?employerId=${companyId || ''}`,\n            dataQa: classnames([\n                `employer-card-${CardVariant.InsiderInterview}`,\n                `employer-card-${CardVariant.InsiderInterview}_with-link`,\n            ]),\n        },\n    ];\n    const badgeCardsVisible = badgeCards.filter((badge): badge is BadgeCard => !!badge && badge.isVisible);\n\n    if (badgeCardsVisible.length === 0) {\n        return null;\n    }\n\n    return (\n        <Scroller>\n            {badgeCardsVisible.map((badgeCard, index) => (\n                <Card\n                    key={badgeCard.variant}\n                    variant={badgeCard.variant}\n                    title={badgeCard.title}\n                    subtitle={badgeCard.subtitle}\n                    position={index + 1}\n                    url={badgeCard.url}\n                    tip={badgeCard.tip}\n                    dataQa={badgeCard.dataQa}\n                />\n            ))}\n        </Scroller>\n    );\n};\n\nexport default translation(EmployerCards);\n","import { FC } from 'react';\n\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport EmployerReviewsWidgetSmall from 'lux/components/EmployerReviews/WidgetSmall';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport EmployerCards from 'lux/components/VacancyView/EmployerCards';\nimport VacancyCompanyAddress from 'lux/components/VacancyView/VacancyCompanyAddress';\nimport VacancyCompanyLogo from 'lux/components/VacancyView/VacancyCompanyLogo';\nimport VacancyCompanyName from 'lux/components/VacancyView/VacancyCompanyName';\n\nconst VacancyCompanyRedesigned: FC = () => {\n    const companyId = useSelector((state) => state.vacancyView.company.id);\n    const badges = useSelector((state) => state.vacancyView.company.badges);\n    const trusted = useSelector((state) => state.vacancyView.company['@trusted']);\n    return (\n        <div className=\"vacancy-company-redesigned\" data-qa=\"vacancy-company\">\n            <VacancyCompanyLogo isRedesign />\n            <VacancyCompanyName isRedesign />\n            <div className=\"noprint\">{trusted && <EmployerReviewsWidgetSmall isRedesign />}</div>\n            <VSpacing base={3} />\n            <EmployerCards companyId={companyId} badges={badges} />\n            <VacancyCompanyAddress isRedesign />\n        </div>\n    );\n};\n\nexport default VacancyCompanyRedesigned;\n","import classnames from 'classnames';\n\nimport { H2, H2Section } from 'bloko/blocks/header';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Compensation from 'lux/components/Compensation';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nenum CompensationType {\n    Net = 'net',\n    Gross = 'gross',\n}\n\nconst TrlKeys = {\n    [CompensationType.Net]: 'employer.newVacancy.compensation.net',\n    [CompensationType.Gross]: 'employer.newVacancy.compensation.gross',\n};\n\ninterface VacancyCompensationProps {\n    noCompensation?: boolean;\n    isRedesign?: boolean;\n}\n\nconst VacancyCompensation: TranslatedComponent<VacancyCompensationProps> = ({ isRedesign, trls }) => {\n    const { from, to, currencyCode, noCompensation, gross } = useSelector((state) => state.vacancyView.compensation);\n    if (!currencyCode) {\n        return null;\n    }\n    let compensationType;\n    if (gross === true) {\n        compensationType = CompensationType.Gross;\n    } else if (gross === false) {\n        compensationType = CompensationType.Net;\n    }\n    const Header = isRedesign ? H2Section : H2;\n    return (\n        <div data-qa=\"vacancy-salary\">\n            <Header Element=\"span\" lite data-qa={`vacancy-salary-compensation-type-${compensationType || ''}`}>\n                <Compensation from={from} to={to} currencyCode={currencyCode} groupSeparator={'\\u00A0'} />\n                {!noCompensation && compensationType && (\n                    <span\n                        className={classnames({\n                            'vacancy-salary-compensation-type': isRedesign,\n                        })}\n                    >\n                        {' '}\n                        {trls[TrlKeys[compensationType]]}\n                    </span>\n                )}\n            </Header>\n        </div>\n    );\n};\n\nexport default translation(VacancyCompensation);\n","import { DefaultRootState } from 'react-redux';\n\nimport { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport { UserType } from 'lux/models/userType';\n\nconst checkRender = (state: DefaultRootState, breakpoint?: Breakpoint): boolean => {\n    const isXS = breakpoint === Breakpoint.XS;\n    const isAnonymous = state.userType === UserType.Anonymous;\n    const hasContactInfo = !!state.vacancyView.contactInfo;\n    const vacancyId = state.vacancyView.vacancyId;\n\n    return hasContactInfo && !(isAnonymous && isXS) && vacancyId !== undefined;\n};\n\nexport default checkRender;\n","import { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Down, { DownPlacement } from 'bloko/blocks/drop/Down';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\n\nimport RegistrationAction from 'lux/components/VacancyActions/RegistrationAction';\nimport translation from 'lux/components/translation';\nimport usePrintDetect from 'lux/hooks/usePrintDetect';\nimport { UserType } from 'lux/models/userType';\nimport { vacancySetVisibilityContactsAction } from 'lux/models/vacancyView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport useContactsAnalytics from 'lux/components/VacancyView/hooks/useContactsAnalytics';\n\nconst VacancyContactsLinkSwitch = ({ trls }) => {\n    const userType = useSelector((state) => state.userType);\n    const isPrinting = usePrintDetect();\n    const {\n        isVisibleContacts,\n        vacancyId,\n        company: { id: employerId },\n    } = useSelector((state) => state.vacancyView);\n    const [isDropVisible, setDropVisible] = useState(isVisibleContacts);\n    const dispatch = useDispatch();\n    const sendViewContactsAnalytics = useContactsAnalytics({ place: 'vacancy_bottom_button' });\n    const isAnonymous = userType === UserType.Anonymous;\n\n    useEffect(() => {\n        if (isAnonymous) {\n            setDropVisible(isVisibleContacts);\n        }\n    }, [isVisibleContacts, isAnonymous]);\n\n    const handleOpen = useCallback(() => {\n        dispatch(vacancySetVisibilityContactsAction(true));\n        sendViewContactsAnalytics({ vacancyId, employerId, userType });\n    }, [dispatch, employerId, sendViewContactsAnalytics, userType, vacancyId]);\n\n    const handleClose = useCallback(() => {\n        dispatch(vacancySetVisibilityContactsAction(false));\n    }, [dispatch]);\n\n    useLayoutEffect(() => {\n        if (isPrinting) {\n            handleOpen();\n        }\n    }, [handleOpen, isPrinting]);\n\n    const linkSwitch = (\n        <Link appearance={LinkAppearance.Pseudo} onClick={handleOpen} data-qa=\"show-employer-contacts\">\n            {trls[VacancyContactsLinkSwitch.trls.contacts]}\n        </Link>\n    );\n\n    return isAnonymous ? (\n        <Down\n            showCloseButton\n            show={isDropVisible}\n            onClose={handleClose}\n            render={() => <RegistrationAction />}\n            placement={DownPlacement.BottomStart}\n        >\n            {linkSwitch}\n        </Down>\n    ) : (\n        linkSwitch\n    );\n};\n\nVacancyContactsLinkSwitch.propTypes = {\n    trls: PropTypes.object,\n};\n\nVacancyContactsLinkSwitch.trls = {\n    contacts: 'vacancy.contactInfo.opened',\n};\n\nexport default translation(VacancyContactsLinkSwitch);\n","import { Fragment, useCallback, useState, useEffect, MutableRefObject } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport NoIndex from 'lux/components/NoIndex';\nimport { VacancyResponsePopupResponse } from 'lux/components/VacancyResponseLink/';\nimport ContactsCallTracking from 'lux/components/VacancyView/VacancyContactsCallTracking';\nimport VacancyContactsLinkSwitch from 'lux/components/VacancyView/VacancyContactsLinkSwitch';\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\nimport fetchResponseType from 'lux/requests/contacts/fetchResponseType';\n\nimport checkRender from 'lux/components/VacancyView/VacancyContacts/checkRender';\n\nconst TrlKeys = {\n    contacts: 'vacancy.contactInfo.opened',\n};\n\ninterface VacancyContactsProps {\n    blockRef: MutableRefObject<HTMLDivElement>;\n    hasVacancySectionWraper?: boolean;\n}\n\nconst VacancyContacts: TranslatedComponent<VacancyContactsProps> = ({\n    blockRef,\n    hasVacancySectionWraper = true,\n    trls,\n}) => {\n    const breakpoint = useBreakpoint();\n    const contactInfo = useSelector(({ vacancyView }) => vacancyView.contactInfo);\n    const show = useSelector((state) => checkRender(state, breakpoint));\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const isVisible = useSelector(({ vacancyView }) => vacancyView.isVisibleContacts);\n    const isAnonymous = useSelector(({ userType }) => userType === UserType.Anonymous);\n    const allowToShowContacts = isVisible && !isAnonymous;\n    const [chatButtonInfo, setChatButtonInfo] = useState<VacancyResponsePopupResponse | 'fetching' | null>('fetching');\n    const isZarplata = useIsZarplataPlatform();\n\n    useEffect(() => {\n        if (!isAnonymous && vacancyId !== undefined) {\n            void fetchResponseType(vacancyId).then((chatInfo) => setChatButtonInfo(chatInfo));\n        } else {\n            setChatButtonInfo(null);\n        }\n    }, [isAnonymous, vacancyId]);\n\n    const sendEmailOnClickAnalytics = useCallback(() => {\n        Analytics.sendHHEvent('applicantEmailIntent', {\n            from: 'vacancy',\n            vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n        });\n    }, [vacancyId]);\n\n    const sendPhoneOnClickAnalytics = useCallback(() => {\n        Analytics.sendHHEvent('applicantCallIntent', {\n            from: 'vacancy',\n            vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n        });\n        Analytics.sendEvent('applicant', 'call-from-vacancy');\n        if (isZarplata) {\n            Analytics.addEventPixels('ZP_CALL');\n        }\n    }, [isZarplata, vacancyId]);\n\n    const renderPhoneComment = (comment: string | undefined) => {\n        if (!comment) {\n            return null;\n        }\n        return (\n            <>\n                {', '}\n                <AsyncHighlighter>{comment}</AsyncHighlighter>\n            </>\n        );\n    };\n    if (!show || chatButtonInfo === 'fetching' || typeof vacancyId !== 'number') {\n        return null;\n    }\n\n    const phones = contactInfo?.phones?.phones;\n\n    return (\n        <NoIndex>\n            <div\n                ref={blockRef}\n                className={classnames('vacancy-contacts', {\n                    'vacancy-contacts_opened': allowToShowContacts,\n                })}\n            >\n                <VacancySectionWrapper hasWrapper={hasVacancySectionWraper}>\n                    <H2>{allowToShowContacts ? trls[TrlKeys.contacts] : <VacancyContactsLinkSwitch />}</H2>\n                    <VSpacing base={4} />\n                    {allowToShowContacts &&\n                        (contactInfo?.callTrackingEnabled && phones ? (\n                            <ContactsCallTracking\n                                contactInfo={contactInfo}\n                                vacancyId={vacancyId}\n                                onPhoneClick={sendPhoneOnClickAnalytics}\n                                onEmailClick={sendEmailOnClickAnalytics}\n                                chatButtonInfo={chatButtonInfo}\n                                block\n                            />\n                        ) : (\n                            <div className=\"vacancy-contacts__body\">\n                                {contactInfo?.fio && (\n                                    <p data-qa=\"vacancy-contacts__fio\">\n                                        <AsyncHighlighter>{contactInfo.fio}</AsyncHighlighter>\n                                    </p>\n                                )}\n                                {phones?.map((phone, index) => {\n                                    const { country, city, number, comment } = phone;\n                                    const formattedPhone = `+${country}\\u00a0(${city})\\u00a0${number}`;\n                                    return (\n                                        <Fragment key={index}>\n                                            <p\n                                                data-qa=\"vacancy-contacts__phone\"\n                                                className=\"vacancy-contacts__phone-desktop\"\n                                            >\n                                                {formattedPhone}\n                                                {renderPhoneComment(comment)}\n                                            </p>\n                                            <div className=\"vacancy-contacts__phone-mobile\">\n                                                <BlokoLink\n                                                    disableVisited\n                                                    Element={Link}\n                                                    to={`tel:+${country}${city}${number}`}\n                                                    onClick={sendPhoneOnClickAnalytics}\n                                                >\n                                                    {formattedPhone}\n                                                </BlokoLink>\n                                                {renderPhoneComment(comment)}\n                                            </div>\n                                        </Fragment>\n                                    );\n                                })}\n                                {contactInfo?.email && (\n                                    <Link\n                                        to={`mailto:${contactInfo.email}`}\n                                        rel=\"nofollow\"\n                                        data-qa=\"vacancy-contacts__email\"\n                                        onClick={sendEmailOnClickAnalytics}\n                                    >\n                                        {contactInfo.email}\n                                    </Link>\n                                )}\n                            </div>\n                        ))}\n                </VacancySectionWrapper>\n            </div>\n        </NoIndex>\n    );\n};\n\nexport default translation(VacancyContacts);\n","import { useCallback, MutableRefObject } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NoIndex from 'lux/components/NoIndex';\nimport VacancyContactsDrop from 'lux/components/VacancyView/VacancyContactsDrop';\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\nimport useContactsAnalytics from 'lux/components/VacancyView/hooks/useContactsAnalytics';\nimport translation from 'lux/components/translation';\nimport { vacancySetVisibilityContactsAction } from 'lux/models/vacancyView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport checkRender from 'lux/components/VacancyView/VacancyContacts/checkRender';\n\nconst TrlKeys = {\n    contacts: 'vacancy.contactInfo.opened',\n    showContactsButton: 'vacancy.action.showContacts',\n};\n\ninterface VacancyContactsRedesignedProps {\n    vacancyBodyFooterNodeRef?: MutableRefObject<HTMLDivElement>;\n    blockRef: MutableRefObject<HTMLDivElement>;\n    hasVacancySectionWraper?: boolean;\n}\nconst VacancyContactsRedesigned: TranslatedComponent<VacancyContactsRedesignedProps> = ({\n    vacancyBodyFooterNodeRef,\n    blockRef,\n    hasVacancySectionWraper = true,\n    trls,\n}) => {\n    const dispatch = useDispatch();\n    const userType = useSelector((state) => state.userType);\n    const breakpoint = useBreakpoint();\n    const show = useSelector((state) => checkRender(state, breakpoint));\n    const sendViewContactsAnalytics = useContactsAnalytics({ place: 'vacancy_bottom_button' });\n    const {\n        isVisibleContacts,\n        vacancyId,\n        company: { id: employerId },\n    } = useSelector((state) => state.vacancyView);\n\n    const handleOpen = useCallback(() => {\n        dispatch(vacancySetVisibilityContactsAction(true));\n        sendViewContactsAnalytics({ vacancyId, employerId, userType });\n    }, [dispatch, employerId, sendViewContactsAnalytics, userType, vacancyId]);\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        <NoIndex>\n            <div\n                ref={blockRef}\n                className={classnames('vacancy-contacts', {\n                    noprint: !isVisibleContacts,\n                })}\n            >\n                <VacancySectionWrapper hasWrapper={hasVacancySectionWraper}>\n                    <H2>{trls[TrlKeys.contacts]}</H2>\n                    <VSpacing base={6} />\n                    <VacancyContactsDrop\n                        show={isVisibleContacts}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        place=\"bottom\"\n                    >\n                        <Button\n                            scale={ButtonScale.Large}\n                            appearance={ButtonAppearance.Outlined}\n                            kind={ButtonKind.Primary}\n                            onClick={handleOpen}\n                            data-qa=\"show-employer-contacts show-employer-contacts_bottom-button\"\n                        >\n                            {trls[TrlKeys.showContactsButton]}\n                        </Button>\n                    </VacancyContactsDrop>\n                    <VSpacing base={6} />\n                </VacancySectionWrapper>\n            </div>\n        </NoIndex>\n    );\n};\n\nexport default translation(VacancyContactsRedesigned);\n","import { FC, MutableRefObject } from 'react';\n\nimport VacancyContactsNotRedesigned from 'lux/components/VacancyView/VacancyContacts/VacancyContacts';\nimport VacancyContactsRedesigned from 'lux/components/VacancyView/VacancyContacts/VacancyContactsRedesigned';\n\ninterface VacancyContactsProps {\n    vacancyBodyFooterNodeRef?: MutableRefObject<HTMLDivElement>;\n    blockRef: MutableRefObject<HTMLDivElement>;\n    hasVacancySectionWraper?: boolean;\n    isRedesign: boolean;\n}\n\nconst VacancyContacts: FC<VacancyContactsProps> = ({\n    isRedesign,\n    vacancyBodyFooterNodeRef,\n    blockRef,\n    hasVacancySectionWraper,\n}) => {\n    if (isRedesign) {\n        return (\n            <VacancyContactsRedesigned\n                blockRef={blockRef}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                hasVacancySectionWraper={hasVacancySectionWraper}\n            />\n        );\n    }\n    return <VacancyContactsNotRedesigned blockRef={blockRef} hasVacancySectionWraper={hasVacancySectionWraper} />;\n};\n\nexport default VacancyContacts;\n","import { Fragment, RefObject, useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport BlokoLink from 'bloko/blocks/link';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport { VacancyResponsePopupResponse } from 'lux/components/VacancyResponseLink';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { ContactInfo } from 'lux/models/vacancyView.types';\n\nimport ContactsCallTracking from 'lux/components/VacancyView/VacancyContactsCallTracking';\nimport { scrollWithAttention, SIGNUP_FORM_ATTENTION_CLASS } from 'lux/components/VacancyView/scrolling';\n\nconst TrlKeys = {\n    signUpText: 'vacancy.contactInfo.signup.text',\n    signUpButton: 'vacancy.contactInfo.signup.button',\n};\n\ninterface VacancyContactsDropContentProps {\n    chatButtonInfo?: VacancyResponsePopupResponse | null;\n    contactInfo?: ContactInfo | null;\n    address?: string;\n    vacancyId: number;\n    isAnonymous?: boolean;\n    employerId?: number;\n    chatWritePossibility?: string;\n    loading: boolean;\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    onClose?: () => void;\n}\n\nconst VacancyContactsDropContent: TranslatedComponent<VacancyContactsDropContentProps> = ({\n    chatButtonInfo,\n    contactInfo,\n    address,\n    vacancyId,\n    isAnonymous,\n    employerId,\n    chatWritePossibility,\n    loading,\n    vacancyBodyFooterNodeRef,\n    onClose,\n    trls,\n}) => {\n    const isZarplata = useIsZarplataPlatform();\n\n    const sendEmailOnClickAnalytics = useCallback(() => {\n        Analytics.sendHHEvent('applicantEmailIntent', {\n            from: 'vacancy',\n            vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n        });\n    }, [vacancyId]);\n\n    const sendPhoneOnClickAnalytics = useCallback(() => {\n        Analytics.sendHHEvent('applicantCallIntent', {\n            from: 'vacancy',\n            vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n        });\n        Analytics.sendEvent('applicant', 'call-from-vacancy');\n        if (isZarplata) {\n            Analytics.addEventPixels('ZP_CALL');\n        }\n    }, [isZarplata, vacancyId]);\n\n    const renderPhoneComment = (comment?: string) => {\n        if (!comment) {\n            return null;\n        }\n        return (\n            <>\n                {', '}\n                <AsyncHighlighter>{comment}</AsyncHighlighter>\n            </>\n        );\n    };\n\n    const phones = contactInfo?.phones?.phones;\n\n    if (loading) {\n        return <Loading scale={LoadingScale.Small} />;\n    }\n\n    if (isAnonymous) {\n        return (\n            <>\n                <div className=\"vacancy-contacts-signup-text\">{trls[TrlKeys.signUpText]}</div>\n                <VSpacing base={3} />\n                <Button\n                    kind={ButtonKind.Primary}\n                    onClick={() => {\n                        if (vacancyBodyFooterNodeRef?.current) {\n                            scrollWithAttention(vacancyBodyFooterNodeRef.current, SIGNUP_FORM_ATTENTION_CLASS);\n                        }\n                        onClose?.();\n                    }}\n                >\n                    {trls[TrlKeys.signUpButton]}\n                </Button>\n            </>\n        );\n    }\n\n    if (contactInfo?.callTrackingEnabled) {\n        return (\n            <ContactsCallTracking\n                chatButtonInfo={chatButtonInfo}\n                contactInfo={contactInfo}\n                vacancyId={vacancyId}\n                address={address}\n                onPhoneClick={sendPhoneOnClickAnalytics}\n                onEmailClick={sendEmailOnClickAnalytics}\n                onClose={onClose}\n                employerId={employerId}\n                chatWritePossibility={chatWritePossibility}\n            />\n        );\n    }\n\n    return (\n        <div>\n            {contactInfo?.fio && (\n                <div data-qa=\"vacancy-contacts__fio\">\n                    <AsyncHighlighter>{contactInfo.fio}</AsyncHighlighter>\n                    <VSpacing base={1} />\n                </div>\n            )}\n            {phones?.map((phone, index) => {\n                const { country, city, number, comment } = phone;\n                const formattedPhone = `+${country}\\u00a0(${city})\\u00a0${number}`;\n                return (\n                    <Fragment key={index}>\n                        <p data-qa=\"vacancy-contacts__phone\" className=\"vacancy-contacts__phone-desktop\">\n                            {formattedPhone}\n                            {renderPhoneComment(comment)}\n                        </p>\n                        <div className=\"vacancy-contacts__phone-mobile\">\n                            <BlokoLink\n                                disableVisited\n                                Element={Link}\n                                to={`tel:+${country}${city}${number}`}\n                                onClick={sendPhoneOnClickAnalytics}\n                            >\n                                {formattedPhone}\n                            </BlokoLink>\n                            {renderPhoneComment(comment)}\n                        </div>\n                    </Fragment>\n                );\n            })}\n            <VSpacing base={1} />\n            {contactInfo?.email && (\n                <Link\n                    to={`mailto:${contactInfo.email}`}\n                    rel=\"nofollow\"\n                    data-qa=\"vacancy-contacts__email\"\n                    onClick={sendEmailOnClickAnalytics}\n                >\n                    {contactInfo.email}\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default translation(VacancyContactsDropContent);\n","import { FC, RefObject, useEffect, useState } from 'react';\n\nimport DropDown from 'bloko/blocks/drop/Down/Click';\n\nimport { VacancyResponsePopupResponse } from 'lux/components/VacancyResponseLink';\nimport usePrintDetect from 'lux/hooks/usePrintDetect';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\nimport fetchResponseType from 'lux/requests/contacts/fetchResponseType';\n\nimport VacancyContactsDropContent from 'lux/components/VacancyView/VacancyContactsDropContent';\n\ninterface VacancyContactsDropProps {\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    children: JSX.Element;\n    show?: boolean;\n    place: string;\n}\n\nconst VacancyContactsDrop: FC<VacancyContactsDropProps> = ({ vacancyBodyFooterNodeRef, show, children, place }) => {\n    const [chatButtonInfo, setChatButtonInfo] = useState<VacancyResponsePopupResponse | null>(null);\n    const [chatButtonFetching, setChatButtonFetching] = useState(true);\n    const userType = useSelector((state) => state.userType);\n    const { vacancyId, contactInfo, address } = useSelector((state) => state.vacancyView);\n    const employerId = useSelector((state) => state.vacancyView.company.id);\n    const chatWritePossibility = useSelector((state) =>\n        vacancyId ? state.applicantVacancyResponseStatuses[vacancyId]?.shortVacancy?.chatWritePossibility : undefined\n    );\n    const isPrinting = usePrintDetect();\n    const isAnonymous = userType === UserType.Anonymous;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setChatButtonFetching(true);\n            if (typeof vacancyId !== 'number' || userType === UserType.Employer) {\n                setChatButtonFetching(false);\n                return;\n            }\n            try {\n                const chatInfo = await fetchResponseType(vacancyId);\n                setChatButtonInfo(chatInfo);\n            } finally {\n                setChatButtonFetching(false);\n            }\n        };\n\n        if (!isAnonymous) {\n            void fetchData();\n        } else {\n            setChatButtonFetching(false);\n        }\n    }, [isAnonymous, userType, vacancyId]);\n\n    if (typeof vacancyId !== 'number') {\n        return null;\n    }\n\n    if (isPrinting) {\n        if (!show || place === 'top') {\n            return children;\n        }\n        return (\n            <VacancyContactsDropContent\n                loading={chatButtonFetching}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                vacancyId={vacancyId}\n                contactInfo={contactInfo}\n                isAnonymous={isAnonymous}\n            />\n        );\n    }\n\n    return (\n        <DropDown\n            show={show}\n            showCloseButton={!contactInfo?.callTrackingEnabled}\n            flexible\n            render={(closeDrop) => (\n                <VacancyContactsDropContent\n                    chatButtonInfo={chatButtonInfo}\n                    loading={chatButtonFetching}\n                    onClose={closeDrop}\n                    address={address ? address.displayName : undefined}\n                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    vacancyId={vacancyId}\n                    contactInfo={contactInfo}\n                    isAnonymous={isAnonymous}\n                    employerId={employerId}\n                    chatWritePossibility={chatWritePossibility}\n                />\n            )}\n        >\n            {children}\n        </DropDown>\n    );\n};\n\nexport default VacancyContactsDrop;\n","import { DefaultRootState } from 'react-redux';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport HumanDate from 'lux/components/HumanDate';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    creationTime: 'vacancy.view.creationTimeAndRegion',\n    vacancyCode: 'vacancy.header.vacancyCode',\n};\n\nexport const checkVacancyCreationTimeRender = (state: DefaultRootState): boolean =>\n    !!state.vacancyView.publicationDate || !!state.vacancyView['@vacancyCode'];\n\ninterface VacancyCreationTimeProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyCreationTime: TranslatedComponent<VacancyCreationTimeProps> = ({ isRedesign, trls }) => {\n    const publicationDate = useSelector((state) => state.vacancyView.publicationDate);\n    const area = useSelector((state) => state.vacancyView.area);\n    const vacancyCode = useSelector((state) => state.vacancyView['@vacancyCode']);\n\n    return (\n        <>\n            {publicationDate && (\n                <p className={isRedesign ? 'vacancy-creation-time-redesigned' : 'vacancy-creation-time'}>\n                    {formatToReactComponent(trls[TrlKeys.creationTime], {\n                        '{0}': <HumanDate date={publicationDate} />,\n                        '{1}': area?.areaNamePre || '',\n                    })}\n                </p>\n            )}\n            {vacancyCode && (\n                <p className={isRedesign ? 'vacancy-code-redesigned' : 'vacancy-code'}>\n                    {trls[TrlKeys.vacancyCode]}\n                    &nbsp;\n                    {vacancyCode}\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default translation(VacancyCreationTime);\n","import { FC } from 'react';\nimport htmlReactParser from 'html-react-parser';\n\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\ninterface VacancyDescriptionProps {\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancyDescription: FC<VacancyDescriptionProps> = ({ hasVacancySectionWrapper = true }) => {\n    const description = useSelector(({ vacancyView }) => vacancyView.description);\n\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            <div className=\"g-user-content\" data-qa=\"vacancy-description\">\n                <AsyncHighlighter>{htmlReactParser(description)}</AsyncHighlighter>\n            </div>\n        </VacancySectionWrapper>\n    );\n};\n\nexport default VacancyDescription;\n","import { DefaultRootState } from 'react-redux';\n\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\nexport const checkVacancyDriverLicenseRender = ({ vacancyView }: DefaultRootState): boolean =>\n    !!vacancyView.driverLicenseTypes?.driverLicenseType?.length;\n\nconst TrlKeys = {\n    driverExperience: 'vacancy.view.driverExperience',\n    driverLicense: 'vacancy.view.driverLicense',\n};\n\ninterface VacancyDriverLicenseProps {\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancyDriverLicense: TranslatedComponent<VacancyDriverLicenseProps> = ({\n    hasVacancySectionWrapper = true,\n    trls,\n}) => {\n    const driverLicenseTypes = useSelector(({ vacancyView }) => vacancyView.driverLicenseTypes);\n    const showDriverLicense = useSelector(checkVacancyDriverLicenseRender);\n\n    if (!driverLicenseTypes?.driverLicenseType || !showDriverLicense) {\n        return null;\n    }\n\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            <H2>{trls[TrlKeys.driverExperience]}</H2>\n            <VSpacing base={4} />\n            {trls[TrlKeys.driverLicense]} {driverLicenseTypes.driverLicenseType.join(', ')}\n        </VacancySectionWrapper>\n    );\n};\n\nexport default translation(VacancyDriverLicense);\n","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ScheduleCamelCase } from 'lux/microcoreModels/schedule';\nimport { EmploymentType } from 'lux/models/vacancyView.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    employment: {\n        [EmploymentType.Probation]: 'vacancy.employment.probation',\n        [EmploymentType.Full]: 'vacancy.employment.full',\n        [EmploymentType.Part]: 'vacancy.employment.part',\n        [EmploymentType.Volunteer]: 'vacancy.employment.volunteer',\n        [EmploymentType.Project]: 'vacancy.employment.project',\n    },\n    workSchedule: {\n        [ScheduleCamelCase.Shift]: 'vacancy.workSchedule.shift',\n        [ScheduleCamelCase.FullDay]: 'vacancy.workSchedule.fullDay',\n        [ScheduleCamelCase.FlyInFlyOut]: 'vacancy.workSchedule.flyInFlyOut',\n        [ScheduleCamelCase.Flexible]: 'vacancy.workSchedule.flexible',\n        [ScheduleCamelCase.Remote]: 'vacancy.workSchedule.remote',\n    },\n};\n\ninterface VacancyEmploymentProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyEmployment: TranslatedComponent<VacancyEmploymentProps> = ({ isRedesign, trls }) => {\n    const employment = useSelector((state) => state.vacancyView.employment);\n    const workSchedule = useSelector((state) => state.vacancyView['@workSchedule']);\n    const type = employment?.['@type'];\n    return (\n        <p\n            className={classnames({\n                'vacancy-description-list-item': isRedesign,\n            })}\n            data-qa=\"vacancy-view-employment-mode\"\n        >\n            {type && (\n                <>\n                    {trls[TrlKeys.employment[type]]}\n                    {', '}\n                </>\n            )}\n            {workSchedule && <span>{trls[TrlKeys.workSchedule[workSchedule]]}</span>}\n        </p>\n    );\n};\nexport default translation(VacancyEmployment);\n","import { useRef, FC } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport Clickme from 'lux/components/Clickme';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { useTrackBannersClickEvent } from 'lux/components/VacancyView/useBannersAnalytics';\n\nconst VacancyAdaptiveBanners: FC = () => {\n    const banners = useSelector(({ banners }) => banners);\n    const adsVacancyParams = useSelector((state) => state.adsVacancyParams);\n\n    const rightColumnBanners = banners['right-column'];\n    const rightColumnClickmeAdaptiveBanners = banners['right-column-clickme-adaptive'];\n\n    const containerRef = useRef(null);\n    useTrackBannersClickEvent({ containerRef });\n    if (!rightColumnBanners?.length && !rightColumnClickmeAdaptiveBanners?.length) {\n        return null;\n    }\n    return (\n        <div className=\"noprint\" ref={containerRef}>\n            <VSpacing base={6} />\n            <div className=\"vacancy-adaptive-banners\">\n                {rightColumnBanners && rightColumnBanners.length > 0 && (\n                    <Column xs=\"4\" s=\"4\" m=\"6\" l=\"0\">\n                        {rightColumnBanners.map((banner) => (\n                            <AdsExternalBanner\n                                {...banner}\n                                cId={`adaptive_${banner.cId}`}\n                                key={banner.id}\n                                bannerAdTargeting={adsVacancyParams}\n                            />\n                        ))}\n                    </Column>\n                )}\n                {rightColumnClickmeAdaptiveBanners && rightColumnClickmeAdaptiveBanners.length > 0 && (\n                    <Column xs=\"4\" s=\"4\" m=\"6\" l=\"0\">\n                        <Clickme banners={rightColumnClickmeAdaptiveBanners} />\n                    </Column>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default VacancyAdaptiveBanners;\n","import { RefObject, FC } from 'react';\nimport { DefaultRootState } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport EmployerReviewsWidgetBig from 'lux/components/EmployerReviews/WidgetBig';\nimport { checkWidgetRenderForVacancyView as checkEmployerReviewsWidgetRender } from 'lux/components/EmployerReviews/WidgetBig/checkRender';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyAdaptiveBanners from 'lux/components/VacancyView/VacancyAdaptiveBanners';\nimport VacancyAnonymousResponse from 'lux/components/VacancyView/VacancyAnonymousResponse';\nimport VacancyApplicantRespondedInfo from 'lux/components/VacancyView/VacancyApplicantRespondedInfo';\nimport VacancyApplicantResponse from 'lux/components/VacancyView/VacancyApplicantResponse';\nimport VacancyCreationTime from 'lux/components/VacancyView/VacancyCreationTime';\n\ninterface VacancyFooterProps {\n    vacancyBodyFooterNodeRef: RefObject<HTMLDivElement>;\n    isRedesign: boolean;\n    withBanners?: boolean;\n}\nexport const checkVacancyFooterRender = ({ userType }: DefaultRootState): boolean =>\n    [UserType.Anonymous, UserType.Applicant, UserType.NedoUser].includes(userType);\n\nconst VacancyFooter: FC<VacancyFooterProps> = ({ vacancyBodyFooterNodeRef, isRedesign, withBanners }) => {\n    const showReviewWidget = useSelector(checkEmployerReviewsWidgetRender);\n    const showVacancyFooter = useSelector(checkVacancyFooterRender);\n\n    if (!showVacancyFooter) {\n        return null;\n    }\n\n    return (\n        <div className={classnames({ 'vacancy-section': !isRedesign })}>\n            <ColumnsRow>\n                <Column xs=\"4\" s=\"8\" m={isRedesign ? '12' : '8'} l=\"10\" container>\n                    <Column xs=\"4\" s=\"8\" m={isRedesign ? '12' : '8'} l=\"8\">\n                        <Gap bottom>\n                            <VacancyCreationTime isRedesign={isRedesign} />\n                        </Gap>\n                    </Column>\n                    <VacancyAnonymousResponse isRedesign={isRedesign} />\n                </Column>\n                <VacancyApplicantResponse vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef} isRedesign={isRedesign} />\n\n                {showReviewWidget && (\n                    <Column xs=\"4\" s=\"8\" m={isRedesign ? '12' : '8'} l=\"10\">\n                        <VSpacing base={isRedesign ? 12 : 6} xs={isRedesign ? 1 : 6} />\n                        <Text>\n                            <EmployerReviewsWidgetBig isRedesign={isRedesign} />\n                        </Text>\n                    </Column>\n                )}\n                {withBanners && (\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"0\" container>\n                        <VacancyAdaptiveBanners />\n                    </Column>\n                )}\n                <VacancyApplicantRespondedInfo\n                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    isRedesign={isRedesign}\n                    withWrapper\n                />\n                <VSpacing base={8} />\n            </ColumnsRow>\n        </div>\n    );\n};\n\nexport default VacancyFooter;\n","import { useMemo, useEffect, SetStateAction, Dispatch, PropsWithChildren, FC } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst Wrapper: FC<PropsWithChildren<{ hasWrapper?: boolean }>> = ({ hasWrapper, children }) =>\n    hasWrapper ? (\n        <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n            <div className=\"vacancy-section\">{children}</div>\n        </Column>\n    ) : (\n        <>{children}</>\n    );\n\nconst TrlKeys = {\n    title: 'vacancy.view.archived.title',\n    removed: 'employer.vacancyesArchive.removed',\n    description: 'vacancy.view.archived.description',\n    showMore: 'vacancy.view.archived.action',\n};\n\ninterface VacancyIsArchivedProps {\n    isHiddenSwitcher?: boolean;\n    setVisibilityBody: Dispatch<SetStateAction<boolean>>;\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancyIsArchived: TranslatedComponent<VacancyIsArchivedProps> = ({\n    isHiddenSwitcher,\n    setVisibilityBody,\n    hasVacancySectionWrapper = true,\n    trls,\n}) => {\n    const status = useSelector(({ vacancyView }) => vacancyView.status);\n    const userType = useSelector(({ userType }) => userType);\n    const availableVacancyActions = useSelector((state) => state.availableVacancyActions);\n    const archivedTitle = useMemo(() => {\n        if ((status.archived && availableVacancyActions.restoreToArchive) || status.disabled) {\n            return trls[TrlKeys.removed];\n        }\n        if (status.archived) {\n            return trls[TrlKeys.title];\n        }\n        return null;\n    }, [status.archived, status.disabled, trls, availableVacancyActions]);\n\n    useEffect(() => {\n        // В случае, если у нас вакансия архивная,\n        // то нам нужно спрятать контент после его инициализации? чтобы код подрядчиков работал\n        // useEffect как раз будет работать после DOMContentLoaded и прочего\n        const el = document.querySelector('.HH-VacancyBrandedDescription-DANGEROUS-HTML-ARCHIVED');\n        if (!el) {\n            return;\n        }\n        el.classList.add('g-hidden');\n    }, []);\n\n    useEffect(() => {\n        /**\n         * На странице присутствует 2 виджета отзывов работодателя:\n         * - однострочный верхний (выводится под названием компании)\n         * - большой подробный (выводится в блоке VacancyFooter)\n         *\n         * При клике на количество отзывов верхнего виджета страница прокручивается до большого\n         * Так как виджеты это независимые прокси-компоненты — действие осуществляется засчет\n         * диспатча кастомного события 'HH-Dream-Job-Scroll-To-Big-Widget' на window\n         *\n         * Само событие ловится в компоненте вывода прокси-кмпонента большого виджета и осуществляется прокрутка\n         *\n         * На архивной вакансии блок VacancyBody, включая VacancyFooter, скрыт под катом\n         * Необходимо чтобы при клике на количество отзывов тело вакансии раскрывалось и экран\n         * прокрутился до большого виджета с подробной информацией об отзывах\n         *\n         * В этом компоненте ловим необходимое событие и раскрываем тело вакансии\n         * Далее нужно чтобы компонент нижнего виджета получил это событие и прокрутил экран до нужного элемента\n         * По этому диспатчим это событие ещё раз, предварительно сняв текущий обработчик во избежание зацикливания\n         */\n        const handler = () => {\n            if (!isHiddenSwitcher) {\n                setVisibilityBody(true);\n                window.removeEventListener('HH-Dream-Job-Scroll-To-Big-Widget', handler);\n                window.dispatchEvent(new CustomEvent('HH-Dream-Job-Scroll-To-Big-Widget'));\n            }\n        };\n        window.addEventListener('HH-Dream-Job-Scroll-To-Big-Widget', handler);\n        return () => window.removeEventListener('HH-Dream-Job-Scroll-To-Big-Widget', handler);\n    }, [isHiddenSwitcher, setVisibilityBody]);\n\n    if (!status.archived && !status.disabled) {\n        return null;\n    }\n    return (\n        <Wrapper hasWrapper={hasVacancySectionWrapper}>\n            <H2>{archivedTitle}</H2>\n            <VSpacing base={4} />\n            <p className=\"vacancy-archive-description\">{trls[TrlKeys.description]}</p>\n            {!isHiddenSwitcher && userType !== UserType.Employer && userType !== UserType.BackOffice && (\n                <Link appearance={LinkAppearance.Pseudo} onClick={() => setVisibilityBody(true)}>\n                    {trls[TrlKeys.showMore]}\n                </Link>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default translation(VacancyIsArchived);\n","import { useCallback } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport InfoInline from 'bloko/blocks/drop/InfoInline';\nimport HoverTip, { TipPlacement } from 'bloko/blocks/drop/Tip/HoverTip';\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport TagList from 'bloko/blocks/tagList';\nimport Tag from 'bloko/blocks/tagList/tag';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport KeySkillsCompetenceList from 'lux/components/KeySkills/KeySkillsCompetenceList';\nimport translation from 'lux/components/translation';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport useSkillsSuggestionsCompetencies from 'lux/hooks/useSkillsSuggestionsCompetencies';\nimport { KeySkill } from 'lux/models/resume/resumeCommon.types';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\nconst TrlKeys = {\n    keySkills: 'rb.title.keySkills',\n    confirm: 'vacancy.keySkills.confirm',\n    otherwise: 'vacancy.keySkills.confirm.otherwise',\n    providers: {\n        one: 'vacancy.keySkills.providers.one',\n        many: 'vacancy.keySkills.providers.many',\n    },\n    otherProviders: {\n        one: 'vacancy.keySkills.providers.one.other',\n        many: 'vacancy.keySkills.providers.many.other',\n    },\n};\n\nexport const checkVacancyKeySkillsRender = ({ vacancyView }: DefaultRootState): boolean =>\n    !!vacancyView.keySkills?.keySkill?.length;\n\ninterface VacancyKeySkillsProps {\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancyKeySkills: TranslatedComponent<VacancyKeySkillsProps> = ({ hasVacancySectionWrapper = true, trls }) => {\n    const {\n        keySkills,\n        confirmableKeySkills: { providers },\n        professionalRoleIds,\n    } = useSelector((state) => state.vacancyView);\n    const isEmployer = useSelector(({ userType }) => UserType.Employer === userType);\n    const showKeySkills = useSelector(checkVacancyKeySkillsRender);\n    const hasProviders = providers.length > 0;\n\n    const currentRoleCompetenceList = useSkillsSuggestionsCompetencies(professionalRoleIds);\n\n    const isVbCompetenciesExpC = useExperiment(\n        'vb_competencies_C',\n        currentRoleCompetenceList.length > 0 && isEmployer,\n        false\n    );\n    const isVbCompetenciesExpD = useExperiment(\n        'vb_competencies_D',\n        currentRoleCompetenceList.length > 0 && isEmployer,\n        false\n    );\n\n    const renderProvidersInfo = useCallback(() => {\n        if (!hasProviders) {\n            return null;\n        }\n        const promoted = providers.filter(({ promoted }) => promoted);\n        const other = providers.filter(({ promoted }) => !promoted);\n        const hasBothProviders = promoted.length > 0 && other.length > 0;\n        const conversionKey = hasBothProviders ? 'otherProviders' : 'providers';\n\n        return (\n            <>\n                {trls[TrlKeys.confirm]}\n                {promoted.map(({ name }) => name).join(', ')}\n                {hasBothProviders && ` ${trls[TrlKeys.otherwise]}`}\n                {other.length > 0 && (\n                    <HoverTip\n                        placement={TipPlacement.Top}\n                        render={() => other.map(({ name }) => <div key={name}>{name}</div>)}\n                    >\n                        <Link appearance={LinkAppearance.Pseudo}>\n                            <Conversion\n                                value={other.length}\n                                one={trls[TrlKeys[conversionKey].one]}\n                                some={trls[TrlKeys[conversionKey].many]}\n                                many={trls[TrlKeys[conversionKey].many]}\n                            />\n                        </Link>\n                    </HoverTip>\n                )}\n            </>\n        );\n    }, [hasProviders, providers, trls]);\n\n    if (keySkills === null || !showKeySkills) {\n        return null;\n    }\n\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            <H2>{trls[TrlKeys.keySkills]}</H2>\n            <VSpacing base={4} />\n            <InfoInline withPointer show={hasProviders} showCloseButton={false} render={renderProvidersInfo}>\n                {isVbCompetenciesExpC || isVbCompetenciesExpD ? (\n                    <KeySkillsCompetenceList\n                        items={keySkills.keySkill.map<KeySkill>((skill) => ({ name: skill, id: skill }))}\n                        currentRoleIds={professionalRoleIds}\n                        isStrongTitles={false}\n                    />\n                ) : (\n                    <TagList\n                        items={keySkills.keySkill.map((skill, index) => (\n                            <Tag key={index} additionalDataQa=\"skills-element\">\n                                {skill}\n                            </Tag>\n                        ))}\n                    />\n                )}\n            </InfoInline>\n        </VacancySectionWrapper>\n    );\n};\n\nexport default translation(VacancyKeySkills);\n","import { useRef, useEffect } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport addressMapButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/address_map_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsHrZarplataDomain } from 'lux/hooks/useIsHrZarplataDomain';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyCompanyAddress from 'lux/components/VacancyView/VacancyCompanyAddress';\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\nconst TrlKeys = {\n    title: 'vacancy.address',\n    showOnMap: 'vacancy.address.showOnBigMap.action',\n};\n\nexport const checkVacancyMapRender = (state: DefaultRootState): boolean => !!state.vacancyView.address?.mapData?.points;\n\ninterface VacancyMapProps {\n    isRedesign?: boolean;\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancyMap: TranslatedComponent<VacancyMapProps> = ({ trls, isRedesign, hasVacancySectionWrapper = true }) => {\n    const mapContainer = useRef<HTMLDivElement>(null);\n    const staticHost = useSelector(({ config }) => config.staticHost);\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const address = useSelector((state) => state.vacancyView.address);\n    const compensation = useSelector((state) => state.vacancyView.compensation);\n    const mapDisabled = useSelector((state) => state.vacancyView.mapDisabled);\n    const vacancyLink = useSelector((state) => state.vacancyView.vacancyOnMapLink);\n    const archived = useSelector((state) => state.vacancyView?.status?.archived);\n    const mapDataAvailable = useSelector(checkVacancyMapRender);\n    const isHrZarplataDomain = useIsHrZarplataDomain();\n\n    useEffect(() => {\n        if (!mapDisabled && mapDataAvailable) {\n            // Отдельный IF, чтобы карты не затягивались в lux-server\n            if (!process.env.LUX_SERVER) {\n                import(/* webpackMode: \"eager\" */ 'Modules/Maps/showMap').then(({ default: showMap, defaults }) => {\n                    void (\n                        mapContainer.current &&\n                        showMap(mapContainer.current, {\n                            address,\n                            disableScrollZoom: true,\n                            onPlacemarkClick: () => {\n                                window.open(`${vacancyLink}${vacancyId || ''}`, '_blank');\n                            },\n                            placemarkZIndex: defaults.placemarkZIndex + 1,\n                            zoomControlPosition: {\n                                left: 10,\n                                top: 30,\n                            },\n                        })\n                    );\n                }, console.error);\n            }\n        }\n    }, [address, compensation, mapContainer, mapDisabled, mapDataAvailable, trls, vacancyLink, staticHost, vacancyId]);\n    if (!mapDataAvailable) {\n        return null;\n    }\n    const onLinkClick = () => {\n        if (!vacancyId) {\n            return;\n        }\n        addressMapButtonClick({ hhtmSourceLabel: 'vacancy_bottom_button', vacancyId });\n    };\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            <H2>{trls[TrlKeys.title]}</H2>\n            <VSpacing base={4} />\n            <VacancyCompanyAddress\n                isRedesign={isRedesign}\n                WrapperComponent={({ children }) => (\n                    <Text data-qa=\"vacancy-address-with-map\" size={isRedesign ? TextSize.Large : undefined}>\n                        {children}\n                        {isRedesign && <VSpacing base={2} />}\n                    </Text>\n                )}\n            />\n            {!mapDisabled && (\n                <>\n                    <div className=\"vacancy-address-map-wrapper\">\n                        <div className=\"vacancy-address-map\" ref={mapContainer} />\n                    </div>\n                    {!archived && !isHrZarplataDomain && (\n                        <div className=\"noprint\">\n                            <BlokoLink\n                                disableVisited\n                                Element={Link}\n                                to={`${vacancyLink}${vacancyId || ''}`}\n                                target=\"_blank\"\n                                data-qa=\"vacancy-address-big-map-link\"\n                                onClick={onLinkClick}\n                            >\n                                {trls[TrlKeys.showOnMap]}\n                            </BlokoLink>\n                        </div>\n                    )}\n                </>\n            )}\n        </VacancySectionWrapper>\n    );\n};\n\nexport default translation(VacancyMap);\n","import { ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { FormSeparator } from 'bloko/blocks/form';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'vacancy.view.online.title',\n    watching: {\n        one: 'vacancy.view.online.one.watching',\n        many: 'vacancy.view.online.many.watching',\n    },\n    viewer: {\n        one: 'vacancy.view.online.many.viewer',\n        some: 'vacancy.view.online.two.viewer',\n        many: 'vacancy.view.online.many.viewer',\n    },\n};\n\ninterface VacancyOnlineUsersCounterProps {\n    light?: boolean;\n    isRedesign?: boolean;\n}\n\nconst VacancyOnlineUsersCounter: TranslatedComponent<VacancyOnlineUsersCounterProps> = ({\n    trls,\n    light,\n    isRedesign,\n}) => {\n    const { vacancyId, status, features } = useSelector(({ vacancyView }) => vacancyView);\n    const vacancyOnlineUsersCounters = useSelector((state) => state.vacancyOnlineUsersCounters);\n    if (!vacancyOnlineUsersCounters || !vacancyId) {\n        return null;\n    }\n    const countersForVacancy = vacancyOnlineUsersCounters[vacancyId];\n    const hide = !!(!countersForVacancy?.excludingCurrent || status.archived || features.includes('edit'));\n    if (hide) {\n        return null;\n    }\n    const renderWrapper = (content: ReactNode) => {\n        if (isRedesign) {\n            return (\n                <div className=\"noprint\">\n                    {content}\n                    <VSpacing base={3} />\n                </div>\n            );\n        }\n        return (\n            <div className=\"noprint\">\n                <ColumnsRow>\n                    <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                        <VSpacing base={2} />\n                        <div>{content}</div>\n                        <FormSeparator />\n                    </Column>\n                </ColumnsRow>\n            </div>\n        );\n    };\n    return renderWrapper(\n        <>\n            {trls[TrlKeys.title]}\n            <ConversionNumber\n                value={countersForVacancy.includingCurrent}\n                one={trls[TrlKeys.watching.one]}\n                some={trls[TrlKeys.watching.many]}\n                many={trls[TrlKeys.watching.many]}\n                hasValue={false}\n            />{' '}\n            <span\n                className={classnames('vacancy-viewers-count', {\n                    'vacancy-viewers-count_light': light,\n                })}\n            >\n                <ConversionNumber\n                    value={countersForVacancy.includingCurrent}\n                    one={trls[TrlKeys.viewer.one]}\n                    some={trls[TrlKeys.viewer.some]}\n                    many={trls[TrlKeys.viewer.many]}\n                    hasValue={true}\n                />\n            </span>\n        </>\n    );\n};\n\nexport default translation(VacancyOnlineUsersCounter);\n","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { PartTimeOption } from 'lux/models/vacancyView.types';\nimport { arrayToHumanReadableList } from 'lux/modules/humanReadableList';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    parttimeOptions: 'vacancy.view.parttime.options',\n    or: 'or',\n    options: {\n        [PartTimeOption.Shifts]: 'vacancy.view.parttime.option.shifts',\n        [PartTimeOption.Weekends]: 'vacancy.view.parttime.option.weekends',\n        [PartTimeOption.Evenings]: 'vacancy.view.parttime.option.evenings',\n    },\n};\n\ninterface VacancyParttimeOptionsProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyParttimeOptions: TranslatedComponent<VacancyParttimeOptionsProps> = ({ isRedesign, trls }) => {\n    const parttimeOptions = useSelector((store) => store.vacancyView.parttimeOptions);\n    const parttimeOptionsArray = Object.values(PartTimeOption).filter((parttimeKey) => {\n        return parttimeOptions[parttimeKey];\n    });\n    if (!parttimeOptionsArray.length) {\n        return null;\n    }\n    const parttimeOptionsArrayTrl = parttimeOptionsArray.map((parttimeKey) => {\n        return trls[TrlKeys.options[parttimeKey]];\n    });\n    const parttimeOptionsTrl = arrayToHumanReadableList(parttimeOptionsArrayTrl, trls[TrlKeys.or]);\n    return (\n        <p\n            className={classnames({\n                'vacancy-description-list-item': isRedesign,\n            })}\n            data-qa=\"vacancy-view-parttime-options\"\n        >\n            {trls[TrlKeys.parttimeOptions]}\n            {': '}\n            {parttimeOptionsTrl}\n        </p>\n    );\n};\n\nexport default translation(VacancyParttimeOptions);\n","import PrintButton from 'lux/components/VacancyActions/PrintButton';\nimport usePrintVacancy from 'lux/components/VacancyCreate/usePrintVacancy';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst VacancyPreviewTools = () => {\n    const vacancyPreviewTools = useSelector((state) => state.vacancyPreviewTools);\n    const [printId, isDraft, show] = usePrintVacancy();\n\n    if (!vacancyPreviewTools) {\n        return null;\n    }\n\n    return (\n        <div className=\"vacancy-preview-footer-tools\">\n            <div className=\"vacancy-section\">{show && <PrintButton id={printId} draft={isDraft} />}</div>\n        </div>\n    );\n};\n\nexport default VacancyPreviewTools;\n","import { FC } from 'react';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst VacancyActionBlacklistComplain: FC = () => {\n    const userType = useSelector((state) => state.userType);\n    const vacancyView = useSelector((state) => state.vacancyView);\n    const canComplain = vacancyView.features.includes('canComplain');\n\n    if (!canComplain || userType !== UserType.Applicant) {\n        return null;\n    }\n\n    return (\n        <div className=\"vacancy-action vacancy-action_complain\">\n            <ContainerForMicroFrontend place=\"employerComplain\" />\n        </div>\n    );\n};\nexport default VacancyActionBlacklistComplain;\n","import { RefObject } from 'react';\n\nimport Button, { ButtonType, ButtonKind } from 'bloko/blocks/button';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyActionComplain from 'lux/components/VacancyView/VacancyActionComplain';\nimport VacancyActionResponse, { VacancyActionResponseKind } from 'lux/components/VacancyView/VacancyActionResponse';\n\nconst TrlKeys = {\n    response: 'button.placeResponse',\n};\n\ninterface VacancyResponseProps {\n    hideResponded?: boolean;\n    isRedesign?: boolean;\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n}\n\nconst VacancyResponse: TranslatedComponent<VacancyResponseProps> = ({\n    hideResponded = false,\n    trls,\n    isRedesign,\n    vacancyBodyFooterNodeRef,\n}) => {\n    const showSignupForm = useSelector((state) => state.vacancyView.showSignupForm);\n    const status = useSelector((state) => state.vacancyView.status);\n    const isBrandingPreview = useSelector((state) => state.vacancyView.isBrandingPreview);\n    const isTrusted = useSelector((state) => state.vacancyView.company['@trusted']);\n\n    if (showSignupForm || status.archived || status.disabled) {\n        return null;\n    }\n\n    return isBrandingPreview && !isRedesign ? (\n        <Button type={ButtonType.Button} kind={ButtonKind.Success} stretched>\n            {trls[TrlKeys.response]}\n        </Button>\n    ) : (\n        <>\n            <VacancyActionResponse\n                isSecondary\n                hideResponded={hideResponded}\n                isRedesign={isRedesign}\n                kind={VacancyActionResponseKind.AfterBody}\n                vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n            />\n            {!isTrusted && <VacancyActionComplain />}\n        </>\n    );\n};\n\nexport default translation(VacancyResponse);\n","import { MouseEvent, MutableRefObject } from 'react';\nimport { DefaultRootState, useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport askVacancyQuestionButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/ask_vacancy_question_button_click';\nimport { LinkChip, MultiLineContainer } from 'bloko/blocks/chips';\nimport { H2 } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport VacancyResponseLink from 'lux/components/VacancyResponseLink';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { ResponseQuestion } from 'lux/models/vacancyResponseQuestions';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { saveVacancyResponseQuestion } from 'lux/components/VacancyView/hooks/useResponseQuestion';\n\nexport const checkVacancyResponseQuestionsRender = (state: DefaultRootState): boolean => {\n    const isNeededUserType = [UserType.Applicant, UserType.Anonymous, UserType.NedoUser].includes(state.userType);\n    const vacancyId = state.vacancyView.vacancyId;\n    const responseStatus = vacancyId ? state.applicantVacancyResponseStatuses[vacancyId] : null;\n    const isCurrentlyApplied = responseStatus && responseStatus.usedResumeIds?.length > 0;\n    return !isCurrentlyApplied && isNeededUserType && vacancyId !== undefined;\n};\n\ninterface VacancyResponseQuestionsProps {\n    vacancyBodyFooterNodeRef: MutableRefObject<HTMLDivElement>;\n    hasButtomPadding?: boolean;\n}\n\nconst TrlKeys = {\n    title: 'vacancy.view.responseQuestions.title',\n    subTitle: 'vacancy.view.responseQuestions.subTitle',\n    questions: {\n        [ResponseQuestion.WorkPlaceLocation]: 'vacancy.view.responseQuestions.item.work_place_location',\n        [ResponseQuestion.EmploymentAndWorkMode]: 'vacancy.view.responseQuestions.item.employment_and_work_mode',\n        [ResponseQuestion.IsVacancyOpen]: 'vacancy.view.responseQuestions.item.is_vacancy_open',\n        [ResponseQuestion.SalaryOptions]: 'vacancy.view.responseQuestions.item.salary_options',\n        [ResponseQuestion.HowToContact]: 'vacancy.view.responseQuestions.item.how_to_contact',\n        [ResponseQuestion.Other]: 'vacancy.view.responseQuestions.item.other',\n    },\n    questionsFull: {\n        [ResponseQuestion.WorkPlaceLocation]: 'vacancy.view.responseQuestions.item.full.work_place_location',\n        [ResponseQuestion.EmploymentAndWorkMode]: 'vacancy.view.responseQuestions.item.full.employment_and_work_mode',\n        [ResponseQuestion.IsVacancyOpen]: 'vacancy.view.responseQuestions.item.full.is_vacancy_open',\n        [ResponseQuestion.SalaryOptions]: 'vacancy.view.responseQuestions.item.full.salary_options',\n        [ResponseQuestion.HowToContact]: 'vacancy.view.responseQuestions.item.full.how_to_contact',\n    },\n};\n\nconst VacancyResponseQuestions: TranslatedComponent<VacancyResponseQuestionsProps> = ({\n    trls,\n    vacancyBodyFooterNodeRef,\n    hasButtomPadding = true,\n}) => {\n    const dispatch = useDispatch();\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const employerId = useSelector(({ vacancyView }) => vacancyView.company.id);\n    const showSignupForm = useSelector(({ vacancyView }) => vacancyView.showSignupForm);\n\n    const show = useSelector(checkVacancyResponseQuestionsRender);\n\n    if (!show || typeof vacancyId !== 'number') {\n        return null;\n    }\n\n    const sendClickAnalytics = ({ value, vacancyId }: { value: string; vacancyId: number }) => {\n        askVacancyQuestionButtonClick({ value, vacancyId });\n    };\n\n    return (\n        <>\n            <H2>{trls[TrlKeys.title]}</H2>\n            <VSpacing base={2} />\n            <Text size={TextSize.Large}>{trls[TrlKeys.subTitle]}</Text>\n            <VSpacing base={5} />\n            <MultiLineContainer>\n                {Object.values(ResponseQuestion).map((question) => (\n                    <VacancyResponseLink\n                        key={question}\n                        render={(onResponseClick) => (\n                            <LinkChip\n                                href=\"#\"\n                                data-qa={classnames(\n                                    'vacancy-response-question',\n                                    `vacancy-response-question_${question}`\n                                )}\n                                onClick={(event: MouseEvent) => {\n                                    event.preventDefault();\n                                    const questionText =\n                                        question === ResponseQuestion.Other\n                                            ? ''\n                                            : trls[TrlKeys.questionsFull[question]];\n                                    sendClickAnalytics({\n                                        value: questionText,\n                                        vacancyId,\n                                    });\n                                    saveVacancyResponseQuestion({\n                                        vacancyId,\n                                        question: questionText,\n                                        questionId: question,\n                                        dispatch,\n                                    });\n                                    onResponseClick(event);\n                                }}\n                            >\n                                {trls[TrlKeys.questions[question]]}\n                            </LinkChip>\n                        )}\n                        vacancyId={vacancyId}\n                        employerId={employerId}\n                        scrollToSignupForm={showSignupForm}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        enableRelocationWarning\n                        place={'vacancy_response_questions'}\n                    />\n                ))}\n            </MultiLineContainer>\n            {hasButtomPadding && <VSpacing base={11} />}\n        </>\n    );\n};\n\nexport default translation(VacancyResponseQuestions);\n","import { PropsWithChildren, FC } from 'react';\n\ninterface VacancySectionWrapperProps {\n    hasWrapper?: boolean;\n}\n\nconst VacancySectionWrapper: FC<VacancySectionWrapperProps & PropsWithChildren> = ({ hasWrapper, children }) => {\n    if (hasWrapper) {\n        return <div className=\"vacancy-section\">{children}</div>;\n    }\n    return <>{children}</>;\n};\n\nexport default VacancySectionWrapper;\n","import { DefaultRootState } from 'react-redux';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Conversion from 'bloko/blocks/conversion';\nimport Gap from 'bloko/blocks/gap';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport Infotip from 'lux/components/Infotip';\nimport translation from 'lux/components/translation';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    infotip: 'infotips.content.suitableResumesOnVacancyPage',\n    show: 'vacancy.view.suitable.link.show',\n    resume: 'vacancy.view.suitable.link.resume',\n    one: 'vacancy.view.suitable.link.suitable.one',\n    some: 'vacancy.view.suitable.link.suitable.many',\n    many: 'vacancy.view.suitable.link.suitable.many',\n    ending: 'vacancy.view.suitable.link.ending',\n};\n\nexport const checkVacancySimilarResumesRender = ({ resumeSearchResult }: DefaultRootState): boolean =>\n    !!resumeSearchResult.totalResults;\n\nconst VacancySimilarResumes: TranslatedComponent = ({ trls }) => {\n    const similarResumes = useSelector((state) => state.resumeSearchResult);\n    const show = useSelector(checkVacancySimilarResumesRender);\n    const totalResults = similarResumes.totalResults;\n\n    if (!show || typeof totalResults !== 'number') {\n        return null;\n    }\n\n    const url = urlParser(paths.resumeSearch);\n    url.params = {\n        vacancy_id: [similarResumes.searchCriteria?.vacancy_id], // eslint-disable-line camelcase\n        order_by: ['relevance'], // eslint-disable-line camelcase\n        from: ['vacancy'],\n    };\n\n    return (\n        <div className=\"noprint\">\n            <Gap bottom>\n                <Infotip\n                    name=\"suitableResumesOnVacancyPage\"\n                    render={() => trls[TrlKeys.infotip]}\n                    markAsViewedEvent={MarkAsViewedEvent.OnHide}\n                    show\n                >\n                    <BlokoLink Element={Link} to={url.href}>\n                        {trls[TrlKeys.show]} {totalResults} {trls[TrlKeys.resume]},&nbsp;\n                        <Conversion\n                            hasValue={false}\n                            value={totalResults}\n                            one={trls[TrlKeys.one]}\n                            some={trls[TrlKeys.some]}\n                            many={trls[TrlKeys.many]}\n                        />{' '}\n                        {trls[TrlKeys.ending]}\n                    </BlokoLink>\n                </Infotip>\n            </Gap>\n        </div>\n    );\n};\n\nexport default translation(VacancySimilarResumes);\n","import { DefaultRootState } from 'react-redux';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H2 } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport SkillsSurvey from 'lux/components/SkillsSurvey';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancySectionWrapper from 'lux/components/VacancyView/VacancySectionWrapper';\n\nexport const checkVacancySkillSurveyRender = (state: DefaultRootState): boolean =>\n    !!state.vacancyView.showSkillsSurvey && !!state.vacancyView.skillsSurveyProfession;\n\nconst Features = {\n    showSkillSurveyOnVacancyEdit: 'show_skill_survey_on_vacancy_edit',\n};\n\nconst TrlKeys = {\n    titleBase: 'vacancy.title.skillsSurvey.base',\n    edit: 'vacancy.skillSurvey.edit',\n};\n\ninterface VacancySkillSurveyProps {\n    hasVacancySectionWrapper?: boolean;\n}\n\nconst VacancySkillSurvey: TranslatedComponent<VacancySkillSurveyProps> = ({\n    hasVacancySectionWrapper = true,\n    trls,\n}) => {\n    const skillSurveyTrls = useSelector(({ skillsSurveyTrls }) => skillsSurveyTrls);\n    const availableVacancyActions = useSelector(({ availableVacancyActions }) => availableVacancyActions);\n    const vacancyId = useSelector(({ vacancyView }) => vacancyView.vacancyId);\n    const showEdit = useSelector(({ features }) => !features[Features.showSkillSurveyOnVacancyEdit]);\n    const showSkillsSurvey = useSelector(checkVacancySkillSurveyRender);\n    const skillsSurveyProfession = useSelector((state) => state.vacancyView.skillsSurveyProfession);\n    if (!showSkillsSurvey || typeof skillsSurveyProfession !== 'string') {\n        return null;\n    }\n\n    return (\n        <VacancySectionWrapper hasWrapper={hasVacancySectionWrapper}>\n            <H2 Element=\"span\">\n                {format(trls[TrlKeys.titleBase], {\n                    '{0}': skillSurveyTrls.vacancyFieldTitleProfession,\n                })}\n            </H2>\n            {availableVacancyActions.edit && showEdit && (\n                <>\n                    {' '}\n                    <Link\n                        className={'resume-block-edit'}\n                        data-qa={'vacancy-skills-survey-edit'}\n                        to={`/skills_survey/employer?surveyProfession=${skillsSurveyProfession}&source=${\n                            vacancyId || ''\n                        }`}\n                    >\n                        <Text Element=\"span\" size={TextSize.Small}>\n                            {trls[TrlKeys.edit]}\n                        </Text>\n                    </Link>\n                </>\n            )}\n            <VSpacing base={4} />\n            <SkillsSurvey />\n        </VacancySectionWrapper>\n    );\n};\n\nexport default translation(VacancySkillSurvey);\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsRow } from 'bloko/blocks/column';\nimport { H1 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport CONTENT_ID from 'lux/components/A11y/A11yConstants';\nimport AsyncHighlighter from 'lux/components/Markup/AsyncHighlighter';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport VacancyCompensation from 'lux/components/VacancyView/VacancyCompensation';\n\nconst Wrapper: FC<PropsWithChildren<{ hasWrapper?: boolean }>> = ({ hasWrapper, children }) =>\n    hasWrapper ? (\n        <ColumnsRow>\n            <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                {children}\n            </Column>\n        </ColumnsRow>\n    ) : (\n        <>{children}</>\n    );\n\ninterface VacancyTitleProps {\n    constructorBrandedVacancy?: boolean;\n    hasWrapper?: boolean;\n}\n\nconst VacancyTitle: FC<VacancyTitleProps> = ({ constructorBrandedVacancy, hasWrapper = true }) => {\n    const status = useSelector(({ vacancyView }) => vacancyView.status);\n    const name = useSelector(({ vacancyView }) => vacancyView.name);\n\n    return (\n        <Wrapper hasWrapper={hasWrapper}>\n            <div\n                className={classnames('vacancy-title', {\n                    'vacancy-title_archive': status.archived || status.disabled,\n                })}\n                id={CONTENT_ID}\n            >\n                {constructorBrandedVacancy && <VSpacing base={4} />}\n                <H1 data-qa=\"vacancy-title\">\n                    <AsyncHighlighter>{name}</AsyncHighlighter>\n                </H1>\n                <VSpacing base={4} />\n                <VacancyCompensation />\n                <VSpacing base={6} />\n            </div>\n        </Wrapper>\n    );\n};\n\nexport default VacancyTitle;\n","import { RefObject } from 'react';\n\nimport Button from 'bloko/blocks/button';\nimport Link from 'bloko/blocks/link';\nimport Modal, { ModalFooter, ModalContent } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport VacancyActionResponse, { VacancyActionResponseKind } from 'lux/components/VacancyView/VacancyActionResponse';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './vacancy-video.less';\n\nconst TrlKeys = {\n    close: 'applicant.videoVacancy.modal.close',\n    respond: 'applicant.videoVacancy.modal.respond',\n};\n\ninterface VacancyVideoModalProps {\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    src?: string;\n    visible: boolean;\n    onClose: () => void;\n    onOpen: () => void;\n    onPlaying?: () => void;\n    onPlay?: () => void;\n    onPause?: () => void;\n    onTimeUpdate?: (time: number) => void;\n    onVolumeChange?: (volume: number) => void;\n    onRespondClick?: () => void;\n}\n\nconst VacancyVideoModal: TranslatedComponent<VacancyVideoModalProps> = ({\n    visible,\n    src,\n    onClose,\n    onOpen,\n    onPlaying,\n    onPlay,\n    onPause,\n    onTimeUpdate,\n    onVolumeChange,\n    onRespondClick,\n    vacancyBodyFooterNodeRef,\n    trls,\n}) => {\n    const { archived } = useSelector((state) => state.vacancyView.status);\n\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <ModalContent>\n                <video\n                    autoPlay\n                    className={styles.videoPlayer}\n                    src={src}\n                    controls\n                    controlsList=\"nofullscreen nodownload\"\n                    preload=\"metadata\"\n                    onPlaying={onPlaying}\n                    onPlay={onPlay}\n                    onPause={onPause}\n                    onTimeUpdate={(event) => onTimeUpdate?.((event.target as HTMLMediaElement).currentTime)}\n                    onVolumeChange={(event) => onVolumeChange?.((event.target as HTMLMediaElement).volume)}\n                />\n            </ModalContent>\n            <ModalFooter>\n                <span className={styles.close}>\n                    <Button onClick={onClose}>{trls[TrlKeys.close]}</Button>\n                </span>\n                {!archived ? (\n                    <VacancyActionResponse\n                        kind={VacancyActionResponseKind.VideoVacancy}\n                        vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                        isSecondary\n                        RespondedNode={Link}\n                        onResponseComplete={onClose}\n                        onScrollToSignupForm={onClose}\n                        onPopupCancelCallback={onOpen}\n                        onRespondClick={onRespondClick}\n                    />\n                ) : null}\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(VacancyVideoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"root--cIVrd1L0oQb9j3uMNNRU\",\"inner\":\"inner--HaAu8nabkJg4jmousYuQ\",\"timeline\":\"timeline--vLFTJA86L6JLELvoJfcs\",\"timelineItem\":\"timeline-item--tXN6stZ0nh9R6G_oEBPr\",\"play\":\"play--o7urdy1QHU4fZFisJhEs\",\"vacancyTitle\":\"vacancy-title--ZKFeFKPvCcKFe8EogfG_\",\"progress\":\"progress--ej02SvxIz6P0TqknYK1v\",\"progressItem\":\"progress-item--eYECPr11ldDBDichjysS\"};","import { FC } from 'react';\n\nimport Text from 'bloko/blocks/text';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './fake-player.less';\n\nconst FakePlayer: FC<{ onClick: () => void }> = ({ onClick }) => {\n    const imageUrl = useSelector((state) => state.vacancyView.videoVacancyImageUrl) || '';\n\n    return (\n        <div className={styles.root} style={{ backgroundImage: `url('${imageUrl}')` }} onClick={onClick}>\n            <div className={styles.inner}>\n                <div className={styles.timeline}>\n                    <div className={styles.play} />\n                    <span className={styles.timelineItem}>\n                        <Text>0:00</Text>\n                    </span>\n                    <svg className={styles.progress}>\n                        <circle className={styles.progressItem} cx=\"3.5\" cy=\"3.5\" r=\"3.5\" />\n                        <rect\n                            className={styles.progressItem}\n                            opacity=\"0.5\"\n                            width=\"100%\"\n                            y=\"2.75\"\n                            height=\"2\"\n                            rx=\"1\"\n                            ry=\"1\"\n                        />\n                    </svg>\n                    <span className={styles.timelineItem}>\n                        <Text>-:--</Text>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FakePlayer;\n","import { FC, PropsWithChildren, useCallback, useContext, useEffect, useRef } from 'react';\n\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nimport MainContentRefContext from 'lux/components/PageLayout/MainContentRefContext';\n\nimport styles from './vacancy-video.less';\n\nconst StickyContainer: FC<PropsWithChildren> = ({ children }) => {\n    const stickyElementRef = useRef<HTMLDivElement>(null);\n    const stickyPlaceRef = useRef<HTMLDivElement>(null);\n    const dummyRef = useRef<HTMLDivElement>(null);\n\n    const mainContentRef = useContext(MainContentRefContext);\n\n    const breakpoint = useBreakpoint(Breakpoint.L);\n    const isL = breakpoint === Breakpoint.L;\n\n    const updateMetrics = useCallback(() => {\n        if (\n            !(isL && stickyElementRef.current && stickyPlaceRef.current && dummyRef.current && mainContentRef?.current)\n        ) {\n            return;\n        }\n\n        const mainContentOffsetHeight = mainContentRef.current.offsetHeight;\n        const stickyElementBottom = stickyPlaceRef.current.offsetTop + stickyElementRef.current.offsetHeight;\n        const diff = mainContentOffsetHeight - stickyElementBottom;\n\n        dummyRef.current.style.height = `${diff}px`;\n    }, [isL, mainContentRef]);\n\n    useEffect(() => {\n        updateMetrics();\n        const intervalId = setInterval(updateMetrics, 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [updateMetrics]);\n\n    return (\n        <>\n            <div ref={stickyPlaceRef} />\n            <div className={styles.stickyContainer} ref={stickyElementRef}>\n                {children}\n            </div>\n            <div ref={dummyRef} />\n        </>\n    );\n};\n\nexport default StickyContainer;\n","import { ComponentType, FC, Fragment, memo, PropsWithChildren, RefObject, useState } from 'react';\n\nimport videoVacancyCardButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/video_vacancy_card_button_click';\nimport videoVacancyCloseButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/video_vacancy_close_button_click';\nimport videoVacancyPauseButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/video_vacancy_pause_button_click';\nimport videoVacancyPlayButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/video_vacancy_play_button_click';\nimport videoVacancyRespondButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/video_vacancy_respond_button_click';\nimport { H2Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { UserType } from 'lux/models/userType';\nimport { BrandingType } from 'lux/models/vacancyView';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport FakePlayer from 'lux/components/VacancyView/VacancyVideo/FakePlayer';\nimport StickyContainer from 'lux/components/VacancyView/VacancyVideo/StickyContainer';\nimport VacancyVideoModal from 'lux/components/VacancyView/VacancyVideo/VacancyVideoModal';\n\nimport styles from './vacancy-video.less';\n\ninterface VacancyVideoProps {\n    vacancyBodyFooterNodeRef?: RefObject<HTMLDivElement>;\n    Wrapper?: ComponentType;\n}\n\nconst DefaultWrapper: FC<PropsWithChildren> = ({ children }) => (\n    <>\n        <VSpacing base={7} xs={6} />\n        <div className={styles.root}>{children}</div>\n    </>\n);\n\nconst TrlKeys = {\n    title: 'applicant.videoVacancy.block.title',\n};\n\nconst MAX_VOLUME = 100;\n\nconst VacancyVideo: TranslatedComponent<VacancyVideoProps> = ({\n    vacancyBodyFooterNodeRef,\n    Wrapper = DefaultWrapper,\n    trls,\n}) => {\n    const [visible, setVisible] = useState(false);\n    const isRussia = useIsRussia();\n    const isZp = useIsZarplataPlatform();\n    const isApplicant = useSelector(({ userType }) => userType === UserType.Applicant);\n    const isAnonymous = useSelector(({ userType }) => userType === UserType.Anonymous);\n    const videoVacancyUrl = useSelector((state) => state.vacancyView.videoVacancyUrl);\n\n    const needShow = isRussia && (isApplicant || isAnonymous) && !isZp && !!videoVacancyUrl;\n\n    const [currentTime, setCurrentTime] = useState(0);\n    const [volume, setVolume] = useState(MAX_VOLUME);\n\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId) || 0;\n    const brandType = useSelector((state) => state.vacancyView.brandingType) || '';\n    const isSticky = [BrandingType.Constructor, BrandingType.Chameleon].includes(brandType);\n    const Container = isSticky ? StickyContainer : Fragment;\n\n    const analyticsParams = { vacancyId, brandType, currentTime, volume };\n\n    if (!needShow) {\n        return null;\n    }\n\n    return (\n        <Container>\n            <Wrapper>\n                <H2Section lite>{trls[TrlKeys.title]}</H2Section>\n                <VSpacing base={6} xs={4} />\n                <FakePlayer\n                    onClick={() => {\n                        setVisible(true);\n                        videoVacancyCardButtonClick({ vacancyId, brandType });\n                    }}\n                />\n                <VacancyVideoModal\n                    vacancyBodyFooterNodeRef={vacancyBodyFooterNodeRef}\n                    visible={visible}\n                    src={videoVacancyUrl}\n                    onClose={() => {\n                        setVisible(false);\n                        videoVacancyCloseButtonClick(analyticsParams);\n                    }}\n                    onOpen={() => setVisible(true)}\n                    onPlay={() => videoVacancyPlayButtonClick(analyticsParams)}\n                    onPause={() => videoVacancyPauseButtonClick(analyticsParams)}\n                    onTimeUpdate={setCurrentTime}\n                    onVolumeChange={setVolume}\n                    onRespondClick={() => videoVacancyRespondButtonClick(analyticsParams)}\n                />\n            </Wrapper>\n        </Container>\n    );\n};\n\nexport default memo(translation(VacancyVideo));\n","import classnames from 'classnames';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ExperienceOption } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    workExperience: 'vacancyInfo.workExperience',\n    experience: {\n        [ExperienceOption.NoExperience]: 'workExperience.noExperience',\n        [ExperienceOption.Between1And3]: 'workExperience.between1And3',\n        [ExperienceOption.Between3And6]: 'workExperience.between3And6',\n        [ExperienceOption.MoreThan6]: 'workExperience.moreThan6',\n    },\n};\n\ninterface VacancyWorkExperienceProps {\n    isRedesign?: boolean;\n}\n\nconst VacancyWorkExperience: TranslatedComponent<VacancyWorkExperienceProps> = ({ isRedesign, trls }) => {\n    const workExperience = useSelector((state) => state.vacancyView.workExperience);\n    if (!workExperience) {\n        return null;\n    }\n    return (\n        <p\n            className={classnames({\n                'vacancy-description-list-item': isRedesign,\n            })}\n        >\n            {trls[TrlKeys.workExperience]}\n            {': '}\n            <span data-qa=\"vacancy-experience\">{trls[TrlKeys.experience[workExperience]]}</span>\n        </p>\n    );\n};\n\nexport default translation(VacancyWorkExperience);\n","import { VacancyConstructorTemplate } from 'lux/components/VacancyView/brandingConstants';\nimport { BrandingType } from 'lux/models/vacancyView';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface BrandingData {\n    isBranded: boolean;\n    isConstructor: boolean;\n    isChameleon: boolean;\n    isBrandingPreview: boolean;\n    brandingType: BrandingType | null;\n    constructorTemplate: VacancyConstructorTemplate | null;\n}\n\nconst useBranding = (): BrandingData => {\n    const isBrandingPreview = useSelector(({ vacancyView }) => vacancyView.isBrandingPreview);\n    const brandingType = useSelector(({ vacancyView }) => vacancyView.brandingType);\n    const constructorTemplate = useSelector(({ vacancyView }) => vacancyView.vacancyConstructorTemplate);\n\n    return {\n        isBranded: !!brandingType,\n        isConstructor: brandingType === BrandingType.Constructor,\n        isChameleon: brandingType === BrandingType.Chameleon,\n        isBrandingPreview: !!isBrandingPreview,\n        brandingType: brandingType || null,\n        constructorTemplate: constructorTemplate || null,\n    };\n};\n\nexport default useBranding;\n","import { useSelector } from 'lux/modules/useSelector';\n\ninterface Logo {\n    '@type': string;\n    '@url': string;\n}\n\nconst useCompanyLogo = (): Logo | undefined => {\n    const logos = useSelector((state) => state.vacancyView.company.logos);\n    return (\n        logos?.logo.find((logo) => logo['@type'] === 'customVacancyLogo') ||\n        logos?.logo.find((logo) => logo['@type'] === 'vacancyPage')\n    );\n};\n\nexport default useCompanyLogo;\n","import { useRef } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport SendHHAnalytics, { SendKardinalAnalytics } from 'HH/SendHHAnalytics';\nimport { UserType } from 'lux/models/userType';\n\ninterface SendViewContactsAnalytics {\n    (params: { vacancyId?: number; employerId?: number; userType: UserType }): void;\n}\nexport default function useContactsAnalytics({ place }: { place: string }): SendViewContactsAnalytics {\n    const wasSentAnalytics = useRef(false);\n\n    const sendViewContactsAnalytics: SendViewContactsAnalytics = ({ vacancyId, employerId, userType }) => {\n        Analytics.sendEvent(userType, 'vacancy-view-contacts', 'open');\n        if (!wasSentAnalytics.current) {\n            void SendHHAnalytics({\n                data: {\n                    goal: 'view_contacts',\n                    vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n                },\n            });\n            void SendKardinalAnalytics({\n                goal: 'view_contacts',\n                data: {\n                    vacancy_id: String(vacancyId), // eslint-disable-line camelcase\n                    employer_id: String(employerId), // eslint-disable-line camelcase\n                    place,\n                },\n            });\n            wasSentAnalytics.current = true;\n        }\n    };\n\n    return sendViewContactsAnalytics;\n}\n","import { useState } from 'react';\n\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport default () => {\n    const userType = useSelector(({ userType }) => userType);\n    const status = useSelector(({ vacancyView }) => vacancyView.status);\n\n    const [isVisibleBody, setIsVisibleBody] = useState(\n        [UserType.Employer, UserType.BackOffice].includes(userType) || (!status.archived && !status.disabled)\n    );\n    return { isVisibleBody, setIsVisibleBody };\n};\n","import urlParser from 'bloko/common/urlParser';\n\nexport default function usePreview(url: string): boolean {\n    const { doPreview } = urlParser(url).params;\n    return !!(doPreview as string[])?.includes('true');\n}\n","/* eslint-disable import/prefer-default-export */\nimport { RefObject, useEffect } from 'react';\n\nimport clickmeBannerButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/vacancy/clickme_banner_button_click';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst PLACE_TO_POSITION_MAPPING = {\n    '245': 1,\n    '651': 2,\n    '652': 3,\n    '653': 4,\n};\n\ninterface UseTrackBannersClickEventProps {\n    containerRef: RefObject<HTMLDivElement>;\n}\n\nexport const useTrackBannersClickEvent = ({ containerRef }: UseTrackBannersClickEventProps): void => {\n    const vacancyId = useSelector((state) => state.vacancyView.vacancyId as number);\n    useEffect(() => {\n        const container = containerRef.current;\n        const clickHandler = (event: MouseEvent) => {\n            const matchedElement: HTMLElement | null = (event.target as HTMLElement).closest('[data-banner-id]');\n            if (matchedElement) {\n                const bannerId = matchedElement.dataset.bannerId;\n                if (bannerId && bannerId in PLACE_TO_POSITION_MAPPING) {\n                    clickmeBannerButtonClick({\n                        vacancyId,\n                        position: PLACE_TO_POSITION_MAPPING[bannerId as keyof typeof PLACE_TO_POSITION_MAPPING],\n                    });\n                }\n            }\n        };\n        if (container) {\n            container.addEventListener('click', clickHandler);\n        }\n        return () => {\n            if (container) {\n                container.removeEventListener('click', clickHandler);\n            }\n        };\n    }, [containerRef, vacancyId]);\n};\n","import { useEffect } from 'react';\n\nimport useOnOffState from 'lux/hooks/useOnOffState';\n\nexport default (): boolean => {\n    const [isPrinting, handleBeforePrint, handleAfterPrint] = useOnOffState(false);\n\n    useEffect(() => {\n        window.addEventListener('beforeprint', handleBeforePrint);\n        window.addEventListener('afterprint', handleAfterPrint);\n        return () => {\n            window.removeEventListener('beforeprint', handleBeforePrint);\n            window.removeEventListener('afterprint', handleAfterPrint);\n        };\n    }, [handleAfterPrint, handleBeforePrint]);\n\n    return isPrinting;\n};\n","import { CurrencyType } from 'lux/models/currencies.types';\n\nimport { ServiceItemCode, ServiceCode } from 'lux/models/price/productCodes';\nimport { ZpTariff } from 'lux/models/price/zpTariff';\n\nexport const ANY_REGION_ID = '0';\nexport const ANY_PROF_ROLE_GROUP_ID = '0';\nexport const START_AFTER_PAYMENT = '';\n\nexport type CountType = string; // Должен быть number\nexport type ProductIdType = string;\nexport type RegionIdType = string;\nexport type PeriodType = number;\nexport type WrongPeriodType = string; // Должен быть number\nexport type StartAfterPayment = typeof START_AFTER_PAYMENT;\n\nexport enum BooleanString {\n    True = 'true',\n    False = 'false',\n}\n\nexport enum IntervalInSecondsString {\n    OneDay = '1440',\n    ThreeDays = '4320',\n    SevenDays = '10080',\n}\n\nexport enum IntervalInDaysString {\n    OneWeek = '7',\n    OneYear = '365',\n}\n\nexport enum BillingPlatform {\n    HH = 'HH',\n    ZP = 'ZP',\n}\n\nexport interface ResumeAccessFeatures {\n    /**\n     * Открытые контакты сохранятся на 365 дней\n     */\n    civDuration?: IntervalInDaysString;\n    billingPlatforms?: BillingPlatform[];\n}\n\nexport interface PublicationFeatures {\n    /**\n     * Поднятие на первые страницы поиска раз в 24 часа вручную\n     */\n    manualUpdateInterval: IntervalInSecondsString;\n    /**\n     * Автоподнятие на первые страницы поиска раз в 3 дня\n     */\n    autoUpdateInterval: IntervalInSecondsString;\n    /**\n     * Выделение логотипом\n     */\n    logo: BooleanString;\n}\n\nexport interface OptionFeatures {\n    /**\n     * На первых местах в поиске\n     */\n    searchPremiumPosition: IntervalInDaysString;\n    /**\n     * Реклама на главной в разделе «Вакансии дня»\n     */\n    vacancyDay: IntervalInDaysString;\n    /**\n     * Выделение цветным значком\n     */\n    premiumLabel: BooleanString;\n    /**\n     * Выделение логотипом\n     */\n    logo: BooleanString;\n    /**\n     * Поднятие на первые страницы поиска раз в 24 часа вручную\n     */\n    manualUpdateInterval: IntervalInSecondsString;\n}\n\nexport interface SubProductType {\n    code: ServiceItemCode;\n    count: CountType;\n    features?: ResumeAccessFeatures | PublicationFeatures | OptionFeatures;\n}\n\nexport interface ResumeAccessSubProductType extends SubProductType {\n    code: ServiceItemCode.ContactsView;\n    features?: ResumeAccessFeatures;\n}\n\nexport interface ProductType {\n    businessContext?: {\n        auction?: unknown;\n    };\n    code: ServiceCode | ServiceItemCode;\n    currency: CurrencyType;\n    price: number;\n    products?: Record<string, SubProductType>;\n    profRoleGroup: string[];\n    region: string;\n    tariff?: ZpTariff;\n    /** Последний день действия цены: YYYY-MM-DD */\n    priceValidUntilDate?: string;\n}\n\nexport interface TariffProductType extends ProductType {\n    period: string;\n    tariff: ZpTariff;\n}\n\nexport interface AddContactsProductType extends ProductType {\n    code: ServiceCode.Add | ServiceCode.Reservation;\n    count: CountType;\n    products: Record<string, SubProductType>;\n}\n\nexport interface BrandingProductType extends ProductType {\n    code: ServiceCode.BrandingBuilderVacancy | ServiceCode.BrandingBuilderPage;\n    period: string;\n    products: Record<string, SubProductType>;\n}\n\nexport interface ClickmeProductType extends ProductType {\n    code: ServiceItemCode.Clickme;\n    count: CountType;\n}\n\nexport interface DBAccessProductType extends ProductType {\n    code: ServiceCode.Disposable | ServiceCode.ContactsViewWithStandart;\n    period: string;\n    products: Record<string, SubProductType>;\n}\n\nexport interface PublicationProductType extends ProductType {\n    code: ServiceCode.LimitedVacancy;\n    count: CountType;\n    period: string;\n    pricePerOne: number;\n}\n","export interface ContactPhone {\n    city: string;\n    country: string;\n    number: string;\n    comment?: string;\n}\n\nexport interface ContactInfo {\n    email?: string;\n    fio: string;\n    phones?: {\n        phones: ContactPhone[];\n    };\n    callTrackingEnabled: true;\n}\n\nexport interface VacancyViewInsider {\n    id: number;\n    ['@isVisible']?: boolean;\n    isVisible?: boolean;\n}\n\nexport interface VacancyViewStatus {\n    archived?: boolean;\n    disabled?: boolean;\n}\n\nexport interface VacancyViewMetroStation {\n    '@cityId': number;\n    '@id': number;\n    line: {\n        color: string;\n    };\n    name: string;\n}\nexport interface VacancyAddress {\n    city?: string;\n    street?: string;\n    building?: string;\n    rawAddress?: string;\n    mapData?: {\n        points: {\n            center: {\n                lat: number;\n                lng: number;\n                zoom: number;\n            };\n            marker: {\n                lat: number;\n                lng: number;\n            };\n        };\n    };\n    metroStations: {\n        metro: VacancyViewMetroStation[];\n    };\n    displayName?: string;\n}\n\nexport enum BadgeType {\n    EmployerHHRating = 'employer-hh-rating',\n    HrBrand = 'hrbrand',\n}\n\nexport interface Badge {\n    type: BadgeType;\n    url: string;\n    description: string | string[];\n    position?: string;\n    year?: string | null;\n    dataQASpecific?: string[];\n}\n\ninterface HrBrandData {\n    '@url': string;\n    '@year'?: string;\n}\n\ninterface HrBrandNominees {\n    nominees: HrBrandData;\n}\n\ninterface HrBrandWinners {\n    winners: HrBrandData;\n}\n\nexport type HrBrand = HrBrandNominees & HrBrandWinners;\n\nexport enum EmploymentType {\n    Probation = 'PROBATION',\n    Full = 'FULL',\n    Part = 'PART',\n    Volunteer = 'VOLUNTEER',\n    Project = 'PROJECT',\n}\n\nexport enum PartTimeOption {\n    Shifts = 'shifts',\n    Weekends = 'weekends',\n    Evenings = 'evenings',\n}\n\nexport interface VacancyHistory {\n    comment: string;\n    time: string;\n    type: string;\n    user: string;\n}\n\nexport interface VacancyMailing {\n    count: number;\n    date: number;\n}\n\nexport interface SystemInfo {\n    publicationTime: string;\n    expirationTime: string;\n    creationTime: string;\n    history: VacancyHistory[];\n    mailings: VacancyMailing[];\n}\n"],"names":["TemplateWidget","SidebarBehaviorOnSmallScreen","TemplateContext","createContext","useTemplateContext","useContext","useStylingTemplate","constructor","useExternalComponents","externalComponents","columnSizes","xs","s","m","isRedesign","l","SidebarWrapper","children","jsx","SidebarContentWrapper","_jsx","MainContentWrapper","VacancyViewWrapper","hasBackLayer","backgroundColor","hasTopPadding","style","color","className","classNames","NoPrint","Element","otherProps","styles","Sidebar","Wrapper","SidebarComponent","base","VacancyViewLayout","VacancyContainer","Top","sidebarBehaviorOnSmallScreen","ContainerWrapper","rightColumn","MapConfigToWidget","config","configToComponentMap","WidgetComponent","isValidKey","type","getWidgetComponent","console","SectionWrapper","borderRadius","Section","widgets","size","Backplate","forceStylesBackplate","height","dropShadow","flattenOnXs","separate","hasBackPlate","isXS","PaddingsOnSides","WidgetWrapper","paddingsOnSides","topPadding","buttomPadding","renderContent","jsxs","Fragment","undefined","Spoiler","renderSpoiler","DIVIDER_TYPE","mapSimpleWidgetConfigs","Content","firstSection","beforeSections","betweenSections","secondSection","firstSectionBottomItems","secondSectionBottomItems","dividerIndex","slice","_jsxs","ContentWrapper","topContent","PictureWidgetImage","path","dataQa","setLoaded","useLayoutEffect","tmpImg","Image","src","loaded","alt","scale","PictureWidgetWrapper","renderMetaInfo","Breakpoint","brk","defaultConfigToComponentMap","Picture","picture","pictureStyle","VacancyBody","vacancyBody","VacancyConstructorView","hideContent","templateData","template","value","FirstSectionFooterBlock","VacancyBodyBlock","element","params","window","requestIdleCallback","visibilityWatcher","onVisible","ids","id","templateName","adfoxParams","banners","Banners","flatten","metaData","result","Object","keys","forEach","item","isObject","child","key","getMetaData","geoObject","properties","get","getPart","part","convertGeoObject","object","join","array","filter","getStreet","converted","DependentLocalityName","ThoroughfareName","ThoroughfareNumber","DependentThoroughfareName","DependentThoroughfareNumber","getBuilding","PremiseName","PremiseNumber","SubPremiseName","SubPremiseNumber","isPartEqual","a","b","geoObjectFromAddress","address","ymaps","marker","geolocation","latitude","longitude","GeoObject","geometry","coordinates","metaDataProperty","GeocoderMetaData","AddressLine","street","building","rawAddress","LocalityName","city","name","displayName","addressFromYandex","map","metroStations","description","isMetroOnlyAddress","kind","split","includes","length","getCoordinates","mapCenter","getCenter","addressLine","line","metro","parts","Array","isArray","find","getMetro","fullAddress","mapData","points","center","lat","lng","zoom","getZoom","renderedAddress","concat","renderedName","SubAdministrativeAreaName","AdministrativeAreaName","JSON","stringify","metroStationId","prettyPrint","prettyAddress","push","defaults","mapZoom","placemarkIcon","globalVars","staticHost","placemarkIconSize","placemarkOffset","placemarkZIndex","disableScrollZoom","disableDrag","disableDblClickZoom","onPlacemarkClick","zoomControlPosition","geolocationPosition","autoFitToViewport","ymapsPromise","then","bounds","mapConfig","mapInstance","Map","controls","maxZoom","yandexMapDisablePoiInteractivity","suppressMapOpenBlock","add","control","ZoomControl","options","position","GeolocationControl","behaviorsDisableMap","scrollZoom","drag","dblClickZoom","behaviorsDisable","option","behaviors","disable","markerCoords","addressPlacemark","Placemark","iconLayout","iconImageHref","iconImageSize","iconOffset","zIndex","events","e","preventDefault","geoObjects","set","Utils","setCenter","container","fitToViewport","supportedLocales","country","locale","getYmapsPromise","lang","indexOf","apiKey","features","ymaps_api_key","suggestApiKey","ymaps_suggest_api_key","catch","error","Promise","reject","init","visible","checkVisible","offsetWidth","offsetHeight","getClientRects","removeEventListener","dataset","listenersSetted","addEventListener","AgreementButtonType","TrlKeys","common","text","russia","personalLink","agreementLink","continue","signup","agreementDataQa","AgreementText","trls","buttonType","Continue","withSocial","isIframeView","props","agreementURL","useSelectorNonNullable","state","authUrl","isLightPage","useSelector","personalDataRussiaURL","isRussia","useIsRussia","handleClickForVKminiApp","event","location","href","currentTarget","renderLink","to","Link","onClick","classnames","formatToReactComponent","translation","VerificationFormStep","Verification","DefaultVerification","isSignupPage","next","dispatch","useDispatch","login","authType","backurl","otp","vacancyId","postponedActions","vacancy","vrResponseHash","vrSignupLogin","onSubmitAnalytics","errorCode","Analytics","formName","loginBy","errors","formatAnalyticErrors","onShownAnalytics","elementRef","current","elementName","onSubmit","async","setIsSending","setVerification","code","response","fetcher","username","remember","accountType","isApplicantSignup","data","isMultiAccountCreation","employerLoginURL","loginURL","showDefaultError","success","verification","assign","propTypes","PropTypes","SIGN_IN","SIGN_UP","VERIFICATION","MULTIACCOUNT_GROUPING","ApplicantSignInSignUpFlow","SignIn","MultiAccountGrouping","DefaultMultiAccountGrouping","SignUp","DefaultSignUp","onSignup","onNextStep","isExpanded","onClickByPassword","errorPageLogin","step","setStep","useState","setCode","password","setPassword","signUpRef","useRef","router","query","iframe_view","Column","wrapperProps","useEffect","querySelectorAll","classList","remove","ref","cancel","loadBannerOnVisible","require","Banner","Component","componentDidMount","this","isEmpty","ReactDOM","setAutoHeight","bind","initBanners","componentDidUpdate","componentWillUnmount","shouldComponentUpdate","nextProps","cancelFetchBanners","search","pathname","userTargeting","adfoxParamsProperty","clientHeight","innerHTML","bannerId","place","bannerCommonTargeting","bannerAdTargeting","bannerParams","render","connect","AdsExternalBanner","cId","pp","p2","enableAdfox","shouldHideExternalBanners","isExternalBannersRestricted","useIsBelarus","ReferralLink","rel","target","TextSize","link","BannersGroup","groupClassNames","Clickme","showReferralLink","defaultProps","checkWidgetRender","isTrusted","employerInfo","vacancyView","company","countryId","CountryId","hasBigWidgetMicrofrontend","microFrontends","employerReviewsBig","checkWidgetRenderForVacancyView","userType","UserType","hasWrapper","EmployerReviewsBigWidget","widgetElement","showWidget","handler","ScrollToElement","H2","ContainerForMicroFrontend","DefaultWrapper","EmployerReviewsSmallWidget","white","isTrustedEmployer","SkillsSurvey","blockRef","PrintButton","draft","showHidden","buttonProps","paramName","urlParser","print","host","document","body","layer","TipLayer","icon","view","IconView","initial","IconColor","IconScale","isCreate","vacancyAction","VACANCY_ACTIONS","isPromoVacancy","vacancyCreateDraftId","originalVacancyId","archivedVacancyId","draftId","useParams","parseInt","VacancyRowContent","isChameleonEmployerView","isConstructor","useBranding","RowContent","VacancyDefaultContainer","ColumnsWrapper","isZarplata","useIsZarplataPlatform","isPrinting","usePrintDetect","product_id","mColumn","content","ColumnsRow","MultiAccountGroupingStep","formProps","MultiAccountGroupingForm","renderInput","renderError","renderSubmit","format","strong","FormItem","SignInStep","callbackSubmit","SignInForm","isAutofocusEnabled","dataQaModifier","renderLogin","renderSubmitButton","renderCaptcha","placeholder","SignUpStep","showAdvertisementAgreement","useShowAdvertisementAgreement","showAdvertisementSubscriptionApplicant","useShowAdvertisementSubscriptionApplicant","SignUpForm","renderFirstNameField","renderLastNameField","renderAccountDeleteInactive","renderAdvertisementAgreement","renderAdvertisementSubscriptionApplicant","sent","description1","description2","VerificationStep","codePlaceholder","onCancel","cancelText","VerificationForm","renderCodeError","renderCodeSender","isAutofocus","isStretched","importance","TextImportance","SignupForm","employerId","useCallback","sendResponseAttempt","hhtmSourceLabel","SignUpBlock","isBrandingConstructor","showSignupForm","analyticsSent","signupFormTop","offsetTop","scrollHandler","scrollY","innerHeight","vacancy_id","Form","VacancyAcceptTemporary","store","acceptTemporary","RespondButton","unusedResumeIds","hiddenResumeIds","VacancyResponseLink","ResponseStatus","headerMode","responseStatuses","applicantVacancyResponseStatuses","resumeIdResponseStatuses","useResumeIdResponseStatuses","responseStatus","usedResumeIds","bottom","invitedIds","discardedIds","VacancyActionBlacklistButton","vacancyType","isBrandingPreview","getDataQa","status","isLoading","BlacklistStatus","renderIcon","isBlacklisted","crossed","getCommonProps","title","getTitle","blacklistAdd","removeVacancy","removeEmployer","disabled","BlacklistMenu","checkInitialStatus","appearance","ButtonAppearance","VacancyActionFavorite","constructorBrandedVacancy","isFavoriteVacancy","toggleIsFavoriteVacancy","isAvailableChangeFavoriteState","useFavorite","isSendUxFeedback","commonProps","ButtonKind","iconColor","IconAppearance","VacancyActionShowContacts","contactsNodeRef","vacancyBodyFooterNodeRef","contactInfo","isVisible","isVisibleContacts","sendViewContactsAnalytics","useContactsAnalytics","isXs","useBreakpoint","isAnonymousOnXs","showContactsHandler","vacancySetVisibilityContactsAction","SendFloodlightConversion","cat","contactsElement","scrollToElement","topOffset","centered","renderContactsButton","ButtonScale","stretched","renderWrapper","VacancyContactsDrop","show","VacancyActions","resumeFormNodeRef","archived","ButtonType","FormSpacer","VacancyActionResponse","hasForceQuickResponse","VacancyActionResponseKind","VacancyActionBlacklist","VacancyAdditionalAccept","hint","placement","TipPlacement","checkVacancyAdditionalAcceptsRender","VacancyAdditionalAccepts","hasVacancySectionWrapper","acceptHandicapped","acceptKids","VacancySectionWrapper","checkVacancyAnonymousResponseRender","VacancyAnonymousResponse","checkVacancyApplicantRespondedInfoRender","alreadyResponded","showResumeForm","VacancyApplicantRespondedInfo","withWrapper","showRespondedInfo","topLevelSite","isZarplataPlatform","isHrZarplataDomain","useIsHrZarplataDomain","isZarplataApplicant","showNewFooter","TopLevelSite","defaultView","top","checkVacancyApplicantResponseRender","VacancyApplicantResponse","showResponse","hideResponded","VacancyBlockEmployer","VacancyTitleRedesigned","validThroughTime","H1Section","AsyncHighlighter","NON_BREAKING_SPACE","HumanDate","date","showYear","ShowYear","VacancyCompensation","VacancyBlockTopWrapper","VacancyBlockTop","VacancyWorkExperience","VacancyEmployment","VacancyParttimeOptions","VacancyOnlineUsersCounter","bannersBatchUrl","url","protocol","withCredentials","headers","getPVRequestHeaders","VideoVacancyWrapper","VacancyCompanyRedesigned","VacancyVideo","checkBetweenSectionsRender","BetweenSections","EmployerViewTop","VacancyTitle","VacancyCompany","containsSameElements","previous","every","index","useWidgetList","componentsCheckMap","MapWidgetToConfig","widgetConfigs","checkRender","useExternalWidget","widgetName","getElementByWidgetName","getElementByWidgetNameFunction","arg","firstSectionList","secondSectionList","betweenSectionsWidget","vacancyBodyWidget","BlockName","checkFirstSectionFooterRender","checkVacancyMapRender","checkVacancyCreationTimeRender","checkVacancyFooterRender","checkVacancySimilarResumesRender","FirstSectionFooter","MapBlockToConfig","VacancyMap","VacancyCreationTime","VacancySimilarResumes","getMapBlockToConfig","Blocklist","values","VacancyDescription","VacancyKeySkills","checkVacancyKeySkillsRender","VacancyDriverLicense","checkVacancyDriverLicenseRender","VacancySkillSurvey","checkVacancySkillSurveyRender","WidgetName","breakpoint","useMemo","EmployerReviewsWidgetBig","employerReviewsWidgetCheckRender","ApplicantRespondedInfo","VacancyContacts","hasVacancySectionWraper","checkVacancyContactsRender","VacancyResponseQuestions","hasButtomPadding","checkVacancyResponseQuestionsRender","VacancyConstructor","isEmployerView","branding","useMapWidgetToConfig","useExternalWidgets","CHAMELEON_COLUMNS","BrandingType","DEFAULT_COLUMN_PARAMS","DefaultAdditionalWrapper","columnParams","DefaultDescriptionWrapper","bottomContent","CustomColumnsWrapper","DescriptionWrapper","AdditionalWrapper","isVisibleBody","setIsVisibleBody","useIsVisibleBody","contentColumnParams","bottomColumnParams","isChameleon","useContentColumns","useAdvInfoRequest","VacancyIsArchived","isHiddenSwitcher","setVisibilityBody","styleClass","VacancyPreviewTools","VacancyFooter","EmployerBadge","badge","dataQA","urlParams","iconClass","charAt","toUpperCase","fullDataQA","dataQAWithType","dataQASpecific","spec","preparedDataQA","str","winners","nominees","PrepareEmployerBadges","badges","hrBrand","preparedBages","hrBrandType","year","newBadge","BadgeType","badgeItem","ReviewWidgetWrapper","insider","companyId","trusted","companyLogo","useCompanyLogo","insiderInterview","InsiderInterviewLink","IconKind","shape","IconShape","showCompanyLogo","showReviewsWidget","vacancyCompanyContent","VacancyCompanyName","VacancyCompanyAddress","WrapperComponent","VacancyCompanyLogo","MetroList","metroList","small","MetroPoint","DefaultWrapperComponent","vacancyLink","mapDisabled","addressMapButtonClick","disableVisited","LinkKind","area","multi","vacancyOnMapLink","addressContent","addressDetail","Boolean","renderAddressContent","noPrint","companyName","request","isPreview","usePreview","logoOnClick","SendHHAnalytics","goal","loading","isCrossposted","platform","Platform","platforms","BillingPlatform","companyNameOnClick","employerButtonClick","visibleName","employerOrganizationFormId","department","renderCompanyName","H2Section","lite","organizationFormId","companyHref","isInverted","isServiceIcon","accreditedITEmployer","CardVariant","Card","variant","subtitle","tip","wrapperRef","employerCardElementShown","handleClick","employerCardButtonClick","Rating","HrBrand","EmployerReviews","InsiderInterview","wrapper","HoverTip","Scroller","scrollboxRef","sliderRef","leftControlVisible","setLeftControlVisible","rightControlVisible","setRightControlVisible","setScroll","delta","scrollBy","left","recalculateControls","sliderWidth","scrollWidth","wrapperWidth","getBoundingClientRect","width","currentScroll","scrollLeft","useResize","debounce","currentScrollbox","debouncedScroll","IconDynamic","highlighted","HrBrandPosition","ratingTopTitleVariants","top10","top20","top50","top100","top200","member","Nominee","Winner","getHhRatingCard","ratingInfo","titleTrl","subtitleTrl","stop","getRatingInfo","getHrBrandCard","isHrBrandPosition","lastBadge","EmployerCards","employerReviewsIsOpenEmployer","insiderInfo","ratingBadge","hrBrandBadges","insiderInterviewBadge","badgeCardsVisible","badgeCard","CompensationType","Net","Gross","from","currencyCode","noCompensation","gross","compensation","compensationType","Header","groupSeparator","isAnonymous","hasContactInfo","VacancyContactsLinkSwitch","isDropVisible","setDropVisible","handleOpen","handleClose","linkSwitch","LinkAppearance","contacts","showCloseButton","onClose","RegistrationAction","DownPlacement","allowToShowContacts","chatButtonInfo","setChatButtonInfo","fetchResponseType","chatInfo","sendEmailOnClickAnalytics","String","sendPhoneOnClickAnalytics","renderPhoneComment","comment","phones","NoIndex","callTrackingEnabled","onPhoneClick","onEmailClick","block","fio","phone","number","formattedPhone","email","VacancyContactsRedesigned","noprint","VacancyContactsDropContent","chatWritePossibility","LoadingScale","scrollWithAttention","SIGNUP_FORM_ATTENTION_CLASS","chatButtonFetching","setChatButtonFetching","shortVacancy","fetchData","flexible","closeDrop","publicationDate","vacancyCode","areaNamePre","htmlReactParser","driverLicenseTypes","driverLicenseType","showDriverLicense","EmploymentType","ScheduleCamelCase","employment","workSchedule","VacancyAdaptiveBanners","adsVacancyParams","rightColumnBanners","rightColumnClickmeAdaptiveBanners","containerRef","useTrackBannersClickEvent","banner","withBanners","showReviewWidget","checkEmployerReviewsWidgetRender","availableVacancyActions","archivedTitle","restoreToArchive","el","querySelector","dispatchEvent","CustomEvent","keySkills","confirm","otherwise","providers","one","many","otherProviders","keySkill","confirmableKeySkills","professionalRoleIds","isEmployer","showKeySkills","hasProviders","currentRoleCompetenceList","useSkillsSuggestionsCompetencies","isVbCompetenciesExpC","useExperiment","isVbCompetenciesExpD","renderProvidersInfo","promoted","other","hasBothProviders","conversionKey","some","withPointer","items","skill","currentRoleIds","isStrongTitles","additionalDataQa","mapContainer","mapDataAvailable","default","showMap","open","light","vacancyOnlineUsersCounters","countersForVacancy","excludingCurrent","includingCurrent","hasValue","FormSeparator","PartTimeOption","parttimeOptions","parttimeOptionsArray","parttimeKey","parttimeOptionsArrayTrl","parttimeOptionsTrl","arrayToHumanReadableList","vacancyPreviewTools","printId","isDraft","usePrintVacancy","VacancyActionBlacklistComplain","VacancyResponse","isSecondary","VacancyActionComplain","isNeededUserType","ResponseQuestion","MultiLineContainer","question","onResponseClick","LinkChip","questionText","askVacancyQuestionButtonClick","sendClickAnalytics","saveVacancyResponseQuestion","questionId","scrollToSignupForm","enableRelocationWarning","resumeSearchResult","totalResults","similarResumes","paths","searchCriteria","order_by","markAsViewedEvent","MarkAsViewedEvent","showSkillsSurvey","skillsSurveyProfession","Features","skillSurveyTrls","skillsSurveyTrls","showEdit","vacancyFieldTitleProfession","edit","CONTENT_ID","H1","VacancyVideoModal","onOpen","onPlaying","onPlay","onPause","onTimeUpdate","onVolumeChange","onRespondClick","ModalContent","autoPlay","controlsList","preload","currentTime","volume","ModalFooter","RespondedNode","onResponseComplete","onScrollToSignupForm","onPopupCancelCallback","FakePlayer","imageUrl","videoVacancyImageUrl","backgroundImage","cx","cy","r","opacity","y","rx","ry","StickyContainer","stickyElementRef","stickyPlaceRef","dummyRef","mainContentRef","MainContentRefContext","isL","updateMetrics","diff","intervalId","setInterval","clearInterval","setVisible","isZp","isApplicant","videoVacancyUrl","needShow","setCurrentTime","setVolume","brandType","brandingType","Container","analyticsParams","videoVacancyCardButtonClick","videoVacancyCloseButtonClick","videoVacancyPlayButtonClick","videoVacancyPauseButtonClick","videoVacancyRespondButtonClick","memo","ExperienceOption","workExperience","constructorTemplate","vacancyConstructorTemplate","isBranded","logos","logo","wasSentAnalytics","SendKardinalAnalytics","employer_id","doPreview","PLACE_TO_POSITION_MAPPING","clickHandler","matchedElement","closest","clickmeBannerButtonClick","handleBeforePrint","handleAfterPrint","useOnOffState","ANY_PROF_ROLE_GROUP_ID","START_AFTER_PAYMENT","BooleanString","IntervalInSecondsString","IntervalInDaysString"],"sourceRoot":""}