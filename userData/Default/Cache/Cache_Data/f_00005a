{"version":3,"file":"15190.11e3dbba2d7c4b594ee0.js","mappings":"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","sources":["xhh/./webapp-static/lux/components/ApplicantSkillsVerificationIcon/index.tsx","xhh/./webapp-static/lux/components/ApplicantSkillsVerificationPeriod/index.tsx","xhh/./webapp-static/lux/components/ApplicantSkillsVerificationSource/index.tsx","webpack://xhh/./webapp-static/lux/components/OutdatedSkill/styles.less?66b0","xhh/./webapp-static/lux/components/OutdatedSkill/index.tsx","xhh/./webapp-static/lux/components/PageErrorWrapper/index.tsx","xhh/./webapp-static/lux/components/PageHead/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/DefaultLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/EmptyLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/HeaderLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/SideBarLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/index.tsx","xhh/./webapp-static/lux/components/TestCardRank/TestRank.tsx","xhh/./webapp-static/lux/models/applicantSkillsVerificationMethods/index.ts"],"sourcesContent":["import { FC } from 'react';\n\ninterface ApplicantSkillsVerificationIconProps {\n    iconSource: string;\n    alt: string;\n    isBig: boolean;\n}\n\nconst ApplicantSkillsVerificationIcon: FC<ApplicantSkillsVerificationIconProps> = ({ isBig, iconSource, alt }) => {\n    return (\n        <img\n            loading=\"lazy\"\n            src={iconSource}\n            alt={alt}\n            className={`resume-key-skills-verification-row-${isBig ? 'big' : 'small'}-icon`}\n        />\n    );\n};\n\nexport default ApplicantSkillsVerificationIcon;\n","import classnames from 'classnames';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport Icon, { IconColor, IconKind, IconScale, IconView } from 'bloko/blocks/icon';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\n\nconst ONE_MINUTE = 60;\n\ninterface ApplicantSkillsVerificationPeriodProps {\n    seconds: number;\n    className: string;\n    grey?: boolean;\n    black?: boolean;\n}\n\nconst TrlKeys = {\n    one: 'applicantSkillsVerificationMethods.one',\n    some: 'applicantSkillsVerificationMethods.some',\n    many: 'applicantSkillsVerificationMethods.many',\n};\n\nconst ApplicantSkillsVerificationPeriod: TranslatedComponent<ApplicantSkillsVerificationPeriodProps> = ({\n    trls,\n    seconds,\n    className,\n    grey,\n    black,\n}) => {\n    const minutes = seconds / ONE_MINUTE;\n    if (!minutes) {\n        return null;\n    }\n\n    return (\n        <div className={className} data-qa={'verification-method-time'}>\n            <Icon\n                view={IconView.Clock}\n                initial={black ? IconColor.Gray80 : IconColor.Gray50}\n                kind={IconKind.Default}\n                scale={IconScale.Small}\n            />\n            <span\n                className={classnames('resume-key-skills-verification-method-period', {\n                    'resume-key-skills-verification-method-period-black': black,\n                    'resume-key-skills-verification-method-period-grey': grey,\n                })}\n            >\n                <Conversion\n                    one={trls[TrlKeys.one]}\n                    some={trls[TrlKeys.some]}\n                    many={trls[TrlKeys.many]}\n                    format={(trl) => format(trl, { '{0}': minutes })}\n                    value={minutes}\n                />\n            </span>\n        </div>\n    );\n};\n\nexport default translation(ApplicantSkillsVerificationPeriod);\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport ApplicantSkillsVerificationIcon from 'lux/components/ApplicantSkillsVerificationIcon';\n\ninterface ApplicantSkillsVerificationSourceProps {\n    iconSource: string;\n    name: string;\n    alt: string;\n    className: string;\n    grey?: boolean;\n    black?: boolean;\n}\n\nexport const ApplicantSkillsVerificationSource: FC<ApplicantSkillsVerificationSourceProps> = ({\n    iconSource,\n    name,\n    alt,\n    className,\n    grey,\n    black,\n}) => {\n    return (\n        <div className={className} data-qa={'verification-method-source'}>\n            {!black && !grey && <ApplicantSkillsVerificationIcon alt={alt} iconSource={iconSource} isBig={false} />}\n            {(black || grey) && (\n                <div\n                    className={classnames({\n                        'skills-verification-methods-branding-book-icon': true,\n                        'skills-verification-methods-rank-icon': true,\n                        'skills-verification-methods-branding-book-icon-black': black,\n                    })}\n                />\n            )}\n            <span\n                className={classnames('resume-key-skills-verification-method-period', {\n                    'resume-key-skills-verification-method-period-black': black,\n                    'resume-key-skills-verification-method-period-grey': grey,\n                })}\n            >\n                {name}\n            </span>\n        </div>\n    );\n};\n\nexport default ApplicantSkillsVerificationSource;\n","// extracted by mini-css-extract-plugin\nexport default {\"outdated\":\"outdated--EHoM4h2ApFxLl9J_Z5eq\",\"text\":\"text--ois4CqpD_VBGZqCuftMg\"};","import { useMemo, useState } from 'react';\nimport isBefore from 'date-fns/isBefore';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfToday from 'date-fns/startOfToday';\n\nimport { HoverTip, TipProvider } from 'bloko/blocks/drop';\nimport DropInfoInline from 'bloko/blocks/drop/InfoInline';\nimport Icon, { IconColor, IconScale, IconShape, IconView } from 'bloko/blocks/icon';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport format from 'bloko/common/format';\nimport useBreakpoint from 'bloko/common/hooks/useBreakpoint';\nimport { LangTrls, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { Breakpoint } from 'bloko/common/media';\n\nimport formatDate from 'Modules/formatDate';\nimport translation from 'lux/components/translation';\nimport useIsClient from 'lux/hooks/useIsClient';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    expired: 'applicantSkillsVerification.expired',\n    expiredMulti: 'applicantSkillsVerification.expiredMulti',\n    expiredOrExpiresMulti: 'applicantSkillsVerification.expiredOrExpiresMulti',\n    expires: 'applicantSkillsVerification.expires',\n    expiresMulti: 'applicantSkillsVerification.expiresMulti',\n    tooltip: 'applicantSkillsVerification.tooltip',\n};\ninterface OutdatedSkillProps {\n    expirationDates: string[];\n    small?: boolean;\n    multi?: boolean;\n}\n\nconst getOutdatedText = (dates: string[], trls: LangTrls, isMulti: boolean) => {\n    if (!dates.length) {\n        return null;\n    }\n\n    let isExpired = false;\n    let isGrace = false;\n    for (const date of dates) {\n        const expirationDateStart = startOfDay(new Date(date));\n\n        if (isBefore(expirationDateStart, startOfToday())) {\n            isExpired = true;\n        } else {\n            isGrace = true;\n        }\n        if (isExpired && isGrace) {\n            break;\n        }\n    }\n    if (isMulti) {\n        if (isExpired && isGrace) {\n            return trls[TrlKeys.expiredOrExpiresMulti];\n        } else if (isGrace) {\n            return trls[TrlKeys.expiresMulti];\n        } else if (isExpired) {\n            return trls[TrlKeys.expiredMulti];\n        }\n    } else if (isExpired) {\n        return trls[TrlKeys.expired];\n    }\n\n    return format(trls[TrlKeys.expires], { '{0}': formatDate(new Date(dates[0]), 'dd MMMM') });\n};\nconst OutdatedSkill: TranslatedComponent<OutdatedSkillProps> = (props) => {\n    const { trls, expirationDates, small = false, multi = false } = props;\n    const isClient = useIsClient();\n    const [showHint, setShowHint] = useState<boolean>(false);\n    const isXS = useBreakpoint() === Breakpoint.XS;\n    const text = useMemo(() => getOutdatedText(expirationDates, trls, multi), [expirationDates, multi, trls]);\n\n    const handleHintClick = () => isXS && setShowHint(true);\n    const handleHintClose = () => setShowHint(false);\n\n    if (!expirationDates.length) {\n        return null;\n    }\n\n    return (\n        <DropInfoInline show={showHint && isXS} render={() => trls[TrlKeys.tooltip]} onClose={handleHintClose}>\n            <div className={styles.outdated}>\n                <Icon\n                    initial={IconColor.Orange60}\n                    scale={IconScale.Small}\n                    shape={IconShape.Triangle}\n                    view={IconView.Exclamation}\n                ></Icon>\n                <div className={styles.text}>\n                    <Text size={small ? TextSize.Small : TextSize.Medium}>{text}</Text>\n                </div>\n                <TipProvider>\n                    <HoverTip show={!isXS} render={() => trls[TrlKeys.tooltip]} host={isClient ? document.body : null}>\n                        <Icon\n                            initial={IconColor.Gray40}\n                            scale={IconScale.Small}\n                            view={IconView.QuestionMark}\n                            onClick={handleHintClick}\n                        />\n                    </HoverTip>\n                </TipProvider>\n            </div>\n        </DropInfoInline>\n    );\n};\n\nexport default translation(OutdatedSkill);\n","import Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { PageHead, PageTitle } from 'lux/components/PageHead';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    'error.400': 'error.400.message',\n    'error.403': 'error.403.message',\n    'error.404': 'error.404.message',\n    'error.500': 'error.500.tryagain',\n    'error.599': 'error.599.tryagain',\n    'error.default': 'error.500.tryagain',\n};\n\nconst PageErrorWrapper: TranslatedComponent = ({ children, trls }) => {\n    const errorCode = useSelector(({ errorCode }) => errorCode);\n    if (errorCode) {\n        const trlErrorCode = `error.${errorCode}`;\n        const trlCode = trlErrorCode in TrlKeys ? trlErrorCode : 'error.default';\n        const trl = trls[TrlKeys[trlCode as keyof typeof TrlKeys]];\n        return (\n            <>\n                <PageHead>\n                    <PageTitle>{trl}</PageTitle>\n                </PageHead>\n                <DefaultLayout>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        {trl}\n                    </Column>\n                </DefaultLayout>\n            </>\n        );\n    }\n\n    return <>{children}</>;\n};\n\nexport default translation(PageErrorWrapper);\n","import React, { Fragment } from 'react';\nimport { HeadProvider, Title, Meta, Link } from 'react-head';\n\nconst PageHead: React.FC<React.PropsWithChildren> = ({ children }) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return !process.env.LUX_SERVER ? <HeadProvider>{children}</HeadProvider> : <>{children}</>;\n};\n\ninterface PageDescriptionProps {\n    content: string;\n    openGraphContent?: string;\n}\n\nconst PageDescription: React.FC<PageDescriptionProps & React.PropsWithChildren> = ({ content, openGraphContent }) => {\n    return (\n        <Fragment>\n            <Meta name=\"description\" content={content} />\n            <Meta property=\"og:description\" content={openGraphContent || content} />\n        </Fragment>\n    );\n};\n\ninterface PageKeywordsProps {\n    content: string;\n}\n\nconst PageKeywords: React.FC<PageKeywordsProps & React.PropsWithChildren> = ({ content }) => {\n    return <Meta name=\"keywords\" content={content} />;\n};\n\nexport { PageHead, Title as PageTitle, Meta as PageMeta, PageDescription, PageKeywords, Link as PageLink };\n","import React from 'react';\n\nimport { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport RowContent from 'lux/components/RowContent';\n\ninterface DefaultLayoutProps {\n    /** Сжатый контент */\n    isShrinked?: boolean;\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps & React.PropsWithChildren> = ({ children, isShrinked }) => (\n    <ColumnsWrapper>\n        <RowContent isShrinked={isShrinked}>{children}</RowContent>\n    </ColumnsWrapper>\n);\n\nexport default DefaultLayout;\n","import React from 'react';\n\nconst EmptyLayout: React.FC<React.PropsWithChildren> = ({ children }) => <>{children}</>;\n\nexport default EmptyLayout;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport Gap from 'bloko/blocks/gap';\n\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nconst LightPageLayoutContent =\n    ({\n        error: ErrorComponent,\n        noContentPadding,\n        noBackground,\n    }: LightPageCommonProps): React.FC<React.PropsWithChildren> =>\n    ({ children }) =>\n        (\n            <Gap sTop sBottom mTop mBottom lTop lBottom>\n                {ErrorComponent && <ErrorComponent />}\n                <div\n                    className={classnames('light-page-content', {\n                        'light-page-content_no-padding': noContentPadding,\n                        'light-page-content_no-background': noBackground,\n                    })}\n                >\n                    {children}\n                </div>\n            </Gap>\n        );\n\nexport default LightPageLayoutContent;\n","import { Text, TextTypography, TextStyle, useBreakpoint } from '@hh.ru/magritte-ui';\nimport BlokoText, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport useMagritte from 'lux/hooks/useMagritte';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    copyright: {\n        [TopLevelSite.BY]: 'footer.tutby.copyrights',\n        general: 'index.footer.menuitem.copyright',\n    },\n};\n\ninterface FooterProps {\n    isContrast?: boolean;\n}\n\nconst LightPageLayoutFooter: TranslatedComponent<FooterProps> = ({ trls, isContrast }) => {\n    const isMagritte = useMagritte();\n    const topLevelSite = useSelector((store) => store.topLevelSite);\n    const { isXS } = useBreakpoint();\n\n    const content = (\n        <span suppressHydrationWarning>\n            {format(trls[TrlKeys.copyright[topLevelSite === TopLevelSite.BY ? TopLevelSite.BY : 'general']], {\n                '{0}': new Date().getFullYear().toString(),\n            })}\n        </span>\n    );\n\n    if (isMagritte) {\n        return (\n            <div className=\"light-page-footer\">\n                <div className=\"light-page-footer__copyright\">\n                    <Text\n                        style={isContrast && !isXS ? TextStyle.Contrast : TextStyle.Primary}\n                        typography={TextTypography.Label2Regular}\n                        data-qa=\"copyright\"\n                    >\n                        {content}\n                    </Text>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"light-page-footer\">\n            <div className=\"light-page-footer__copyright\">\n                <BlokoText size={TextSize.Small} data-qa=\"copyright\">\n                    {content}\n                </BlokoText>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(LightPageLayoutFooter);\n","import React from 'react';\n\nimport LightPageLayoutContent from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent';\nimport LightPageLayoutFooter from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter';\nimport LightPageLayoutHeader from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutHeader';\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nexport interface LightPageProps extends LightPageCommonProps {\n    children: React.FC<LightPageChildrenProps>;\n}\n\ninterface LightPageChildrenProps {\n    footer: React.ReactElement;\n    header: React.ReactElement;\n    Content: React.FC<React.PropsWithChildren>;\n}\n\nconst LightPage: React.FC<LightPageProps> = ({ children, noContentPadding, noBackground, promo, error }) => {\n    const Content = React.useMemo(\n        () => LightPageLayoutContent({ noContentPadding, noBackground, error }),\n        [noContentPadding, noBackground, error]\n    );\n\n    return children({\n        header: <LightPageLayoutHeader promo={promo} />,\n        Content,\n        footer: <LightPageLayoutFooter isContrast={!noBackground} />,\n    });\n};\n\nexport default LightPage;\n","import React from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H1 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface HeaderLayoutProps {\n    /** Обвязка содержимого страницы */\n    linkAboveHeader?: { to: string; trl: string };\n    /** Заголовок страницы */\n    title?: string;\n}\n\nconst HeaderLayout: React.FC<HeaderLayoutProps & React.PropsWithChildren> = ({ linkAboveHeader, children, title }) => (\n    <DefaultLayout>\n        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n            {linkAboveHeader && (\n                <BlokoLink disableVisited Element={Link} to={linkAboveHeader.to}>\n                    {linkAboveHeader.trl}\n                </BlokoLink>\n            )}\n            <H1>{title}</H1>\n            <VSpacing base={4} />\n        </Column>\n        {children}\n    </DefaultLayout>\n);\n\nexport default HeaderLayout;\n","import React, { ComponentType } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface SideBarLayoutProps {\n    sidebar: ComponentType;\n}\n\nconst SideBarLayout: React.FC<SideBarLayoutProps & React.PropsWithChildren> = ({\n    children,\n    sidebar: SideBarComponent,\n}) => (\n    <DefaultLayout>\n        <Column xs=\"4\" m=\"8\" l=\"11\" container>\n            {children}\n        </Column>\n        <Column xs=\"4\" m=\"4\" l=\"5\" container>\n            <SideBarComponent />\n        </Column>\n    </DefaultLayout>\n);\n\nexport default SideBarLayout;\n","import { useLayoutEffect } from 'react';\n\nimport PageErrorWrapper from 'lux/components/PageErrorWrapper';\nimport { PageHead, PageTitle, PageMeta, PageDescription, PageKeywords, PageLink } from 'lux/components/PageHead';\n\nimport FullPageLayout from 'lux/components/PageLayout/FullPageLayout';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport EmptyLayout from 'lux/components/PageLayout/Layouts/EmptyLayout';\nimport HeaderLayout from 'lux/components/PageLayout/Layouts/HeaderLayout';\nimport LightPageLayout from 'lux/components/PageLayout/Layouts/LightPageLayout';\nimport SideBarLayout from 'lux/components/PageLayout/Layouts/SideBarLayout';\nimport { PageLayoutWithCustomLayout } from 'lux/components/PageLayout/PageLayout.types';\n\nconst RSS_MIME = 'application/rss+xml';\n\nconst PageLayout: PageLayoutWithCustomLayout = ({\n    children,\n    layout: LayoutComponent = DefaultLayout,\n    errorWrapper: ErrorWrapperComponent = PageErrorWrapper,\n    ogTitle,\n    description,\n    ogDescription,\n    keywords,\n    canonical,\n    rssTitle,\n    rssHref,\n    removeTitle = false,\n    ...layoutProps\n}) => {\n    const { title } = layoutProps;\n\n    useLayoutEffect(() => {\n        if (removeTitle || title) {\n            const titleElement = document.querySelector('.HH-PageLayout-Title');\n            titleElement?.parentNode?.removeChild(titleElement);\n        }\n    }, [removeTitle, title]);\n\n    const content = (\n        <>\n            <PageHead>\n                {title && (\n                    <>\n                        <PageTitle>{title}</PageTitle>\n                        <PageMeta property=\"og:title\" content={ogTitle || title} />\n                    </>\n                )}\n                {description && <PageDescription content={description} openGraphContent={ogDescription} />}\n                {keywords && <PageKeywords content={keywords} />}\n                {canonical && <PageLink rel=\"canonical\" href={canonical} />}\n                {rssHref && (title || rssTitle) && (\n                    <PageLink title={rssTitle || title} type={RSS_MIME} rel=\"alternate\" href={rssHref} />\n                )}\n            </PageHead>\n            <LayoutComponent {...layoutProps}>{children}</LayoutComponent>\n        </>\n    );\n\n    return (\n        <FullPageLayout>\n            <ErrorWrapperComponent>{content}</ErrorWrapperComponent>\n        </FullPageLayout>\n    );\n};\n\nexport { EmptyLayout, DefaultLayout, SideBarLayout, LightPageLayout, HeaderLayout };\nexport default PageLayout;\n","import classnames from 'classnames';\n\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\ninterface TestRankProps {\n    rank?: number | null;\n    background?: boolean;\n    success?: boolean;\n    name?: string;\n    icon?: boolean;\n    black?: boolean;\n}\n\nconst TrlKeys = {\n    3: 'tests.card.level.advanced',\n    2: 'tests.card.level.middle',\n    1: 'tests.card.level.beginner',\n};\n\nconst TestRank: TranslatedComponent<TestRankProps> = ({\n    trls,\n    rank,\n    background = false,\n    success = false,\n    name = '',\n    icon,\n    black,\n}) => {\n    if (!rank) {\n        return <></>;\n    }\n\n    return (\n        <>\n            <div\n                className={classnames('skills-verification-methods-rank', {\n                    'skills-verification-methods-rank-background': background,\n                    'skills-verification-methods-rank-success': success,\n                    'skills-verification-methods-rank-black': black,\n                })}\n                data-qa={'verification-method-level'}\n            >\n                {icon && (\n                    <div\n                        className={classnames(\n                            'skills-verification-methods-rank-icon-margin',\n                            'skills-verification-methods-rank-icon',\n                            {\n                                [`skills-verification-methods-rank-${rank}-icon`]: true,\n                                [`skills-verification-methods-rank-${rank}-success-icon`]: success,\n                                [`skills-verification-methods-rank-${rank}-black-icon`]: black,\n                            }\n                        )}\n                    />\n                )}\n                <Text>{name || trls[TrlKeys[rank as keyof typeof TrlKeys]]}</Text>\n            </div>\n            <VSpacing base={2} />\n        </>\n    );\n};\n\nexport default translation(TestRank);\n","export enum ApplicantSkillsVerificationMethodKeys {\n    AvailableAt = 'available_at',\n    BrandingSettings = 'branding_settings',\n    AgeLabel = 'age_label',\n    CtaButtonEnabled = 'cta_button_enabled',\n    KakDelaQuiz = 'kak_dela_quiz',\n    EstimatedTime = 'estimated_time',\n    QuizId = 'quiz_id',\n    UrlTemplate = 'url_template',\n    PromotionSettings = 'promotion_settings',\n    BannerEnabled = 'banner_enabled',\n    VerificationObjects = 'verification_objects',\n    InternalId = 'internal_id',\n    ValidUntil = 'valid_until',\n}\n\nexport enum ValidityStatus {\n    NONE = 'NONE',\n    EXPIRED = 'EXPIRED',\n    GRACE = 'GRACE',\n    EFFECTIVE = 'EFFECTIVE',\n}\n\ninterface Original {\n    original: string;\n}\n\ninterface Icon {\n    dark: Original;\n    defaults: Original;\n    light: Original;\n}\n\nexport interface ApplicantSkillsVerificationMethod {\n    availability: {\n        [ApplicantSkillsVerificationMethodKeys.AvailableAt]: string | null;\n        status: string;\n    };\n    [ApplicantSkillsVerificationMethodKeys.BrandingSettings]: {\n        [ApplicantSkillsVerificationMethodKeys.AgeLabel]: string;\n        [ApplicantSkillsVerificationMethodKeys.CtaButtonEnabled]: boolean;\n        enabled: boolean;\n    };\n    description: string;\n    headline: null;\n    icon: Icon;\n    id: number;\n    [ApplicantSkillsVerificationMethodKeys.KakDelaQuiz]: {\n        content: string;\n        [ApplicantSkillsVerificationMethodKeys.EstimatedTime]: number;\n        [ApplicantSkillsVerificationMethodKeys.QuizId]: string;\n        [ApplicantSkillsVerificationMethodKeys.UrlTemplate]: string;\n    };\n    name: string;\n    platform: string;\n    [ApplicantSkillsVerificationMethodKeys.PromotionSettings]: {\n        [ApplicantSkillsVerificationMethodKeys.BannerEnabled]: boolean;\n    };\n    source: {\n        description: null;\n        headline: Icon;\n        href: string;\n        icon: Icon;\n        id: number;\n        name: string;\n    };\n    [ApplicantSkillsVerificationMethodKeys.VerificationObjects]: [\n        {\n            category: string;\n            id: number;\n            level: {\n                id: number;\n                [ApplicantSkillsVerificationMethodKeys.InternalId]: string;\n                name: string;\n                rank: number;\n            };\n            name: string;\n        }\n    ];\n    validity: {\n        state: ValidityStatus;\n        [ApplicantSkillsVerificationMethodKeys.ValidUntil]: string | null;\n    };\n}\n\nexport type ApplicantSkillsVerificationMethods = Array<ApplicantSkillsVerificationMethod>;\n"],"names":["ApplicantSkillsVerificationIcon","isBig","iconSource","alt","loading","src","className","TrlKeys","ApplicantSkillsVerificationPeriod","trls","seconds","grey","black","minutes","view","IconView","initial","IconColor","kind","IconKind","scale","IconScale","classnames","one","some","many","format","trl","value","translation","ApplicantSkillsVerificationSource","name","OutdatedSkill","props","expirationDates","small","multi","isClient","useIsClient","showHint","setShowHint","useState","isXS","useBreakpoint","Breakpoint","text","useMemo","dates","isMulti","length","isExpired","isGrace","date","expirationDateStart","startOfDay","Date","isBefore","startOfToday","formatDate","getOutdatedText","show","render","onClose","styles","shape","IconShape","size","TextSize","TipProvider","HoverTip","host","document","body","onClick","PageErrorWrapper","children","errorCode","useSelector","trlErrorCode","xs","s","m","l","PageHead","HeadProvider","PageDescription","content","openGraphContent","Fragment","Meta","property","PageKeywords","DefaultLayout","isShrinked","ColumnsWrapper","LightPageLayoutContent","error","ErrorComponent","noContentPadding","noBackground","sTop","sBottom","mTop","mBottom","lTop","lBottom","TopLevelSite","general","LightPageLayoutFooter","isContrast","isMagritte","useMagritte","topLevelSite","store","suppressHydrationWarning","getFullYear","toString","Text","style","TextStyle","typography","TextTypography","LightPage","promo","Content","React","header","LightPageLayoutHeader","footer","HeaderLayout","linkAboveHeader","title","disableVisited","Element","Link","to","H1","base","SideBarLayout","sidebar","SideBarComponent","container","PageLayout","layout","LayoutComponent","errorWrapper","ErrorWrapperComponent","ogTitle","description","ogDescription","keywords","canonical","rssTitle","rssHref","removeTitle","layoutProps","useLayoutEffect","titleElement","querySelector","parentNode","removeChild","rel","href","type","FullPageLayout","TestRank","rank","background","success","icon","ApplicantSkillsVerificationMethodKeys","ValidityStatus"],"sourceRoot":""}