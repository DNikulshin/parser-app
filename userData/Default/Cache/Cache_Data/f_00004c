{"version":3,"file":"IndexPage.a030dd16b33600b222f5.js","mappings":"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","sources":["xhh/./webapp-static/js/HH/LoadBannerOnVisibleModule.js","xhh/./webapp-static/js/Modules/ProxyExternalServiceLoader.ts","xhh/./webapp-static/js/Utils/VisibilityWatcher.js","xhh/./webapp-static/lux/components/Applicant/AddAuthPhone/constants.ts","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/AgreementText.tsx","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/VerificationFormStep.jsx","xhh/./webapp-static/lux/components/ApplicantSignInSignUpFlow/index.jsx","xhh/./webapp-static/lux/components/Banner/index.tsx","xhh/./webapp-static/lux/components/Banner/AdsExternalBanner.tsx","xhh/./webapp-static/lux/components/BrandingInfo.tsx","xhh/./webapp-static/lux/components/CodeInjector/ContainerForMicroFrontend.tsx","xhh/./webapp-static/lux/components/GetAppSMS/index.tsx","xhh/./webapp-static/lux/components/PageErrorWrapper/index.tsx","xhh/./webapp-static/lux/components/PageHead/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/DefaultLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/EmptyLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/LightPageLayout/index.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/HeaderLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/Layouts/SideBarLayout.tsx","xhh/./webapp-static/lux/components/PageLayout/index.tsx","xhh/./webapp-static/lux/components/RowContent/index.tsx","xhh/./webapp-static/lux/components/SignupModal/api/index.ts","xhh/./webapp-static/lux/components/SignupModal/lib/index.ts","xhh/./webapp-static/lux/components/VacanciesOfTheDay/hooks/useVacanciesOfTheDayViewAnalytics.ts","xhh/./webapp-static/lux/components/WorkInProfession/Header.tsx","xhh/./webapp-static/lux/components/WorkInProfession/ListItemMobile.tsx","webpack://xhh/./webapp-static/lux/components/WorkInProfession/work-in-profession.less?9685","xhh/./webapp-static/lux/components/WorkInProfession/ModalGroupMobile.tsx","xhh/./webapp-static/lux/components/WorkInProfession/Mobile.tsx","xhh/./webapp-static/lux/components/WorkInProfession/Utils.ts","xhh/./webapp-static/lux/components/WorkInProfession/ListItem.tsx","xhh/./webapp-static/lux/components/WorkInProfession/index.tsx","xhh/./webapp-static/lux/models/banners.ts","webpack://xhh/./webapp-static/lux/components/Employer/AdditionalCheck/additionalCheck.less?5458","xhh/./webapp-static/lux/components/Employer/AdditionalCheck/index.tsx","webpack://xhh/./webapp-static/lux/components/AppBanner/app-banner.less?d2be","xhh/./webapp-static/lux/components/AppBanner/index.tsx","xhh/./webapp-static/lux/components/EmployerRatingTeaser/index.tsx","xhh/./webapp-static/lux/components/MessengersBots/index.tsx","xhh/./webapp-static/lux/components/InternalPromoBlock/index.tsx","xhh/./webapp-static/lux/components/NewsBox/NewsBoxItem.tsx","xhh/./webapp-static/lux/components/NewsBox/analytics.ts","xhh/./webapp-static/lux/components/NewsBox/index.tsx","xhh/./webapp-static/lux/components/WorkInCompany/Utils.ts","xhh/./webapp-static/lux/components/WorkInCompany/WorkInBanner.tsx","xhh/./webapp-static/lux/components/WorkInCompany/hooks/useCompaniesOfTheDayViewAnalytics.ts","xhh/./webapp-static/lux/components/RainbowCatalog/Drop/CompaniesOfTheDay.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/utils.ts","xhh/./webapp-static/lux/components/RainbowCatalog/Drop/Profession.tsx","xhh/./webapp-static/lux/components/VacanciesOfTheDay/analytics.ts","xhh/./webapp-static/lux/components/VacancyCompanyLink/index.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Drop/VacanciesOfTheDay.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Modal/index.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Modal/Profession.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Drop/index.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Tile/Mobile.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Tile/index.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/Tile/Vacancy.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/useGetDropPosition.tsx","xhh/./webapp-static/lux/components/RainbowCatalog/index.tsx","xhh/./webapp-static/lux/components/VacanciesOfTheDay/constants.ts","xhh/./webapp-static/lux/components/RainbowCatalog/const.ts","xhh/./webapp-static/lux/components/RainbowCatalog/getClickmeVacancies.ts","xhh/./webapp-static/lux/components/RainbowCatalog/shuffleVacanciesOfTheDayWithClickme.ts","xhh/./webapp-static/lux/components/RainbowCatalog/useFetchVacanciesOfTheDay.tsx","xhh/./webapp-static/lux/components/RecommendedVacancies/SimilarSavedSearchInfo.tsx","xhh/./webapp-static/lux/components/RecommendedVacancies/Mobile.tsx","xhh/./webapp-static/lux/components/SignupModal/MainPageSignUpModal.tsx","xhh/./webapp-static/lux/components/StayInTouch/AppLink.tsx","xhh/./webapp-static/lux/components/StayInTouch/Header.tsx","xhh/./webapp-static/lux/components/StayInTouch/MobilePageLink.tsx","xhh/./webapp-static/lux/components/StayInTouch/index.tsx","xhh/./webapp-static/lux/components/UsefulLinks/index.tsx","xhh/./webapp-static/lux/components/VacancyOfTheDay/index.tsx","xhh/./webapp-static/lux/components/VacanciesOfTheDay/index.tsx","xhh/./webapp-static/lux/components/VacanciesOfTheDay/Banners.tsx","xhh/./webapp-static/lux/components/VacanciesOfTheDay/Mobile.tsx","xhh/./webapp-static/lux/components/WorkInCompany/index.tsx","xhh/./webapp-static/lux/components/WorkInCompany/MobileCompanyItem.tsx","xhh/./webapp-static/lux/components/WorkInCompany/Mobile.tsx","xhh/./webapp-static/lux/components/WorkInOtherCities/index.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/CreateResumeButton.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/DashboardBigPromoFooter.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/DashboardFooter.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/DashboardSearch.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/Dashboard.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/DashboardMobileSearch.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/multi-account-grouping.less?2f3c","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/MultiAccountGroupingStep.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/sign-in-step.less?711d","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/SignInStep.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/sign-up-step.less?f500","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/SignUpStep.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/verification-step.less?6541","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/VerificationStep.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Form/index.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/banner.less?1cd1","xhh/./webapp-static/lux/components/IndexPageAnonymous/SignUp/Banner.tsx","xhh/./webapp-static/lux/components/IndexPageAnonymous/index.tsx","xhh/./webapp-static/lux/components/FAQ/analytics.ts","xhh/./webapp-static/lux/components/FAQ/index.tsx","webpack://xhh/./webapp-static/lux/components/RsvUserCompetencies/rsv-user-competencies.less?fb37","xhh/./webapp-static/lux/components/RsvUserCompetencies/RsvUserCompetenciesModal.tsx","xhh/./webapp-static/lux/components/RsvUserCompetencies/RsvUserCompetenciesNotification.tsx","xhh/./webapp-static/lux/components/RsvUserCompetencies/RsvUserCompetenciesNotificationError.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/card.less?9152","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/Card.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/CreateResume.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/useCanUpdateResumes.ts","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/EnableResumeAutoUpdate.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/circle-progress.less?7145","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/CircleProgress.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/response-streak.less?e0ed","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/ResponseStreak.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/UpdateResumes.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/actions.less?7c61","xhh/./webapp-static/lux/components/IndexPageApplicant/Actions/index.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/EventList.tsx","webpack://xhh/./webapp-static/lux/components/IndexPageApplicant/RecommendedVacancies/recommended-vacancies.less?78a5","xhh/./webapp-static/lux/components/IndexPageApplicant/RecommendedVacancies/RecommendedVacancies.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/Dashboard.tsx","xhh/./webapp-static/lux/components/IndexPageApplicant/index.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/analytics.ts","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Calendar/Title.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Calendar/index.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/BannerWrapper/index.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Calendar/CalendarWithBanners.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/getTranslationsFor.ts","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/BalanceAccess.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/BalanceOptions/BalanceOptionsTooltipItem.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/BalanceOptions/BalanceOptions.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/BalanceVacancies.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/EventStatistics.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/EmployerEventList/index.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/EmptySearches.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/SearchCriterion.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/SearchDetails.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/SavedSearch.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/SearchList.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/LastSearches/index.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Separator.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/ItemLink.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/ItemText.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/constants.ts","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/Body.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/Footer.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/Tab.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/Tabs.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Updates/index.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/Dashboard/index.jsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/NewsBoxWrapper/index.tsx","xhh/./webapp-static/lux/components/EmployerReviews/WidgetEmployerReviewsIndex/index.tsx","xhh/./webapp-static/lux/components/RenewalService/RenewalServiceWidget.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/components/WidgetEmployerIndexWrapper/index.tsx","xhh/./webapp-static/lux/components/IndexPageEmployer/index.jsx","xhh/./webapp-static/lux/modules/employer/states.ts","xhh/./webapp-static/lux/modules/employer/categories.js","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/CompanyConfirmation/index.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/ContactPhones/index.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/PreparedVacancyTemplates/index.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStatus.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/AbstractVacancy.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/LinkInfo.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/BilledVacancy.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/RecentDraftVacancy.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/ScheduledPublication.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStub.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/components/DashboardVacancy/DashboardVacancy.jsx","xhh/./webapp-static/lux/components/IndexPageNewEmployer/index.jsx","webpack://xhh/./webapp-static/lux/components/MobileAppPromotion/mobile-app-promotion.less?a216","xhh/./webapp-static/lux/components/MobileAppPromotion/index.tsx","xhh/./webapp-static/lux/pages/IndexPage/IndexPage.route.jsx"],"sourcesContent":["import Banners from 'HHC/Banners';\nimport visibilityWatcher from 'Utils/VisibilityWatcher';\n/**\n * Подгружает баннер в ноду компонента, при видимости этой ноды.\n *\n * @param {String|Number}   id              ID баннера\n * @param {Array}           ids             ID баннеров, имеет приоритет перед id\n * @param {String}          [templateName]  Имя шаблона для баннера, если имя шаблона не указано, то баннер будет\n *                                          добавлен в текущую ноду без применения шаблонов\n *\n * @name HH/LoadBannerOnVisibleModule\n * @constructor\n */\nexport default (element, params) => {\n    window.requestIdleCallback(() => {\n        visibilityWatcher.init({\n            element,\n            onVisible() {\n                const { ids, id, templateName, adfoxParams } = params;\n                let banners = [id];\n                if (ids) {\n                    banners = ids;\n                }\n                Banners.create(element, banners, templateName, adfoxParams);\n            },\n        });\n    });\n};\n","import { Dispatch } from 'react';\nimport { DefaultRootState } from 'react-redux';\n\nimport { Action } from '@hh.ru/redux-create-reducer';\nimport StatsSender from '@hh.ru/stats-sender';\n\nimport {\n    MicroFrontendServiceName,\n    SerivceInfo,\n    RemoteServiceName,\n    deleteMicroFrontend,\n} from 'lux/models/microFrontends';\nimport { addUserNotifications } from 'lux/models/userNotifications';\nimport fetcher from 'lux/modules/fetcher';\nimport { getStore } from 'lux/modules/typedStore';\n\ninterface ServiceResponse {\n    renderResult: string;\n    inlineScript?: string;\n    styles?: string[];\n    scripts: string[];\n    globalServiceName: MicroFrontendServiceName;\n    remoteServiceName?: RemoteServiceName;\n    remoteEntry?: string;\n    isSuccessSSR: boolean;\n    proxiedState?: Partial<DefaultRootState>;\n    noContent?: boolean;\n}\n\ninterface RemoteWebpackModule {\n    init: (moduleName: string) => Promise<() => { default: () => void }>;\n    get: (moduleName: string) => Promise<() => { default: () => void }>;\n    inited: boolean;\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        [`SERVICE_URL`]: {\n            response: ServiceResponse;\n            queryParams: unknown;\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface Window extends Record<RemoteServiceName, RemoteWebpackModule> {}\n}\n\ninterface ScriptAttributes {\n    src?: string;\n    type: string;\n    innerHTML?: string;\n    crossOrigin?: string;\n    onload?: () => void;\n    onerror?: (src?: string) => void;\n    remote?: RemoteServiceName;\n}\n\ninterface LinkAttributes {\n    href: string;\n    type: string;\n    rel: string;\n}\n\nconst putLink = (props: LinkAttributes, context: HTMLElement) => {\n    const node = document.createElement('link');\n\n    const promise = new Promise<void>((resolve) => {\n        node.addEventListener('load', () => {\n            resolve();\n        });\n    });\n\n    Object.keys(props).forEach((prop) => {\n        node[prop] = props[prop];\n    });\n\n    context.appendChild(node);\n    return promise;\n};\n\nconst putScript = ({ remote, onerror, onload, ...props }: ScriptAttributes, context: HTMLElement) => {\n    const node = document.createElement('script');\n\n    Object.entries(props).forEach(([prop, value]) => {\n        const attr = prop as Exclude<keyof ScriptAttributes, 'onload' | 'onerror' | 'remote'>;\n        node[attr] = value;\n    });\n\n    if (onload) {\n        node.addEventListener('load', onload);\n    }\n\n    if (onerror) {\n        node.addEventListener('error', () => onerror(props.src));\n    }\n\n    if (remote) {\n        node.dataset.webpack = remote;\n    }\n\n    context.appendChild(node);\n};\n\nconst getRemoteWebpackModuleLink = (remote: RemoteServiceName) => {\n    const linkToRemoteWebpackModule = window[remote];\n    return linkToRemoteWebpackModule;\n};\n\nconst getExistingRemote = (remote: RemoteServiceName | undefined): HTMLScriptElement | null => {\n    if (!remote) {\n        return null;\n    }\n    return document.querySelector(`[data-webpack=\"${remote}\"]`);\n};\n\nconst loadingRemoteEntry: Record<string, Promise<void>> = {};\n\nconst getOrLoadRemote = async (\n    remote: RemoteServiceName,\n    shareScope: string,\n    remoteFallbackUrl: string,\n    container: HTMLElement\n) => {\n    const loadEntry = new Promise<void>((resolve) => {\n        const existingRemote = getExistingRemote(remote);\n        const onload = async () => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            await __webpack_init_sharing__('default');\n            const linkToRemoteWebpackModule = getRemoteWebpackModuleLink(remote);\n\n            if (linkToRemoteWebpackModule.inited) {\n                resolve();\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            // eslint-disable-next-line camelcase,@typescript-eslint/no-unsafe-member-access\n            await linkToRemoteWebpackModule.init(__webpack_share_scopes__[shareScope] as string);\n            linkToRemoteWebpackModule.inited = true;\n            resolve();\n        };\n\n        const onError = (src?: string) => {\n            let remoteScriptResource: PerformanceEntry[] | undefined;\n\n            if (PerformanceObserver?.supportedEntryTypes?.includes?.('resource')) {\n                remoteScriptResource = performance.getEntriesByType('resource').filter((entry) => {\n                    return src ? entry.name.includes(src) : false;\n                });\n            }\n\n            const remoteScriptResourceDuration = remoteScriptResource?.reduce((prev, item) => prev + item.duration, 0);\n\n            const statsSender = new StatsSender('xhh', window.globalVars, '/stat');\n\n            statsSender.sendMetrics({\n                report: 'mf-load-error',\n                value: remoteScriptResourceDuration,\n            });\n        };\n\n        function loadScript() {\n            putScript(\n                {\n                    src: remoteFallbackUrl,\n                    type: 'text/javascript',\n                    crossOrigin: 'anonymous',\n                    onload,\n                    onerror: onError,\n                    remote,\n                },\n                container\n            );\n        }\n\n        if (!(remote in window)) {\n            if (existingRemote) {\n                void loadingRemoteEntry[remote].then(() => {\n                    void onload();\n                });\n            } else {\n                loadScript();\n            }\n        } else {\n            void onload();\n        }\n    });\n\n    loadingRemoteEntry[remote] = loadingRemoteEntry[remote] ?? loadEntry;\n    return loadEntry;\n};\n\ninterface AppOptions {\n    unmountApp?: boolean;\n    container: HTMLDivElement;\n    identifier: string;\n}\n\nexport interface RemoteModule {\n    (options: AppOptions): void;\n}\nexport type RemoteModuleOrNull = RemoteModule | null;\nexport type RemoteModuleWithGlobalServiceNameOrNull = [RemoteModuleOrNull, MicroFrontendServiceName] | null;\n\nconst loggingPlaces: Record<string, { hasDefault: boolean; moduleValue: number }> = {};\n\nconst getRemoteModule = async (\n    remote: RemoteServiceName | undefined,\n    url: string | undefined,\n    container: HTMLDivElement\n): Promise<RemoteModuleOrNull> => {\n    if (remote && url) {\n        try {\n            await getOrLoadRemote(remote, 'default', url, container);\n        } catch (error) {\n            return null;\n        }\n        const linkToRemoteWebpackModule = getRemoteWebpackModuleLink(remote);\n        const factory = await linkToRemoteWebpackModule.get('./App');\n\n        const Module = factory();\n\n        loggingPlaces[container.classList.value] = {\n            hasDefault: true,\n            moduleValue: Module.default.toString().length,\n        };\n\n        return Module.default;\n    }\n\n    return null;\n};\n\nconst getAndLoadARemoteApp = async (\n    remote: RemoteServiceName | undefined,\n    globalServiceName: MicroFrontendServiceName,\n    url: string | undefined,\n    container: HTMLDivElement,\n    identifier: string\n): Promise<RemoteModuleOrNull> => {\n    let initApp = await getRemoteModule?.(remote, url, container);\n\n    if (window.globalServiceVars?.[globalServiceName]?.hasSupportToDestroyApp && initApp) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        initApp = initApp();\n    }\n    initApp?.({ unmountApp: false, container, identifier });\n    return initApp;\n};\n\ntype StateLoaderMapping = {\n    [K in keyof DefaultRootState]?: LoaderFunction<DefaultRootState[K]>;\n};\ntype LoaderFunction<T> = (dispatch: Dispatch<Action>, value: T) => void;\ntype ProxiedState = Partial<DefaultRootState>;\n\nconst STATE_LOADERS_MAPPING: StateLoaderMapping = {\n    userNotifications: (dispatch, value) => {\n        dispatch(addUserNotifications(value));\n    },\n} as const;\n\nconst processProxiedState = async (proxiedState: ProxiedState) => {\n    const store = await getStore();\n    Object.keys(STATE_LOADERS_MAPPING).forEach((storeFieldName) => {\n        const value = proxiedState[storeFieldName];\n        const loader = STATE_LOADERS_MAPPING[storeFieldName];\n        if (value !== undefined && loader) {\n            (loader as LoaderFunction<typeof value>)(store.dispatch, value);\n        }\n    });\n};\n\nconst loadProxyService = async (\n    place: string,\n    serviceInfo: SerivceInfo,\n    container: HTMLDivElement | null,\n    identifier: string,\n    isFullPage?: boolean\n): Promise<RemoteModuleWithGlobalServiceNameOrNull> => {\n    if (serviceInfo === undefined) {\n        return null;\n    }\n    const loadService = async (data: ServiceResponse): Promise<RemoteModuleWithGlobalServiceNameOrNull> => {\n        if (container === null) {\n            return null;\n        }\n\n        container.classList.add(`HH-ProxyExternalServiceLoader-${data.globalServiceName}`);\n\n        if (data.isSuccessSSR && data.renderResult !== '' && data.remoteServiceName) {\n            if (data.inlineScript) {\n                putScript(\n                    {\n                        type: 'text/javascript',\n                        innerHTML: data.inlineScript,\n                    },\n                    container\n                );\n            }\n\n            const moduleApp = await getAndLoadARemoteApp(\n                data.remoteServiceName,\n                data.globalServiceName,\n                data.remoteEntry,\n                container,\n                identifier\n            );\n            return [moduleApp, data.globalServiceName];\n        }\n\n        container.innerHTML = '';\n        const ssrRenderNode = document.createElement('div');\n        ssrRenderNode.innerHTML = data.renderResult;\n        container.appendChild(ssrRenderNode);\n\n        data.styles?.forEach((href) => {\n            const attr: LinkAttributes = { href, type: 'text/css', rel: 'stylesheet' };\n            void putLink(attr, container);\n        });\n\n        if (data.inlineScript) {\n            putScript(\n                {\n                    type: 'text/javascript',\n                    innerHTML: data.inlineScript,\n                },\n                container\n            );\n        }\n\n        data.scripts?.forEach((src) => {\n            putScript({ src: `${src}`, type: 'text/javascript', crossOrigin: 'anonymous' }, container);\n        });\n\n        // TODO Удалить все условие после перехода фронтов на front-static-app >= 1.1.2\n        if (data.remoteEntry) {\n            const notLoadedScript = getExistingRemote(data.remoteServiceName);\n\n            /**\n             * Скрипт, который был вставлен через innerHTML загружен не будет, нужно отличать от случая, когда скрипт\n             * кладет SSR. В случае с SSR мы используем уже загруженный скрипт\n             */\n            if (notLoadedScript) {\n                notLoadedScript.dataset.webpack = '';\n            }\n\n            const moduleApp = await getAndLoadARemoteApp(\n                data.remoteServiceName,\n                data.globalServiceName,\n                data.remoteEntry,\n                container,\n                identifier\n            );\n            return [moduleApp, data.globalServiceName];\n        }\n\n        return null;\n    };\n\n    const renderResult = container?.innerHTML ?? '';\n\n    if ((serviceInfo.isSuccessSSR && renderResult !== '') || serviceInfo.useSSRResult) {\n        return loadService({\n            scripts: serviceInfo.scripts ?? [],\n            styles: serviceInfo.styles ?? [],\n            globalServiceName: serviceInfo.globalServiceName,\n            remoteServiceName: serviceInfo.remoteServiceName,\n            inlineScript: serviceInfo.inlineScript,\n            remoteEntry: serviceInfo.remoteEntry,\n            renderResult: renderResult ?? '',\n            isSuccessSSR: serviceInfo.isSuccessSSR,\n        });\n    }\n\n    let data;\n    try {\n        data = await fetcher.get<'SERVICE_URL'>(serviceInfo.url, {\n            headers: {\n                'X-Proxied-Type': isFullPage ? '' : 'Component',\n                'X-Proxied-Place': place,\n                'X-Proxied-Page-Name': window.globalVars.pageName,\n                'X-Proxied-Hhtm-Source': window.globalVars.analyticsParams.hhtmSource,\n                'X-Static-Version': window.globalVars.build,\n            },\n            params: {},\n        });\n    } catch (error) {\n        console.error(error);\n        return null;\n    }\n\n    if (data.noContent) {\n        const store = await getStore();\n        store.dispatch(deleteMicroFrontend(place));\n        return null;\n    }\n\n    void processProxiedState(data.proxiedState || {});\n    return loadService(data);\n};\n\nexport default loadProxyService;\n","/**\n * Утилита следит за видимостью элемента на странице, и запускает калбеки при изменении состояния. <br>\n *\n * @type {Object}\n * @exports Utils/VisibilityWatcher\n */\nconst visibilityWatcher = {\n    /**\n     * Инициализирует вотчер на элементе.\n     *\n     * @param {Object}   options\n     * @param {Element}  options.element   DOM элемент за которым наблюдаем\n     * @param {Function} options.onVisible Функция, которая будет вызвана, когда элемент отобразится\n     *\n     * @member\n     * @method\n     */\n    init(options) {\n        let visible = false;\n        const element = options.element;\n        const checkVisible = () => {\n            if (visible) {\n                return;\n            }\n            if (element.offsetWidth || element.offsetHeight || element.getClientRects().length) {\n                visible = true;\n                options.onVisible();\n                window.removeEventListener('resize', checkVisible);\n                window.removeEventListener('element-displayed', checkVisible);\n                element.dataset.listenersSetted = 'false';\n            } else {\n                visible = false;\n            }\n        };\n        if (options.element.dataset.listenersSetted !== 'true') {\n            window.addEventListener('resize', checkVisible);\n            window.addEventListener('element-displayed', checkVisible);\n            options.element.dataset.listenersSetted = 'true';\n        }\n        checkVisible();\n    },\n};\nexport default visibilityWatcher;\n","export const SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION = 'SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION';\n","import { MouseEventHandler } from 'react';\nimport classnames from 'classnames';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface AgreementTextProps {\n    text?: string;\n    link?: string;\n    buttonType?: AgreementButtonType;\n    withSocial?: boolean;\n    isIframeView?: boolean;\n    target?: string;\n}\n\nexport enum AgreementButtonType {\n    Continue = 'continue',\n    Signup = 'signup',\n}\n\nconst TrlKeys = {\n    bare: {\n        common: {\n            text: 'signup.agreementText.text',\n        },\n        russia: {\n            text: 'signup.agreementText.russia.text',\n            personalLink: 'signup.agreementText.russia.personal-data',\n        },\n        agreementLink: 'signup.agreementText.link',\n    },\n    withSocial: {\n        common: {\n            text: 'signup.agreementText.withSocial.text',\n        },\n        russia: {\n            text: 'signup.agreementText.withSocial.russia.text',\n            personalLink: 'signup.agreementText.russia.personal-data',\n        },\n\n        agreementLink: 'signup.agreementText.withSocial.link',\n    },\n\n    buttonType: {\n        continue: 'signup.agreementText.withSocial.buttonType.continue',\n        signup: 'signup.agreementText.withSocial.buttonType.signup',\n    },\n};\n\nconst agreementDataQa = 'account-signup-agreement';\nconst personalDataQa = 'account-signup-personal-data-russia';\n\nconst AgreementText: TranslatedComponent<AgreementTextProps> = ({\n    trls,\n    buttonType = AgreementButtonType.Continue,\n    withSocial = false,\n    isIframeView = false,\n    ...props\n}) => {\n    const agreementURL = useSelectorNonNullable((state) => state.authUrl['agreement-form']);\n    const isLightPage = useSelector(({ isLightPage }) => isLightPage);\n    const personalDataRussiaURL = useSelectorNonNullable((state) => state.authUrl['policy-url']);\n    const isRussia = useIsRussia();\n\n    const handleClickForVKminiApp: MouseEventHandler<HTMLAnchorElement> = (event) => {\n        if (!isIframeView) {\n            return;\n        }\n        event.preventDefault();\n        window.location.href = event.currentTarget.href;\n    };\n\n    const renderLink = (text: string, dataQa: string, to: string) => {\n        return (\n            <Link\n                {...props}\n                onClick={handleClickForVKminiApp}\n                className={classnames({ 'vk-mini-apps-link-disable': isIframeView })}\n                to={to}\n                data-qa={dataQa}\n            >\n                {text}\n            </Link>\n        );\n    };\n\n    const getText = () => {\n        if (withSocial) {\n            if (isRussia) {\n                return trls[TrlKeys.withSocial.russia.text];\n            }\n            return trls[TrlKeys.withSocial.common.text];\n        }\n        if (isRussia) {\n            return trls[TrlKeys.bare.russia.text];\n        }\n        return trls[TrlKeys.bare.common.text];\n    };\n\n    const getFormat = (): Record<string, JSX.Element | string> => {\n        if (withSocial) {\n            if (isRussia) {\n                return {\n                    '{0}': trls[TrlKeys.buttonType[buttonType]],\n                    '{1}': renderLink(trls[TrlKeys.withSocial.agreementLink], agreementDataQa, agreementURL),\n                    '{2}': renderLink(\n                        trls[TrlKeys.withSocial.russia.personalLink],\n                        personalDataQa,\n                        personalDataRussiaURL\n                    ),\n                };\n            }\n            return {\n                '{0}': trls[TrlKeys.buttonType[buttonType]],\n                '{1}': renderLink(trls[TrlKeys.withSocial.agreementLink], agreementDataQa, agreementURL),\n            };\n        }\n        if (isRussia) {\n            return {\n                '{0}': trls[TrlKeys.buttonType[buttonType]],\n                '{1}': renderLink(trls[TrlKeys.bare.agreementLink], agreementDataQa, agreementURL),\n                '{2}': renderLink(trls[TrlKeys.bare.russia.personalLink], personalDataRussiaURL, personalDataRussiaURL),\n            };\n        }\n        return {\n            '{0}': renderLink(trls[TrlKeys.bare.agreementLink], agreementDataQa, agreementURL),\n        };\n    };\n\n    return (\n        <div\n            className={classnames('account-agreement-text', {\n                'account-agreement-text_light-page': isLightPage,\n            })}\n        >\n            {formatToReactComponent(getText(), getFormat())}\n        </div>\n    );\n};\n\nexport default translation(AgreementText);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\n\nimport DefaultVerification from 'lux/components/Verification/Verification';\nimport translation from 'lux/components/translation';\nimport formatAnalyticErrors from 'lux/modules/analytics/formatAnalyticErrors';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport { loginBy } from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\n\nconst VerificationFormStep = ({ Verification = DefaultVerification, isSignupPage, next, ...props }) => {\n    const dispatch = useDispatch();\n    const { login, authType, backurl } = useSelector(({ otp }) => otp);\n    const vacancyId = useSelector(({ postponedActions }) => postponedActions?.vacancy?.vacancyId);\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n\n    const onShownAnalytics = (elementRef) => {\n        if (elementRef.current) {\n            Analytics.sendHHEventElementShown(elementRef.current, {\n                elementName: 'code_confirmation',\n                vacancyId,\n                authType: loginBy[authType] || 'unknown',\n                isSignupPage,\n            });\n        }\n    };\n\n    const onSubmitAnalytics = (errorCode) => {\n        Analytics.sendHHEvent('form_submit', {\n            formName: 'code_confirmation',\n            vacancyId,\n            authType: loginBy[authType] || 'unknown',\n            errors: errorCode ? formatAnalyticErrors('code_verification', errorCode) : null,\n            isSignupPage,\n        });\n    };\n\n    const onSubmit = async (setIsSending, setVerification, code) => {\n        let response;\n        setIsSending(true);\n\n        try {\n            response = await fetcher.postFormData('/account/login/by_code', {\n                username: login,\n                code,\n                remember: true,\n                accountType: 'APPLICANT',\n                isApplicantSignup: isSignupPage,\n                backurl,\n            });\n        } catch (error) {\n            setIsSending(false);\n            const errorCode = error?.response?.data?.error?.key;\n            const isMultiAccountCreation = error?.response?.data?.isMultiAccountCreation;\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' && isMultiAccountCreation) {\n                try {\n                    await fetcher.post('/multiaccount_grouping/reset_employer_password', {\n                        code,\n                    });\n                } catch {\n                    onSubmitAnalytics(errorCode);\n                    dispatch(push(error.response.data.employerLoginURL));\n                    return;\n                }\n\n                onSubmitAnalytics(errorCode);\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            if (errorCode === 'EMPLOYER_NOT_ALLOWED' || errorCode === 'UNEXPECTED_USER_TYPE') {\n                dispatch(push(error.response.data.employerLoginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'UNEXPECTED_USER_TYPE' || errorCode === 'ANONYMOUS_ONLY') {\n                dispatch(push(error.response.data.loginURL));\n                onSubmitAnalytics(errorCode);\n                return;\n            }\n\n            if (errorCode === 'ACCOUNT_NOT_FOUND') {\n                onSubmitAnalytics();\n                next(code, isMultiAccountCreation);\n                return;\n            }\n\n            onSubmitAnalytics('SERVER_ERROR');\n            dispatch(showDefaultError(error));\n            return;\n        }\n\n        const errorCode = response?.data?.success ? null : response?.data?.verification?.key;\n        onSubmitAnalytics(errorCode);\n        setIsSending(false);\n\n        if (response?.data?.success) {\n            if (vrResponseHash) {\n                dispatch(push(`/vr_signup_login?vrResponseHash=${vrResponseHash}`));\n                return;\n            }\n            window.location.assign(backurl);\n            return;\n        }\n\n        setVerification(response?.data?.verification);\n    };\n\n    return (\n        <Verification\n            onShownAnalytics={onShownAnalytics}\n            authType={authType}\n            login={login}\n            onSubmit={onSubmit}\n            {...props}\n        />\n    );\n};\n\nVerificationFormStep.propTypes = {\n    trls: PropTypes.object,\n    login: PropTypes.string,\n    next: PropTypes.func,\n    isSignupPage: PropTypes.bool,\n    Verification: PropTypes.elementType,\n};\n\nexport default translation(VerificationFormStep);\n","import { useState, Fragment, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DefaultMultiAccountGrouping from 'lux/components/ApplicantSignInSignUpFlow/MultiAccountGroupingStep/MultiAccountGrouping';\nimport DefaultSignUp from 'lux/components/ApplicantSignInSignUpFlow/SignUpStep/SignUp';\nimport VerificationFormStep from 'lux/components/ApplicantSignInSignUpFlow/VerificationFormStep';\n\nconst SIGN_IN = 'SIGN_IN';\nconst SIGN_UP = 'SIGN_UP';\nconst VERIFICATION = 'VERIFICATION';\nconst MULTIACCOUNT_GROUPING = 'MULTIACCOUNT_GROUPING';\n\nconst ApplicantSignInSignUpFlow = ({\n    SignIn,\n    Verification,\n    MultiAccountGrouping = DefaultMultiAccountGrouping,\n    SignUp = DefaultSignUp,\n    isSignupPage = false,\n    onSignup,\n    onNextStep = () => null,\n    isExpanded,\n    onClickByPassword,\n    errorPageLogin = false,\n}) => {\n    const vrResponseHash = useSelector(({ vrSignupLogin }) => vrSignupLogin.vrResponseHash);\n    const [step, setStep] = useState(vrResponseHash ? VERIFICATION : SIGN_IN);\n    const [code, setCode] = useState('');\n    const [password, setPassword] = useState('');\n    const signUpRef = useRef();\n    const isIframeView = useSelector((state) => state.router.location.query.iframe_view === 'true');\n\n    const Wrapper = isSignupPage ? Column : Fragment;\n    const wrapperProps = isSignupPage ? { l: '16', m: '12', s: '4', xs: '4', container: true } : {};\n\n    useEffect(() => {\n        if (!isIframeView) {\n            return;\n        }\n\n        function enableLinksAfterComponentInited() {\n            signUpRef.current.querySelectorAll('.vk-mini-apps-link-disable').forEach((e) => {\n                e.classList.remove('vk-mini-apps-link-disable');\n            });\n        }\n\n        enableLinksAfterComponentInited();\n    }, [isIframeView]);\n\n    return (\n        <div ref={signUpRef}>\n            {step === SIGN_IN && (\n                <SignIn\n                    next={() => {\n                        setStep(VERIFICATION);\n                        onNextStep();\n                    }}\n                    isSignupPage={isSignupPage}\n                    onSignup={onSignup}\n                    onClickByPassword={onClickByPassword}\n                    isExpanded={isExpanded}\n                />\n            )}\n            {step === VERIFICATION && (\n                <Wrapper {...wrapperProps}>\n                    <VerificationFormStep\n                        Verification={Verification}\n                        cancel={() => setStep(SIGN_IN)}\n                        isSignupPage={isSignupPage}\n                        next={(code, isMultiAccountCreation) => {\n                            setStep(isSignupPage && isMultiAccountCreation ? MULTIACCOUNT_GROUPING : SIGN_UP);\n                            setCode(code);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === MULTIACCOUNT_GROUPING && (\n                <Wrapper {...wrapperProps}>\n                    <MultiAccountGrouping\n                        isSignupPage={isSignupPage}\n                        next={(password) => {\n                            setStep(SIGN_UP);\n                            setPassword(password);\n                        }}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n            {step === SIGN_UP && (\n                <Wrapper {...wrapperProps}>\n                    <SignUp\n                        isSignupPage={isSignupPage}\n                        code={code}\n                        password={password}\n                        errorPageLogin={errorPageLogin}\n                    />\n                </Wrapper>\n            )}\n        </div>\n    );\n};\n\nApplicantSignInSignUpFlow.propTypes = {\n    SignIn: PropTypes.elementType,\n    Verification: PropTypes.elementType,\n    MultiAccountGrouping: PropTypes.elementType,\n    SignUp: PropTypes.elementType,\n    isSignupPage: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    onSignup: PropTypes.func,\n    onNextStep: PropTypes.func,\n    onClickByPassword: PropTypes.func,\n    errorPageLogin: PropTypes.bool,\n};\n\nexport default ApplicantSignInSignUpFlow;\n","import { Component, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, DefaultRootState } from 'react-redux';\n\nimport LoadBannerOnVisibleSignature from 'HH/LoadBannerOnVisibleModule.d';\nimport { YandexAdfoxBannerProps } from 'lux/models/banners/YandexAdfoxBanner.types';\nimport { UserTargeting } from 'lux/models/userTargeting';\n\nlet loadBannerOnVisible: typeof LoadBannerOnVisibleSignature | undefined;\n\nif (!process.env.LUX_SERVER) {\n    /* eslint @typescript-eslint/no-var-requires: \"off\" */\n    /* eslint @typescript-eslint/no-unsafe-member-access: \"off\" */\n    loadBannerOnVisible = require('HH/LoadBannerOnVisibleModule').default as typeof LoadBannerOnVisibleSignature;\n}\n\ninterface BannerProps {\n    /** Индификатор баннера */\n    id: string;\n    /** Название шаблона для баннера */\n    templateName?: string;\n    /** Нода в которую кладется баннер */\n    children?: ReactNode;\n    /** Флаг отмены отправки запросов в баннерную систему */\n    cancelFetchBanners?: boolean;\n    /** Строка текущих get параметров URL */\n    search?: string;\n    /** Строка текущего URL без параметров */\n    pathname?: string;\n    /** Параметры для Yandex adfox баннеров */\n    adfoxParams?: Omit<YandexAdfoxBannerProps, 'id'>;\n    /** Строит пустой див вместо баннера **/\n    isEmpty?: boolean;\n    userTargeting?: UserTargeting;\n}\n\nclass Banner extends Component<BannerProps> {\n    element: HTMLElement | null = null;\n    static defaultProps = {\n        templateName: 'HHC-Banners-Place-Template',\n    };\n\n    componentDidMount() {\n        this.element = this.props.isEmpty ? null : (ReactDOM.findDOMNode(this) as HTMLElement);\n        if (this.element) {\n            this.element.addEventListener('HH-Banners-Init', this.setAutoHeight.bind(this));\n            this.initBanners();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.element) {\n            this.initBanners();\n        }\n    }\n\n    componentWillUnmount() {\n        this.element?.removeEventListener('HH-Banners-Init', this.setAutoHeight);\n    }\n\n    shouldComponentUpdate(nextProps: BannerProps) {\n        if (nextProps.cancelFetchBanners) {\n            return false;\n        }\n        return nextProps.search !== this.props.search || nextProps.pathname !== this.props.pathname;\n    }\n\n    initBanners() {\n        const { id, templateName, adfoxParams, userTargeting } = this.props;\n        if (this.element) {\n            this.element.style.height = `${this.element.clientHeight}px`;\n            this.element.innerHTML = '';\n        }\n        let adfoxParamsProperty;\n        if (adfoxParams) {\n            adfoxParamsProperty = {\n                ...adfoxParams,\n                type: 'adfox',\n                bannerId: id,\n                place: id,\n                bannerCommonTargeting: userTargeting,\n                bannerAdTargeting: adfoxParams.bannerAdTargeting || {},\n            };\n        }\n        const bannerParams = {\n            id,\n            templateName,\n            adfoxParams: adfoxParamsProperty,\n        };\n\n        loadBannerOnVisible?.(this.element, bannerParams);\n    }\n\n    setAutoHeight = (): void => {\n        if (this.element) {\n            this.element.style.height = 'auto';\n        }\n    };\n\n    render() {\n        return this.props.children || <div />;\n    }\n}\n\nexport default connect((state: DefaultRootState) => ({\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    cancelFetchBanners: state.cancelFetchBanners,\n    userTargeting: state.userTargeting,\n}))(Banner);\n","import type { FC } from 'react';\n\nimport { isExternalBannersRestricted } from 'HHC/Banners';\nimport { useIsBelarus } from 'lux/hooks/useCountries';\nimport { AdsExternalBannerProps } from 'lux/models/banners/AdsExternalBanner.types';\n\nimport Banner from 'lux/components/Banner';\n\nconst AdsExternalBanner: FC<AdsExternalBannerProps> = ({ id, cId, pp, p2, ...adfoxParams }) => {\n    const enableAdfox = pp && p2;\n    const shouldHideExternalBanners = isExternalBannersRestricted(useIsBelarus());\n\n    if (!enableAdfox || shouldHideExternalBanners) {\n        return <Banner key={cId} id={id} isEmpty={shouldHideExternalBanners} />;\n    }\n\n    return (\n        <Banner\n            key={cId}\n            id={id}\n            templateName=\"\"\n            adfoxParams={{\n                pp,\n                p2,\n                cId,\n                ...adfoxParams,\n            }}\n        >\n            <div\n                id={cId}\n                className={`HHC-Banner-${id} HH-Banner-Adfox banner-place banner-place_${id} banner-place-adfox banner-place-adfox_${id}`}\n                data-banner-id={id}\n                data-empty-class=\"banner-place_hide\"\n                data-loaded-class=\"banner-place_show\"\n            />\n        </Banner>\n    );\n};\n\nexport default AdsExternalBanner;\n","import { FC } from 'react';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\n\nconst BrandingInfo: FC = () => {\n    const showBrandingInfoModal = useSelector(({ showBrandingInfoModal }) => showBrandingInfoModal);\n\n    if (!showBrandingInfoModal) {\n        return null;\n    }\n\n    return <ContainerForMicroFrontend place={'brandingInfo'} />;\n};\n\nexport default BrandingInfo;\n","import {\n    MutableRefObject,\n    FC,\n    PropsWithChildren,\n    ReactNode,\n    useEffect,\n    useContext,\n    useState,\n    useRef,\n    memo,\n} from 'react';\n\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\n\nimport loadProxyService, { RemoteModuleOrNull } from 'Modules/ProxyExternalServiceLoader';\nimport { SerivceInfo, MicroFrontendServiceName } from 'lux/models/microFrontends';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { CodeInjectorContext } from 'lux/components/CodeInjector';\n\ninterface ContainerForMicroFrontendProps {\n    preloadContent?: ReactNode;\n    place: string;\n    isFullPage?: boolean;\n    serviceInfo: MutableRefObject<SerivceInfo>;\n}\n\nconst getClassName = (place: string) => `HH-ContainerForMicroFrontend-${place}`;\n\nlet id = 0;\n\nconst ContainerForMicroFrontend: FC<PropsWithChildren<ContainerForMicroFrontendProps>> = ({\n    preloadContent = <Loading scale={LoadingScale.Small} />,\n    serviceInfo,\n    place,\n    isFullPage = false,\n}) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const codeInjectorContext = useContext(CodeInjectorContext);\n    const classNameForJS = getClassName(place);\n    let content = serviceInfo.current?.isSuccessSSR ? null : preloadContent;\n\n    let innerHTML = {};\n\n    if (process.env.LUX_SERVER) {\n        codeInjectorContext.placesNamesForMicroFrontends.push(place);\n        const MicrofrontendDelimeter = place;\n        content = <MicrofrontendDelimeter />;\n    } else if (serviceInfo.current?.isSuccessSSR) {\n        const container: HTMLDivElement | null =\n            document.querySelector(`.${classNameForJS}`) ??\n            document.querySelector(`.HH-ContainerForMicroFrontend-Hidden-${place}`);\n\n        innerHTML = {\n            dangerouslySetInnerHTML: {\n                __html: container?.innerHTML,\n            },\n        };\n    }\n\n    useEffect(() => {\n        const container = containerRef.current;\n        let globalServiceName: MicroFrontendServiceName;\n        let app: RemoteModuleOrNull = null;\n\n        id += 1;\n        const identifier = `${place}-${id}`;\n\n        void loadProxyService(place, serviceInfo.current, container, identifier, isFullPage).then((data) => {\n            if (data && container) {\n                const [appModule, globalServiceNameValue] = data;\n                app = appModule;\n                globalServiceName = globalServiceNameValue;\n            }\n        });\n\n        return () => {\n            /* Destroy надо делать в micro || macro таске, иначе получаем гонку между unmount\n             * microfrontend и xhh\n             * */\n            setTimeout(() => {\n                if (!globalServiceName) {\n                    return;\n                }\n\n                const isSupportDestroy = window.globalServiceVars?.[globalServiceName]?.hasSupportToDestroyApp;\n                if (container && isSupportDestroy) {\n                    app?.({\n                        unmountApp: true,\n                        container,\n                        identifier,\n                    });\n                    app = null;\n                }\n            }, 0);\n        };\n    }, [place, isFullPage, serviceInfo]);\n\n    if (!serviceInfo.current) {\n        return null;\n    }\n\n    return (\n        <div ref={containerRef} className={classNameForJS} {...innerHTML}>\n            {content}\n        </div>\n    );\n};\n\ninterface ContainerForMicroFrontendWrapper {\n    preloadContent?: ReactNode;\n    place: string;\n    isFullPage?: boolean;\n}\n\nconst ContainerForMicroFrontendWrapper: FC<PropsWithChildren<ContainerForMicroFrontendWrapper>> = ({\n    place,\n    preloadContent,\n}) => {\n    const serviceInfo = useSelector(({ microFrontends }) => microFrontends[place]);\n    const [keyComponent, setKeyComponent] = useState(place);\n    const previousServiceInfoRef = useRef(serviceInfo);\n\n    useEffect(() => {\n        if (previousServiceInfoRef.current !== serviceInfo) {\n            previousServiceInfoRef.current = serviceInfo;\n            setKeyComponent(`${place}-${Date.now()}`);\n        }\n    }, [place, serviceInfo]);\n\n    if (!serviceInfo) {\n        return null;\n    }\n\n    /* Идея в уничтожении компонента если serviceInfo возвращает новую ссылку\n     * это поможет корректно инициализировать приложение всегда на новой DOM ноде\n     * */\n    return (\n        <ContainerForMicroFrontend\n            key={keyComponent}\n            preloadContent={preloadContent}\n            serviceInfo={previousServiceInfoRef}\n            place={place}\n        />\n    );\n};\n\nexport default memo(ContainerForMicroFrontendWrapper, () => true);\n","import { Component } from 'react';\nimport { AxiosError } from 'axios';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport ControlGroup, { ControlGroupItem } from 'bloko/blocks/controlGroup';\nimport Tip, { TipTheme, TipPlacement } from 'bloko/blocks/drop/Tip';\nimport { FormItem, FormLegend } from 'bloko/blocks/form';\nimport Gap from 'bloko/blocks/gap';\nimport InputText, { InputType } from 'bloko/blocks/inputText';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\nimport { TranslationHOCProps } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nenum ResponseCodes {\n    Success = 'SUCCESS',\n    Error = 'ERROR',\n    ErrorLimit = 'ERROR_LIMIT',\n    ErrorLimitPhone = 'ERROR_LIMIT_PHONE',\n    ErrorLimitIP = 'ERROR_LIMIT_IP',\n}\n\nconst TrlKeys = {\n    label: 'employer.thankYou.getAppSMS.label',\n    submit: 'employer.thankYou.getAppSMS.submit',\n    empty: 'employer.thankYou.getAppSMS.error.empty',\n    SUCCESS: 'employer.thankYou.getAppSMS.response.SUCCESS',\n    ERROR: 'employer.thankYou.getAppSMS.response.ERROR',\n    ERROR_LIMIT: 'employer.thankYou.getAppSMS.response.ERROR_LIMIT',\n    ERROR_LIMIT_PHONE: 'employer.thankYou.getAppSMS.response.ERROR_LIMIT_PHONE',\n    ERROR_LIMIT_IP: 'employer.thankYou.getAppSMS.response.ERROR_LIMIT_IP',\n    invalid: 'employer.thankYou.getAppSMS.error.invalid',\n    common: 'employer.thankYou.getAppSMS.error.common',\n};\n\ndeclare global {\n    interface FetcherPostApi {\n        '/get_app_sms': {\n            body: {\n                phone: string;\n                from?: string;\n            };\n            queryParams: void;\n            response: { code: ResponseCodes };\n        };\n    }\n}\n\ninterface GetAppSMSProps {\n    /** Поле для отслеживания конверсии */\n    analyticsFrom?: string;\n    placeholder?: string;\n    label?: string;\n    gapBottom?: boolean;\n    // tempexp_27846_start\n    sendAnalytics?: boolean;\n    vacancyId?: string;\n    employerManagerId?: string;\n    // tempexp_27846_end\n}\n\ninterface GetAppSMSState {\n    phone: string;\n    showTooltip: boolean;\n    tooltipText: string;\n    tooltipTheme: TipTheme;\n    loading: boolean;\n}\n\n/**\n * Повторяет работу HH/GetAppSMS.js\n */\nclass GetAppSMS extends Component<TranslationHOCProps & GetAppSMSProps, GetAppSMSState> {\n    static defaultProps = {\n        analyticsFrom: '',\n        placeholder: '+7 900 944 9490',\n        gapBottom: false,\n    };\n\n    state = {\n        phone: '',\n        showTooltip: false,\n        tooltipText: '',\n        tooltipTheme: TipTheme.Attention,\n        loading: false,\n    };\n\n    showTooltip = (tooltipText: string, tooltipTheme: TipTheme) => {\n        this.setState({\n            showTooltip: true,\n            tooltipText,\n            tooltipTheme,\n        });\n    };\n\n    hideTooltip = () => {\n        this.setState({\n            showTooltip: false,\n        });\n    };\n\n    setLoading = (loading: boolean) => {\n        this.setState({\n            loading,\n        });\n    };\n\n    getSMSLink = () => {\n        const phone = this.state.phone.trim();\n        if (phone === '') {\n            this.showTooltip(this.props.trls[TrlKeys.empty], TipTheme.Attention);\n        } else {\n            this.setLoading(true);\n\n            // tempexp_27846_start\n            const { sendAnalytics, vacancyId, employerManagerId } = this.props;\n\n            if (sendAnalytics) {\n                Analytics.sendHHEventButtonClick('get_sms_link', { vacancyId, employerManagerId });\n            }\n            // tempexp_27846_end\n\n            fetcher\n                .postFormData(\n                    '/get_app_sms',\n                    Object.assign(\n                        { phone },\n                        this.props.analyticsFrom\n                            ? { from: this.props.analyticsFrom, hhtmFromLabel: this.props.analyticsFrom }\n                            : {}\n                    )\n                )\n                .then(\n                    (response) => {\n                        const messageType =\n                            response.data.code === ResponseCodes.Success ? TipTheme.Dark : TipTheme.Attention;\n                        this.showTooltip(this.props.trls[TrlKeys[response.data.code]], messageType);\n                        this.setLoading(false);\n                    },\n                    (error: AxiosError) => {\n                        const message = this.props.trls[TrlKeys[error.response?.status === 400 ? 'invalid' : 'common']];\n                        this.showTooltip(message, TipTheme.Attention);\n                        this.setLoading(false);\n                    }\n                );\n        }\n    };\n\n    render() {\n        const { trls, gapBottom, label } = this.props;\n\n        return (\n            <Gap bottom={gapBottom}>\n                <div className=\"get-app-sms-label-wrapper\">\n                    <FormItem>\n                        <FormLegend>{label || trls[TrlKeys.label]}</FormLegend>\n                    </FormItem>\n                </div>\n                <div className=\"get-app-sms-form-wrapper\">\n                    <ControlGroup autosize>\n                        <ControlGroupItem main>\n                            <Tip\n                                show={this.state.showTooltip}\n                                theme={this.state.tooltipTheme}\n                                placement={TipPlacement.Top}\n                                render={() => this.state.tooltipText}\n                                onExternalClose={this.hideTooltip}\n                            >\n                                <InputText\n                                    value={this.state.phone}\n                                    onChange={(value) => {\n                                        this.hideTooltip();\n                                        this.setState({ phone: value });\n                                    }}\n                                    type={InputType.Text}\n                                    placeholder={this.props.placeholder}\n                                    disabled={this.state.loading}\n                                />\n                            </Tip>\n                        </ControlGroupItem>\n                        <ControlGroupItem>\n                            <Button\n                                onClick={this.getSMSLink}\n                                kind={ButtonKind.Success}\n                                loading={\n                                    this.state.loading && (\n                                        <Loading initial={LoadingColor.Green60} scale={LoadingScale.Small} />\n                                    )\n                                }\n                            >\n                                {trls[TrlKeys.submit]}\n                            </Button>\n                        </ControlGroupItem>\n                    </ControlGroup>\n                </div>\n            </Gap>\n        );\n    }\n}\n\nexport default translation(GetAppSMS);\n","import Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { PageHead, PageTitle } from 'lux/components/PageHead';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    'error.400': 'error.400.message',\n    'error.403': 'error.403.message',\n    'error.404': 'error.404.message',\n    'error.500': 'error.500.tryagain',\n    'error.599': 'error.599.tryagain',\n    'error.default': 'error.500.tryagain',\n};\n\nconst PageErrorWrapper: TranslatedComponent = ({ children, trls }) => {\n    const errorCode = useSelector(({ errorCode }) => errorCode);\n    if (errorCode) {\n        const trlErrorCode = `error.${errorCode}`;\n        const trlCode = trlErrorCode in TrlKeys ? trlErrorCode : 'error.default';\n        const trl = trls[TrlKeys[trlCode as keyof typeof TrlKeys]];\n        return (\n            <>\n                <PageHead>\n                    <PageTitle>{trl}</PageTitle>\n                </PageHead>\n                <DefaultLayout>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                        {trl}\n                    </Column>\n                </DefaultLayout>\n            </>\n        );\n    }\n\n    return <>{children}</>;\n};\n\nexport default translation(PageErrorWrapper);\n","import React, { Fragment } from 'react';\nimport { HeadProvider, Title, Meta, Link } from 'react-head';\n\nconst PageHead: React.FC<React.PropsWithChildren> = ({ children }) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return !process.env.LUX_SERVER ? <HeadProvider>{children}</HeadProvider> : <>{children}</>;\n};\n\ninterface PageDescriptionProps {\n    content: string;\n    openGraphContent?: string;\n}\n\nconst PageDescription: React.FC<PageDescriptionProps & React.PropsWithChildren> = ({ content, openGraphContent }) => {\n    return (\n        <Fragment>\n            <Meta name=\"description\" content={content} />\n            <Meta property=\"og:description\" content={openGraphContent || content} />\n        </Fragment>\n    );\n};\n\ninterface PageKeywordsProps {\n    content: string;\n}\n\nconst PageKeywords: React.FC<PageKeywordsProps & React.PropsWithChildren> = ({ content }) => {\n    return <Meta name=\"keywords\" content={content} />;\n};\n\nexport { PageHead, Title as PageTitle, Meta as PageMeta, PageDescription, PageKeywords, Link as PageLink };\n","import React from 'react';\n\nimport { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport RowContent from 'lux/components/RowContent';\n\ninterface DefaultLayoutProps {\n    /** Сжатый контент */\n    isShrinked?: boolean;\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps & React.PropsWithChildren> = ({ children, isShrinked }) => (\n    <ColumnsWrapper>\n        <RowContent isShrinked={isShrinked}>{children}</RowContent>\n    </ColumnsWrapper>\n);\n\nexport default DefaultLayout;\n","import React from 'react';\n\nconst EmptyLayout: React.FC<React.PropsWithChildren> = ({ children }) => <>{children}</>;\n\nexport default EmptyLayout;\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport Gap from 'bloko/blocks/gap';\n\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nconst LightPageLayoutContent =\n    ({\n        error: ErrorComponent,\n        noContentPadding,\n        noBackground,\n    }: LightPageCommonProps): React.FC<React.PropsWithChildren> =>\n    ({ children }) =>\n        (\n            <Gap sTop sBottom mTop mBottom lTop lBottom>\n                {ErrorComponent && <ErrorComponent />}\n                <div\n                    className={classnames('light-page-content', {\n                        'light-page-content_no-padding': noContentPadding,\n                        'light-page-content_no-background': noBackground,\n                    })}\n                >\n                    {children}\n                </div>\n            </Gap>\n        );\n\nexport default LightPageLayoutContent;\n","import { Text, TextTypography, TextStyle, useBreakpoint } from '@hh.ru/magritte-ui';\nimport BlokoText, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport useMagritte from 'lux/hooks/useMagritte';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    copyright: {\n        [TopLevelSite.BY]: 'footer.tutby.copyrights',\n        general: 'index.footer.menuitem.copyright',\n    },\n};\n\ninterface FooterProps {\n    isContrast?: boolean;\n}\n\nconst LightPageLayoutFooter: TranslatedComponent<FooterProps> = ({ trls, isContrast }) => {\n    const isMagritte = useMagritte();\n    const topLevelSite = useSelector((store) => store.topLevelSite);\n    const { isXS } = useBreakpoint();\n\n    const content = (\n        <span suppressHydrationWarning>\n            {format(trls[TrlKeys.copyright[topLevelSite === TopLevelSite.BY ? TopLevelSite.BY : 'general']], {\n                '{0}': new Date().getFullYear().toString(),\n            })}\n        </span>\n    );\n\n    if (isMagritte) {\n        return (\n            <div className=\"light-page-footer\">\n                <div className=\"light-page-footer__copyright\">\n                    <Text\n                        style={isContrast && !isXS ? TextStyle.Contrast : TextStyle.Primary}\n                        typography={TextTypography.Label2Regular}\n                        data-qa=\"copyright\"\n                    >\n                        {content}\n                    </Text>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"light-page-footer\">\n            <div className=\"light-page-footer__copyright\">\n                <BlokoText size={TextSize.Small} data-qa=\"copyright\">\n                    {content}\n                </BlokoText>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(LightPageLayoutFooter);\n","import React from 'react';\n\nimport LightPageLayoutContent from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutContent';\nimport LightPageLayoutFooter from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutFooter';\nimport LightPageLayoutHeader from 'lux/components/PageLayout/Layouts/LightPageLayout/LightPageLayoutHeader';\nimport { LightPageCommonProps } from 'lux/components/PageLayout/Layouts/LightPageLayout/lightPage.types';\n\nexport interface LightPageProps extends LightPageCommonProps {\n    children: React.FC<LightPageChildrenProps>;\n}\n\ninterface LightPageChildrenProps {\n    footer: React.ReactElement;\n    header: React.ReactElement;\n    Content: React.FC<React.PropsWithChildren>;\n}\n\nconst LightPage: React.FC<LightPageProps> = ({ children, noContentPadding, noBackground, promo, error }) => {\n    const Content = React.useMemo(\n        () => LightPageLayoutContent({ noContentPadding, noBackground, error }),\n        [noContentPadding, noBackground, error]\n    );\n\n    return children({\n        header: <LightPageLayoutHeader promo={promo} />,\n        Content,\n        footer: <LightPageLayoutFooter isContrast={!noBackground} />,\n    });\n};\n\nexport default LightPage;\n","import React from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H1 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface HeaderLayoutProps {\n    /** Обвязка содержимого страницы */\n    linkAboveHeader?: { to: string; trl: string };\n    /** Заголовок страницы */\n    title?: string;\n}\n\nconst HeaderLayout: React.FC<HeaderLayoutProps & React.PropsWithChildren> = ({ linkAboveHeader, children, title }) => (\n    <DefaultLayout>\n        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n            {linkAboveHeader && (\n                <BlokoLink disableVisited Element={Link} to={linkAboveHeader.to}>\n                    {linkAboveHeader.trl}\n                </BlokoLink>\n            )}\n            <H1>{title}</H1>\n            <VSpacing base={4} />\n        </Column>\n        {children}\n    </DefaultLayout>\n);\n\nexport default HeaderLayout;\n","import React, { ComponentType } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\n\ninterface SideBarLayoutProps {\n    sidebar: ComponentType;\n}\n\nconst SideBarLayout: React.FC<SideBarLayoutProps & React.PropsWithChildren> = ({\n    children,\n    sidebar: SideBarComponent,\n}) => (\n    <DefaultLayout>\n        <Column xs=\"4\" m=\"8\" l=\"11\" container>\n            {children}\n        </Column>\n        <Column xs=\"4\" m=\"4\" l=\"5\" container>\n            <SideBarComponent />\n        </Column>\n    </DefaultLayout>\n);\n\nexport default SideBarLayout;\n","import { useLayoutEffect } from 'react';\n\nimport PageErrorWrapper from 'lux/components/PageErrorWrapper';\nimport { PageHead, PageTitle, PageMeta, PageDescription, PageKeywords, PageLink } from 'lux/components/PageHead';\n\nimport FullPageLayout from 'lux/components/PageLayout/FullPageLayout';\nimport DefaultLayout from 'lux/components/PageLayout/Layouts/DefaultLayout';\nimport EmptyLayout from 'lux/components/PageLayout/Layouts/EmptyLayout';\nimport HeaderLayout from 'lux/components/PageLayout/Layouts/HeaderLayout';\nimport LightPageLayout from 'lux/components/PageLayout/Layouts/LightPageLayout';\nimport SideBarLayout from 'lux/components/PageLayout/Layouts/SideBarLayout';\nimport { PageLayoutWithCustomLayout } from 'lux/components/PageLayout/PageLayout.types';\n\nconst RSS_MIME = 'application/rss+xml';\n\nconst PageLayout: PageLayoutWithCustomLayout = ({\n    children,\n    layout: LayoutComponent = DefaultLayout,\n    errorWrapper: ErrorWrapperComponent = PageErrorWrapper,\n    ogTitle,\n    description,\n    ogDescription,\n    keywords,\n    canonical,\n    rssTitle,\n    rssHref,\n    removeTitle = false,\n    ...layoutProps\n}) => {\n    const { title } = layoutProps;\n\n    useLayoutEffect(() => {\n        if (removeTitle || title) {\n            const titleElement = document.querySelector('.HH-PageLayout-Title');\n            titleElement?.parentNode?.removeChild(titleElement);\n        }\n    }, [removeTitle, title]);\n\n    const content = (\n        <>\n            <PageHead>\n                {title && (\n                    <>\n                        <PageTitle>{title}</PageTitle>\n                        <PageMeta property=\"og:title\" content={ogTitle || title} />\n                    </>\n                )}\n                {description && <PageDescription content={description} openGraphContent={ogDescription} />}\n                {keywords && <PageKeywords content={keywords} />}\n                {canonical && <PageLink rel=\"canonical\" href={canonical} />}\n                {rssHref && (title || rssTitle) && (\n                    <PageLink title={rssTitle || title} type={RSS_MIME} rel=\"alternate\" href={rssHref} />\n                )}\n            </PageHead>\n            <LayoutComponent {...layoutProps}>{children}</LayoutComponent>\n        </>\n    );\n\n    return (\n        <FullPageLayout>\n            <ErrorWrapperComponent>{content}</ErrorWrapperComponent>\n        </FullPageLayout>\n    );\n};\n\nexport { EmptyLayout, DefaultLayout, SideBarLayout, LightPageLayout, HeaderLayout };\nexport default PageLayout;\n","import { FC, PropsWithChildren } from 'react';\n\nconst RowContent: FC<\n    {\n        isShrinked?: boolean;\n    } & PropsWithChildren\n> = ({ children, isShrinked }) => {\n    const cls = isShrinked ? 'row-content_schrinked' : 'row-content';\n    return <div className={cls}>{children}</div>;\n};\n\nexport default RowContent;\n","// tempexp_28466_file\nimport { AxiosResponse } from 'axios';\n\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/anonymous/set_signup_backurl': {\n            queryParams: void;\n            body: { backUrl?: string };\n            response: void;\n        };\n    }\n}\n\nexport const setSignupBackurl = (backUrl: string): Promise<AxiosResponse<void>> =>\n    fetcher.post('/shards/anonymous/set_signup_backurl', { backUrl });\n","export const redirectToFinishSignup = (): void => {\n    window.location.assign('/applicant/finish_signup');\n};\n","import { useRef, RefObject, useEffect } from 'react';\n\nimport { VacancyOfTheDay } from 'lux/models/vacanciesOfTheDay';\nimport { sendAnythingViewAnalytics, VacancyOfTheDayLocation, SpyParams } from 'lux/modules/sendAdvSpyAnalytics';\n\ntype VacanciesOfTheDay = Pick<VacancyOfTheDay, 'vacancyId' | 'viewUrl'>[];\n\nconst initVacanciesRefs = (vacanciesOfTheDay: VacanciesOfTheDay) =>\n    vacanciesOfTheDay.reduce((result, { vacancyId }) => {\n        result[vacancyId] = null;\n\n        return result;\n    }, {} as Record<number, HTMLElement | null>);\n\ntype UseVacanciesOfTheDayViewAnalytics = (\n    vacanciesOfTheDay: VacanciesOfTheDay,\n    location: VacancyOfTheDayLocation,\n    spyParams?: SpyParams\n) => RefObject<Record<number, HTMLElement | null>>;\n\nconst useVacanciesOfTheDayViewAnalytics: UseVacanciesOfTheDayViewAnalytics = (\n    vacanciesOfTheDay,\n    location,\n    spyParams\n) => {\n    const vacanciesRefs = useRef(initVacanciesRefs(vacanciesOfTheDay));\n\n    useEffect(() => {\n        vacanciesOfTheDay.forEach(({ vacancyId, viewUrl }) => {\n            const element = vacanciesRefs.current?.[vacancyId];\n\n            if (element) {\n                sendAnythingViewAnalytics({\n                    element,\n                    viewUrl,\n                    location,\n                    spyParams,\n                });\n            }\n        });\n    }, [vacanciesOfTheDay, location, spyParams]);\n\n    return vacanciesRefs;\n};\n\nexport default useVacanciesOfTheDayViewAnalytics;\n","import { FC } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\ninterface HeaderProps {\n    text: string;\n    disableTitleLink?: boolean;\n}\n\nconst Header: FC<HeaderProps> = ({ text, disableTitleLink }) => {\n    return (\n        <H2 data-qa=\"index__work-in-profession-header\">\n            {disableTitleLink ? (\n                text\n            ) : (\n                <BlokoLink kind={LinkKind.Tertiary} Element={Link} to=\"/vacancies\" isSeoLink>\n                    {text}\n                </BlokoLink>\n            )}\n        </H2>\n    );\n};\n\nexport default Header;\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\n\nimport { openAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport { useMainPageSignupEnable } from 'lux/models/anonymousSignUp/hooks';\nimport {\n    ProfessionalRoleCategory,\n    ProfessionalRoleCategoryCounted,\n} from 'lux/models/professionalRoleCategoryCollection';\nimport { WITH_TOP_FILTER_CATALOG } from 'lux/models/topFilterCatalog';\n\nimport { ListItemProps } from 'lux/components/WorkInProfession/ListItem';\nimport { sendAnalytics } from 'lux/components/WorkInProfession/Utils';\n\ninterface ListItemMobileProps extends ListItemProps {\n    category: ProfessionalRoleCategory | ProfessionalRoleCategoryCounted;\n    positionIndex: number;\n    isLast?: boolean;\n    isModal?: boolean;\n}\n\nconst ListItemMobile: FC<ListItemMobileProps> = ({ category, positionIndex, isLast, isModal }) => {\n    // tempexp_27541_start\n    const mainPageSignUpEnable = useMainPageSignupEnable();\n    const dispatch = useDispatch();\n    // tempexp_27541_end\n    return (\n        <li>\n            <Text Element=\"span\">\n                <BlokoLink\n                    kind={LinkKind.Tertiary}\n                    Element={Link}\n                    to={category.url}\n                    additionalQueryParams={{ [WITH_TOP_FILTER_CATALOG]: true }}\n                    rel={isModal ? 'nofollow' : undefined}\n                    isSeoLink\n                    onClick={(event) => {\n                        // tempexp_27541_start\n                        if (mainPageSignUpEnable) {\n                            event.preventDefault();\n                            dispatch(openAnonymousSignUpMainPage(category.url));\n                        }\n                        // tempexp_27541_end\n                        sendAnalytics(category.id, positionIndex);\n                    }}\n                >\n                    <span\n                        className={classnames('easy-tap-link easy-tap-link_with-arrow', {\n                            'easy-tap-link_last': isLast,\n                        })}\n                    >\n                        {category.name}\n                        {'count' in category && category.count > 0 && (\n                            <span className=\"easy-tap-link-number\">{category.count}</span>\n                        )}\n                    </span>\n                </BlokoLink>\n            </Text>\n        </li>\n    );\n};\n\nexport default ListItemMobile;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal--JYa0C9yP_nLRM_HWlJoi\",\"modalContent\":\"modal-content--ZE_zfWwjJ1Vd8R0Yj98X\"};","import BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport Modal, { ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useToggleState from 'lux/hooks/useToggleState';\nimport {\n    ProfessionalRoleCategory,\n    ProfessionalRoleCategoryCounted,\n} from 'lux/models/professionalRoleCategoryCollection';\n\nimport Header from 'lux/components/WorkInProfession/Header';\nimport ListItem from 'lux/components/WorkInProfession/ListItemMobile';\n\nimport styles from './work-in-profession.less';\n\nconst TrlKeys = {\n    showAll: 'industriesCatalog.viewAll',\n};\n\ninterface MobileModalProps {\n    title: string;\n    collection: ProfessionalRoleCategory[] | ProfessionalRoleCategoryCounted[];\n}\n\nconst ModalGroupMobile: TranslatedComponent<MobileModalProps> = ({ title, collection, trls }) => {\n    const [showModal, toggleShowModal] = useToggleState(false);\n\n    return (\n        <>\n            <BlokoLink\n                appearance={LinkAppearance.Pseudo}\n                onClick={toggleShowModal}\n                data-page-analytics-event=\"vacancy_professional_catalog_list.Mobile\"\n                data-qa=\"industries-catalog-trigger\"\n            >\n                {trls[TrlKeys.showAll]}\n            </BlokoLink>\n            <Modal visible={showModal} onClose={toggleShowModal}>\n                <ModalHeader outlined>\n                    <ModalTitle>\n                        <Header text={title} />\n                        <VSpacing base={4} />\n                    </ModalTitle>\n                </ModalHeader>\n                <div className={styles.modal}>\n                    <ul className={styles.modalContent} data-qa=\"index__work-in-profession-modal-list\">\n                        {collection.map((category, index) => (\n                            <ListItem\n                                key={category.id}\n                                category={category}\n                                positionIndex={index}\n                                isLast={index === collection.length - 1}\n                                isModal\n                            />\n                        ))}\n                    </ul>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default translation(ModalGroupMobile);\n","import { useMemo, FC } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport Header from 'lux/components/WorkInProfession/Header';\nimport ListItem from 'lux/components/WorkInProfession/ListItemMobile';\nimport ModalGroup from 'lux/components/WorkInProfession/ModalGroupMobile';\nimport { WorkInProfessionProps } from 'lux/components/WorkInProfession/index';\n\nconst WorkInProfession: FC<WorkInProfessionProps> = ({ customTitle, disableTitleLink }) => {\n    const { title, collection, collectionCounted } = useSelectorNonNullable(\n        (state) => state.professionalRoleCategoryCollection\n    );\n\n    const collectionOrCounted = collectionCounted.length ? collectionCounted : collection;\n    const collectionToRender = useMemo(() => collectionOrCounted.slice(0, 10), [collectionOrCounted]);\n\n    return (\n        <>\n            <Header text={customTitle || title} disableTitleLink={disableTitleLink} />\n            <VSpacing base={4} />\n            <ul data-qa=\"index__work-in-profession-list\">\n                {collectionToRender.map((category, index) => (\n                    <ListItem key={category.id} category={category} positionIndex={index} />\n                ))}\n            </ul>\n            <VSpacing base={4} />\n            <ModalGroup title={title} collection={collectionOrCounted} />\n        </>\n    );\n};\n\nexport default WorkInProfession;\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const sendAnalytics = (categoryId: string, positionIndex: number): void => {\n    Analytics.sendHHEventButtonClick('vacancy_professional_catalog_item', {\n        value: categoryId,\n        position: positionIndex,\n    });\n};\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\n\nimport { openAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport { useMainPageSignupEnable } from 'lux/models/anonymousSignUp/hooks';\nimport {\n    ProfessionalRoleCategory,\n    ProfessionalRoleCategoryCounted,\n} from 'lux/models/professionalRoleCategoryCollection';\nimport { WITH_TOP_FILTER_CATALOG } from 'lux/models/topFilterCatalog';\n\nimport { sendAnalytics } from 'lux/components/WorkInProfession/Utils';\n\nexport interface ListItemProps {\n    category: ProfessionalRoleCategory | ProfessionalRoleCategoryCounted;\n    positionIndex: number;\n}\n\nconst ListItem: FC<ListItemProps> = ({ category, positionIndex }) => {\n    // tempexp_27541_start\n    const mainPageSignUpEnable = useMainPageSignupEnable();\n    const dispatch = useDispatch();\n    // tempexp_27541_end\n    return (\n        <li className=\"multiple-column-list-item\">\n            <Text Element=\"span\">\n                <BlokoLink\n                    kind={LinkKind.Tertiary}\n                    Element={Link}\n                    to={category.url}\n                    additionalQueryParams={{ [WITH_TOP_FILTER_CATALOG]: true }}\n                    isSeoLink\n                    onClick={(event) => {\n                        // tempexp_27541_start\n                        if (mainPageSignUpEnable) {\n                            event.preventDefault();\n                            dispatch(openAnonymousSignUpMainPage(category.url));\n                        }\n                        // tempexp_27541_end\n                        sendAnalytics(category.id, positionIndex);\n                    }}\n                >\n                    {category.name}\n                </BlokoLink>\n            </Text>\n        </li>\n    );\n};\n\nexport default ListItem;\n","import { FC } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport Header from 'lux/components/WorkInProfession/Header';\nimport ListItem from 'lux/components/WorkInProfession/ListItem';\n\nexport interface WorkInProfessionProps {\n    customTitle?: string;\n    disableTitleLink?: boolean;\n}\n\nconst WorkInProfession: FC<WorkInProfessionProps> = ({ customTitle, disableTitleLink }) => {\n    const { title, collection } = useSelectorNonNullable((state) => state.professionalRoleCategoryCollection);\n\n    return (\n        <>\n            <Header text={customTitle || title} disableTitleLink={disableTitleLink} />\n            <VSpacing base={4} />\n            <ul className=\"multiple-column-list multiple-column-list_narrow\" data-qa=\"index__work-in-profession-list\">\n                {collection.map((category, index) => (\n                    <ListItem key={category.id} category={category} positionIndex={index} />\n                ))}\n            </ul>\n        </>\n    );\n};\n\nexport default WorkInProfession;\n","import { autoGeneratedReducer } from '@hh.ru/redux-create-reducer';\n\nexport interface BannerObject {\n    id: string;\n    cId: string;\n    bannerAdTargeting?: Record<string, unknown>;\n}\n\n// Не забудь продублировать в константы в  places.py!!!\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum BannerPlace {\n    AFTER_4TH_TOPIC_L = 'after-4th-topic-l',\n    AFTER_4TH_TOPIC_M = 'after-4th-topic-m',\n    AFTER_4TH_TOPIC_S = 'after-4th-topic-s',\n    AFTER_4TH_TOPIC_XS = 'after-4th-topic-xs',\n    AFTER_PAYMENT_FORM_L = 'after-payment-form-l',\n    AFTER_PAYMENT_FORM_S_M = 'after-payment-form-s-m',\n    AFTER_PAYMENT_FORM_XS = 'after-payment-form-xs',\n    AFTER_VACANCY_RESPONSE = 'after-vacancy-response',\n    BOTTOM_DASHBOARD = 'bottom-dashboard',\n    BOTTOM_DASHBOARD_CLICKME = 'bottom-dashboard-clickme',\n    CALENDAR = 'calendar',\n    DASHBOARD = 'dashboard',\n    INDEX_BOTTOM = 'index-bottom',\n    INDEX_BOTTOM_MOBILE = 'index-bottom-mobile',\n    INDEX_BOTTOM_XS = 'index-bottom-xs',\n    INDEX_DASHBOARD_MOBILE = 'index-dashboard-mobile',\n    INDEX_HORIZONTAL = 'index-horizontal',\n    INDEX_UNDER_NEWS_BOX = 'index-under-news-box',\n    INDEX_UNDER_DASHBOARD_SMALL = 'index-under-dashboard-small',\n    INDEX_VOD = 'index-vod',\n    INDEX_UNDER_RAINBOW_MOBILE = 'index-under-rainbow-mobile',\n    INDEX_UNDER_NEWS_BOX_MOBILE = 'index-under-news-box-mobile',\n    INDEX_WORK_IN_COMPANY = 'index-work-in-company',\n    INDEX_WORK_IN_COMPANY_MOBILE = 'index-work-in-company-mobile',\n    LEFT_COLUMN_UNDER_TABS = 'left-column-under-tabs',\n    RIGHT_COLUMN = 'right-column',\n    RIGHT_COLUMN_CLICKME = 'right-column-clickme',\n    RIGHT_COLUMN_CLICKME_ADAPTIVE = 'right-column-clickme-adaptive',\n    SERP_FIFTH_L = 'serp-fifth-l',\n    SERP_FIFTH_M = 'serp-fifth-m',\n    SERP_FIFTH_S = 'serp-fifth-s',\n    SERP_FIFTH_XS = 'serp-fifth-xs',\n    SERP_FIRST = 'serp-first',\n    SERP_FIRST_SMALL = 'serp-first-small',\n    SERP_FIRST_L = 'serp-first-l',\n    SERP_FIRST_M = 'serp-first-m',\n    SERP_FIRST_S = 'serp-first-s',\n    SERP_FIRST_XS = 'serp-first-xs',\n    SERP_FOURTH_L = 'serp-fourth-l',\n    SERP_FOURTH_M = 'serp-fourth-m',\n    SERP_FOURTH_S = 'serp-fourth-s',\n    SERP_FOURTH_XS = 'serp-fourth-xs',\n    SERP_SECOND = 'serp-second',\n    SERP_SECOND_SMALL = 'serp-second-small',\n    SERP_SECOND_L = 'serp-second-l',\n    SERP_SECOND_M = 'serp-second-m',\n    SERP_SECOND_S = 'serp-second-s',\n    SERP_SECOND_XS = 'serp-second-xs',\n    SERP_THIRD_L = 'serp-third-l',\n    SERP_THIRD_M = 'serp-third-m',\n    SERP_THIRD_S = 'serp-third-s',\n    SERP_THIRD_XS = 'serp-third-xs',\n    UNDER_PAGINATION_SEARCH_RESULTS_L = 'under-pagination-search-results-l',\n    UNDER_PAGINATION_SEARCH_RESULTS_M = 'under-pagination-search-results-m',\n    UNDER_PAGINATION_SEARCH_RESULTS_S = 'under-pagination-search-results-s',\n    UNDER_PAGINATION_SEARCH_RESULTS_XS = 'under-pagination-search-results-xs',\n    UNDER_SEARCH_RESULTS_ROTATE = 'under-search-results-rotate',\n    UNDER_SEARCH_RESULTS_XS = 'under-search-results-xs',\n    VACANCY_PROMOTION = 'vacancy-promotion',\n    VACANCY_RECOMMENDATIONS = 'vacancy-recommendations',\n    VACANCY_RIGHT_TEASER = 'vacancy-right-teaser',\n    VACANCY_VIEW_SERP_FIRST_L = 'vacancy-view-serp-first-l',\n    VACANCY_VIEW_SERP_FIRST_S_M = 'vacancy-view-serp-first-s-m',\n    VACANCY_VIEW_SERP_FIRST_XS = 'vacancy-view-serp-first-xs',\n    VACANCY_VIEW_SERP_FIRST_ODD_L = 'vacancy-view-serp-first-odd-l',\n    VACANCY_VIEW_SERP_FIRST_ODD_S_M = 'vacancy-view-serp-first-odd-s-m',\n    VACANCY_VIEW_SERP_FIRST_ODD_XS = 'vacancy-view-serp-first-odd-xs',\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n// Не забудь продублировать в константы в  places.py!!!\n\nexport interface Banners {\n    dashboard?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM]?: BannerObject[];\n    [BannerPlace.INDEX_BOTTOM_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_DASHBOARD_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_HORIZONTAL]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_NEWS_BOX_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_UNDER_RAINBOW_MOBILE]?: BannerObject[];\n    [BannerPlace.INDEX_VOD]?: BannerObject[];\n}\n\nexport default autoGeneratedReducer<Banners>({});\n","// extracted by mini-css-extract-plugin\nexport default {\"additionalCheckLogo\":\"additional-check-logo--Xduwdft5IZjxYhLyr1lP\"};","import { useEffect, useState } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Modal, { ModalContent, ModalFooter, ModalTitle } from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\n\nimport styles from './additionalCheck.less';\n\ndeclare global {\n    interface FetcherDeleteApi {\n        '/employer/additional_check': {\n            queryParams: unknown;\n            response: void;\n        };\n    }\n}\n\nconst additionalCheckArticleLink = 'https://feedback.hh.ru/knowledge-base/article/0522';\n\nconst TrlKeys = {\n    title: 'additionalCheck.title',\n    warning: 'additionalCheck.warning',\n    waiting: 'additionalCheck.waiting',\n    article: 'additionalCheck.article',\n    skip: 'additionalCheck.skip',\n};\n\nconst AdditionalCheck: TranslatedComponent = ({ trls }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const removeAdditionalCheckNote = async () => {\n        await fetcher.delete('/employer/additional_check', { params: {} });\n    };\n\n    const additionalCheckOff = () => {\n        setModalVisible(false);\n        void removeAdditionalCheckNote();\n    };\n\n    useEffect(() => setModalVisible(true), [setModalVisible]);\n\n    return (\n        <>\n            <Modal data-qa=\"additional-check-modal\" visible={modalVisible} onClose={() => additionalCheckOff()}>\n                <VSpacing base={2} />\n                <div className={styles.additionalCheckLogo}></div>\n                <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n                <VSpacing base={4} />\n                <ModalContent>\n                    <Text>{trls[TrlKeys.warning]}</Text>\n                    <VSpacing base={2} />\n                    <Text>{trls[TrlKeys.waiting]}</Text>\n                </ModalContent>\n                <ModalFooter>\n                    <Button\n                        data-qa=\"additional-check-modal-button-link\"\n                        to={additionalCheckArticleLink}\n                        Element={Link}\n                        onClick={() => additionalCheckOff()}\n                    >\n                        {trls[TrlKeys.article]}\n                    </Button>\n                    <HSpacing base={2} />\n                    <Button\n                        data-qa=\"additional-check-modal-button-close\"\n                        kind={ButtonKind.Primary}\n                        onClick={() => additionalCheckOff()}\n                    >\n                        {trls[TrlKeys.skip]}\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    );\n};\n\nexport default translation(AdditionalCheck);\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"banner--H0GfqDjXeVxYGhPmVTrm\"};","import classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport { H4Section } from 'bloko/blocks/header';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './app-banner.less';\n\nconst LINK_PARAM = 'main_banner';\n\nconst TrlKeys = {\n    title: 'mobile.appBanner.title',\n    storeLinks: {\n        ios: 'mobile.app.smartbanner.text.anchor.ios',\n        android: 'mobile.app.smartbanner.text.anchor.android',\n        winphone: 'mobile.app.smartbanner.text.anchor.winphone',\n        huawei: 'mobile.app.smartbanner.text.anchor.huawei',\n    },\n};\n\nconst AppBanner: TranslatedComponent = ({ trls }) => {\n    const appLink = useSelector((state) => state.appLink);\n    const device = useSelector((state) => state.device);\n\n    if (!appLink.detected) {\n        return null;\n    }\n\n    return (\n        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n            <Gap top>\n                <Link\n                    to={`${appLink.href}?${LINK_PARAM}`}\n                    className={classnames('app-banner', styles.banner)}\n                    data-qa=\"app-banner\"\n                >\n                    <div>\n                        <div className=\"app-banner-title\">\n                            <H4Section>{trls[TrlKeys.title]}</H4Section>\n                        </div>\n                        {!!device.type && (\n                            <span data-qa=\"app-banner-storelink\">{trls[TrlKeys.storeLinks[device.type]]}</span>\n                        )}\n                    </div>\n                    <span\n                        className={classnames('app-banner-icon', {\n                            [`app-banner-icon_${appLink.type}`]: appLink.type,\n                        })}\n                        data-qa=\"app-banner-img\"\n                    />\n                </Link>\n            </Gap>\n        </Column>\n    );\n};\n\nexport default translation(AppBanner);\n","import { useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst POLL_URL = 'https://rating.hh.ru/poll/?utm_source=hh.ru&utm_medium=referral&utm_campaign=above_footer_poll';\n\nconst TrlKeys = {\n    header: 'index.employersRatingTeaser.header',\n    description: 'index.employersRatingTeaser.description',\n    button: 'index.employersRatingTeaser.button',\n};\n\ninterface EmployerRatingTeaserProps {\n    isInline?: boolean;\n}\n\nconst EmployerRatingTeaser: TranslatedComponent<EmployerRatingTeaserProps> = ({ trls, isInline }) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const userType = useSelector((state) => state.userType);\n    const isApplicant = userType === UserType.Applicant;\n\n    const classnamesWithApplicantVariant = (basicClass: string) => {\n        return classnames(basicClass, {\n            [`${basicClass}_applicant`]: isApplicant,\n        });\n    };\n\n    const sendClickAnalytics = () => {\n        Analytics.sendEvent(userType, 'button_click', 'employers-rating-teaser');\n    };\n\n    useEffect(() => {\n        if (!containerRef.current) {\n            return;\n        }\n        Analytics.sendEventElementShown(containerRef.current, userType, 'show', 'employers-rating-teaser');\n    }, [userType]);\n\n    return (\n        <div\n            className={classnames('employers-rating-teaser-content', {\n                'employers-rating-teaser-content_inline': isInline,\n            })}\n            ref={containerRef}\n        >\n            <div>\n                <div className=\"employers-rating-teaser-heading-wrapper\">\n                    <H2 Element=\"h3\">{trls[TrlKeys.header]}</H2>\n                </div>\n                <div className={classnamesWithApplicantVariant('employers-rating-teaser-description-wrapper')}>\n                    <Text>{trls[TrlKeys.description]}</Text>\n                </div>\n                {!isInline && (\n                    <div className={classnamesWithApplicantVariant('employers-rating-teaser-image-wrapper')}>\n                        <span className={classnamesWithApplicantVariant('employers-rating-teaser-image')} />\n                    </div>\n                )}\n                <div className=\"employers-rating-teaser-link-wrapper\">\n                    <BlokoLink target=\"_blank\" href={POLL_URL} onClick={sendClickAnalytics} disableVisited>\n                        <span className=\"employers-rating-teaser-button-label\">{trls[TrlKeys.button]}</span>\n                    </BlokoLink>\n                </div>\n                <div className=\"employers-rating-teaser-button-wrapper\">\n                    <Button\n                        kind={ButtonKind.Primary}\n                        appearance={ButtonAppearance.Outlined}\n                        target=\"_blank\"\n                        Element=\"a\"\n                        href={POLL_URL}\n                        onClick={sendClickAnalytics}\n                    >\n                        <span className={classnamesWithApplicantVariant('employers-rating-teaser-button-label')}>\n                            {trls[TrlKeys.button]}\n                        </span>\n                    </Button>\n                </div>\n            </div>\n            {isInline && (\n                <div className=\"employers-rating-teaser-image-wrapper\">\n                    <span className=\"employers-rating-teaser-image\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default translation(EmployerRatingTeaser);\n","import classnames from 'classnames';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport StaticImg from 'lux/components/StaticImg';\nimport translation from 'lux/components/translation';\nimport { ChatBotMessengerTypes } from 'lux/models/chatBot';\n\nconst TrlKeys = {\n    header: 'index.messengers.bots.header',\n    texts: {\n        [ChatBotMessengerTypes.Viber]: 'messengers.bots.button.viber',\n        [ChatBotMessengerTypes.Telegram]: 'messengers.bots.button.telegram',\n        [ChatBotMessengerTypes.Vk]: 'messengers.bots.button.vk',\n    },\n    qrDescription: 'messengers.bots.qrCode.description',\n};\n\ninterface MessengersBotsProps {\n    isInline?: boolean;\n}\n\nconst MessengersBots: TranslatedComponent<MessengersBotsProps> = ({ trls, isInline }) => {\n    const { messengers, genericUserType, source, page } = useSelectorNonNullable((state) => state.chatBot);\n\n    return (\n        <>\n            <H2 Element=\"h3\">{trls[TrlKeys.header]}</H2>\n            <VSpacing base={4} />\n            <div\n                className={classnames('messengers-bots-content', {\n                    'messengers-bots-content_inline': isInline,\n                })}\n            >\n                <div className=\"messengers-bots-buttons\">\n                    <div className=\"messengers-bots-buttons__wrapper\">\n                        {messengers.map(({ type, href }) => {\n                            return (\n                                <div className=\"messengers-bots-button\" key={type}>\n                                    <Button\n                                        Element={Link}\n                                        to={href}\n                                        appearance={ButtonAppearance.Outlined}\n                                        stretched\n                                        target=\"_blank\"\n                                    >\n                                        <span className=\"messengers-bots-button__content\">\n                                            <span\n                                                className={classnames('messengers-bots-button__logo', {\n                                                    [`messengers-bots-button__logo_${type}`]: type,\n                                                })}\n                                            />\n                                            <span className=\"messengers-bots-button__text\">\n                                                {trls[TrlKeys.texts[type]]}\n                                            </span>\n                                        </span>\n                                    </Button>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <Gap top={!isInline} />\n                <div className=\"messengers-bots-qr-code-wrapper\">\n                    <StaticImg\n                        className=\"messengers-bots-qr-code\"\n                        path={`/i/hh/chatbot/${page}/qr-telegram-${genericUserType}-${source}.png`}\n                        alt={'qr-code-telegram'}\n                    />\n                    <div className=\"messengers-bots-qr-code-description\">\n                        <Text size={TextSize.Small} importance={TextImportance.Secondary}>\n                            {trls[TrlKeys.qrDescription]}\n                        </Text>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default translation(MessengersBots);\n","import EmployerRatingTeaser from 'lux/components/EmployerRatingTeaser';\nimport MessengersBots from 'lux/components/MessengersBots';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface InternalPromoBlockProps {\n    isInline?: boolean;\n}\n\nconst InternalPromoBlock: React.FC<InternalPromoBlockProps> = ({ isInline }) => {\n    const showEmployerRatingBlock = useSelector((state) => state.showEmployerRatingBlock);\n\n    if (showEmployerRatingBlock) {\n        return <EmployerRatingTeaser isInline={isInline} />;\n    }\n\n    return <MessengersBots isInline={isInline} />;\n};\n\nexport default InternalPromoBlock;\n","import { FC, PropsWithChildren } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\n\nimport { ArticleItemWithImage } from 'lux/models/article.types';\n\nconst NewsBoxItem: FC<ArticleItemWithImage & PropsWithChildren> = ({ href, image, title, isArticle = false }) => {\n    const analyticsType = isArticle ? 'article_item.articleItem' : 'news_item.newsItem';\n    return (\n        <li className=\"news-box-item\">\n            <Link to={href} data-page-analytics-event={analyticsType}>\n                <span className=\"news-box-item__link\">\n                    <img loading=\"lazy\" className=\"news-box-item__image\" src={image} />\n                    {title}\n                </span>\n            </Link>\n        </li>\n    );\n};\n\nexport default NewsBoxItem;\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const sendNewsBoxTitleClick = (type: string): void => Analytics.sendHHEventButtonClick(`news_box_${type}`);\n\nexport const sendNewsBoxItemsShown = (element: HTMLElement, type: string, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: `news_box_${type}_items`,\n        item: items,\n    });\n};\n\nexport default {\n    sendNewsBoxTitleClick,\n    sendNewsBoxItemsShown,\n};\n","import { FC, Fragment, PropsWithChildren, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { ArticleItemWithImage } from 'lux/models/article.types';\n\nimport NewsBoxItem from 'lux/components/NewsBox/NewsBoxItem';\nimport newsBoxAnalytics from 'lux/components/NewsBox/analytics';\n\ninterface NewsBoxProps {\n    items: ArticleItemWithImage[] | null;\n    href: string;\n    title: string;\n    withSeparator?: boolean;\n    isArticle?: boolean;\n    isEmployerContext?: boolean;\n    inDashboard?: boolean;\n    gapTop?: boolean;\n}\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst ColumnWrapper: FC<PropsWithChildren> = ({ children }) => (\n    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n        {children}\n    </Column>\n);\n\nconst NewsBox: FC<NewsBoxProps & PropsWithChildren> = ({\n    title,\n    href,\n    items,\n    withSeparator = false,\n    isArticle = false,\n    isEmployerContext = true,\n    inDashboard = false,\n    gapTop = false,\n}) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const newsBoxRef = useRef(null);\n    const isZp = useIsZarplataPlatform();\n    const newsBoxItems = items || [];\n    const analyticsType = isArticle ? 'article_list.articleList' : 'news_list.newsHeader';\n    const Wrapper = inDashboard || isZp ? Fragment : ColumnWrapper;\n    const newsBoxType = isArticle ? 'article' : 'news';\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && newsBoxItems?.length && newsBoxRef.current) {\n            newsBoxAnalytics.sendNewsBoxItemsShown(\n                newsBoxRef.current,\n                newsBoxType,\n                newsBoxItems.map((item) => item.title)\n            );\n        }\n    }, [employerMainPageAnalyticsEnabled, isArticle, newsBoxItems, newsBoxType]);\n\n    const handleClick = () => {\n        newsBoxAnalytics.sendNewsBoxTitleClick(newsBoxType);\n    };\n\n    return (\n        <Wrapper>\n            <Gap top={gapTop} xsTop={inDashboard} sTop={inDashboard}>\n                <div\n                    ref={newsBoxRef}\n                    className={classnames('index-news-box', {\n                        'index-news-box_article': isArticle,\n                        'index-news-box_employer': isEmployerContext,\n                        'index-news-box_dashboard': inDashboard,\n                        'index-news-box_dashboard-separator': inDashboard && withSeparator,\n                    })}\n                >\n                    <div className=\"index-news-box__header\">\n                        <H2 Element=\"h3\">\n                            <BlokoLink\n                                Element={Link}\n                                to={href}\n                                kind={LinkKind.Tertiary}\n                                data-page-analytics-event={analyticsType}\n                                onClick={employerMainPageAnalyticsEnabled ? handleClick : undefined}\n                            >\n                                {title}\n                            </BlokoLink>\n                        </H2>\n                        <VSpacing base={4} />\n                    </div>\n                    <ul>\n                        {items?.map(({ title, href, image }) => (\n                            <NewsBoxItem key={title} title={title} href={href} image={image} isArticle={isArticle} />\n                        ))}\n                    </ul>\n                    {!inDashboard && withSeparator && (\n                        <div className=\"index-news-box__separator\">\n                            <div className=\"separator\" />\n                        </div>\n                    )}\n                </div>\n            </Gap>\n        </Wrapper>\n    );\n};\n\nexport default translation(NewsBox);\n","import employerOfTheDayItemButtonClick, {\n    HhtmSourceLabel,\n} from '@hh.ru/analytics-js-events/build/xhh/common/main/employer_of_the_day_item_button_click';\nimport urlParser from 'bloko/common/urlParser';\n\nimport { CompanyOfTheDay } from 'lux/models/companiesOfTheDay';\nimport { Locale } from 'lux/models/locale.types';\nimport { WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\n\nexport interface MobileCompanyItemInterface {\n    company: CompanyOfTheDay;\n    isLast: boolean;\n}\n\nexport interface CompanyItemInterface {\n    company: CompanyOfTheDay;\n    analyticsEvent?: string;\n    itemClassName?: string;\n    itemWrapperClassName?: string;\n}\n\nexport const sendAnalytics = (company: CompanyOfTheDay, hhtmSourceLabel: HhtmSourceLabel): void => {\n    employerOfTheDayItemButtonClick({ employerId: `${company.id}`, hhtmSourceLabel });\n};\n\nexport const getCompanyLink = (\n    company: CompanyOfTheDay,\n    locale: Locale,\n    location: WorkInCompanyLocation,\n    isZP = false\n): string =>\n    isZP\n        ? `${locale.protocolHost}/employer/${company.id}`\n        : `https://content.hh.ru/api/v1/click?${urlParser.stringify({\n              contentId: company.workInCompanyId,\n              placeId: company.placeId,\n              employerId: company.id,\n              domainAreaId: locale.domainAreaId,\n              host: locale.protocolHost,\n              location,\n          })}`;\n","import { FC } from 'react';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { BannerPlace } from 'lux/models/banners';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface Props {\n    isMobile?: boolean;\n}\n\nconst WorkInCompanyBanner: FC<Props> = ({ isMobile }) => {\n    const workInCompanyBanners = useSelector(\n        (state) =>\n            state.banners[isMobile ? BannerPlace.INDEX_WORK_IN_COMPANY_MOBILE : BannerPlace.INDEX_WORK_IN_COMPANY]\n    );\n\n    if (!workInCompanyBanners?.[0]) {\n        return null;\n    }\n\n    return (\n        <div className=\"work-in-company-banner\">\n            <AdsExternalBanner {...workInCompanyBanners[0]} />\n        </div>\n    );\n};\n\nexport default WorkInCompanyBanner;\n","import { useRef, RefObject, useEffect } from 'react';\n\nimport { CompanyOfTheDay } from 'lux/models/companiesOfTheDay';\nimport { sendAnythingViewAnalytics, SpyParams, WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\n\ntype UseCompaniesOfTheDayViewAnalytics = (\n    companiesOfTheDay: CompanyOfTheDay[],\n    location: WorkInCompanyLocation,\n    spyParams?: SpyParams\n) => RefObject<HTMLElement[]>;\n\nconst useCompaniesOfTheDayViewAnalytics: UseCompaniesOfTheDayViewAnalytics = (\n    companiesOfTheDay,\n    location,\n    spyParams\n) => {\n    const companiesRefs = useRef<HTMLElement[]>([]);\n\n    useEffect(() => {\n        companiesOfTheDay.forEach(({ id, viewUrl }) => {\n            if (companiesRefs.current?.[id] && viewUrl) {\n                sendAnythingViewAnalytics({ element: companiesRefs.current[id], viewUrl, location, spyParams });\n            }\n        });\n    }, [companiesOfTheDay, location, spyParams]);\n\n    return companiesRefs;\n};\n\nexport default useCompaniesOfTheDayViewAnalytics;\n","import { FC } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\n\nimport { getCompanyLink, sendAnalytics } from 'lux/components/WorkInCompany/Utils';\nimport WorkInBanner from 'lux/components/WorkInCompany/WorkInBanner';\nimport useCompaniesOfTheDayViewAnalytics from 'lux/components/WorkInCompany/hooks/useCompaniesOfTheDayViewAnalytics';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CompanyOfTheDay } from 'lux/models/companiesOfTheDay';\nimport { WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface RainbowDropCompaniesOfTheDayProps {\n    companiesOfTheDay: CompanyOfTheDay[];\n}\n\nconst RainbowDropCompaniesOfTheDay: FC<RainbowDropCompaniesOfTheDayProps> = ({ companiesOfTheDay }) => {\n    const locale = useSelector((state) => state.locale);\n\n    const isZP = useIsZarplataPlatform();\n    const companiesRefs = useCompaniesOfTheDayViewAnalytics(companiesOfTheDay, WorkInCompanyLocation.RainbowCatalog);\n\n    return (\n        <ul className=\"multiple-column-list multiple-column-list_wide\">\n            <li className=\"dashboard-tiles-drop-banner\">\n                <WorkInBanner />\n            </li>\n            {companiesOfTheDay.map((company: CompanyOfTheDay) => (\n                <li className=\"multiple-column-list-item\" key={company.id}>\n                    <Text>\n                        <div className=\"dashboard-tiles-drop-item\">\n                            <BlokoLink\n                                to={getCompanyLink(company, locale, WorkInCompanyLocation.RainbowCatalog, isZP)}\n                                Element={Link}\n                                kind={LinkKind.Tertiary}\n                                onClick={() => sendAnalytics(company, 'rainbow_catalog')}\n                            >\n                                <div\n                                    className=\"dashboard-tiles-drop-employer\"\n                                    data-qa=\"company-of-the-day-title\"\n                                    ref={(ref) => {\n                                        if (ref && companiesRefs.current) {\n                                            companiesRefs.current[company.id] = ref;\n                                        }\n                                    }}\n                                >\n                                    <span data-qa=\"company-of-the-day-name\">{company.companyName}</span>\n                                    <span className=\"dashboard-tiles-drop-employer-vacancies-number\">\n                                        <Text importance={TextImportance.Tertiary}>{company.vacanciesNumber}</Text>\n                                    </span>\n                                </div>\n                            </BlokoLink>\n                        </div>\n                    </Text>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default translation(RainbowDropCompaniesOfTheDay);\n","import { ProfessionsListProfession } from 'lux/models/professionsList';\n\nexport const PART_TIME_CATALOG_ID = '50';\n\ninterface GetVacancyCompanyLinkParams {\n    company: {\n        id: number;\n        department?: {\n            '@code': string;\n        };\n    };\n}\n\nexport const getVacancyCompanyLink = (vacancy: GetVacancyCompanyLinkParams): string => {\n    let link = `/employer/${vacancy.company.id}`;\n    if (vacancy.company.department) {\n        link += `?dpt=${vacancy.company.department['@code']}`;\n    }\n    return link;\n};\n\nexport const getProfessionLink = (\n    parentProfession: ProfessionsListProfession,\n    profession: ProfessionsListProfession\n): string => {\n    if (profession.catalogPath) {\n        return profession.catalogPath;\n    }\n    const url = parentProfession.id === PART_TIME_CATALOG_ID ? '/vacancies/podrabotka' : '/search/vacancy';\n    return `${url}?${profession.query}`;\n};\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Conversion from 'bloko/blocks/conversion';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Compensation from 'lux/components/Compensation';\nimport { PART_TIME_CATALOG_ID, getProfessionLink } from 'lux/components/RainbowCatalog/utils';\nimport translation from 'lux/components/translation';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { ProfessionsListProfession } from 'lux/models/professionsList';\n\ninterface RainbowDropProfessionProps {\n    professions: ProfessionsListProfession[];\n    parentProfession: ProfessionsListProfession;\n    currency: CurrencyType;\n    showSeoLinksForBots: boolean;\n}\n\nconst TrlKeys = {\n    vacancies: {\n        one: 'professions.vacancies.one',\n        some: 'professions.vacancies.some',\n        many: 'professions.vacancies.many',\n    },\n};\n\nconst RainbowDropProfession: TranslatedComponent<RainbowDropProfessionProps> = ({\n    professions,\n    parentProfession,\n    currency,\n    showSeoLinksForBots,\n    trls,\n}) => {\n    return (\n        <ul className=\"multiple-column-list multiple-column-list_wide\">\n            {[parentProfession, ...professions].map((profession, index) => {\n                return (\n                    // Поисковым ботам показываем только ЧПУ (ссылки на каталог /vacancies/) и подработку\n                    (showSeoLinksForBots\n                        ? profession.catalogPath || parentProfession.id === PART_TIME_CATALOG_ID\n                        : true) && (\n                        <li className=\"multiple-column-list-item\" key={profession.id}>\n                            <Text>\n                                <div className=\"dashboard-tiles-drop-item\">\n                                    <BlokoLink\n                                        Element={Link}\n                                        to={getProfessionLink(parentProfession, profession)}\n                                        additionalQueryParams={{ hhtmFromLabel: 'rainbow_profession' }}\n                                        isSeoLink={showSeoLinksForBots}\n                                        data-qa=\"profession-item-title\"\n                                        data-page-analytics-value={profession.name}\n                                        data-page-analytics-position={index}\n                                        data-page-analytics-event=\"vacancy_rainbow_catalog_item_link.rainbowLink\"\n                                    >\n                                        {profession.name}\n                                    </BlokoLink>\n                                </div>\n                                <br />\n                                <div className=\"dashboard-tiles-drop-compensation\">\n                                    <Compensation\n                                        from={profession.compensationFrom}\n                                        to={profession.compensationTo}\n                                        currencyCode={currency}\n                                        dash\n                                    />\n                                    <span className=\"dashboard-tiles-drop-comma\">, </span>\n                                    <div className=\"dashboard-tiles-drop-vacancies-number\">\n                                        <Text importance={TextImportance.Tertiary}>\n                                            <Conversion\n                                                value={profession.count}\n                                                one={trls[TrlKeys.vacancies.one]}\n                                                some={trls[TrlKeys.vacancies.some]}\n                                                many={trls[TrlKeys.vacancies.many]}\n                                            />\n                                        </Text>\n                                    </div>\n                                </div>\n                            </Text>\n                        </li>\n                    )\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default translation(RainbowDropProfession);\n","import vacancyOfTheDayItemButtonClick, {\n    HhtmSourceLabel,\n} from '@hh.ru/analytics-js-events/build/xhh/common/main/vacancy_of_the_day_item_button_click';\n\nexport const sendAnalytics = (vacancyId: number, hhtmSourceLabel: HhtmSourceLabel): void => {\n    vacancyOfTheDayItemButtonClick({ vacancyId: `${vacancyId}`, hhtmSourceLabel });\n};\n","import { FC, PropsWithChildren } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\nimport { getVacancyCompanyLink } from 'lux/components/RainbowCatalog/utils';\n\ninterface VacancyCompanyLinkProps {\n    vacancy: {\n        id?: number;\n        company: {\n            id: number;\n            department?: {\n                '@code': string;\n            };\n        };\n    };\n}\n\nconst VacancyCompanyLink: FC<VacancyCompanyLinkProps & PropsWithChildren> = ({ vacancy, children }) => {\n    if (vacancy.company.id !== undefined) {\n        return (\n            <BlokoLink Element={Link} to={getVacancyCompanyLink(vacancy)} kind={LinkKind.Secondary}>\n                {children}\n            </BlokoLink>\n        );\n    }\n    return <>{children}</>;\n};\n\nexport default VacancyCompanyLink;\n","import { FC } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\n\nimport Compensation from 'lux/components/Compensation';\nimport { getVacancyLink } from 'lux/components/VacanciesOfTheDay/Utils';\nimport { sendAnalytics } from 'lux/components/VacanciesOfTheDay/analytics';\nimport useVacanciesOfTheDayViewAnalytics from 'lux/components/VacanciesOfTheDay/hooks/useVacanciesOfTheDayViewAnalytics';\nimport CompanyLink from 'lux/components/VacancyCompanyLink';\nimport translation from 'lux/components/translation';\nimport { VacancyOfTheDay } from 'lux/models/vacanciesOfTheDay';\nimport { VacancyOfTheDayLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface RainbowDropVacanciesOfTheDayProps {\n    vacancies: VacancyOfTheDay[];\n}\n\nconst RainbowDropVacanciesOfTheDay: FC<RainbowDropVacanciesOfTheDayProps> = ({ vacancies }) => {\n    const vacanciesRefs = useVacanciesOfTheDayViewAnalytics(vacancies, VacancyOfTheDayLocation.RainbowCatalog);\n    const hhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n\n    return (\n        <ul className=\"multiple-column-list multiple-column-list_wide\">\n            {vacancies.map((vacancy) => (\n                <li className=\"multiple-column-list-item\" key={vacancy.vacancyId}>\n                    <Text>\n                        <div className=\"dashboard-tiles-drop-item\">\n                            <BlokoLink\n                                Element={Link}\n                                to={getVacancyLink(vacancy, VacancyOfTheDayLocation.RainbowCatalog)}\n                                additionalQueryParams={{\n                                    source: 'rainbowCatalog',\n                                    from: hhtmSource,\n                                    hhtmFromLabel: 'recommended_vacancies',\n                                }}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                onClick={() => sendAnalytics(vacancy.vacancyId, 'rainbow_catalog')}\n                            >\n                                <span\n                                    className=\"vacancy-of-the-day__title\"\n                                    data-qa=\"vacancy_of_the_day_title\"\n                                    ref={(ref) => {\n                                        if (ref && vacanciesRefs.current) {\n                                            vacanciesRefs.current[vacancy.vacancyId] = ref;\n                                        }\n                                    }}\n                                >\n                                    {vacancy.name}\n                                </span>\n                            </BlokoLink>\n                            <div className=\"dashboard-tiles-drop-compensation dashboard-tiles-drop-compensation_promo\">\n                                <span className=\"vacancy-of-the-day__salary\" data-qa=\"vacancy_of_the_day_compensation\">\n                                    <Compensation\n                                        from={vacancy.compensation.from}\n                                        to={vacancy.compensation.to}\n                                        currencyCode={vacancy.compensation.currencyCode}\n                                        showNoSalaryMessage\n                                    />\n                                </span>\n                            </div>\n                            {vacancy.company.id && (\n                                <div>\n                                    <span className=\"vacancy-of-the-day__company\" data-qa=\"vacancy_of_the_day_company\">\n                                        <CompanyLink vacancy={vacancy}>\n                                            {vacancy.company.visibleName && `${vacancy.company.visibleName}, `}\n                                            {vacancy.area.name}\n                                        </CompanyLink>\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                    </Text>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default translation(RainbowDropVacanciesOfTheDay);\n","import { ReactNode, FC } from 'react';\n\nimport Modal, { ModalHeader, ModalTitle, ModalContent } from 'bloko/blocks/modal';\n\nimport translation from 'lux/components/translation';\n\ninterface RainbowModalProps {\n    isVisible: boolean;\n    onClose: () => void;\n    content: { title: string; body: ReactNode; separator?: ReactNode } | null;\n}\n\nconst RainbowModal: FC<RainbowModalProps> = ({ isVisible, onClose, content }) => {\n    if (!content) {\n        return null;\n    }\n    return (\n        <Modal visible={isVisible} onClose={onClose}>\n            <ModalHeader data-qa=\"professions-modal-mobile-page\">\n                <ModalTitle>{content.title}</ModalTitle>\n                {content.separator || null}\n            </ModalHeader>\n            <ModalContent data-qa=\"professions-modal-mobile-content\">{content.body}</ModalContent>\n        </Modal>\n    );\n};\n\nexport default translation(RainbowModal);\n","import { FC } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\n\nimport { getProfessionLink } from 'lux/components/RainbowCatalog/utils';\nimport translation from 'lux/components/translation';\nimport { ProfessionsListProfession } from 'lux/models/professionsList';\n\ninterface RainbowDropProfessionProps {\n    professions: ProfessionsListProfession[];\n    parentProfession: ProfessionsListProfession;\n}\n\nconst RainbowDropProfession: FC<RainbowDropProfessionProps> = ({ professions, parentProfession }) => {\n    return (\n        <ul className=\"multiple-column-list multiple-column-list_wide\">\n            {[parentProfession, ...professions].map((profession, index) => {\n                return (\n                    <li className=\"multiple-column-list-item\" key={profession.id}>\n                        <Text>\n                            <BlokoLink\n                                Element={Link}\n                                to={getProfessionLink(parentProfession, profession)}\n                                additionalQueryParams={{ hhtmFromLabel: 'rainbow_profession' }}\n                                kind={LinkKind.Tertiary}\n                                data-page-analytics-value={profession.name}\n                                data-page-analytics-position={index}\n                                data-page-analytics-event=\"vacancy_rainbow_catalog_item_link.rainbowLinkMobile\"\n                            >\n                                <div className=\"easy-tap-link easy-tap-link_with-arrow\">\n                                    <div>{profession.name}</div>\n                                    <div className=\"easy-tap-link-number\">{profession.count}</div>\n                                </div>\n                            </BlokoLink>\n                        </Text>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default translation(RainbowDropProfession);\n","import { ReactNode, RefObject, useEffect, useRef, useState, FC } from 'react';\nimport classnames from 'classnames';\n\nimport scrollTop from 'Utils/ScrollTop';\nimport translation from 'lux/components/translation';\n\nconst SCROLL_OFFSET_TOP = 150;\nconst SCROLL_OFFSET_BOTTOM = 200;\n\ninterface RainbowDropProps {\n    tileIndex: number;\n    activeDropIndex: number;\n    activeTileContent: ReactNode;\n    previousActiveTileIndex: number;\n    isXsOnly?: boolean;\n    seoContent?: ReactNode;\n}\n\nconst scrollToDrop = (dropRef: RefObject<HTMLDivElement>) => {\n    if (!dropRef.current) {\n        return;\n    }\n    const dropBoundingClientTop = dropRef.current.getBoundingClientRect().top;\n    const dropTopOffsetLower = dropBoundingClientTop + SCROLL_OFFSET_BOTTOM;\n    if (dropTopOffsetLower > window.innerHeight) {\n        scrollTop({ top: window.scrollY + (dropTopOffsetLower - window.innerHeight) });\n    }\n    const dropTopOffsetUpper = dropBoundingClientTop - SCROLL_OFFSET_TOP;\n    if (dropTopOffsetUpper < 0) {\n        scrollTop({ top: window.scrollY + dropTopOffsetUpper, speed: 0 });\n    }\n};\n\nconst RainbowDrop: FC<RainbowDropProps> = ({\n    tileIndex,\n    activeDropIndex,\n    activeTileContent,\n    previousActiveTileIndex,\n    isXsOnly,\n    seoContent,\n}) => {\n    const dropRef = useRef<HTMLDivElement>(null);\n    const dropInnerRef = useRef<HTMLDivElement>(null);\n\n    const [containerHeight, setContainerHeight] = useState<string>('0px');\n\n    const content = activeDropIndex === tileIndex ? activeTileContent : null;\n    const showDrop = Boolean(content);\n\n    useEffect(() => {\n        if (!showDrop) {\n            // close without animation\n            setContainerHeight(`0px`);\n            return;\n        }\n\n        if (previousActiveTileIndex === -1) {\n            // open with animation\n            const contentHeight = dropInnerRef.current?.clientHeight;\n            setContainerHeight(`${String(contentHeight)}px`);\n\n            // for correct resize adaptation after transition\n            const onTransitionEnd = () => {\n                setContainerHeight('auto');\n                dropRef.current?.removeEventListener('transitionend', onTransitionEnd);\n            };\n            dropRef.current?.addEventListener('transitionend', onTransitionEnd);\n        } else {\n            // open without animation\n            setContainerHeight(`auto`);\n        }\n        scrollToDrop(dropRef);\n    }, [showDrop, previousActiveTileIndex, tileIndex, activeDropIndex]);\n\n    return (\n        <div\n            className={classnames('dashboard-tiles-item-drop-container', {\n                // Ботам всегда показываем seoContent\n                // Кроме случая с десктопным экраном и наличием предложения вакансий\n                'dashboard-tiles-item-drop-container_visible': !isXsOnly && (!!seoContent || showDrop),\n                'dashboard-tiles-item-drop-container_xs-visible': isXsOnly && !!seoContent,\n            })}\n            style={{ height: containerHeight }}\n            data-qa={`professions-drop-desktop ${showDrop ? 'professions-drop-desktop-active' : ''}`}\n            data-rainbow-catalog-drop-active={showDrop ? 'true' : 'false'}\n            ref={dropRef}\n        >\n            <div className=\"dashboard-tiles-item-drop-container-inner\" ref={dropInnerRef}>\n                {seoContent || content}\n            </div>\n        </div>\n    );\n};\n\nexport default translation(RainbowDrop);\n","import { FC, PropsWithChildren, MouseEvent } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\nconst DATA_QA = 'professions-item-mobile';\n\ninterface RainbowTileMobileProps {\n    onClick: (title: string, event: MouseEvent<HTMLAnchorElement | HTMLDivElement>) => void;\n    link?: string;\n    professionIndex: number;\n    colorIndex?: number;\n    profession?: string;\n}\n\nconst RainbowTileMobile: FC<RainbowTileMobileProps & PropsWithChildren> = ({\n    children,\n    colorIndex,\n    link,\n    onClick,\n    professionIndex = 0,\n    profession = '',\n}) => {\n    const breakpoint = useBreakpoint(Breakpoint.M);\n    const resolution = breakpoint === Breakpoint.XS ? 'mobile' : 'desktop';\n\n    if (link) {\n        return (\n            <Link\n                to={link}\n                className={'dashboard-tiles-item-mobile dashboard-tiles-item-link'}\n                onClick={(event) => onClick(String(children), event)}\n                data-qa={DATA_QA}\n            >\n                {children}\n            </Link>\n        );\n    }\n\n    return (\n        <div\n            className={classnames('dashboard-tiles-item-mobile', {\n                [`dashboard-tiles-item-mobile_rainbow-${String(colorIndex)}`]: colorIndex !== undefined,\n            })}\n            data-page-analytics-event={`vacancy_rainbow_catalog_item.${resolution}`}\n            data-page-analytics-position={professionIndex}\n            data-page-analytics-value={profession}\n            onClick={(event) => onClick(String(children), event)}\n            data-qa={DATA_QA}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default RainbowTileMobile;\n","import { ReactNode, MouseEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Compensation from 'lux/components/Compensation';\nimport RainbowTileDrop from 'lux/components/RainbowCatalog/Drop';\nimport translation from 'lux/components/translation';\nimport { openAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport { useMainPageSignupEnable } from 'lux/models/anonymousSignUp/hooks';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport RainbowTileMobile from 'lux/components/RainbowCatalog/Tile/Mobile';\n\nexport const COLORS_COUNT = 6;\n\ninterface RainbowTileProps {\n    professionIndex?: number;\n    promo?: boolean;\n    title: string;\n    vacanciesCount: number;\n    tileIndex: number;\n    activeTileIndex: number;\n    activeDropIndex: number;\n    activeTileContent: ReactNode;\n    onClick: (index: number, content: ReactNode) => void;\n    previousActiveTileIndex: number;\n    dataQa: { tile: string };\n    onClickMobile?: (title: string, body: ReactNode) => void;\n    mobileContent?: ReactNode;\n    compensation?: { from: number; to: number; currencyCode: CurrencyType };\n    isSuitableVacanciesMode?: boolean;\n    isXsOnly: boolean;\n    isLoading?: boolean;\n    hideMobile?: boolean;\n    link?: string;\n    pageAnalyticsValue?: string;\n    children?: ReactNode;\n    showSeoLinksForBots?: boolean;\n}\n\nconst TrlKeys = {\n    vacancies: {\n        one: 'professions.vacancies.one',\n        some: 'professions.vacancies.some',\n        many: 'professions.vacancies.many',\n    },\n};\n\nconst RainbowTile: TranslatedComponent<RainbowTileProps> = ({\n    professionIndex,\n    promo,\n    title,\n    compensation,\n    vacanciesCount,\n    tileIndex,\n    activeTileIndex,\n    activeDropIndex,\n    activeTileContent,\n    isSuitableVacanciesMode,\n    previousActiveTileIndex,\n    dataQa,\n    onClick,\n    onClickMobile,\n    mobileContent,\n    isXsOnly,\n    link,\n    isLoading,\n    hideMobile,\n    pageAnalyticsValue,\n    children,\n    showSeoLinksForBots,\n    trls,\n}) => {\n    // tempexp_27541_start\n    const mainPageSignUpEnable = useMainPageSignupEnable();\n    const dispatch = useDispatch();\n    // tempexp_27541_end\n    const columnSize = isSuitableVacanciesMode ? '3' : '4';\n    const colorIndex = professionIndex !== undefined ? professionIndex % COLORS_COUNT : undefined;\n    const userType = useSelector((state) => state.userType);\n\n    const getVacanciesCountTrl = (value: number) => {\n        return (\n            <ConversionNumber\n                one={trls[TrlKeys.vacancies.one]}\n                some={trls[TrlKeys.vacancies.some]}\n                many={trls[TrlKeys.vacancies.many]}\n                zero={NON_BREAKING_SPACE}\n                hasValue={true}\n                value={value}\n            />\n        );\n    };\n\n    const handleClick = () => {\n        Analytics.sendEvent(userType, 'profession_block', title);\n        if (!link) {\n            onClick(tileIndex, children);\n        }\n    };\n\n    const handleClickMobile = (title: string, event: MouseEvent<HTMLAnchorElement | HTMLDivElement>) => {\n        Analytics.sendEvent(userType, 'profession_block', title);\n        if (link) {\n            // tempexp_27541_start\n            if (mainPageSignUpEnable) {\n                event.preventDefault();\n                dispatch(openAnonymousSignUpMainPage(link));\n            }\n            // tempexp_27541_end\n        } else {\n            onClickMobile?.(title, mobileContent);\n        }\n    };\n\n    const renderLink = (content: ReactNode) => {\n        if (link) {\n            return (\n                <Link\n                    to={link}\n                    className=\"dashboard-tiles-item-link\"\n                    onClick={(event) => {\n                        // tempexp_27541_start\n                        if (mainPageSignUpEnable) {\n                            event.preventDefault();\n                            dispatch(openAnonymousSignUpMainPage(link));\n                        }\n                        // tempexp_27541_end\n                    }}\n                >\n                    {content}\n                </Link>\n            );\n        }\n        return content;\n    };\n\n    const renderTitleWrapper = (content: string) => {\n        if (isSuitableVacanciesMode) {\n            return <BlokoLink appearance={LinkAppearance.Pseudo}>{content}</BlokoLink>;\n        }\n        return content;\n    };\n\n    return (\n        <>\n            <div\n                className={classnames('dashboard-tiles-item', {\n                    'dashboard-tiles-item_active': tileIndex === activeTileIndex,\n                    'dashboard-tiles-item_mobile-only': isXsOnly,\n                    'dashboard-tiles-item_suitable-vacancies': isSuitableVacanciesMode,\n                })}\n                data-page-analytics-value={pageAnalyticsValue || title}\n                data-rainbow-catalog-tile=\"\"\n            >\n                {!isXsOnly && (\n                    <Column xs=\"0\" s=\"4\" m={columnSize} l={columnSize}>\n                        {renderLink(\n                            <div className=\"dashboard-tiles-item-shadow\" data-qa={dataQa.tile}>\n                                <div\n                                    className={classnames('dashboard-tiles-item-inner', {\n                                        'dashboard-tiles-item-inner_loading': isLoading,\n                                        'dashboard-tiles-item-inner_active': tileIndex === activeTileIndex,\n                                    })}\n                                    data-page-analytics-event={`vacancy_rainbow_catalog_item.desktop_${title}`}\n                                    data-page-analytics-position={professionIndex}\n                                    onClick={handleClick}\n                                >\n                                    <div className=\"dashboard-tiles-item__layout\">\n                                        <div\n                                            className={classnames('dashboard-tiles-item-highlighter', {\n                                                [`dashboard-tiles-item-highlighter_${String(colorIndex)}`]:\n                                                    colorIndex !== undefined,\n                                                'dashboard-tiles-item-highlighter_promo': promo,\n                                            })}\n                                        />\n                                        <div className=\"dashboard-tiles-item__body\">\n                                            <div className=\"dashboard-tiles-item__content\">\n                                                <div className=\"dashboard-tiles-item__title\">\n                                                    {renderTitleWrapper(title)}\n                                                </div>\n                                                <div className=\"dashboard-tiles-item__salary\">\n                                                    {compensation && !!compensation.to && (\n                                                        <Compensation\n                                                            from={compensation.from}\n                                                            to={compensation.to}\n                                                            currencyCode={compensation.currencyCode}\n                                                            dash\n                                                        />\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"dashboard-tiles-item__counter\">\n                                                {getVacanciesCountTrl(vacanciesCount)}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </Column>\n                )}\n                {!hideMobile && (\n                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                        <RainbowTileMobile\n                            colorIndex={colorIndex}\n                            link={link}\n                            onClick={handleClickMobile}\n                            professionIndex={professionIndex || 0}\n                        >\n                            {title}\n                        </RainbowTileMobile>\n                    </Column>\n                )}\n            </div>\n            <RainbowTileDrop\n                tileIndex={tileIndex}\n                activeDropIndex={activeDropIndex}\n                activeTileContent={activeTileContent}\n                previousActiveTileIndex={previousActiveTileIndex}\n                isXsOnly={isXsOnly}\n                {...(showSeoLinksForBots ? { seoContent: children } : {})}\n            />\n        </>\n    );\n};\n\nexport default translation(RainbowTile);\n","import { ReactNode, FC } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H3Section } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\n\nimport Compensation from 'lux/components/Compensation';\nimport RainbowTileDrop from 'lux/components/RainbowCatalog/Drop';\nimport CompanyLink from 'lux/components/VacancyCompanyLink';\nimport { VacancySearchItem } from 'lux/models/vacancySearch/vacancySearchItem.types';\n\ninterface RainbowTileVacancyProps {\n    vacancy: VacancySearchItem;\n    tileIndex: number;\n    activeDropIndex: number;\n    activeTileContent: ReactNode;\n    previousActiveTileIndex: number;\n}\n\nconst RainbowTileVacancy: FC<RainbowTileVacancyProps> = ({\n    vacancy,\n    tileIndex,\n    activeDropIndex,\n    activeTileContent,\n    previousActiveTileIndex,\n}) => {\n    return (\n        <>\n            <div className=\"dashboard-tiles-item dashboard-tiles-item_suitable-vacancies\" data-rainbow-catalog-tile=\"\">\n                <Column xs=\"0\" s=\"4\" m=\"3\" l=\"3\">\n                    <div\n                        className=\"dashboard-tiles-item-suitable-vacancy-title\"\n                        data-qa=\"neva-vacancy-item-desktop-title\"\n                    >\n                        <H3Section lite>\n                            <BlokoLink Element={Link} to={vacancy.links.desktop}>\n                                <span className=\"dashboard-tiles-item-suitable-vacancy-title-link\">{vacancy.name}</span>\n                            </BlokoLink>\n                        </H3Section>\n                    </div>\n                    <div className=\"dashboard-tiles-item__salary\">\n                        <Compensation\n                            from={vacancy.compensation.from}\n                            to={vacancy.compensation.to}\n                            currencyCode={vacancy.compensation.currencyCode}\n                        />\n                    </div>\n                    <div className=\"dashboard-tiles-item-suitable-vacancy-company\">\n                        <Text importance={TextImportance.Tertiary}>\n                            <CompanyLink vacancy={vacancy}>\n                                {`${vacancy.company.name}, ${vacancy.area.name}`}\n                            </CompanyLink>\n                        </Text>\n                    </div>\n                </Column>\n            </div>\n            <RainbowTileDrop\n                tileIndex={tileIndex}\n                activeDropIndex={activeDropIndex}\n                activeTileContent={activeTileContent}\n                previousActiveTileIndex={previousActiveTileIndex}\n            />\n        </>\n    );\n};\n\nexport default RainbowTileVacancy;\n","import { RefObject, useCallback, useEffect, useRef } from 'react';\n\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\n\ninterface UseGetDropPositionProps {\n    activeTileIndex: number;\n    setActiveDropIndex: (index: number) => void;\n    catalogElementRef: RefObject<HTMLDivElement>;\n}\n\nconst useGetDropPosition = ({\n    activeTileIndex,\n    setActiveDropIndex,\n    catalogElementRef,\n}: UseGetDropPositionProps): void => {\n    const previousBreakpointRef = useRef(Breakpoint.L);\n    const breakpoint = useBreakpoint(Breakpoint.L);\n\n    const getDropIndexForTile = useCallback(() => {\n        if (!catalogElementRef.current) {\n            return -1;\n        }\n        const tiles = [...catalogElementRef.current.querySelectorAll('[data-rainbow-catalog-tile]')] as HTMLElement[];\n        const currentTile = tiles[activeTileIndex];\n        if (!currentTile) {\n            return -1;\n        }\n        const tilesAfterActive = tiles.slice(activeTileIndex);\n        const filtered = tilesAfterActive.filter((tile) => tile.offsetTop === currentTile.offsetTop);\n        return tiles.indexOf(filtered[filtered.length - 1]);\n    }, [activeTileIndex, catalogElementRef]);\n\n    useEffect(() => {\n        if (!catalogElementRef.current) {\n            return;\n        }\n        // изменение тригерится ресайзом экрана, для правильного подсчета позиции надо сначала скрыть drop\n        if (previousBreakpointRef.current !== breakpoint) {\n            const activeDrop = catalogElementRef.current.querySelector('[data-rainbow-catalog-drop-active=\"true\"]');\n            activeDrop?.classList.add('g-hidden');\n            previousBreakpointRef.current = breakpoint;\n            setActiveDropIndex(getDropIndexForTile());\n            activeDrop?.classList.remove('g-hidden');\n        } else {\n            setActiveDropIndex(getDropIndexForTile());\n        }\n    }, [breakpoint, catalogElementRef, getDropIndexForTile, setActiveDropIndex]);\n};\n\nexport default useGetDropPosition;\n","import { useState, useRef, ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Conversion from 'bloko/blocks/conversion';\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { MIN_VACANCIES_NUM_TO_SHOW } from 'lux/components/VacanciesOfTheDay/constants';\nimport translation from 'lux/components/translation';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT } from 'lux/models/suitableVacancies';\nimport { UserType } from 'lux/models/userType';\nimport paths from 'lux/modules/routePaths';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DropContentCompaniesOfTheDay from 'lux/components/RainbowCatalog/Drop/CompaniesOfTheDay';\nimport DropContentProfession from 'lux/components/RainbowCatalog/Drop/Profession';\nimport DropContentVacanciesOfTheDay from 'lux/components/RainbowCatalog/Drop/VacanciesOfTheDay';\nimport Modal from 'lux/components/RainbowCatalog/Modal';\nimport ModalContentProfession from 'lux/components/RainbowCatalog/Modal/Profession';\nimport Tile from 'lux/components/RainbowCatalog/Tile';\nimport TileVacancy from 'lux/components/RainbowCatalog/Tile/Vacancy';\nimport useGetDropPosition from 'lux/components/RainbowCatalog/useGetDropPosition';\n\nconst Features = {\n    seoLinksForBots: 'rainbow_seo_links_for_search_bots',\n};\n\nconst TrlKeys = {\n    promoVacancies: 'professions.promo.vacancies',\n    promoEmployers: 'professions.promo.employers',\n    promoRemote: 'professions.promo.remote',\n    xsTitle: 'index.professions.mainTitle',\n    more: {\n        title: 'professions.more',\n        one: 'professions.one',\n        some: 'professions.some',\n        many: 'professions.many',\n        suitable: 'anonymousSuitableVacancies.showMore',\n    },\n};\n\nconst INITIAL_TILES_COUNT = 12;\n\nconst RainbowCatalog: TranslatedComponent = ({ trls }) => {\n    const userType = useSelector((state) => state.userType);\n    const professionsList = useSelector((state) => state.professionsList);\n    const suitableVacancies = useSelector((state) => state.suitableVacancies);\n    const applicantInfo = useSelector((state) => state.applicantInfo);\n    const remoteWorkCounter = useSelector((state) => state.remoteWorkCounter);\n    const companiesOfTheDay = useSelector((state) => state.companiesOfTheDay);\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    const showSeoLinksForBots = useSelector(\n        (state) => state.isBot && !!professionsList?.professions && !!state.features[Features.seoLinksForBots]\n    );\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n    const [showAll, setShowAll] = useState(showSeoLinksForBots);\n    const [activeTileContent, setActiveTileContent] = useState<ReactNode>(null);\n    const [activeMobileTileContent, setActiveMobileTileContent] = useState<{ title: string; body: ReactNode } | null>(\n        null\n    );\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n    const [activeTileIndex, setActiveTileIndex] = useState(-1);\n    const [activeDropIndex, setActiveDropIndex] = useState(-1);\n    const tileIndexRef = useRef<number>(0);\n    const catalogElementRef = useRef<HTMLDivElement>(null);\n    const previousActiveTileIndex = useRef<number>(-1);\n    const rainbowMoveTop = useExperiment('rainbow_move_top', true, false);\n\n    useGetDropPosition({ activeTileIndex, setActiveDropIndex, catalogElementRef });\n\n    const suitableVacanciesContent = suitableVacancies?.vacancies || [];\n    const isAnonymousSuitableVacancies =\n        userType === UserType.Anonymous && suitableVacanciesContent?.length > MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT;\n    const isXsOnly = userType === UserType.Applicant && applicantInfo.finished > 0;\n    const companiesOfTheDayVacanciesCount = companiesOfTheDay.reduce(\n        (acc, employer) => acc + employer.vacanciesNumber,\n        0\n    );\n\n    const onTileClick = (index: number, content: ReactNode) => {\n        if (!showSeoLinksForBots) {\n            previousActiveTileIndex.current = activeTileIndex;\n            const newActiveTileIndex = activeTileIndex === index ? -1 : index;\n            setActiveTileIndex(newActiveTileIndex);\n            setActiveTileContent(content);\n        }\n    };\n\n    const onMobileTileClick = (title: string, content: ReactNode) => {\n        if (!showSeoLinksForBots) {\n            setIsModalVisible(true);\n            setActiveMobileTileContent({ title, body: content });\n        }\n    };\n\n    const commonPromoTilesProps = {\n        isSuitableVacanciesMode: isAnonymousSuitableVacancies,\n        isXsOnly,\n        promo: true,\n        onClick: onTileClick,\n        activeDropIndex,\n        activeTileContent,\n        activeTileIndex,\n        previousActiveTileIndex: previousActiveTileIndex.current,\n    };\n    const promoTiles = [];\n    if (\n        vacanciesOfTheDay.success &&\n        (vacanciesOfTheDay.isLoading || vacanciesOfTheDay.vacancies.length > MIN_VACANCIES_NUM_TO_SHOW)\n    ) {\n        promoTiles.push({\n            title: trls[TrlKeys.promoVacancies],\n            vacanciesCount: vacanciesOfTheDay.vacancies.length,\n            compensation: vacanciesOfTheDay.compensation,\n            isLoading: vacanciesOfTheDay.isLoading,\n            hideMobile: true,\n            pageAnalyticsValue: 'vacancies',\n            children: <DropContentVacanciesOfTheDay vacancies={vacanciesOfTheDay.vacancies} />,\n            dataQa: { tile: 'vacancy-item-desktop' },\n            ...commonPromoTilesProps,\n        });\n    }\n    if (companiesOfTheDay.length) {\n        promoTiles.push({\n            title: trls[TrlKeys.promoEmployers],\n            vacanciesCount: companiesOfTheDayVacanciesCount,\n            hideMobile: true,\n            pageAnalyticsValue: 'companies',\n            children: <DropContentCompaniesOfTheDay companiesOfTheDay={companiesOfTheDay} />,\n            dataQa: { tile: 'company-item-desktop' },\n            ...commonPromoTilesProps,\n        });\n    }\n    if (remoteWorkCounter.count && remoteWorkCounter.areaId) {\n        promoTiles.push({\n            title: trls[TrlKeys.promoRemote],\n            vacanciesCount: remoteWorkCounter.count,\n            link: `${paths.vacancySearch}?schedule=remote&L_profession_id=0&area=${remoteWorkCounter.areaId}`,\n            dataQa: { tile: 'remote-item-desktop' },\n            ...commonPromoTilesProps,\n        });\n    }\n\n    let totalTilesCount = promoTiles.length;\n    if (isAnonymousSuitableVacancies) {\n        totalTilesCount += suitableVacanciesContent.length;\n    } else if (professionsList?.professions) {\n        totalTilesCount += professionsList.professions.length;\n    }\n\n    const displayShowMoreLink = isAnonymousSuitableVacancies ? true : !showAll && totalTilesCount > INITIAL_TILES_COUNT;\n\n    const onShowMoreLinkClick = () => {\n        setShowAll(true);\n        Analytics.sendEvent(userType, 'profession_block', 'expand_all');\n    };\n\n    tileIndexRef.current = 0;\n    return (\n        <Gap top={!rainbowMoveTop}>\n            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                <H2>{trls[TrlKeys.xsTitle]}</H2>\n                <VSpacing base={4} />\n            </Column>\n            <div\n                className={classnames('dashboard-tiles-wrapper', {\n                    'dashboard-tiles-wrapper_xs-only': isXsOnly,\n                })}\n                ref={catalogElementRef}\n            >\n                <div\n                    className={classnames('dashboard-tiles-content', {\n                        'dashboard-tiles-content_scroll': !showSeoLinksForBots,\n                        'dashboard-tiles-content_under-search': rainbowMoveTop,\n                    })}\n                >\n                    <ColumnsWrapper>\n                        {promoTiles.map((props) => {\n                            tileIndexRef.current += 1;\n                            return <Tile {...props} key={props.title} tileIndex={tileIndexRef.current - 1} />;\n                        })}\n                        {isAnonymousSuitableVacancies &&\n                            suitableVacanciesContent.map((vacancy) => {\n                                tileIndexRef.current += 1;\n                                return (\n                                    <TileVacancy\n                                        vacancy={vacancy}\n                                        tileIndex={tileIndexRef.current - 1}\n                                        activeDropIndex={activeDropIndex}\n                                        activeTileContent={activeTileContent}\n                                        previousActiveTileIndex={previousActiveTileIndex.current}\n                                        key={vacancy.vacancyId}\n                                    />\n                                );\n                            })}\n                        {professionsList?.professions?.map((profession, index) => {\n                            const currentIndex = tileIndexRef.current;\n                            const stripOnDesktop = !showAll && currentIndex >= INITIAL_TILES_COUNT;\n                            tileIndexRef.current += 1;\n                            return (\n                                <Tile\n                                    professionIndex={index}\n                                    title={profession.name}\n                                    compensation={{\n                                        from: profession.compensationFrom,\n                                        to: profession.compensationTo,\n                                        currencyCode: professionsList.currency,\n                                    }}\n                                    vacanciesCount={profession.count}\n                                    isSuitableVacanciesMode={isAnonymousSuitableVacancies}\n                                    isXsOnly={isAnonymousSuitableVacancies || isXsOnly || stripOnDesktop}\n                                    onClick={onTileClick}\n                                    onClickMobile={onMobileTileClick}\n                                    mobileContent={\n                                        <ModalContentProfession\n                                            professions={profession.professions}\n                                            parentProfession={profession}\n                                        />\n                                    }\n                                    tileIndex={currentIndex}\n                                    activeTileIndex={activeTileIndex}\n                                    activeDropIndex={activeDropIndex}\n                                    activeTileContent={activeTileContent}\n                                    previousActiveTileIndex={previousActiveTileIndex.current}\n                                    dataQa={{ tile: 'professions-item-desktop' }}\n                                    key={profession.id}\n                                    showSeoLinksForBots={showSeoLinksForBots}\n                                >\n                                    <DropContentProfession\n                                        professions={profession.professions}\n                                        parentProfession={profession}\n                                        currency={professionsList.currency}\n                                        showSeoLinksForBots={showSeoLinksForBots}\n                                    />\n                                </Tile>\n                            );\n                        })}\n                        {displayShowMoreLink && (\n                            <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                                {!isAnonymousSuitableVacancies && (\n                                    <BlokoLink\n                                        appearance={LinkAppearance.Pseudo}\n                                        onClick={onShowMoreLinkClick}\n                                        data-page-analytics-event=\"vacancy_rainbow_catalog_list.professions\"\n                                    >\n                                        {trls[TrlKeys.more.title]}\n                                        {NON_BREAKING_SPACE}\n                                        <Conversion\n                                            value={totalTilesCount - INITIAL_TILES_COUNT}\n                                            one={trls[TrlKeys.more.one]}\n                                            some={trls[TrlKeys.more.some]}\n                                            many={trls[TrlKeys.more.many]}\n                                        />\n                                    </BlokoLink>\n                                )}\n                                {suitableVacancies &&\n                                    isAnonymousSuitableVacancies &&\n                                    suitableVacancies.resultsFound > suitableVacancies.itemsOnPage && (\n                                        <BlokoLink\n                                            disableVisited\n                                            Element={Link}\n                                            data-qa=\"index-recommended-link\"\n                                            data-page-analytics-event=\"vacancy_rainbow_catalog_list.suitable\"\n                                            to={`${\n                                                paths.vacancySearch\n                                            }?recommended_by_uid=true${suitableVacancies.areaIds\n                                                .map((areaId) => `&area=${areaId}`)\n                                                .join('')}`}\n                                        >\n                                            {trls[TrlKeys.more.suitable]}\n                                        </BlokoLink>\n                                    )}\n                            </Column>\n                        )}\n                    </ColumnsWrapper>\n                </div>\n            </div>\n            <Modal\n                isVisible={isXs && isModalVisible}\n                onClose={() => setIsModalVisible(false)}\n                content={activeMobileTileContent}\n            />\n        </Gap>\n    );\n};\n\nexport default translation(RainbowCatalog);\n","export const MIN_VACANCIES_NUM_TO_SHOW = 5;\n","// tempexp_clickme-vacancy-of-the-day-experiment_file\nexport const MAX_VOD_VACANCIES_COUNT = 14;\nexport const EMPTY_ARRAY = [];\n","// tempexp_clickme-vacancy-of-the-day-experiment_file\nimport type { AxiosRequestHeaders } from 'axios';\n\nimport Cookies from 'bloko/common/Cookies';\n\nimport type { VacanciesOfTheDay } from 'lux/models/vacanciesOfTheDay';\nimport fetcher from 'lux/modules/fetcher';\n\nimport { EMPTY_ARRAY, MAX_VOD_VACANCIES_COUNT } from 'lux/components/RainbowCatalog/const';\nimport type { ClickmeVacancy, Vacancies } from 'lux/components/RainbowCatalog/types';\n\ninterface RequestData {\n    banners: ClickmeVacancy[];\n}\n\nfunction getExtraHeaders() {\n    const hhuid = Cookies.get('hhuid');\n    const hhid = Cookies.get('_hi');\n\n    const headers = {\n        Hhuid: hhuid,\n        Token: hhuid,\n        Hhid: null as string | null,\n    };\n\n    if (hhid) {\n        headers.Hhid = hhid;\n    }\n\n    return headers;\n}\n\nfunction isVacanciesOfTheDay(d: unknown): d is RequestData {\n    return Boolean(\n        d && d instanceof Object && Array.isArray((d as RequestData).banners) && (d as RequestData).banners.length\n    );\n}\n\nfunction isRealVacancyOfTheDay(vacancyOfTheDayId: number | null = null) {\n    return vacancyOfTheDayId !== null;\n}\n\nfunction filterClickmeVacancies(vacancyOfTheDay: Vacancies, clickmeVacancies: ClickmeVacancy[]) {\n    const vodVacanciesIds = new Set(\n        vacancyOfTheDay.reduce<number[]>((result, { vacancyId, vacancyOfTheDayId }) => {\n            if (isRealVacancyOfTheDay(vacancyOfTheDayId)) {\n                result.push(vacancyId);\n            }\n\n            return result;\n        }, [])\n    );\n\n    return clickmeVacancies.filter((clickmeVacancy) => {\n        if ('empty' in clickmeVacancy || 'type' in clickmeVacancy) {\n            return false;\n        }\n\n        return !vodVacanciesIds.has(clickmeVacancy.vacancyId);\n    }) as Vacancies;\n}\n\nfunction isClickmeVacanciesShuffleEnabled(VODShufflingValue: number): boolean {\n    if (!VODShufflingValue) {\n        return false;\n    }\n\n    return Boolean(Math.random() * 100 >= 100 - VODShufflingValue);\n}\n\nfunction computeBannersIds(bannersIds?: string[], vacanciesCount = MAX_VOD_VACANCIES_COUNT) {\n    if (!bannersIds || bannersIds.length === 0) {\n        const startBannerPlace = 700;\n        const result = [];\n\n        for (let i = 0; i <= vacanciesCount; i++) {\n            result.push(startBannerPlace + i);\n        }\n\n        return result;\n    }\n\n    return bannersIds.slice(0, vacanciesCount);\n}\n\nfunction getResultVacancies(vacancyOfTheDay: Vacancies, clickmeResponse: unknown) {\n    return isVacanciesOfTheDay(clickmeResponse)\n        ? filterClickmeVacancies(vacancyOfTheDay, clickmeResponse.banners)\n        : EMPTY_ARRAY;\n}\n\nfunction reassignCodeValues(vacancies: Vacancies) {\n    vacancies.forEach((vacancy) => {\n        if (vacancy.company.department) {\n            vacancy.company.department['@code'] = vacancy.company.department.code;\n        }\n    });\n\n    return vacancies;\n}\n\nfunction translateAreas(vacancies: Vacancies) {\n    const vacanciesToTranslate = vacancies.reduce<Set<number>>((result, { area }) => {\n        if (!area.name) {\n            result.add(area.id);\n        }\n\n        return result;\n    }, new Set());\n\n    if (!vacanciesToTranslate.size) {\n        return Promise.resolve(vacancies);\n    }\n\n    return fetcher\n        .get('/shards/areas_translate', { params: { areas: [...vacanciesToTranslate.values()] } })\n        .then((result) => {\n            vacancies.forEach((vacancy) => {\n                if (!vacancy.area.name && result[vacancy.area.id]) {\n                    vacancy.area.name = result[vacancy.area.id];\n                }\n            });\n\n            return vacancies;\n        })\n        .catch(() => vacancies);\n}\n\nconst getClickmeVacancies = (\n    vacancyOfTheDay: VacanciesOfTheDay,\n    VODShufflingValue: number,\n    vacanciesCount = MAX_VOD_VACANCIES_COUNT\n): Promise<Vacancies> => {\n    const url = window.globalVars.bannersBatchUrl;\n\n    if (!url || !isClickmeVacanciesShuffleEnabled(VODShufflingValue)) {\n        return Promise.resolve(EMPTY_ARRAY);\n    }\n\n    return fetcher\n        .get(url, {\n            params: {\n                place: computeBannersIds(vacancyOfTheDay.clickmeVacanciesPlacesList, vacanciesCount),\n                format: 'json',\n                vod: true,\n            },\n            headers: getExtraHeaders() as AxiosRequestHeaders,\n        })\n        .then((vacancies) =>\n            translateAreas(reassignCodeValues(getResultVacancies(vacancyOfTheDay.vacancies, vacancies)))\n        );\n};\n\nexport default getClickmeVacancies;\n","// tempexp_clickme-vacancy-of-the-day-experiment_file\nimport { MAX_VOD_VACANCIES_COUNT } from 'lux/components/RainbowCatalog/const';\nimport type { Vacancies } from 'lux/components/RainbowCatalog/types';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/areas_translate': {\n            queryParams: {\n                areas: number[];\n            };\n            response: Record<string, string>;\n        };\n    }\n}\n\nfunction isRealVacancyOfTheDay(vacancyOfTheDayId: number | null = null) {\n    return vacancyOfTheDayId !== null;\n}\n\nexport function calcFirstFakeVacancyIndex(vacancyOfTheDay: Vacancies): number {\n    let firstFakeVacancyIndex = MAX_VOD_VACANCIES_COUNT;\n\n    vacancyOfTheDay.some(({ vacancyOfTheDayId }, i) => {\n        if (!isRealVacancyOfTheDay(vacancyOfTheDayId)) {\n            firstFakeVacancyIndex = Math.min(i, MAX_VOD_VACANCIES_COUNT);\n            return true;\n        }\n\n        return false;\n    });\n\n    return firstFakeVacancyIndex;\n}\n\nfunction promoteClickmeVacancyToFirstPlace(resultVacancies: Vacancies, firstFakeVacancyIndex: number) {\n    resultVacancies.unshift(resultVacancies[firstFakeVacancyIndex]);\n    resultVacancies.splice(firstFakeVacancyIndex + 1, 1);\n}\n\nfunction getResultVacancies(\n    vacancyOfTheDay: Vacancies,\n    clickmeVacancies: Vacancies,\n    firstFakeVacancyIndex: number,\n    isReplaceClickmeVacancyExp: boolean\n) {\n    if (!clickmeVacancies.length) {\n        return vacancyOfTheDay;\n    }\n\n    const fakeVacancies = vacancyOfTheDay.slice(firstFakeVacancyIndex, MAX_VOD_VACANCIES_COUNT);\n    const clickmeVacanciesToMerge = clickmeVacancies.slice(0, MAX_VOD_VACANCIES_COUNT - firstFakeVacancyIndex);\n    const result = vacancyOfTheDay.slice(0, firstFakeVacancyIndex).concat(clickmeVacanciesToMerge);\n    const newOldVacanciesDifference = MAX_VOD_VACANCIES_COUNT - result.length;\n\n    if (isReplaceClickmeVacancyExp && clickmeVacanciesToMerge.length) {\n        promoteClickmeVacancyToFirstPlace(result, firstFakeVacancyIndex);\n    }\n\n    if (newOldVacanciesDifference > 0 && fakeVacancies.length > 0) {\n        return result.concat(fakeVacancies.slice(0, newOldVacanciesDifference));\n    }\n\n    return result;\n}\n\nexport default function shuffleVacanciesOfTheDayWithClickme(\n    vacanciesOfTheDay: Vacancies,\n    clickmeVacancies: Vacancies,\n    firstFakeVacancyIndex: number,\n    isReplaceClickmeVacancyExp: boolean\n): Vacancies {\n    return getResultVacancies(vacanciesOfTheDay, clickmeVacancies, firstFakeVacancyIndex, isReplaceClickmeVacancyExp);\n}\n","import { useEffect, useRef, useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { VacanciesOfTheDay } from 'lux/models/vacanciesOfTheDay';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\n// tempexp_clickme-vacancy-of-the-day-experiment_start\nimport { EMPTY_ARRAY, MAX_VOD_VACANCIES_COUNT } from 'lux/components/RainbowCatalog/const';\nimport getClickmeVacancies from 'lux/components/RainbowCatalog/getClickmeVacancies';\nimport shuffleVacanciesOfTheDayWithClickme, {\n    calcFirstFakeVacancyIndex,\n} from 'lux/components/RainbowCatalog/shuffleVacanciesOfTheDayWithClickme';\n// tempexp_clickme-vacancy-of-the-day-experiment_end\n\nconst vacanciesOfTheDayAction = makeSetStoreField('vacanciesOfTheDay');\n\n// tempexp_clickme-vacancy-of-the-day-experiment_start\nconst Features = {\n    enableClickmeVacanciesShufflingInToVacanciesOfTheDayMainPage:\n        'enable_clickme_vacancies_shuffling_in_to_vacancies_of_the_day_main_page',\n};\n// tempexp_clickme-vacancy-of-the-day-experiment_end\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/vacancies_of_the_day': {\n            queryParams: null;\n            response: VacanciesOfTheDay;\n        };\n    }\n}\n\nconst useFetchVacanciesOfTheDay = (): void => {\n    // tempexp_clickme-vacancy-of-the-day-experiment_start\n    const dispatch = useDispatch();\n    const isVacanciesOfTheDayFetchedRef = useRef(false);\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    // tempexp_clickme-vacancy-of-the-day-experiment_start\n    const VODShufflingValue = useSelector(\n        ({ features }) => features[Features.enableClickmeVacanciesShufflingInToVacanciesOfTheDayMainPage]\n    ) as number;\n    const isReplaceClickmeVacancyExp = useExperiment(\n        'replace_clickme_vacancy',\n        Boolean(vacanciesOfTheDay.clickmeVacancies.length)\n    );\n    // tempexp_clickme-vacancy-of-the-day-experiment_end\n\n    useEffect(() => {\n        if (isVacanciesOfTheDayFetchedRef.current) {\n            return;\n        }\n        isVacanciesOfTheDayFetchedRef.current = true;\n        dispatch(vacanciesOfTheDayAction({ ...vacanciesOfTheDay, isLoading: true }));\n\n        void fetcher\n            .get(`/shards/vacancies_of_the_day`)\n            // tempexp_clickme-vacancy-of-the-day-experiment_start\n            .catch(() => {\n                dispatch(\n                    vacanciesOfTheDayAction({\n                        ...vacanciesOfTheDay,\n                        readyToShuffleVacancies: false,\n                        isLoading: false,\n                        success: false,\n                    })\n                );\n            })\n            .then((data) => {\n                const downloadedVODData = data ?? ({} as VacanciesOfTheDay);\n                const firstFakeVacancyIndex = calcFirstFakeVacancyIndex(downloadedVODData.vacancies ?? EMPTY_ARRAY);\n                const vacanciesCountToDownload = MAX_VOD_VACANCIES_COUNT - firstFakeVacancyIndex;\n                const setVacanciesOfTheDayWithoutClickme = () =>\n                    dispatch(\n                        vacanciesOfTheDayAction({\n                            ...vacanciesOfTheDay,\n                            ...downloadedVODData,\n                            readyToShuffleVacancies: false,\n                            isLoading: false,\n                            success: true,\n                        })\n                    );\n\n                if (downloadedVODData.vacancies && vacanciesCountToDownload) {\n                    void getClickmeVacancies(downloadedVODData, VODShufflingValue, vacanciesCountToDownload)\n                        .then((clickmeVacancies) =>\n                            dispatch(\n                                vacanciesOfTheDayAction({\n                                    ...vacanciesOfTheDay,\n                                    ...downloadedVODData,\n                                    clickmeVacancies,\n                                    firstFakeVacancyIndex,\n                                    readyToShuffleVacancies: true,\n                                })\n                            )\n                        )\n                        .catch(setVacanciesOfTheDayWithoutClickme);\n                } else {\n                    setVacanciesOfTheDayWithoutClickme();\n                }\n            });\n    }, [VODShufflingValue, dispatch, isReplaceClickmeVacancyExp, vacanciesOfTheDay]);\n\n    useLayoutEffect(() => {\n        if (vacanciesOfTheDay.readyToShuffleVacancies) {\n            dispatch(\n                vacanciesOfTheDayAction({\n                    ...vacanciesOfTheDay,\n                    vacancies: shuffleVacanciesOfTheDayWithClickme(\n                        vacanciesOfTheDay.vacancies,\n                        vacanciesOfTheDay.clickmeVacancies,\n                        vacanciesOfTheDay.firstFakeVacancyIndex,\n                        isReplaceClickmeVacancyExp\n                    ),\n                    readyToShuffleVacancies: false,\n                    isLoading: false,\n                    success: true,\n                })\n            );\n        }\n    }, [dispatch, isReplaceClickmeVacancyExp, vacanciesOfTheDay]);\n};\n// tempexp_clickme-vacancy-of-the-day-experiment_end\n\nexport default useFetchVacanciesOfTheDay;\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Conversion from 'bloko/blocks/conversion';\nimport InfoInline from 'bloko/blocks/drop/InfoInline';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    info: 'index.recommended.similarSavedSearch.info',\n    link: 'index.recommended.similarSavedSearch.link',\n    message: {\n        one: 'index.recommended.similarSavedSearch.findMessage.one',\n        some: 'index.recommended.similarSavedSearch.findMessage.some',\n    },\n    vacancy: {\n        zero: 'index.recommended.similarSavedSearch.vacancy.zero',\n        one: 'index.recommended.similarSavedSearch.vacancy.one',\n        some: 'index.recommended.similarSavedSearch.vacancy.some',\n        many: 'index.recommended.similarSavedSearch.vacancy.many',\n    },\n};\n\nconst SimilarSavedSearchInfo: TranslatedComponent = ({ trls }) => {\n    const suitableVacancies = useSelector((state) => state.suitableVacancies);\n    const applicantLatestResume = useSelector((state) => state.applicantLatestResume);\n\n    const resultsFound = suitableVacancies?.resultsFound || 0;\n    const latestResumeHash = applicantLatestResume?.resumeHash || '';\n\n    return (\n        <InfoInline\n            show\n            showCloseButton={false}\n            render={() => (\n                <>\n                    <div className=\"similar-saved-search-body\">\n                        {formatToReactComponent(trls[TrlKeys.info], {\n                            '{0}': (\n                                <Conversion\n                                    hasValue={false}\n                                    value={resultsFound}\n                                    zero={trls[TrlKeys.message.some]}\n                                    one={trls[TrlKeys.message.one]}\n                                    some={trls[TrlKeys.message.some]}\n                                    many={trls[TrlKeys.message.some]}\n                                />\n                            ),\n                            '{1}': resultsFound,\n                            '{2}': (\n                                <Conversion\n                                    hasValue={false}\n                                    value={resultsFound}\n                                    zero={trls[TrlKeys.vacancy.zero]}\n                                    one={trls[TrlKeys.vacancy.one]}\n                                    some={trls[TrlKeys.vacancy.some]}\n                                    many={trls[TrlKeys.vacancy.many]}\n                                />\n                            ),\n                        })}\n                    </div>\n                    <div className=\"similar-saved-search-link\">\n                        <BlokoLink\n                            Element={Link}\n                            disableVisited\n                            to={`${paths.vacancySearch}?resume=${latestResumeHash}&from=indexPage&forceFiltersSaving=true`}\n                            additionalQueryParams={{ hhtmFromLabel: 'rec_vacancy_reset' }}\n                            rel=\"nofollow\"\n                        >\n                            {trls[TrlKeys.link]}\n                        </BlokoLink>\n                    </div>\n                </>\n            )}\n        />\n    );\n};\n\nexport default translation(SimilarSavedSearchInfo);\n","import classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Compensation from 'lux/components/Compensation';\nimport NoIndex from 'lux/components/NoIndex';\nimport translation from 'lux/components/translation';\nimport {\n    MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT,\n    MIN_APPLICANT_SUITABLE_VACANCIES_COUNT,\n} from 'lux/models/suitableVacancies';\nimport { UserType } from 'lux/models/userType';\nimport paths from 'lux/modules/routePaths';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SimilarSavedSearchInfo from 'lux/components/RecommendedVacancies/SimilarSavedSearchInfo';\n\nconst TrlKeys = {\n    titleAnonymous: 'recommendedVacanciesAnonymous.title',\n    titleApplicant: 'index.headers.recommended',\n    all: 'index.vacancies.all',\n};\n\nconst RecommendedVacanciesMobile: TranslatedComponent = ({ trls }) => {\n    const userType = useSelector((state) => state.userType);\n    const suitableVacancies = useSelector((state) => state.suitableVacancies);\n    const applicantLatestResume = useSelector((state) => state.applicantLatestResume);\n    const enableSimilarSavedSearch = useSelector((state) => state.enableSimilarSavedSearch);\n    const applicantInfo = useSelector((state) => state.applicantInfo);\n\n    const isApplicant = userType === UserType.Applicant;\n    const resultsFound = suitableVacancies?.resultsFound || 0;\n\n    if (\n        (!isApplicant && resultsFound < MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT) ||\n        (isApplicant && (resultsFound < MIN_APPLICANT_SUITABLE_VACANCIES_COUNT || !applicantInfo?.total))\n    ) {\n        return null;\n    }\n\n    const latestResumeHash = applicantLatestResume?.resumeHash || '';\n\n    const getResultsFoundLink = () => {\n        if (isApplicant) {\n            return `${paths.vacancySearch}?resume=${latestResumeHash}`;\n        }\n        const areas = suitableVacancies?.areaIds?.map((areaId) => `&area=${areaId}`).join('') || '';\n        return `${paths.vacancySearch}?recommended_by_uid=true${areas}`;\n    };\n\n    const renderClearFiltersSlide = () => {\n        if (\n            !enableSimilarSavedSearch ||\n            suitableVacancies?.resultsFound === undefined ||\n            suitableVacancies.resultsFound > 1\n        ) {\n            return null;\n        }\n        return (\n            <div className=\"index-slider-item\">\n                <div className=\"index-slider-vacancy\">\n                    <SimilarSavedSearchInfo />\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <NoIndex>\n            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                <div\n                    className={classnames('index-section-recommended', {\n                        'index-section-recommended_spaced': !isApplicant,\n                    })}\n                >\n                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                        <H2>\n                            <div className=\"index-section-header\">\n                                {trls[isApplicant ? TrlKeys.titleApplicant : TrlKeys.titleAnonymous]}\n                            </div>\n                        </H2>\n                        <Text>\n                            <BlokoLink\n                                disableVisited\n                                Element={Link}\n                                to={getResultsFoundLink()}\n                                data-qa=\"index-recommended-link-xs\"\n                            >\n                                {trls[TrlKeys.all]}\n                                {NON_BREAKING_SPACE}\n                                {resultsFound}\n                            </BlokoLink>\n                        </Text>\n                        <VSpacing base={4} />\n                    </Column>\n                    <div className=\"index-slider-wrapper\">\n                        <div className=\"index-slider\">\n                            {suitableVacancies?.vacancies?.map((vacancy) => {\n                                return (\n                                    <div className=\"index-slider-item\" key={vacancy.vacancyId}>\n                                        <Link\n                                            to={vacancy.links.desktop}\n                                            rel=\"nofollow\"\n                                            className=\"index-slider-vacancy\"\n                                            data-page-analytics-event=\"vacancy_search_suitable_item\"\n                                        >\n                                            <span className=\"index-slider-vacancy-title\">\n                                                <Text Element=\"span\" strong>\n                                                    {vacancy.name}\n                                                </Text>\n                                            </span>\n                                            <span className=\"index-slider-vacancy-compensation\">\n                                                <Compensation\n                                                    from={vacancy.compensation.from}\n                                                    to={vacancy.compensation.to}\n                                                    currencyCode={vacancy.compensation.currencyCode}\n                                                />\n                                            </span>\n                                            <span className=\"index-slider-vacancy-company\">\n                                                <Text importance={TextImportance.Secondary}>\n                                                    {vacancy.company.visibleName}\n                                                    {', '}\n                                                    <span className=\"index-slider-vacancy-region\">\n                                                        {vacancy.area.name}\n                                                    </span>\n                                                </Text>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                );\n                            })}\n                            {renderClearFiltersSlide()}\n                        </div>\n                    </div>\n                </div>\n            </Column>\n        </NoIndex>\n    );\n};\n\nexport default translation(RecommendedVacanciesMobile);\n","// tempexp_27541_file\nimport { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { usePush } from '@hh.ru/redux-spa-middleware';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { closeAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport SignupModal from 'lux/components/SignupModal/Form';\nimport { setSignupBackurl } from 'lux/components/SignupModal/api';\nimport { SignupAnalyticsProvider } from 'lux/components/SignupModal/contexts/SignupAnalytics';\nimport { SignupTrlsContextProvider } from 'lux/components/SignupModal/contexts/SignupTrls';\nimport { redirectToFinishSignup } from 'lux/components/SignupModal/lib';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/anonymous/main_page_signup_already_shown': {\n            queryParams: void;\n            body: null;\n            response: void;\n        };\n    }\n}\n\nconst TrlKeys = {\n    header: 'anonymous.signup.modal.signin.article.title',\n};\n\nconst MainPageSignUpModal: TranslatedComponent = ({ trls }) => {\n    const signinTrls = useMemo(() => ({ header: trls[TrlKeys.header] }), [trls]);\n    const push = usePush();\n    const expB = useExperiment('anonym_force_signup_main_page_b');\n    const expC = useExperiment('anonym_force_signup_main_page_c');\n    const dispatch = useDispatch();\n    const opened = useSelector((state) => state.anonymousSignUp.opened);\n    const backUrl = useSelector((state) => state.anonymousSignUp.backUrl);\n\n    const close = async () => {\n        dispatch(closeAnonymousSignUpMainPage());\n        await fetcher.post('/shards/anonymous/main_page_signup_already_shown');\n        push(backUrl);\n    };\n\n    const signup = async () => {\n        dispatch(closeAnonymousSignUpMainPage());\n\n        const requests = [fetcher.post('/shards/anonymous/main_page_signup_already_shown')];\n        if (expB) {\n            requests.push(setSignupBackurl(backUrl));\n        }\n        await Promise.all(requests);\n\n        if (expB) {\n            redirectToFinishSignup();\n        } else if (expC) {\n            push(backUrl);\n        }\n    };\n\n    if (!expB && !expC) {\n        return null;\n    }\n\n    return (\n        <SignupTrlsContextProvider signin={signinTrls}>\n            <SignupAnalyticsProvider hhtmSource=\"main_authorization_popup\">\n                <SignupModal opened={opened} onClose={close} onSignup={signup} />\n            </SignupAnalyticsProvider>\n        </SignupTrlsContextProvider>\n    );\n};\n\nexport default translation(MainPageSignUpModal);\n","import { FC, useCallback, PropsWithChildren } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\n\ninterface AppLinkProps {\n    name: string;\n    href: string;\n    analyticCategory: string;\n    analyticName: string;\n    analyticLabel: string;\n}\n\nconst AppLink: FC<AppLinkProps & PropsWithChildren> = ({\n    name,\n    href,\n    analyticCategory,\n    analyticName,\n    analyticLabel,\n}) => {\n    const sendAnalytics = useCallback(\n        () => Analytics.sendEvent(analyticCategory, analyticName, analyticLabel),\n        [analyticCategory, analyticName, analyticLabel]\n    );\n\n    return (\n        <a\n            className={`stay-in-touch__link stay-in-touch__link_${name}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href={href}\n            onMouseDown={sendAnalytics}\n            onKeyDown={sendAnalytics}\n        />\n    );\n};\n\nexport default AppLink;\n","import { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { CountryId } from 'lux/models/countryId';\n\nexport enum HeaderType {\n    Applicant = 'applicant',\n    Employer = 'employer',\n}\n\ninterface HeaderProps {\n    type: HeaderType;\n    countryId: CountryId;\n}\n\nconst TrlKeys = {\n    [HeaderType.Applicant]: {\n        default: 'index.headers.stayInTouch.applicant',\n    },\n    [HeaderType.Employer]: {\n        [CountryId.Belarus]: 'index.headers.stayInTouch.employer.jtb',\n        default: 'index.headers.stayInTouch.employer',\n    },\n};\n\ntype TrlsByType = {\n    [x in CountryId]?: string;\n} & {\n    default: string;\n};\n\nconst getTrlKey = (type: HeaderType, countryId: CountryId) => {\n    const trlsByHeaderType = TrlKeys[type] as TrlsByType;\n    return trlsByHeaderType[countryId] || trlsByHeaderType.default;\n};\n\nconst Header: TranslatedComponent<HeaderProps> = ({ trls, type, countryId }) => {\n    return (\n        <div className=\"index-stay-in-touch-header\">\n            <H2 Element=\"h3\">{trls[getTrlKey(type, countryId)]}</H2>\n            <VSpacing base={4} />\n        </div>\n    );\n};\n\nexport default translation(Header);\n","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { useCountryId, useIsRussia } from 'lux/hooks/useCountries';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CountryId } from 'lux/models/countryId';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface MobilePageLinkProps {\n    mobilePage: string | null;\n}\n\nconst getClassName = (countryId: CountryId, userType: UserType, isZarplataPlatform: boolean): string => {\n    const isEmployer = userType === UserType.Employer;\n    const isBelarus = countryId === CountryId.Belarus;\n    const isRussia = countryId === CountryId.Russia;\n\n    if (isZarplataPlatform) {\n        return 'stay-in-touch__mobile_picture-zarplata';\n    }\n\n    if (isEmployer) {\n        return isBelarus ? 'stay-in-touch__mobile_picture-employer-jtb' : 'stay-in-touch__mobile_picture-employer';\n    }\n\n    return isRussia ? 'stay-in-touch__mobile_animated-picture' : 'stay-in-touch__mobile_picture';\n};\n\nconst MobilePageLink: FC<MobilePageLinkProps & PropsWithChildren> = ({ mobilePage }) => {\n    const countryId = useCountryId();\n    const isRussia = useIsRussia();\n    const { host } = useSelector((state) => state.request);\n    const userType = useSelector((state) => state.userType);\n    const isZarplataPlatform = useIsZarplataPlatform();\n\n    if (isZarplataPlatform) {\n        return (\n            <span\n                className={classnames('stay-in-touch__mobile', getClassName(countryId, userType, isZarplataPlatform))}\n            />\n        );\n    }\n\n    if (!mobilePage) {\n        return null;\n    }\n\n    const mobilePageUrl = isRussia\n        ? `${mobilePage}?from=main_banner_mobapps`\n        : `${mobilePage}?from=main_page_mobpromo_${host}`;\n\n    return (\n        <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href={mobilePageUrl}\n            className={classnames('stay-in-touch__mobile', getClassName(countryId, userType, isZarplataPlatform))}\n        />\n    );\n};\n\nexport default MobilePageLink;\n","import { ReactNode } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport GetAppSMS from 'lux/components/GetAppSMS';\nimport translation from 'lux/components/translation';\nimport { useCountryId, useIsRussia } from 'lux/hooks/useCountries';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CountryId } from 'lux/models/countryId';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AppLink from 'lux/components/StayInTouch/AppLink';\nimport Header, { HeaderType } from 'lux/components/StayInTouch/Header';\nimport MobilePageLink from 'lux/components/StayInTouch/MobilePageLink';\n\nconst TrlKeys = {\n    getAppSMSLabel: 'index.getAppSMS.label',\n};\n\ninterface StayInTouchProps {\n    analyticsFrom?: string;\n    isInline?: boolean;\n}\n\nconst StayInTouch: TranslatedComponent<StayInTouchProps> = ({ trls, analyticsFrom = '', isInline }) => {\n    const countryId = useCountryId();\n    const isRussia = useIsRussia();\n    const isZarplataPlatform = useIsZarplataPlatform();\n    const { mobilePage, apps } = useSelector((state) => state.stayInTouch);\n    const device = useSelector(({ device }) => device);\n    const userType = useSelector((state) => state.userType);\n    const isBelarus = countryId === CountryId.Belarus;\n    const isEmployer = userType === UserType.Employer;\n\n    if (!apps.length) {\n        return null;\n    }\n\n    const getAppLinkHref = (appHref: string) => {\n        if (!isRussia && !isBelarus) {\n            return appHref;\n        }\n        if (isZarplataPlatform) {\n            return appHref;\n        }\n\n        if (device?.type) {\n            const parsedUrl = urlParser(appHref);\n\n            parsedUrl.params = { ...parsedUrl.params, footer_banner: '' }; // eslint-disable-line camelcase\n\n            return parsedUrl.href;\n        }\n\n        return `${mobilePage || isEmployer ? '/hrmobile' : '/mobile'}?from=main_banner_mobapps`;\n    };\n\n    const appLinks = apps.map(({ href, name }) => (\n        <AppLink\n            key={name}\n            name={name}\n            href={getAppLinkHref(href)}\n            analyticCategory={isEmployer ? userType : 'mobile_application'}\n            analyticName={isEmployer ? 'click_hrmobile' : name}\n            analyticLabel=\"above_footer\"\n        />\n    ));\n\n    const renderContent = () => {\n        const headerType = userType === UserType.Employer ? HeaderType.Employer : HeaderType.Applicant;\n        if (isInline) {\n            return (\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"0\">\n                    <Header type={headerType} countryId={countryId} />\n                    <div className=\"stay-in-touch stay-in-touch_inline\">{appLinks}</div>\n                </Column>\n            );\n        }\n        return (\n            <>\n                <Header type={headerType} countryId={countryId} />\n                <div className=\"stay-in-touch\">\n                    <MobilePageLink mobilePage={mobilePage} />\n                    <div className=\"stay-in-touch__apps\">{appLinks}</div>\n                </div>\n            </>\n        );\n    };\n\n    const renderGetAppSMS = (content: ReactNode) => {\n        if (!isRussia || isZarplataPlatform) {\n            return null;\n        }\n        if (isInline) {\n            return (\n                <Column xs=\"4\" s=\"8\" m=\"4\" l=\"0\">\n                    {content}\n                </Column>\n            );\n        }\n        return <>{content}</>;\n    };\n\n    return (\n        <>\n            {renderContent()}\n            {renderGetAppSMS(\n                <GetAppSMS\n                    placeholder=\"+79234567890\"\n                    label={trls[TrlKeys.getAppSMSLabel]}\n                    analyticsFrom={analyticsFrom}\n                />\n            )}\n        </>\n    );\n};\n\nexport default translation(StayInTouch);\n","import { FC, PropsWithChildren } from 'react';\n\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { ArticleItemWithTopic } from 'lux/models/article.types';\n\ninterface UsefulLinksProps {\n    items: ArticleItemWithTopic[] | null;\n    title: string;\n    withSeparator?: boolean;\n    isEmployerContext?: boolean;\n}\n\nconst UsefulLinks: FC<UsefulLinksProps & PropsWithChildren> = ({ items, title, withSeparator = false }) => {\n    return (\n        <>\n            <Gap top>\n                <div className=\"index-useful\">\n                    <div className=\"index-news-box__header\">\n                        <H2 Element=\"h3\">{title}</H2>\n                        <VSpacing base={4} />\n                    </div>\n                    <ul>\n                        {items?.map(({ topic, href }) => (\n                            <li className=\"useful-link\" key={href}>\n                                <Link href={href} kind={LinkKind.Tertiary}>\n                                    {topic}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                    {withSeparator && (\n                        <div className=\"index-news-box__separator\">\n                            <div className=\"separator\" />\n                        </div>\n                    )}\n                </div>\n            </Gap>\n        </>\n    );\n};\n\nexport default UsefulLinks;\n","import { FC, PropsWithChildren } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\nimport Compensation from 'lux/components/Compensation';\nimport { getVacancyLink } from 'lux/components/VacanciesOfTheDay/Utils';\nimport { sendAnalytics } from 'lux/components/VacanciesOfTheDay/analytics';\nimport CompanyLink from 'lux/components/VacancyCompanyLink';\nimport translation from 'lux/components/translation';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { VacancyOfTheDayLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface VacancyOfTheDayProps {\n    vacancy: {\n        name: string;\n        area: {\n            name: string;\n        };\n        vacancyId: number;\n        click?: string;\n        compensation: {\n            from: number;\n            to: number;\n            currencyCode: CurrencyType;\n        };\n        company: {\n            id: number;\n            visibleName: string;\n            department?: {\n                '@code': string;\n            };\n        };\n        links: {\n            desktop: string;\n        };\n        viewUrl?: string;\n    };\n    sourceQueryParam: string;\n    hhtmFromLabel: string;\n    isRecommended?: boolean;\n    setVacancyRef?: (ref: HTMLElement | null) => void;\n}\n\nconst VacancyOfTheDay: FC<VacancyOfTheDayProps & PropsWithChildren> = ({\n    vacancy,\n    sourceQueryParam,\n    hhtmFromLabel,\n    isRecommended = false,\n    setVacancyRef,\n}) => {\n    const hhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n\n    return (\n        <div className=\"vacancy-of-the-day\">\n            <BlokoLink\n                kind={LinkKind.Tertiary}\n                Element={Link}\n                to={getVacancyLink(vacancy, VacancyOfTheDayLocation.MainPageBottom, isRecommended)}\n                additionalQueryParams={{ source: sourceQueryParam, from: hhtmSource, hhtmFromLabel }}\n                target=\"_blank\"\n                onClick={() => sendAnalytics(vacancy.vacancyId, 'vacancy_of_the_day')}\n            >\n                <span className=\"vacancy-of-the-day__title\" data-qa=\"vacancy_of_the_day_title\" ref={setVacancyRef}>\n                    {vacancy.name}\n                </span>\n                <span className=\"vacancy-of-the-day__salary\" data-qa=\"vacancy_of_the_day_compensation\">\n                    <Compensation\n                        from={vacancy.compensation.from}\n                        to={vacancy.compensation.to}\n                        currencyCode={vacancy.compensation.currencyCode}\n                        showNoSalaryMessage\n                    />\n                </span>\n            </BlokoLink>\n            {vacancy.company.id && (\n                <span className=\"vacancy-of-the-day__company\" data-qa=\"vacancy_of_the_day_company\">\n                    <CompanyLink\n                        vacancy={vacancy}\n                    >{`${vacancy.company.visibleName}, ${vacancy.area.name}`}</CompanyLink>\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default translation(VacancyOfTheDay);\n","import Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport VacancyOfTheDay from 'lux/components/VacancyOfTheDay';\nimport translation from 'lux/components/translation';\nimport { BELARUS_AREA_ID } from 'lux/models/countryId';\nimport { UserType } from 'lux/models/userType';\nimport { VacancyOfTheDayLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { MIN_VACANCIES_NUM_TO_SHOW } from 'lux/components/VacanciesOfTheDay/constants';\nimport useVacanciesOfTheDayViewAnalytics from 'lux/components/VacanciesOfTheDay/hooks/useVacanciesOfTheDayViewAnalytics';\n\nconst TrlKeys = {\n    titleMain: 'index.vacancies',\n    titleIn: 'wic-vod.in',\n};\n\ninterface VacanciesOfTheDayProps {\n    userType: UserType;\n}\n\nconst VacanciesOfTheDay: TranslatedComponent<VacanciesOfTheDayProps> = ({ trls, userType }) => {\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    const domainRegionTrl = useSelector((state) => state.domainRegionTrl);\n    const locale = useSelector((state) => state.locale);\n\n    const vacanciesRefs = useVacanciesOfTheDayViewAnalytics(\n        vacanciesOfTheDay.vacancies,\n        VacancyOfTheDayLocation.MainPageBottom\n    );\n\n    if (!vacanciesOfTheDay.success || vacanciesOfTheDay.vacancies.length <= MIN_VACANCIES_NUM_TO_SHOW) {\n        return null;\n    }\n\n    const showRegionTrl = !(locale.areaId === BELARUS_AREA_ID && !locale.isSeoDomain);\n\n    return (\n        <div className={`vacancies-of-the-day-${userType}`}>\n            <Gap top>\n                <H2 Element=\"h1\">\n                    {format(trls[TrlKeys.titleMain], {\n                        '{0}': showRegionTrl ? trls[TrlKeys.titleIn] : '',\n                        '{1}': showRegionTrl ? domainRegionTrl : '',\n                    })}\n                </H2>\n                <VSpacing base={4} />\n            </Gap>\n            <div className=\"vacancies-of-the-day\">\n                {vacanciesOfTheDay.vacancies.map((vacancy) => {\n                    return (\n                        <div className=\"vacancies-of-the-day__item\" key={vacancy.vacancyId}>\n                            <VacancyOfTheDay\n                                vacancy={vacancy}\n                                sourceQueryParam=\"vacancies_of_the_day\"\n                                hhtmFromLabel=\"vacancies_of_the_day\"\n                                setVacancyRef={(ref) => {\n                                    if (ref && vacanciesRefs.current) {\n                                        vacanciesRefs.current[vacancy.vacancyId] = ref;\n                                    }\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default translation(VacanciesOfTheDay);\n","import { FC, PropsWithChildren } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst VacanciesOfTheDayBanners: FC<PropsWithChildren> = () => {\n    const banners = useSelector((state) => state.banners['index-vod']);\n\n    if (!banners || !banners.length) {\n        return null;\n    }\n\n    return (\n        <Gap top>\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\" container>\n                {banners?.map((banner) => (\n                    <div\n                        className=\"HHC-Banner-Wrapper banner-place-wrapper\"\n                        data-empty-class=\"banner-place-wrapper_hide\"\n                        key={banner.id}\n                    >\n                        <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                            <div className=\"banner-place-fat-wrapper\">\n                                <div className=\"index-banner-wrapper\">\n                                    <div\n                                        className=\"index-banner index-banner_big\"\n                                        data-page-analytics-event={`advertising_banner.right${banner.id}`}\n                                    >\n                                        <AdsExternalBanner {...banner} />\n                                    </div>\n                                </div>\n                            </div>\n                        </Column>\n                    </div>\n                ))}\n            </Column>\n        </Gap>\n    );\n};\n\nexport default VacanciesOfTheDayBanners;\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { Bound } from 'bloko/common/elementSpy';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Compensation from 'lux/components/Compensation';\nimport translation from 'lux/components/translation';\nimport { VacancyOfTheDayLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { getVacancyLink } from 'lux/components/VacanciesOfTheDay/Utils';\nimport { sendAnalytics } from 'lux/components/VacanciesOfTheDay/analytics';\nimport { MIN_VACANCIES_NUM_TO_SHOW } from 'lux/components/VacanciesOfTheDay/constants';\nimport useVacanciesOfTheDayViewAnalytics from 'lux/components/VacanciesOfTheDay/hooks/useVacanciesOfTheDayViewAnalytics';\n\nconst TrlKeys = {\n    title: 'professions.promo.vacancies',\n};\n\nconst trackingParams = { trackingBounds: [Bound.Left] };\n\nconst VacanciesOfTheDayMobile: TranslatedComponent = ({ trls }) => {\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    const breakpoint = useBreakpoint();\n    const isXs = breakpoint === Breakpoint.XS;\n\n    const vacanciesRefs = useVacanciesOfTheDayViewAnalytics(\n        vacanciesOfTheDay.vacancies,\n        VacancyOfTheDayLocation.MainPageXsSlider,\n        trackingParams\n    );\n\n    if (!isXs || !vacanciesOfTheDay.success || vacanciesOfTheDay.vacancies.length <= MIN_VACANCIES_NUM_TO_SHOW) {\n        return null;\n    }\n\n    return (\n        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n            <div className=\"index-section-vacancies-of-the-day\">\n                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                    <H2>{trls[TrlKeys.title]}</H2>\n                    <VSpacing base={4} />\n                </Column>\n                <div className=\"index-slider-wrapper\">\n                    <div className=\"index-slider\">\n                        {vacanciesOfTheDay.vacancies.map((vacancy) => {\n                            const titleLinkContent = (\n                                <>\n                                    <span\n                                        className=\"index-slider-vacancy-title\"\n                                        data-qa=\"mobile-vod-title\"\n                                        ref={(ref) => {\n                                            if (ref && vacanciesRefs.current) {\n                                                vacanciesRefs.current[vacancy.vacancyId] = ref;\n                                            }\n                                        }}\n                                    >\n                                        <Text Element=\"span\" strong>\n                                            {vacancy.name}\n                                        </Text>\n                                    </span>\n                                    <span\n                                        className=\"index-slider-vacancy-compensation\"\n                                        data-qa=\"mobile-vod-compensation\"\n                                    >\n                                        <Compensation\n                                            from={vacancy.compensation.from}\n                                            to={vacancy.compensation.to}\n                                            currencyCode={vacancy.compensation.currencyCode}\n                                            showNoSalaryMessage\n                                        />\n                                    </span>\n                                    {vacancy.company.id && (\n                                        <span className=\"index-slider-vacancy-company\" data-qa=\"mobile-vod-company\">\n                                            <Text Element=\"span\" importance={TextImportance.Secondary}>\n                                                {`${vacancy.company.visibleName}, ${vacancy.area.name}`}\n                                            </Text>\n                                        </span>\n                                    )}\n                                </>\n                            );\n\n                            return (\n                                <div className=\"index-slider-item\" key={vacancy.vacancyId}>\n                                    <BlokoLink\n                                        Element={Link}\n                                        to={getVacancyLink(vacancy, VacancyOfTheDayLocation.MainPageXsSlider)}\n                                        additionalQueryParams={{ source: 'vacancies_of_the_day' }}\n                                        onClick={() => sendAnalytics(vacancy.vacancyId, 'vacancy_of_the_day')}\n                                    >\n                                        <span className=\"index-slider-vacancy\">{titleLinkContent}</span>\n                                    </BlokoLink>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </Column>\n    );\n};\n\nexport default translation(VacanciesOfTheDayMobile);\n","import classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CompanyOfTheDay } from 'lux/models/companiesOfTheDay';\nimport { WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { getCompanyLink, sendAnalytics } from 'lux/components/WorkInCompany/Utils';\nimport WorkInBanner from 'lux/components/WorkInCompany/WorkInBanner';\nimport useCompaniesOfTheDayViewAnalytics from 'lux/components/WorkInCompany/hooks/useCompaniesOfTheDayViewAnalytics';\n\nconst BELARUS_DOMAIN_AREA_ID = '1002';\nenum PartIndex {\n    One = 3,\n    Two = 13,\n    Three = 19,\n}\n\nconst TrlKeys = {\n    titleMain: 'index.companies.work.in',\n    titleTwo: 'index.companies.work.two',\n    titleIn: 'wic-vod.in',\n};\n\nconst WorkInCompany: TranslatedComponent = ({ trls, isApplicant = false }) => {\n    const companiesOfTheDay = useSelector((state) => state.companiesOfTheDay);\n    const companiesOfTheDayTrls = useSelector((state) => state.companiesOfTheDayTrls);\n    const locale = useSelector((state) => state.locale);\n\n    const isZP = useIsZarplataPlatform();\n    const companiesRefs = useCompaniesOfTheDayViewAnalytics(companiesOfTheDay, WorkInCompanyLocation.MainPageBottom);\n\n    const getHeader = () => {\n        const firstPart =\n            locale.isSeoDomain && locale.domainAreaId !== BELARUS_DOMAIN_AREA_ID\n                ? trls[TrlKeys.titleIn]\n                : trls[TrlKeys.titleTwo];\n\n        return (\n            <>\n                <H2>\n                    <BlokoLink\n                        Element={Link}\n                        to=\"/employers_company\"\n                        data-qa=\"index__work-in-company-header\"\n                        kind={LinkKind.Tertiary}\n                    >\n                        {format(trls[TrlKeys.titleMain], {\n                            '{0}': firstPart,\n                            '{1}': locale.domainAreaId !== BELARUS_DOMAIN_AREA_ID ? companiesOfTheDayTrls.area : '',\n                        })}\n                    </BlokoLink>\n                </H2>\n                <VSpacing base={4} />\n            </>\n        );\n    };\n\n    const getCompanyItem = (company: CompanyOfTheDay, { isAdditional = false } = {}) => {\n        return (\n            <li\n                className={classnames('work-in-company-list__item', {\n                    'work-in-company-list__item_additional': isAdditional,\n                })}\n                key={company.id}\n            >\n                <div className=\"multiple-column-list-item multiple-column-list-item_complex\">\n                    <span className=\"multiple-column-list-item__text\">\n                        <Text Element=\"span\">\n                            <BlokoLink\n                                Element={Link}\n                                to={getCompanyLink(company, locale, WorkInCompanyLocation.MainPageBottom, isZP)}\n                                kind={LinkKind.Tertiary}\n                                onClick={() => sendAnalytics(company, 'employer_of_the_day')}\n                            >\n                                <span\n                                    data-qa=\"company-of-the-day-name\"\n                                    ref={(ref) => {\n                                        if (ref && companiesRefs.current) {\n                                            companiesRefs.current[company.id] = ref;\n                                        }\n                                    }}\n                                >\n                                    {company.companyName}\n                                </span>\n                            </BlokoLink>\n                        </Text>\n                    </span>\n                    <span className=\"multiple-column-list-item__count\">\n                        <Text Element=\"span\" size={TextSize.Small} importance={TextImportance.Tertiary}>\n                            {company.vacanciesNumber}\n                        </Text>\n                    </span>\n                </div>\n            </li>\n        );\n    };\n\n    if (isApplicant) {\n        return (\n            <>\n                <Column xs=\"4\" s=\"8\" m=\"4\" l=\"16\">\n                    <div className=\"work-in-company-applicant\">{getHeader()}</div>\n                </Column>\n                <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                    <div className=\"work-in-company-applicant\">\n                        <WorkInBanner />\n                        <Column xs=\"4\" s=\"4\" m=\"4\" l=\"0\" container>\n                            <Gap top>\n                                <ul className=\"multiple-column-list multiple-column-list_medium-1 multiple-column-list_small-1\">\n                                    {companiesOfTheDay\n                                        .slice(0, PartIndex.One)\n                                        .map((company) => getCompanyItem(company))}\n                                </ul>\n                            </Gap>\n                        </Column>\n                    </div>\n                </Column>\n                <Column xs=\"4\" s=\"4\" m=\"4\" l=\"12\" container>\n                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"12\">\n                        <ul className=\"multiple-column-list multiple-column-list_medium-1 multiple-column-list_small-1\">\n                            {companiesOfTheDay.slice(0, PartIndex.One).map((company) => getCompanyItem(company))}\n                        </ul>\n                    </Column>\n                    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"12\">\n                        <div className=\"work-in-company-applicant\">\n                            <div className=\"work-in-company-list work-in-company-list_applicant\">\n                                <ul className=\"multiple-column-list multiple-column-list_medium-1 multiple-column-list_small-1\">\n                                    {companiesOfTheDay\n                                        .slice(PartIndex.One, PartIndex.Two)\n                                        .map((company) => getCompanyItem(company))}\n                                    {companiesOfTheDay\n                                        .slice(PartIndex.Two, PartIndex.Three)\n                                        .map((company) => getCompanyItem(company, { isAdditional: true }))}\n                                </ul>\n                            </div>\n                        </div>\n                    </Column>\n                </Column>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Column xs=\"4\" s=\"4\" m=\"8\" l=\"4\">\n                <div className=\"work-in-company\">{getHeader()}</div>\n            </Column>\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <div className=\"work-in-company\">\n                    <Gap sBottom mBottom>\n                        <WorkInBanner />\n                    </Gap>\n                    <Gap top mBottom>\n                        <ul className=\"multiple-column-list multiple-column-list_medium-1 multiple-column-list_small-1\">\n                            {companiesOfTheDay.slice(0, PartIndex.One).map((company) => getCompanyItem(company))}\n                        </ul>\n                    </Gap>\n                </div>\n            </Column>\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <div className=\"work-in-company\">\n                    <div className=\"work-in-company-list\">\n                        <ul className=\"multiple-column-list multiple-column-list_medium-1 multiple-column-list_small-1 multiple-column-list_not-applicant\">\n                            {companiesOfTheDay\n                                .slice(PartIndex.One, PartIndex.Two)\n                                .map((company) => getCompanyItem(company))}\n                        </ul>\n                    </div>\n                </div>\n            </Column>\n        </>\n    );\n};\n\nexport default translation(WorkInCompany);\n","import { FC, useRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\n\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { MobileCompanyItemInterface, getCompanyLink, sendAnalytics } from 'lux/components/WorkInCompany/Utils';\nimport useCompaniesOfTheDayViewAnalytics from 'lux/components/WorkInCompany/hooks/useCompaniesOfTheDayViewAnalytics';\n\nconst MobileCompanyItem: FC<MobileCompanyItemInterface & PropsWithChildren> = ({ company, isLast }) => {\n    const locale = useSelector((state) => state.locale);\n\n    const isZP = useIsZarplataPlatform();\n    const companiesOfTheDay = useRef([company]);\n    const companiesRefs = useCompaniesOfTheDayViewAnalytics(\n        companiesOfTheDay.current,\n        WorkInCompanyLocation.MainPageXsPopup\n    );\n\n    return (\n        <li>\n            <BlokoLink\n                Element={Link}\n                to={getCompanyLink(company, locale, WorkInCompanyLocation.MainPageXsPopup, isZP)}\n                kind={LinkKind.Tertiary}\n                onClick={() => sendAnalytics(company, 'employer_of_the_day')}\n            >\n                <span\n                    className={classnames('easy-tap-link easy-tap-link_with-arrow', {\n                        'easy-tap-link_last': isLast,\n                    })}\n                    ref={(ref) => {\n                        if (ref && companiesRefs.current) {\n                            companiesRefs.current[company.id] = ref;\n                        }\n                    }}\n                >\n                    <span data-qa=\"company-of-the-day-name\">{company.companyName}</span>\n                    <span className=\"easy-tap-link-number\">{company.vacanciesNumber}</span>\n                </span>\n            </BlokoLink>\n        </li>\n    );\n};\n\nexport default MobileCompanyItem;\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Column from 'bloko/blocks/column';\nimport Conversion from 'bloko/blocks/conversion';\nimport { H2 } from 'bloko/blocks/header';\nimport Modal, { ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { Bound } from 'bloko/common/elementSpy';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport useToggleState from 'lux/hooks/useToggleState';\nimport { CompanyOfTheDay } from 'lux/models/companiesOfTheDay';\nimport { WorkInCompanyLocation } from 'lux/modules/sendAdvSpyAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport MobileCompanyItem from 'lux/components/WorkInCompany/MobileCompanyItem';\nimport { getCompanyLink, sendAnalytics } from 'lux/components/WorkInCompany/Utils';\nimport WorkInBanner from 'lux/components/WorkInCompany/WorkInBanner';\nimport useCompaniesOfTheDayViewAnalytics from 'lux/components/WorkInCompany/hooks/useCompaniesOfTheDayViewAnalytics';\n\nconst TrlKeys = {\n    title: 'professions.promo.employers',\n    vacancyOne: 'main.counter.vacancies.one',\n    vacancyMany: 'main.counter.vacancies.many',\n    vacancySome: 'main.counter.vacancies.some',\n    vacancyZero: 'main.counter.vacancies.zero',\n};\n\nconst trackingParams = { trackingBounds: [Bound.Left] };\n\nconst WorkInCompanyMobile: TranslatedComponent = ({ trls }) => {\n    const companiesOfTheDay = useSelector((state) => state.companiesOfTheDay);\n    const [showModal, toggleShowModal] = useToggleState(false);\n\n    const locale = useSelector((state) => state.locale);\n\n    const isZP = useIsZarplataPlatform();\n    const companiesRefs = useCompaniesOfTheDayViewAnalytics(\n        companiesOfTheDay,\n        WorkInCompanyLocation.MainPageXsSlider,\n        trackingParams\n    );\n\n    const renderCompany = (company: CompanyOfTheDay) => (\n        <div className=\"index-slider-item\" key={company.id}>\n            <Link\n                to={getCompanyLink(company, locale, WorkInCompanyLocation.MainPageXsSlider, isZP)}\n                onClick={() => sendAnalytics(company, 'employer_of_the_day')}\n                className=\"index-slider-employer\"\n            >\n                <span\n                    className=\"index-slider-employer-name\"\n                    ref={(ref) => {\n                        if (ref && companiesRefs.current) {\n                            companiesRefs.current[company.id] = ref;\n                        }\n                    }}\n                >\n                    <Text Element=\"span\" strong>\n                        {(company.logoUrl && (\n                            <img\n                                className=\"index-slider-employer-logo\"\n                                src={company.logoUrl}\n                                alt={company.companyName}\n                            />\n                        )) || <span data-qa=\"company-of-the-day-name\">{company.companyName}</span>}\n                    </Text>\n                </span>\n                <span className=\"index-slider-employer-vacancies\">\n                    <Conversion\n                        value={company.vacanciesNumber}\n                        one={`${trls[TrlKeys.vacancyOne]}`}\n                        some={`${trls[TrlKeys.vacancySome]}`}\n                        many={`${trls[TrlKeys.vacancyMany]}`}\n                        zero={`${trls[TrlKeys.vacancyZero]}`}\n                    />\n                </span>\n            </Link>\n        </div>\n    );\n\n    return (\n        <>\n            <Column xs=\"4\">\n                <div data-page-analytics-event=\"employer_of_the_day_list.mobile\" onClick={toggleShowModal}>\n                    <H2>\n                        <div className=\"index-section-header index-section-header_with-chevron\">\n                            {trls[TrlKeys.title]}\n                        </div>\n                        <VSpacing base={4} />\n                    </H2>\n                </div>\n            </Column>\n            <Column xs=\"4\" container>\n                <div className=\"index-slider-wrapper\">\n                    <div className=\"index-slider\">\n                        {companiesOfTheDay.map((company: CompanyOfTheDay) => renderCompany(company))}\n                    </div>\n                </div>\n                <Modal visible={showModal} onClose={toggleShowModal}>\n                    <ModalHeader outlined>\n                        <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n                    </ModalHeader>\n                    <div className=\"mobile-work-in-company-wrapper\">\n                        <div className=\"mobile-work-in-company-banner\">\n                            <WorkInBanner isMobile />\n                        </div>\n\n                        <ul className=\"mobile-work-in-company-content\">\n                            {companiesOfTheDay.map((company: CompanyOfTheDay, index: number) => (\n                                <MobileCompanyItem\n                                    company={company}\n                                    isLast={index === companiesOfTheDay.length - 1}\n                                    key={company.id}\n                                />\n                            ))}\n                        </ul>\n                    </div>\n                </Modal>\n            </Column>\n        </>\n    );\n};\n\nexport default translation(WorkInCompanyMobile);\n","import Analytics from '@hh.ru/analytics-js';\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    title: 'index.workInOtherCities.header',\n};\n\nconst WorkInOtherCities: TranslatedComponent = ({ trls }) => {\n    const citiesList = useSelector((state) => state.workInOtherCity?.link);\n\n    if (!citiesList) {\n        return null;\n    }\n\n    return (\n        <div className=\"work-in-other-cities\">\n            <div className=\"work-in-other-cities__header\">\n                <H2 Element=\"h3\">{trls[TrlKeys.title]}</H2>\n                <VSpacing base={4} />\n            </div>\n            <ul>\n                {citiesList?.map((item, index) => (\n                    <li className=\"multiple-column-list-item\" key={item.id}>\n                        <Text Element={'span'}>\n                            <Link\n                                href={`//${item.domain}`}\n                                kind={LinkKind.Tertiary}\n                                onClick={() => {\n                                    Analytics.sendHHEventButtonClick('switch_area', {\n                                        areaId: item.id,\n                                        position: index,\n                                    });\n                                    Analytics.sendHHEventButtonClick('vacancy_area_catalog_list', {\n                                        domainId: item.id,\n                                    });\n                                }}\n                                suppressHydrationWarning\n                            >\n                                <span className=\"easy-tap-link easy-tap-link_with-arrow\">{item.name}</span>\n                            </Link>\n                        </Text>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default translation(WorkInOtherCities);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    createResume: 'supernova.navi.createResume',\n};\n\nconst CreateResumeButton: TranslatedComponent = ({ trls }) => {\n    return (\n        <div className=\"index-resume-button\">\n            <Button Element={Link} kind={ButtonKind.Primary} to=\"/account/signup?backurl=%2Fapplicant%2Fresumes%2Fnew\">\n                <span className=\"index-resume-button-content\">{trls[TrlKeys.createResume]}</span>\n            </Button>\n        </div>\n    );\n};\n\nexport default translation(CreateResumeButton);\n","import { useCallback, useEffect, useRef, FC, ReactElement } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Text from 'bloko/blocks/text';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport { AnonymousDashboard } from 'lux/models/anonymousDashboard';\nimport { useSelector } from 'lux/modules/useSelector';\n\ntype GetSlogan = (dashboard: AnonymousDashboard) => ReactElement;\n\nconst getSlogan: GetSlogan = ({ bigPromoSlogan, bigPromoHighlightedTextInSlogan }): ReactElement => {\n    if (!bigPromoHighlightedTextInSlogan) {\n        return <Text Element=\"span\">{bigPromoSlogan}</Text>;\n    }\n    return (\n        <Text Element=\"span\">\n            {formatToReactComponent(bigPromoSlogan, {\n                '[0]': (\n                    <Text Element=\"span\" strong>\n                        {bigPromoHighlightedTextInSlogan}\n                    </Text>\n                ),\n            })}\n        </Text>\n    );\n};\n\nconst DashboardBigPromoFooter: FC = () => {\n    const dashboard = useSelector(({ supernovaAnonymousDashboard }) => supernovaAnonymousDashboard);\n    const locale = useSelector(({ locale }) => locale);\n    const bigPromoContainer = useRef<HTMLDivElement>(null);\n    const employerId = dashboard.bigPromoEmployerId;\n\n    useEffect(() => {\n        if (!bigPromoContainer.current) {\n            return;\n        }\n        Analytics.sendHHEventElementShown(bigPromoContainer.current, {\n            employerId,\n            areaId: locale.areaId,\n            domainAreaId: locale.domainAreaId,\n            siteId: window.globalVars.siteId,\n        });\n        Analytics.sendEventElementShown(bigPromoContainer.current, 'anonymous', 'show-big-promo-link');\n    }, [employerId, locale.areaId, locale.domainAreaId]);\n\n    const sendAnalyticsEvents = useCallback(() => {\n        Analytics.sendEvent('anonymous', 'click-big-promo-link', employerId);\n        Analytics.sendHHEventButtonClick('big-promo-link', {\n            employerId,\n            areaId: locale.areaId,\n            domainAreaId: locale.domainAreaId,\n            siteId: window.globalVars.siteId,\n        });\n    }, [employerId, locale.areaId, locale.domainAreaId]);\n\n    return (\n        <div className=\"supernova-dashboard-footer supernova-dashboard-footer_with-big-promo\" ref={bigPromoContainer}>\n            <div className={`big-promo-logo-wrapper big-promo-logo-wrapper_${employerId}`}>\n                <div className={`big-promo-logo big-promo-logo_${employerId}`} />\n            </div>\n            <div className={`big-promo-slogan big-promo-slogan_${employerId}`}>{getSlogan(dashboard)}</div>\n            <div className={`big-promo-link-wrapper big-promo-link-wrapper_${employerId}`}>\n                <a\n                    href={dashboard.bigPromoLinkUrl}\n                    className=\"supernova-link supernova-link_with-line\"\n                    onClick={sendAnalyticsEvents}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    {dashboard.bigPromoLinkText}\n                </a>\n            </div>\n            {dashboard.bigPromoFootnote && (\n                <div className={`big-promo-footnote big-promo-footnote_${employerId}`}>\n                    {dashboard.bigPromoFootnote}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default DashboardBigPromoFooter;\n","import { Fragment } from 'react';\nimport classnames from 'classnames';\n\nimport Link from '@hh.ru/redux-spa-middleware/lib/Link';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport NumberFormatter from 'bloko/common/numberFormatter';\n\nimport translation from 'lux/components/translation';\nimport { useIsRabotaBy } from 'lux/hooks/useSites';\nimport { GlobalStatisticsCategory } from 'lux/models/globalStatistics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    'counter.resumes.one': 'main.counter.resumes.one',\n    'counter.resumes.some': 'main.counter.resumes.some',\n    'counter.resumes.many': 'main.counter.resumes.many',\n    'counter.resumes.zero': 'main.counter.resumes.zero',\n    'counter.vacancies.one': 'main.counter.vacancies.one',\n    'counter.vacancies.some': 'main.counter.vacancies.some',\n    'counter.vacancies.many': 'main.counter.vacancies.many',\n    'counter.vacancies.zero': 'main.counter.vacancies.zero',\n    'counter.employers.one': 'main.counter.employers.one',\n    'counter.employers.some': 'main.counter.employers.some',\n    'counter.employers.many': 'main.counter.employers.many',\n    'counter.employers.zero': 'main.counter.employers.zero',\n};\n\nconst DashboardFooter: TranslatedComponent = ({ trls }) => {\n    const globalStatistics = useSelector(({ globalStatistics }) => globalStatistics);\n    const stayInTouch = useSelector(({ stayInTouch }) => stayInTouch);\n    const showResumeStats = !useIsRabotaBy();\n\n    return (\n        <div className=\"supernova-dashboard-footer\">\n            {globalStatistics !== null &&\n                [\n                    GlobalStatisticsCategory.Resumes,\n                    GlobalStatisticsCategory.Vacancies,\n                    GlobalStatisticsCategory.Employers,\n                ].map((category, index) => {\n                    const value =\n                        category === GlobalStatisticsCategory.Resumes && !showResumeStats\n                            ? null\n                            : globalStatistics[category];\n\n                    if (!value) {\n                        return null;\n                    }\n                    return (\n                        <Fragment key={category}>\n                            <div\n                                className={classnames('supernova-dashboard-stats', {\n                                    'supernova-dashboard-stats_secondary': index === 2,\n                                })}\n                            >\n                                <div className=\"supernova-dashboard-stats__value\">\n                                    {NumberFormatter.format(value.toString())}\n                                </div>\n                                <Text>\n                                    <ConversionNumber\n                                        many={trls[TrlKeys[`counter.${category}.many`]]}\n                                        some={trls[TrlKeys[`counter.${category}.some`]]}\n                                        one={trls[TrlKeys[`counter.${category}.one`]]}\n                                        zero={trls[TrlKeys[`counter.${category}.zero`]]}\n                                        hasValue={false}\n                                        value={value}\n                                    />\n                                </Text>\n                            </div>\n                        </Fragment>\n                    );\n                })}\n            <div className=\"supernova-dashboard-footer-fill\" />\n            <div className=\"supernova-dashboard-footer-app-buttons\">\n                <div className=\"supernova-app-buttons\">\n                    {stayInTouch.apps\n                        .filter((app) => app.name !== 'mobile')\n                        .map((app) => {\n                            const href = stayInTouch.mobilePage\n                                ? `${stayInTouch.mobilePage}?from=main_head&hhtmFromLabel=main_head`\n                                : app.href;\n                            return (\n                                <Link\n                                    className={`supernova-app-button supernova-app-button_${app.name}`}\n                                    to={href}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    key={app.name}\n                                />\n                            );\n                        })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(DashboardFooter);\n","import classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Link from '@hh.ru/redux-spa-middleware/lib/Link';\nimport { H3Promo } from 'bloko/blocks/header';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SupernovaSearch from 'lux/components/SupernovaSearch';\nimport useSearchBaseState from 'lux/components/SupernovaSearch/useSearchBaseState';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    header: 'index.headers.main',\n    headerRuBy: 'index.headers.main.jobForEveryone',\n    lookingForEmployee: 'index.search.lookingForEmployee',\n};\n\nconst sendLookingForEmployeeClick = () => Analytics.sendHHEventButtonClick('looking_for_employee_index_page');\n\nconst DashboardSearch: TranslatedComponent = ({ trls }) => {\n    const dashboard = useSelector(({ supernovaAnonymousDashboard }) => supernovaAnonymousDashboard);\n    const lookingForEmployeeMenuItem = useSelector(({ headerMenu }) => headerMenu).find(\n        (menuItem) => menuItem.name === 'lookingForEmployee'\n    );\n    const topLevelSite = useSelector(({ topLevelSite }) => topLevelSite);\n    const searchBaseState = useSearchBaseState();\n    const supernovaSearchState = { ...searchBaseState, isAnonymousDashboardSearch: true };\n    const isZp = useIsZarplataPlatform();\n    const { h1 } = useSelector((state) => state.pageMetaData);\n\n    return (\n        <div\n            className={classnames('supernova-dashboard-search', {\n                'supernova-dashboard-search_with-big-promo': dashboard.bigPromoEmployerId,\n            })}\n        >\n            {isZp ? (\n                <H3Promo Element=\"h1\">{h1 || trls[TrlKeys.header]}</H3Promo>\n            ) : (\n                <H3Promo>\n                    {[TopLevelSite.RU, TopLevelSite.BY].includes(topLevelSite)\n                        ? trls[TrlKeys.headerRuBy]\n                        : trls[TrlKeys.header]}\n                </H3Promo>\n            )}\n            <>\n                <VSpacing base={6} />\n                <SupernovaSearch {...supernovaSearchState} />\n                {lookingForEmployeeMenuItem && (\n                    <>\n                        <VSpacing base={6} />\n                        <Link\n                            to={lookingForEmployeeMenuItem.url}\n                            className=\"supernova-dashboard-link-switch\"\n                            onClick={sendLookingForEmployeeClick}\n                        >\n                            <Text size={TextSize.Large} Element=\"span\">\n                                {trls[TrlKeys.lookingForEmployee]}\n                            </Text>\n                        </Link>\n                    </>\n                )}\n            </>\n        </div>\n    );\n};\n\nexport default translation(DashboardSearch);\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport DashboardBigPromoFooter from 'lux/components/IndexPageAnonymous/DashboardBigPromoFooter';\nimport DashboardFooter from 'lux/components/IndexPageAnonymous/DashboardFooter';\nimport DashboardSearch from 'lux/components/IndexPageAnonymous/DashboardSearch';\n\nconst Dashboard: FC = () => {\n    const dashboard = useSelector(({ supernovaAnonymousDashboard }) => supernovaAnonymousDashboard);\n    const userType = useSelector(({ userType }) => userType);\n\n    return (\n        <div\n            className={classnames('supernova-dashboard supernova-dashboard_optimized-menu', {\n                [`supernova-dashboard_bg-applicant-${dashboard.backgroundScope}-${dashboard.backgroundIndex}`]:\n                    dashboard.backgroundScope,\n                [`supernova-dashboard_big-promo-${dashboard.bigPromoEmployerId}`]: dashboard.bigPromoEmployerId,\n                'supernova-dashboard_backoffice': userType === UserType.BackOffice,\n            })}\n        >\n            <div className=\"supernova-dashboard-content\">\n                <ColumnsWrapper>\n                    <Column xs=\"0\" s=\"0\" m=\"0\" l=\"2\" />\n                    <Column xs=\"0\" s=\"8\" m=\"10\" l=\"10\">\n                        <DashboardSearch />\n                    </Column>\n                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                        {dashboard.bigPromoEmployerId ? <DashboardBigPromoFooter /> : <DashboardFooter />}\n                    </Column>\n                </ColumnsWrapper>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import { useRef } from 'react';\n// tempexp_27541_next_line\nimport { useDispatch } from 'react-redux';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport { H3Section } from 'bloko/blocks/header';\nimport Link, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport AreaSwitcherModal from 'lux/components/SupernovaSearch/AreaSwitcherModal';\nimport SearchSuggest from 'lux/components/SupernovaSearch/SearchSuggest';\nimport VacancySearchHiddenFields from 'lux/components/SupernovaSearch/VacancySearchHiddenFields';\nimport useSendFormSubmitEvent from 'lux/components/SupernovaSearch/useSendFormSubmitEvent';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\n// tempexp_27541_start\nimport { openAnonymousSignUpMainPage } from 'lux/models/anonymousSignUp';\nimport { extractRequestUrlFromForm } from 'lux/models/anonymousSignUp/extractRequestUrlFromForm';\nimport { useMainPageSignupEnable } from 'lux/models/anonymousSignUp/hooks';\n// tempexp_27541_end\nimport { NavItem } from 'lux/models/supernovaNaviMenu';\nimport { SupernovaSearchName } from 'lux/models/supernovaSearchName';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface SearchNavItem extends NavItem {\n    action: string;\n}\n\nconst TrlKeys = {\n    headerText: 'supernova.navi.jobSearch',\n    searchIn: 'index.dashboard.in',\n};\n\nconst DashboardMobileSearch: TranslatedComponent<{ withBackdrop?: boolean }> = ({ trls, withBackdrop }) => {\n    // tempexp_27541_start\n    const mainPageSignUpEnable = useMainPageSignupEnable();\n    const dispatch = useDispatch();\n    // tempexp_27541_end\n\n    const searchName = SupernovaSearchName.Vacancies;\n    const searchProps: SearchNavItem | undefined = useSelector(\n        ({ headerMenu }) =>\n            headerMenu\n                ?.find((menuItem) => menuItem.name === 'searchForm')\n                ?.subItems?.find((menuItem) => menuItem.name === searchName) as SearchNavItem\n    );\n    const formRef = useRef<HTMLFormElement>(null);\n    const supernovaSearchAreaTrl = useSelector(({ supernovaSearchArea }) => supernovaSearchArea.translations.area);\n    const sendFormSubmitEvent = useSendFormSubmitEvent(searchName, true);\n    const [areaSwitchVisible, setAreaSwitchVisible, setAreaSwitchHidden] = useOnOffState(false);\n\n    if (!searchProps) {\n        return null;\n    }\n\n    return (\n        <div className={withBackdrop ? 'supernova-dashboard-mobile-wrapper' : ''}>\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                    <div className=\"supernova-dashboard-mobile\">\n                        <div className=\"supernova-dashboard-mobile-header supernova-dashboard-mobile-header_inline\">\n                            <Text size={TextSize.Large}>\n                                <div className=\"supernova-dashboard-mobile-inline-title\">\n                                    <H3Section lite>{trls[TrlKeys.headerText]}</H3Section>\n                                </div>{' '}\n                                {trls[TrlKeys.searchIn]}\n                                <Link\n                                    appearance={LinkAppearance.Pseudo}\n                                    Element=\"button\"\n                                    kind={LinkKind.Tertiary}\n                                    onClick={setAreaSwitchVisible}\n                                >\n                                    {supernovaSearchAreaTrl}\n                                </Link>\n                            </Text>\n                        </div>\n                        <Form\n                            onSubmit={(event) => {\n                                // tempexp_27541_start\n                                if (mainPageSignUpEnable) {\n                                    event.preventDefault();\n                                }\n                                // tempexp_27541_end\n                                sendFormSubmitEvent();\n                            }}\n                            action={searchProps.action}\n                            method=\"GET\"\n                            ref={formRef}\n                        >\n                            <VacancySearchHiddenFields />\n                            <SearchSuggest\n                                isEmployerSearch={false}\n                                searchName={searchName}\n                                large={false}\n                                searchInputDefaultValue=\"\"\n                                submitForm={() => {\n                                    sendFormSubmitEvent();\n                                    // tempexp_27541_start\n                                    if (mainPageSignUpEnable) {\n                                        const backUrl = extractRequestUrlFromForm(formRef.current as HTMLFormElement);\n                                        dispatch(openAnonymousSignUpMainPage(backUrl));\n                                        // tempexp_27541_end\n                                    } else {\n                                        formRef.current?.submit();\n                                    }\n                                }}\n                                isDashboardMobileSearch\n                                isXs\n                            />\n                        </Form>\n                    </div>\n                </Column>\n            </ColumnsWrapper>\n            <AreaSwitcherModal visible={areaSwitchVisible} onClose={setAreaSwitchHidden} />\n        </div>\n    );\n};\n\nexport default translation(DashboardMobileSearch);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--qhbCbrSf_zZZxS8PvQzZ\"};","import { useEffect, ReactNode, useMemo } from 'react';\n\nimport { FormItem } from 'bloko/blocks/form';\nimport { H2Section } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport MultiAccountGroupingForm, {\n    MultiAccountGroupingFormBaseProps,\n} from 'lux/components/ApplicantSignInSignUpFlow/MultiAccountGroupingStep/MultiAccountGroupingForm';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './multi-account-grouping.less';\n\nconst TrlKeys = {\n    passwordSent: 'registration.registered.passwordSent',\n    letterComeSoon: 'registration.registered.letterComeSoon',\n    letterMultiaccountNote: 'registration.registered.letterMultiaccountNote',\n    letterHighlightedPart: 'registration.registered.letterHighlightedPart',\n};\n\nexport interface MultiAccountGroupingStepProps extends MultiAccountGroupingFormBaseProps {\n    setHeader: (headerContent: ReactNode) => void;\n}\n\nconst MultiAccountGroupingStep: TranslatedComponent<MultiAccountGroupingStepProps> = ({\n    trls,\n    setHeader,\n    ...formProps\n}) => {\n    const { login } = useSelector(({ otp }) => otp);\n\n    const headerContent = useMemo(\n        () => (\n            <>\n                <H2Section>\n                    {format(trls[TrlKeys.passwordSent], {\n                        '{0}': login as string,\n                    })}\n                </H2Section>\n                <VSpacing base={3} />\n                <p>\n                    {formatToReactComponent(trls[TrlKeys.letterMultiaccountNote], {\n                        '{0}': (\n                            <Text Element=\"span\" strong>\n                                {trls[TrlKeys.letterHighlightedPart]}\n                            </Text>\n                        ),\n                    })}\n                </p>\n                <p>{trls[TrlKeys.letterComeSoon]}</p>\n            </>\n        ),\n        [login, trls]\n    );\n\n    useEffect(() => {\n        setHeader(headerContent);\n    }, [headerContent, setHeader]);\n\n    return (\n        <MultiAccountGroupingForm\n            render={({ renderInput, renderError, renderSubmit }) => {\n                return (\n                    <div className={styles.wrapper}>\n                        <FormItem>{renderInput()}</FormItem>\n                        {renderError()}\n                        <VSpacing base={4} />\n                        {renderSubmit()}\n                    </div>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(MultiAccountGroupingStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--yj6zg3OtmQvHBgK24WIo\",\"container\":\"container--QU7ToGWDkmudP6AxaQ5s\",\"inputWrapper\":\"input-wrapper--Szjc8T60CVAM8unDfxQg\",\"buttonWrapper\":\"button-wrapper--nOFckq62MC3LQGoPoRjw\",\"agreement\":\"agreement--FWDkIbAQ4QdurtuHkHdU\"};","import { ReactNode, useEffect } from 'react';\n\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AgreementText from 'lux/components/ApplicantSignInSignUpFlow/AgreementText';\nimport SignInFormStep from 'lux/components/ApplicantSignInSignUpFlow/SignInStep/SignInForm';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './sign-in-step.less';\n\nconst TrlKeys = {\n    header: 'signup.header.phone',\n    submit: 'signupForm.create.submit',\n    inputPlaceholder: 'signup.placeholder.phoneNumber',\n};\n\nexport interface SignInStepProps {\n    callbackSubmit?: () => void;\n    next: () => void;\n    setHeader: (headerContent: ReactNode) => void;\n}\n\nconst SignInStep: TranslatedComponent<SignInStepProps> = ({ next, trls, callbackSubmit, setHeader }) => {\n    const backurl = useSelector(({ authUrl }) => authUrl?.backurl);\n\n    useEffect(() => {\n        setHeader(\n            <Text size={TextSize.Large} strong>\n                {trls[TrlKeys.header]}\n            </Text>\n        );\n    }, [setHeader, trls]);\n\n    return (\n        <>\n            <SignInFormStep\n                isAutofocusEnabled={false}\n                backurl={backurl}\n                next={next}\n                callbackSubmit={callbackSubmit}\n                render={({ renderLogin, renderSubmitButton, renderCaptcha }) => (\n                    <div className={styles.wrapper}>\n                        <div className={styles.container}>\n                            <div className={styles.inputWrapper}>\n                                {renderLogin({ placeholder: trls[TrlKeys.inputPlaceholder] })}\n                            </div>\n                            <div className={styles.buttonWrapper}>\n                                {renderSubmitButton(trls[TrlKeys.submit], {\n                                    scale: undefined,\n                                })}\n                            </div>\n                        </div>\n                        {renderCaptcha()}\n                        <VSpacing base={8} xs={5} />\n                        <Text>\n                            <div className={styles.agreement}>\n                                <AgreementText />\n                            </div>\n                        </Text>\n                    </div>\n                )}\n            />\n        </>\n    );\n};\n\nexport default translation(SignInStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--E1t5Ci9pW3Uc9TTrZkSp\"};","import { useEffect, ReactNode } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport useShowAdvertisementAgreement from 'lux/components/AdvertisementAgreement/useShowAdvertisementAgreement';\nimport useShowAdvertisementSubscriptionApplicant from 'lux/components/AdvertisementSubscription/useShowAdvertisementSubscriptionApplicant';\nimport SignUpForm, { SignUpSignFormBaseProps } from 'lux/components/ApplicantSignInSignUpFlow/SignUpStep/SignUpForm';\nimport translation from 'lux/components/translation';\n\nimport styles from './sign-up-step.less';\n\nconst TrlKeys = {\n    header1: 'signUpStep.header.1',\n    header2: 'signUpStep.header.2',\n};\n\nexport interface SignUpStepProps extends SignUpSignFormBaseProps {\n    setHeader: (headerContent: ReactNode) => void;\n}\n\nconst SignUpStep: TranslatedComponent<SignUpStepProps> = ({ trls, setHeader, ...formProps }) => {\n    const showAdvertisementAgreement = useShowAdvertisementAgreement();\n    const showAdvertisementSubscriptionApplicant = useShowAdvertisementSubscriptionApplicant();\n\n    useEffect(() => {\n        setHeader(\n            <Text size={TextSize.Large} strong>\n                {trls[TrlKeys.header1]}\n                <br />\n                {trls[TrlKeys.header2]}\n            </Text>\n        );\n    }, [setHeader, trls]);\n\n    return (\n        <SignUpForm\n            render={({\n                renderFirstNameField,\n                renderLastNameField,\n                renderAccountDeleteInactive,\n                renderSubmit,\n                renderAdvertisementAgreement,\n                renderAdvertisementSubscriptionApplicant,\n            }) => {\n                return (\n                    <>\n                        <div className={styles.wrapper}>\n                            {renderFirstNameField()}\n                            <VSpacing base={2} />\n                            {renderLastNameField()}\n                            <VSpacing base={4} />\n                            {renderAccountDeleteInactive()}\n                            {showAdvertisementSubscriptionApplicant && (\n                                <>\n                                    {renderAdvertisementSubscriptionApplicant()}\n                                    <VSpacing base={6} />\n                                </>\n                            )}\n                            {renderSubmit()}\n                            {showAdvertisementAgreement && (\n                                <div>\n                                    <Column l=\"5\" m=\"5\" s=\"5\" xs=\"4\" container>\n                                        <VSpacing base={5} />\n                                        {renderAdvertisementAgreement()}\n                                    </Column>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                );\n            }}\n            backurl=\"/applicant/resumes/new\"\n            isSignupMain\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(SignUpStep);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--Qoe1F6cUkoVEync8Xf3Q\",\"formContainer\":\"form-container--U5uSgSE6POW1RUZA1Ob_\",\"inputWrapper\":\"input-wrapper--O_r_E3uD5i5skDW34tf3\",\"buttonWrapper\":\"button-wrapper--OvVxpcuPEGsaWOFUvO9f\"};","import { useEffect, ReactNode, useMemo } from 'react';\n\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport VerificationForm, { VerificationFormBaseProps } from 'lux/components/Verification/VerificationForm';\nimport translation from 'lux/components/translation';\n\nimport styles from './verification-step.less';\n\nconst TrlKeys = {\n    header: 'signUpForm.verification.header',\n    phone: {\n        sent: 'signUpForm.verification.codeSent.phone',\n        description1: 'signUpForm.verification.codeSentDescription.1.phone',\n        description2: 'signUpForm.verification.codeSentDescription.2.phone',\n    },\n    email: {\n        sent: 'signUpForm.verification.codeSent.email',\n        description: 'otp.confirm.sub.header',\n    },\n};\n\nexport interface VerificationStepProps extends VerificationFormBaseProps {\n    onCancel?: () => void;\n    cancelText?: string;\n    codePlaceholder?: string;\n    errorPageLogin?: boolean;\n    setHeader: (headerContent: ReactNode) => void;\n}\n\nconst VerificationStep: TranslatedComponent<VerificationStepProps> = ({\n    trls,\n    setHeader,\n    errorPageLogin,\n    codePlaceholder,\n    onCancel,\n    cancelText,\n    ...formProps\n}) => {\n    const { authType, login } = formProps;\n\n    const headerContent = useMemo(() => {\n        return (\n            <>\n                <Text size={TextSize.Large} strong>\n                    {trls[TrlKeys.header]}\n                </Text>\n                <VSpacing base={3} />\n                <p>\n                    {formatToReactComponent(trls[authType === 'EMAIL' ? TrlKeys.email.sent : TrlKeys.phone.sent], {\n                        '{0}': <strong>{login}</strong>,\n                    })}\n                </p>\n                <VSpacing base={3} />\n                {authType === 'EMAIL' ? (\n                    <p>{trls[TrlKeys.email.description]}</p>\n                ) : (\n                    <>\n                        <p>{trls[TrlKeys.phone.description1]}</p>\n                        <p>{trls[TrlKeys.phone.description2]}</p>\n                    </>\n                )}\n            </>\n        );\n    }, [authType, login, trls]);\n\n    useEffect(() => {\n        setHeader(headerContent);\n    }, [headerContent, setHeader]);\n\n    return (\n        <VerificationForm\n            render={({ renderInput, renderCodeError, renderCodeSender, renderSubmit }) => {\n                return (\n                    <div className={styles.wrapper}>\n                        <div className={styles.formContainer}>\n                            <div className={styles.inputWrapper}>\n                                {renderInput({\n                                    placeholder: codePlaceholder,\n                                    isAutofocus: true,\n                                })}\n                            </div>\n                            <div className={styles.buttonWrapper}>{renderSubmit({ isStretched: true })}</div>\n                        </div>\n                        <div>\n                            {renderCodeError()}\n                            <VSpacing base={3} />\n                            <Text importance={TextImportance.Tertiary}>{renderCodeSender()}</Text>\n                        </div>\n                    </div>\n                );\n            }}\n            {...formProps}\n        />\n    );\n};\n\nexport default translation(VerificationStep);\n","import { useCallback, FC, ReactNode, ComponentType } from 'react';\n\nimport ApplicantSignInSignUpFlow from 'lux/components/ApplicantSignInSignUpFlow';\n\nimport MultiAccountGroupingStep, {\n    MultiAccountGroupingStepProps,\n} from 'lux/components/IndexPageAnonymous/SignUp/Form/MultiAccountGroupingStep';\nimport SignInStep, { SignInStepProps } from 'lux/components/IndexPageAnonymous/SignUp/Form/SignInStep';\nimport SignUpStep, { SignUpStepProps } from 'lux/components/IndexPageAnonymous/SignUp/Form/SignUpStep';\nimport VerificationStep, {\n    VerificationStepProps,\n} from 'lux/components/IndexPageAnonymous/SignUp/Form/VerificationStep';\n\ninterface Props {\n    setHeader: (headerContent: ReactNode) => void;\n}\n\nconst SignupForm: FC<Props> = ({ setHeader }) => {\n    const SignIn = useCallback<ComponentType<Omit<SignInStepProps, 'setHeader'>>>(\n        (props) => <SignInStep {...props} setHeader={setHeader} />,\n        [setHeader]\n    );\n    const Verification = useCallback<ComponentType<Omit<VerificationStepProps, 'setHeader'>>>(\n        (props) => <VerificationStep {...props} setHeader={setHeader} />,\n        [setHeader]\n    );\n    const MultiAccountGrouping = useCallback<ComponentType<Omit<MultiAccountGroupingStepProps, 'setHeader'>>>(\n        (props) => <MultiAccountGroupingStep {...props} setHeader={setHeader} />,\n        [setHeader]\n    );\n    const SignUp = useCallback<ComponentType<Omit<SignUpStepProps, 'setHeader'>>>(\n        (props) => <SignUpStep {...props} setHeader={setHeader} />,\n        [setHeader]\n    );\n\n    return (\n        <ApplicantSignInSignUpFlow\n            SignIn={SignIn}\n            Verification={Verification}\n            MultiAccountGrouping={MultiAccountGrouping}\n            SignUp={SignUp}\n        />\n    );\n};\n\nexport default SignupForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--FPrPUQxpXAIjut0iB43m\",\"wrapperSteps\":\"wrapper-steps--iEgcCCx3GFX8s7cfagSH\",\"wrapperContent\":\"wrapper-content--M6HaSpEURWMHLwypZlKb\",\"logo\":\"logo--Fp1cnqkjcGGBbRe5Q7Mw\",\"logoJobsTutBy\":\"logo_jobs-tut-by--blZ4uMDhOxNjaI9jysnE\",\"logoZp\":\"logo_zp--uxqRjOGRxd1nj8F4hLBc\",\"stepDescription\":\"step-description--t2x4ucPI0HRQmZLDaeFe\",\"content\":\"content--oIh8VzqNngNMJOGjIHXj\"};","import { ReactNode, useCallback, useState } from 'react';\nimport classnames from 'classnames';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Form from 'lux/components/IndexPageAnonymous/SignUp/Form';\n\nimport styles from './banner.less';\n\nconst TrlKeys = {\n    headerPhone: 'signup.header.phone',\n};\n\nconst SignUpBanner: TranslatedComponent = ({ trls }) => {\n    const userAlreadyBeenLoggedIn = useSelector((state) => state.userAlreadyBeenLoggedIn);\n    const logoDomain = useSelector(({ logos }) => logos.logoDomain);\n\n    const [headerContent, setHeaderContent] = useState<ReactNode>(\n        <Text size={TextSize.Large} strong>\n            {trls[TrlKeys.headerPhone]}\n        </Text>\n    );\n\n    const setHeader = useCallback((content: ReactNode) => {\n        setHeaderContent(content);\n    }, []);\n\n    if (userAlreadyBeenLoggedIn) {\n        return null;\n    }\n\n    return (\n        <ColumnsWrapper>\n            <VSpacing base={10} xs={0} />\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                <div className={styles.wrapper}>\n                    <div className={styles.wrapperSteps}>\n                        <div\n                            className={classnames(styles.logo, {\n                                [styles.logoJobsTutBy]: logoDomain === 'jobs-tut-by',\n                                [styles.logoZp]: logoDomain === 'hr-zarplata-ru',\n                            })}\n                        />\n                        <VSpacing base={8} xs={5} />\n                        <div className={styles.stepDescription}>{headerContent}</div>\n                    </div>\n                    <div className={styles.wrapperContent}>\n                        <div className={styles.content}>\n                            <Form setHeader={setHeader} />\n                        </div>\n                    </div>\n                </div>\n            </Column>\n        </ColumnsWrapper>\n    );\n};\n\nexport default translation(SignUpBanner);\n","import { FC, useEffect, PropsWithChildren } from 'react';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AppBanner from 'lux/components/AppBanner';\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport ContainerForXSL from 'lux/components/CodeInjector/ContainerForXSL';\nimport InternalPromoBlock from 'lux/components/InternalPromoBlock';\nimport NewsBox from 'lux/components/NewsBox';\nimport RainbowCatalog from 'lux/components/RainbowCatalog';\nimport useFetchVacanciesOfTheDay from 'lux/components/RainbowCatalog/useFetchVacanciesOfTheDay';\nimport RecommendedVacanciesMobile from 'lux/components/RecommendedVacancies/Mobile';\n// tempexp_27541_next_line\nimport MainPageSignUpModal from 'lux/components/SignupModal/MainPageSignUpModal';\nimport StayInTouch from 'lux/components/StayInTouch';\nimport UsefulLinks from 'lux/components/UsefulLinks';\nimport VacanciesOfTheDay from 'lux/components/VacanciesOfTheDay';\nimport VacanciesOfTheDayBanners from 'lux/components/VacanciesOfTheDay/Banners';\nimport VacanciesOfTheDayMobile from 'lux/components/VacanciesOfTheDay/Mobile';\nimport { MIN_VACANCIES_NUM_TO_SHOW } from 'lux/components/VacanciesOfTheDay/constants';\nimport WorkInCompany from 'lux/components/WorkInCompany';\nimport WorkInCompanyMobile from 'lux/components/WorkInCompany/Mobile';\nimport WorkInOtherCities from 'lux/components/WorkInOtherCities';\nimport WorkInProfession from 'lux/components/WorkInProfession';\nimport WorkInProfessionMobile from 'lux/components/WorkInProfession/Mobile';\nimport translation from 'lux/components/translation';\nimport { useAddEventPixelsRu } from 'lux/hooks/useAddEventPixelsRu';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { BannerObject, BannerPlace } from 'lux/models/banners';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport CreateResumeButton from 'lux/components/IndexPageAnonymous/CreateResumeButton';\nimport Dashboard from 'lux/components/IndexPageAnonymous/Dashboard';\nimport DashboardMobileSearch from 'lux/components/IndexPageAnonymous/DashboardMobileSearch';\nimport SignUpBanner from 'lux/components/IndexPageAnonymous/SignUp/Banner';\n\nconst TrlKeys = {\n    newsTitle: 'index.newsTitle',\n    articlesTitle: 'index.Articles',\n    usefulTitle: 'index.headers.useful',\n};\n\nconst IndexAnonymous: TranslatedComponent<FC<PropsWithChildren>> = ({ trls }) => {\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    const stayInTouch = useSelector((state) => state.stayInTouch);\n    const news = useSelector((state) => state.applicantNews);\n    const articles = useSelector((state) => state.applicantArticles);\n    const useful = useSelector((state) => state.applicantUseful);\n    const bannersDashboardMobile = useSelector((state) => state.banners[BannerPlace.INDEX_DASHBOARD_MOBILE]);\n    const bannersUnderRainbowMobile = useSelector((state) => state.banners[BannerPlace.INDEX_UNDER_RAINBOW_MOBILE]);\n    const bannersHorizontal = useSelector((state) => state.banners[BannerPlace.INDEX_HORIZONTAL]);\n    const bannersUnderNewsBoxMobile = useSelector((state) => state.banners[BannerPlace.INDEX_UNDER_NEWS_BOX_MOBILE]);\n    const bannersUnderCreateResumeButton = useSelector((state) => state.banners[BannerPlace.INDEX_BOTTOM_MOBILE]);\n    const showWicAndVod = vacanciesOfTheDay.success && vacanciesOfTheDay.vacancies.length > MIN_VACANCIES_NUM_TO_SHOW;\n    const chatBot = useSelector((state) => state.chatBot);\n    const professionalRoleCategoryCollection = useSelector((state) => state.professionalRoleCategoryCollection);\n    const addEventPixelsRu = useAddEventPixelsRu();\n    const isZp = useIsZarplataPlatform();\n    const rainbowMoveTop = useExperiment('rainbow_move_top');\n\n    useFetchVacanciesOfTheDay();\n\n    useEffect(() => {\n        addEventPixelsRu('B2C_MAIN_PAGE_SHOWN');\n    }, [addEventPixelsRu]);\n\n    return (\n        <>\n            <Dashboard />\n            <DashboardMobileSearch />\n            {rainbowMoveTop && <RainbowCatalog />}\n            <SignUpBanner />\n            <VacanciesOfTheDayMobile />\n            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                <Gap top>\n                    {bannersDashboardMobile?.map((banner: BannerObject) => (\n                        <Gap bottom key={banner.id}>\n                            <div data-page-analytics-event=\"advertising_banner.XsBeforeCompanies\">\n                                <AdsExternalBanner {...banner} />\n                            </div>\n                        </Gap>\n                    ))}\n                    <WorkInCompanyMobile />\n                </Gap>\n            </Column>\n            {!rainbowMoveTop && <RainbowCatalog />}\n            <RecommendedVacanciesMobile />\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                    {showWicAndVod && (\n                        <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\" container>\n                            <Column xs=\"0\" s=\"4\" m=\"8\" l=\"12\" container>\n                                <Column xs=\"0\" s=\"4\" m=\"8\" l=\"4\" container>\n                                    <Gap top>\n                                        <WorkInCompany />\n                                    </Gap>\n                                </Column>\n                                <Column xs=\"0\" s=\"8\" m=\"8\" l=\"8\">\n                                    <VacanciesOfTheDay userType={UserType.Anonymous} />\n                                </Column>\n                            </Column>\n                            <Column xs=\"0\" s=\"4\" m=\"4\" l=\"4\" container>\n                                <VacanciesOfTheDayBanners />\n                            </Column>\n                        </Column>\n                    )}\n                    {bannersUnderRainbowMobile?.map((banner: BannerObject) => (\n                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container key={banner.id}>\n                            <div\n                                className=\"index-section-app-banner\"\n                                data-page-analytics-event=\"advertising_banner.XSAfterRainbow\"\n                            >\n                                <AdsExternalBanner {...banner} />\n                            </div>\n                        </Column>\n                    ))}\n                    <AppBanner />\n                    {professionalRoleCategoryCollection && (\n                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                            <VSpacing base={6} />\n                            <WorkInProfessionMobile />\n                        </Column>\n                    )}\n                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\" container>\n                        {!bannersHorizontal?.length && (\n                            <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                                <div className=\"separator\" />\n                            </Column>\n                        )}\n                        {bannersHorizontal?.map((banner: BannerObject) => (\n                            <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\" key={banner.id}>\n                                <Gap top>\n                                    <AdsExternalBanner {...banner} />\n                                </Gap>\n                            </Column>\n                        ))}\n                    </Column>\n                </Column>\n                {chatBot && (\n                    <>\n                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                            <div className=\"separator\" />\n                            <Gap top>\n                                <InternalPromoBlock isInline />\n                            </Gap>\n                            <div className=\"separator\" />\n                        </Column>\n                    </>\n                )}\n                {!chatBot && stayInTouch.apps.length > 0 && (\n                    <Column xs=\"0\" s=\"0\" m=\"0\" l=\"0\" container>\n                        <Gap top>\n                            <StayInTouch isInline analyticsFrom=\"sms_main\" />\n                        </Gap>\n                    </Column>\n                )}\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                    <Gap top>\n                        <div>\n                            {professionalRoleCategoryCollection && (\n                                <Column xs=\"0\" s=\"8\" m=\"12\" l=\"12\">\n                                    <WorkInProfession />\n                                </Column>\n                            )}\n                            {chatBot && (\n                                <>\n                                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"0\">\n                                        <div className=\"separator\" />\n                                        <Gap top>\n                                            <InternalPromoBlock isInline />\n                                        </Gap>\n                                    </Column>\n                                    <Column xs=\"0\" s=\"0\" m=\"0\" l=\"4\">\n                                        <InternalPromoBlock />\n                                    </Column>\n                                </>\n                            )}\n                            {!chatBot && stayInTouch.apps.length > 0 && (\n                                <>\n                                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"0\" container>\n                                        <Gap top>\n                                            <StayInTouch isInline analyticsFrom=\"sms_main\" />\n                                        </Gap>\n                                    </Column>\n                                    <Column xs=\"0\" s=\"0\" m=\"0\" l=\"4\" container>\n                                        <StayInTouch analyticsFrom=\"sms_main\" />\n                                    </Column>\n                                </>\n                            )}\n                            <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                                <div className=\"separator\" />\n                            </Column>\n                            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                                <NewsBox\n                                    items={news}\n                                    title={trls[TrlKeys.newsTitle]}\n                                    href=\"/articles/site-news\"\n                                    isEmployerContext={false}\n                                />\n                            </Column>\n                            <Column xs=\"0\" s=\"4\" m=\"4\" l={isZp ? '5' : '4'} container>\n                                <NewsBox\n                                    items={news}\n                                    title={trls[TrlKeys.newsTitle]}\n                                    href=\"/articles/site-news\"\n                                    isEmployerContext={false}\n                                    gapTop\n                                />\n                            </Column>\n                            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                                {bannersUnderNewsBoxMobile?.map((banner: BannerObject) => (\n                                    <Gap top bottom key={banner.id}>\n                                        <div data-page-analytics-event=\"advertising_banner.XSAfterNews\">\n                                            <AdsExternalBanner {...banner} />\n                                        </div>\n                                    </Gap>\n                                ))}\n                            </Column>\n                            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                                <NewsBox\n                                    items={articles}\n                                    title={trls[TrlKeys.articlesTitle]}\n                                    href=\"/articles\"\n                                    isArticle\n                                    isEmployerContext={false}\n                                    gapTop\n                                />\n                            </Column>\n                            <Column xs=\"0\" s=\"4\" m=\"4\" l={isZp ? '5' : '4'} container>\n                                <NewsBox\n                                    items={articles}\n                                    title={trls[TrlKeys.articlesTitle]}\n                                    href=\"/articles\"\n                                    isArticle\n                                    isEmployerContext={false}\n                                    gapTop\n                                />\n                            </Column>\n                            <Column xs=\"0\" s=\"8\" m=\"0\" l=\"0\">\n                                <div className=\"separator\" />\n                            </Column>\n                            <Column xs=\"0\" s=\"4\" m=\"4\" l={isZp ? '6' : '4'}>\n                                <UsefulLinks title={trls[TrlKeys.usefulTitle]} items={useful} />\n                            </Column>\n                            {!isZp && (\n                                <>\n                                    <Column xs=\"0\" s=\"0\" m=\"12\" l=\"0\">\n                                        <div className=\"separator\" />\n                                    </Column>\n                                    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                                        <Gap top>\n                                            <WorkInOtherCities />\n                                        </Gap>\n                                    </Column>\n                                </>\n                            )}\n                        </div>\n                    </Gap>\n                </Column>\n                <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                    <div className=\"separator\" />\n                </Column>\n                <ContainerForXSL place=\"work-in-city-xsl\" styleClass=\"work-in-city-wrapper\" />\n                <CreateResumeButton />\n                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                    {bannersUnderCreateResumeButton?.map((banner: BannerObject) => (\n                        <Gap bottom key={banner.id}>\n                            <div data-page-analytics-event=\"advertising_banner.XSBottom\">\n                                <AdsExternalBanner {...banner} />\n                            </div>\n                        </Gap>\n                    ))}\n                </Column>\n            </ColumnsWrapper>\n            {/* tempexp_27541_next_line*/}\n            <MainPageSignUpModal />\n        </>\n    );\n};\n\nexport default translation(IndexAnonymous);\n","import Analytics from '@hh.ru/analytics-js';\n\nexport const faqItemClick = (item: string): void =>\n    Analytics.sendHHEventButtonClick('faq_item', {\n        item,\n    });\n\nexport const faqItemsShown = (element: HTMLElement, items: string[]): void => {\n    Analytics.sendHHEventElementShown(element, {\n        name: 'faq_items',\n        item: items,\n    });\n};\n\nexport default {\n    faqItemClick,\n    faqItemsShown,\n};\n","import { useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { ArticleItemWithTopic } from 'lux/models/article.types';\n\nimport FAQAnalytics from 'lux/components/FAQ/analytics';\n\nconst TrlKeys = {\n    title: 'index.headers.FAQ',\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\ninterface FAQProps {\n    items: ArticleItemWithTopic[];\n    gapTop?: boolean;\n    isMedium?: boolean;\n}\n\nconst FAQ: TranslatedComponent<FAQProps> = ({ trls, gapTop = false, items, isMedium = true }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const faqItemsRef = useRef(null);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && items?.length && faqItemsRef.current) {\n            FAQAnalytics.faqItemsShown(\n                faqItemsRef.current,\n                items.map((item) => item.topic)\n            );\n        }\n    }, [employerMainPageAnalyticsEnabled, items]);\n\n    return (\n        <Gap top={gapTop}>\n            <H2 Element=\"h3\">{trls[TrlKeys.title]}</H2>\n            <VSpacing base={4} />\n            <div\n                ref={faqItemsRef}\n                className={classnames('multiple-column-list', {\n                    'multiple-column-list_medium-1': isMedium,\n                })}\n            >\n                {items.map(({ topic, href }, index) => (\n                    <div key={href} className=\"multiple-column-list-item\">\n                        <Text>\n                            <div\n                                className={classnames('easy-tap-link', {\n                                    'easy-tap-link_last': index === items.length - 1,\n                                })}\n                            >\n                                <Link\n                                    href={href}\n                                    kind={LinkKind.Tertiary}\n                                    onClick={\n                                        employerMainPageAnalyticsEnabled\n                                            ? () => FAQAnalytics.faqItemClick(topic)\n                                            : undefined\n                                    }\n                                >\n                                    {topic}\n                                </Link>\n                            </div>\n                        </Text>\n                    </div>\n                ))}\n            </div>\n        </Gap>\n    );\n};\n\nexport default translation(FAQ);\n","// extracted by mini-css-extract-plugin\nexport default {\"rsvUserCompetenciesModalTitle\":\"rsv-user-competencies-modal-title--wtbPpoTcFMmcMPa2X4yF\",\"rsvUserCompetenciesModalFooter\":\"rsv-user-competencies-modal-footer--_QZ5ncXLJlhgg47pLBeK\"};","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonAppearance, ButtonKind, ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport BlokoLink from 'bloko/blocks/link';\nimport Modal, { ModalContent, ModalFooter, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { updateRsvUserCompetenciesModal } from 'lux/models/rsvUserCompetencies';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './rsv-user-competencies.less';\n\nconst TrlKeys = {\n    title: 'rsvUserCompetenciesModal.title',\n    content: 'rsvUserCompetenciesModal.content',\n    close: 'rsvUserCompetenciesModal.close',\n    add: 'rsvUserCompetenciesModal.add',\n};\n\nconst RsvUserCompetenciesModal: TranslatedComponent = ({ trls }): JSX.Element => {\n    const hhidAccount = useSelector(({ hhidAccount }) => hhidAccount);\n    const dispatch = useDispatch();\n    const elementRef = useRef(null);\n    const handleCloseModal = () => {\n        Analytics.sendHHEventButtonClick('rsv_user_competencies_close');\n        dispatch(updateRsvUserCompetenciesModal(false));\n        dispatch(push('/'));\n    };\n\n    useEffect(() => {\n        if (elementRef.current) {\n            Analytics.sendHHEvent('element_shown', {\n                elementName: 'rsv_user_competencies_modal',\n            });\n        }\n    }, []);\n\n    return (\n        <div ref={elementRef}>\n            <Modal\n                closeButtonShow={false}\n                visible={true}\n                backgroundClick={false}\n                onClose={handleCloseModal}\n                style={{ width: '680px' }}\n            >\n                <ModalHeader>\n                    <ModalTitle>\n                        {hhidAccount ? (\n                            <>\n                                <span>{`${hhidAccount.firstName} `}</span>\n                                {hhidAccount.middleName && <span>{`${hhidAccount.middleName} `}</span>}\n                                <span>{`${hhidAccount.lastName}, `}</span>\n                                <span>{trls[TrlKeys.title]}</span>\n                            </>\n                        ) : (\n                            <span className={styles.rsvUserCompetenciesModalTitle}>{trls[TrlKeys.title]}</span>\n                        )}\n                    </ModalTitle>\n                </ModalHeader>\n                <ModalContent>\n                    <Text size={TextSize.Large}>{trls[TrlKeys.content]}</Text>\n                </ModalContent>\n                <ModalFooter className={styles.rsvUserCompetenciesModalFooter}>\n                    <BlokoLink>\n                        <Button type={ButtonType.Button} scale={ButtonScale.Large} onClick={handleCloseModal}>\n                            {trls[TrlKeys.close]}\n                        </Button>\n                    </BlokoLink>\n                    <HSpacing base={2} />\n                    <BlokoLink>\n                        <Button\n                            Element={Link}\n                            to=\"/rsv_user_competencies/check_token\"\n                            kind={ButtonKind.Primary}\n                            scale={ButtonScale.Large}\n                            appearance={ButtonAppearance.Filled}\n                            onClick={() => Analytics.sendHHEventButtonClick('rsv_user_competencies_add')}\n                        >\n                            {trls[TrlKeys.add]}\n                        </Button>\n                    </BlokoLink>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default translation(RsvUserCompetenciesModal);\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport Button, { ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Notification from 'bloko/blocks/notificationManager/Notification';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { updateRsvUserCompetenciesResult } from 'lux/models/rsvUserCompetencies';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    close: 'rsvUserCompetenciesNotification.close',\n    title: 'rsvUserCompetenciesNotification.title',\n    subtitle: 'rsvUserCompetenciesNotification.subtitle',\n    toProfile: 'rsvUserCompetenciesNotification.toProfile',\n};\n\nexport enum RedirectLinks {\n    LastResume = '/resume/',\n    Resumes = '/applicant/resumes',\n    Main = '/',\n    ScrollTo = 'scrollTo',\n}\n\nconst RsvUserCompetenciesNotification: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const applicantLatestResume = useSelector(({ applicantLatestResume }) => applicantLatestResume);\n    const { finished } = useSelector(({ applicantInfo }) => applicantInfo);\n\n    const handleClose = () => dispatch(updateRsvUserCompetenciesResult(null));\n\n    const handleRedirect = () => {\n        if (finished === 1 && applicantLatestResume) {\n            dispatch(\n                push(`${RedirectLinks.LastResume}${applicantLatestResume.resumeHash}?${RedirectLinks.ScrollTo}=rsv`)\n            );\n        } else if (finished > 1) {\n            dispatch(push(RedirectLinks.Resumes));\n        } else {\n            dispatch(push(RedirectLinks.Main));\n        }\n        handleClose();\n    };\n\n    return (\n        <Notification kind={NotificationKind.Ok} onClose={handleClose}>\n            <Text strong importance={TextImportance.Primary}>\n                {trls[TrlKeys.title]}\n            </Text>\n            <VSpacing base={1} />\n            <Text importance={TextImportance.Secondary}>{trls[TrlKeys.title]}</Text>\n            <VSpacing base={4} />\n            <Button type={ButtonType.Button} scale={ButtonScale.Small} onClick={handleRedirect}>\n                {trls[TrlKeys.toProfile]}\n            </Button>\n            <HSpacing base={2} />\n            <Button type={ButtonType.Button} scale={ButtonScale.Small} onClick={handleClose}>\n                {trls[TrlKeys.close]}\n            </Button>\n        </Notification>\n    );\n};\n\nexport default translation(RsvUserCompetenciesNotification);\n","import { useEffect, useState } from 'react';\n\nimport Notification from 'bloko/blocks/notificationManager/Notification';\nimport { NotificationKind } from 'bloko/blocks/notificationManager/constants';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    alreadyBound: 'rsvUserCompetenciesNotification.alreadyBound',\n    error: 'rsvUserCompetenciesNotification.error',\n};\n\nconst RsvUserCompetenciesNotificationError: TranslatedComponent = ({ trls }) => {\n    const [isRSVFail, setRSVFail] = useState('');\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window?.location.search);\n        const isFlag = urlParams.get('fail');\n        const errorText = urlParams.get('error');\n        if (isFlag) {\n            if (errorText === 'alreadyBound') {\n                setRSVFail(trls[TrlKeys.alreadyBound]);\n            } else {\n                setRSVFail(trls[TrlKeys.error]);\n            }\n        }\n    }, [trls]);\n\n    if (!isRSVFail) {\n        return null;\n    }\n\n    return (\n        <Notification kind={NotificationKind.Error} autoClose>\n            <Text>{isRSVFail}</Text>\n        </Notification>\n    );\n};\n\nexport default translation(RsvUserCompetenciesNotificationError);\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card--OwbBaVkGez4veyqfVtQq\",\"cardDisabled\":\"card_disabled--A0yx8s3GMLUqAT1aUkOq\",\"cardContentWrapper\":\"card-content-wrapper--s87KkxlBVOX3H6fTfAeu\",\"cardDescription\":\"card-description--JEhjBYXEvdyuzWttSdQY\",\"cardFooter\":\"card-footer--iypeRopqVChrsu4XRsL0\",\"cardIconWrapper\":\"card-icon-wrapper--KyLJvgknE9d56o0dkFL7\",\"cardIcon\":\"card-icon--IIUFbntzLTAneV78NSTb\",\"cardIconUp\":\"card-icon_up--BIt6AQmxlbeLU2YAAI6h\",\"cardIconAutoUpdate\":\"card-icon_auto-update--tHUkfoXJjBjmsKa_MqGg\",\"cardIconAddResume\":\"card-icon_add-resume--xPBbxgEuGbksR1dvrqJt\"};","import { ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport styles from './card.less';\n\nexport enum CardType {\n    Up = 'up',\n    AutoUpdate = 'auto-update',\n    AddResume = 'add-resumes',\n}\n\ninterface CardProps {\n    caption: ReactNode;\n    description?: string;\n    linkText: string;\n    renderIcon?: () => ReactNode;\n    onClick?: () => unknown;\n    linkTo?: string;\n    type?: CardType;\n    isDisabled?: boolean;\n    dataQa?: string;\n}\n\nconst Card: TranslatedComponent<CardProps> = ({\n    caption,\n    description,\n    linkText,\n    renderIcon,\n    type,\n    isDisabled,\n    onClick,\n    linkTo,\n    dataQa,\n}) => {\n    const cardClassName = classnames(styles.card, { [styles.cardDisabled]: isDisabled });\n\n    const renderCard = () => (\n        <>\n            <div data-qa={dataQa} className={styles.cardContentWrapper}>\n                <div>\n                    <Text strong>{caption}</Text>\n                    <VSpacing base={2} />\n                    {description && (\n                        <div className={styles.cardDescription}>\n                            <Text importance={TextImportance.Secondary}>{description}</Text>\n                        </div>\n                    )}\n                </div>\n                <div className={styles.cardIconWrapper}>\n                    {type && (\n                        <div\n                            className={classnames(styles.cardIcon, {\n                                [styles.cardIconUp]: type === CardType.Up,\n                                [styles.cardIconAutoUpdate]: type === CardType.AutoUpdate,\n                                [styles.cardIconAddResume]: type === CardType.AddResume,\n                            })}\n                        />\n                    )}\n                    {renderIcon?.()}\n                </div>\n            </div>\n            <VSpacing base={2} />\n            <div className={styles.cardFooter}>\n                <Text strong>\n                    <BlokoLink>{linkText}</BlokoLink>\n                </Text>\n            </div>\n        </>\n    );\n\n    if (linkTo) {\n        return (\n            <Link to={linkTo} className={cardClassName} onClick={onClick}>\n                {renderCard()}\n            </Link>\n        );\n    }\n\n    return (\n        <div className={cardClassName} onClick={onClick}>\n            {renderCard()}\n        </div>\n    );\n};\n\nexport default translation(Card);\n","import { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport resumeCreationCardShown from '@hh.ru/analytics-js-events/build/xhh/applicant/experiments/PORTFOLIO-26342/resume_creation_card_shown';\nimport buttonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/main/button_click';\nimport { H3Section } from 'bloko/blocks/header';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Card, { CardType } from 'lux/components/IndexPageApplicant/Actions/Card';\n\nconst TrlKeys = {\n    title: 'index.applicant.actions.createResume.title',\n    link: 'index.applicant.actions.createResume.link',\n    description: 'index.applicant.actions.createResume.description',\n};\n\nconst CreateResume: TranslatedComponent = ({ trls }) => {\n    const resumesForUpdate = useSelector((state) => state.resumesForUpdate);\n    const canUpdate = (resumesForUpdate?.length || 0) > 0;\n\n    if (canUpdate) {\n        return null;\n    }\n\n    return (\n        <ElementShownAnchor fn={resumeCreationCardShown}>\n            <Card\n                dataQa=\"applicant-index-nba-action_create-resume\"\n                caption={<H3Section>{trls[TrlKeys.title]}</H3Section>}\n                description={trls[TrlKeys.description]}\n                linkText={trls[TrlKeys.link]}\n                type={CardType.AddResume}\n                linkTo=\"/applicant/resumes/new\"\n                onClick={() => {\n                    buttonClick({ buttonName: 'create_resume_card' });\n                }}\n            />\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(CreateResume);\n","import { useSelector } from 'lux/modules/useSelector';\n\nexport const useCanUpdateResumes = (): boolean => {\n    const resumesForUpdate = useSelector((state) => state.resumesForUpdate);\n    return (resumesForUpdate?.length || 0) > 0;\n};\n","import { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport resumeHasBeenUpdatedCardShown from '@hh.ru/analytics-js-events/build/xhh/applicant/experiments/PORTFOLIO-26342/resume_has_been_updated_card_shown';\nimport buttonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/main/button_click';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Card, { CardType } from 'lux/components/IndexPageApplicant/Actions/Card';\nimport { useCanUpdateResumes } from 'lux/components/IndexPageApplicant/Actions/useCanUpdateResumes';\n\nconst TrlKeys = {\n    title: 'index.applicant.actions.enableResumeAutoUpdate.title',\n    link: 'index.applicant.actions.enableResumeAutoUpdate.link',\n    description: 'index.applicant.actions.enableResumeAutoUpdate.description',\n};\n\nconst UpdateResumes: TranslatedComponent = ({ trls }) => {\n    const canUpdateResumes = useCanUpdateResumes();\n    const autoUpdateAvailable = useSelector((state) => state.autoUpdateAvailableForAnyResume);\n\n    if (canUpdateResumes || !autoUpdateAvailable) {\n        return null;\n    }\n\n    return (\n        <ElementShownAnchor fn={resumeHasBeenUpdatedCardShown}>\n            <Card\n                dataQa=\"applicant-index-nba-action_enable-resume-autoupdate\"\n                caption={trls[TrlKeys.title]}\n                description={trls[TrlKeys.description]}\n                linkText={trls[TrlKeys.link]}\n                type={CardType.AutoUpdate}\n                linkTo=\"/applicant/services/findjob\"\n                onClick={() => {\n                    buttonClick({ buttonName: 'update_automatically_card' });\n                }}\n            />\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(UpdateResumes);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container--EVMpYG8gJbfZ632atcfj\",\"contentWrapper\":\"content-wrapper--HTMioaCIl8oBWB_K_jmi\",\"content\":\"content--eMvr3EFvweJ05S7wMkoA\",\"circleBackground\":\"circle-background--c7I48uUFeFTrMAIXN8VQ\",\"circleProgress\":\"circle-progress--Z95uOPhWjP2tfsYWGazT\"};","import { FC, PropsWithChildren, useEffect, useState } from 'react';\n\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport styles from './circle-progress.less';\n\ninterface CircleSvgProps {\n    progress: number;\n    showProgress?: boolean;\n    startProgress?: number;\n}\n\nconst SVG_SIZE = 48;\nconst STROKE_WIDTH = 5;\n\nconst CircleProgress: FC<CircleSvgProps & PropsWithChildren> = ({\n    progress = 0,\n    showProgress = false,\n    children = false,\n    startProgress,\n}) => {\n    const [currentProgress, setCurrentProgress] = useState<number>(\n        startProgress !== undefined ? startProgress : progress\n    );\n    const radius = SVG_SIZE / 2;\n    const insetRadius = radius - STROKE_WIDTH / 2;\n    const strokeDasharray = Math.PI * (insetRadius * 2);\n    const strokeDashoffset = currentProgress * strokeDasharray;\n\n    useEffect(() => {\n        setCurrentProgress(progress);\n    }, [progress]);\n\n    return (\n        <div className={styles.container}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle\n                    className={styles.circleBackground}\n                    r={insetRadius}\n                    cx={radius}\n                    cy={radius}\n                    fill=\"none\"\n                    strokeDasharray=\"0\"\n                    strokeDashoffset=\"0\"\n                    strokeWidth=\"5\"\n                />\n                <circle\n                    className={styles.circleProgress}\n                    r={insetRadius}\n                    cx={radius}\n                    cy={radius}\n                    fill=\"none\"\n                    strokeDasharray={strokeDasharray}\n                    strokeDashoffset={strokeDashoffset}\n                    transform={`rotate(-90,${radius},${radius})`}\n                    strokeWidth=\"5\"\n                    strokeLinecap=\"round\"\n                />\n            </svg>\n            <div className={styles.contentWrapper}>\n                <div className={styles.content}>\n                    {showProgress && (\n                        <Text strong size={TextSize.Large}>\n                            {Math.round(progress * 100)}\n                        </Text>\n                    )}\n                    {!showProgress && children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CircleProgress;\n","// extracted by mini-css-extract-plugin\nexport default {\"responseStreakSuccessWrapper\":\"response-streak-success-wrapper--nqxeg1Pse7Wg8ttknUNx\",\"responseStreakSuccess\":\"response-streak-success--NnUMWhrt24FIfCJlEL1p\",\"responseStreakSuccessBadge\":\"response-streak-success-badge--OWmyMsvdRfYCs0l523Mu\",\"responseStreakSuccessBadge1\":\"response-streak-success-badge-1--CloIB3dMsNbfZoA9yqee\",\"responseStreakSuccessBadge2\":\"response-streak-success-badge-2--tYhmdh59e6_ByImiBNdj\",\"responseStreakSuccessBadge3\":\"response-streak-success-badge-3--BmaRXxJfeAKsMeF_n_rq\",\"responseStreakSuccessBadge4\":\"response-streak-success-badge-4--NejcHmHdKSlMejj8Hty9\",\"responseStreakSuccessBadge5\":\"response-streak-success-badge-5--i2UkE6Cbz6cu__Vo0JZQ\",\"responseStreakSuccessBadge6\":\"response-streak-success-badge-6--YHwYDe_qVy54VTf_0Aqo\",\"responseStreakSuccessBadge7\":\"response-streak-success-badge-7--VeJ2Yl_8ZP9Qme0w4s3d\"};","import classnames from 'classnames';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport responseCardShown from '@hh.ru/analytics-js-events/build/xhh/applicant/experiments/PORTFOLIO-26342/response_card_shown';\nimport buttonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/main/button_click';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport LoopCounterParser, { LoopCounterStage } from 'Modules/LoopCounterParser';\nimport translation from 'lux/components/translation';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Card from 'lux/components/IndexPageApplicant/Actions/Card';\nimport CircleProgress from 'lux/components/IndexPageApplicant/Actions/CircleProgress';\n\nimport styles from './response-streak.less';\n\nconst SUCCESS_BADGES_TOTAL = 7;\n\nconst TrlKeys = {\n    link: {\n        success: 'index.applicant.actions.responseStreak.success.link',\n        progress: 'index.applicant.actions.responseStreak.progress.link',\n    },\n    title: {\n        success: 'index.applicant.actions.responseStreak.success.title',\n        progress: 'index.applicant.actions.responseStreak.progress.title',\n        progressStart: 'index.applicant.actions.responseStreak.progressStart.title',\n    },\n    vacancyAccusative: {\n        one: 'vacancies.accusative.one',\n        some: 'vacancies.accusative.some',\n        many: 'vacancies.accusative.many',\n    },\n};\n\nconst ResponseStreak: TranslatedComponent = ({ trls }) => {\n    const responseStreak = useSelector((state) => state.applicantResponseStreaks.overall);\n    const recommendedVacancies = useSelector((state) => state.recommendedVacancies);\n\n    if (!responseStreak) {\n        return null;\n    }\n\n    const isProgressStart = responseStreak.responsesCount === 0;\n    const queries = recommendedVacancies?.queries;\n    const fullSearchLink = `${paths.vacancySearch}?${queries ? queries.itemsOnPageBase : ''}`;\n\n    const { roundCounter, completeStepCounter, stage } = LoopCounterParser(\n        responseStreak.responsesRequired,\n        responseStreak.responsesCount\n    );\n    const responsesLeft = responseStreak.responsesRequired - completeStepCounter;\n    const progress = responsesLeft / responseStreak.responsesRequired;\n    const badgeNumber = Math.min(SUCCESS_BADGES_TOTAL, roundCounter);\n\n    const renderIcon = () => {\n        if (stage === LoopCounterStage.Success) {\n            return (\n                <div className={styles.responseStreakSuccessWrapper}>\n                    <div className={styles.responseStreakSuccess}>\n                        <div\n                            className={classnames(\n                                styles.responseStreakSuccessBadge,\n                                styles[`responseStreakSuccessBadge${badgeNumber}`]\n                            )}\n                        ></div>\n                        <Text>{roundCounter}</Text>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <CircleProgress progress={progress}>\n                <Text size={TextSize.ExtraLarge} strong>\n                    {responsesLeft}\n                </Text>\n            </CircleProgress>\n        );\n    };\n\n    return (\n        <ElementShownAnchor fn={responseCardShown} responseCount={responseStreak.responsesCount}>\n            <Card\n                dataQa=\"applicant-index-nba-action_response-streak\"\n                caption={\n                    stage === LoopCounterStage.Success\n                        ? trls[TrlKeys.title.success]\n                        : formatToReactComponent(\n                              isProgressStart ? trls[TrlKeys.title.progressStart] : trls[TrlKeys.title.progress],\n                              {\n                                  '{}': (\n                                      <ConversionNumber\n                                          many={trls[TrlKeys.vacancyAccusative.many]}\n                                          one={trls[TrlKeys.vacancyAccusative.one]}\n                                          some={trls[TrlKeys.vacancyAccusative.some]}\n                                          value={responsesLeft}\n                                      />\n                                  ),\n                              }\n                          )\n                }\n                linkText={stage === LoopCounterStage.Success ? trls[TrlKeys.link.success] : trls[TrlKeys.link.progress]}\n                renderIcon={renderIcon}\n                linkTo={fullSearchLink}\n                onClick={() => {\n                    if (stage === LoopCounterStage.Success) {\n                        buttonClick({ buttonName: 'view_vacancies_continue_to_response_card' });\n                    } else {\n                        buttonClick({ buttonName: 'view_vacancies_response_card' });\n                    }\n                }}\n            />\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(ResponseStreak);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AxiosError } from 'axios';\nimport { push } from 'connected-react-router';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport updateResumeCardShown from '@hh.ru/analytics-js-events/build/xhh/applicant/experiments/PORTFOLIO-26342/update_resume_card_shown';\nimport buttonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/main/button_click';\nimport { HhcaptchaType, RecaptchaType } from '@hh.ru/hhcaptcha';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport Debug from 'HHC/Debug';\nimport { RESUME_BATCH_UPDATE_ERROR, RESUME_BATCH_UPDATE_SUCCESS } from 'lux/components/Notifications/ResumeBatchUpdate';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport Card, { CardType } from 'lux/components/IndexPageApplicant/Actions/Card';\nimport { useCanUpdateResumes } from 'lux/components/IndexPageApplicant/Actions/useCanUpdateResumes';\n\ninterface BatchUpdateResponseData {\n    hhcaptcha?: HhcaptchaType;\n    recaptcha?: RecaptchaType;\n    updateError?: string;\n}\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/resume/batch_update': {\n            queryParams: void;\n            body: null;\n            response: {\n                data?: BatchUpdateResponseData;\n            };\n        };\n    }\n}\n\nconst TrlKeys = {\n    title: 'index.applicant.actions.updateResumes.title',\n    update: 'index.applicant.actions.updateResumes.update',\n};\n\nconst setResumesForUpdateAction = makeSetStoreField('resumesForUpdate');\n\nconst createCaptchaUrl = (captchaState: string | null | undefined) => {\n    const url = urlParser('/account/captcha');\n\n    url.params = {\n        state: captchaState,\n        backurl: document.location.toString(),\n    };\n\n    return url.href;\n};\n\nconst UpdateResumes: TranslatedComponent = ({ trls }) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const resumesForUpdate = useSelector((state) => state.resumesForUpdate);\n    const canUpdateResumes = useCanUpdateResumes();\n    const dispatch = useDispatch();\n\n    if (!canUpdateResumes) {\n        return null;\n    }\n\n    const handleClick = () => {\n        buttonClick({ buttonName: 'update_resume_card' });\n        setIsLoading(true);\n        fetcher\n            .post('/shards/resume/batch_update')\n            .then(() => {\n                dispatch(addNotification(RESUME_BATCH_UPDATE_SUCCESS));\n                dispatch(setResumesForUpdateAction([]));\n            })\n            .catch((error: AxiosError<BatchUpdateResponseData>) => {\n                if (error.response?.data?.hhcaptcha?.isBot || error.response?.data?.recaptcha?.isBot) {\n                    const captchaState =\n                        error.response?.data?.hhcaptcha?.captchaState || error.response?.data?.recaptcha?.captchaState;\n                    dispatch(push(createCaptchaUrl(captchaState)));\n                    return;\n                }\n\n                Debug.log('out error', new Error('Error batch updating resumes'), {\n                    reason: error.response?.data?.updateError,\n                    length: resumesForUpdate?.length,\n                    resumes: resumesForUpdate?.join(','),\n                });\n                console.error(error);\n                dispatch(addNotification(RESUME_BATCH_UPDATE_ERROR));\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n\n    return (\n        <ElementShownAnchor fn={updateResumeCardShown}>\n            <Card\n                dataQa=\"applicant-index-nba-action_update-resumes\"\n                caption={trls[TrlKeys.title]}\n                linkText={trls[TrlKeys.update]}\n                type={CardType.Up}\n                isDisabled={isLoading}\n                onClick={handleClick}\n            />\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(UpdateResumes);\n","// extracted by mini-css-extract-plugin\nexport default {\"actionsWrapper\":\"actions-wrapper--yO7x3pMCYapdzgPEjbVP\",\"cardsScroller\":\"cards-scroller--MJxYMwezQ5k2llaUQQkA\",\"cardsWrapper\":\"cards-wrapper--AubFYzwyFM24IJ8HrzjO\"};","import { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport CreateResume from 'lux/components/IndexPageApplicant/Actions/CreateResume';\nimport EnableResumeAutoUpdate from 'lux/components/IndexPageApplicant/Actions/EnableResumeAutoUpdate';\nimport ResponseStreak from 'lux/components/IndexPageApplicant/Actions/ResponseStreak';\nimport UpdateResumes from 'lux/components/IndexPageApplicant/Actions/UpdateResumes';\n\nimport styles from './actions.less';\n\nconst TrlKeys = {\n    title: 'index.applicant.actions.title',\n};\n\ninterface ActionsProps {\n    hasResumes: boolean;\n    hasFinishedResumes: boolean;\n}\n\nconst Actions: TranslatedComponent<ActionsProps> = ({ hasResumes, hasFinishedResumes, trls }) => {\n    return (\n        <div>\n            {hasResumes && (\n                <>\n                    <div className={styles.actionsWrapper}>\n                        <VSpacing base={7} />\n                        <H2>{trls[TrlKeys.title]}</H2>\n                    </div>\n                    <VSpacing base={5} xs={3} />\n                </>\n            )}\n            {!hasResumes && <VSpacing base={7} xs={0} />}\n            <div className={styles.cardsScroller}>\n                <div className={styles.cardsWrapper}>\n                    {!hasResumes && <CreateResume />}\n                    {hasFinishedResumes && (\n                        <>\n                            <UpdateResumes />\n                            <EnableResumeAutoUpdate />\n                        </>\n                    )}\n\n                    {hasResumes && <ResponseStreak />}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(Actions);\n","import classnames from 'classnames';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Conversion from 'bloko/blocks/conversion';\nimport { H2, H4Section } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    header: 'index.headers.events',\n    letters: 'index.events.letters',\n    views: 'index.events.views',\n    selectedVacancies: 'index.events.selectedVacancies',\n    autosearches: 'index.events.autosearches',\n    moreThenOneThousand: 'index.events.morethan1k',\n    zero: 'applicant.counters.zero',\n    countersViews: {\n        one: 'applicant.counters.views.one',\n        some: 'applicant.counters.views.some',\n        many: 'applicant.counters.views.many',\n    },\n    countersResponses: {\n        one: 'applicant.counters.responses.one',\n        some: 'applicant.counters.responses.some',\n        many: 'applicant.counters.responses.many',\n    },\n    countersSavedSearches: {\n        one: 'applicant.counters.savedSearches.one',\n        some: 'applicant.counters.savedSearches.some',\n        many: 'applicant.counters.savedSearches.many',\n    },\n};\n\ninterface EventsListProps {\n    isMobile?: boolean;\n}\n\nconst getAnalyticsString = (modifier: string) => {\n    let analyticsEvent = 'favorite_vacancy_list_dashboard';\n    if (modifier === 'views') {\n        analyticsEvent = 'resume_view_history_dashboard';\n    } else if (modifier === 'letters') {\n        analyticsEvent = 'negotiation_list_dashboard';\n    } else if (modifier === 'autosearches') {\n        analyticsEvent = 'vacancy_autosearch_list_dashboard';\n    }\n    return analyticsEvent;\n};\n\nconst EventsList: TranslatedComponent<EventsListProps> = ({ trls, isMobile }) => {\n    const userStats = useSelector((state) => state.userStats);\n    const favoriteVacanciesCount = useSelector((state) => state.favoriteVacanciesCount) || 0;\n    const savedVacancySearch = useSelector((state) => state.savedVacancySearch);\n\n    const renderNewCount = (count: number | undefined) => {\n        if (count && count > 0) {\n            return (\n                <span className=\"applicant-counter-value-new\">\n                    {NON_BREAKING_SPACE}+{count}\n                </span>\n            );\n        }\n        return null;\n    };\n\n    const getInvitationsCount = () => {\n        const applicantInvitations = userStats?.['applicant-invitations'];\n        const newApplicantInvitations = userStats?.['new-applicant-invitations'];\n        if (isMobile) {\n            const hideCount = !applicantInvitations && newApplicantInvitations;\n            return (\n                <>\n                    <H4Section Element=\"div\">\n                        <>\n                            {!hideCount && (applicantInvitations || trls[TrlKeys.zero])}\n                            {renderNewCount(newApplicantInvitations)}\n                        </>\n                    </H4Section>\n                    <div>\n                        <Conversion\n                            value={applicantInvitations || 0}\n                            one={trls[TrlKeys.countersResponses.one]}\n                            some={trls[TrlKeys.countersResponses.some]}\n                            many={trls[TrlKeys.countersResponses.many]}\n                            zero={trls[TrlKeys.countersResponses.many]}\n                            hasValue={false}\n                        />\n                    </div>\n                </>\n            );\n        }\n        if (newApplicantInvitations && newApplicantInvitations > 0) {\n            return <span className=\"event-counter event-counter_new-events\">+{newApplicantInvitations}</span>;\n        }\n        if (applicantInvitations !== undefined) {\n            const text = applicantInvitations > 999 ? trls[TrlKeys.moreThenOneThousand] : applicantInvitations;\n            return <span className=\"event-counter\">{text}</span>;\n        }\n        return null;\n    };\n\n    const getResumeViewsCount = () => {\n        const resumesViews = userStats?.['resumes-views'];\n        const hasResumeViews = resumesViews !== undefined;\n        const newResumesViews = userStats?.['new-resumes-views'];\n        if (isMobile) {\n            return (\n                <>\n                    <H4Section Element=\"div\">\n                        <>\n                            {resumesViews || trls[TrlKeys.zero]}\n                            {hasResumeViews && renderNewCount(newResumesViews)}\n                        </>\n                    </H4Section>\n                    <div>\n                        <Conversion\n                            value={resumesViews || 0}\n                            one={trls[TrlKeys.countersViews.one]}\n                            some={trls[TrlKeys.countersViews.some]}\n                            many={trls[TrlKeys.countersViews.many]}\n                            zero={trls[TrlKeys.countersViews.many]}\n                            hasValue={false}\n                        />\n                    </div>\n                </>\n            );\n        }\n        if (newResumesViews && newResumesViews > 0) {\n            return <span className=\"event-counter event-counter_new-events\">+{newResumesViews}</span>;\n        }\n        if (resumesViews !== undefined) {\n            return <span className=\"event-counter\">{resumesViews}</span>;\n        }\n        return null;\n    };\n\n    const getAutosearchesCount = () => {\n        const totalItems = savedVacancySearch?.totalItems;\n        if (isMobile) {\n            return (\n                <>\n                    <H4Section Element=\"div\">{totalItems || trls[TrlKeys.zero]}</H4Section>\n                    <div>\n                        <Conversion\n                            value={totalItems || 0}\n                            one={trls[TrlKeys.countersSavedSearches.one]}\n                            some={trls[TrlKeys.countersSavedSearches.some]}\n                            many={trls[TrlKeys.countersSavedSearches.many]}\n                            zero={trls[TrlKeys.countersSavedSearches.many]}\n                            hasValue={false}\n                        />\n                    </div>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const eventsMap = {\n        invitations: {\n            link: '/applicant/negotiations',\n            modifier: 'letters',\n            name: trls[TrlKeys.letters],\n            count: getInvitationsCount(),\n        },\n        applicantResumes: {\n            link: '/applicant/resumes',\n            modifier: 'views',\n            name: trls[TrlKeys.views],\n            count: getResumeViewsCount(),\n        },\n        favoriteVacancies: {\n            link: '/applicant/favorite_vacancies',\n            modifier: 'selected-vacancies',\n            name: trls[TrlKeys.selectedVacancies],\n            count: favoriteVacanciesCount,\n        },\n        autosearch: {\n            link: '/applicant/autosearch.xml',\n            modifier: 'autosearches',\n            name: trls[TrlKeys.autosearches],\n            count: getAutosearchesCount(),\n        },\n    };\n\n    if (isMobile) {\n        const events = [eventsMap.applicantResumes, eventsMap.invitations, eventsMap.autosearch];\n        return (\n            <div className=\"applicant-counters\">\n                {events.map((event) => {\n                    const analyticsEvent = getAnalyticsString(event.modifier);\n                    return (\n                        <Link\n                            to={event.link}\n                            className=\"applicant-counter\"\n                            data-page-analytics-event={analyticsEvent}\n                            key={event.link}\n                        >\n                            {event.count}\n                        </Link>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    const events = [\n        eventsMap.invitations,\n        eventsMap.applicantResumes,\n        eventsMap.favoriteVacancies,\n        eventsMap.autosearch,\n    ];\n\n    return (\n        <>\n            <H2>{trls[TrlKeys.header]}</H2>\n            <VSpacing base={4} />\n            <div className=\"my-events-list-wrapper\">\n                {events.map((event) => {\n                    const analyticsEvent = getAnalyticsString(event.modifier);\n                    return (\n                        <Link\n                            to={event.link}\n                            className={classnames(\n                                'my-events__item my-events__item_xs-friendly my-events__item_letters',\n                                {\n                                    [`my-events__item_${event.modifier}`]: event.modifier,\n                                }\n                            )}\n                            data-page-analytics-event={analyticsEvent}\n                            key={event.link}\n                        >\n                            <Text Element=\"span\">\n                                <span className=\"my-events__name\">{event.name}</span>\n                                <span className=\"my-events__count\">{event.count}</span>\n                            </Text>\n                        </Link>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default translation(EventsList);\n","// extracted by mini-css-extract-plugin\nexport default {\"headerWrapper\":\"header-wrapper--eMftwNPZ9JQU5y8roA8m\",\"headerMapButton\":\"header-map-button--FTM_sH4nyUjYgcFFBGiH\",\"headerSearchLink\":\"header-search-link--NIU1x4oU2u36jKNDkNfR\"};","import { useEffect } from 'react';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonIconPosition, ButtonKind } from 'bloko/blocks/button';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { H2 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport format from 'bloko/common/format';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport Debug from 'HHC/Debug';\nimport VacancySearchItem from 'lux/components/VacancySearchItem';\nimport Source from 'lux/components/VacancySearchItem/Source';\nimport translation from 'lux/components/translation';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './recommended-vacancies.less';\n\nconst TrlKeys = {\n    header: 'index.applicant.recommendedVacancies.header',\n    allShort: 'index.applicant.recommendedVacancies.all.short',\n    allFull: 'index.applicant.recommendedVacancies.all.full',\n    onMap: 'index.applicant.recommendedVacancies.onMap',\n    subheader: {\n        forResume: 'index.applicant.recommendedVacancies.subheader.forResume',\n        noResume: 'index.applicant.recommendedVacancies.subheader.noResume',\n    },\n    vacancies: {\n        one: 'index.applicant.recommendedVacancies.vacancies.one',\n        some: 'index.applicant.recommendedVacancies.vacancies.some',\n        many: 'index.applicant.recommendedVacancies.vacancies.many',\n    },\n};\n\nconst RecommendedVacancies: TranslatedComponent = ({ trls }) => {\n    const recommendedVacancies = useSelector((state) => state.recommendedVacancies);\n    const applicantLatestResume = useSelector((state) => state.applicantLatestResume);\n    const isXs = useBreakpoint() === Breakpoint.XS;\n\n    useEffect(() => {\n        if (!recommendedVacancies || !recommendedVacancies.resultsFound) {\n            Debug.log('out error', new Error('Empty recommended vacancies on applicant main redesign'));\n        }\n    }, [recommendedVacancies]);\n\n    if (!recommendedVacancies || !recommendedVacancies.resultsFound) {\n        return null;\n    }\n\n    const renderSubheader = () => {\n        if (applicantLatestResume?.title) {\n            return format(trls[TrlKeys.subheader.forResume], {\n                '{0}': applicantLatestResume.title,\n            });\n        }\n        return trls[TrlKeys.subheader.noResume];\n    };\n\n    const hasVacanciesWithAddress = recommendedVacancies.hasVacanciesWithAddress;\n    const queries = recommendedVacancies.queries;\n    const fullSearchLink = `${paths.vacancySearch}?${queries.itemsOnPageBase}`;\n    const showSearchLink = recommendedVacancies.resultsFound > recommendedVacancies.itemsOnPage;\n\n    return (\n        <>\n            <div className={styles.headerWrapper}>\n                <div>\n                    <H2>{trls[TrlKeys.header]}</H2>\n                    <VSpacing base={2} />\n                    <Text>{renderSubheader()}</Text>\n                </div>\n                <div className={styles.headerMapButton}>\n                    {hasVacanciesWithAddress && (\n                        <Button\n                            data-qa=\"applicant-index-search-map-button\"\n                            Element={Link}\n                            to={`${paths.vacancySearchMap}?${queries.map}`}\n                            icon={<span className=\"search-filters__button-map-icon\" />}\n                            iconPosition={ButtonIconPosition.Left}\n                        >\n                            {trls[TrlKeys.onMap]}\n                        </Button>\n                    )}\n                </div>\n                <div className={styles.headerSearchLink}>\n                    {showSearchLink && (\n                        <Link to={fullSearchLink}>\n                            {format(trls[TrlKeys.allShort], { '{0}': recommendedVacancies.resultsFound })}\n                        </Link>\n                    )}\n                </div>\n            </div>\n            <VSpacing base={6} xs={4} />\n            {recommendedVacancies.vacancies.map((vacancy) => (\n                <VacancySearchItem\n                    key={vacancy.vacancyId}\n                    vacancy={vacancy}\n                    vacancySource={Source.RecommendedVacanciesOnMain}\n                    isXs={isXs}\n                />\n            ))}\n            {showSearchLink && (\n                <>\n                    <VSpacing base={3} />\n                    <Button\n                        data-qa=\"applicant-index-search-all-results-button\"\n                        Element={Link}\n                        to={fullSearchLink}\n                        kind={ButtonKind.Primary}\n                        stretched\n                    >\n                        {formatToReactComponent(trls[TrlKeys.allFull], {\n                            '{0}': (\n                                <ConversionNumber\n                                    hasValue={true}\n                                    value={recommendedVacancies.resultsFound}\n                                    many={trls[TrlKeys.vacancies.many]}\n                                    some={trls[TrlKeys.vacancies.some]}\n                                    one={trls[TrlKeys.vacancies.one]}\n                                />\n                            ),\n                        })}\n                    </Button>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default translation(RecommendedVacancies);\n","import { FC, PropsWithChildren, useEffect } from 'react';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport VSpacingContainer from 'bloko/blocks/vSpacing/VSpacingContainer';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { BannerObject, BannerPlace } from 'lux/models/banners';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\n\nimport Actions from 'lux/components/IndexPageApplicant/Actions';\nimport EventList from 'lux/components/IndexPageApplicant/EventList';\nimport RecommendedVacanciesList from 'lux/components/IndexPageApplicant/RecommendedVacancies/RecommendedVacancies';\n\nconst ApplicantDashboard: FC<PropsWithChildren> = () => {\n    const applicantInfo = useSelector((state) => state.applicantInfo);\n    const bannersDashboard = useSelector((state) => state.banners[BannerPlace.DASHBOARD]);\n\n    useEffect(() => {\n        UXFeedback.sendEvent('applicant_main_page_facelift');\n    }, []);\n\n    return (\n        <ColumnsWrapper>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                <div className=\"supernova-dashboard-mobile-wrapper\">\n                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                        {applicantInfo?.total > 0 && (\n                            <div className=\"index-dashboard-applicant\">\n                                <EventList isMobile />\n                            </div>\n                        )}\n                        <VSpacing base={0} xs={2} />\n                        <Actions\n                            hasResumes={applicantInfo?.total > 0}\n                            hasFinishedResumes={applicantInfo?.finished > 0}\n                        />\n                        <VSpacing base={0} xs={3} />\n                    </Column>\n                </div>\n                <Column xs=\"0\" s=\"8\" m=\"4\" l=\"4\">\n                    <div className=\"index-dashboard-applicant-sidebar\">\n                        {applicantInfo?.total > 0 && (\n                            <>\n                                <VSpacing base={7} />\n                                <div className=\"my-events\">\n                                    <EventList />\n                                </div>\n                                <div className=\"separator\" />\n                            </>\n                        )}\n                        <Actions\n                            hasResumes={applicantInfo?.total > 0}\n                            hasFinishedResumes={applicantInfo?.finished > 0}\n                        />\n                    </div>\n                    <VSpacing base={5} />\n                    <Column xs=\"0\" s=\"0\" m=\"3\" l=\"3\" container>\n                        <VSpacingContainer base={5}>\n                            {bannersDashboard?.map((banner: BannerObject) => (\n                                <AdsExternalBanner {...banner} key={banner.id} />\n                            ))}\n                        </VSpacingContainer>\n                    </Column>\n                </Column>\n                <Column xs=\"0\" s=\"8\" m=\"0\" l=\"0\">\n                    <div className=\"separator\" />\n                </Column>\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"12\">\n                    <VSpacing base={7} />\n                    <RecommendedVacanciesList />\n                </Column>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <VSpacing base={14} xs={3} />\n                    <div className=\"separator\" />\n                </Column>\n            </Column>\n        </ColumnsWrapper>\n    );\n};\n\nexport default ApplicantDashboard;\n","import { FC, PropsWithChildren, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport LocalStorageWrapper from 'bloko/common/storage/LocalStorageWrapper';\n\nimport AppBanner from 'lux/components/AppBanner';\nimport { SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION } from 'lux/components/Applicant/AddAuthPhone/constants';\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport FAQ from 'lux/components/FAQ';\nimport DashboardMobileSearch from 'lux/components/IndexPageAnonymous/DashboardMobileSearch';\nimport InternalPromoBlock from 'lux/components/InternalPromoBlock';\nimport NewsBox from 'lux/components/NewsBox';\nimport { ADD_AUTH_PHONE_SUCCESS } from 'lux/components/Notifications/AddAuthPhoneSuccess';\nimport RainbowCatalog from 'lux/components/RainbowCatalog';\nimport useFetchVacanciesOfTheDay from 'lux/components/RainbowCatalog/useFetchVacanciesOfTheDay';\nimport RsvUserCompetenciesModal from 'lux/components/RsvUserCompetencies/RsvUserCompetenciesModal';\nimport RsvUserCompetenciesNotification from 'lux/components/RsvUserCompetencies/RsvUserCompetenciesNotification';\nimport RsvUserCompetenciesNotificationError from 'lux/components/RsvUserCompetencies/RsvUserCompetenciesNotificationError';\nimport StayInTouch from 'lux/components/StayInTouch';\nimport VacanciesOfTheDay from 'lux/components/VacanciesOfTheDay';\nimport VacanciesOfTheDayMobile from 'lux/components/VacanciesOfTheDay/Mobile';\nimport { MIN_VACANCIES_NUM_TO_SHOW } from 'lux/components/VacanciesOfTheDay/constants';\nimport WorkInCompany from 'lux/components/WorkInCompany';\nimport WorkInCompanyMobile from 'lux/components/WorkInCompany/Mobile';\nimport WorkInProfession from 'lux/components/WorkInProfession';\nimport WorkInProfessionMobile from 'lux/components/WorkInProfession/Mobile';\nimport translation from 'lux/components/translation';\nimport { BannerObject, BannerPlace } from 'lux/models/banners';\nimport { CompetencyResult } from 'lux/models/rsvUserCompetencies';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport Dashboard from 'lux/components/IndexPageApplicant/Dashboard';\n\nconst TrlKeys = {\n    newsTitle: 'index.newsTitle',\n    articlesTitle: 'index.Articles',\n};\n\nconst Features = {\n    rsvAddPage: 'rsv_add_page',\n};\n\nconst IndexApplicant: TranslatedComponent<FC<PropsWithChildren>> = ({ trls }) => {\n    const dispatch = useDispatch();\n    const vacanciesOfTheDay = useSelector((state) => state.vacanciesOfTheDay);\n    useFetchVacanciesOfTheDay();\n    const stayInTouch = useSelector((state) => state.stayInTouch);\n    const news = useSelector((state) => state.applicantNews);\n    const articles = useSelector((state) => state.applicantArticles);\n    const applicantFaq = useSelector((state) => state.applicantFaq);\n    const bannersHorizontal = useSelector((state) => state.banners[BannerPlace.INDEX_HORIZONTAL]);\n    const bannersDashboardMobile = useSelector((state) => state.banners[BannerPlace.INDEX_DASHBOARD_MOBILE]);\n    const bannersUnderRainbowMobile = useSelector((state) => state.banners[BannerPlace.INDEX_UNDER_RAINBOW_MOBILE]);\n    const bannersUnderNewsBoxMobile = useSelector((state) => state.banners[BannerPlace.INDEX_UNDER_NEWS_BOX_MOBILE]);\n    const bannersBottomMobile = useSelector((state) => state.banners[BannerPlace.INDEX_BOTTOM_MOBILE]);\n    const showVod = vacanciesOfTheDay.success && vacanciesOfTheDay.vacancies.length > MIN_VACANCIES_NUM_TO_SHOW;\n    const chatBot = useSelector((state) => state.chatBot);\n    const professionalRoleCategoryCollection = useSelector((state) => state.professionalRoleCategoryCollection);\n\n    const enableRSVAddPage = useSelector(({ features }) => features[Features.rsvAddPage] as boolean);\n    const { isModalWindowOpened, competenciesResult } = useSelector(({ rsvUserCompetencies }) => rsvUserCompetencies);\n\n    useEffect(() => {\n        const authPhoneAddedNotification = LocalStorageWrapper.getItem(SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION);\n        const authPhoneNotificationInfo = authPhoneAddedNotification\n            ? (JSON.parse(authPhoneAddedNotification) as { phone: string })\n            : null;\n        if (authPhoneNotificationInfo) {\n            dispatch(addNotification(ADD_AUTH_PHONE_SUCCESS, { phoneNumber: authPhoneNotificationInfo.phone }));\n            LocalStorageWrapper.removeItem(SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION);\n        }\n    }, [dispatch]);\n\n    return (\n        <>\n            <DashboardMobileSearch withBackdrop />\n            <Dashboard />\n            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                <div className=\"index-section-dashboard-banner\">\n                    <VSpacing base={3} />\n                    {bannersDashboardMobile?.map((banner: BannerObject) => (\n                        <div key={banner.id} data-page-analytics-event=\"advertising_banner.XsAfterRecommended\">\n                            <AdsExternalBanner {...banner} />\n                        </div>\n                    ))}\n                </div>\n            </Column>\n            <VacanciesOfTheDayMobile />\n            <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                <VSpacing base={6} />\n                <WorkInCompanyMobile />\n            </Column>\n            <RainbowCatalog />\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                    <Column xs=\"0\" s=\"8\" m=\"4\" l=\"16\" container>\n                        <Gap top>\n                            <WorkInCompany isApplicant />\n                        </Gap>\n                    </Column>\n                    {showVod && (\n                        <Column xs=\"0\" s=\"8\" m=\"8\" l=\"16\">\n                            <Gap top>\n                                <VacanciesOfTheDay userType={UserType.Applicant} />\n                            </Gap>\n                        </Column>\n                    )}\n                    {bannersUnderRainbowMobile?.length && (\n                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                            <Gap top>\n                                {bannersUnderRainbowMobile.map((banner: BannerObject) => (\n                                    <div key={banner.id} data-page-analytics-event=\"advertising_banner.XsAfterRainbow\">\n                                        <AdsExternalBanner {...banner} />\n                                    </div>\n                                ))}\n                            </Gap>\n                        </Column>\n                    )}\n                    <AppBanner />\n                </Column>\n            </ColumnsWrapper>\n\n            <ColumnsWrapper>\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\" container>\n                    {bannersHorizontal?.map((banner: BannerObject) => (\n                        <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\" key={banner.id}>\n                            <Gap top>\n                                <div data-page-analytics-event=\"advertising_banner.horizontalBanner\">\n                                    <AdsExternalBanner {...banner} />\n                                </div>\n                            </Gap>\n                        </Column>\n                    ))}\n                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"16\">\n                        <div className=\"separator\" />\n                    </Column>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"12\" container>\n                        <Gap top>\n                            <div className=\"index-section-catalog\">\n                                {professionalRoleCategoryCollection && (\n                                    <>\n                                        <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                                            <div data-qa=\"index-section-catalog-mobile\">\n                                                <WorkInProfessionMobile />\n                                            </div>\n                                        </Column>\n                                        <Column xs=\"0\" s=\"8\" m=\"12\" l=\"12\">\n                                            <div\n                                                className=\"index-section-catalog-wrapper\"\n                                                data-qa=\"index-section-catalog\"\n                                            >\n                                                <WorkInProfession />\n                                            </div>\n                                            <Column xs=\"0\" s=\"8\" m=\"12\" l=\"0\" container>\n                                                <div className=\"index-section-catalog-wrapper\">\n                                                    <div className=\"separator\" />\n                                                </div>\n                                            </Column>\n                                        </Column>\n                                    </>\n                                )}\n                                <Column xs=\"0\" s=\"0\" m=\"0\" l=\"12\">\n                                    <div className=\"index-section-catalog-wrapper index-section-catalog-wrapper_applicant\">\n                                        <div className=\"separator\" />\n                                    </div>\n                                </Column>\n                                {chatBot && (\n                                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                                        <Gap top>\n                                            <div className=\"separator\" />\n                                            <Gap top>\n                                                <InternalPromoBlock isInline />\n                                            </Gap>\n                                            <div className=\"separator\" />\n                                        </Gap>\n                                    </Column>\n                                )}\n                                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                                    <NewsBox\n                                        items={news}\n                                        title={trls[TrlKeys.newsTitle]}\n                                        href=\"/articles/site-news\"\n                                        isEmployerContext={false}\n                                        gapTop\n                                    />\n                                </Column>\n                                <Column xs=\"0\" s=\"4\" m=\"4\" l=\"4\" container>\n                                    <NewsBox\n                                        items={news}\n                                        title={trls[TrlKeys.newsTitle]}\n                                        href=\"/articles/site-news\"\n                                        isEmployerContext={false}\n                                        gapTop\n                                    />\n                                </Column>\n                                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                                    {bannersUnderNewsBoxMobile?.map((banner: BannerObject) => (\n                                        <Gap top bottom key={banner.id}>\n                                            <div data-page-analytics-event=\"advertising_banner.underNewsBoxMobile\">\n                                                <AdsExternalBanner {...banner} />\n                                            </div>\n                                        </Gap>\n                                    ))}\n                                </Column>\n                                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\" container>\n                                    <NewsBox\n                                        items={articles}\n                                        title={trls[TrlKeys.articlesTitle]}\n                                        href=\"/articles\"\n                                        isArticle\n                                        isEmployerContext={false}\n                                        gapTop\n                                    />\n                                </Column>\n                                <Column xs=\"0\" s=\"4\" m=\"4\" l=\"4\" container>\n                                    <NewsBox\n                                        items={articles}\n                                        title={trls[TrlKeys.articlesTitle]}\n                                        href=\"/articles\"\n                                        isArticle\n                                        isEmployerContext={false}\n                                        gapTop\n                                    />\n                                </Column>\n                                {chatBot && (\n                                    <>\n                                        <Column xs=\"0\" s=\"8\" m=\"0\" l=\"0\">\n                                            <div className=\"separator\" />\n                                            <Gap top>\n                                                <InternalPromoBlock isInline />\n                                            </Gap>\n                                        </Column>\n                                        <Column xs=\"0\" s=\"0\" m=\"4\" l=\"0\">\n                                            <Gap top>\n                                                <InternalPromoBlock />\n                                            </Gap>\n                                        </Column>\n                                        <Column xs=\"0\" s=\"0\" m=\"0\" l=\"4\">\n                                            <Gap top>\n                                                <InternalPromoBlock />\n                                            </Gap>\n                                        </Column>\n                                    </>\n                                )}\n                                {!chatBot && stayInTouch.apps.length > 0 && (\n                                    <>\n                                        <Column xs=\"0\" s=\"8\" m=\"0\" l=\"0\">\n                                            <div className=\"separator\" />\n                                            <Gap top>\n                                                <StayInTouch isInline analyticsFrom=\"sms_main\" />\n                                            </Gap>\n                                        </Column>\n                                        <Column xs=\"0\" s=\"0\" m=\"4\" l=\"0\">\n                                            <Gap top>\n                                                <StayInTouch analyticsFrom=\"sms_main\" />\n                                            </Gap>\n                                        </Column>\n                                        <Column xs=\"0\" s=\"0\" m=\"0\" l=\"4\">\n                                            <Gap top>\n                                                <StayInTouch analyticsFrom=\"sms_main\" />\n                                            </Gap>\n                                        </Column>\n                                    </>\n                                )}\n                            </div>\n                        </Gap>\n                    </Column>\n                    <Column xs=\"0\" s=\"8\" m=\"12\" l=\"0\">\n                        <div className=\"separator\" />\n                    </Column>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"4\">\n                        <FAQ items={applicantFaq} gapTop isMedium={false} />\n                    </Column>\n                    <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                        {bannersBottomMobile?.map((banner: BannerObject) => (\n                            <Gap top bottom key={banner.id}>\n                                <div data-page-analytics-event=\"advertising_banner.XsBottom\">\n                                    <AdsExternalBanner {...banner} />\n                                </div>\n                            </Gap>\n                        ))}\n                    </Column>\n                </Column>\n            </ColumnsWrapper>\n            {enableRSVAddPage && isModalWindowOpened && <RsvUserCompetenciesModal />}\n            {enableRSVAddPage && competenciesResult === CompetencyResult.Success && <RsvUserCompetenciesNotification />}\n            {enableRSVAddPage && <RsvUserCompetenciesNotificationError />}\n        </>\n    );\n};\n\nexport default translation(IndexApplicant);\n","import Analytics from '@hh.ru/analytics-js';\n\nexport default {\n    myEventsVacancyResponsesClick: (): void => Analytics.sendHHEventButtonClick(`my_events_vacancy_responses`),\n    myEventsVacancyResponsesShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_vacancy_responses`,\n        });\n    },\n\n    myEventsAutoSearchClick: (): void => Analytics.sendHHEventButtonClick(`my_events_auto_search`),\n    myEventsAutoSearchShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_auto_search`,\n        });\n    },\n\n    myEventsBalanceAccountClick: (): void => Analytics.sendHHEventButtonClick(`my_events_balance_account`),\n    myEventsBalanceAccountShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_balance_account`,\n        });\n    },\n\n    myEventsBalanceIncreaseClick: (): void => Analytics.sendHHEventButtonClick(`my_events_balance_increase`),\n    myEventsBalanceIncreaseShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_balance_increase`,\n        });\n    },\n\n    myEventsVacanciesClick: (): void => Analytics.sendHHEventButtonClick(`my_events_vacancies`),\n    myEventsVacanciesShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_vacancies`,\n        });\n    },\n\n    myEventsVacanciesBuyClick: (): void => Analytics.sendHHEventButtonClick(`my_events_vacancies_buy`),\n    myEventsVacanciesBuyShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_vacancies_buy`,\n        });\n    },\n\n    myEventsDatabaseAccessClick: (): void => Analytics.sendHHEventButtonClick(`my_events_database_access`),\n    myEventsDatabaseAccessShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_database_access`,\n        });\n    },\n\n    myEventsDatabaseAccessBuyClick: (): void => Analytics.sendHHEventButtonClick(`my_events_database_access_buy`),\n    myEventsDatabaseAccessBuyShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_database_access_buy`,\n        });\n    },\n\n    myEventsCreateVacancyClick: (): void => Analytics.sendHHEventButtonClick(`my_events_create_vacancy`),\n    myEventsCreateVacancyShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `my_events_create_vacancy`,\n        });\n    },\n\n    howToSearchLearnMoreClick: (): void => Analytics.sendHHEventButtonClick(`how_to_search_learn_more`),\n    howToSearchLearnMoreShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `how_to_search_learn_more`,\n        });\n    },\n\n    updatesTabClick: (item: string): void => Analytics.sendHHEventButtonClick(`updates_tab_${item}`),\n    updatesTabShown: (element: HTMLElement, item: string): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `updates_tab_${item}`,\n        });\n    },\n\n    updatesAllClick: (): void => Analytics.sendHHEventButtonClick(`updates_all`),\n    updatesAllShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `updates_all`,\n        });\n    },\n\n    activitiesTitleClick: (): void => Analytics.sendHHEventButtonClick(`activities_title`),\n    activitiesTitleShown: (element: HTMLElement): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `activities_title`,\n        });\n    },\n\n    activitiesItemClick: (item: string): void =>\n        Analytics.sendHHEventButtonClick(`activities_item`, {\n            item,\n        }),\n    activitiesItemsShown: (element: HTMLElement, items: string[]): void => {\n        Analytics.sendHHEventElementShown(element, {\n            name: `activities_items`,\n            item: items,\n        });\n    },\n};\n","import { useRef, useEffect } from 'react';\n\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport { useIsRussia } from 'lux/hooks/useCountries';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\n\nconst TrlKeys = {\n    header: 'index.activityCalendar.header',\n};\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst Title: TranslatedComponent = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const activitiesTitleRef = useRef(null);\n    const isRussia = useIsRussia();\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && activitiesTitleRef.current) {\n            indexPageEmployerAnalytics.activitiesTitleShown(activitiesTitleRef.current);\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    if (isRussia) {\n        return (\n            <>\n                <H2>\n                    <Link\n                        ref={activitiesTitleRef}\n                        href=\"/articles/events\"\n                        kind={LinkKind.Tertiary}\n                        onClick={\n                            employerMainPageAnalyticsEnabled\n                                ? indexPageEmployerAnalytics.activitiesTitleClick\n                                : undefined\n                        }\n                    >\n                        {trls[TrlKeys.header]}\n                    </Link>\n                </H2>\n                <VSpacing base={4} />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <H2 ref={activitiesTitleRef}>{trls[TrlKeys.header]}</H2>\n            <VSpacing base={4} />\n        </>\n    );\n};\n\nexport default translation(Title);\n","import { FC, Fragment, PropsWithChildren, useRef, useEffect } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport Text, { TextSize, TextImportance } from 'bloko/blocks/text';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Title from 'lux/components/IndexPageEmployer/components/Calendar/Title';\n\ninterface CalendarProps {\n    container?: boolean;\n}\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst Calendar: FC<CalendarProps & PropsWithChildren> = ({ container = false }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const { eventsMain } = useSelector((state) => state.employerIndexPage.oldEmployer) || { eventsMain: null };\n    const activityItems = eventsMain?.body?.events || [];\n    const activityItemsRef = useRef(null);\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && activityItems?.length && activityItemsRef.current) {\n            indexPageEmployerAnalytics.activitiesItemsShown(\n                activityItemsRef.current,\n                activityItems.map((item) => item.text)\n            );\n        }\n    }, [activityItems, employerMainPageAnalyticsEnabled]);\n\n    if (!eventsMain) {\n        return null;\n    }\n\n    return (\n        <Column xs=\"4\" s=\"4\" m=\"8\" l=\"8\" container={container}>\n            <div ref={activityItemsRef}>\n                <Title />\n                {eventsMain.body.events.map(({ href, date, text }) => (\n                    <Fragment key={href}>\n                        <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                            {date}\n                        </Text>\n                        <div className=\"activity-calendar-caption\">\n                            <Text size={TextSize.Large}>\n                                <Link\n                                    href={href}\n                                    kind={LinkKind.Tertiary}\n                                    onClick={\n                                        employerMainPageAnalyticsEnabled\n                                            ? () => indexPageEmployerAnalytics.activitiesItemClick(text)\n                                            : undefined\n                                    }\n                                >\n                                    {text}\n                                </Link>\n                            </Text>\n                        </div>\n                    </Fragment>\n                ))}\n            </div>\n        </Column>\n    );\n};\n\nexport default Calendar;\n","import { FC, PropsWithChildren } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\ninterface BannerWrapperProps {\n    id: string;\n}\n\nconst BannerWrapper: FC<BannerWrapperProps & PropsWithChildren> = ({ children, id }) => {\n    switch (id) {\n        case '371':\n            return (\n                <Column s=\"4\" m=\"4\" l=\"4\">\n                    <div className=\"index-activity-calendar-banner\">\n                        <div className=\"banner-place-fat-wrapper\">\n                            <div className=\"index-banner index-banner_big\">{children}</div>\n                        </div>\n                    </div>\n                </Column>\n            );\n\n        case '370':\n            return (\n                <Column s=\"4\" m=\"0\" l=\"0\">\n                    <div className=\"banner-place-fat-wrapper\">{children}</div>\n                </Column>\n            );\n    }\n\n    return null;\n};\n\nexport default BannerWrapper;\n","import { FC, PropsWithChildren } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport BannerWrapper from 'lux/components/IndexPageEmployer/components/BannerWrapper';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Calendar from 'lux/components/IndexPageEmployer/components/Calendar';\n\nconst CalendarWithBanners: FC<PropsWithChildren> = () => {\n    const banners = useSelector((state) => state.banners);\n    const isZp = useIsZarplataPlatform();\n\n    return (\n        <Column xs=\"0\" s=\"8\" m=\"12\" l=\"12\" container>\n            <Gap top>\n                <Calendar />\n                {!isZp && (\n                    <Column s=\"4\" m=\"4\" l=\"4\" container>\n                        {banners.calendar?.map((banner) => (\n                            <BannerWrapper key={banner.id} id={banner.id}>\n                                <AdsExternalBanner {...banner} />\n                            </BannerWrapper>\n                        ))}\n                    </Column>\n                )}\n            </Gap>\n        </Column>\n    );\n};\n\nexport default CalendarWithBanners;\n","const getTranslationsFor = (trlsArray: string[] | undefined, translation: string): string =>\n    trlsArray && trlsArray.length > 0 ? trlsArray.join(', ') : translation;\n\nexport default getTranslationsFor;\n","import { Fragment, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport ClickDown, { DownPlacement, DownLayer } from 'bloko/blocks/drop/Down/Click';\nimport Link, { LinkKind, LinkAppearance } from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { format } from 'bloko/common/trl';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { additionalPurchaseCodes, ServiceCode } from 'lux/models/price/productCodes';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport getTranslationsFor from 'lux/components/IndexPageEmployer/components/EmployerEventList/getTranslationsFor';\n\nconst COULD_BE_WITH_CIV = [ServiceCode.Disposable, ...additionalPurchaseCodes];\nconst RESUME_ACCESS_CODES = [\n    ServiceCode.ContactsViewWithStandart,\n    ServiceCode.FullAccess,\n    ServiceCode.FullAccessWithStandart,\n    ServiceCode.Bundle,\n];\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst BalanceAccess = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const employerIndexPage = useSelector((state) => state.employerIndexPage);\n    const isZp = useIsZarplataPlatform();\n    const databaseAccessLinkRef = useRef(null);\n    const databaseAccessBuyLinkRef = useRef(null);\n\n    const getPurchasedAccessCivBalance = (item) => {\n        const { civBalance } = item;\n\n        if (civBalance === undefined || civBalance === null) {\n            return null;\n        }\n\n        let content;\n\n        if (civBalance === 0) {\n            content = format(trls[BalanceAccess.trls.balanceEmpty], {\n                '{0}': trls[BalanceAccess.trls.contactOpening.some],\n            });\n        } else {\n            content = (\n                <Conversion\n                    one={trls[BalanceAccess.trls.contactOpening.one]}\n                    some={trls[BalanceAccess.trls.contactOpening.some]}\n                    many={trls[BalanceAccess.trls.contactOpening.many]}\n                    value={civBalance}\n                    hasValue={false}\n                    format={(trl) =>\n                        format(trls[BalanceAccess.trls.serviceBalance], {\n                            '{0}': civBalance,\n                            '{1}': trl,\n                        })\n                    }\n                />\n            );\n        }\n\n        return (\n            <>\n                <VSpacing base={1} />\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    <div className=\"purchased-service-sentence\">{content}</div>\n                </Text>\n            </>\n        );\n    };\n\n    const getActiveDate = (expirationTime) => {\n        if (expirationTime.remainingDays === undefined || expirationTime.remainingDays === null) {\n            return (\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {trls[BalanceAccess.trls.activeTo]} {expirationTime.day}{' '}\n                    {trls[BalanceAccess.trls.genitive.month[expirationTime.month]]} {expirationTime.year}\n                </Text>\n            );\n        }\n\n        if (expirationTime.remainingDays === 0) {\n            return (\n                <Text size={TextSize.Small}>\n                    <span className=\"purchased-service-expires-soon\">{trls[BalanceAccess.trls.expiresSoon]}</span>\n                </Text>\n            );\n        }\n        return (\n            <Text size={TextSize.Small}>\n                <span className=\"purchased-service-expires-soon\">\n                    <Conversion\n                        one={trls[BalanceAccess.trls.days.one]}\n                        some={trls[BalanceAccess.trls.days.many]}\n                        many={trls[BalanceAccess.trls.days.some]}\n                        value={expirationTime.remainingDays}\n                        hasValue={false}\n                        format={(trl) =>\n                            format(trls[BalanceAccess.trls.expires], {\n                                '{0}': expirationTime.remainingDays,\n                                '{1}': trl,\n                            })\n                        }\n                    />\n                </span>\n            </Text>\n        );\n    };\n\n    const getFutureDate = (expirationTime, activationTime) => {\n        return (\n            <>\n                <VSpacing base={1} />\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {format(trls[BalanceAccess.trls.activeSins], {\n                        '{0}': activationTime.day,\n                        '{1}': trls[BalanceAccess.trls.genitive.month[activationTime.month]],\n                        '{2}': activationTime.year,\n                    })}\n                </Text>\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {expirationTime &&\n                        `${trls[BalanceAccess.trls.activeTo]} ${expirationTime.day} ${\n                            trls[BalanceAccess.trls.genitive.month[expirationTime.month]]\n                        } ${expirationTime.year}`}\n                </Text>\n            </>\n        );\n    };\n\n    const purchasedServicesDate = (item) => {\n        const { status, expirationTime, activationTime } = item;\n\n        if (status === 'active') {\n            return getActiveDate(expirationTime);\n        }\n\n        if (status === 'future') {\n            return getFutureDate(expirationTime, activationTime);\n        }\n\n        return null;\n    };\n\n    const getPurchasedResumeAccessesItem = (item) => {\n        return (\n            <div className=\"purchased-services\">\n                <div className=\"purchased-service\" data-qa={`purchased-service-${item.code}`}>\n                    <div className=\"purchased-service-name\">\n                        <Text Element=\"p\" strong>\n                            {item.availableServicesTrl}\n                        </Text>\n                        <VSpacing base={2} />\n                        <Text Element=\"p\">\n                            {getTranslationsFor(item.priceAreaTrl, trls[BalanceAccess.trls.areaAll])}\n                        </Text>\n                        <Text>\n                            {getTranslationsFor(\n                                item.profRoleGroupIdsTrl ? item.profRoleGroupIdsTrl : item.professionIdsTrl,\n                                trls[BalanceAccess.trls.allProfRoleGroups]\n                            )}\n                        </Text>\n                        {getPurchasedAccessCivBalance(item)}\n                        {purchasedServicesDate(item)}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const getPurchasedResumeAccessesList = () => {\n        const { serviceDescription } = employerIndexPage.oldEmployer.employer;\n\n        // TODO параметр temporalCiv определяет есть ли в DI услуги CIV состовляющая\n        const filteredServiceDescription = serviceDescription.filter(\n            (item) =>\n                RESUME_ACCESS_CODES.includes(item.code) ||\n                (COULD_BE_WITH_CIV.includes(item.code) && item.civBalance >= 0 && item.temporalCiv)\n        );\n\n        return filteredServiceDescription.map((service, index) => (\n            <Fragment key={index}>{getPurchasedResumeAccessesItem(service)}</Fragment>\n        ));\n    };\n\n    const activeResumeAccessesInfo =\n        employerIndexPage.oldEmployer?.billingSummary?.serviceCategories?.resumeAccessCodes || {};\n\n    const currency = employerIndexPage.oldEmployer?.employer?.currency || null;\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled) {\n            if (databaseAccessLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsDatabaseAccessShown(databaseAccessLinkRef.current);\n            }\n            if (databaseAccessBuyLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsDatabaseAccessBuyShown(databaseAccessBuyLinkRef.current);\n            }\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    if (currency === CurrencyType.GEL) {\n        return null;\n    }\n\n    if (activeResumeAccessesInfo.count || activeResumeAccessesInfo.remainingDays) {\n        return (\n            <ClickDown\n                flexible\n                layer={DownLayer.OverlayContent}\n                placement={DownPlacement.RightStart}\n                render={getPurchasedResumeAccessesList}\n            >\n                <div className=\"my-events__item my-events__item_access\" data-qa=\"my-events-dbaccess\">\n                    <Text>\n                        <span className=\"my-events__name\">\n                            <Link\n                                ref={databaseAccessLinkRef}\n                                appearance={LinkAppearance.Pseudo}\n                                kind={LinkKind.Tertiary}\n                                data-qa=\"my-events-dbaccess-name\"\n                                onClick={\n                                    employerMainPageAnalyticsEnabled\n                                        ? indexPageEmployerAnalytics.myEventsDatabaseAccessClick\n                                        : undefined\n                                }\n                            >\n                                {trls[BalanceAccess.trls.resumeAccess]}\n                            </Link>\n                        </span>\n                        <span className=\"my-events__count\">\n                            <span className=\"event-counter\">\n                                {activeResumeAccessesInfo.remainingDays > 0 ? (\n                                    <Conversion\n                                        hasValue\n                                        one={trls[BalanceAccess.trls.days.one]}\n                                        some={trls[BalanceAccess.trls.days.many]}\n                                        many={trls[BalanceAccess.trls.days.some]}\n                                        value={activeResumeAccessesInfo.remainingDays}\n                                    />\n                                ) : (\n                                    <Conversion\n                                        hasValue\n                                        one={trls[BalanceAccess.trls.access.one]}\n                                        some={trls[BalanceAccess.trls.access.many]}\n                                        many={trls[BalanceAccess.trls.access.some]}\n                                        value={activeResumeAccessesInfo.count}\n                                    />\n                                )}\n                            </span>\n                        </span>\n                    </Text>\n                </div>\n            </ClickDown>\n        );\n    }\n\n    const linkResumeAccessUrl = isZp ? paths.priceZpResumeAccess : paths.priceDBAccess;\n\n    return (\n        <div className=\"my-events__item my-events__item_access\" data-qa=\"my-events-dbaccess-access\">\n            <Text>\n                <span className=\"my-events__name\">\n                    <Link\n                        ref={databaseAccessLinkRef}\n                        kind={LinkKind.Tertiary}\n                        href={linkResumeAccessUrl}\n                        data-qa=\"my-events-dbaccess-access-name\"\n                        onClick={\n                            employerMainPageAnalyticsEnabled\n                                ? indexPageEmployerAnalytics.myEventsDatabaseAccessClick\n                                : undefined\n                        }\n                    >\n                        {trls[BalanceAccess.trls.resumeAccess]}\n                    </Link>\n                </span>\n                <span className=\"my-events__count\">\n                    <span className=\"event-counter\">\n                        <Link\n                            ref={databaseAccessBuyLinkRef}\n                            href={linkResumeAccessUrl}\n                            disableVisited\n                            data-qa=\"my-events-dbaccess-access-buy\"\n                            onClick={\n                                employerMainPageAnalyticsEnabled\n                                    ? indexPageEmployerAnalytics.myEventsDatabaseAccessBuyClick\n                                    : undefined\n                            }\n                        >\n                            {trls[BalanceAccess.trls.buy]}\n                        </Link>\n                    </span>\n                </span>\n            </Text>\n        </div>\n    );\n};\n\nBalanceAccess.propTypes = {\n    trls: PropTypes.object,\n};\n\nBalanceAccess.trls = {\n    buy: 'index.employer.billing.buy',\n    resumeAccess: 'index.employer.billing.resumeAccess',\n    [ServiceCode.Reservation]: 'employer.accountHistory.availableServices.RESERVATION.CIV',\n    [ServiceCode.Add]: 'employer.accountHistory.availableServices.ADD.CIV',\n    areaAll: 'employer.price.area.all',\n    allProfRoleGroups: 'billing_professional_role_group.0',\n    balanceEmpty: 'employer.service.balance.empty',\n    serviceBalance: 'employer.service.balance',\n    expiresSoon: 'index.employer.billing.expiresSoon',\n    expires: 'index.employer.billing.expires',\n    activeTo: 'price.already-purchased.active-to',\n    activeSins: 'price.already-purchased.active-sins',\n    contactOpening: {\n        some: 'employer.service.contact.opening.some',\n        one: 'employer.service.contact.opening.one',\n        many: 'employer.service.contact.opening.many',\n    },\n    genitive: {\n        month: {\n            1: 'genitive.month.1',\n            2: 'genitive.month.2',\n            3: 'genitive.month.3',\n            4: 'genitive.month.4',\n            5: 'genitive.month.5',\n            6: 'genitive.month.6',\n            7: 'genitive.month.7',\n            8: 'genitive.month.8',\n            9: 'genitive.month.9',\n            10: 'genitive.month.10',\n            11: 'genitive.month.11',\n            12: 'genitive.month.12',\n        },\n    },\n    days: {\n        one: 'index.employer.billing.days.one',\n        some: 'index.employer.billing.days.some',\n        many: 'index.employer.billing.days.many',\n    },\n    access: {\n        one: 'index.employer.billing.access.one',\n        some: 'index.employer.billing.access.some',\n        many: 'index.employer.billing.access.many',\n    },\n};\n\nexport default translation(BalanceAccess);\n","import Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport getTranslationsFor from 'lux/components/IndexPageEmployer/components/EmployerEventList/getTranslationsFor';\nimport translation from 'lux/components/translation';\nimport { ServiceEmployerDescription } from 'lux/models/oldEmployer/employerBillingSummary';\n\ninterface BalanceOptionsTooltipItemProps {\n    service: ServiceEmployerDescription;\n}\n\nconst Trls = {\n    allProfRoleGroups: 'billing_professional_role_group.0',\n    areaAll: 'employer.price.area.all',\n};\n\nconst BalanceOptionsTooltipItem: TranslatedComponent<BalanceOptionsTooltipItemProps> = ({ service, trls }) => (\n    <div className=\"purchased-service\" data-qa={`purchased-service-${service.code}`}>\n        <div className=\"purchased-service-name\">\n            <Text Element=\"p\" strong>\n                {service.tariffNameTrl ? service.tariffNameTrl : service.availableServicesTrl}\n            </Text>\n            <VSpacing base={2} />\n            <Text Element=\"p\">{getTranslationsFor(service.areaIdsTrl, trls[Trls.areaAll])}</Text>\n            <Text>{getTranslationsFor(service.profRoleGroupIdsTrl, trls[Trls.allProfRoleGroups])}</Text>\n        </div>\n        <div className=\"purchased-service-count\">{service.count}</div>\n    </div>\n);\n\nexport default translation(BalanceOptionsTooltipItem);\n","import ClickDown, { DownLayer, DownPlacement } from 'bloko/blocks/drop/Down/Click';\nimport Link, { LinkAppearance, LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { ServiceEmployerDescription } from 'lux/models/oldEmployer/employerBillingSummary';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport BalanceOptionsTooltipItem from 'lux/components/IndexPageEmployer/components/EmployerEventList/BalanceOptions/BalanceOptionsTooltipItem';\n\nconst TrlKeys = {\n    buy: 'index.employer.billing.buy',\n    title: 'balance.option.title',\n};\n\nconst BalanceOptions: TranslatedComponent = ({ trls }) => {\n    const activeOptionInfo = useSelector(\n        (state) => state.employerIndexPage.oldEmployer?.billingSummary?.serviceCategories?.optionCodes\n    );\n    const serviceDescription = useSelector((state) => state.employerIndexPage.oldEmployer?.employer.serviceDescription);\n\n    if (activeOptionInfo?.count && activeOptionInfo?.count > 0 && serviceDescription) {\n        const serviceDescriptionOption = serviceDescription.filter(\n            (service: ServiceEmployerDescription) => service.code === ServiceItemCode.OptionPremium\n        );\n        return (\n            <ClickDown\n                flexible\n                layer={DownLayer.OverlayContent}\n                placement={DownPlacement.RightStart}\n                render={() => (\n                    <div className=\"purchased-services\">\n                        {serviceDescriptionOption.map((service: ServiceEmployerDescription, index: number) => (\n                            <BalanceOptionsTooltipItem service={service} key={index} />\n                        ))}\n                    </div>\n                )}\n            >\n                <div className=\"my-events__item my-events__item_options\" data-qa=\"my-events-options\">\n                    <Text>\n                        <span className=\"my-events__name\">\n                            <Link\n                                appearance={LinkAppearance.Pseudo}\n                                kind={LinkKind.Tertiary}\n                                data-qa=\"my-events-options-name\"\n                            >\n                                {trls[TrlKeys.title]}\n                            </Link>\n                        </span>\n                        <span className=\"my-events__count\">\n                            <span className=\"event-counter\">{activeOptionInfo.count}</span>\n                        </span>\n                    </Text>\n                </div>\n            </ClickDown>\n        );\n    }\n\n    return (\n        <div className=\"my-events__item my-events__item_options\" data-qa=\"my-events-options\">\n            <Text>\n                <span className=\"my-events__name\">\n                    <Link kind={LinkKind.Tertiary} href={paths.priceZpPromotion} data-qa=\"my-events-option-access-name\">\n                        {trls[TrlKeys.title]}\n                    </Link>\n                </span>\n                <span className=\"my-events__count\">\n                    <span className=\"event-counter\">\n                        <Link href={paths.priceZpPromotion} disableVisited data-qa=\"my-events-option-access-buy\">\n                            {trls[TrlKeys.buy]}\n                        </Link>\n                    </span>\n                </span>\n            </Text>\n        </div>\n    );\n};\n\nexport default translation(BalanceOptions);\n","import { Fragment, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport ClickDown, { DownPlacement, DownLayer } from 'bloko/blocks/drop/Down/Click';\nimport Link, { LinkKind, LinkAppearance } from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { format } from 'bloko/common/trl';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { CountryId } from 'lux/models/countryId';\nimport { publicationsCodes, ServiceItemCode } from 'lux/models/price/productCodes';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst BalanceVacancies = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const employerIndexPage = useSelector(({ employerIndexPage }) => employerIndexPage);\n    const isZp = useIsZarplataPlatform();\n    const vacanciesLinkRef = useRef(null);\n    const vacanciesBuyLinkRef = useRef(null);\n    const countryIdBySeller = useSelector(({ employerCountryIdBySeller }) => employerCountryIdBySeller?.toString());\n\n    const isRussia = (countryId) => countryId === parseInt(CountryId.Russia, 10);\n\n    const getPricePurchasedItemRegions = (item) => {\n        const { code, count, areaIds, areaIdsTrl } = item;\n\n        if (code === ServiceItemCode.FreeRegionalVacancy && count > 0 && countryIdBySeller !== CountryId.Belarus) {\n            return (\n                <>\n                    <VSpacing base={1} />\n                    <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                        {trls[BalanceVacancies.trls.freeRegion]}\n                    </Text>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <VSpacing base={1} />\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {areaIds?.length > 0 ? (\n                        <>\n                            {`${trls[BalanceVacancies.trls.regionTitle]}: `}\n                            {areaIdsTrl.map((trl, index) => (\n                                <Fragment key={trl}>\n                                    <span data-qa=\"price-purchased-item-region\">{trl}</span>\n                                    {index < areaIdsTrl.length - 1 && ', '}\n                                </Fragment>\n                            ))}\n                        </>\n                    ) : (\n                        trls[BalanceVacancies.trls.anyRegion]\n                    )}\n                </Text>\n            </>\n        );\n    };\n\n    const getPricePurchasedItemProfareas = (item) => {\n        const { profRoleGroupIds, profRoleGroupIdsTrl } = item;\n\n        return (\n            <>\n                <VSpacing base={1} />\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {profRoleGroupIds?.length > 0 ? (\n                        <>\n                            {`${trls[BalanceVacancies.trls.profRoleGroupTitle]}: `}\n                            {profRoleGroupIdsTrl.map((trl, index) => (\n                                <Fragment key={trl}>\n                                    <span data-qa=\"price-purchased-item-profarea\">{trl}</span>\n                                    {index < profRoleGroupIdsTrl.length - 1 && ', '}\n                                </Fragment>\n                            ))}\n                        </>\n                    ) : (\n                        trls[BalanceVacancies.trls.anyProfRoleGroup]\n                    )}\n                </Text>\n            </>\n        );\n    };\n\n    const getPricePurchasedItemZPCrossPost = (item) =>\n        item.zpCrossPostAvailable ? (\n            <>\n                <VSpacing base={1} />\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {trls[BalanceVacancies.trls.zpCrossPosting]}\n                </Text>\n            </>\n        ) : null;\n\n    const getPricePurchasedVacancyNextUpdate = (nextFreeUpdate, countryId) => {\n        if (isRussia(countryId) || !nextFreeUpdate) {\n            return null;\n        }\n\n        if (nextFreeUpdate.remainingDays === 0) {\n            return (\n                <>\n                    <VSpacing base={2} />\n                    <Text>{trls[BalanceVacancies.trls.newWillBeAvailable]}</Text>\n                </>\n            );\n        }\n\n        if (nextFreeUpdate.remainingDays > 0) {\n            return (\n                <>\n                    <VSpacing base={2} />\n                    <Text>\n                        <Conversion\n                            one={trls[BalanceVacancies.trls.days.one]}\n                            some={trls[BalanceVacancies.trls.days.many]}\n                            many={trls[BalanceVacancies.trls.days.some]}\n                            value={nextFreeUpdate.remainingDays}\n                            hasValue={false}\n                            format={(trl) =>\n                                format(trls[BalanceVacancies.trls.newWillBeAvailable], {\n                                    '{0}': nextFreeUpdate.remainingDays,\n                                    '{1}': trl,\n                                })\n                            }\n                        />\n                    </Text>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <VSpacing base={2} />\n                <Text>\n                    {`${trls[BalanceVacancies.trls.newWillBeAdded]} ${nextFreeUpdate.day} ${\n                        trls[BalanceVacancies.trls.genitive.month[nextFreeUpdate.month]]\n                    } ${nextFreeUpdate.year}`}\n                </Text>\n            </>\n        );\n    };\n\n    const getPurchasedVacancyPublicationsItem = (item, countryId) => {\n        const { code, count, nextFreeUpdate, serviceEntryTrl } = item;\n\n        if (code === ServiceItemCode.FreeRegionalVacancy && parseInt(count, 10) === 0 && isRussia(countryId)) {\n            return null;\n        }\n\n        return (\n            <div className=\"purchased-service\" data-qa={`purchased-service-${code}`}>\n                <div className=\"purchased-service-name\">\n                    <Text>{serviceEntryTrl}</Text>\n                    {getPricePurchasedItemRegions(item)}\n                    {getPricePurchasedItemProfareas(item)}\n                    {getPricePurchasedItemZPCrossPost(item)}\n                    {getPricePurchasedVacancyNextUpdate(nextFreeUpdate, countryId)}\n                </div>\n                <div className=\"purchased-service-count\">{count}</div>\n            </div>\n        );\n    };\n\n    const getPurchasedVacancyPublicationsList = () => {\n        const { serviceDescription, countryId } = employerIndexPage.oldEmployer.employer;\n        return (\n            <div className=\"purchased-services\">\n                {serviceDescription\n                    .filter(\n                        (service) => publicationsCodes.includes(service.code) && service.code !== ServiceItemCode.ZpDemo\n                    )\n                    .map((service, index) => (\n                        <Fragment key={index}>{getPurchasedVacancyPublicationsItem(service, countryId)}</Fragment>\n                    ))}\n            </div>\n        );\n    };\n\n    const freeVacancyPublicationsCodesCount =\n        employerIndexPage?.oldEmployer?.billingSummary?.serviceCategories?.freeVacancyPublicationsCodes?.count ?? 0;\n\n    const nonFreeVacancyPublicationsCodesCount =\n        employerIndexPage?.oldEmployer?.billingSummary?.serviceCategories?.nonFreeVacancyPublicationsCodes?.count ?? 0;\n\n    const vacanciesCount = isZp\n        ? nonFreeVacancyPublicationsCodesCount\n        : freeVacancyPublicationsCodesCount + nonFreeVacancyPublicationsCodesCount;\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled) {\n            if (vacanciesLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsVacanciesShown(vacanciesLinkRef.current);\n            }\n            if (vacanciesBuyLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsVacanciesBuyShown(vacanciesBuyLinkRef.current);\n            }\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    if (vacanciesCount > 0) {\n        return (\n            <ClickDown\n                flexible\n                layer={DownLayer.OverlayContent}\n                placement={DownPlacement.RightStart}\n                render={getPurchasedVacancyPublicationsList}\n            >\n                <div className=\"my-events__item my-events__item_vacancies\" data-qa=\"my-events-publications\">\n                    <Text>\n                        <span className=\"my-events__name\">\n                            <Link\n                                ref={vacanciesLinkRef}\n                                appearance={LinkAppearance.Pseudo}\n                                kind={LinkKind.Tertiary}\n                                data-qa=\"my-events-publications-name\"\n                                onClick={\n                                    employerMainPageAnalyticsEnabled\n                                        ? indexPageEmployerAnalytics.myEventsVacanciesClick\n                                        : undefined\n                                }\n                            >\n                                {trls[BalanceVacancies.trls.vacancies]}\n                            </Link>\n                        </span>\n                        <span className=\"my-events__count\">\n                            <span className=\"event-counter\">{vacanciesCount}</span>\n                        </span>\n                    </Text>\n                </div>\n            </ClickDown>\n        );\n    }\n\n    const linkAddPublicationUrl = isZp ? paths.priceZpPublications : paths.priceRegionalPublications;\n    return (\n        <div className=\"my-events__item my-events__item_vacancies\" data-qa=\"my-events-publications-access\">\n            <Text>\n                <span className=\"my-events__name\">\n                    <Link\n                        ref={vacanciesLinkRef}\n                        kind={LinkKind.Tertiary}\n                        href={linkAddPublicationUrl}\n                        data-qa=\"my-events-publications-access-name\"\n                        onClick={\n                            employerMainPageAnalyticsEnabled\n                                ? indexPageEmployerAnalytics.myEventsVacanciesClick\n                                : undefined\n                        }\n                    >\n                        {trls[BalanceVacancies.trls.vacancies]}\n                    </Link>\n                </span>\n                <span className=\"my-events__count\">\n                    <span className=\"event-counter\">\n                        <Link\n                            ref={vacanciesBuyLinkRef}\n                            href={linkAddPublicationUrl}\n                            data-qa=\"my-events-publications-access-buy\"\n                            onClick={\n                                employerMainPageAnalyticsEnabled\n                                    ? indexPageEmployerAnalytics.myEventsVacanciesBuyClick\n                                    : undefined\n                            }\n                        >\n                            {trls[BalanceVacancies.trls.buy]}\n                        </Link>\n                    </span>\n                </span>\n            </Text>\n        </div>\n    );\n};\n\nBalanceVacancies.propTypes = {\n    trls: PropTypes.object,\n};\n\nBalanceVacancies.trls = {\n    vacancies: 'index.employer.billing.vacancies',\n    buy: 'index.employer.billing.buy',\n    regionTitle: 'employer.service.regions.title',\n    anyRegion: 'any.region',\n    profRoleGroupTitle: 'employer.service.profRoleGroup.title',\n    anyProfRoleGroup: 'any.profRoleGroup',\n    zpCrossPosting: 'zarplata.crossposting',\n    newWillBeAdded: 'employer.accountHistory.freeServices.newWillBeAdded',\n    newWillBeAvailable: 'index.employer.billing.newWillBeAvailable',\n    freeRegion: 'price.purchased.freeRegions.RFPN',\n    genitive: {\n        month: {\n            1: 'genitive.month.1',\n            2: 'genitive.month.2',\n            3: 'genitive.month.3',\n            4: 'genitive.month.4',\n            5: 'genitive.month.5',\n            6: 'genitive.month.6',\n            7: 'genitive.month.7',\n            8: 'genitive.month.8',\n            9: 'genitive.month.9',\n            10: 'genitive.month.10',\n            11: 'genitive.month.11',\n            12: 'genitive.month.12',\n        },\n    },\n    days: {\n        one: 'index.employer.billing.days.one',\n        some: 'index.employer.billing.days.some',\n        many: 'index.employer.billing.days.many',\n    },\n};\n\nexport default translation(BalanceVacancies);\n","import { Fragment, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\n\nimport { MarkAsViewedEvent } from 'Modules/Notices';\nimport Infotip, { InfoPlacement, InfoTheme } from 'lux/components/Infotip';\nimport translation from 'lux/components/translation';\n\nconst STATISTICS_ON_MY_EVENTS = 'statisticsOnMyEvents';\nconst STATISTICS_ON_INDEX_MY_EVENTS = 'statistics_on_index_my_events';\n\nconst EventStatistics = ({ trls }) => {\n    const statisticsLink = useRef();\n\n    useEffect(() => {\n        Analytics.sendHHEventElementShown(statisticsLink.current, {\n            name: STATISTICS_ON_INDEX_MY_EVENTS,\n        });\n    }, []);\n\n    return (\n        <Fragment>\n            <div className=\"my-events__separator\" />\n            <div className=\"my-events__item my-events__item_statistics\">\n                <Text>\n                    <span className=\"my-events__name\" ref={statisticsLink}>\n                        <Infotip\n                            show\n                            name={STATISTICS_ON_MY_EVENTS}\n                            theme={InfoTheme.Dark}\n                            placement={InfoPlacement.RightStart}\n                            markAsViewedEvent={MarkAsViewedEvent.OnHide}\n                            render={() => (\n                                <Fragment>\n                                    <Text Element=\"span\" strong>\n                                        {trls[EventStatistics.trls.statisticsInfotipTitle]}\n                                    </Text>\n                                    <p>{trls[EventStatistics.trls.statisticsInfotipText]}</p>\n                                </Fragment>\n                            )}\n                        >\n                            <BlokoLink\n                                Element={Link}\n                                to=\"/employer/statistics?from=index_my_events&hhtmFromLabel=index_my_events\"\n                                kind={LinkKind.Tertiary}\n                                target=\"_blank\"\n                                data-qa=\"my-events-statistics\"\n                                onClick={() => Analytics.sendHHEventButtonClick(STATISTICS_ON_INDEX_MY_EVENTS)}\n                            >\n                                {trls[EventStatistics.trls.statistics]}\n                            </BlokoLink>\n                        </Infotip>\n                    </span>\n                </Text>\n            </div>\n        </Fragment>\n    );\n};\n\nEventStatistics.propTypes = {\n    trls: PropTypes.object,\n};\n\nEventStatistics.trls = {\n    statistics: 'index.employer.statistics',\n    statisticsInfotipTitle: 'index.employer.statistics.infotip.title',\n    statisticsInfotipText: 'index.employer.statistics.infotip.text',\n};\n\nexport default translation(EventStatistics);\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { H2 } from 'bloko/blocks/header';\nimport Link, { LinkKind } from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { paymentNotAvailableSites } from 'lux/models/topLevelSite';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport BalanceAccess from 'lux/components/IndexPageEmployer/components/EmployerEventList/BalanceAccess';\nimport BalanceOptions from 'lux/components/IndexPageEmployer/components/EmployerEventList/BalanceOptions/BalanceOptions';\nimport BalanceVacancies from 'lux/components/IndexPageEmployer/components/EmployerEventList/BalanceVacancies';\nimport EventStatistics from 'lux/components/IndexPageEmployer/components/EmployerEventList/EventStatistics';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst Index = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const features = useSelector((state) => state.features);\n    const userStats = useSelector((state) => state.userStats);\n    const permissions = useSelector((state) => state.permissions);\n    const employerIndexPage = useSelector((state) => state.employerIndexPage);\n    const topLevelSite = useSelector((state) => state.topLevelSite);\n    const vacancyResponsesLinkRef = useRef(null);\n    const autoSearchLinkRef = useRef(null);\n    const balanceAccountLinkRef = useRef(null);\n    const balanceIncreaseLinkRef = useRef(null);\n    const createVacancyLinkRef = useRef(null);\n\n    const isZp = useIsZarplataPlatform();\n\n    const getEmployerTargetResumesEventCounter = () => {\n        if (userStats?.['new-wanna-work'] > 0) {\n            return <span className=\"event-counter event-counter_new-events\">{`+${userStats['new-wanna-work']}`}</span>;\n        }\n\n        if (userStats?.['wanna-work']) {\n            return <span className=\"event-counter\">{userStats['wanna-work']}</span>;\n        }\n\n        return null;\n    };\n\n    const getTargetResumes = () => {\n        const featuresTargetResumes = features[Index.features.targetResumes];\n        const featuresTargetResumesAgency = features[Index.features.targetResumesAgency];\n\n        if (featuresTargetResumes || featuresTargetResumesAgency) {\n            return (\n                <Link\n                    href=\"/employer/targetresumes\"\n                    className=\"my-events__item my-events__item_target-resumes\"\n                    data-qa=\"my-events-targetresumes\"\n                >\n                    <Text>\n                        <span className=\"my-events__name\">\n                            {featuresTargetResumes ? trls[Index.trls.targetResumes] : trls[Index.trls.incomingResumes]}\n                        </span>\n                        <span className=\"my-events__count\">{getEmployerTargetResumesEventCounter()}</span>\n                    </Text>\n                </Link>\n            );\n        }\n\n        return null;\n    };\n\n    const getAvailableMoney = () => {\n        const billingSummary = employerIndexPage?.oldEmployer?.billingSummary;\n\n        if (!billingSummary) {\n            return null;\n        }\n\n        if (billingSummary.availableWithoutBlockedMoney === 0 && !paymentNotAvailableSites.includes(topLevelSite)) {\n            return (\n                <Link\n                    ref={balanceIncreaseLinkRef}\n                    href=\"/employer/invoice/payment\"\n                    data-qa=\"my-events-balance-putmoney\"\n                    onClick={\n                        employerMainPageAnalyticsEnabled\n                            ? indexPageEmployerAnalytics.myEventsBalanceIncreaseClick\n                            : undefined\n                    }\n                >\n                    {trls[Index.trls.putMoney]}\n                </Link>\n            );\n        }\n\n        return (\n            <FormatMoney currency={billingSummary.currency}>{billingSummary.availableWithoutBlockedMoney}</FormatMoney>\n        );\n    };\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled) {\n            if (vacancyResponsesLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsVacancyResponsesShown(vacancyResponsesLinkRef.current);\n            }\n            if (autoSearchLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsAutoSearchShown(autoSearchLinkRef.current);\n            }\n            if (balanceAccountLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsBalanceAccountShown(balanceAccountLinkRef.current);\n            }\n            if (createVacancyLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsCreateVacancyShown(createVacancyLinkRef.current);\n            }\n            if (balanceIncreaseLinkRef.current) {\n                indexPageEmployerAnalytics.myEventsBalanceIncreaseShown(balanceIncreaseLinkRef.current);\n            }\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    return (\n        <div className=\"my-events-employer\">\n            <div className=\"my-events\" data-qa=\"my-events\">\n                <H2>{trls[Index.trls.title]}</H2>\n                <VSpacing base={4} />\n                <a\n                    ref={vacancyResponsesLinkRef}\n                    href=\"/employer/vacancies\"\n                    className=\"my-events__item my-events__item_letters\"\n                    data-qa=\"my-events-vacancyresponses\"\n                    onClick={\n                        employerMainPageAnalyticsEnabled\n                            ? indexPageEmployerAnalytics.myEventsVacancyResponsesClick\n                            : undefined\n                    }\n                >\n                    <Text>\n                        <span className=\"my-events__name\">{trls[Index.trls.vacancyResponses]}</span>\n                        <span className=\"my-events__count\" />\n                    </Text>\n                </a>\n                <a\n                    ref={autoSearchLinkRef}\n                    href=\"/resumesavedsearch\"\n                    className=\"my-events__item my-events__item_autosearches\"\n                    data-qa=\"my-events-autosearches\"\n                    onClick={\n                        employerMainPageAnalyticsEnabled\n                            ? indexPageEmployerAnalytics.myEventsAutoSearchClick\n                            : undefined\n                    }\n                >\n                    <Text>\n                        <span className=\"my-events__name\">{trls[Index.trls.autosearches]}</span>\n                        <span className=\"my-events__count\">\n                            {userStats?.['new-resumes-saved-search'] ? (\n                                <span className=\"event-counter event-counter_new-events\">\n                                    {`+${userStats['new-resumes-saved-search']}`}\n                                </span>\n                            ) : (\n                                ''\n                            )}\n                        </span>\n                    </Text>\n                </a>\n                {getTargetResumes()}\n                <div className=\"my-events__separator\" />\n                <div className=\"my-events__item my-events__item_balance\" data-qa=\"my-events-balance\">\n                    <Text>\n                        <span className=\"my-events__name\">\n                            <Link\n                                ref={balanceAccountLinkRef}\n                                href=\"/employer/account\"\n                                kind={LinkKind.Tertiary}\n                                data-qa=\"my-events-balance-account\"\n                                onClick={\n                                    employerMainPageAnalyticsEnabled\n                                        ? indexPageEmployerAnalytics.myEventsBalanceAccountClick\n                                        : undefined\n                                }\n                            >\n                                {trls[Index.trls.balance]}\n                            </Link>\n                        </span>\n                        <span className=\"my-events__count\">\n                            <span className=\"event-counter\">{getAvailableMoney()}</span>\n                        </span>\n                    </Text>\n                </div>\n                <BalanceVacancies />\n                <BalanceAccess />\n                {isZp && <BalanceOptions />}\n                {employerIndexPage?.oldEmployer?.canViewStatPortal && <EventStatistics />}\n                {permissions.includes('CreateVacancy') && (\n                    <div className=\"my-events__button\">\n                        <Link\n                            ref={createVacancyLinkRef}\n                            href=\"/employer/vacancy/create\"\n                            data-qa=\"my-events-createvacancy\"\n                            disableVisited\n                            onClick={\n                                employerMainPageAnalyticsEnabled\n                                    ? indexPageEmployerAnalytics.myEventsCreateVacancyClick\n                                    : undefined\n                            }\n                        >\n                            {trls[Index.trls.newVacancy]}\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nIndex.propTypes = {\n    trls: PropTypes.object,\n};\n\nIndex.features = {\n    targetResumes: 'targetResumes',\n    targetResumesAgency: 'targetResumesAgency',\n};\n\nIndex.trls = {\n    title: 'index.headers.events',\n    vacancyResponses: 'index.events.vacancyResponses',\n    autosearches: 'index.events.autosearches',\n    targetResumes: 'index.events.targetResumes',\n    incomingResumes: 'index.employer.billing.incomingResumes',\n    balance: 'index.employer.billing.balance',\n    newVacancy: 'index.events.button.newVacancy',\n    putMoney: 'index.employer.billing.putMoney',\n};\n\nexport default translation(Index);\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport { H2 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport NumberFormatter from 'bloko/common/numberFormatter';\nimport { format } from 'bloko/common/trl';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useIsRabotaBy } from 'lux/hooks/useSites';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ZP_ARTICLE_URL = '/article/25295?hhtmFrom=resume_search_form';\nconst HH_ARTICLE_URL = '/article/hhsearch';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst EmptySearches = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const howToSearchLearnMoreRef = useRef(null);\n    const resumeCount = useSelector((state) => state.globalStatistics?.resumes);\n    const isZp = useIsZarplataPlatform();\n    const showResumeCount = !useIsRabotaBy();\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && howToSearchLearnMoreRef.current) {\n            indexPageEmployerAnalytics.howToSearchLearnMoreShown(howToSearchLearnMoreRef.current);\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    return (\n        <div className=\"last-searches-wrapper\" data-qa=\"last-searches-empty\">\n            <div ref={howToSearchLearnMoreRef} className=\"last-searches\">\n                <Text>\n                    <H2>{trls[EmptySearches.trls.emptySearchesTitle]}</H2>\n                    <VSpacing base={4} />\n                    {showResumeCount && resumeCount && (\n                        <p className=\"index-dashboard-text-paragraph\">\n                            {format(trls[EmptySearches.trls.resumesCount], {\n                                '{0}': NumberFormatter.format(`${resumeCount}`, { groupSeparator: NON_BREAKING_SPACE }),\n                            })}\n                        </p>\n                    )}\n                    <p className=\"index-dashboard-text-paragraph\">{trls[EmptySearches.trls.queryConstructor]}</p>\n                    <Gap top>\n                        <Button\n                            kind={ButtonKind.Primary}\n                            appearance={ButtonAppearance.Outlined}\n                            Element={Link}\n                            to={isZp ? ZP_ARTICLE_URL : HH_ARTICLE_URL}\n                            data-qa=\"last-searches-empty-findout\"\n                            onClick={indexPageEmployerAnalytics.howToSearchLearnMoreClick}\n                        >\n                            {trls[EmptySearches.trls.findOut]}\n                        </Button>\n                    </Gap>\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nEmptySearches.trls = {\n    emptySearchesTitle: 'index.employerLastSearches.textBlockTitle',\n    resumesCount: 'index.employerLastSearches.text.resumesCount',\n    queryConstructor: 'index.employerLastSearches.text.queryConstructor',\n    findOut: 'index.employerLastSearches.text.findOut',\n};\n\nEmptySearches.propTypes = {\n    trls: PropTypes.object,\n    resumeCount: PropTypes.number,\n};\n\nexport default translation(EmptySearches);\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchCriterion = ({ children, delimiter = ',', showDelimiter = true }) => {\n    return (\n        <Fragment>\n            {children}\n            {showDelimiter && <span className=\"last-searches-details__delimiter\">{`${delimiter} `}</span>}\n        </Fragment>\n    );\n};\n\nSearchCriterion.propTypes = {\n    children: PropTypes.node,\n    delimiter: PropTypes.string,\n    showDelimiter: PropTypes.bool,\n};\n\nexport default SearchCriterion;\n","import PropTypes from 'prop-types';\n\nimport Text, { TextSize, TextImportance } from 'bloko/blocks/text';\n\nimport SearchCriterion from 'lux/components/IndexPageEmployer/components/LastSearches/SearchCriterion';\n\nconst mapEntitiesToCriteries = (entities) => {\n    if (!entities) {\n        return null;\n    }\n\n    return entities.map(({ id, text }) => <SearchCriterion key={id}>{text}</SearchCriterion>);\n};\n\nconst SearchDetails = ({ searchCriteria = {} }) => {\n    return (\n        <Text size={TextSize.Small} importance={TextImportance.Tertiary} data-qa=\"last-searches-details\">\n            {mapEntitiesToCriteries(searchCriteria.area)}\n            {mapEntitiesToCriteries(searchCriteria.employment)}\n            {mapEntitiesToCriteries(searchCriteria.schedule)}\n        </Text>\n    );\n};\n\nconst baseEntityWithTrl = PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n});\n\nSearchDetails.propTypes = {\n    trls: PropTypes.object,\n    searchCriteria: PropTypes.shape({\n        area: PropTypes.arrayOf(baseEntityWithTrl),\n        employment: PropTypes.arrayOf(baseEntityWithTrl),\n        schedule: PropTypes.arrayOf(baseEntityWithTrl),\n    }),\n};\n\nexport default SearchDetails;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Icon, { IconDynamic, IconLink, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport Link, { LinkKind } from 'bloko/blocks/link';\n\nimport translation from 'lux/components/translation';\nimport { removeSavedSearch } from 'lux/models/employer/employerLastSearches';\nimport fetcher from 'lux/modules/fetcher';\nimport paths from 'lux/modules/routePaths';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nimport SearchDetails from 'lux/components/IndexPageEmployer/components/LastSearches/SearchDetails';\n\nconst SavedSearch = ({ trls, id, searchQuery, text, searchCriteria, position }) => {\n    const dispatch = useDispatch();\n\n    const handleRemove = async () => {\n        dispatch(removeSavedSearch({ id }));\n        try {\n            await fetcher.postFormData('/shards/employer/last_search/remove', { 'search-id': id });\n        } catch (error) {\n            dispatch(showDefaultError(error));\n        }\n    };\n\n    return (\n        <li className=\"last-searches-item\">\n            <div className=\"last-searches-item__content\">\n                <span className=\"last-searches-item__name\">\n                    <Link\n                        href={`${paths.resumeSearch}?${searchQuery}&mark=main_page_last_search_${position}`}\n                        kind={LinkKind.Tertiary}\n                        data-qa=\"last-searches-search-link\"\n                    >\n                        {text || trls[SavedSearch.trls.search]}\n                    </Link>\n                </span>\n                <span className=\"last-searches-item__remove\" data-qa=\"last-searches-search-remove\">\n                    <IconDynamic>\n                        <IconLink data-search-id={id} onClick={handleRemove}>\n                            <Icon view={IconView.Cross} initial={IconColor.Gray60} scale={IconScale.Small} />\n                        </IconLink>\n                    </IconDynamic>\n                </span>\n            </div>\n            <SearchDetails searchCriteria={searchCriteria} />\n        </li>\n    );\n};\n\nSavedSearch.trls = {\n    search: 'index.employerLastSearches.search',\n};\n\nSavedSearch.propTypes = {\n    trls: PropTypes.object,\n    id: PropTypes.number.isRequired,\n    searchQuery: PropTypes.string.isRequired,\n    searchCriteria: PropTypes.object,\n    position: PropTypes.number,\n    text: PropTypes.string,\n};\n\nexport default translation(SavedSearch);\n","import PropTypes from 'prop-types';\n\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\n\nimport SavedSearch from 'lux/components/IndexPageEmployer/components/LastSearches/SavedSearch';\n\nconst SearchList = ({ trls, searches }) => {\n    return (\n        <div className=\"last-searches-wrapper\" data-qa=\"last-searches\">\n            <div className=\"last-searches-header\">\n                <div className=\"substrate substrate_header\">\n                    <H2>{trls[SearchList.trls.title]}</H2>\n                    <VSpacing base={4} />\n                </div>\n            </div>\n\n            <ul className=\"last-searches\">\n                <li className=\"last-searches__dummy-item\">\n                    <H2>{trls[SearchList.trls.title]}</H2>\n                    <VSpacing base={4} />\n                </li>\n                {searches.map(({ id, text, searchQuery, searchCriteria }, index) => (\n                    <SavedSearch\n                        key={id}\n                        id={id}\n                        text={text}\n                        searchQuery={searchQuery}\n                        searchCriteria={searchCriteria}\n                        position={index + 1}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nSearchList.trls = {\n    title: 'index.employerLastSearches.title',\n};\n\nSearchList.propTypes = {\n    trls: PropTypes.object,\n    searches: PropTypes.array.isRequired,\n};\n\nexport default translation(SearchList);\n","import PropTypes from 'prop-types';\n\nimport Gap from 'bloko/blocks/gap';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport EmptySearches from 'lux/components/IndexPageEmployer/components/LastSearches/EmptySearches';\nimport SearchList from 'lux/components/IndexPageEmployer/components/LastSearches/SearchList';\n\nconst LastSearches = () => {\n    const lastSearches = useSelector((state) => state.employerLastSearches);\n\n    return <Gap xsTop>{lastSearches.length ? <SearchList searches={lastSearches} /> : <EmptySearches />}</Gap>;\n};\n\nLastSearches.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport default translation(LastSearches);\n","import { FC, PropsWithChildren } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\ninterface SeparatorProps {\n    xs?: '0' | '4';\n    s?: '0' | '8';\n    m?: '0' | '12';\n    l?: '0' | '16';\n}\n\nconst Separator: FC<SeparatorProps & PropsWithChildren> = ({ xs = '0', s = '0', m = '0', l = '0' }) => {\n    return (\n        <Column xs={xs} s={s} m={m} l={l}>\n            <div className=\"separator\" />\n        </Column>\n    );\n};\n\nexport default Separator;\n","import { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\n\nimport { markUpdateViewed } from 'lux/models/oldEmployer/oldEmployerUpdates';\n\nconst ItemLink = ({ date, text, href, viewed = false }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"updates-item-link\">\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to={href}\n                onClick={() => {\n                    dispatch(markUpdateViewed({ href }));\n                }}\n            >\n                <div\n                    className={classnames('updates-item-link-inner', {\n                        'updates-item-link-inner_not-viewed': !viewed,\n                    })}\n                >\n                    {date && (\n                        <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                            {date}\n                        </Text>\n                    )}\n                    <div className=\"updates-text\">{text}</div>\n                </div>\n            </BlokoLink>\n        </div>\n    );\n};\n\nItemLink.propTypes = {\n    date: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired,\n    viewed: PropTypes.bool,\n};\n\nexport default ItemLink;\n","import PropTypes from 'prop-types';\n\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\n\nconst ItemText = ({ date, text }) => {\n    return (\n        <div className=\"updates-item-text\">\n            {date && (\n                <Text size={TextSize.Small} importance={TextImportance.Tertiary}>\n                    {date}\n                </Text>\n            )}\n            {text}\n        </div>\n    );\n};\n\nItemText.propTypes = {\n    date: PropTypes.string,\n    text: PropTypes.string.isRequired,\n};\n\nexport default ItemText;\n","export const TAB_IDS = {\n    NEW_TAB_ID: 'new',\n    COMING_SOON_TAB_ID: 'coming_soon',\n};\n\nexport enum UpdateType {\n    New = 'new',\n    Soon = 'soon',\n}\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport throttle from 'bloko/common/throttle';\n\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ItemLink from 'lux/components/IndexPageEmployer/components/Updates/ItemLink';\nimport ItemText from 'lux/components/IndexPageEmployer/components/Updates/ItemText';\nimport { TAB_IDS, UpdateType } from 'lux/components/IndexPageEmployer/components/Updates/constants';\n\nconst SCROLL_THROTTLE_DELAY_MS = 50;\n\nconst calcIsShadowVisible = (parent, activeElement) =>\n    activeElement.scrollHeight - activeElement.scrollTop > parent.offsetHeight;\n\nconst Body = ({ activeTabId }) => {\n    const updates = useSelector((state) => state.oldEmployerUpdates);\n    const updatesNew = useMemo(() => updates.filter((item) => item.type === UpdateType.New), [updates]);\n    const updatesSoon = useMemo(() => updates.filter((item) => item.type === UpdateType.Soon), [updates]);\n\n    const updatesBodyItemsRef = useRef();\n    const updatesNewItemsRef = useRef();\n    const updatesSoonItemsRef = useRef();\n\n    const [shadow, showShadow] = useState(true);\n\n    const isNewTabActive = activeTabId === TAB_IDS.NEW_TAB_ID;\n\n    const trackScroll = throttle((element) => {\n        showShadow(calcIsShadowVisible(updatesBodyItemsRef.current, element));\n    }, SCROLL_THROTTLE_DELAY_MS);\n\n    useEffect(() => {\n        const activeItemsElement = isNewTabActive ? updatesNewItemsRef.current : updatesSoonItemsRef.current;\n        showShadow(calcIsShadowVisible(updatesBodyItemsRef.current, activeItemsElement));\n    }, [isNewTabActive]);\n\n    return (\n        <div className=\"updates-body\">\n            <div\n                className={classnames('updates-body__items', { 'updates-body__items_hideshadow': !shadow })}\n                ref={updatesBodyItemsRef}\n            >\n                <div\n                    className={classnames('updates-body__items-new', {\n                        'g-hidden': !isNewTabActive,\n                    })}\n                    ref={updatesNewItemsRef}\n                    onScroll={() => {\n                        trackScroll(updatesNewItemsRef.current);\n                    }}\n                >\n                    {updatesNew.map(({ date, text, href, viewed }) =>\n                        href ? (\n                            <ItemLink key={href} date={date} text={text} href={href} viewed={viewed} />\n                        ) : (\n                            <ItemText key={text} date={date} text={text} />\n                        )\n                    )}\n                </div>\n                <div\n                    className={classnames('updates-body__items-soon', {\n                        'g-hidden': isNewTabActive,\n                    })}\n                    ref={updatesSoonItemsRef}\n                    onScroll={() => {\n                        trackScroll(updatesSoonItemsRef.current);\n                    }}\n                >\n                    {updatesSoon.map(({ date, text }, i) => (\n                        <ItemText key={i} date={date} text={text} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nBody.propTypes = {\n    activeTabId: PropTypes.oneOf(Object.values(TAB_IDS)).isRequired,\n};\n\nexport default Body;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport translation from 'lux/components/translation';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst Footer = ({ trls }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const updatesAllLinkRef = useRef(null);\n\n    const trackAnalytics = () => {\n        Analytics.sendEvent('employer', 'click', 'all_updates');\n        if (employerMainPageAnalyticsEnabled) {\n            indexPageEmployerAnalytics.updatesAllClick();\n        }\n    };\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && updatesAllLinkRef.current) {\n            indexPageEmployerAnalytics.updatesAllShown(updatesAllLinkRef.current);\n        }\n    }, [employerMainPageAnalyticsEnabled]);\n\n    return (\n        <div className=\"updates-footer\">\n            <BlokoLink\n                ref={updatesAllLinkRef}\n                disableVisited\n                Element={Link}\n                to=\"/articles/employers/updates?from=dashboard&hhtmFromLabel=dashboard\"\n                data-qa=\"all-updates\"\n                onClick={trackAnalytics}\n            >\n                {trls[Footer.trls.allUpdatesLink]}\n            </BlokoLink>\n        </div>\n    );\n};\n\nFooter.propTypes = {\n    trls: PropTypes.object,\n};\n\nFooter.trls = {\n    allUpdatesLink: 'index.employerUpdatesInfo.allUpdatesLink',\n};\n\nexport default translation(Footer);\n","import { useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button from 'bloko/blocks/button';\nimport Link from 'bloko/blocks/link';\n\nimport indexPageEmployerAnalytics from 'lux/components/IndexPageEmployer/components/analytics';\nimport useFeatureEnabled from 'lux/hooks/useFeatureEnabled';\n\nconst Features = {\n    employerMainPageAnalyticsEnabled: 'employer_main_page_analytics_enabled',\n};\n\nconst Tab = ({ id, children, active = false, onClick = () => {}, ...linkProps }) => {\n    const employerMainPageAnalyticsEnabled = useFeatureEnabled(Features.employerMainPageAnalyticsEnabled);\n    const tabRef = useRef(null);\n    const handleClick = () => {\n        onClick(id);\n        Analytics.sendEvent('employer', 'click', id);\n        if (employerMainPageAnalyticsEnabled && !active) {\n            indexPageEmployerAnalytics.updatesTabClick(id);\n        }\n    };\n\n    useEffect(() => {\n        if (employerMainPageAnalyticsEnabled && tabRef.current) {\n            indexPageEmployerAnalytics.updatesTabShown(tabRef.current, id);\n        }\n    }, [employerMainPageAnalyticsEnabled, id]);\n\n    return (\n        <Link Element={Button} data-qa=\"updates-new\" {...linkProps} onClick={handleClick}>\n            <span ref={tabRef} className={classnames('updates-head-tab', { 'updates-head-tab_active': active })}>\n                {children}\n            </span>\n        </Link>\n    );\n};\n\nTab.propTypes = {\n    id: PropTypes.string.isRequired,\n    children: PropTypes.node,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default Tab;\n","import PropTypes from 'prop-types';\n\nimport { FormSpacer } from 'bloko/blocks/form';\n\nimport translation from 'lux/components/translation';\n\nimport Tab from 'lux/components/IndexPageEmployer/components/Updates/Tab';\nimport { TAB_IDS } from 'lux/components/IndexPageEmployer/components/Updates/constants';\n\nconst Tabs = ({ trls, activeTabId, onChange = () => {} }) => {\n    return (\n        <div className=\"updates-head-tabs\">\n            <FormSpacer element=\"span\">\n                <Tab\n                    id={TAB_IDS.NEW_TAB_ID}\n                    active={activeTabId === TAB_IDS.NEW_TAB_ID}\n                    data-qa=\"updates-new\"\n                    onClick={onChange}\n                >\n                    {trls[Tabs.trls.newTab]}\n                </Tab>\n            </FormSpacer>\n            <FormSpacer element=\"span\">\n                <Tab\n                    id={TAB_IDS.COMING_SOON_TAB_ID}\n                    active={activeTabId === TAB_IDS.COMING_SOON_TAB_ID}\n                    data-qa=\"updates-soon\"\n                    onClick={onChange}\n                >\n                    {trls[Tabs.trls.soonTab]}\n                </Tab>\n            </FormSpacer>\n        </div>\n    );\n};\n\nTabs.trls = {\n    newTab: 'index.employerUpdatesInfo.new',\n    soonTab: 'index.employerUpdatesInfo.soon',\n};\n\nTabs.propTypes = {\n    trls: PropTypes.object,\n    activeTabId: PropTypes.oneOf(Object.values(TAB_IDS)).isRequired,\n    onChange: PropTypes.func,\n};\n\nexport default translation(Tabs);\n","import { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Gap from 'bloko/blocks/gap/index';\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\n\nimport Body from 'lux/components/IndexPageEmployer/components/Updates/Body';\nimport Footer from 'lux/components/IndexPageEmployer/components/Updates/Footer';\nimport Tabs from 'lux/components/IndexPageEmployer/components/Updates/Tabs';\nimport { TAB_IDS } from 'lux/components/IndexPageEmployer/components/Updates/constants';\n\nconst Updates = ({ trls, stretched = false }) => {\n    const updatesRef = useRef();\n    const [activeTabId, setActiveTab] = useState(TAB_IDS.NEW_TAB_ID);\n\n    const switchTab = (tabId) => {\n        setActiveTab(tabId);\n    };\n\n    useEffect(() => {\n        Analytics.sendHHEventElementShown(updatesRef.current, {\n            name: 'employer_updates_info',\n        });\n    }, []);\n\n    return (\n        <Gap xsTop sTop>\n            <div\n                className={classnames('updates-wrapper', { 'updates-wrapper_index-news-box': stretched })}\n                ref={updatesRef}\n            >\n                <div>\n                    <div className=\"updates-head\">\n                        <H2>{trls[Updates.trls.header]}</H2>\n                        <Tabs activeTabId={activeTabId} onChange={switchTab} />\n                    </div>\n                    <VSpacing base={4} />\n                </div>\n                <Body activeTabId={activeTabId} />\n                <Footer />\n            </div>\n        </Gap>\n    );\n};\n\nUpdates.propTypes = {\n    trls: PropTypes.object,\n    stretched: PropTypes.bool,\n};\n\nUpdates.trls = {\n    header: 'index.employerUpdatesInfo.header',\n};\n\nexport default translation(Updates);\n","import PropTypes from 'prop-types';\n\nimport Column from 'bloko/blocks/column';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport EmployerEventList from 'lux/components/IndexPageEmployer/components/EmployerEventList';\nimport LastSearches from 'lux/components/IndexPageEmployer/components/LastSearches';\nimport Separator from 'lux/components/IndexPageEmployer/components/Separator';\nimport Updates from 'lux/components/IndexPageEmployer/components/Updates';\nimport NewsBox from 'lux/components/NewsBox';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    articlesTitle: 'index.Articles',\n    newsTitle: 'index.newsTitle',\n};\n\nconst Dashboard = ({ trls }) => {\n    const isZp = useIsZarplataPlatform();\n    const employerArticles = useSelector((state) => state.employerArticles);\n    const employerNews = useSelector((state) => state.employerNews);\n\n    return (\n        <div className=\"employer-dashboard\">\n            <VSpacing base={6} />\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <EmployerEventList />\n            </Column>\n            <Separator xs=\"4\" />\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <LastSearches />\n            </Column>\n            <Separator xs=\"4\" />\n            {!isZp ? (\n                <>\n                    <Column xs=\"4\" s=\"8\" m=\"4\" l=\"4\">\n                        <Updates />\n                    </Column>\n                    <Separator xs=\"4\" />\n                </>\n            ) : (\n                <>\n                    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                        <NewsBox\n                            items={employerArticles}\n                            title={trls[TrlKeys.articlesTitle]}\n                            href=\"/articles/employers\"\n                            inDashboard\n                            withSeparator\n                        />\n                    </Column>\n                    <Separator xs=\"4\" />\n                    <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                        <NewsBox\n                            items={employerNews}\n                            title={trls[TrlKeys.newsTitle]}\n                            href=\"/articles/site-news\"\n                            inDashboard\n                        />\n                    </Column>\n                </>\n            )}\n            <VSpacing base={6} />\n        </div>\n    );\n};\n\nDashboard.propTypes = {\n    trls: PropTypes.object,\n};\n\nexport default translation(Dashboard);\n","import Column from 'bloko/blocks/column';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport NewsBox from 'lux/components/NewsBox';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    newsTitle: 'index.newsTitle',\n    articlesTitle: 'index.Articles',\n};\n\nconst NewsBoxWrapper: TranslatedComponent = ({ trls, children }) => {\n    const employerNews = useSelector((state) => state.employerNews);\n    const employerArticles = useSelector((state) => state.employerArticles);\n\n    return (\n        <Column xs=\"4\" s=\"8\" m=\"12\" l=\"4\" container>\n            <NewsBox\n                items={employerNews}\n                title={trls[TrlKeys.newsTitle]}\n                href=\"/articles/site-news\"\n                withSeparator\n                gapTop\n            />\n            <NewsBox\n                items={employerArticles}\n                title={trls[TrlKeys.articlesTitle]}\n                href=\"/articles/employers\"\n                isArticle\n                gapTop\n            />\n            {children}\n        </Column>\n    );\n};\n\nexport default translation(NewsBoxWrapper);\n","import { FC } from 'react';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\n\nconst WidgetEmployerReviewsIndex: FC = () => <ContainerForMicroFrontend place={'employerReviewsEmployerIndex'} />;\n\nexport default WidgetEmployerReviewsIndex;\n","import { FC } from 'react';\n\nimport ContainerForMicroFrontend from 'lux/components/CodeInjector/ContainerForMicroFrontend';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst WIDGET_PLACE_NAME = 'renewalServiceWidget';\n\nexport const useRenewalServiceHasContent = (): boolean => {\n    const renewalWidgetStatus = useSelector(({ microFrontends }) => microFrontends[WIDGET_PLACE_NAME]);\n    return !!renewalWidgetStatus;\n};\n\nconst RenewalServiceWidget: FC = () => <ContainerForMicroFrontend place={WIDGET_PLACE_NAME} />;\n\nexport default RenewalServiceWidget;\n","import { FC } from 'react';\n\nimport Column from 'bloko/blocks/column';\n\nimport WidgetEmployerReviewsIndex from 'lux/components/EmployerReviews/WidgetEmployerReviewsIndex';\nimport RenewalServiceWidget, { useRenewalServiceHasContent } from 'lux/components/RenewalService/RenewalServiceWidget';\nimport { useIsRussia } from 'lux/hooks/useCountries';\n\nconst WidgetEmployerIndexWrapper: FC = () => {\n    const renewalServiceHasContent = useRenewalServiceHasContent();\n    const isRussia = useIsRussia();\n\n    if (!isRussia) {\n        return null;\n    }\n    return (\n        <Column xs=\"4\" s=\"8\" m=\"8\" l=\"4\">\n            {renewalServiceHasContent ? <RenewalServiceWidget /> : <WidgetEmployerReviewsIndex />}\n        </Column>\n    );\n};\n\nexport default WidgetEmployerIndexWrapper;\n","import Column, { ColumnsWrapper } from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport FAQ from 'lux/components/FAQ';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport Calendar from 'lux/components/IndexPageEmployer/components/Calendar';\nimport CalendarWithBanners from 'lux/components/IndexPageEmployer/components/Calendar/CalendarWithBanners';\nimport Dashboard from 'lux/components/IndexPageEmployer/components/Dashboard';\nimport NewsBoxWrapper from 'lux/components/IndexPageEmployer/components/NewsBoxWrapper';\nimport Separator from 'lux/components/IndexPageEmployer/components/Separator';\nimport WidgetEmployerIndexWrapper from 'lux/components/IndexPageEmployer/components/WidgetEmployerIndexWrapper';\n\nconst IndexEmployer = () => {\n    const employerFaq = useSelector((state) => state.employerFaq);\n    const isZp = useIsZarplataPlatform();\n\n    return (\n        <ColumnsWrapper>\n            <Column xs=\"4\" s=\"8\" m=\"12\" l={!isZp ? '12' : '16'} container>\n                <Dashboard />\n                <CalendarWithBanners />\n                {!isZp && (\n                    <>\n                        <VSpacing base={10} />\n\n                        <Column xs=\"0\" s=\"0\" m=\"0\" l=\"12\">\n                            <FAQ items={employerFaq} gapTop />\n                        </Column>\n                    </>\n                )}\n            </Column>\n            {!isZp && (\n                <>\n                    <Column xs=\"4\" s=\"8\" m=\"12\" l=\"4\" container>\n                        <WidgetEmployerIndexWrapper />\n                        <NewsBoxWrapper>\n                            <Column xs=\"4\" s=\"8\" m=\"4\" l=\"0\" container>\n                                <Separator xs=\"4\" s=\"8\" />\n                                <Column xs=\"4\" s=\"4\" m=\"4\">\n                                    <div className=\"index-news-box index-news-box_faq\">\n                                        <FAQ items={employerFaq} gapTop />\n                                    </div>\n                                </Column>\n                                <Separator xs=\"4\" />\n                                <Column xs=\"4\" s=\"0\" m=\"0\" l=\"0\">\n                                    <Gap top>\n                                        <Calendar container />\n                                    </Gap>\n                                </Column>\n                            </Column>\n                        </NewsBoxWrapper>\n                    </Column>\n                </>\n            )}\n        </ColumnsWrapper>\n    );\n};\n\nexport default IndexEmployer;\n","export default {\n    UNREGISTERED: 'UNREGISTERED',\n    NEW: 'NEW',\n    APPROVED: 'APPROVED',\n    DISCARDED: 'DISCARDED',\n    DISABLED: 'DISABLED',\n    WAITING: 'WAITING',\n};\n","export default {\n    PROJECT_DIRECTOR: 'PROJECT_DIRECTOR',\n    PRIVATE_RECRUITER: 'PRIVATE_RECRUITER',\n    AGENCY: 'AGENCY',\n    COMPANY: 'COMPANY',\n    UNKNOWN: 'UNKNOWN',\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button from 'bloko/blocks/button';\nimport Column from 'bloko/blocks/column';\nimport Gap from 'bloko/blocks/gap/index';\nimport { H2 } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\nimport EMPLOYER_CATEGORIES from 'lux/modules/employer/categories';\n\nconst CompanyConfirmation = ({ trls, companyCategory }) => {\n    const isCompany = companyCategory === EMPLOYER_CATEGORIES.COMPANY;\n\n    const handleUploadClick = () => {\n        Analytics.sendHHEventButtonClick('upload-documents', {\n            goal: isCompany ? 'clicked-company-confirmation' : 'clicked-not-company-confirmation',\n        });\n    };\n\n    useEffect(() => {\n        Analytics.sendHHEvent(\n            'element_shown',\n            { goal: isCompany ? 'showed-company-confirmation' : 'showed-not-company-confirmation' },\n            {\n                elementName: 'company-confirmation',\n            }\n        );\n    }, [isCompany]);\n\n    return (\n        <div className=\"employer-promo-block\" data-qa=\"company-confirmation\">\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <Gap top>\n                    <H2>{trls[CompanyConfirmation.trls.title]}</H2>\n                    <VSpacing base={4} />\n                    <Gap bottom>\n                        <div className=\"employer-promo-vacancies\">\n                            <span className=\"employer-promo-vacancies__text\">\n                                {trls[CompanyConfirmation.trls.description]}\n                            </span>\n                            <span>\n                                <span className=\"employer-promo-vacancies__badge employer-promo-vacancies__badge_no-vacancy\" />\n                            </span>\n                        </div>\n                    </Gap>\n                    <Button\n                        Element={Link}\n                        to=\"/employer/documents\"\n                        onClick={handleUploadClick}\n                        data-qa=\"company-confirmation-completeRegistration\"\n                    >\n                        {trls[CompanyConfirmation.trls.action]}\n                    </Button>\n                </Gap>\n            </Column>\n        </div>\n    );\n};\n\nCompanyConfirmation.trls = {\n    description: 'advice.employer.completeRegistration.description.notCompany',\n    title: 'advice.employer.completeRegistration.title',\n    action: 'advice.employer.completeRegistration.action',\n};\n\nCompanyConfirmation.propTypes = {\n    trls: PropTypes.object,\n    show: PropTypes.bool,\n    companyCategory: PropTypes.string,\n};\n\nexport default translation(CompanyConfirmation);\n","import { Fragment } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button from 'bloko/blocks/button';\nimport Column from 'bloko/blocks/column';\nimport { H2 } from 'bloko/blocks/header';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ContactPhones = ({ trls, showDelimiter = false }) => {\n    const phones = useSelector(({ contactPhones }) => contactPhones) || [];\n    const isZp = useIsZarplataPlatform();\n\n    return (\n        <div\n            className={classnames('employer-promo-block', {\n                'employer-promo-block_advice': showDelimiter,\n            })}\n        >\n            <Column xs=\"4\" s=\"4\" m=\"4\" l=\"4\">\n                <div className=\"contact-us\" data-qa=\"contact-us\">\n                    <H2>{trls[ContactPhones.trls.contactUsHeader]}</H2>\n                    <VSpacing base={4} />\n                    <div className=\"contact-us__phones\">\n                        {phones.map((phone) => (\n                            <Fragment key={phone.postfix}>\n                                {!isZp && (\n                                    <Text importance={TextImportance.Tertiary}>\n                                        {trls[ContactPhones.trls.regions[phone.postfix]]}\n                                    </Text>\n                                )}\n                                <span className=\"contact-us__phone\">\n                                    <Text Element=\"span\" size={TextSize.Large}>\n                                        {`${phone.country} ${phone.city} ${phone.number}`}\n                                    </Text>\n                                </span>\n                            </Fragment>\n                        ))}\n                    </div>\n                    {!isZp && (\n                        <Button Element={Link} to=\"/support/order_call/list\" data-qa=\"contact-us-order-call\">\n                            {trls[ContactPhones.trls.contactUsAction]}\n                        </Button>\n                    )}\n                </div>\n            </Column>\n        </div>\n    );\n};\n\nContactPhones.trls = {\n    contactUsHeader: 'index.contactUs.header',\n    contactUsAction: 'employer.order.phone',\n    regions: {\n        msk: 'helpPhone.title.msk',\n        spb: 'helpPhone.title.spb',\n        regions: 'helpPhone.title.regions',\n        city: 'helpPhone.title.city',\n        mobile: 'helpPhone.title.mobile',\n        other: 'helpPhone.title.regions',\n    },\n};\n\nContactPhones.propTypes = {\n    trls: PropTypes.object,\n    showDelimiter: PropTypes.bool,\n};\n\nexport default translation(ContactPhones);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport Gap from 'bloko/blocks/gap';\nimport { H3 } from 'bloko/blocks/header';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst PreparedVacancyTemplates = ({ trls }) => {\n    const dispatch = useDispatch();\n    const templates = useSelector(({ preparedVacancyTemplates }) => preparedVacancyTemplates);\n    const [visibleCount, setVisibleCount] = useState(12);\n    const [loadMoreVisible, setLoadMoreVisible] = useState(templates.length - visibleCount > 0);\n\n    return templates.length > 0 ? (\n        <div className=\"prepared-vacancy-templates-wrapper\">\n            <H3>{trls[PreparedVacancyTemplates.trls.title]}</H3>\n            <VSpacing base={4} />\n            <div>{trls[PreparedVacancyTemplates.trls.subtitle]}</div>\n            <div className=\"prepared-vacancy-templates\">\n                {templates.slice(0, visibleCount).map((template) => (\n                    <div className=\"prepared-vacancy-templates-button-wrapper\" key={template.id}>\n                        <button\n                            className=\"prepared-vacancy-templates-button\"\n                            onClick={() =>\n                                dispatch(\n                                    push(\n                                        `/employer/vacancy/create?from=index_new_employer&preparedTemplateId=${template.id}`\n                                    )\n                                )\n                            }\n                        >\n                            {template.name}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            {loadMoreVisible && (\n                <Gap top>\n                    <Link\n                        appearance={LinkAppearance.Pseudo}\n                        onClick={() => {\n                            setVisibleCount(templates.length);\n                            setLoadMoreVisible(false);\n                        }}\n                    >\n                        {formatToReactComponent(trls[PreparedVacancyTemplates.trls.loadMore], {\n                            '{0}': (\n                                <ConversionNumber\n                                    many={trls[PreparedVacancyTemplates.trls.templatesFive]}\n                                    some={trls[PreparedVacancyTemplates.trls.templatesTwo]}\n                                    one={trls[PreparedVacancyTemplates.trls.templatesOne]}\n                                    zero={trls[PreparedVacancyTemplates.trls.templatesFive]}\n                                    value={templates.length - visibleCount}\n                                />\n                            ),\n                        })}\n                    </Link>\n                </Gap>\n            )}\n        </div>\n    ) : null;\n};\n\nPreparedVacancyTemplates.propTypes = {\n    trls: PropTypes.object,\n};\n\nPreparedVacancyTemplates.trls = {\n    title: 'newemployer.dashboard.preparedVacancyTemplates.title',\n    subtitle: 'newemployer.dashboard.preparedVacancyTemplates.subtitle',\n    loadMore: 'newemployer.dashboard.preparedVacancyTemplates.loadMoreButton',\n    templatesFive: 'words.template.5',\n    templatesTwo: 'words.template.2',\n    templatesOne: 'words.template.1',\n};\n\nexport default translation(PreparedVacancyTemplates);\n","import PropTypes from 'prop-types';\n\nimport { H2Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nconst VacancyStatus = ({ children, kind = VacancyStatus.kinds.default }) => {\n    return (\n        <>\n            <H2Section>\n                <span className={`dashboard-vacancy-status-${kind}`}>{children}</span>\n            </H2Section>\n            <VSpacing base={4} />\n        </>\n    );\n};\n\nVacancyStatus.kinds = {\n    critical: 'critical',\n    major: 'major',\n    minor: 'minor',\n    good: 'good',\n    indeterminate: 'indeterminate',\n    default: 'default',\n};\n\nVacancyStatus.propTypes = {\n    children: PropTypes.node,\n    kind: PropTypes.oneOf(Object.values(VacancyStatus.kinds)),\n};\n\nexport default VacancyStatus;\n","import PropTypes from 'prop-types';\n\nimport Gap from 'bloko/blocks/gap';\nimport { H1, H4Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\n\nimport VacancyStatus from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStatus';\n\nconst AbstractVacancy = ({\n    trls,\n    children,\n    id,\n    name,\n    description,\n    statusKind = VacancyStatus.kinds.default,\n    statusText,\n}) => {\n    return (\n        <>\n            {id && (\n                <>\n                    <H4Section>{trls[AbstractVacancy.trls.vacancyNameLabel]}</H4Section>\n                    <VSpacing base={4} />\n                </>\n            )}\n            <H1 lite data-qa=\"dashboard-vacancy-header\">\n                {name || trls[AbstractVacancy.trls.vacancyNameStub]}\n            </H1>\n            <VSpacing base={4} />\n            {description && <Gap bottom>{description}</Gap>}\n            {statusText && (\n                <VacancyStatus kind={statusKind}>\n                    <span suppressHydrationWarning>{statusText}</span>\n                </VacancyStatus>\n            )}\n            {children}\n        </>\n    );\n};\n\nAbstractVacancy.propTypes = {\n    trls: PropTypes.object,\n    children: PropTypes.node,\n    id: PropTypes.number,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    statusKind: PropTypes.oneOf(Object.values(VacancyStatus.kinds)),\n    statusText: PropTypes.string,\n};\n\nAbstractVacancy.trls = {\n    vacancyNameLabel: 'newemployer.dashboard.vacancy.name.label',\n    vacancyNameStub: 'newemployer.dashboard.vacancy.name.stub',\n};\n\nexport default translation(AbstractVacancy);\n","import PropTypes from 'prop-types';\n\nimport Info, { InfoTheme } from 'bloko/blocks/drop/Info';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\n\nimport useOnOffState from 'lux/hooks/useOnOffState';\n\nconst LinkInfo = ({ children, render, onClick = () => {}, ...linkSwitchProps }) => {\n    const [show, showTip, hideTip] = useOnOffState(false);\n\n    const handleClick = () => {\n        showTip();\n        onClick();\n    };\n\n    return (\n        <Info show={show} theme={InfoTheme.Light} closeByClickOutside onClose={hideTip} render={render}>\n            <Link appearance={LinkAppearance.Pseudo} onClick={handleClick} {...linkSwitchProps}>\n                {children}\n            </Link>\n        </Info>\n    );\n};\n\nLinkInfo.propTypes = {\n    children: PropTypes.node,\n    render: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n};\n\nexport default LinkInfo;\n","import { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\nimport AbstractVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/AbstractVacancy';\nimport LinkInfo from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/LinkInfo';\nimport VacancyStatus from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStatus';\n\nconst BilledVacancy = ({ trls, vacancy, bill, giftsCount }) => {\n    const billedVacancyRef = useRef();\n    const isZp = useIsZarplataPlatform();\n    const sendAnalyticsToMyVacancies = () => {\n        Analytics.sendHHEventButtonClick('dashboard_vacancy_to_my_vacancies');\n    };\n\n    useEffect(\n        () =>\n            Analytics.sendHHEventElementShown(billedVacancyRef.current, {\n                name: 'dashboard_vacancy_fourth_state',\n            }),\n        [billedVacancyRef]\n    );\n\n    return (\n        <AbstractVacancy\n            id={vacancy.draftId}\n            name={vacancy.name}\n            statusKind={VacancyStatus.kinds.indeterminate}\n            statusText={format(trls[BilledVacancy.trls.waitingForPayment], { '{0}': bill })}\n        >\n            <div ref={billedVacancyRef} className=\"dashboard-vacancy-suggest\" data-qa=\"dashboard-billed-vacancy\">\n                <div>{trls[BilledVacancy.trls.billedVacancySuggestTitle]}</div>\n                <ul className=\"dashboard-vacancy-list\">\n                    {!isZp && giftsCount > 0 && (\n                        <li className=\"dashboard-vacancy-list-item\">\n                            {formatToReactComponent(trls[BilledVacancy.trls.billedVacancyThirdSuggestText], {\n                                '{0}': (\n                                    <LinkInfo\n                                        onClick={() => {\n                                            Analytics.sendHHEventButtonClick(\n                                                'dashboard_vacancy_billed_vacancy_suggestion'\n                                            );\n                                        }}\n                                        render={() =>\n                                            format(trls[BilledVacancy.trls.billedVacancyThirdSuggestInfoText], {\n                                                '{0}': giftsCount,\n                                            })\n                                        }\n                                        data-qa=\"dashboard-vacancy-gifts\"\n                                    >\n                                        {format(trls[BilledVacancy.trls.billedVacancyThirdSuggestLinkText], {\n                                            '{0}': giftsCount,\n                                        })}\n                                    </LinkInfo>\n                                ),\n                            })}\n                        </li>\n                    )}\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {trls[BilledVacancy.trls.billedVacancyFirstSuggestText]}\n                    </li>\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {trls[BilledVacancy.trls.billedVacancySecondSuggestText]}\n                    </li>\n                </ul>\n            </div>\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                onClick={sendAnalyticsToMyVacancies}\n                to=\"/employer/vacancies\"\n                data-qa=\"dashboard-billed-vacancy__employer-vacancies-link\"\n            >\n                {trls[BilledVacancy.trls.toMyVacancies]}\n            </BlokoLink>\n        </AbstractVacancy>\n    );\n};\n\nBilledVacancy.propTypes = {\n    trls: PropTypes.object,\n    bill: PropTypes.string,\n    giftsCount: PropTypes.number,\n    vacancy: PropTypes.shape({\n        draftId: PropTypes.number,\n        name: PropTypes.string,\n        completedFieldsPercentage: PropTypes.number,\n        suitableResumesCountTotal: PropTypes.number,\n        suitableResumesCountLastMonth: PropTypes.number,\n    }),\n};\n\nBilledVacancy.trls = {\n    waitingForPayment: 'newemployer.dashboard.recentVacancy.status.waitingForPayment',\n    billedVacancySuggestTitle: 'newemployer.dashboard.billedVacancy.suggestTitle',\n    billedVacancyFirstSuggestText: 'newemployer.dashboard.billedVacancy.suggest.1.text',\n    billedVacancySecondSuggestText: 'newemployer.dashboard.billedVacancy.suggest.2.text',\n    billedVacancyThirdSuggestText: 'newemployer.dashboard.billedVacancy.suggest.3.text',\n    billedVacancyThirdSuggestLinkText: 'newemployer.dashboard.vacancyStub.suggest.3.linkText',\n    billedVacancyThirdSuggestInfoText: 'newemployer.dashboard.vacancyStub.suggest.3.infoText',\n    toMyVacancies: 'newemployer.dashboard.billedVacancy.action.toMyVacancies',\n};\n\nexport default translation(BilledVacancy);\n","import { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport Gap from 'bloko/blocks/gap';\nimport numberFormatter from 'bloko/common/numberFormatter';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport AbstractVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/AbstractVacancy';\nimport LinkInfo from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/LinkInfo';\nimport VacancyStatus from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStatus';\n\nconst VACANCY_FULLNESS_LEVEL = {\n    LOW: 30,\n    MEDIUM: 60,\n    COMPLETE: 100,\n};\n\nconst calcVacancyStatus = (completePercentage) => {\n    if (completePercentage <= VACANCY_FULLNESS_LEVEL.LOW) {\n        return VacancyStatus.kinds.critical;\n    }\n\n    if (completePercentage < VACANCY_FULLNESS_LEVEL.MEDIUM) {\n        return VacancyStatus.kinds.major;\n    }\n\n    if (completePercentage >= VACANCY_FULLNESS_LEVEL.MEDIUM && completePercentage < VACANCY_FULLNESS_LEVEL.COMPLETE) {\n        return VacancyStatus.kinds.minor;\n    }\n\n    return VacancyStatus.kinds.good;\n};\n\nconst sendAnalyticsFinishVacancy = () => {\n    Analytics.sendHHEventButtonClick('dashboard_vacancy_finish_vacancy');\n};\n\nconst sendAnalyticsPublishVacancy = () => {\n    Analytics.sendHHEventButtonClick('dashboard_vacancy_publish_vacancy');\n};\n\nconst RecentDraftVacancy = ({\n    trls,\n    vacancy: { draftId, name, completedFieldsPercentage, suitableResumesCountTotal, suitableResumesCountLastMonth },\n}) => {\n    const recentDraftRef = useRef();\n    const vacancyStatus = calcVacancyStatus(completedFieldsPercentage);\n    const statusText =\n        vacancyStatus === VacancyStatus.kinds.good\n            ? trls[RecentDraftVacancy.trls.readyToPublish]\n            : format(trls[RecentDraftVacancy.trls.notReady], { '{0}': completedFieldsPercentage });\n\n    const isReadyToPublish = completedFieldsPercentage === VACANCY_FULLNESS_LEVEL.COMPLETE;\n\n    useEffect(() => {\n        Analytics.sendHHEventElementShown(recentDraftRef.current, {\n            name: isReadyToPublish ? 'dashboard_vacancy_third_state' : 'dashboard_vacancy_second_state',\n        });\n    }, [recentDraftRef, isReadyToPublish]);\n\n    return (\n        <AbstractVacancy id={draftId} name={name} statusKind={vacancyStatus} statusText={statusText}>\n            <div ref={recentDraftRef} className=\"dashboard-vacancy-suggest\" data-qa=\"dashboard-recent-draft\">\n                <div>{trls[RecentDraftVacancy.trls.recentVacancySuggestTitle]}</div>\n                <ul className=\"dashboard-vacancy-list\">\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {formatToReactComponent(trls[RecentDraftVacancy.trls.recentVacancyFirstSuggestText], {\n                            '{0}': (\n                                <LinkInfo\n                                    render={() => trls[RecentDraftVacancy.trls.recentVacancyFirstSuggestInfoText]}\n                                    data-qa=\"dashboard-recent-draft__suitable-applicants\"\n                                >\n                                    {numberFormatter.format(`${suitableResumesCountTotal}`, {\n                                        decimalLength: 0,\n                                        groupSeparator: NON_BREAKING_SPACE,\n                                    })}\n                                </LinkInfo>\n                            ),\n                        })}\n                    </li>\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {formatToReactComponent(trls[RecentDraftVacancy.trls.recentVacancySecondSuggestText], {\n                            '{0}': (\n                                <LinkInfo\n                                    render={() => trls[RecentDraftVacancy.trls.recentVacancySecondSuggestInfoText]}\n                                    data-qa=\"dashboard-recent-draft__looking-for-work\"\n                                >\n                                    {numberFormatter.format(`${suitableResumesCountLastMonth}`, {\n                                        decimalLength: 0,\n                                        groupSeparator: NON_BREAKING_SPACE,\n                                    })}\n                                </LinkInfo>\n                            ),\n                        })}\n                    </li>\n                </ul>\n                {isReadyToPublish && (\n                    <Gap top>\n                        <ul className=\"dashboard-vacancy-list\">\n                            <li className=\"dashboard-vacancy-list-item\">\n                                {trls[RecentDraftVacancy.trls.recentVacancyThirdSuggestText]}\n                            </li>\n                            <li className=\"dashboard-vacancy-list-item\">\n                                {trls[RecentDraftVacancy.trls.recentVacancyFoursSuggestText]}\n                            </li>\n                        </ul>\n                    </Gap>\n                )}\n            </div>\n            <Button\n                Element={Link}\n                to={`/employer/vacancy/create?draftId=${draftId}`}\n                kind={ButtonKind.Primary}\n                scale={ButtonScale.Large}\n                onClick={isReadyToPublish ? sendAnalyticsPublishVacancy : sendAnalyticsFinishVacancy}\n                data-qa={`dashboard-recent-draft__${isReadyToPublish ? 'publish_vacancy' : 'continue_vacancy_filling'}`}\n            >\n                {isReadyToPublish\n                    ? trls[RecentDraftVacancy.trls.publishVacancy]\n                    : trls[RecentDraftVacancy.trls.continueVacancyFilling]}\n            </Button>\n        </AbstractVacancy>\n    );\n};\n\nRecentDraftVacancy.propTypes = {\n    trls: PropTypes.object,\n    vacancy: PropTypes.shape({\n        draftId: PropTypes.number,\n        name: PropTypes.string,\n        completedFieldsPercentage: PropTypes.number,\n        suitableResumesCountTotal: PropTypes.number,\n        suitableResumesCountLastMonth: PropTypes.number,\n    }),\n};\n\nRecentDraftVacancy.trls = {\n    notReady: 'newemployer.dashboard.recentVacancy.status.notReady',\n    readyToPublish: 'newemployer.dashboard.recentVacancy.status.readyToPublish',\n    recentVacancySuggestTitle: 'newemployer.dashboard.recentVacancy.suggestTitle',\n    recentVacancyFirstSuggestText: 'newemployer.dashboard.recentVacancy.suggest.1.text',\n    recentVacancyFirstSuggestInfoText: 'newemployer.dashboard.recentVacancy.suggest.1.infoText',\n    recentVacancySecondSuggestText: 'newemployer.dashboard.recentVacancy.suggest.2.text',\n    recentVacancySecondSuggestInfoText: 'newemployer.dashboard.recentVacancy.suggest.2.infoText',\n    recentVacancyThirdSuggestText: 'newemployer.dashboard.recentVacancy.suggest.3.text',\n    recentVacancyFoursSuggestText: 'newemployer.dashboard.recentVacancy.suggest.4.text',\n    publishVacancy: 'newemployer.dashboard.recentVacancy.action.publishVacancy',\n    continueVacancyFilling: 'newemployer.dashboard.recentVacancy.action.continueVacancyFilling',\n};\n\nexport default translation(RecentDraftVacancy);\n","import addHours from 'date-fns/addHours';\nimport parseISO from 'date-fns/parseISO';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport BlokoLink from 'bloko/blocks/link';\nimport { formatToReactComponent, format } from 'bloko/common/trl';\n\nimport formatDate from 'Modules/formatDate';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AbstractVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/AbstractVacancy';\nimport VacancyStatus from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStatus';\n\nconst ScheduledPublication = ({ trls, data }) => {\n    const {\n        draftId,\n        availableDraft: { name, requiredPublications },\n        draftScheduledPublication,\n        assignedEmployerManagerId,\n    } = data;\n\n    const date = parseISO(draftScheduledPublication.isoDateTimePublication);\n\n    const employerManagerId = useSelector((state) => state.employerManager?.id);\n    const publicationManager = useSelector((state) =>\n        state.employerManagersList.find(\n            ({ id }) => id === String(assignedEmployerManagerId) && id !== String(employerManagerId)\n        )\n    );\n\n    return (\n        <AbstractVacancy\n            id={draftId}\n            name={name}\n            statusText={format(trls[ScheduledPublication.trls.publicationTime], {\n                '{manager}': publicationManager\n                    ? format(trls[ScheduledPublication.trls.manager], {\n                          '{managerName}': publicationManager.text,\n                      })\n                    : '',\n                '{day}': trls[ScheduledPublication.trls.weekdays[date.getDay()]],\n                '{startHour}': formatDate(date, 'HH:mm'),\n                '{endHour}': formatDate(addHours(date, 1), 'HH:mm'),\n                '{gmt}': `+${parseInt(draftScheduledPublication.gmt.slice(1, 3), 10)}`,\n            })}\n            statusKind={VacancyStatus.kinds.indeterminate}\n        >\n            <div className=\"dashboard-vacancy-suggest\">\n                {formatToReactComponent(trls[ScheduledPublication.trls.description], {\n                    '{0}': requiredPublications[0].count,\n                    '{1}': trls[ScheduledPublication.trls[requiredPublications[0].publicationType]],\n                })}\n            </div>\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to=\"/employer/vacancies\"\n                data-qa=\"dashboard-scheduled-vacancy__employer-vacancies-link\"\n            >\n                {trls[ScheduledPublication.trls.toMyVacancies]}\n            </BlokoLink>\n            <FormSpacer />\n            <BlokoLink\n                disableVisited\n                Element={Link}\n                to=\"/price/publications\"\n                data-qa=\"dashboard-scheduled-vacancy__price-publications-link\"\n            >\n                {trls[ScheduledPublication.trls.toBuyServices]}\n            </BlokoLink>\n        </AbstractVacancy>\n    );\n};\n\nScheduledPublication.propTypes = {\n    trls: PropTypes.object,\n    data: PropTypes.shape({\n        draftId: PropTypes.number,\n        availableDraft: PropTypes.shape({\n            name: PropTypes.string,\n            requiredPublications: PropTypes.array,\n        }),\n        draftScheduledPublication: PropTypes.shape({\n            isoDateTimePublication: PropTypes.date,\n            gmt: PropTypes.string,\n        }),\n        assignedEmployerManagerId: PropTypes.string,\n    }),\n};\n\nScheduledPublication.trls = {\n    toMyVacancies: 'newemployer.dashboard.billedVacancy.action.toMyVacancies',\n    toBuyServices: 'newemployer.dashboard.action.toBuyServices',\n    description: 'newemployer.dashboard.scheduledPublication.requiredPublications',\n    publicationTime: 'employer.vacancy.draft.scheduledPublicationTime',\n    manager: 'employer.vacancy.draft.scheduledPublicationTime.anotherManager',\n    FREE: 'vacancyMetallic.free',\n    STANDARD: 'vacancyMetallic.standard',\n    STANDARD_PLUS: 'vacancyMetallic.standard_plus',\n    PREMIUM: 'vacancyMetallic.premium',\n    STANDARD_ANONYMOUS: 'employer.myVacancies.dashboard.vacancyType.standard_anonymous',\n    STANDARD_ADVERTISING: 'employer.myVacancies.dashboard.vacancyType.standard_advertising',\n    PREMIUM_ANONYMOUS: 'employer.myVacancies.dashboard.vacancyType.premium_anonymous',\n    PREMIUM_ADVERTISING: 'employer.myVacancies.dashboard.vacancyType.premium_advertising',\n    STANDARD_PLUS_ANONYMOUS: 'employer.myVacancies.dashboard.vacancyType.standard_plus_anonymous',\n    weekdays: {\n        0: 'lastActivity.withinWeek.sunday',\n        1: 'lastActivity.withinWeek.monday',\n        2: 'lastActivity.withinWeek.tuesday',\n        3: 'lastActivity.withinWeek.wednesday',\n        4: 'lastActivity.withinWeek.thursday',\n        5: 'lastActivity.withinWeek.friday',\n        6: 'lastActivity.withinWeek.saturday',\n    },\n};\n\nexport default translation(ScheduledPublication);\n","import { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport numberFormatter from 'bloko/common/numberFormatter';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport AbstractVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/AbstractVacancy';\nimport LinkInfo from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/LinkInfo';\n\nconst sendAnalyticsCreateVacancy = () => {\n    Analytics.sendHHEventButtonClick('dashboard_vacancy_create_vacancy');\n};\n\nconst VacancyStub = ({ trls, employerRegion, employerRegionResumesCount, giftsCount }) => {\n    const vacancyStubRef = useRef();\n    const isZp = useIsZarplataPlatform();\n\n    useEffect(() => {\n        Analytics.sendHHEventElementShown(vacancyStubRef.current, {\n            name: 'dashboard_vacancy_first_state',\n        });\n    }, [vacancyStubRef]);\n\n    return (\n        <AbstractVacancy name={trls[VacancyStub.trls.title]} description={trls[VacancyStub.trls.description]}>\n            <div ref={vacancyStubRef} className=\"dashboard-vacancy-suggest\" data-qa=\"dashboard-vacancy-stub\">\n                <ul className=\"dashboard-vacancy-list\">\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {formatToReactComponent(trls[VacancyStub.trls.firstSuggestText], {\n                            '{0}': (\n                                <Text size={TextSize.Large} Element=\"b\" strong>\n                                    {trls[VacancyStub.trls.firstHighlightText]}\n                                </Text>\n                            ),\n                        })}\n                    </li>\n                    <li className=\"dashboard-vacancy-list-item\">\n                        {formatToReactComponent(trls[VacancyStub.trls.secondSuggestText], {\n                            '{0}': (\n                                <LinkInfo\n                                    onClick={() => {\n                                        Analytics.sendHHEventButtonClick(\n                                            'dashboard_vacancy_vacancy_stub_suggestion_first'\n                                        );\n                                    }}\n                                    render={() => trls[VacancyStub.trls.secondSuggestInfoText]}\n                                    data-qa=\"dashboard-vacancy-stub__active-applicants\"\n                                >\n                                    {format(trls[VacancyStub.trls.secondSuggestLinkText], {\n                                        '{0}': numberFormatter.format(`${employerRegionResumesCount}`, {\n                                            decimalLength: 0,\n                                            groupSeparator: NON_BREAKING_SPACE,\n                                        }),\n                                    })}\n                                </LinkInfo>\n                            ),\n                            '{1}': employerRegion,\n                        })}\n                    </li>\n                    {!isZp && giftsCount > 0 && (\n                        <li className=\"dashboard-vacancy-list-item\">\n                            {formatToReactComponent(trls[VacancyStub.trls.thirdSuggestText], {\n                                '{0}': (\n                                    <LinkInfo\n                                        onClick={() => {\n                                            Analytics.sendHHEventButtonClick(\n                                                'dashboard_vacancy_vacancy_stub_suggestion_second'\n                                            );\n                                        }}\n                                        render={() =>\n                                            format(trls[VacancyStub.trls.thirdSuggestInfoText], { '{0}': giftsCount })\n                                        }\n                                        data-qa=\"dashboard-vacancy-gifts\"\n                                    >\n                                        {format(trls[VacancyStub.trls.thirdSuggestLinkText], { '{0}': giftsCount })}\n                                    </LinkInfo>\n                                ),\n                            })}\n                        </li>\n                    )}\n                </ul>\n            </div>\n            <Button\n                Element={Link}\n                to=\"/employer/vacancy/create\"\n                kind={ButtonKind.Primary}\n                scale={ButtonScale.Large}\n                onClick={sendAnalyticsCreateVacancy}\n                data-qa=\"dashboard-vacancy-stub__create-vacancy\"\n            >\n                {trls[VacancyStub.trls.createVacancy]}\n            </Button>\n        </AbstractVacancy>\n    );\n};\n\nVacancyStub.propTypes = {\n    trls: PropTypes.object,\n    giftsCount: PropTypes.number,\n    employerRegion: PropTypes.string,\n    employerRegionResumesCount: PropTypes.number,\n};\n\nVacancyStub.trls = {\n    title: 'newemployer.dashboard.vacancyStub.title',\n    description: 'newemployer.dashboard.vacancyStub.description',\n    firstSuggestText: 'newemployer.dashboard.vacancyStub.suggest.1.text',\n    firstHighlightText: 'newemployer.dashboard.vacancyStub.suggest.1.highlightText',\n    secondSuggestText: 'newemployer.dashboard.vacancyStub.suggest.2.text',\n    secondSuggestLinkText: 'newemployer.dashboard.vacancyStub.suggest.2.linkText',\n    secondSuggestInfoText: 'newemployer.dashboard.vacancyStub.suggest.2.infoText',\n    thirdSuggestText: 'newemployer.dashboard.vacancyStub.suggest.3.text',\n    thirdSuggestLinkText: 'newemployer.dashboard.vacancyStub.suggest.3.linkText',\n    thirdSuggestInfoText: 'newemployer.dashboard.vacancyStub.suggest.3.infoText',\n    createVacancy: 'newemployer.dashboard.vacancyStub.action.createVacancy',\n};\n\nexport default translation(VacancyStub);\n","import Column from 'bloko/blocks/column';\nimport Text, { TextSize } from 'bloko/blocks/text';\n\nimport PreparedVacancyTemplates from 'lux/components/IndexPageNewEmployer/components/PreparedVacancyTemplates';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport BilledVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/BilledVacancy';\nimport RecentDraftVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/RecentDraftVacancy';\nimport ScheduledPublication from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/ScheduledPublication';\nimport VacancyStub from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/VacancyStub';\n\nconst DashboardVacancy = () => {\n    const { draft, bill, giftsCount, employerRegionTrl, employerRegionResumesCount, nextDraftScheduled } = useSelector(\n        (state) => state.newEmployerDashboardVacancy\n    );\n\n    const renderVacancy = () => {\n        if (draft && bill) {\n            return <BilledVacancy vacancy={draft} bill={bill} giftsCount={giftsCount} />;\n        }\n\n        if (draft) {\n            return <RecentDraftVacancy vacancy={draft} />;\n        }\n\n        if (nextDraftScheduled) {\n            return <ScheduledPublication data={nextDraftScheduled} />;\n        }\n\n        return (\n            <VacancyStub\n                giftsCount={giftsCount}\n                employerRegion={employerRegionTrl}\n                employerRegionResumesCount={employerRegionResumesCount}\n            />\n        );\n    };\n\n    return (\n        <div className=\"dashboard-vacancy\">\n            <Text size={TextSize.Large}>\n                <Column xs=\"4\" s=\"8\" m=\"8\" l=\"10\">\n                    {renderVacancy()}\n                </Column>\n                <PreparedVacancyTemplates />\n            </Text>\n        </div>\n    );\n};\n\nexport default DashboardVacancy;\n","import Column, { ColumnsWrapper } from 'bloko/blocks/column';\n\nimport EMPLOYER_STATES from 'lux/modules/employer/states';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport CompanyConfirmation from 'lux/components/IndexPageNewEmployer/components/CompanyConfirmation';\nimport ContactPhones from 'lux/components/IndexPageNewEmployer/components/ContactPhones';\nimport DashboardVacancy from 'lux/components/IndexPageNewEmployer/components/DashboardVacancy/DashboardVacancy';\n\nconst IndexNewEmployer = () => {\n    const { category, state } = useSelector(({ employerStatus }) => employerStatus);\n    const isEmployerStatusNew = state === EMPLOYER_STATES.NEW;\n\n    return (\n        <ColumnsWrapper>\n            <div className=\"employer-promo-wrapper\">\n                <Column xs=\"4\" s=\"8\" m=\"12\" l=\"16\">\n                    <DashboardVacancy />\n                    <div className=\"employer-promo-separator\" />\n                </Column>\n                <ContactPhones showDelimiter={isEmployerStatusNew} />\n                <Column xs=\"4\" s=\"0\" m=\"12\" l=\"0\">\n                    <div className=\"employer-promo-separator\" />\n                </Column>\n                {isEmployerStatusNew && <CompanyConfirmation companyCategory={category} />}\n            </div>\n        </ColumnsWrapper>\n    );\n};\n\nexport default IndexNewEmployer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container--dhoQ0RrKhHIMhADiLLwu\",\"overlay\":\"overlay--DzCBZYL9AgDYmuZHCruc\",\"wrapper\":\"wrapper--JGzLFmDSjG_mGcuA001u\",\"move\":\"move--DLXfBSR2Hmb4jgItX_LQ\",\"close\":\"close--H1hCcNgDIhYpC6ahmIdQ\",\"content\":\"content--GF1WTBTSEKoLezj3jjpv\",\"logo\":\"logo--V9cSSRT2o55r2zwvTuAR\",\"title\":\"title--fSbrU6wLVS8ibKW49uZ9\",\"main\":\"main--zIwjql9uVJ5ZSj0QvlBY\"};","import { useState, useEffect, useCallback } from 'react';\n\nimport appInstallBannerCloseButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/app_install/app_install_banner_close_button_click';\nimport appInstallBannerOpenButtonClick from '@hh.ru/analytics-js-events/build/xhh/applicant/app_install/app_install_banner_open_button_click';\nimport appInstallBannerScreenShown from '@hh.ru/analytics-js-events/build/xhh/applicant/app_install/app_install_banner_screen_shown';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { H1Section } from 'bloko/blocks/header';\nimport Icon, { IconDynamic, IconLink, IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport useBreakpoint, { Breakpoint } from 'bloko/common/hooks/useBreakpoint';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport modalHelper from 'bloko/common/modalHelper';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './mobile-app-promotion.less';\n\nconst TrlKeys = {\n    title: 'mobileAppPromo.title',\n    install: 'mobileAppPromo.install',\n    skip: 'mobileAppPromo.skip',\n};\n\nconst MobileAppPromotion: TranslatedComponent = ({ trls }) => {\n    const mobileAppPromotionVisible = useSelector((state) => state.mobileAppPromotionVisible);\n    const breakpoint = useBreakpoint(Breakpoint.M);\n    const isXs = breakpoint === Breakpoint.XS;\n    const stayInTouch = useSelector((state) => state.stayInTouch);\n    const appLink = stayInTouch.apps[0]?.href;\n    const [isShown, setIsShown] = useState(mobileAppPromotionVisible);\n    const hhtmFrom = useSelector((state) => state.analyticsParams.hhtmSource);\n\n    const shown = isShown && isXs && !!appLink;\n\n    useEffect(() => {\n        if (!shown) {\n            return undefined;\n        }\n        appInstallBannerScreenShown({ hhtmFrom });\n        modalHelper.disableScroll();\n        return () => {\n            modalHelper.enableScroll();\n        };\n    }, [hhtmFrom, shown]);\n\n    const onCloseWrapper = useCallback(\n        (type: string) => () => {\n            setIsShown(false);\n            appInstallBannerCloseButtonClick({ type, hhtmFrom });\n        },\n        [hhtmFrom]\n    );\n\n    const onOpenWrapper = useCallback(() => {\n        setIsShown(false);\n        appInstallBannerOpenButtonClick({ hhtmFrom });\n    }, [hhtmFrom]);\n\n    if (!shown) {\n        return null;\n    }\n\n    const appLinkWithQuery = `${appLink}?start_banner=applicant_main`;\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.overlay} onClick={onCloseWrapper('overlay')} />\n            <div className={styles.wrapper}>\n                <div className={styles.close}>\n                    <IconDynamic>\n                        <IconLink onClick={onCloseWrapper('close')}>\n                            <Icon\n                                view={IconView.Cross}\n                                initial={IconColor.Gray50}\n                                highlighted={IconColor.Gray60}\n                                scale={IconScale.Medium}\n                            />\n                        </IconLink>\n                    </IconDynamic>\n                </div>\n                <div className={styles.content}>\n                    <div className={styles.logo} />\n                    <div className={styles.title}>\n                        <H1Section Element=\"h3\">{trls[TrlKeys.title]}</H1Section>\n                    </div>\n                    <div className={styles.main}>\n                        <Button\n                            to={appLinkWithQuery}\n                            target=\"_blank\"\n                            kind={ButtonKind.Primary}\n                            Element={Link}\n                            onClick={onOpenWrapper}\n                        >\n                            {trls[TrlKeys.install]}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(MobileAppPromotion);\n","import BrandingInfo from 'lux/components/BrandingInfo';\nimport AdditionalCheck from 'lux/components/Employer/AdditionalCheck';\nimport IndexAnonymous from 'lux/components/IndexPageAnonymous';\nimport IndexApplicant from 'lux/components/IndexPageApplicant';\nimport IndexEmployer from 'lux/components/IndexPageEmployer';\nimport IndexNewEmployer from 'lux/components/IndexPageNewEmployer';\nimport MobileAppPromotion from 'lux/components/MobileAppPromotion';\nimport PageLayout, { EmptyLayout } from 'lux/components/PageLayout';\nimport FullPageLayout from 'lux/components/PageLayout/FullPageLayout';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst IndexPage = () => {\n    const isNewEmployer = useSelector(({ isNewEmployer }) => isNewEmployer);\n    const { title } = useSelector((state) => state.pageMetaData);\n    const showAdditionalCheck = useSelector((state) => state.additionalCheck);\n    const userType = useSelector((state) => state.userType);\n\n    if (userType === UserType.Applicant) {\n        return (\n            <FullPageLayout>\n                <IndexApplicant />\n                <MobileAppPromotion />\n            </FullPageLayout>\n        );\n    }\n\n    if (userType === UserType.Employer) {\n        return (\n            <PageLayout layout={EmptyLayout} title={title}>\n                {showAdditionalCheck && <AdditionalCheck />}\n                {isNewEmployer ? <IndexNewEmployer /> : <IndexEmployer />}\n                <BrandingInfo />\n            </PageLayout>\n        );\n    }\n\n    return (\n        <FullPageLayout>\n            <IndexAnonymous />\n        </FullPageLayout>\n    );\n};\n\nexport default IndexPage;\n"],"names":["element","params","window","requestIdleCallback","visibilityWatcher","onVisible","ids","id","templateName","adfoxParams","banners","Banners","putScript","context","remote","onerror","onload","props","node","document","createElement","Object","entries","forEach","prop","value","addEventListener","src","dataset","webpack","appendChild","getRemoteWebpackModuleLink","getExistingRemote","querySelector","loadingRemoteEntry","loggingPlaces","getRemoteModule","async","url","container","shareScope","remoteFallbackUrl","loadEntry","Promise","resolve","existingRemote","__webpack_init_sharing__","linkToRemoteWebpackModule","inited","init","__webpack_share_scopes__","onError","remoteScriptResource","PerformanceObserver","supportedEntryTypes","includes","performance","getEntriesByType","filter","entry","name","remoteScriptResourceDuration","reduce","prev","item","duration","StatsSender","globalVars","sendMetrics","report","then","type","crossOrigin","getOrLoadRemote","error","Module","get","classList","hasDefault","moduleValue","default","toString","length","getAndLoadARemoteApp","globalServiceName","identifier","initApp","globalServiceVars","hasSupportToDestroyApp","unmountApp","STATE_LOADERS_MAPPING","userNotifications","dispatch","addUserNotifications","place","serviceInfo","isFullPage","undefined","loadService","add","data","isSuccessSSR","renderResult","remoteServiceName","inlineScript","innerHTML","remoteEntry","ssrRenderNode","styles","href","promise","keys","putLink","rel","scripts","notLoadedScript","useSSRResult","fetcher","headers","pageName","analyticsParams","hhtmSource","build","console","noContent","getStore","deleteMicroFrontend","store","storeFieldName","proxiedState","loader","processProxiedState","options","visible","checkVisible","offsetWidth","offsetHeight","getClientRects","removeEventListener","listenersSetted","SHOW_ADD_AUTH_PHONE_SUCCESS_NOTIFICATION","AgreementButtonType","TrlKeys","common","text","russia","personalLink","agreementLink","continue","signup","agreementDataQa","AgreementText","trls","buttonType","Continue","withSocial","isIframeView","agreementURL","useSelectorNonNullable","state","authUrl","isLightPage","useSelector","personalDataRussiaURL","isRussia","useIsRussia","handleClickForVKminiApp","event","preventDefault","location","currentTarget","renderLink","dataQa","to","Link","onClick","className","classnames","formatToReactComponent","translation","VerificationFormStep","Verification","DefaultVerification","isSignupPage","next","useDispatch","login","authType","backurl","otp","vacancyId","postponedActions","vacancy","vrResponseHash","vrSignupLogin","onSubmitAnalytics","errorCode","Analytics","formName","loginBy","errors","formatAnalyticErrors","onShownAnalytics","elementRef","current","elementName","onSubmit","setIsSending","setVerification","code","response","username","remember","accountType","isApplicantSignup","key","isMultiAccountCreation","push","employerLoginURL","loginURL","showDefaultError","success","verification","assign","propTypes","PropTypes","SIGN_IN","SIGN_UP","VERIFICATION","MULTIACCOUNT_GROUPING","ApplicantSignInSignUpFlow","SignIn","MultiAccountGrouping","DefaultMultiAccountGrouping","SignUp","DefaultSignUp","onSignup","onNextStep","isExpanded","onClickByPassword","errorPageLogin","step","setStep","useState","setCode","password","setPassword","signUpRef","useRef","router","query","iframe_view","Wrapper","Column","Fragment","wrapperProps","l","m","s","xs","useEffect","querySelectorAll","e","remove","ref","cancel","loadBannerOnVisible","require","Banner","Component","componentDidMount","this","isEmpty","ReactDOM","setAutoHeight","bind","initBanners","componentDidUpdate","componentWillUnmount","shouldComponentUpdate","nextProps","cancelFetchBanners","search","pathname","userTargeting","adfoxParamsProperty","style","height","clientHeight","bannerId","bannerCommonTargeting","bannerAdTargeting","bannerParams","render","children","connect","AdsExternalBanner","cId","pp","p2","enableAdfox","shouldHideExternalBanners","isExternalBannersRestricted","useIsBelarus","BrandingInfo","showBrandingInfoModal","ContainerForMicroFrontend","preloadContent","scale","LoadingScale","containerRef","classNameForJS","useContext","CodeInjectorContext","getClassName","content","dangerouslySetInnerHTML","__html","app","loadProxyService","appModule","globalServiceNameValue","setTimeout","isSupportDestroy","ContainerForMicroFrontendWrapper","microFrontends","keyComponent","setKeyComponent","previousServiceInfoRef","Date","now","memo","ResponseCodes","label","submit","empty","SUCCESS","ERROR","ERROR_LIMIT","ERROR_LIMIT_PHONE","ERROR_LIMIT_IP","invalid","GetAppSMS","analyticsFrom","placeholder","gapBottom","phone","showTooltip","tooltipText","tooltipTheme","TipTheme","loading","setState","hideTooltip","setLoading","getSMSLink","trim","sendAnalytics","employerManagerId","from","hhtmFromLabel","messageType","Success","message","status","bottom","FormItem","FormLegend","autosize","ControlGroupItem","main","show","theme","placement","TipPlacement","onExternalClose","onChange","InputType","disabled","kind","ButtonKind","initial","LoadingColor","PageErrorWrapper","trlErrorCode","trl","PageHead","HeadProvider","PageDescription","openGraphContent","Meta","property","PageKeywords","DefaultLayout","isShrinked","ColumnsWrapper","LightPageLayoutContent","ErrorComponent","noContentPadding","noBackground","sTop","sBottom","mTop","mBottom","lTop","lBottom","TopLevelSite","general","LightPageLayoutFooter","isContrast","isMagritte","useMagritte","topLevelSite","isXS","useBreakpoint","suppressHydrationWarning","format","getFullYear","Text","TextStyle","typography","TextTypography","size","TextSize","LightPage","promo","Content","React","header","LightPageLayoutHeader","footer","HeaderLayout","linkAboveHeader","title","disableVisited","Element","H1","base","SideBarLayout","sidebar","SideBarComponent","PageLayout","layout","LayoutComponent","errorWrapper","ErrorWrapperComponent","ogTitle","description","ogDescription","keywords","canonical","rssTitle","rssHref","removeTitle","layoutProps","useLayoutEffect","titleElement","parentNode","removeChild","FullPageLayout","RowContent","cls","setSignupBackurl","backUrl","redirectToFinishSignup","vacanciesOfTheDay","spyParams","vacanciesRefs","result","initVacanciesRefs","viewUrl","sendAnythingViewAnalytics","Header","disableTitleLink","H2","LinkKind","isSeoLink","ListItemMobile","category","positionIndex","isLast","isModal","mainPageSignUpEnable","useMainPageSignupEnable","additionalQueryParams","WITH_TOP_FILTER_CATALOG","openAnonymousSignUpMainPage","count","ModalGroupMobile","collection","showModal","toggleShowModal","useToggleState","appearance","LinkAppearance","onClose","ModalHeader","outlined","ModalTitle","map","index","WorkInProfession","customTitle","collectionCounted","professionalRoleCategoryCollection","collectionOrCounted","collectionToRender","useMemo","slice","categoryId","position","ListItem","BannerPlace","autoGeneratedReducer","AdditionalCheck","modalVisible","setModalVisible","additionalCheckOff","removeAdditionalCheckNote","ModalContent","ModalFooter","ios","android","winphone","huawei","AppBanner","appLink","device","detected","top","H4Section","POLL_URL","EmployerRatingTeaser","isInline","userType","isApplicant","UserType","classnamesWithApplicantVariant","basicClass","sendClickAnalytics","target","ButtonAppearance","ChatBotMessengerTypes","MessengersBots","messengers","genericUserType","source","page","chatBot","stretched","StaticImg","path","alt","importance","TextImportance","InternalPromoBlock","showEmployerRatingBlock","NewsBoxItem","image","isArticle","analyticsType","items","Features","ColumnWrapper","NewsBox","withSeparator","isEmployerContext","inDashboard","gapTop","employerMainPageAnalyticsEnabled","useFeatureEnabled","newsBoxRef","isZp","useIsZarplataPlatform","newsBoxItems","newsBoxType","newsBoxAnalytics","xsTop","company","hhtmSourceLabel","employerOfTheDayItemButtonClick","employerId","getCompanyLink","locale","isZP","protocolHost","urlParser","contentId","workInCompanyId","placeId","domainAreaId","host","WorkInCompanyBanner","isMobile","workInCompanyBanners","companiesOfTheDay","companiesRefs","RainbowDropCompaniesOfTheDay","useCompaniesOfTheDayViewAnalytics","WorkInCompanyLocation","WorkInBanner","companyName","vacanciesNumber","getVacancyCompanyLink","link","department","getProfessionLink","parentProfession","profession","catalogPath","one","some","many","RainbowDropProfession","professions","currency","showSeoLinksForBots","Compensation","compensationFrom","compensationTo","currencyCode","dash","vacancyOfTheDayItemButtonClick","VacancyCompanyLink","RainbowDropVacanciesOfTheDay","vacancies","useVacanciesOfTheDayViewAnalytics","VacancyOfTheDayLocation","getVacancyLink","compensation","showNoSalaryMessage","visibleName","area","RainbowModal","isVisible","separator","body","RainbowDrop","tileIndex","activeDropIndex","activeTileContent","previousActiveTileIndex","isXsOnly","seoContent","dropRef","dropInnerRef","containerHeight","setContainerHeight","showDrop","Boolean","contentHeight","String","onTransitionEnd","dropBoundingClientTop","getBoundingClientRect","dropTopOffsetLower","innerHeight","scrollTop","scrollY","dropTopOffsetUpper","speed","scrollToDrop","DATA_QA","RainbowTileMobile","colorIndex","professionIndex","resolution","Breakpoint","RainbowTile","vacanciesCount","activeTileIndex","isSuitableVacanciesMode","onClickMobile","mobileContent","isLoading","hideMobile","pageAnalyticsValue","columnSize","tile","zero","NON_BREAKING_SPACE","hasValue","RainbowTileVacancy","H3Section","lite","links","desktop","setActiveDropIndex","catalogElementRef","previousBreakpointRef","breakpoint","getDropIndexForTile","useCallback","tiles","currentTile","filtered","offsetTop","indexOf","activeDrop","suitable","RainbowCatalog","professionsList","suitableVacancies","applicantInfo","remoteWorkCounter","isBot","features","isXs","showAll","setShowAll","setActiveTileContent","activeMobileTileContent","setActiveMobileTileContent","isModalVisible","setIsModalVisible","setActiveTileIndex","tileIndexRef","rainbowMoveTop","useExperiment","useGetDropPosition","suitableVacanciesContent","isAnonymousSuitableVacancies","MIN_ANONYMOUS_SUITABLE_VACANCIES_COUNT","finished","companiesOfTheDayVacanciesCount","acc","employer","onTileClick","onMobileTileClick","commonPromoTilesProps","promoTiles","areaId","paths","totalTilesCount","displayShowMoreLink","Tile","currentIndex","stripOnDesktop","resultsFound","itemsOnPage","areaIds","join","Modal","MAX_VOD_VACANCIES_COUNT","EMPTY_ARRAY","getExtraHeaders","hhuid","Cookies","hhid","Hhuid","Token","Hhid","isClickmeVacanciesShuffleEnabled","VODShufflingValue","Math","random","computeBannersIds","bannersIds","startBannerPlace","i","getResultVacancies","vacancyOfTheDay","clickmeResponse","d","Array","isArray","clickmeVacancies","vodVacanciesIds","Set","vacancyOfTheDayId","isRealVacancyOfTheDay","clickmeVacancy","has","filterClickmeVacancies","reassignCodeValues","translateAreas","vacanciesToTranslate","areas","values","catch","bannersBatchUrl","clickmeVacanciesPlacesList","vod","shuffleVacanciesOfTheDayWithClickme","firstFakeVacancyIndex","isReplaceClickmeVacancyExp","fakeVacancies","clickmeVacanciesToMerge","concat","newOldVacanciesDifference","resultVacancies","unshift","splice","promoteClickmeVacancyToFirstPlace","vacanciesOfTheDayAction","makeSetStoreField","isVacanciesOfTheDayFetchedRef","readyToShuffleVacancies","downloadedVODData","min","calcFirstFakeVacancyIndex","vacanciesCountToDownload","setVacanciesOfTheDayWithoutClickme","getClickmeVacancies","SimilarSavedSearchInfo","applicantLatestResume","latestResumeHash","resumeHash","showCloseButton","RecommendedVacanciesMobile","enableSimilarSavedSearch","MIN_APPLICANT_SUITABLE_VACANCIES_COUNT","total","NoIndex","getResultsFoundLink","strong","MainPageSignUpModal","signinTrls","usePush","expB","expC","opened","anonymousSignUp","SignupTrls","signin","SignupAnalytics","closeAnonymousSignUpMainPage","requests","all","AppLink","analyticCategory","analyticName","analyticLabel","onMouseDown","onKeyDown","HeaderType","Applicant","Employer","CountryId","getTrlKey","countryId","trlsByHeaderType","isZarplataPlatform","isEmployer","isBelarus","MobilePageLink","mobilePage","useCountryId","request","mobilePageUrl","StayInTouch","apps","stayInTouch","getAppLinkHref","appHref","parsedUrl","footer_banner","appLinks","headerType","renderContent","UsefulLinks","topic","VacancyOfTheDay","sourceQueryParam","isRecommended","setVacancyRef","VacanciesOfTheDay","domainRegionTrl","showRegionTrl","BELARUS_AREA_ID","isSeoDomain","VacanciesOfTheDayBanners","banner","trackingParams","trackingBounds","Bound","VacanciesOfTheDayMobile","titleLinkContent","BELARUS_DOMAIN_AREA_ID","PartIndex","WorkInCompany","companiesOfTheDayTrls","getHeader","firstPart","getCompanyItem","isAdditional","One","Two","Three","MobileCompanyItem","WorkInCompanyMobile","logoUrl","renderCompany","WorkInOtherCities","citiesList","workInOtherCity","domain","domainId","CreateResumeButton","getSlogan","bigPromoSlogan","bigPromoHighlightedTextInSlogan","DashboardBigPromoFooter","dashboard","supernovaAnonymousDashboard","bigPromoContainer","bigPromoEmployerId","siteId","sendAnalyticsEvents","bigPromoLinkUrl","bigPromoLinkText","bigPromoFootnote","DashboardFooter","globalStatistics","showResumeStats","useIsRabotaBy","GlobalStatisticsCategory","NumberFormatter","sendLookingForEmployeeClick","DashboardSearch","lookingForEmployeeMenuItem","headerMenu","find","menuItem","supernovaSearchState","useSearchBaseState","isAnonymousDashboardSearch","h1","pageMetaData","H3Promo","SupernovaSearch","Dashboard","backgroundScope","backgroundIndex","DashboardMobileSearch","withBackdrop","searchName","SupernovaSearchName","searchProps","subItems","formRef","supernovaSearchAreaTrl","supernovaSearchArea","translations","sendFormSubmitEvent","useSendFormSubmitEvent","areaSwitchVisible","setAreaSwitchVisible","setAreaSwitchHidden","useOnOffState","action","method","VacancySearchHiddenFields","SearchSuggest","isEmployerSearch","large","searchInputDefaultValue","submitForm","extractRequestUrlFromForm","isDashboardMobileSearch","AreaSwitcherModal","MultiAccountGroupingStep","setHeader","formProps","headerContent","H2Section","MultiAccountGroupingForm","renderInput","renderError","renderSubmit","SignInStep","callbackSubmit","SignInForm","isAutofocusEnabled","renderLogin","renderSubmitButton","renderCaptcha","SignUpStep","showAdvertisementAgreement","useShowAdvertisementAgreement","showAdvertisementSubscriptionApplicant","useShowAdvertisementSubscriptionApplicant","SignUpForm","renderFirstNameField","renderLastNameField","renderAccountDeleteInactive","renderAdvertisementAgreement","renderAdvertisementSubscriptionApplicant","isSignupMain","sent","description1","description2","VerificationStep","codePlaceholder","onCancel","cancelText","VerificationForm","renderCodeError","renderCodeSender","isAutofocus","isStretched","SignupForm","SignUpBanner","userAlreadyBeenLoggedIn","logoDomain","logos","setHeaderContent","IndexAnonymous","news","applicantNews","articles","applicantArticles","useful","applicantUseful","bannersDashboardMobile","bannersUnderRainbowMobile","bannersHorizontal","bannersUnderNewsBoxMobile","bannersUnderCreateResumeButton","showWicAndVod","addEventPixelsRu","useAddEventPixelsRu","useFetchVacanciesOfTheDay","ContainerForXSL","styleClass","FAQ","isMedium","faqItemsRef","FAQAnalytics","RsvUserCompetenciesModal","hhidAccount","handleCloseModal","updateRsvUserCompetenciesModal","closeButtonShow","backgroundClick","width","firstName","middleName","lastName","ButtonType","ButtonScale","RedirectLinks","RsvUserCompetenciesNotification","handleClose","updateRsvUserCompetenciesResult","NotificationKind","LastResume","ScrollTo","Resumes","Main","RsvUserCompetenciesNotificationError","isRSVFail","setRSVFail","urlParams","URLSearchParams","isFlag","errorText","autoClose","CardType","Card","caption","linkText","renderIcon","isDisabled","linkTo","cardClassName","renderCard","Up","AutoUpdate","AddResume","CreateResume","resumesForUpdate","ElementShownAnchor","fn","resumeCreationCardShown","buttonClick","buttonName","useCanUpdateResumes","UpdateResumes","canUpdateResumes","autoUpdateAvailable","autoUpdateAvailableForAnyResume","resumeHasBeenUpdatedCardShown","CircleProgress","progress","showProgress","startProgress","currentProgress","setCurrentProgress","radius","SVG_SIZE","insetRadius","strokeDasharray","PI","strokeDashoffset","viewBox","version","xmlns","r","cx","cy","fill","strokeWidth","transform","strokeLinecap","round","progressStart","ResponseStreak","responseStreak","applicantResponseStreaks","overall","recommendedVacancies","isProgressStart","responsesCount","queries","fullSearchLink","itemsOnPageBase","roundCounter","completeStepCounter","stage","LoopCounterParser","responsesRequired","responsesLeft","badgeNumber","responseCardShown","responseCount","LoopCounterStage","setResumesForUpdateAction","setIsLoading","updateResumeCardShown","addNotification","RESUME_BATCH_UPDATE_SUCCESS","hhcaptcha","recaptcha","captchaState","createCaptchaUrl","Debug","Error","reason","updateError","resumes","RESUME_BATCH_UPDATE_ERROR","finally","Actions","hasResumes","hasFinishedResumes","EnableResumeAutoUpdate","getAnalyticsString","modifier","analyticsEvent","EventsList","userStats","favoriteVacanciesCount","savedVacancySearch","renderNewCount","eventsMap","invitations","applicantInvitations","newApplicantInvitations","hideCount","getInvitationsCount","applicantResumes","resumesViews","hasResumeViews","newResumesViews","getResumeViewsCount","favoriteVacancies","autosearch","totalItems","getAutosearchesCount","events","forResume","noResume","RecommendedVacancies","hasVacanciesWithAddress","showSearchLink","icon","iconPosition","ButtonIconPosition","VacancySearchItem","vacancySource","Source","ApplicantDashboard","bannersDashboard","UXFeedback","EventList","IndexApplicant","applicantFaq","bannersBottomMobile","showVod","enableRSVAddPage","isModalWindowOpened","competenciesResult","rsvUserCompetencies","authPhoneAddedNotification","LocalStorageWrapper","authPhoneNotificationInfo","JSON","parse","ADD_AUTH_PHONE_SUCCESS","phoneNumber","CompetencyResult","myEventsVacancyResponsesClick","myEventsVacancyResponsesShown","myEventsAutoSearchClick","myEventsAutoSearchShown","myEventsBalanceAccountClick","myEventsBalanceAccountShown","myEventsBalanceIncreaseClick","myEventsBalanceIncreaseShown","myEventsVacanciesClick","myEventsVacanciesShown","myEventsVacanciesBuyClick","myEventsVacanciesBuyShown","myEventsDatabaseAccessClick","myEventsDatabaseAccessShown","myEventsDatabaseAccessBuyClick","myEventsDatabaseAccessBuyShown","myEventsCreateVacancyClick","myEventsCreateVacancyShown","howToSearchLearnMoreClick","howToSearchLearnMoreShown","updatesTabClick","updatesTabShown","updatesAllClick","updatesAllShown","activitiesTitleClick","activitiesTitleShown","activitiesItemClick","activitiesItemsShown","Title","activitiesTitleRef","indexPageEmployerAnalytics","Calendar","eventsMain","employerIndexPage","oldEmployer","activityItems","activityItemsRef","date","BannerWrapper","CalendarWithBanners","calendar","trlsArray","COULD_BE_WITH_CIV","ServiceCode","additionalPurchaseCodes","RESUME_ACCESS_CODES","BalanceAccess","databaseAccessLinkRef","databaseAccessBuyLinkRef","getPurchasedAccessCivBalance","civBalance","balanceEmpty","contactOpening","serviceBalance","purchasedServicesDate","expirationTime","activationTime","remainingDays","activeTo","day","genitive","month","year","expiresSoon","days","expires","getActiveDate","activeSins","getFutureDate","getPurchasedResumeAccessesList","serviceDescription","temporalCiv","service","availableServicesTrl","getTranslationsFor","priceAreaTrl","areaAll","profRoleGroupIdsTrl","professionIdsTrl","allProfRoleGroups","activeResumeAccessesInfo","billingSummary","serviceCategories","resumeAccessCodes","CurrencyType","flexible","layer","DownLayer","DownPlacement","resumeAccess","access","linkResumeAccessUrl","buy","Trls","BalanceOptionsTooltipItem","tariffNameTrl","areaIdsTrl","BalanceOptions","activeOptionInfo","optionCodes","serviceDescriptionOption","ServiceItemCode","BalanceVacancies","vacanciesLinkRef","vacanciesBuyLinkRef","countryIdBySeller","employerCountryIdBySeller","parseInt","getPricePurchasedItemRegions","freeRegion","regionTitle","anyRegion","getPricePurchasedItemProfareas","profRoleGroupIds","profRoleGroupTitle","anyProfRoleGroup","getPricePurchasedItemZPCrossPost","zpCrossPostAvailable","zpCrossPosting","getPricePurchasedVacancyNextUpdate","nextFreeUpdate","newWillBeAvailable","newWillBeAdded","getPurchasedVacancyPublicationsItem","serviceEntryTrl","getPurchasedVacancyPublicationsList","publicationsCodes","freeVacancyPublicationsCodesCount","freeVacancyPublicationsCodes","nonFreeVacancyPublicationsCodesCount","nonFreeVacancyPublicationsCodes","linkAddPublicationUrl","STATISTICS_ON_INDEX_MY_EVENTS","EventStatistics","statisticsLink","Infotip","InfoTheme","InfoPlacement","markAsViewedEvent","MarkAsViewedEvent","statisticsInfotipTitle","statisticsInfotipText","statistics","Index","permissions","vacancyResponsesLinkRef","autoSearchLinkRef","balanceAccountLinkRef","balanceIncreaseLinkRef","createVacancyLinkRef","vacancyResponses","autosearches","featuresTargetResumes","targetResumes","featuresTargetResumesAgency","targetResumesAgency","incomingResumes","getTargetResumes","balance","availableWithoutBlockedMoney","paymentNotAvailableSites","FormatMoney","putMoney","getAvailableMoney","canViewStatPortal","newVacancy","EmptySearches","howToSearchLearnMoreRef","resumeCount","showResumeCount","emptySearchesTitle","resumesCount","groupSeparator","queryConstructor","findOut","SearchCriterion","delimiter","showDelimiter","mapEntitiesToCriteries","entities","SearchDetails","searchCriteria","employment","schedule","baseEntityWithTrl","SavedSearch","searchQuery","IconDynamic","IconLink","removeSavedSearch","view","IconView","IconColor","IconScale","SearchList","searches","LastSearches","lastSearches","employerLastSearches","Separator","ItemLink","viewed","markUpdateViewed","ItemText","TAB_IDS","NEW_TAB_ID","COMING_SOON_TAB_ID","UpdateType","calcIsShadowVisible","parent","activeElement","scrollHeight","Body","activeTabId","updates","oldEmployerUpdates","updatesNew","New","updatesSoon","Soon","updatesBodyItemsRef","updatesNewItemsRef","updatesSoonItemsRef","shadow","showShadow","isNewTabActive","trackScroll","throttle","activeItemsElement","onScroll","isRequired","Footer","updatesAllLinkRef","allUpdatesLink","Tab","active","linkProps","tabRef","Button","Tabs","FormSpacer","newTab","soonTab","Updates","updatesRef","setActiveTab","tabId","employerArticles","employerNews","EmployerEventList","NewsBoxWrapper","WidgetEmployerReviewsIndex","WIDGET_PLACE_NAME","RenewalServiceWidget","WidgetEmployerIndexWrapper","renewalServiceHasContent","IndexEmployer","employerFaq","CompanyConfirmation","companyCategory","isCompany","EMPLOYER_CATEGORIES","goal","ContactPhones","phones","contactPhones","contactUsHeader","regions","postfix","country","city","number","contactUsAction","msk","spb","mobile","other","PreparedVacancyTemplates","templates","preparedVacancyTemplates","visibleCount","setVisibleCount","loadMoreVisible","setLoadMoreVisible","H3","subtitle","template","loadMore","templatesFive","templatesTwo","templatesOne","VacancyStatus","kinds","critical","major","minor","good","indeterminate","AbstractVacancy","statusKind","statusText","vacancyNameLabel","vacancyNameStub","LinkInfo","linkSwitchProps","showTip","hideTip","closeByClickOutside","BilledVacancy","bill","giftsCount","billedVacancyRef","draftId","waitingForPayment","billedVacancySuggestTitle","billedVacancyThirdSuggestText","billedVacancyThirdSuggestInfoText","billedVacancyThirdSuggestLinkText","billedVacancyFirstSuggestText","billedVacancySecondSuggestText","toMyVacancies","completedFieldsPercentage","suitableResumesCountTotal","suitableResumesCountLastMonth","VACANCY_FULLNESS_LEVEL","sendAnalyticsFinishVacancy","sendAnalyticsPublishVacancy","RecentDraftVacancy","recentDraftRef","vacancyStatus","completePercentage","readyToPublish","notReady","isReadyToPublish","recentVacancySuggestTitle","recentVacancyFirstSuggestText","recentVacancyFirstSuggestInfoText","numberFormatter","decimalLength","recentVacancySecondSuggestText","recentVacancySecondSuggestInfoText","recentVacancyThirdSuggestText","recentVacancyFoursSuggestText","publishVacancy","continueVacancyFilling","ScheduledPublication","availableDraft","requiredPublications","draftScheduledPublication","assignedEmployerManagerId","parseISO","isoDateTimePublication","employerManager","publicationManager","employerManagersList","publicationTime","manager","weekdays","getDay","formatDate","addHours","gmt","publicationType","toBuyServices","FREE","STANDARD","STANDARD_PLUS","PREMIUM","STANDARD_ANONYMOUS","STANDARD_ADVERTISING","PREMIUM_ANONYMOUS","PREMIUM_ADVERTISING","STANDARD_PLUS_ANONYMOUS","sendAnalyticsCreateVacancy","VacancyStub","employerRegion","employerRegionResumesCount","vacancyStubRef","firstSuggestText","firstHighlightText","secondSuggestText","secondSuggestInfoText","secondSuggestLinkText","thirdSuggestText","thirdSuggestInfoText","thirdSuggestLinkText","createVacancy","DashboardVacancy","draft","employerRegionTrl","nextDraftScheduled","newEmployerDashboardVacancy","IndexNewEmployer","employerStatus","isEmployerStatusNew","EMPLOYER_STATES","MobileAppPromotion","mobileAppPromotionVisible","isShown","setIsShown","hhtmFrom","shown","appInstallBannerScreenShown","modalHelper","onCloseWrapper","appInstallBannerCloseButtonClick","onOpenWrapper","appInstallBannerOpenButtonClick","appLinkWithQuery","highlighted","H1Section","IndexPage","isNewEmployer","showAdditionalCheck","additionalCheck","EmptyLayout"],"sourceRoot":""}