{"version":3,"file":"80687.bf98c0887171af4300ca.js","mappings":"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","sources":["xhh/./webapp-static/lux/components/Auction/Common/Controls/ErrorWrapper/Error.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/validateAuctionControls.ts","webpack://xhh/./webapp-static/lux/components/Auction/Common/PriceProductAuction/price-product-auction.less?54e4","xhh/./webapp-static/lux/components/Auction/Common/PriceProductAuction/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/Controls/ErrorWrapper/error-wrapper.less?db45","xhh/./webapp-static/lux/components/Auction/Common/Controls/ErrorWrapper/index.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/AuctionCreationModal/styles.less?e1ee","xhh/./webapp-static/lux/components/Auction/Modals/AuctionCreationModal/index.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useAuctionCreationModal.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Analytics/styles.less?4946","xhh/./webapp-static/lux/components/Auction/Analytics/AuctionContentBudgetReplenishShown.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/BudgetBanner/styles.less?2968","xhh/./webapp-static/lux/components/Auction/Common/BudgetBanner/index.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/Replenishment/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/BudgetReplenishmentModal/styles.less?7f38","xhh/./webapp-static/lux/components/Auction/Modals/BudgetReplenishmentModal/Control.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/validateAuctionReplenishment.ts","xhh/./webapp-static/lux/components/Auction/Modals/BudgetReplenishmentModal/Price.tsx","xhh/./webapp-static/lux/components/Auction/Modals/BudgetReplenishmentModal/SubmitButton.tsx","xhh/./webapp-static/lux/components/Auction/Modals/BudgetReplenishmentModal/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/ConfirmationModal/styles.less?2d9c","xhh/./webapp-static/lux/components/Auction/Modals/ConfirmationModal/index.tsx","xhh/./webapp-static/lux/components/Auction/Analytics/AuctionContentStatisticsShown.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/styles.less?355c","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/BidControl.tsx","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/ChangeStatusButton/changeStatusRequest.ts","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/ChangeStatusButton/index.tsx","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/SaveButton.tsx","xhh/./webapp-static/lux/components/Auction/Common/CampaignStatus/CampaignStatusLabel.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/StatisticsBanner/styles.less?afc1","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/StatisticsBanner/index.tsx","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/VacancyAndArea.tsx","xhh/./webapp-static/lux/components/Auction/Modals/EditAuctionModal/index.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useAuctionEditingModal.tsx","xhh/./webapp-static/lux/hooks/useRunEmployerVacancyAction.ts"],"sourcesContent":["import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport isValidKey from 'bloko/common/isValidKey';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport { AuctionFieldError, AuctionFieldName } from 'lux/models/auctionData';\n\nconst TrlKeys = {\n    [AuctionFieldError.InvalidBid]: 'auction.controls.error.invalidBid',\n    [AuctionFieldError.InvalidBudget]: 'auction.controls.error.invalidBudget',\n    [AuctionFieldError.MinBidValue]: 'auction.controls.error.minBidValue',\n    [AuctionFieldError.MinBudgetValue]: 'auction.controls.error.minBudgetValue',\n    [AuctionFieldError.BidRequired]: 'auction.controls.error.bidRequired',\n    [AuctionFieldError.BudgetRequired]: 'auction.controls.error.budgetRequired',\n    [AuctionFieldError.MinReplenishmentValue]: 'auction.controls.error.minReplenishmentValue',\n    [AuctionFieldError.ReplenishmentRequired]: 'auction.controls.error.replenishmentRequired',\n    [AuctionFieldError.InvalidReplenishment]: 'auction.controls.error.invalidReplenishment',\n};\n\ninterface ErrorProps {\n    error: AuctionFieldError | undefined;\n}\n\nconst Error: TranslatedComponent<ErrorProps> = ({ error, trls }) => {\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const minBid = useSelectorNonNullable(({ auctionData }) => auctionData.controls[AuctionFieldName.Bid].minValue);\n    const minBudget = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Budget].minValue\n    );\n    const minReplenishment = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Replenishment]?.minValue\n    );\n\n    if (!error) {\n        return null;\n    }\n\n    const minValueErrorsMap = {\n        [AuctionFieldError.MinBidValue]: minBid,\n        [AuctionFieldError.MinBudgetValue]: minBudget,\n        [AuctionFieldError.MinReplenishmentValue]: minReplenishment,\n    };\n\n    if (isValidKey(minValueErrorsMap, error)) {\n        const minValue = minValueErrorsMap[error];\n\n        return (\n            <Text size={TextSize.Small}>\n                {formatToReactComponent(trls[TrlKeys[error]], {\n                    '{0}': (\n                        <FormatMoney currency={currency} inCents>\n                            {minValue}\n                        </FormatMoney>\n                    ),\n                })}\n            </Text>\n        );\n    }\n\n    return <Text size={TextSize.Small}>{trls[TrlKeys[error]]}</Text>;\n};\n\nexport default translation(Error);\n","import { AuctionFieldError, AuctionFieldName } from 'lux/models/auctionData';\n\ninterface ValidateAuctionControlsArgs {\n    bid: string;\n    budget: string;\n    minBid: number;\n    minBudget: number;\n}\n\ntype ErrorByAuctionFieldName = Record<AuctionFieldName, undefined | AuctionFieldError>;\n\nexport const validateAuctionControls = ({\n    bid,\n    budget,\n    minBid,\n    minBudget,\n}: ValidateAuctionControlsArgs): ErrorByAuctionFieldName => {\n    const errors = {\n        [AuctionFieldName.Bid]: undefined,\n        [AuctionFieldName.Budget]: undefined,\n    } as ErrorByAuctionFieldName;\n\n    if (bid === '') {\n        errors[AuctionFieldName.Bid] = AuctionFieldError.BidRequired;\n    }\n    if (budget === '') {\n        errors[AuctionFieldName.Budget] = AuctionFieldError.BudgetRequired;\n    }\n    if (bid && Number(bid) < minBid) {\n        errors[AuctionFieldName.Bid] = AuctionFieldError.MinBidValue;\n    }\n    if (budget && Number(budget) < minBudget) {\n        errors[AuctionFieldName.Budget] = AuctionFieldError.MinBudgetValue;\n    }\n    if (budget && !errors[AuctionFieldName.Budget] && Number(budget) % 10000) {\n        errors[AuctionFieldName.Budget] = AuctionFieldError.InvalidBudget;\n    }\n    if (bid && budget && !errors[AuctionFieldName.Bid] && Number(bid) > Number(budget)) {\n        errors[AuctionFieldName.Bid] = AuctionFieldError.InvalidBid;\n    }\n\n    return errors;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"priceProductTextWrapper\":\"price-product-text-wrapper--ETvnkS6PxzPxVReOdPYY\",\"priceProductMoney\":\"price-product-money--KGxV7G7LJmojG5TL4JAW\",\"divider\":\"divider--oP_ggskbJByfz6INk9hA\"};","import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { H2 } from 'bloko/blocks/header';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport FlexibleRow from 'lux/components/FlexibleRow';\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport { AuctionFieldName } from 'lux/models/auctionData';\n\nimport styles from './price-product-auction.less';\n\nconst TrlKeys = {\n    totalPriceTitle: 'employer.auction.price.product.total',\n};\n\ninterface PriceProductAuctionProps {\n    loading: boolean;\n}\n\nconst PriceProductAuction: TranslatedComponent<PriceProductAuctionProps> = ({ loading, trls }) => {\n    const budgetControlInfo = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Budget]\n    );\n    const product = useSelectorNonNullable(({ auctionData }) => auctionData.productInfo.data);\n    const hideClickmeBalance = useSelectorNonNullable(({ auctionData }) => auctionData.hideClickmeBalance);\n\n    if (!product || budgetControlInfo.error) {\n        return null;\n    }\n\n    return (\n        <>\n            {!hideClickmeBalance && (\n                <>\n                    <VSpacing base={4} />\n                    <div className={styles.divider} />\n                    <VSpacing base={4} />\n                </>\n            )}\n            <section>\n                <H2 lite>\n                    <FlexibleRow>\n                        <div className={styles.priceProductTextWrapper}>\n                            <Text Element=\"p\">{trls[TrlKeys.totalPriceTitle]}</Text>\n                        </div>\n                        <div className={styles.priceProductMoney}>\n                            {loading ? (\n                                <Loading scale={LoadingScale.Medium} />\n                            ) : (\n                                <FormatMoney currency={product.currency} inCents={true}>\n                                    {product.price}\n                                </FormatMoney>\n                            )}\n                        </div>\n                    </FlexibleRow>\n                </H2>\n            </section>\n        </>\n    );\n};\n\nexport default translation(PriceProductAuction);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--DdF6tIOGMkOvoNAUOV5x\"};","import { FC } from 'react';\n\nimport { FormError } from 'bloko/blocks/form';\n\nimport { ControlInfo } from 'lux/models/auctionData';\n\nimport Error from 'lux/components/Auction/Common/Controls/ErrorWrapper/Error';\n\nimport styles from './error-wrapper.less';\n\ninterface ErrorWrapperProps {\n    controlInfo: ControlInfo;\n}\n\nconst ErrorWrapper: FC<ErrorWrapperProps> = ({ controlInfo }) => {\n    const { error, showError } = controlInfo;\n\n    return (\n        <div className={styles.wrapper}>\n            <FormError show={showError}>{<Error error={error} />}</FormError>\n        </div>\n    );\n};\n\nexport default ErrorWrapper;\n","import { useCallback, FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionRecommendedBudgetHintButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_recommended_budget_hint_button_click';\nimport auctionRecommendedBudgetHintElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_recommended_budget_hint_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Link, { LinkAppearance } from 'bloko/blocks/link';\nimport Text, { TextSize, TextImportance } from 'bloko/blocks/text';\n\nimport { debouncedAuctionControlsEdit, getInputChangeAnalyticsParams } from 'lux/components/Auction/utils';\nimport FormatMoney from 'lux/components/FormatMoney';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { AuctionFieldName, updateAuctionControlInfo, setProductInfoLoading } from 'lux/models/auctionData';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport AuctionDummyControls from 'lux/components/Auction/Common/Controls/DummyControls';\nimport ErrorWrapper from 'lux/components/Auction/Common/Controls/ErrorWrapper';\nimport HintOrErrorWrapper from 'lux/components/Auction/Common/Controls/HintOrErrorWrapper';\nimport { validateAuctionControls } from 'lux/components/Auction/Common/Controls/validateAuctionControls';\n\nconst AuctionControls: FC = () => {\n    const bidControlInfo = useSelectorNonNullable(({ auctionData }) => auctionData.controls[AuctionFieldName.Bid]);\n    const budgetControlInfo = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Budget]\n    );\n    const dispatch = useDispatch();\n\n    // tempexp_27104_start\n    const vacancyCreateDraftId = useSelector(({ vacancyCreateDraftId }) => vacancyCreateDraftId);\n    const vacancyId = useSelectorNonNullable(({ auctionData }) => auctionData.vacancyId);\n    const isBranchAEnabled = useExperiment('auction_rec_exp_bid_25_percent');\n    const isBranchBEnabled = useExperiment('auction_rec_exp_bid_75_percent');\n    const isBranchCEnabled = useExperiment('auction_rec_exp_bid_100');\n    const isExperimentEnabled = isBranchAEnabled || isBranchBEnabled || isBranchCEnabled;\n    // tempexp_27104_end\n\n    const validateAndChangeAuctionControls = useCallback(\n        (bid: string, budget: string, activeFieldName: AuctionFieldName) => {\n            const minBid = bidControlInfo.minValue;\n            const minBudget = budgetControlInfo.minValue;\n            const errors = validateAuctionControls({ bid, budget, minBid, minBudget });\n\n            dispatch([\n                updateAuctionControlInfo({\n                    fieldName: AuctionFieldName.Bid,\n                    value: bid,\n                    error: errors[AuctionFieldName.Bid],\n                    showError: activeFieldName !== AuctionFieldName.Bid && Boolean(errors[AuctionFieldName.Bid]),\n                }),\n                updateAuctionControlInfo({\n                    fieldName: AuctionFieldName.Budget,\n                    value: budget,\n                    error: errors[AuctionFieldName.Budget],\n                    showError: activeFieldName !== AuctionFieldName.Budget && Boolean(errors[AuctionFieldName.Budget]),\n                }),\n            ]);\n        },\n        [bidControlInfo.minValue, budgetControlInfo.minValue, dispatch]\n    );\n\n    const budgetPlusOrMinusClick = useCallback(\n        (bid: string, budget: string) => {\n            const minBid = bidControlInfo.minValue;\n            const minBudget = budgetControlInfo.minValue;\n            const errors = validateAuctionControls({ bid, budget, minBid, minBudget });\n\n            dispatch([\n                setProductInfoLoading(true),\n                updateAuctionControlInfo({\n                    fieldName: AuctionFieldName.Bid,\n                    value: bid,\n                    error: errors[AuctionFieldName.Bid],\n                    showError: !!errors[AuctionFieldName.Bid],\n                }),\n                updateAuctionControlInfo({\n                    fieldName: AuctionFieldName.Budget,\n                    value: budget,\n                    error: errors[AuctionFieldName.Budget],\n                    showError: !!errors[AuctionFieldName.Budget],\n                }),\n            ]);\n        },\n        [bidControlInfo.minValue, budgetControlInfo.minValue, dispatch]\n    );\n\n    return (\n        <AuctionDummyControls\n            bidError={bidControlInfo.error}\n            bidShowError={bidControlInfo.showError}\n            bidValue={bidControlInfo.value}\n            minBid={bidControlInfo.minValue}\n            budgetError={budgetControlInfo.error}\n            budgetShowError={budgetControlInfo.showError}\n            budgetValue={budgetControlInfo.value}\n            minBudget={budgetControlInfo.minValue}\n            onBidBlur={() => {\n                dispatch(\n                    updateAuctionControlInfo({\n                        fieldName: AuctionFieldName.Bid,\n                        showError: Boolean(bidControlInfo.error),\n                    })\n                );\n            }}\n            onBidChange={(bid) => {\n                validateAndChangeAuctionControls(bid, budgetControlInfo.value, AuctionFieldName.Bid);\n            }}\n            onBidFocus={() => {\n                dispatch(\n                    updateAuctionControlInfo({\n                        fieldName: AuctionFieldName.Bid,\n                        showError: false,\n                    })\n                );\n            }}\n            onBudgetBlur={() => {\n                dispatch(\n                    updateAuctionControlInfo({\n                        fieldName: AuctionFieldName.Budget,\n                        showError: Boolean(budgetControlInfo.error),\n                    })\n                );\n            }}\n            onBudgetChange={(budget) => {\n                dispatch(setProductInfoLoading(true));\n                validateAndChangeAuctionControls(bidControlInfo.value, budget, AuctionFieldName.Budget);\n                debouncedAuctionControlsEdit(dispatch(getInputChangeAnalyticsParams({ budget })));\n            }}\n            onBudgetFocus={() => {\n                dispatch(\n                    updateAuctionControlInfo({\n                        fieldName: AuctionFieldName.Budget,\n                        showError: false,\n                    })\n                );\n            }}\n            onBudgetPlusOrMinusClick={(budget) => {\n                budgetPlusOrMinusClick(bidControlInfo.value, budget);\n                debouncedAuctionControlsEdit(dispatch(getInputChangeAnalyticsParams({ budget })));\n            }}\n            renderBidError={() => <ErrorWrapper controlInfo={bidControlInfo} />}\n            renderBudgetError={() => {\n                // tempexp_27104_start\n                const bidValue = Number(bidControlInfo.value);\n                const budgetValue = Number(budgetControlInfo.value);\n                const recommendedBudget = bidValue * 100;\n                // tempexp_27104_end\n\n                // tempexp_27104_next_line\n                return isExperimentEnabled ? (\n                    <HintOrErrorWrapper>\n                        {budgetControlInfo.showError ? (\n                            <ErrorWrapper controlInfo={budgetControlInfo} />\n                        ) : (\n                            budgetValue < recommendedBudget && (\n                                <ElementShownAnchor\n                                    fn={auctionRecommendedBudgetHintElementShown}\n                                    vacancyId={vacancyId}\n                                    bid={bidControlInfo.value}\n                                    budget={budgetControlInfo.value}\n                                    draftId={vacancyCreateDraftId}\n                                    initialBid={bidControlInfo.initialValue}\n                                    initialBudget={budgetControlInfo.initialValue}\n                                >\n                                    <Text size={TextSize.Small} importance={TextImportance.Secondary}>\n                                        С{NON_BREAKING_SPACE}этим бюджетом и{NON_BREAKING_SPACE}ставкой откликов будет\n                                        мало. Чтобы было больше, укажите бюджет от\n                                        {NON_BREAKING_SPACE}\n                                        <Link\n                                            appearance={LinkAppearance.Pseudo}\n                                            onClick={() => {\n                                                auctionRecommendedBudgetHintButtonClick({\n                                                    vacancyId,\n                                                    bid: bidControlInfo.value,\n                                                    budget: budgetControlInfo.value,\n                                                    draftId: vacancyCreateDraftId,\n                                                    initialBid: bidControlInfo.initialValue,\n                                                    initialBudget: budgetControlInfo.initialValue,\n                                                });\n                                                dispatch(setProductInfoLoading(true));\n                                                validateAndChangeAuctionControls(\n                                                    bidControlInfo.value,\n                                                    String(recommendedBudget),\n                                                    AuctionFieldName.Budget\n                                                );\n                                                debouncedAuctionControlsEdit(\n                                                    dispatch(\n                                                        getInputChangeAnalyticsParams({\n                                                            budget: String(recommendedBudget),\n                                                        })\n                                                    )\n                                                );\n                                            }}\n                                        >\n                                            <FormatMoney currency={CurrencyType.RUR} inCents>\n                                                {recommendedBudget}\n                                            </FormatMoney>\n                                        </Link>\n                                    </Text>\n                                </ElementShownAnchor>\n                            )\n                        )}\n                    </HintOrErrorWrapper>\n                ) : (\n                    <ErrorWrapper controlInfo={budgetControlInfo} />\n                );\n            }}\n        />\n    );\n};\n\nexport default AuctionControls;\n","// extracted by mini-css-extract-plugin\nexport default {\"contentWrapper\":\"content-wrapper--WVCWmvdm2Q3FiivWbz9v\",\"centeringWrapper\":\"centering-wrapper--Mp7tnDX2NvfnR3zxbgAc\",\"modalStatus\":\"modal-status--LceNsK5BvcXUc1MEEQVq\",\"modalFooterInner\":\"modal-footer-inner--O9gEb3eB4_mKws7OVyPS\",\"modalFooterButtonContainer\":\"modal-footer-button-container--nfuJUwvGfzGLrcT9zfAh\",\"modalHeaderInner\":\"modal-header-inner--szhcWuKJVHMqF40W6xLU\",\"modalFooterButtonWrapper\":\"modal-footer-button-wrapper--fkdEgEcDo7qMLibCHQ1O\",\"draftAction\":\"draft-action--H_cWWf9FJtK5BeUugdKb\"};","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport auctionHowItWorksButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_how_it_works_button_click';\nimport auctionModalCreateCampaignButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_create_campaign_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonAppearance } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport Loading, { LoadingColor, LoadingScale } from 'bloko/blocks/loading';\nimport Modal, { ModalHeader, ModalTitle, ModalFooter, ModalContent } from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AuctionContentShown from 'lux/components/Auction/Analytics/AuctionContentShown';\nimport BidRating from 'lux/components/Auction/Common/BidRating';\nimport AuctionControls from 'lux/components/Auction/Common/Controls';\nimport PriceProductAuction from 'lux/components/Auction/Common/PriceProductAuction';\nimport FlexibleRow, { FlexibleRowAlignItems } from 'lux/components/FlexibleRow';\nimport Label, { LabelType, LabelColor } from 'lux/components/Label';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport {\n    AuctionFieldName,\n    defaultControlInfo,\n    CampaignCreationStatus,\n    setCreatedAuctionData,\n    CreatedAuctionData,\n} from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\nimport {\n    createCartWithClickmeAuctionCampaignDraft,\n    createClickmeAuctionCampaignWithoutPurchase,\n} from 'lux/requests/price/cart';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.title',\n    description: 'auction.description',\n    draftDescription: 'auction.creation.draftDescription',\n    draftAction: 'auction.creation.draftAction',\n    draftLabel: 'auction.creation.draftLabel',\n    howItWorksTrigger: 'auction.howItWorks.trigger',\n    cancel: 'Cancel',\n    purchase: 'employer.auction.price.purchase',\n    create: 'employer.myvacancies.auctionModal.create',\n};\n\ninterface AuctionCreationModalProps {\n    hideModal: () => void;\n    loading?: boolean;\n    showHowItWorksModal: () => void;\n    visible: boolean;\n    onCampaignCreated?: (data: CreatedAuctionData) => void;\n}\n\nconst AuctionCreationModal: TranslatedComponent<AuctionCreationModalProps> = ({\n    hideModal,\n    loading,\n    showHowItWorksModal,\n    trls,\n    visible,\n    onCampaignCreated,\n}) => {\n    const bidControlInfo = useSelector(\n        ({ auctionData }) => auctionData?.controls[AuctionFieldName.Bid] || defaultControlInfo\n    );\n    const budgetControlInfo = useSelector(\n        ({ auctionData }) => auctionData?.controls[AuctionFieldName.Budget] || defaultControlInfo\n    );\n    const isCampaignDraft = useSelector(\n        ({ auctionData }) => auctionData?.campaignCreationStatus === CampaignCreationStatus.CampaignDraftCreated\n    );\n    const draftPurchaseUrl = useSelector(({ auctionData }) => auctionData?.campaignDraft?.purchaseUrl);\n    const product = useSelector(({ auctionData }) => auctionData?.productInfo.data || null);\n    const productLoading = useSelector(({ auctionData }) => auctionData?.productInfo.loading || false);\n    const vacancyId = useSelector(({ auctionData }) => auctionData?.vacancyId || null);\n    const campaignDraftId = useSelector(({ auctionData }) => auctionData?.campaignDraft?.campaignDraftId);\n    const campaignCreationStatus = useSelector(({ auctionData }) => auctionData?.campaignCreationStatus);\n    const maxBidAmongSimilarVacancies = useSelector(\n        ({ auctionData }) => auctionData?.bidRating.data.maxBidAmongSimilarVacancies\n    );\n    const useAvailableMoney = useSelector(({ auctionData }) => auctionData?.useAvailableMoney);\n    const availableMoney = useSelector(({ auctionData }) => auctionData?.availableMoney);\n\n    const dispatch = useDispatch();\n\n    const [disabled, setDisabledOn, setDisabledOff] = useOnOffState(false);\n\n    const submitIsDisabled = loading || productLoading || (!useAvailableMoney && !product) || !vacancyId || disabled;\n\n    const createCampaign = useCallback(() => {\n        if (submitIsDisabled || bidControlInfo.error || budgetControlInfo.error) {\n            return;\n        }\n        setDisabledOn();\n        const currentBid = Number(bidControlInfo.value);\n        const currentBudget = Number(budgetControlInfo.value);\n        void dispatch(\n            product\n                ? createCartWithClickmeAuctionCampaignDraft(\n                      [product],\n                      {\n                          httmFromLabel: 'clickmePopup',\n                          source: 'clickmePopup',\n                      },\n                      vacancyId,\n                      currentBid,\n                      currentBudget\n                  )\n                : createClickmeAuctionCampaignWithoutPurchase(\n                      vacancyId,\n                      currentBid,\n                      currentBudget,\n                      (data) => {\n                          dispatch(setCreatedAuctionData(data));\n                          onCampaignCreated?.(data);\n                          hideModal();\n                      },\n                      hideModal\n                  )\n        ).finally(setDisabledOff);\n        auctionModalCreateCampaignButtonClick({\n            vacancyId,\n            campaignDraftId,\n            campaignCreationStatus: campaignCreationStatus as CampaignCreationStatus,\n            bidInCents: currentBid,\n            budgetInCents: currentBudget,\n            maxBidAmongSimilarVacancies: maxBidAmongSimilarVacancies as number,\n            useAvailableMoney: !!useAvailableMoney,\n            availableMoneyInCents: availableMoney ?? 0,\n        });\n    }, [\n        submitIsDisabled,\n        bidControlInfo.error,\n        bidControlInfo.value,\n        budgetControlInfo.error,\n        budgetControlInfo.value,\n        setDisabledOn,\n        dispatch,\n        product,\n        vacancyId,\n        setDisabledOff,\n        campaignDraftId,\n        campaignCreationStatus,\n        maxBidAmongSimilarVacancies,\n        useAvailableMoney,\n        availableMoney,\n        onCampaignCreated,\n        hideModal,\n    ]);\n\n    const onHowItWorksClick = useCallback(() => {\n        auctionHowItWorksButtonClick({\n            vacancyId,\n            campaignDraftId,\n            campaignCreationStatus: campaignCreationStatus as CampaignCreationStatus,\n            // Тут ещё не создана кампания\n            campaignId: undefined,\n            campaignStatus: undefined,\n        });\n        showHowItWorksModal();\n    }, [campaignCreationStatus, campaignDraftId, showHowItWorksModal, vacancyId]);\n\n    return (\n        <Modal visible={visible} onClose={hideModal}>\n            <ModalHeader>\n                <FlexibleRow>\n                    <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n                    {isCampaignDraft && (\n                        <Label\n                            type={LabelType.CustomContent}\n                            color={LabelColor.Yellow}\n                            Content={trls[TrlKeys.draftLabel]}\n                        />\n                    )}\n                </FlexibleRow>\n            </ModalHeader>\n            <ModalContent>\n                <div className={styles.contentWrapper}>\n                    {isCampaignDraft && draftPurchaseUrl ? (\n                        <>\n                            <div className={styles.draftAction}>\n                                <FlexibleRow alignItems={FlexibleRowAlignItems.Start}>\n                                    <Text>{trls[TrlKeys.draftDescription]}</Text>\n                                    <Button\n                                        kind={ButtonKind.Primary}\n                                        appearance={ButtonAppearance.Outlined}\n                                        Element={Link}\n                                        to={draftPurchaseUrl}\n                                    >\n                                        {trls[TrlKeys.draftAction]}\n                                    </Button>\n                                </FlexibleRow>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <Text>{trls[TrlKeys.description]}</Text>\n                            <VSpacing base={1} />\n                            <BlokoLink appearance={LinkAppearance.Pseudo} onClick={onHowItWorksClick}>\n                                {trls[TrlKeys.howItWorksTrigger]}\n                            </BlokoLink>\n                        </>\n                    )}\n                    <VSpacing xs={10} base={8} />\n                    {loading ? (\n                        <div className={styles.centeringWrapper}>\n                            <Loading scale={LoadingScale.Medium} />\n                            <VSpacing xs={10} base={6} />\n                        </div>\n                    ) : (\n                        <AuctionContentShown>\n                            <BidRating />\n                            <VSpacing xs={13} base={8} />\n                            <AuctionControls />\n                        </AuctionContentShown>\n                    )}\n                </div>\n                {!loading && product && <PriceProductAuction loading={productLoading} />}\n            </ModalContent>\n            <ModalFooter>\n                <FlexibleRow>\n                    <div>\n                        {isCampaignDraft && (\n                            <BlokoLink appearance={LinkAppearance.Pseudo} onClick={showHowItWorksModal}>\n                                {trls[TrlKeys.howItWorksTrigger]}\n                            </BlokoLink>\n                        )}\n                    </div>\n                    <div>\n                        <Button onClick={hideModal}>{trls[TrlKeys.cancel]}</Button>\n                        <FormSpacer>\n                            <Button\n                                data-qa=\"create-auction-button\"\n                                disabled={submitIsDisabled}\n                                kind={ButtonKind.Primary}\n                                loading={(loading || productLoading) && <Loading initial={LoadingColor.White} />}\n                                onClick={createCampaign}\n                            >\n                                {product ? trls[TrlKeys.purchase] : trls[TrlKeys.create]}\n                            </Button>\n                        </FormSpacer>\n                    </div>\n                </FlexibleRow>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(AuctionCreationModal);\n","import { ReactNode, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport auctionModalOpenButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_open_button_click';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport AuctionCreationModal from 'lux/components/Auction/Modals/AuctionCreationModal';\nimport HowItWorksModal from 'lux/components/Auction/Modals/HowItWorksModal';\nimport { AUCTION_ERROR, AuctionErrorType } from 'lux/components/Notifications/EmployerAuction';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport {\n    AuctionData,\n    DisabledAuctionData,\n    CAMPAIGN_CREATION_ENABLED_STATUSES,\n    CampaignCreationStatus,\n    CreatedAuctionData,\n} from 'lux/models/auctionData';\nimport fetcher from 'lux/modules/fetcher';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst setAuctionData = makeSetStoreField('auctionData');\n\nconst GET_AUCTION_DATA_URL = '/shards/employer/vacancies/auction_data';\n\ndeclare global {\n    interface FetcherGetApi {\n        [GET_AUCTION_DATA_URL]: {\n            queryParams: {\n                vacancyId: string;\n            };\n            response: AuctionData | DisabledAuctionData;\n        };\n    }\n}\n\ninterface UseAuctionCreationModal {\n    (vacancyId: string, campaignCreationStatus: CampaignCreationStatus): {\n        showAuctionCreationModal: () => void;\n        renderAuctionCreationModal: (onCampaignCreated?: (data: CreatedAuctionData) => void) => ReactNode;\n    };\n}\n\nconst useAuctionCreationModal: UseAuctionCreationModal = (vacancyId, campaignCreationStatus) => {\n    const [auctionModalVisible, showAuctionModal, hideAuctionModal] = useOnOffState(false);\n    const [howItWorkModalVisible, showHowItWorksModal, hideHowItWorksModal] = useOnOffState(false);\n    const [loading, startLoading, finishLoading] = useOnOffState(false);\n\n    const onShowHowItWorksModal = useCallback(() => {\n        hideAuctionModal();\n        showHowItWorksModal();\n    }, [hideAuctionModal, showHowItWorksModal]);\n\n    const onCloseHowItWorksModal = useCallback(() => {\n        hideHowItWorksModal();\n        showAuctionModal();\n    }, [hideHowItWorksModal, showAuctionModal]);\n\n    const dispatch = useDispatch();\n\n    const showAuctionCreationModal = useCallback(async () => {\n        try {\n            startLoading();\n            showAuctionModal();\n            auctionModalOpenButtonClick({\n                vacancyId,\n                campaignCreationStatus,\n                // Тут ещё не создана кампания\n                campaignId: undefined,\n                campaignStatus: undefined,\n            });\n            const auctionData = await fetcher.get(GET_AUCTION_DATA_URL, {\n                params: {\n                    vacancyId,\n                },\n            });\n            if (!CAMPAIGN_CREATION_ENABLED_STATUSES.includes(auctionData.campaignCreationStatus)) {\n                hideAuctionModal();\n                dispatch(addNotification(AUCTION_ERROR, { errorType: AuctionErrorType.AlreadyCreated }));\n                return;\n            }\n            UXFeedback.sendEvent('auction_creation_modal_open');\n            dispatch(setAuctionData(auctionData as AuctionData));\n        } catch (error) {\n            hideAuctionModal();\n            dispatch(showDefaultError(error));\n        } finally {\n            finishLoading();\n        }\n    }, [campaignCreationStatus, dispatch, finishLoading, hideAuctionModal, showAuctionModal, startLoading, vacancyId]);\n\n    const renderAuctionCreationModal = useCallback(\n        (onCampaignCreated?: (data: CreatedAuctionData) => void) => (\n            <>\n                {auctionModalVisible && (\n                    <AuctionCreationModal\n                        hideModal={hideAuctionModal}\n                        loading={loading}\n                        showHowItWorksModal={onShowHowItWorksModal}\n                        visible={auctionModalVisible}\n                        onCampaignCreated={onCampaignCreated}\n                    />\n                )}\n                <HowItWorksModal onClose={onCloseHowItWorksModal} visible={howItWorkModalVisible} />\n            </>\n        ),\n        [\n            auctionModalVisible,\n            hideAuctionModal,\n            howItWorkModalVisible,\n            loading,\n            onCloseHowItWorksModal,\n            onShowHowItWorksModal,\n        ]\n    );\n    return { showAuctionCreationModal, renderAuctionCreationModal };\n};\n\nexport default useAuctionCreationModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContentShownAnchor\":\"modal-content-shown-anchor--fJCLR9Q11pyjEolUPIWG\"};","import React, { FC, PropsWithChildren } from 'react';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionContentElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_content_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\n\nimport useHhtmSourceLabelFromRunActionQs from 'lux/components/Auction/hooks/useHhtmSourceLabelFromRunActionQs';\nimport { AuctionFieldName } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './styles.less';\n\nconst AuctionContentBudgetReplenishShown: FC<PropsWithChildren> = ({ children }) => {\n    const {\n        bidRating,\n        controls,\n        vacancyId,\n        campaignDraft,\n        currentVacancyAuctionCampaign,\n        campaignCreationStatus,\n        auctionStatistics,\n    } = useSelectorNonNullable(({ auctionData }) => auctionData);\n    const vacancyCreateDraftId = useSelector(({ vacancyCreateDraftId }) => vacancyCreateDraftId);\n    const hhtmSourceLabel = useHhtmSourceLabelFromRunActionQs();\n\n    const campaignId = currentVacancyAuctionCampaign ? String(currentVacancyAuctionCampaign.campaignId) : undefined;\n    const campaignDraftId = campaignDraft ? String(campaignDraft.campaignDraftId) : undefined;\n    const campaignStatus = currentVacancyAuctionCampaign?.campaignStatus;\n\n    return hhtmSourceLabel ? (\n        <ElementShownAnchor\n            fn={auctionContentElementShown}\n            vacancyId={vacancyId}\n            campaignId={campaignId}\n            campaignDraftId={campaignDraftId}\n            campaignStatus={campaignStatus}\n            campaignCreationStatus={campaignCreationStatus}\n            draftId={vacancyCreateDraftId}\n            bid={controls[AuctionFieldName.Bid].value}\n            budget={controls[AuctionFieldName.Budget].value}\n            competingCampaignBids={JSON.stringify(bidRating.data.competingCampaignBids)}\n            competingCampaignIds={JSON.stringify(bidRating.data.competingCampaignIds)}\n            clicks={auctionStatistics.clicks}\n            response={auctionStatistics.responses}\n            className={styles.modalContentShownAnchor}\n            initialBid={controls[AuctionFieldName.Bid].initialValue}\n            initialBudget={controls[AuctionFieldName.Budget].initialValue}\n            ratingStatus={bidRating.data.bidFrequencyStatus}\n            hhtmSourceLabel={hhtmSourceLabel}\n        >\n            {children}\n        </ElementShownAnchor>\n    ) : (\n        <>{children}</>\n    );\n};\n\nexport default AuctionContentBudgetReplenishShown;\n","// extracted by mini-css-extract-plugin\nexport default {\"budgetBanner\":\"budget-banner--dJZfpSL50wy79b3y0UIg\",\"budgetBalance\":\"budget__balance--IuECywkNAoBFhUMiBB7U\",\"budgetStatusHint\":\"budget__status-hint--ZKkZG5kjtfar7Hqvutag\",\"row\":\"row--ZuNpjVdarDQhpEtOQ2cw\"};","import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Conversion from 'bloko/blocks/conversion';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport { AuctionCampaignStatus, AuctionFieldName } from 'lux/models/auctionData';\nimport { NARROW_NON_BREAKING_SPACE, NON_BREAKING_SPACE, REGULAR_SPACE } from 'lux/modules/symbols';\n\nimport styles from './styles.less';\n\nconst getClickRemainder = (bid: number, balance: number) => {\n    return bid ? Math.floor(balance / bid) : 0;\n};\n\nconst TrlKeys = {\n    title: 'auction.budget.title',\n    outOf: 'outOf',\n    enoughFor: 'auction.budget.enoughFor',\n    click: {\n        one: 'click.one',\n        some: 'click.some',\n        many: 'click.many',\n    },\n    hint: {\n        [AuctionCampaignStatus.CampaignLowBalance]: 'auction.budget.campaignLowBalance',\n        [AuctionCampaignStatus.AccountLowBalance]: 'auction.budget.accountLowBalance',\n    },\n};\n\ninterface BudgetBannerProps {\n    button?: JSX.Element;\n}\n\nconst BudgetBanner: TranslatedComponent<BudgetBannerProps> = ({ trls, button }) => {\n    const currentCampaign = useSelectorNonNullable(({ auctionData }) => auctionData.currentVacancyAuctionCampaign);\n    const bid = useSelectorNonNullable(({ auctionData }) => auctionData.controls[AuctionFieldName.Bid].value || '');\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const accountBalance = useSelectorNonNullable(({ auctionData }) => auctionData.accountBalance);\n\n    if (!currentCampaign) {\n        return null;\n    }\n\n    const bidRemainder = getClickRemainder(Number(bid), currentCampaign.campaignBalance);\n\n    return (\n        <div className={styles.budgetBanner}>\n            <div className={styles.row}>\n                <div>\n                    <Text strong importance={TextImportance.Primary}>\n                        {trls[TrlKeys.title]}\n                    </Text>\n                    <VSpacing base={3} />\n                    <Text importance={TextImportance.Secondary}>\n                        <Text Element=\"span\" importance={TextImportance.Primary} size={TextSize.ExtraLarge} strong>\n                            <span className={styles.budgetBalance}>\n                                <FormatMoney\n                                    currency={currency}\n                                    groupSeparator={NARROW_NON_BREAKING_SPACE}\n                                    inCents\n                                    render={(amount, currencyNode) => (\n                                        <>\n                                            <span data-qa=\"auction-budget-remainder\">{amount}</span>\n                                            {NON_BREAKING_SPACE}\n                                            {currencyNode}\n                                        </>\n                                    )}\n                                >\n                                    {currentCampaign.campaignBalance}\n                                </FormatMoney>\n                            </span>\n                        </Text>\n                        {REGULAR_SPACE}\n                        {trls[TrlKeys.outOf]}\n                        {NON_BREAKING_SPACE}\n                        <FormatMoney currency={currency} groupSeparator={NARROW_NON_BREAKING_SPACE} inCents>\n                            {currentCampaign.budget}\n                        </FormatMoney>\n                    </Text>\n                    <VSpacing base={1} />\n                </div>\n                {button}\n            </div>\n            {currentCampaign.campaignStatus === AuctionCampaignStatus.CampaignLowBalance ||\n            currentCampaign.campaignStatus === AuctionCampaignStatus.AccountLowBalance ? (\n                <Text>\n                    <span className={styles.budgetStatusHint}>\n                        {formatToReactComponent(trls[TrlKeys.hint[currentCampaign.campaignStatus]], {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {accountBalance}\n                                </FormatMoney>\n                            ),\n                        })}\n                    </span>\n                </Text>\n            ) : (\n                <Text>\n                    {trls[TrlKeys.enoughFor]}\n                    {NON_BREAKING_SPACE}\n                    <Conversion\n                        value={bidRemainder}\n                        one={trls[TrlKeys.click.one]}\n                        some={trls[TrlKeys.click.some]}\n                        many={trls[TrlKeys.click.many]}\n                        zero={`0 ${trls[TrlKeys.click.many]}`}\n                    />\n                </Text>\n            )}\n        </div>\n    );\n};\n\nexport default translation(BudgetBanner);\n","import { FC } from 'react';\n\nimport useFetchProduct from 'lux/components/Auction/hooks/useFetchProduct';\nimport MoneyInput, { MoneyInputProps } from 'lux/components/MoneyInput';\nimport { AuctionFieldError } from 'lux/models/auctionData';\n\ninterface ReplenishmentProps extends MoneyInputProps {\n    error?: AuctionFieldError;\n}\n\nconst Replenishment: FC<ReplenishmentProps> = ({ value, error, ...props }) => {\n    useFetchProduct({ replenishment: Number(value), error });\n\n    return <MoneyInput {...props} value={value} />;\n};\n\nexport default Replenishment;\n","// extracted by mini-css-extract-plugin\nexport default {\"auctionReplenishmentContent\":\"auction-replenishment-content--RyFIylkEX3zvVm9xl5lj\",\"auctionReplenishmentControlError\":\"auction-replenishment__control-error--nPk3ZMXvT6KhG_ZN924m\",\"auctionReplenishmentBudgetChip\":\"auction-replenishment__budget-chip--pB8PRPqN4ViDSewx2FjV\"};","import { useDispatch } from 'react-redux';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { LinkChip } from 'bloko/blocks/chips';\nimport { FormError } from 'bloko/blocks/form';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport format from 'bloko/common/format';\nimport { LangTrls, TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Strings from 'Utils/Strings';\nimport Error from 'lux/components/Auction/Common/Controls/ErrorWrapper/Error';\nimport Replenishment from 'lux/components/Auction/Common/Controls/Replenishment';\nimport { validateAuctionReplenishment } from 'lux/components/Auction/Common/Controls/validateAuctionReplenishment';\nimport { debouncedAuctionControlsEdit, getInputChangeAnalyticsParams } from 'lux/components/Auction/utils';\nimport Currency from 'lux/components/Currency';\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport { AuctionFieldName, setProductInfoLoading, updateAuctionControlInfo } from 'lux/models/auctionData';\nimport { CurrencyType } from 'lux/models/currencies.types';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    currency: {\n        AZN: 'AZN',\n        BYR: 'BYR',\n        EUR: 'EUR',\n        KZT: 'KZT',\n        RUR: 'RUR',\n        UAH: 'UAH',\n        USD: 'USD',\n        UZS: 'UZS',\n        GEL: 'GEL',\n        KGS: 'KGS',\n    },\n    placeholder: 'auction.budgetReplenishment.control.placeholder',\n    amount: 'auction.budgetReplenishment.amount',\n};\n\nconst getPlaceholder = (trls: LangTrls, minValue: number, currency: CurrencyType) => {\n    const formattedMin = Strings.formatCostInCents(minValue);\n\n    return format(trls[TrlKeys.placeholder], {\n        '{0}': formattedMin,\n        '{1}': trls[TrlKeys.currency[currency]],\n    });\n};\n\nconst CHIPS_VALUES = ['300000', '500000', '1200000'];\n\nconst Control: TranslatedComponent = ({ trls }) => {\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const replenishmentControl = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Replenishment]\n    );\n    const budget = useSelectorNonNullable(({ auctionData }) => auctionData.currentVacancyAuctionCampaign?.budget || 0);\n    const dispatch = useDispatch();\n\n    const updateReplenishment = (value: string) => {\n        const errors = validateAuctionReplenishment({\n            minReplenishment: replenishmentControl.minValue,\n            replenishment: value,\n        });\n\n        const newBudget = String(budget + Number(value));\n\n        if (value !== replenishmentControl.value) {\n            dispatch([\n                setProductInfoLoading(true),\n                updateAuctionControlInfo({\n                    fieldName: AuctionFieldName.Replenishment,\n                    value,\n                    error: errors[AuctionFieldName.Replenishment],\n                    showError: false,\n                }),\n            ]);\n\n            debouncedAuctionControlsEdit(\n                dispatch(\n                    getInputChangeAnalyticsParams({\n                        budget: newBudget,\n                    })\n                )\n            );\n        }\n    };\n\n    const handleChipClick = (value: string) => () => {\n        updateReplenishment(value);\n    };\n\n    const handleChange = (value: string) => {\n        updateReplenishment(value);\n    };\n\n    return (\n        <div>\n            <Text strong>{trls[TrlKeys.amount]}</Text>\n            <VSpacing base={1} />\n            <Replenishment\n                value={replenishmentControl.value}\n                onChange={handleChange}\n                placeholder={getPlaceholder(trls, replenishmentControl.minValue, currency)}\n                postfix={<Currency value={currency} />}\n                invalid={replenishmentControl.showError}\n                maxLength={7}\n                name={AuctionFieldName.Replenishment}\n                onBlur={() => {\n                    dispatch(\n                        updateAuctionControlInfo({\n                            fieldName: AuctionFieldName.Replenishment,\n                            showError: Boolean(replenishmentControl.error),\n                        })\n                    );\n                }}\n                onFocus={() => {\n                    dispatch(\n                        updateAuctionControlInfo({\n                            fieldName: AuctionFieldName.Replenishment,\n                            showError: false,\n                        })\n                    );\n                }}\n                min={replenishmentControl.minValue}\n                error={replenishmentControl.error}\n                data-qa=\"auction-replenishment-control\"\n            />\n            <div className={styles.auctionReplenishmentControlError}>\n                <FormError show={replenishmentControl.showError}>\n                    <Error error={replenishmentControl.error} />\n                </FormError>\n            </div>\n            {CHIPS_VALUES.map((value) => (\n                <span key={value} className={styles.auctionReplenishmentBudgetChip}>\n                    <LinkChip onClick={handleChipClick(value)}>\n                        <FormatMoney currency={currency} inCents>\n                            {value}\n                        </FormatMoney>\n                    </LinkChip>\n                </span>\n            ))}\n        </div>\n    );\n};\n\nexport default translation(Control);\n","import { AuctionFieldError, AuctionFieldName } from 'lux/models/auctionData';\n\ninterface ValidateAuctionReplenishmentArgs {\n    minReplenishment: number;\n    replenishment: string;\n}\n\ntype ErrorByAuctionFieldName = Record<AuctionFieldName, undefined | AuctionFieldError>;\n\nexport const validateAuctionReplenishment = ({\n    replenishment,\n    minReplenishment,\n}: ValidateAuctionReplenishmentArgs): ErrorByAuctionFieldName => {\n    const errors = {\n        [AuctionFieldName.Replenishment]: undefined,\n    } as ErrorByAuctionFieldName;\n\n    if (replenishment === '') {\n        errors[AuctionFieldName.Replenishment] = AuctionFieldError.ReplenishmentRequired;\n    }\n    if (replenishment && Number(replenishment) < minReplenishment) {\n        errors[AuctionFieldName.Replenishment] = AuctionFieldError.MinReplenishmentValue;\n    }\n    if (replenishment && Number(replenishment) < minReplenishment) {\n        errors[AuctionFieldName.Replenishment] = AuctionFieldError.MinReplenishmentValue;\n    }\n    if (replenishment && !errors[AuctionFieldName.Replenishment] && Number(replenishment) % 10000) {\n        errors[AuctionFieldName.Replenishment] = AuctionFieldError.InvalidReplenishment;\n    }\n\n    return errors;\n};\n","import { FC } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport PriceProductAuction from 'lux/components/Auction/Common/PriceProductAuction';\nimport { AuctionFieldName } from 'lux/models/auctionData';\n\nconst Price: FC = () => {\n    const replenishmentControlInfo = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.controls[AuctionFieldName.Replenishment]\n    );\n    const productLoading = useSelectorNonNullable(({ auctionData }) => auctionData.productInfo.loading);\n    const product = useSelectorNonNullable(({ auctionData }) => auctionData.productInfo.data);\n\n    return replenishmentControlInfo.value && product ? (\n        <PriceProductAuction loading={productLoading} />\n    ) : (\n        <VSpacing base={4} xs={0} />\n    );\n};\n\nexport default Price;\n","import { useDispatch } from 'react-redux';\n\nimport auctionModalEditCampaignButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_edit_campaign_button_click';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { getEditCampaignClickAnalyticsParams } from 'lux/components/Auction/utils';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { setConfirmationModalData, toogleConfirmationModal } from 'lux/models/auctionConfirmationModal';\nimport {\n    AuctionData,\n    AuctionFieldName,\n    CurrentVacancyAuctionCampaign,\n    defaultControlInfo,\n    updateAuctionControlInfo,\n} from 'lux/models/auctionData';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { changedClickmeCampaign, createCartWithChangedClickmeCampaign } from 'lux/requests/price/cart';\n\nconst setAuctionData = makeSetStoreField('auctionData');\n\nconst TrlKeys = {\n    purchase: 'employer.auction.price.purchase',\n    pay: 'auction.pay',\n};\n\ninterface SubmitButtonProps {\n    onClose: () => void;\n    onCloseAll: () => void;\n    onCampaignInfoUpdate?: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void;\n}\n\nconst SubmitButton: TranslatedComponent<SubmitButtonProps> = ({ onClose, onCloseAll, onCampaignInfoUpdate, trls }) => {\n    const bidControlInfo = useSelector(\n        ({ auctionData }) => auctionData?.controls[AuctionFieldName.Bid] || defaultControlInfo\n    );\n    const replenishmentControlInfo = useSelector(\n        ({ auctionData }) => auctionData?.controls[AuctionFieldName.Replenishment] || defaultControlInfo\n    );\n    const currentVacancyAuctionCampaign = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign);\n    const product = useSelector(({ auctionData }) => auctionData?.productInfo.data || null);\n    const productLoading = useSelector(({ auctionData }) => auctionData?.productInfo.loading || false);\n    const vacancyId = useSelector(({ auctionData }) => auctionData?.vacancyId || null);\n    const useAvailableMoney = useSelector(({ auctionData }) => auctionData?.useAvailableMoney);\n    const currency = useSelector(({ auctionData }) => auctionData?.currency as CurrencyType);\n\n    const [disabled, setDisabledOn, setDisabledOff] = useOnOffState(false);\n\n    const dispatch = useDispatch();\n\n    const submitIsDisabled =\n        !currentVacancyAuctionCampaign ||\n        productLoading ||\n        (!useAvailableMoney && !product && !!replenishmentControlInfo.value) ||\n        !vacancyId ||\n        disabled;\n\n    const handleClickChange = () => {\n        if (submitIsDisabled || replenishmentControlInfo.error) {\n            return;\n        }\n\n        setDisabledOn();\n\n        const { budget: initialCampaignBudget, campaignId } = currentVacancyAuctionCampaign;\n\n        const initialBid = Number(bidControlInfo.initialValue);\n        const replenishment = Number(replenishmentControlInfo.value);\n        if (!product) {\n            const callback = (auction: AuctionData) => {\n                onCampaignInfoUpdate?.(auction.currentVacancyAuctionCampaign as CurrentVacancyAuctionCampaign);\n                dispatch([\n                    setAuctionData(auction),\n                    updateAuctionControlInfo({ fieldName: AuctionFieldName.Bid, value: String(bidControlInfo.value) }),\n                ]);\n                onClose();\n                dispatch([toogleConfirmationModal(true), setConfirmationModalData({ currency, price: replenishment })]);\n            };\n            const onError = () => {\n                onCloseAll();\n            };\n            void dispatch(\n                changedClickmeCampaign(\n                    vacancyId,\n                    campaignId,\n                    initialBid,\n                    initialCampaignBudget + replenishment,\n                    callback,\n                    onError\n                )\n            ).finally(setDisabledOff);\n        } else {\n            void dispatch(\n                createCartWithChangedClickmeCampaign(\n                    [product],\n                    {\n                        httmFromLabel: 'clickmePopupEdited',\n                        source: 'clickmePopupEdited',\n                    },\n                    vacancyId,\n                    initialBid,\n                    initialCampaignBudget + replenishment,\n                    campaignId\n                )\n            ).finally(setDisabledOff);\n        }\n\n        auctionModalEditCampaignButtonClick(dispatch(getEditCampaignClickAnalyticsParams('BUDGET')));\n    };\n\n    return (\n        <Button\n            kind={ButtonKind.Primary}\n            onClick={handleClickChange}\n            disabled={submitIsDisabled}\n            data-qa=\"auction-replenishment-button\"\n        >\n            {product ? trls[TrlKeys.purchase] : trls[TrlKeys.pay]}\n        </Button>\n    );\n};\n\nexport default translation(SubmitButton);\n","import Button from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Modal, { ModalFooter, ModalContent, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AuctionContentBudgetReplenishShown from 'lux/components/Auction/Analytics/AuctionContentBudgetReplenishShown';\nimport BudgetBanner from 'lux/components/Auction/Common/BudgetBanner';\nimport AvailableMoney from 'lux/components/Auction/Common/Controls/AvailableMoney';\nimport translation from 'lux/components/translation';\nimport { CurrentVacancyAuctionCampaign } from 'lux/models/auctionData';\n\nimport Control from 'lux/components/Auction/Modals/BudgetReplenishmentModal/Control';\nimport Price from 'lux/components/Auction/Modals/BudgetReplenishmentModal/Price';\nimport SubmitButton from 'lux/components/Auction/Modals/BudgetReplenishmentModal/SubmitButton';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.replenishment.title',\n    back: 'Back',\n};\n\ninterface BudgetReplenishmentModalProps {\n    visible: boolean;\n    onCloseBudgetReplenishment: () => void;\n    onCampaignInfoUpdate?: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void;\n    onCloseAll: () => void;\n    onClose: () => void;\n}\n\nconst BudgetReplenishmentModal: TranslatedComponent<BudgetReplenishmentModalProps> = ({\n    trls,\n    visible,\n    onCloseBudgetReplenishment,\n    onCloseAll,\n    onCampaignInfoUpdate,\n    onClose,\n}) => {\n    return (\n        <Modal visible={visible} onClose={onCloseBudgetReplenishment}>\n            <AuctionContentBudgetReplenishShown>\n                <ModalHeader>\n                    <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n                </ModalHeader>\n                <ModalContent>\n                    <div className={styles.auctionReplenishmentContent}>\n                        <VSpacing base={3} />\n                        <BudgetBanner />\n                        <VSpacing base={8} />\n                        <Control />\n                        <VSpacing base={13} />\n                        <AvailableMoney />\n                        <Price />\n                    </div>\n                </ModalContent>\n                <ModalFooter>\n                    <Button onClick={onCloseBudgetReplenishment}>{trls[TrlKeys.back]}</Button>\n                    <HSpacing base={2} />\n                    <SubmitButton\n                        onClose={onClose}\n                        onCloseAll={onCloseAll}\n                        onCampaignInfoUpdate={onCampaignInfoUpdate}\n                    />\n                </ModalFooter>\n            </AuctionContentBudgetReplenishShown>\n        </Modal>\n    );\n};\n\nexport default translation(BudgetReplenishmentModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContentInner\":\"modal-content-inner--RK6qfylfh5htEua0oOgx\"};","import { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Modal, { ModalContent, ModalFooter, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.confirmationModal.title',\n    text: 'auction.confirmationModal.text',\n    button: 'auction.confirmationModal.button',\n};\n\ninterface ConfirmationModalProps {\n    onClose: () => void;\n}\n\nconst ConfirmationModal: TranslatedComponent<ConfirmationModalProps> = ({ trls, onClose }) => {\n    const { visible, data } = useSelectorNonNullable(({ auctionConfirmationModal }) => auctionConfirmationModal);\n\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <ModalHeader>\n                <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n            </ModalHeader>\n            <ModalContent>\n                <div className={styles.modalContentInner}>\n                    {formatToReactComponent(trls[TrlKeys.text], {\n                        '{0}': (\n                            <FormatMoney currency={data.currency} inCents>\n                                {data.price}\n                            </FormatMoney>\n                        ),\n                    })}\n                </div>\n            </ModalContent>\n            <ModalFooter>\n                <Button kind={ButtonKind.Primary} onClick={onClose}>\n                    {trls[TrlKeys.button]}\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(ConfirmationModal);\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionContentElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_content_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\n\nimport useHhtmSourceLabelFromRunActionQs from 'lux/components/Auction/hooks/useHhtmSourceLabelFromRunActionQs';\nimport { AuctionFieldName } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './styles.less';\n\nconst AuctionContentStatisticsShown: FC<PropsWithChildren> = ({ children }) => {\n    const {\n        bidRating,\n        controls,\n        vacancyId,\n        campaignDraft,\n        currentVacancyAuctionCampaign,\n        campaignCreationStatus,\n        auctionStatistics,\n    } = useSelectorNonNullable(({ auctionData }) => auctionData);\n    const vacancyCreateDraftId = useSelector(({ vacancyCreateDraftId }) => vacancyCreateDraftId);\n    const hhtmSourceLabel = useHhtmSourceLabelFromRunActionQs();\n\n    const campaignId = currentVacancyAuctionCampaign ? String(currentVacancyAuctionCampaign.campaignId) : undefined;\n    const campaignDraftId = campaignDraft ? String(campaignDraft.campaignDraftId) : undefined;\n    const campaignStatus = currentVacancyAuctionCampaign?.campaignStatus;\n    return (\n        <ElementShownAnchor\n            fn={auctionContentElementShown}\n            vacancyId={vacancyId}\n            campaignId={campaignId}\n            campaignDraftId={campaignDraftId}\n            campaignStatus={campaignStatus}\n            campaignCreationStatus={campaignCreationStatus}\n            draftId={vacancyCreateDraftId}\n            bid={controls[AuctionFieldName.Bid].value}\n            budget={controls[AuctionFieldName.Budget].value}\n            competingCampaignBids={JSON.stringify(bidRating.data.competingCampaignBids)}\n            competingCampaignIds={JSON.stringify(bidRating.data.competingCampaignIds)}\n            clicks={auctionStatistics.clicks}\n            response={auctionStatistics.responses}\n            className={styles.modalContentShownAnchor}\n            initialBid={controls[AuctionFieldName.Bid].initialValue}\n            initialBudget={controls[AuctionFieldName.Budget].initialValue}\n            ratingStatus={bidRating.data.bidFrequencyStatus}\n            hhtmSourceLabel={hhtmSourceLabel}\n        >\n            {children}\n        </ElementShownAnchor>\n    );\n};\n\nexport default AuctionContentStatisticsShown;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalFooterInner\":\"modal-footer-inner--VKRGB3LnG0aXj2GWLlEF\",\"modalControlError\":\"modal-control-error--yQeoiedapWiolnQtcBTG\",\"modalLoaderWrapper\":\"modal-loader-wrapper--rUBoJxHgCFkmKxp93lpO\",\"modalActions\":\"modal-actions--ucfLnxSUbNeQvKmEljUw\",\"modalContentWrapper\":\"modal-content-wrapper--CQJiwOxFRfEX90gOIe8a\",\"modalContentStatistics\":\"modal-content-statistics--l3Byq9HkeM3VVjy3lU7E\"};","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { FormError } from 'bloko/blocks/form';\n\nimport Bid from 'lux/components/Auction/Common/Controls/Bid';\nimport Error from 'lux/components/Auction/Common/Controls/ErrorWrapper/Error';\nimport { validateAuctionControls } from 'lux/components/Auction/Common/Controls/validateAuctionControls';\nimport Currency from 'lux/components/Currency';\nimport { AuctionFieldName, updateAuctionControlInfo } from 'lux/models/auctionData';\n\nimport styles from './styles.less';\n\nconst BidControl: FC = () => {\n    const bidControl = useSelectorNonNullable(({ auctionData }) => auctionData.controls[AuctionFieldName.Bid]);\n    const budgetControl = useSelectorNonNullable(({ auctionData }) => auctionData.controls[AuctionFieldName.Budget]);\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n\n    const dispatch = useDispatch();\n\n    const updateValue = (value: string, showError: boolean) => {\n        const errors = validateAuctionControls({\n            bid: value,\n            budget: budgetControl.value,\n            minBid: bidControl.minValue,\n            minBudget: budgetControl.minValue,\n        });\n\n        dispatch([\n            updateAuctionControlInfo({\n                fieldName: AuctionFieldName.Bid,\n                value,\n                error: errors[AuctionFieldName.Bid],\n                showError: showError && !!errors[AuctionFieldName.Bid],\n            }),\n        ]);\n    };\n\n    const handleChange = (value: string) => {\n        updateValue(value, false);\n    };\n\n    const handlePlusMinusClick = (value: string) => {\n        updateValue(value, true);\n    };\n\n    return (\n        <>\n            <Bid\n                invalid={bidControl.showError}\n                error={bidControl.error}\n                maxLength={7}\n                name={AuctionFieldName.Bid}\n                min={bidControl.minValue}\n                value={bidControl.value}\n                onChange={handleChange}\n                onBlur={() => {\n                    dispatch(\n                        updateAuctionControlInfo({\n                            fieldName: AuctionFieldName.Bid,\n                            showError: Boolean(bidControl.error),\n                        })\n                    );\n                }}\n                onFocus={() => {\n                    dispatch(\n                        updateAuctionControlInfo({\n                            fieldName: AuctionFieldName.Bid,\n                            showError: false,\n                        })\n                    );\n                }}\n                postfix={<Currency value={currency} />}\n                onPlusOrMinusClick={handlePlusMinusClick}\n                data-qa=\"auction-bid-control\"\n                minusDataQa=\"bid-minus\"\n                plusDataQa=\"bid-plus\"\n            />\n            <div className={styles.modalControlError}>\n                <FormError show={bidControl.showError}>{<Error error={bidControl.error} />}</FormError>\n            </div>\n        </>\n    );\n};\n\nexport default BidControl;\n","import { Dispatch, AnyAction } from 'redux';\n\nimport { DEFAULT_ERROR } from 'lux/components/Notifications/DefaultError';\nimport { AuctionCampaignStatus, CurrentVacancyAuctionCampaign, updateAuctionStatus } from 'lux/models/auctionData';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nconst CHANGE_AUCTION_CAMPAIGN_STATUS_URL = '/shards/vacancy/update_status_campaign';\n\ndeclare global {\n    interface FetcherPutApi {\n        [CHANGE_AUCTION_CAMPAIGN_STATUS_URL]: {\n            queryParams: {\n                campaignStatus: string;\n                campaignId: number;\n            };\n            body: null;\n            response: {\n                campaignStatus: AuctionCampaignStatus;\n            };\n        };\n    }\n}\n\nexport const changeStatusRequest =\n    (\n        campaignId: number,\n        campaignStatus: AuctionCampaignStatus.Active | AuctionCampaignStatus.Blocked,\n        callback: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put(CHANGE_AUCTION_CAMPAIGN_STATUS_URL, null, {\n                params: {\n                    campaignId,\n                    campaignStatus,\n                },\n            })\n            .then(\n                ({ data }) => {\n                    if (data) {\n                        dispatch(updateAuctionStatus(data.campaignStatus));\n                        if (callback) {\n                            callback(data);\n                        }\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n","import { useDispatch } from 'react-redux';\n\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport Loading from 'bloko/blocks/loading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { isPauseCampaignStatus, isRestoreAction } from 'lux/components/Auction/utils';\nimport { SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY } from 'lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport {\n    AuctionCampaignStatus,\n    AuctionFieldName,\n    CurrentVacancyAuctionCampaign,\n    defaultControlInfo,\n} from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport { changeStatusRequest } from 'lux/components/Auction/Modals/EditAuctionModal/ChangeStatusButton/changeStatusRequest';\n\nconst TrlKeys = {\n    restore: 'auction.modal.restore',\n    pause: 'auction.modal.pause',\n};\n\ninterface ChangeStatusButtonProps {\n    auctionLoading: boolean;\n    onCloseModal: () => void;\n    onCampaignInfoUpdate?: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void;\n}\n\nconst getParamsByStatus = (campaignStatus?: AuctionCampaignStatus) => {\n    if (isPauseCampaignStatus(campaignStatus)) {\n        return {\n            newStatus: AuctionCampaignStatus.Active,\n            appearance: ButtonAppearance.Filled,\n            kind: ButtonKind.Primary,\n            trlKey: TrlKeys.restore,\n        } as const;\n    }\n\n    return {\n        newStatus: AuctionCampaignStatus.Blocked,\n        appearance: ButtonAppearance.Outlined,\n        kind: undefined,\n        trlKey: TrlKeys.pause,\n    } as const;\n};\n\nconst ChangeStatusButton: TranslatedComponent<ChangeStatusButtonProps> = ({\n    auctionLoading,\n    onCloseModal,\n    onCampaignInfoUpdate,\n    trls,\n}) => {\n    const currentVacancyAuctionCampaign = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign);\n    const bidControl =\n        useSelector(({ auctionData }) => auctionData?.controls[AuctionFieldName.Bid]) || defaultControlInfo;\n\n    const [loading, startLoading, stopLoading] = useOnOffState(false);\n\n    const dispatch = useDispatch();\n\n    const editStatusButtonIsDisabled = !currentVacancyAuctionCampaign;\n    const bidChanged = bidControl?.initialValue !== bidControl?.value;\n\n    if (isRestoreAction(bidChanged, currentVacancyAuctionCampaign?.campaignStatus)) {\n        return null;\n    }\n\n    const { newStatus, appearance, kind, trlKey } = getParamsByStatus(currentVacancyAuctionCampaign?.campaignStatus);\n\n    const handleClickEditStatus = () => {\n        startLoading();\n\n        const callback = (campaign: Partial<CurrentVacancyAuctionCampaign>) => {\n            onCampaignInfoUpdate?.(campaign);\n            if (isPauseCampaignStatus(currentVacancyAuctionCampaign?.campaignStatus)) {\n                dispatch(addNotification(SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY));\n                onCloseModal();\n            }\n        };\n\n        dispatch(changeStatusRequest(currentVacancyAuctionCampaign?.campaignId as number, newStatus, callback)).finally(\n            stopLoading\n        );\n    };\n\n    return (\n        <Button\n            appearance={appearance}\n            kind={kind}\n            disabled={editStatusButtonIsDisabled}\n            loading={(auctionLoading || loading) && <Loading />}\n            onClick={handleClickEditStatus}\n            data-qa=\"auction-change-status\"\n        >\n            {trls[trlKey]}\n        </Button>\n    );\n};\n\nexport default translation(ChangeStatusButton);\n","import { useDispatch } from 'react-redux';\n\nimport auctionModalEditCampaignButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_edit_campaign_button_click';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Loading, { LoadingColor } from 'bloko/blocks/loading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport {\n    getEditCampaignClickAnalyticsParams,\n    isPauseCampaignStatus,\n    isRestoreAction,\n} from 'lux/components/Auction/utils';\nimport { SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY } from 'lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport {\n    AuctionData,\n    AuctionFieldName,\n    AuctionCampaignStatus,\n    defaultControlInfo,\n    CurrentVacancyAuctionCampaign,\n    updateAuctionCampaignInfo,\n} from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport { changeAndRestoreAuctionCampaign, changedClickmeCampaign } from 'lux/requests/price/cart';\n\nconst setAuctionData = makeSetStoreField('auctionData');\n\nconst TrlKeys = {\n    save: 'Save',\n    restoreAndSave: 'auction.edit.restoreAndSave',\n};\n\nconst getButtonTextKey = (bidChanged: boolean, campaignStatus: AuctionCampaignStatus | undefined) =>\n    isRestoreAction(bidChanged, campaignStatus) ? TrlKeys.restoreAndSave : TrlKeys.save;\n\ninterface SaveButtonProps {\n    auctionLoading: boolean;\n    onCloseModal: () => void;\n    onCampaignInfoUpdate?: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void;\n}\n\nconst SaveButton: TranslatedComponent<SaveButtonProps> = ({\n    trls,\n    auctionLoading,\n    onCloseModal,\n    onCampaignInfoUpdate,\n}) => {\n    const bidRatingLoading = useSelector(({ auctionData }) => auctionData?.bidRating.loading);\n    const bidControl =\n        useSelector(({ auctionData }) => auctionData?.controls[AuctionFieldName.Bid]) || defaultControlInfo;\n    const budgetControl =\n        useSelector(({ auctionData }) => auctionData?.controls[AuctionFieldName.Budget]) || defaultControlInfo;\n    const currentVacancyAuctionCampaign = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign);\n    const vacancyId = useSelector(({ auctionData }) => auctionData?.vacancyId || null);\n\n    const [loading, startLoading, stopLoading] = useOnOffState(false);\n\n    const dispatch = useDispatch();\n\n    const bidChanged = bidControl?.initialValue !== bidControl?.value;\n\n    if (!bidChanged && isPauseCampaignStatus(currentVacancyAuctionCampaign?.campaignStatus)) {\n        return null;\n    }\n\n    const disabledButton = !bidChanged || !vacancyId || !currentVacancyAuctionCampaign;\n\n    const loadingButton = auctionLoading || bidRatingLoading || loading;\n\n    const save = () => {\n        if (disabledButton || loadingButton || budgetControl.error) {\n            return;\n        }\n        startLoading();\n\n        const { budget: initialCampaignBudget, campaignId } = currentVacancyAuctionCampaign;\n        const currentBid = Number(bidControl.value);\n\n        const onError = () => {\n            onCloseModal();\n        };\n        if (isRestoreAction(bidChanged, currentVacancyAuctionCampaign.campaignStatus)) {\n            const callback = (campaign: Partial<CurrentVacancyAuctionCampaign>) => {\n                dispatch(updateAuctionCampaignInfo(campaign));\n                onCampaignInfoUpdate?.(campaign);\n                onCloseModal();\n            };\n\n            void dispatch(\n                changeAndRestoreAuctionCampaign(\n                    vacancyId,\n                    campaignId,\n                    currentBid,\n                    initialCampaignBudget,\n                    callback,\n                    onError\n                )\n            ).finally(stopLoading);\n        } else {\n            const callback = (auction: AuctionData) => {\n                dispatch(setAuctionData(auction));\n                onCampaignInfoUpdate?.(auction.currentVacancyAuctionCampaign as CurrentVacancyAuctionCampaign);\n                onCloseModal();\n                dispatch(addNotification(SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY));\n            };\n            void dispatch(\n                changedClickmeCampaign(vacancyId, campaignId, currentBid, initialCampaignBudget, callback, onError)\n            ).finally(stopLoading);\n        }\n\n        auctionModalEditCampaignButtonClick(dispatch(getEditCampaignClickAnalyticsParams('BID')));\n    };\n\n    return (\n        <Button\n            kind={ButtonKind.Primary}\n            disabled={disabledButton}\n            loading={loadingButton && <Loading initial={LoadingColor.White} />}\n            onClick={save}\n            data-qa=\"edit-auction-button\"\n        >\n            {trls[getButtonTextKey(bidChanged, currentVacancyAuctionCampaign?.campaignStatus)]}\n        </Button>\n    );\n};\n\nexport default translation(SaveButton);\n","import { FC } from 'react';\n\nimport Label, { LabelColor, LabelType } from 'lux/components/Label';\nimport { AuctionCampaignStatus } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst LabelsStatusMap = {\n    [AuctionCampaignStatus.Active]: { type: LabelType.Active, color: LabelColor.Green },\n    [AuctionCampaignStatus.Blocked]: { type: LabelType.Pause, color: LabelColor.Gray },\n    [AuctionCampaignStatus.CampaignLowBalance]: { type: LabelType.LimitReached, color: LabelColor.Orange },\n    [AuctionCampaignStatus.AccountLowBalance]: { type: LabelType.NoMoney, color: LabelColor.Orange },\n};\n\ninterface CampaignStatusLabelProps {\n    dataQaPrefix: string;\n}\n\nconst CampaignStatusLabel: FC<CampaignStatusLabelProps> = ({ dataQaPrefix }) => {\n    const campaignStatus = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign?.campaignStatus);\n\n    if (!campaignStatus) {\n        return null;\n    }\n\n    const labelProps = LabelsStatusMap[campaignStatus] || LabelsStatusMap[AuctionCampaignStatus.Active];\n\n    return (\n        <div>\n            <Label\n                type={labelProps.type}\n                color={labelProps.color}\n                dataQa={`${dataQaPrefix}-campaign-status-${campaignStatus}`}\n            />\n        </div>\n    );\n};\n\nexport default CampaignStatusLabel;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"root--vRBFawf5vN9Fc5NCafDA\",\"content\":\"content--lvz5nDNqhnq4Rg0J4vcs\",\"status\":\"status--kcwUq98dhbdG2U8Xtyfu\",\"conversion\":\"conversion--RvQu0UPmxL92lrUcCKAx\"};","import auctionStatisticsAllButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_statistics_all_button_click';\nimport auctionStatisticsConversionButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_statistics_conversion_button_click';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { HoverTip, TipProvider } from 'bloko/blocks/drop';\nimport { TipPlacement } from 'bloko/blocks/drop/Tip';\nimport Icon, { IconColor, IconScale, IconView } from 'bloko/blocks/icon';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport formatDate from 'Modules/formatDate';\nimport CampaignStatusLabel from 'lux/components/Auction/Common/CampaignStatus/CampaignStatusLabel';\nimport FlexibleRow from 'lux/components/FlexibleRow';\nimport translation from 'lux/components/translation';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    status: 'auction.statistics.status',\n    responses: 'auction.statistics.responses',\n    clicks: 'auction.statistics.clicks',\n    conversionToResponse: 'auction.statistics.conversionToResponse',\n    startDate: 'auction.statistics.startDate',\n    tooltipText: 'auction.statistics.tooltipText',\n    all: 'auction.statistics.all',\n};\n\ninterface StatisticsBannerProps {\n    button?: JSX.Element;\n}\n\nconst StatisticsBanner: TranslatedComponent<StatisticsBannerProps> = ({ trls }) => {\n    const vacancyId = useSelectorNonNullable(({ auctionData }) => auctionData.vacancyId || '');\n    const clicks = useSelectorNonNullable(({ auctionData }) => auctionData.auctionStatistics.clicks || '–');\n    const responses = useSelectorNonNullable(({ auctionData }) => auctionData.auctionStatistics.responses || '–');\n    const conversion = useSelectorNonNullable(({ auctionData }) =>\n        auctionData.auctionStatistics.conversion ? `${auctionData.auctionStatistics.conversion}%` : '–'\n    );\n    const startAuctionDate = useSelectorNonNullable(({ auctionData }) =>\n        auctionData.auctionStatistics.startAuctionDate\n            ? formatDate(auctionData.auctionStatistics.startAuctionDate, 'd MMMM yyyy')\n            : '–'\n    );\n    const linkToConversion = `/employer/statistics/vacancy_conversion/?vacancyId=${vacancyId}`;\n\n    return (\n        <div className={styles.root} data-qa=\"auction-statistics-banner\">\n            <div className={styles.content}>\n                <div className={styles.status}>\n                    <FlexibleRow>\n                        <Text strong importance={TextImportance.Primary}>\n                            {trls[TrlKeys.status]}\n                        </Text>\n                        <CampaignStatusLabel dataQaPrefix=\"edit-auction-modal\" />\n                    </FlexibleRow>\n                    <VSpacing base={5} />\n                </div>\n                <VSpacing base={5} />\n                <FlexibleRow>\n                    <Text importance={TextImportance.Primary}>{trls[TrlKeys.clicks]}</Text>\n                    <Text importance={TextImportance.Primary} data-qa=\"auction-statistics-banner-clicks\">\n                        {clicks}\n                    </Text>\n                </FlexibleRow>\n                <VSpacing base={5} />\n                <FlexibleRow>\n                    <Text importance={TextImportance.Primary}>{trls[TrlKeys.responses]}</Text>\n                    <Text importance={TextImportance.Primary} data-qa=\"auction-statistics-banner-responses\">\n                        {responses}\n                    </Text>\n                </FlexibleRow>\n                <VSpacing base={5} />\n                <FlexibleRow>\n                    <div className={styles.conversion}>\n                        <Text importance={TextImportance.Primary}>{trls[TrlKeys.conversionToResponse]}</Text>\n                        <TipProvider>\n                            <HoverTip\n                                onHover={(show) => {\n                                    if (show) {\n                                        auctionStatisticsConversionButtonClick();\n                                    }\n                                }}\n                                placement={TipPlacement.Bottom}\n                                render={() => <Text>{trls[TrlKeys.tooltipText]}</Text>}\n                            >\n                                <Icon initial={IconColor.Gray60} view={IconView.QuestionMark} scale={IconScale.Small} />\n                            </HoverTip>\n                        </TipProvider>\n                    </div>\n\n                    <Text importance={TextImportance.Primary} data-qa=\"auction-statistics-banner-conversion\">\n                        {conversion}\n                    </Text>\n                </FlexibleRow>\n                <VSpacing base={5} />\n                <FlexibleRow>\n                    <Text importance={TextImportance.Primary}>{trls[TrlKeys.startDate]}</Text>\n                    <Text importance={TextImportance.Primary} data-qa=\"auction-statistics-banner-start-date\">\n                        {startAuctionDate}\n                    </Text>\n                </FlexibleRow>\n            </div>\n\n            <div>\n                <BlokoLink\n                    data-qa=\"auction-statistics-banner-link-all-statistics\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    disableVisited\n                    Element={Link}\n                    to={linkToConversion}\n                    onClick={() => auctionStatisticsAllButtonClick({ vacancyId })}\n                >\n                    {trls[TrlKeys.all]}\n                </BlokoLink>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(StatisticsBanner);\n","import { FC } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\n\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst VacancyAndArea: FC = () => {\n    const name = useSelectorNonNullable(({ auctionData }) => auctionData.bidRating.requestParams.name);\n    const areaName = useSelectorNonNullable(({ auctionData }) => auctionData.areaName);\n\n    return (\n        <div>\n            {name},{NON_BREAKING_SPACE}\n            {areaName}\n        </div>\n    );\n};\n\nexport default VacancyAndArea;\n","import { useCallback } from 'react';\n\nimport auctionHowItWorksButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_how_it_works_button_click';\nimport Button, { ButtonAppearance, ButtonKind } from 'bloko/blocks/button';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport BlokoLink, { LinkAppearance } from 'bloko/blocks/link';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport Modal, { ModalContent, ModalFooter, ModalHeader, ModalTitle } from 'bloko/blocks/modal';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AuctionContentStatisticsShown from 'lux/components/Auction/Analytics/AuctionContentStatisticsShown';\nimport BidRating from 'lux/components/Auction/Common/BidRating';\nimport BudgetBanner from 'lux/components/Auction/Common/BudgetBanner';\nimport translation from 'lux/components/translation';\nimport { CampaignCreationStatus, CurrentVacancyAuctionCampaign } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport BidControl from 'lux/components/Auction/Modals/EditAuctionModal/BidControl';\nimport ChangeStatusButton from 'lux/components/Auction/Modals/EditAuctionModal/ChangeStatusButton';\nimport SaveButton from 'lux/components/Auction/Modals/EditAuctionModal/SaveButton';\nimport StatisticsBanner from 'lux/components/Auction/Modals/EditAuctionModal/StatisticsBanner';\nimport VacancyAndArea from 'lux/components/Auction/Modals/EditAuctionModal/VacancyAndArea';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.title',\n    howItWorksTrigger: 'auction.howItWorks.trigger',\n    budgetOpen: 'auction.edit.openBudgetModal',\n};\n\ninterface EditAuctionModalProps {\n    visible: boolean;\n    onClose: () => void;\n    loading: boolean;\n    showHowItWorksModal: () => void;\n    showBudgetModal: () => void;\n    onCampaignInfoUpdate?: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void;\n}\nconst EditAuctionModal: TranslatedComponent<EditAuctionModalProps> = ({\n    onClose,\n    visible,\n    loading,\n    showHowItWorksModal,\n    showBudgetModal,\n    onCampaignInfoUpdate,\n    trls,\n}) => {\n    const campaignCreationStatus = useSelector(({ auctionData }) => auctionData?.campaignCreationStatus);\n    const campaignId = useSelector(({ auctionData }) => String(auctionData?.currentVacancyAuctionCampaign?.campaignId));\n    const campaignStatus = useSelector(({ auctionData }) => auctionData?.currentVacancyAuctionCampaign?.campaignStatus);\n    const vacancyId = useSelector(({ auctionData }) => auctionData?.vacancyId);\n\n    const onHowItWorksClick = useCallback(() => {\n        auctionHowItWorksButtonClick({\n            campaignId,\n            campaignCreationStatus: campaignCreationStatus as CampaignCreationStatus,\n            // Кампания уже создана, черновика нет\n            campaignDraftId: undefined,\n            campaignStatus,\n            vacancyId,\n        });\n        showHowItWorksModal();\n    }, [campaignCreationStatus, campaignId, campaignStatus, showHowItWorksModal, vacancyId]);\n\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <ModalHeader>\n                <ModalTitle>{trls[TrlKeys.title]}</ModalTitle>\n            </ModalHeader>\n            <ModalContent>\n                {loading ? (\n                    <div className={styles.modalLoaderWrapper}>\n                        <Loading scale={LoadingScale.Medium} />\n                    </div>\n                ) : (\n                    <div>\n                        <VSpacing base={3} xs={4} />\n                        <VacancyAndArea />\n                        <VSpacing base={8} />\n                        <div className={styles.modalContentWrapper}>\n                            <div className={styles.modalContentStatistics}>\n                                <StatisticsBanner />\n                            </div>\n\n                            <AuctionContentStatisticsShown>\n                                <BudgetBanner\n                                    button={\n                                        <Button\n                                            appearance={ButtonAppearance.Outlined}\n                                            kind={ButtonKind.Primary}\n                                            onClick={showBudgetModal}\n                                            data-qa=\"open-auction-replenishment\"\n                                        >\n                                            {trls[TrlKeys.budgetOpen]}\n                                        </Button>\n                                    }\n                                />\n                                <VSpacing base={5} />\n                                <BidRating>\n                                    <VSpacing base={5} />\n                                    <BidControl />\n                                </BidRating>\n                            </AuctionContentStatisticsShown>\n                        </div>\n                    </div>\n                )}\n                <VSpacing base={8} xs={0} />\n            </ModalContent>\n            <ModalFooter>\n                <div className={styles.modalFooterInner}>\n                    <BlokoLink appearance={LinkAppearance.Pseudo} onClick={onHowItWorksClick}>\n                        {trls[TrlKeys.howItWorksTrigger]}\n                    </BlokoLink>\n                    <span className={styles.modalActions}>\n                        <ChangeStatusButton\n                            auctionLoading={loading}\n                            onCloseModal={onClose}\n                            onCampaignInfoUpdate={onCampaignInfoUpdate}\n                        />\n                        <HSpacing base={2} />\n                        <SaveButton\n                            auctionLoading={loading}\n                            onCloseModal={onClose}\n                            onCampaignInfoUpdate={onCampaignInfoUpdate}\n                        />\n                    </span>\n                </div>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(EditAuctionModal);\n","import { ReactNode, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport auctionModalOpenButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_open_button_click';\nimport { makeSetStoreField } from '@hh.ru/redux-create-reducer';\n\nimport BudgetReplenishment from 'lux/components/Auction/Modals/BudgetReplenishmentModal';\nimport ConfirmationModal from 'lux/components/Auction/Modals/ConfirmationModal';\nimport AuctionEditingModal from 'lux/components/Auction/Modals/EditAuctionModal';\nimport HowItWorksModal from 'lux/components/Auction/Modals/HowItWorksModal';\nimport { QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH } from 'lux/components/Auction/utils';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport useRunEmployerVacancyAction from 'lux/hooks/useRunEmployerVacancyAction';\nimport { toogleConfirmationModal } from 'lux/models/auctionConfirmationModal';\nimport {\n    AuctionCampaignStatus,\n    AuctionData,\n    CampaignCreationStatus,\n    CurrentVacancyAuctionCampaign,\n} from 'lux/models/auctionData';\nimport fetcher from 'lux/modules/fetcher';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst setAuctionData = makeSetStoreField('auctionData');\n\nconst GET_CURRENT_AUCTION_VACANCY_URL = '/shards/employer/vacancies/get_current_vacancy_auction';\n\ndeclare global {\n    interface FetcherGetApi {\n        [GET_CURRENT_AUCTION_VACANCY_URL]: {\n            queryParams: {\n                vacancyId: string;\n            };\n            response: AuctionData;\n        };\n    }\n}\ninterface UseAuctionEditingModal {\n    (\n        campaignId: string,\n        campaignStatus: AuctionCampaignStatus,\n        campaignCreationStatus: CampaignCreationStatus,\n        vacancyId: string\n    ): {\n        showAuctionEditingModal: () => void;\n        renderAuctionEditingModal: (\n            onCampaignInfoUpdate?: (data: Partial<CurrentVacancyAuctionCampaign>) => void\n        ) => ReactNode;\n    };\n}\n\nconst useAuctionEditingModal: UseAuctionEditingModal = (\n    campaignId,\n    campaignStatus,\n    campaignCreationStatus,\n    vacancyId\n) => {\n    const [auctionModalVisible, showAuctionModal, hideAuctionModal] = useOnOffState(false);\n    const [howItWorkModalVisible, showHowItWorksModal, hideHowItWorksModal] = useOnOffState(false);\n    const [budgetReplenishmentVisible, showBudgetReplenishmentModal, hideBudgetReplenishmentModal] =\n        useOnOffState(false);\n    const [loading, startLoading, finishLoading] = useOnOffState(false);\n\n    const dispatch = useDispatch();\n\n    useRunEmployerVacancyAction(QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH, showBudgetReplenishmentModal);\n\n    const onShowHowItWorksModal = useCallback(() => {\n        hideAuctionModal();\n        showHowItWorksModal();\n    }, [hideAuctionModal, showHowItWorksModal]);\n\n    const onCloseHowItWorksModal = useCallback(() => {\n        hideHowItWorksModal();\n        showAuctionModal();\n    }, [hideHowItWorksModal, showAuctionModal]);\n\n    const onShowBudgetReplenishmentModal = useCallback(() => {\n        hideAuctionModal();\n        showBudgetReplenishmentModal();\n    }, [hideAuctionModal, showBudgetReplenishmentModal]);\n\n    const onCloseBudgetReplenishment = useCallback(() => {\n        hideBudgetReplenishmentModal();\n        showAuctionModal();\n    }, [hideBudgetReplenishmentModal, showAuctionModal]);\n\n    const onConfirmationModalClose = useCallback(() => {\n        dispatch(toogleConfirmationModal(false));\n        showAuctionModal();\n    }, [dispatch, showAuctionModal]);\n\n    const recallAndSetCurrentDataAuctionVacancy = useCallback(async () => {\n        const currentDataAuctionVacancy = await fetcher.get(GET_CURRENT_AUCTION_VACANCY_URL, {\n            params: {\n                vacancyId,\n            },\n        });\n        dispatch(setAuctionData(currentDataAuctionVacancy));\n    }, [dispatch, vacancyId]);\n\n    const showAuctionEditingModal = useCallback(async () => {\n        try {\n            auctionModalOpenButtonClick({ vacancyId, campaignId, campaignStatus, campaignCreationStatus });\n            startLoading();\n            showAuctionModal();\n            await recallAndSetCurrentDataAuctionVacancy();\n        } catch (error) {\n            hideAuctionModal();\n            dispatch(showDefaultError(error));\n        } finally {\n            finishLoading();\n        }\n    }, [\n        campaignCreationStatus,\n        campaignId,\n        campaignStatus,\n        dispatch,\n        finishLoading,\n        hideAuctionModal,\n        recallAndSetCurrentDataAuctionVacancy,\n        showAuctionModal,\n        startLoading,\n        vacancyId,\n    ]);\n\n    const renderAuctionEditingModal = useCallback(\n        (onCampaignInfoUpdate?: (data: Partial<CurrentVacancyAuctionCampaign>) => void) => (\n            <>\n                {auctionModalVisible && (\n                    <AuctionEditingModal\n                        visible={auctionModalVisible}\n                        onClose={hideAuctionModal}\n                        loading={loading}\n                        showHowItWorksModal={onShowHowItWorksModal}\n                        showBudgetModal={onShowBudgetReplenishmentModal}\n                        onCampaignInfoUpdate={onCampaignInfoUpdate}\n                    />\n                )}\n                <HowItWorksModal onClose={onCloseHowItWorksModal} visible={howItWorkModalVisible} />\n                <BudgetReplenishment\n                    visible={budgetReplenishmentVisible}\n                    onCloseBudgetReplenishment={onCloseBudgetReplenishment}\n                    onClose={hideBudgetReplenishmentModal}\n                    onCloseAll={() => {\n                        hideBudgetReplenishmentModal();\n                        hideAuctionModal();\n                    }}\n                    onCampaignInfoUpdate={onCampaignInfoUpdate}\n                />\n                <ConfirmationModal onClose={onConfirmationModalClose} />\n            </>\n        ),\n        [\n            auctionModalVisible,\n            budgetReplenishmentVisible,\n            hideAuctionModal,\n            hideBudgetReplenishmentModal,\n            howItWorkModalVisible,\n            loading,\n            onCloseBudgetReplenishment,\n            onCloseHowItWorksModal,\n            onConfirmationModalClose,\n            onShowBudgetReplenishmentModal,\n            onShowHowItWorksModal,\n        ]\n    );\n\n    return { showAuctionEditingModal, renderAuctionEditingModal };\n};\n\nexport default useAuctionEditingModal;\n","import { useEffect } from 'react';\n\nimport urlParser from 'bloko/common/urlParser';\n\nimport useUrl from 'lux/hooks/useUrl';\n\nexport const RUN_ACTION = 'runAction';\n\nexport default (currentActionName: string, actionCb: () => void): void => {\n    const url = useUrl();\n    const parsedUrl = urlParser(url);\n    const actionName = parsedUrl.params?.[RUN_ACTION];\n\n    useEffect(() => {\n        if (!actionName || !Array.isArray(actionName)) {\n            return;\n        }\n        if (actionName[0] === currentActionName) {\n            const pageHref = new URL(window.location.href);\n            const pageParams = new URLSearchParams(pageHref.search);\n            pageParams.delete(RUN_ACTION);\n            history.replaceState(null, '', `?${String(pageParams)}${location.hash}`);\n\n            actionCb();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n};\n"],"names":["TrlKeys","AuctionFieldError","Error","error","trls","currency","useSelectorNonNullable","auctionData","minBid","controls","AuctionFieldName","minValue","minBudget","minReplenishment","minValueErrorsMap","isValidKey","size","TextSize","formatToReactComponent","inCents","translation","validateAuctionControls","bid","budget","errors","undefined","Number","PriceProductAuction","loading","budgetControlInfo","product","productInfo","data","hideClickmeBalance","base","className","styles","H2","lite","FlexibleRow","Element","scale","LoadingScale","FormatMoney","price","ErrorWrapper","controlInfo","showError","FormError","show","AuctionControls","bidControlInfo","dispatch","useDispatch","vacancyCreateDraftId","useSelector","vacancyId","isBranchAEnabled","useExperiment","isBranchBEnabled","isBranchCEnabled","isExperimentEnabled","validateAndChangeAuctionControls","useCallback","activeFieldName","updateAuctionControlInfo","fieldName","value","Boolean","budgetPlusOrMinusClick","setProductInfoLoading","bidError","bidShowError","bidValue","budgetError","budgetShowError","budgetValue","onBidBlur","onBidChange","onBidFocus","onBudgetBlur","onBudgetChange","debouncedAuctionControlsEdit","getInputChangeAnalyticsParams","onBudgetFocus","onBudgetPlusOrMinusClick","renderBidError","renderBudgetError","recommendedBudget","HintOrErrorWrapper","ElementShownAnchor","fn","auctionRecommendedBudgetHintElementShown","draftId","initialBid","initialValue","initialBudget","importance","TextImportance","NON_BREAKING_SPACE","appearance","LinkAppearance","onClick","auctionRecommendedBudgetHintButtonClick","String","CurrencyType","AuctionCreationModal","hideModal","showHowItWorksModal","visible","onCampaignCreated","defaultControlInfo","isCampaignDraft","campaignCreationStatus","CampaignCreationStatus","draftPurchaseUrl","campaignDraft","purchaseUrl","productLoading","campaignDraftId","maxBidAmongSimilarVacancies","bidRating","useAvailableMoney","availableMoney","disabled","setDisabledOn","setDisabledOff","useOnOffState","submitIsDisabled","createCampaign","currentBid","currentBudget","createCartWithClickmeAuctionCampaignDraft","httmFromLabel","source","createClickmeAuctionCampaignWithoutPurchase","setCreatedAuctionData","finally","auctionModalCreateCampaignButtonClick","bidInCents","budgetInCents","availableMoneyInCents","onHowItWorksClick","auctionHowItWorksButtonClick","campaignId","campaignStatus","onClose","ModalHeader","ModalTitle","Label","type","LabelType","color","LabelColor","Content","ModalContent","alignItems","FlexibleRowAlignItems","kind","ButtonKind","ButtonAppearance","Link","to","xs","AuctionContentShown","BidRating","ModalFooter","FormSpacer","initial","LoadingColor","setAuctionData","makeSetStoreField","auctionModalVisible","showAuctionModal","hideAuctionModal","howItWorkModalVisible","hideHowItWorksModal","startLoading","finishLoading","onShowHowItWorksModal","onCloseHowItWorksModal","showAuctionCreationModal","async","auctionModalOpenButtonClick","fetcher","params","CAMPAIGN_CREATION_ENABLED_STATUSES","addNotification","AUCTION_ERROR","errorType","AuctionErrorType","UXFeedback","showDefaultError","renderAuctionCreationModal","HowItWorksModal","AuctionContentBudgetReplenishShown","children","currentVacancyAuctionCampaign","auctionStatistics","hhtmSourceLabel","useHhtmSourceLabelFromRunActionQs","auctionContentElementShown","competingCampaignBids","JSON","stringify","competingCampaignIds","clicks","response","responses","ratingStatus","bidFrequencyStatus","one","some","many","AuctionCampaignStatus","BudgetBanner","button","currentCampaign","accountBalance","bidRemainder","balance","Math","floor","getClickRemainder","campaignBalance","strong","groupSeparator","NARROW_NON_BREAKING_SPACE","render","amount","currencyNode","REGULAR_SPACE","zero","Replenishment","props","useFetchProduct","replenishment","MoneyInput","AZN","BYR","EUR","KZT","RUR","UAH","USD","UZS","GEL","KGS","getPlaceholder","formattedMin","Strings","format","CHIPS_VALUES","Control","replenishmentControl","updateReplenishment","validateAuctionReplenishment","newBudget","handleChipClick","onChange","placeholder","postfix","Currency","invalid","maxLength","name","onBlur","onFocus","min","map","LinkChip","Price","replenishmentControlInfo","SubmitButton","onCloseAll","onCampaignInfoUpdate","initialCampaignBudget","createCartWithChangedClickmeCampaign","callback","auction","toogleConfirmationModal","setConfirmationModalData","onError","changedClickmeCampaign","auctionModalEditCampaignButtonClick","getEditCampaignClickAnalyticsParams","BudgetReplenishmentModal","onCloseBudgetReplenishment","AvailableMoney","ConfirmationModal","auctionConfirmationModal","AuctionContentStatisticsShown","BidControl","bidControl","budgetControl","updateValue","Bid","onPlusOrMinusClick","minusDataQa","plusDataQa","ChangeStatusButton","auctionLoading","onCloseModal","stopLoading","editStatusButtonIsDisabled","bidChanged","isRestoreAction","newStatus","trlKey","isPauseCampaignStatus","then","updateAuctionStatus","DEFAULT_ERROR","changeStatusRequest","campaign","SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY","getButtonTextKey","SaveButton","bidRatingLoading","disabledButton","loadingButton","updateAuctionCampaignInfo","changeAndRestoreAuctionCampaign","LabelsStatusMap","CampaignStatusLabel","dataQaPrefix","labelProps","dataQa","StatisticsBanner","conversion","startAuctionDate","formatDate","linkToConversion","TipProvider","HoverTip","onHover","auctionStatisticsConversionButtonClick","placement","TipPlacement","IconColor","view","IconView","IconScale","target","rel","disableVisited","auctionStatisticsAllButtonClick","VacancyAndArea","requestParams","areaName","EditAuctionModal","showBudgetModal","budgetReplenishmentVisible","showBudgetReplenishmentModal","hideBudgetReplenishmentModal","useRunEmployerVacancyAction","QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH","onShowBudgetReplenishmentModal","onConfirmationModalClose","recallAndSetCurrentDataAuctionVacancy","currentDataAuctionVacancy","showAuctionEditingModal","renderAuctionEditingModal","RUN_ACTION","currentActionName","actionCb","url","useUrl","actionName","urlParser","useEffect","Array","isArray","pageHref","URL","window","location","href","pageParams","URLSearchParams","search","delete","history","replaceState","hash"],"sourceRoot":""}