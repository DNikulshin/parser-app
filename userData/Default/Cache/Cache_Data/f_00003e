{"version":3,"file":"magritte.2aea51ae8ca4842b055a.js","mappings":"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","sources":["xhh/./.yarn/__virtual__/@hh.ru-magritte-common-func-utils-virtual-2072e7bc4d/0/cache/@hh.ru-magritte-common-func-utils-npm-1.3.2-967bf58b5f-dd3df58878.zip/node_modules/@hh.ru/src/requestAnimation.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-func-utils-virtual-2072e7bc4d/0/cache/@hh.ru-magritte-common-func-utils-npm-1.3.2-967bf58b5f-dd3df58878.zip/node_modules/@hh.ru/src/throttle.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-func-utils-virtual-2072e7bc4d/0/cache/@hh.ru-magritte-common-func-utils-npm-1.3.2-967bf58b5f-dd3df58878.zip/node_modules/@hh.ru/src/debounce.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-func-utils-virtual-2072e7bc4d/0/cache/@hh.ru-magritte-common-func-utils-npm-1.3.2-967bf58b5f-dd3df58878.zip/node_modules/@hh.ru/src/useDebounce.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-keyboard-virtual-5bac682f05/0/cache/@hh.ru-magritte-common-keyboard-npm-1.2.4-6208c95996-33d89f1260.zip/node_modules/@hh.ru/src/keys.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-keyboard-virtual-5bac682f05/0/cache/@hh.ru-magritte-common-keyboard-npm-1.2.4-6208c95996-33d89f1260.zip/node_modules/@hh.ru/src/match.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-keyboard-virtual-5bac682f05/0/cache/@hh.ru-magritte-common-keyboard-npm-1.2.4-6208c95996-33d89f1260.zip/node_modules/@hh.ru/src/useEscapeToClose.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-resize-virtual-d7501f4b0e/0/cache/@hh.ru-magritte-common-resize-npm-0.1.10-58e1071e1c-fd0c94f3b3.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-use-disabled-virtual-fefe71ea79/0/cache/@hh.ru-magritte-common-use-disabled-npm-1.0.5-91f0b472b9-2d2df8ad77.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-use-multiple-refs-virtual-e2946ec6a7/0/cache/@hh.ru-magritte-common-use-multiple-refs-npm-1.1.1-95a8c8d71d-134de65535.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-use-swipe-virtual-8b3511829b/0/cache/@hh.ru-magritte-common-use-swipe-npm-2.3.2-9c7a246012-b011caa537.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-use-swipe-virtual-8b3511829b/0/cache/@hh.ru-magritte-common-use-swipe-npm-2.3.2-9c7a246012-b011caa537.zip/node_modules/@hh.ru/src/useSwipe.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-keyboard-virtual-5bac682f05/0/cache/@hh.ru-magritte-common-keyboard-npm-1.2.4-6208c95996-33d89f1260.zip/node_modules/@hh.ru/src/useArrowNavigation.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-drop-base-virtual-cef5d462f1/0/cache/@hh.ru-magritte-internal-drop-base-npm-4.0.3-34757003aa-bdb4a41114.zip/node_modules/@hh.ru/src/DropBase.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-mouse-virtual-252fd61228/0/cache/@hh.ru-magritte-common-mouse-npm-1.1.3-0c773ac0e1-91f793bbbe.zip/node_modules/@hh.ru/src/useCloseByClickOutside.ts","xhh/./.yarn/cache/@hh.ru-magritte-common-metrics-npm-2.0.1-eb32dd3c71-ca05000116.zip/node_modules/@hh.ru/src/metrics.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-drop-base-virtual-cef5d462f1/0/cache/@hh.ru-magritte-internal-drop-base-npm-4.0.3-34757003aa-bdb4a41114.zip/node_modules/@hh.ru/src/calculateRect.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-drop-base-virtual-cef5d462f1/0/cache/@hh.ru-magritte-internal-drop-base-npm-4.0.3-34757003aa-bdb4a41114.zip/node_modules/@hh.ru/src/useRenderParams.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-field-hint-virtual-cee722bda1/0/cache/@hh.ru-magritte-internal-field-hint-npm-1.2.7-3bf65094f9-d1a0e50229.zip/node_modules/@hh.ru/src/FieldHint.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-field-hint-virtual-cee722bda1/0/cache/@hh.ru-magritte-internal-field-hint-npm-1.2.7-3bf65094f9-d1a0e50229.zip/node_modules/@hh.ru/src/useFieldHintAnimation.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-scrollable-container-virtual-5feccffaf7/0/cache/@hh.ru-magritte-internal-scrollable-container-npm-3.0.10-03a5c5a57f-b4bca356ec.zip/node_modules/@hh.ru/src/utils.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-scrollable-container-virtual-5feccffaf7/0/cache/@hh.ru-magritte-internal-scrollable-container-npm-3.0.10-03a5c5a57f-b4bca356ec.zip/node_modules/@hh.ru/src/useScrollContainer.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-internal-scrollable-container-virtual-5feccffaf7/0/cache/@hh.ru-magritte-internal-scrollable-container-npm-3.0.10-03a5c5a57f-b4bca356ec.zip/node_modules/@hh.ru/src/ScrollableContainer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-accordion-virtual-b0aebaeb1b/0/cache/@hh.ru-magritte-ui-accordion-npm-2.2.2-eab6000734-839f867f24.zip/node_modules/@hh.ru/src/Collapsible.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-accordion-virtual-b0aebaeb1b/0/cache/@hh.ru-magritte-ui-accordion-npm-2.2.2-eab6000734-839f867f24.zip/node_modules/@hh.ru/src/Accordion.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-875d91f184/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/ClickInterceptor.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-875d91f184/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-divider-virtual-ab5289e049/0/cache/@hh.ru-magritte-ui-divider-npm-1.1.12-cd31c1844e-7d21119f1d.zip/node_modules/@hh.ru/src/Divider.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-c62111d1ab/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-875d91f184/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/BottomSheet.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-1df2de95b4/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/DropContainer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-1df2de95b4/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/PureChildren.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-1df2de95b4/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/Drop.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-action-list-virtual-5b0dc079e0/0/cache/@hh.ru-magritte-ui-action-list-npm-5.0.0-2d65ef5c0d-b1b17bbce0.zip/node_modules/@hh.ru/src/ActionList.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-action-virtual-047ae21833/0/cache/@hh.ru-magritte-ui-action-npm-3.1.9-9db944b778-0674fab0a5.zip/node_modules/@hh.ru/src/Action.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-action-virtual-047ae21833/0/cache/@hh.ru-magritte-ui-action-npm-3.1.9-9db944b778-0674fab0a5.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-banner-virtual-f71bf33b7d/0/cache/@hh.ru-magritte-ui-banner-npm-2.2.28-055c99eb27-87623ef1cf.zip/node_modules/@hh.ru/src/Banner.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-39a25bf8ba/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/ClickInterceptor.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-39a25bf8ba/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/BottomSheet.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-bottom-sheet-virtual-39a25bf8ba/0/cache/@hh.ru-magritte-ui-bottom-sheet-npm-2.6.36-694d96e48f-d6dffd5766.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breadcrumbs-virtual-2afb50f98c/0/cache/@hh.ru-magritte-ui-breadcrumbs-npm-3.0.0-b22682549c-ea17ea1640.zip/node_modules/@hh.ru/src/BreadcrumbsDivider.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breadcrumbs-virtual-2afb50f98c/0/cache/@hh.ru-magritte-ui-breadcrumbs-npm-3.0.0-b22682549c-ea17ea1640.zip/node_modules/@hh.ru/src/BreadcrumbsDynamicLink.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breadcrumbs-virtual-2afb50f98c/0/cache/@hh.ru-magritte-ui-breadcrumbs-npm-3.0.0-b22682549c-ea17ea1640.zip/node_modules/@hh.ru/src/useDynamicDisplayContent.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breadcrumbs-virtual-2afb50f98c/0/cache/@hh.ru-magritte-ui-breadcrumbs-npm-3.0.0-b22682549c-ea17ea1640.zip/node_modules/@hh.ru/src/Breadcrumbs.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breadcrumbs-virtual-2afb50f98c/0/cache/@hh.ru-magritte-ui-breadcrumbs-npm-3.0.0-b22682549c-ea17ea1640.zip/node_modules/@hh.ru/src/BreadcrumbsItem.tsx","xhh/./.yarn/cache/@hh.ru-magritte-common-cookies-npm-0.1.9-2eddb46041-85bbbadc82.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breakpoint-virtual-17e986df83/0/cache/@hh.ru-magritte-ui-breakpoint-npm-3.1.0-780c9a26fc-13eaed7680.zip/node_modules/@hh.ru/src/BreakpointProvider.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-breakpoint-virtual-17e986df83/0/cache/@hh.ru-magritte-ui-breakpoint-npm-3.1.0-780c9a26fc-13eaed7680.zip/node_modules/@hh.ru/src/useBreakpoint.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-button-virtual-552bf26952/0/cache/@hh.ru-magritte-ui-button-npm-2.6.9-cbf25b8af3-345cc16940.zip/node_modules/@hh.ru/src/Button.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-button-virtual-552bf26952/0/cache/@hh.ru-magritte-ui-button-npm-2.6.9-cbf25b8af3-345cc16940.zip/node_modules/@hh.ru/src/aria.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-button-virtual-552bf26952/0/cache/@hh.ru-magritte-ui-button-npm-2.6.9-cbf25b8af3-345cc16940.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-mouse-virtual-252fd61228/0/cache/@hh.ru-magritte-common-mouse-npm-1.1.3-0c773ac0e1-91f793bbbe.zip/node_modules/@hh.ru/src/isEventFromInteractiveComponent.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-card-virtual-231a3e400f/0/cache/@hh.ru-magritte-ui-card-npm-4.4.7-52ed6ad511-a7792006cb.zip/node_modules/@hh.ru/src/Card.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-card-virtual-231a3e400f/0/cache/@hh.ru-magritte-ui-card-npm-4.4.7-52ed6ad511-a7792006cb.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-cell-virtual-270cd45c4d/0/cache/@hh.ru-magritte-ui-cell-npm-1.9.10-18c4efd641-b1898946d6.zip/node_modules/@hh.ru/src/CellItem.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-icon-virtual-38b6fec39e/0/cache/@hh.ru-magritte-ui-icon-npm-5.4.6-8436690780-a0b7c2a906.zip/node_modules/@hh.ru/src/iconTypes.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-icon-virtual-38b6fec39e/0/cache/@hh.ru-magritte-ui-icon-npm-5.4.6-8436690780-a0b7c2a906.zip/node_modules/@hh.ru/src/IconDynamic.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-cell-virtual-270cd45c4d/0/cache/@hh.ru-magritte-ui-cell-npm-1.9.10-18c4efd641-b1898946d6.zip/node_modules/@hh.ru/src/Cell.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-checkbox-radio-virtual-be459c5277/0/cache/@hh.ru-magritte-ui-checkbox-radio-npm-1.5.2-337998a6f3-c7448ea5e6.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-cell-virtual-270cd45c4d/0/cache/@hh.ru-magritte-ui-cell-npm-1.9.10-18c4efd641-b1898946d6.zip/node_modules/@hh.ru/src/CellText.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-checkable-card-virtual-d216282579/0/cache/@hh.ru-magritte-ui-checkable-card-npm-2.3.8-f6161d1562-04de6f17fa.zip/node_modules/@hh.ru/src/CheckableCard.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-checkable-card-virtual-d216282579/0/cache/@hh.ru-magritte-ui-checkable-card-npm-2.3.8-f6161d1562-04de6f17fa.zip/node_modules/@hh.ru/src/CheckableCardElement.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-checkbox-radio-virtual-be459c5277/0/cache/@hh.ru-magritte-ui-checkbox-radio-npm-1.5.2-337998a6f3-c7448ea5e6.zip/node_modules/@hh.ru/src/Checkbox.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-checkbox-radio-virtual-be459c5277/0/cache/@hh.ru-magritte-ui-checkbox-radio-npm-1.5.2-337998a6f3-c7448ea5e6.zip/node_modules/@hh.ru/src/Radio.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-chips-virtual-d88f02ec54/0/cache/@hh.ru-magritte-ui-chips-npm-2.3.12-2f2f7bfef3-debdc06426.zip/node_modules/@hh.ru/src/ChipContent.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-chips-virtual-d88f02ec54/0/cache/@hh.ru-magritte-ui-chips-npm-2.3.12-2f2f7bfef3-debdc06426.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-chips-virtual-d88f02ec54/0/cache/@hh.ru-magritte-ui-chips-npm-2.3.12-2f2f7bfef3-debdc06426.zip/node_modules/@hh.ru/src/CustomChip.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-counter-virtual-fe5a578a4e/0/cache/@hh.ru-magritte-ui-counter-npm-2.0.12-45bdea4512-52421950b5.zip/node_modules/@hh.ru/src/Counter.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-counter-virtual-fe5a578a4e/0/cache/@hh.ru-magritte-ui-counter-npm-2.0.12-45bdea4512-52421950b5.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-divider-virtual-9549fffd0b/0/cache/@hh.ru-magritte-ui-divider-npm-1.1.12-cd31c1844e-7d21119f1d.zip/node_modules/@hh.ru/src/Divider.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-153ab5b76d/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/DropContainer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-153ab5b76d/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/PureChildren.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-drop-virtual-153ab5b76d/0/cache/@hh.ru-magritte-ui-drop-npm-4.0.0-d1c55c5541-1555482f3a.zip/node_modules/@hh.ru/src/Drop.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-form-label-virtual-48fa6429d1/0/cache/@hh.ru-magritte-ui-form-label-npm-3.0.0-a2db2c1d68-fe2815a7ab.zip/node_modules/@hh.ru/src/FormLabel.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-grid-virtual-10d8d850cc/0/cache/@hh.ru-magritte-ui-grid-npm-2.0.8-79c63d040b-cbde284310.zip/node_modules/@hh.ru/src/Column.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-grid-virtual-10d8d850cc/0/cache/@hh.ru-magritte-ui-grid-npm-2.0.8-79c63d040b-cbde284310.zip/node_modules/@hh.ru/src/Highlighter.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-grid-virtual-10d8d850cc/0/cache/@hh.ru-magritte-ui-grid-npm-2.0.8-79c63d040b-cbde284310.zip/node_modules/@hh.ru/src/Layout.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-grid-virtual-10d8d850cc/0/cache/@hh.ru-magritte-ui-grid-npm-2.0.8-79c63d040b-cbde284310.zip/node_modules/@hh.ru/src/Row.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-icon-virtual-38b6fec39e/0/cache/@hh.ru-magritte-ui-icon-npm-5.4.6-8436690780-a0b7c2a906.zip/node_modules/@hh.ru/src/hoc.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/BaseInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/useFocus.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/Input.tsx","xhh/./.yarn/cache/@hh.ru-magritte-common-number-formatter-npm-1.0.2-549e67406c-edbe2be986.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/numberFormatter.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/NumberInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/PasswordInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/SearchInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/UncontrolledInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/UncontrolledPasswordInput.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/useInputAriaProps.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-input-virtual-cea76ca618/0/cache/@hh.ru-magritte-ui-input-npm-2.10.10-e26452ba10-c51279b4fe.zip/node_modules/@hh.ru/src/useUncontrolledInput.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-layer-virtual-58795d48d4/0/cache/@hh.ru-magritte-ui-layer-npm-2.0.1-04ea2d41f8-af7c776c82.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-layer-virtual-58795d48d4/0/cache/@hh.ru-magritte-ui-layer-npm-2.0.1-04ea2d41f8-af7c776c82.zip/node_modules/@hh.ru/src/Layer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-link-virtual-6ee93b0b5d/0/cache/@hh.ru-magritte-ui-link-npm-2.2.9-1b064c8ebd-cdfda24d60.zip/node_modules/@hh.ru/src/VerticallyCenteredIcon.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-link-virtual-6ee93b0b5d/0/cache/@hh.ru-magritte-ui-link-npm-2.2.9-1b064c8ebd-cdfda24d60.zip/node_modules/@hh.ru/src/Link.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-link-virtual-6ee93b0b5d/0/cache/@hh.ru-magritte-ui-link-npm-2.2.9-1b064c8ebd-cdfda24d60.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-loader-virtual-5dbece27ac/0/cache/@hh.ru-magritte-ui-loader-npm-1.2.16-e536e5ede9-9413b12eb4.zip/node_modules/@hh.ru/src/Loader.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-modal-virtual-f8d37f7ae9/0/cache/@hh.ru-magritte-ui-modal-npm-2.0.0-bc77335eb7-4617c31f0c.zip/node_modules/@hh.ru/src/ModalContent.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-modal-virtual-f8d37f7ae9/0/cache/@hh.ru-magritte-ui-modal-npm-2.0.0-bc77335eb7-4617c31f0c.zip/node_modules/@hh.ru/src/ModalFooter.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-modal-virtual-f8d37f7ae9/0/cache/@hh.ru-magritte-ui-modal-npm-2.0.0-bc77335eb7-4617c31f0c.zip/node_modules/@hh.ru/src/ModalHeader.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-dom-storage-virtual-f995dd750c/0/cache/@hh.ru-magritte-common-dom-storage-npm-1.0.4-0dd1f8c821-77dd9a85e1.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-modal-virtual-f8d37f7ae9/0/cache/@hh.ru-magritte-ui-modal-npm-2.0.0-bc77335eb7-4617c31f0c.zip/node_modules/@hh.ru/src/useModalOrder.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-modal-virtual-f8d37f7ae9/0/cache/@hh.ru-magritte-ui-modal-npm-2.0.0-bc77335eb7-4617c31f0c.zip/node_modules/@hh.ru/src/Modal.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-is-server-env-virtual-b5ac8dd6df/0/cache/@hh.ru-magritte-common-is-server-env-npm-1.0.3-01bfc02cbf-0f3bdaaed4.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-ee2e8ffc6f/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/NavigationBarItem.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-ee2e8ffc6f/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/NavigationBarItems.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-progress-bar-virtual-c47fa9e71e/0/cache/@hh.ru-magritte-ui-progress-bar-npm-2.2.12-c4d2502189-b13f804c40.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-progress-bar-virtual-c47fa9e71e/0/cache/@hh.ru-magritte-ui-progress-bar-npm-2.2.12-c4d2502189-b13f804c40.zip/node_modules/@hh.ru/src/SegmentedProgressBar.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-progress-bar-virtual-c47fa9e71e/0/cache/@hh.ru-magritte-ui-progress-bar-npm-2.2.12-c4d2502189-b13f804c40.zip/node_modules/@hh.ru/src/SingleProgressBar.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-progress-bar-virtual-c47fa9e71e/0/cache/@hh.ru-magritte-ui-progress-bar-npm-2.2.12-c4d2502189-b13f804c40.zip/node_modules/@hh.ru/src/ProgressBar.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-ee2e8ffc6f/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/NavigationBarRenderer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-ee2e8ffc6f/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/NavigationBar.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-navigation-bar-virtual-ee2e8ffc6f/0/cache/@hh.ru-magritte-ui-navigation-bar-npm-3.0.0-eacf9f8a0b-99c6aff91b.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/cache/@hh.ru-magritte-common-fuzzy-search-npm-1.0.3-ea8c6aff65-197d7df263.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/SelectActivator.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/SelectOption.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/SelectForDesktopDevice.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/SelectForMobileDevice.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/useSelectState.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-select-virtual-f10fc705b7/0/cache/@hh.ru-magritte-ui-select-npm-3.0.0-f447efb54a-0f01a841a1.zip/node_modules/@hh.ru/src/Select.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/Snackbar.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/useAriaSnackbar.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-timer-virtual-64a26c57cc/0/cache/@hh.ru-magritte-ui-timer-npm-1.2.12-57801079ca-66410a300c.zip/node_modules/@hh.ru/src/useTimer.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-timer-virtual-64a26c57cc/0/cache/@hh.ru-magritte-ui-timer-npm-1.2.12-57801079ca-66410a300c.zip/node_modules/@hh.ru/src/Timer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/SnackbarRenderer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/SnackbarContextProvider.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/context.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-snackbar-virtual-35d6385f1a/0/cache/@hh.ru-magritte-ui-snackbar-npm-2.0.0-3ab85392ba-0f47629702.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-spacing-virtual-0c868e1d4e/0/cache/@hh.ru-magritte-ui-spacing-npm-2.0.8-9b3bb30c74-8e2140bd95.zip/node_modules/@hh.ru/src/HSpacing.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-spacing-virtual-0c868e1d4e/0/cache/@hh.ru-magritte-ui-spacing-npm-2.0.8-9b3bb30c74-8e2140bd95.zip/node_modules/@hh.ru/src/HSpacingContainer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-spacing-virtual-0c868e1d4e/0/cache/@hh.ru-magritte-ui-spacing-npm-2.0.8-9b3bb30c74-8e2140bd95.zip/node_modules/@hh.ru/src/VSpacing.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-spacing-virtual-0c868e1d4e/0/cache/@hh.ru-magritte-ui-spacing-npm-2.0.8-9b3bb30c74-8e2140bd95.zip/node_modules/@hh.ru/src/VSpacingContainer.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-spacing-virtual-0c868e1d4e/0/cache/@hh.ru-magritte-ui-spacing-npm-2.0.8-9b3bb30c74-8e2140bd95.zip/node_modules/@hh.ru/src/utils.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tabs-virtual-723f3cec39/0/cache/@hh.ru-magritte-ui-tabs-npm-3.0.13-d9cce53109-b357401ea3.zip/node_modules/@hh.ru/src/Tab.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tabs-virtual-723f3cec39/0/cache/@hh.ru-magritte-ui-tabs-npm-3.0.13-d9cce53109-b357401ea3.zip/node_modules/@hh.ru/src/useTabs.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tabs-virtual-723f3cec39/0/cache/@hh.ru-magritte-ui-tabs-npm-3.0.13-d9cce53109-b357401ea3.zip/node_modules/@hh.ru/src/Tabs.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tag-virtual-b23ad70848/0/cache/@hh.ru-magritte-ui-tag-npm-1.2.12-f5a817a7a7-3a13a63bfe.zip/node_modules/@hh.ru/src/Tag.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tag-virtual-b23ad70848/0/cache/@hh.ru-magritte-ui-tag-npm-1.2.12-f5a817a7a7-3a13a63bfe.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-textarea-virtual-1d6e1eed90/0/cache/@hh.ru-magritte-ui-textarea-npm-1.7.11-81ab2ade6a-f60312ae7f.zip/node_modules/@hh.ru/src/Textarea.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-textarea-virtual-1d6e1eed90/0/cache/@hh.ru-magritte-ui-textarea-npm-1.7.11-81ab2ade6a-f60312ae7f.zip/node_modules/@hh.ru/src/useFocus.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-textarea-virtual-1d6e1eed90/0/cache/@hh.ru-magritte-ui-textarea-npm-1.7.11-81ab2ade6a-f60312ae7f.zip/node_modules/@hh.ru/src/UncontrolledTextarea.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-title-virtual-178a595c27/0/cache/@hh.ru-magritte-ui-title-npm-2.0.0-f017005760-7365db00fa.zip/node_modules/@hh.ru/src/Title.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tooltip-virtual-96729c18bc/0/cache/@hh.ru-magritte-ui-tooltip-npm-4.0.0-2e9f27d235-99ad1c1bdb.zip/node_modules/@hh.ru/src/Tooltip.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tooltip-virtual-96729c18bc/0/cache/@hh.ru-magritte-ui-tooltip-npm-4.0.0-2e9f27d235-99ad1c1bdb.zip/node_modules/@hh.ru/src/TooltipBase.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-tooltip-virtual-96729c18bc/0/cache/@hh.ru-magritte-ui-tooltip-npm-4.0.0-2e9f27d235-99ad1c1bdb.zip/node_modules/@hh.ru/src/TooltipHover.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-typography-virtual-193e0fe69a/0/cache/@hh.ru-magritte-ui-typography-npm-2.2.14-5e26d7e736-8deffac086.zip/node_modules/@hh.ru/src/BaseText.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-typography-virtual-193e0fe69a/0/cache/@hh.ru-magritte-ui-typography-npm-2.2.14-5e26d7e736-8deffac086.zip/node_modules/@hh.ru/src/Text.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-typography-virtual-193e0fe69a/0/cache/@hh.ru-magritte-ui-typography-npm-2.2.14-5e26d7e736-8deffac086.zip/node_modules/@hh.ru/src/TextDynamic.tsx","xhh/./.yarn/__virtual__/@hh.ru-magritte-ui-typography-virtual-193e0fe69a/0/cache/@hh.ru-magritte-ui-typography-npm-2.2.14-5e26d7e736-8deffac086.zip/node_modules/@hh.ru/src/types.ts","xhh/./.yarn/cache/@hh.ru-magritte-common-focus-visible-npm-0.1.2-30af1c9336-e6252f3f3b.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/__virtual__/@hh.ru-magritte-common-dom-storage-virtual-2faa5b229d/0/cache/@hh.ru-magritte-common-dom-storage-npm-1.0.4-0dd1f8c821-77dd9a85e1.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/cache/@hh.ru-magritte-common-modal-helper-npm-1.2.3-faff0383db-18a2a57f38.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/cache/@hh.ru-magritte-common-text-selection-npm-0.1.2-38dc790fd7-6982884a5b.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/cache/@hh.ru-magritte-internal-layer-name-npm-2.0.1-6629124d84-ee5466489c.zip/node_modules/@hh.ru/src/index.ts","xhh/./.yarn/cache/@hh.ru-magritte-ui-theme-provider-npm-1.1.11-6c1684be67-75a830ada8.zip/node_modules/@hh.ru/src/ThemeProvider.tsx"],"sourcesContent":["import { ParamsWithoutTime, ScheduledAction } from '@hh.ru/magritte-common-func-utils/types';\n\nexport const requestAnimation: ScheduledAction = (func) => {\n    let frame: ReturnType<typeof requestAnimationFrame> | null = null;\n    let that: unknown;\n    let _args: ParamsWithoutTime<typeof func> | null = null;\n\n    const scheduled = function (this: unknown, ...args: ParamsWithoutTime<typeof func>) {\n        if (frame !== null) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            that = this;\n            _args = args;\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        that = this;\n        _args = args;\n\n        frame = requestAnimationFrame((time) => {\n            frame = null;\n            if (_args !== null) {\n                func.apply(that, [time, ..._args]);\n            }\n        });\n    };\n\n    scheduled.cancel = () => {\n        if (frame !== null) {\n            cancelAnimationFrame(frame);\n            frame = null;\n            _args = null;\n        }\n    };\n\n    return scheduled;\n};\n","import { RateLimitedAction } from '@hh.ru/magritte-common-func-utils/types';\n\nexport const throttle: RateLimitedAction = (func, waitMS) => {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n    let that: unknown;\n    let _args: Parameters<typeof func> | null = null;\n\n    const throttled = function (this: unknown, ...args: Parameters<typeof func>) {\n        if (timeout !== null) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            that = this;\n            _args = args;\n            return;\n        }\n\n        func.apply(this, args);\n\n        timeout = setTimeout(() => {\n            timeout = null;\n            if (_args !== null) {\n                func.apply(that, _args);\n            }\n        }, waitMS);\n    };\n\n    throttled.cancel = () => {\n        if (timeout !== null) {\n            clearTimeout(timeout);\n            timeout = null;\n            _args = null;\n        }\n    };\n\n    return throttled;\n};\n","import { RateLimitedAction } from '@hh.ru/magritte-common-func-utils/types';\n\nexport const debounce: RateLimitedAction = (callback, waitMS) => {\n    let timeoutId: null | ReturnType<typeof setTimeout> = null;\n\n    const debounced = function (this: unknown, ...args: Parameters<typeof callback>) {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n\n        timeoutId = setTimeout(() => {\n            callback?.apply(this, args);\n        }, waitMS);\n    };\n\n    debounced.cancel = () => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            timeoutId = null;\n        }\n    };\n\n    return debounced;\n};\n","import { useMemo } from 'react';\n\nimport { debounce } from '@hh.ru/magritte-common-func-utils/debounce';\nimport { RateLimitedAction } from '@hh.ru/magritte-common-func-utils/types';\n\nexport const useDebounce: RateLimitedAction = (callback, waitMS) => {\n    return useMemo(() => debounce(callback, waitMS), [waitMS, callback]);\n};\n","export interface Key {\n    key: string;\n    code: string;\n}\n\nexport const Escape: Key = {\n    key: 'Escape',\n    code: 'Esc',\n};\n\nexport const PageUp = {\n    key: 'PageUp',\n    code: 'Numpad9',\n};\n\nexport const PageDown = {\n    key: 'PageDown',\n    code: 'Numpad3',\n};\n\nexport const Enter = {\n    key: 'Enter',\n    code: 'Enter',\n};\n\nexport const Space: Key = {\n    key: ' ',\n    code: 'Space',\n};\n\nexport const Home: Key = {\n    key: 'Home',\n    code: 'Home',\n};\n\nexport const End: Key = {\n    key: 'End',\n    code: 'End',\n};\n\nexport const ArrowRight: Key = {\n    key: 'ArrowRight',\n    code: 'ArrowRight',\n};\n\nexport const ArrowLeft: Key = {\n    key: 'ArrowLeft',\n    code: 'ArrowLeft',\n};\n\nexport const ArrowUp: Key = {\n    key: 'ArrowUp',\n    code: 'ArrowUp',\n};\n\nexport const ArrowDown: Key = {\n    key: 'ArrowDown',\n    code: 'ArrowDown',\n};\n\nexport const Tab: Key = {\n    key: 'Tab',\n    code: 'Tab',\n};\n","import { type Key } from '@hh.ru/magritte-common-keyboard/keys';\n\nexport const keyboardMatch = (event: KeyboardEvent, { key, code }: Key): boolean => {\n    return event.key === key || event.code === code;\n};\n\nexport const keyboardMatches = (event: KeyboardEvent, keysToMatch: Key[]): boolean => {\n    for (let i = 0; i < keysToMatch.length; i++) {\n        if (keyboardMatch(event, keysToMatch[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { useEffect, type RefObject } from 'react';\n\nimport { Escape } from '@hh.ru/magritte-common-keyboard/keys';\nimport { keyboardMatches } from '@hh.ru/magritte-common-keyboard/match';\n\nexport const useEscapeToClose = (ref: RefObject<HTMLElement>, callback: (event: KeyboardEvent) => void): void => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n        const elementContainsFocus = !!(\n            document.activeElement === ref.current || ref.current?.contains?.(document.activeElement)\n        );\n\n        if (keyboardMatches(event, [Escape]) && elementContainsFocus) {\n            callback(event);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    });\n};\n","import { useEffect, useRef } from 'react';\n\nconst useResize = (handler: (event: UIEvent) => void): void => {\n    const handlerRef = useRef(handler);\n    handlerRef.current = handler;\n\n    useEffect(() => {\n        const resizeHandler = (event: UIEvent) => handlerRef.current(event);\n        window.addEventListener('resize', resizeHandler);\n        return () => {\n            window.removeEventListener('resize', resizeHandler);\n        };\n    }, []);\n};\n\nexport { useResize };\n","import { createContext, useContext } from 'react';\n\nexport const DisabledContext = createContext(false);\n\nexport const useDisabled = (): boolean => useContext(DisabledContext);\n","import { MutableRefObject, RefObject, useCallback, useRef, RefCallback } from 'react';\n\nexport const useMultipleRefs = <T extends HTMLElement>(\n    ...refs: Array<MutableRefObject<T | null | undefined> | RefObject<T> | RefCallback<T> | null | undefined>\n): RefCallback<T> => {\n    const passedRefs = useRef(refs);\n    passedRefs.current = refs;\n\n    const refMultiplexer = useCallback<RefCallback<T>>(\n        (ref) => {\n            passedRefs.current.forEach((r) => {\n                if (typeof r === 'function') {\n                    r(ref);\n                    return;\n                }\n\n                r && ((r as MutableRefObject<T | null>).current = ref);\n            });\n        },\n        [passedRefs]\n    );\n\n    return refMultiplexer;\n};\n","import { DOMAttributes, RefObject } from 'react';\n\nexport enum SwipeAxis {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical',\n}\n\nexport interface SwipeEvent {\n    /** Координата последнего касания по оси x относительно вьюпорта */\n    x: number;\n    /** Координата последнего касания по оси y относительно вьюпорта */\n    y: number;\n    /** Расстояние по оси axis между начальной и последней точками свайпа */\n    distance: number;\n    preventDefault: VoidFunction;\n    projectionDistance?: number;\n    velocity: number;\n}\n\nexport interface SwipeEventHandler {\n    (event: SwipeEvent): void;\n}\n\nexport interface SwipeThreshold {\n    /** Минимальная координата по оси axis относительно вьюпорта, при достижении которой мы регистрируем свайп */\n    min?: number;\n    /** Максимальная координата по оси axis относительно вьюпорта, при достижении которой мы регистрируем свайп */\n    max?: number;\n    /** Величина свайпа в пикселях меньше которой все значения будут считаться свайпом */\n    deltaMin?: number;\n    /** Величина свайпа в пикселях больше которой все значения будут считаться свайпом */\n    deltaMax?: number;\n}\n\nexport interface UseSwipeParams {\n    axis: SwipeAxis;\n    thresholdRef: RefObject<SwipeThreshold>;\n    onSwipeStart?: SwipeEventHandler;\n    onSwipeMove?: SwipeEventHandler;\n    onSwipeEnd?: SwipeEventHandler;\n    onSwipeCancel?: SwipeEventHandler;\n}\n\nexport interface UseSwipeType {\n    (params: UseSwipeParams): Pick<\n        DOMAttributes<HTMLElement>,\n        'onTouchStart' | 'onTouchMove' | 'onTouchEnd' | 'onTouchCancel'\n    >;\n}\n","import { TouchEvent, useCallback, useRef } from 'react';\n\nimport { requestAnimation } from '@hh.ru/magritte-common-func-utils';\nimport {\n    SwipeAxis,\n    SwipeEvent,\n    SwipeEventHandler,\n    SwipeThreshold,\n    UseSwipeType,\n} from '@hh.ru/magritte-common-use-swipe/types';\n\nconst DECELERATION_RATE = 0.998;\nconst VELOCITY_SMOOTHING_FACTOR = 0.75;\nexport const MAIN_AXIS_THRESHOLD = 5;\n\ntype SwipeState = {\n    x: number;\n    y: number;\n    distance: number;\n    distanceX: number;\n    distanceY: number;\n    actualAxis: SwipeAxis | null;\n    time: DOMHighResTimeStamp;\n    velocity: number;\n    startPos: { x: number; y: number };\n};\n\nconst checkSwipeThreshold = (\n    axis: SwipeAxis | null,\n    startPos: { x: number; y: number },\n    value: number,\n    prevValue: number,\n    threshold: SwipeThreshold\n) => {\n    const startPosition = axis === SwipeAxis.Horizontal ? startPos.x : startPos.y;\n    return (\n        (axis &&\n            !Number.isNaN(threshold.deltaMin) &&\n            value - startPosition < (threshold.deltaMin as number) &&\n            value < prevValue) ||\n        (axis &&\n            !Number.isNaN(threshold.deltaMax) &&\n            value - startPosition > (threshold.deltaMax as number) &&\n            value > prevValue) ||\n        (!Number.isNaN(threshold.min) && value < (threshold.min as number) && value < prevValue) ||\n        (!Number.isNaN(threshold.max) && value > (threshold.max as number) && value > prevValue)\n    );\n};\n\nconst handleSwipeEvent = (\n    event: Omit<SwipeEvent, 'preventDefault'>,\n    eventHandler?: SwipeEventHandler,\n    defaultCallback?: VoidFunction\n) => {\n    let _default = true;\n    eventHandler?.({ ...event, preventDefault: () => (_default = false) });\n    _default && defaultCallback?.();\n};\n\n/**\n * Определяет, что пользователь сделал свайп или предположительно хотел сделать свайп за счет инерции\n * до координат thresholdRef.current.min/thresholdRef.current.max по оси axis относительно вьюпорта.\n * Возвращает обработчики touch-ивентов для DOM-элемента, свайп по которому нужно регистрировать.\n */\nexport const useSwipe: UseSwipeType = ({\n    axis,\n    thresholdRef,\n    onSwipeStart,\n    onSwipeMove,\n    onSwipeEnd,\n    onSwipeCancel,\n}) => {\n    const stateRef = useRef<SwipeState | null>(null);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleSwipeStart = useCallback(\n        requestAnimation((time, touchEvent: TouchEvent) => {\n            if (touchEvent.changedTouches.length !== 1) {\n                return;\n            }\n\n            const { pageX: x, pageY: y } = touchEvent.changedTouches[0];\n            const swipeEvent = { x, y, distance: 0, velocity: 0 };\n\n            handleSwipeEvent(swipeEvent, onSwipeStart, () => {\n                stateRef.current = {\n                    ...swipeEvent,\n                    time,\n                    distanceX: 0,\n                    distanceY: 0,\n                    actualAxis: null,\n                    startPos: { x, y },\n                };\n            });\n        }),\n        [onSwipeStart]\n    );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleSwipeMove = useCallback(\n        requestAnimation((time, touchEvent: TouchEvent) => {\n            if (touchEvent.changedTouches.length !== 1 || !stateRef.current || !thresholdRef.current) {\n                return;\n            }\n\n            const { pageX: x, pageY: y } = touchEvent.changedTouches[0];\n            const prevState = stateRef.current;\n\n            let actualAxis = stateRef.current.actualAxis;\n\n            const _distanceX =\n                !stateRef.current.actualAxis || actualAxis === SwipeAxis.Horizontal ? x - prevState.x : 0;\n            const _distanceY = !stateRef.current.actualAxis || actualAxis === SwipeAxis.Vertical ? y - prevState.y : 0;\n\n            const distanceX = stateRef.current.distanceX + _distanceX;\n            const distanceY = stateRef.current.distanceY + _distanceY;\n\n            if (Math.abs(distanceY) > MAIN_AXIS_THRESHOLD) {\n                actualAxis = SwipeAxis.Vertical;\n            } else if (Math.abs(distanceX) > MAIN_AXIS_THRESHOLD) {\n                actualAxis = SwipeAxis.Horizontal;\n            }\n\n            let distance = 0;\n            let _distance = 0;\n            if (axis === SwipeAxis.Horizontal && actualAxis !== SwipeAxis.Vertical) {\n                _distance = _distanceX;\n                distance = distanceX;\n            } else if (axis === SwipeAxis.Vertical && actualAxis !== SwipeAxis.Horizontal) {\n                _distance = _distanceY;\n                distance = distanceY;\n            }\n\n            // скорость (velocity) свайпа, расчитанная по двум последним точкам, подвержена влиянию случайного шума,\n            // поэтому мы применяем https://en.wikipedia.org/wiki/Exponential_smoothing для сглаживания\n            const _velocity = (_distance * 1000) / (time - prevState.time);\n            const velocity =\n                prevState.velocity * VELOCITY_SMOOTHING_FACTOR + _velocity * (1 - VELOCITY_SMOOTHING_FACTOR);\n\n            const swipeEvent = { x, y, distance, velocity };\n\n            handleSwipeEvent(swipeEvent, onSwipeMove, () => {\n                stateRef.current = {\n                    ...swipeEvent,\n                    time,\n                    distanceX,\n                    distanceY,\n                    actualAxis,\n                    startPos: prevState.startPos,\n                };\n            });\n        }),\n        [axis, onSwipeMove]\n    );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleSwipeEnd = useCallback(\n        requestAnimation((_, touchEvent: TouchEvent) => {\n            if (touchEvent.changedTouches.length !== 1 || !stateRef.current || !thresholdRef.current) {\n                return;\n            }\n\n            // если координата касания не достигла thresholdRef.current.min/thresholdRef.current.max,\n            // считаем проекцию (projection) — предполагаемую координату, до которой должен дойти свайп по инерции\n            // на основе последней координаты касания, скорости (velocity) свайпа и замедления инерции (DECELERATION_RATE)\n            //\n            // регистрируем свайп, если проекция достигла thresholdRef.current.min/thresholdRef.current.max\n            //\n            // формула расчета проекции взята из презентации Apple https://developer.apple.com/videos/play/wwdc2018/803/\n            // подробнее https://medium.com/ios-os-x-development/gestures-in-fluid-interfaces-on-intent-and-projection-36d158db7395\n            const lastCoordinate = axis === SwipeAxis.Horizontal ? stateRef.current.x : stateRef.current.y;\n            const delta = ((stateRef.current.velocity / 1000) * DECELERATION_RATE) / (1 - DECELERATION_RATE);\n            const projection = lastCoordinate + delta;\n            const projectionDistance = stateRef.current?.distance + delta;\n            const swipeEvent = {\n                x: stateRef.current.x,\n                y: stateRef.current.y,\n                distance: stateRef.current.distance,\n                projectionDistance,\n                velocity: stateRef.current.velocity,\n            };\n\n            if (\n                checkSwipeThreshold(\n                    stateRef.current.actualAxis,\n                    stateRef.current.startPos,\n                    projection,\n                    lastCoordinate,\n                    thresholdRef.current\n                )\n            ) {\n                handleSwipeEvent(swipeEvent, onSwipeEnd, () => (stateRef.current = null));\n            } else {\n                handleSwipeEvent(swipeEvent, onSwipeCancel, () => (stateRef.current = null));\n            }\n        }),\n        [axis, onSwipeCancel, onSwipeEnd]\n    );\n\n    return {\n        onTouchStart: handleSwipeStart,\n        onTouchMove: handleSwipeMove,\n        onTouchEnd: handleSwipeEnd,\n        onTouchCancel: handleSwipeEnd,\n    };\n};\n","import { useEffect } from 'react';\n\nimport {\n    keyboardKeys,\n    keyboardMatch,\n    type ArrowDirection,\n    type UseArrowNavigationArgs,\n} from '@hh.ru/magritte-common-keyboard';\n\n/**\n * Находит ближайший элемент в указанном направлении относительно целевого элемента.\n * @param {Element} targetElement Целевой элемент, относительно которого нужно найти ближайший элемент.\n * @param {ArrowDirection} side Направление (up, down, left, right), в котором нужно найти ближайший элемент.\n * @param {HTMLElement[]} searchElements Массив элементов, среди которых будет осуществляться поиск ближайшего элемента.\n * @returns {HTMLElement|null} Ближайший элемент (из массива searchElements) в указанном направлении относительно целевого элемента.\n */\nexport const findNearestElement = (\n    targetElement: Element,\n    side: ArrowDirection,\n    searchElements: HTMLElement[]\n): HTMLElement | null => {\n    const targetRect = targetElement.getBoundingClientRect();\n    const targetCenterX = Math.round(targetRect.left + targetRect.width / 2);\n    const targetCenterY = Math.round(targetRect.top + targetRect.height / 2);\n\n    let nearestElement: HTMLElement | null = null;\n    let minDistance = Infinity;\n\n    searchElements.forEach((element) => {\n        if (targetElement === element) {\n            return;\n        }\n\n        const elementRect = element.getBoundingClientRect();\n        const elementCenterX = Math.round(elementRect.left + elementRect.width / 2);\n        const elementCenterY = Math.round(elementRect.top + elementRect.height / 2);\n\n        if (\n            (side === 'up' && (elementCenterY >= targetCenterY || elementRect.bottom > targetRect.top)) ||\n            (side === 'down' && (elementCenterY <= targetCenterY || elementRect.top < targetRect.bottom)) ||\n            (side === 'left' && (elementCenterX >= targetCenterX || elementRect.right > targetRect.left)) ||\n            (side === 'right' && (elementCenterX <= targetCenterX || elementRect.left < targetRect.right))\n        ) {\n            return;\n        }\n\n        let distanceX = Math.abs(targetCenterX - elementCenterX);\n        let distanceY = Math.abs(targetCenterY - elementCenterY);\n\n        /**\n         * Добавляем коэффициенты для соответствующих осей,\n         * чтобы сделать элементы в направлении, соответствующем нажатой arrow-клавише, более приоритетными\n         */\n        if (side === 'up' || side === 'down') {\n            distanceY *= 0.5;\n        } else {\n            distanceX *= 0.5;\n        }\n\n        const distance = Math.hypot(distanceX, distanceY);\n\n        if (distance < minDistance) {\n            minDistance = distance;\n            nearestElement = element;\n        }\n    });\n\n    return nearestElement;\n};\n\nconst getSide = (event: KeyboardEvent): ArrowDirection | null => {\n    if (keyboardMatch(event, keyboardKeys.ArrowUp)) {\n        return 'up';\n    }\n    if (keyboardMatch(event, keyboardKeys.ArrowRight)) {\n        return 'right';\n    }\n    if (keyboardMatch(event, keyboardKeys.ArrowDown)) {\n        return 'down';\n    }\n    if (keyboardMatch(event, keyboardKeys.ArrowLeft)) {\n        return 'left';\n    }\n    return null;\n};\n\nexport const focusableSelector =\n    'button:not([disabled]), a[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\"-1\"])';\n\nconst handleArrowKeyNavigation = (event: KeyboardEvent, container?: HTMLElement | null) => {\n    const side = getSide(event);\n\n    if (\n        !side ||\n        !container?.contains(document.activeElement) ||\n        document.activeElement === container ||\n        !document?.activeElement?.matches(focusableSelector) ||\n        /** Не переключаем фокус, если активный focus-элемент это текстовое поле, т.к. в текстовых полях стрелками должен перемещаться курсор по набранному тексту: */\n        document.activeElement?.matches(\n            'textarea, input:not([type=\"checkbox\"]):not([type=\"radio\"]), [contenteditable=\"true\"]'\n        )\n    ) {\n        return;\n    }\n\n    const focusableElements = [...container.querySelectorAll<HTMLElement>(focusableSelector)];\n\n    const nearestElement = findNearestElement(document.activeElement, side, focusableElements);\n\n    if (nearestElement) {\n        /** Предотвращаем скролл страницы, если переключаем фокус стрелками */\n        event.preventDefault();\n        nearestElement.focus();\n    }\n};\n\n/**\n * Хук включает focus-навигацию по DOM-элементам с использованием клавиш-стрелок: ArrowUp, (↑) ArrowRight, (→) ArrowDown, (↓) ArrowLeft (←).\n * Находит ближайший фокусабельный элемент относительно сфокусированного элемента в направлении, соответствующем нажатой клавише-стрелке, и переключает фокус на него.\n */\nexport const useArrowNavigation = ({ enabled = true, container }: UseArrowNavigationArgs): void => {\n    useEffect(() => {\n        const listener = (event: KeyboardEvent) => handleArrowKeyNavigation(event, container);\n\n        if (enabled && container) {\n            document.addEventListener('keydown', listener);\n        }\n\n        return () => {\n            document.removeEventListener('keydown', listener);\n        };\n    }, [container, enabled]);\n};\n","import { useEffect, ReactElement, useRef, useState, forwardRef, ForwardedRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport {\n    useEscapeToClose,\n    useArrowNavigation,\n    keyboardMatch,\n    keyboardKeys,\n    focusableSelector,\n} from '@hh.ru/magritte-common-keyboard';\nimport { useCloseByClickOutside } from '@hh.ru/magritte-common-mouse';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport type {\n    DropBaseProps,\n    DropBaseHorizontalPosition,\n    DropBaseVerticalPosition,\n    DropBaseHorizontalPositionWithoutCenter,\n    DropBaseVerticalPositionWithoutCenter,\n} from '@hh.ru/magritte-internal-drop-base/types';\nimport { useRenderParams } from '@hh.ru/magritte-internal-drop-base/useRenderParams';\n\nimport styles from './styles.less';\n\nconst DropBaseComponent = <\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n>(\n    {\n        visible,\n        children,\n        arrowGuardDistance,\n        activatorRef,\n        host,\n        alignment,\n        direction,\n        preferredViewport,\n        onClose,\n        autoFocusWhenOpened = false,\n        closeByClickOutside = true,\n        animationTimeout,\n        animationClassNames,\n        guardDistance = 8,\n        role,\n        occupyAllAvailableViewportHeight = false,\n        forcePosition = false,\n        widthEqualToActivator = false,\n        arrowNavigation = false,\n        ...props\n    }: DropBaseProps<T>,\n    ref: ForwardedRef<HTMLElement>\n): ReactElement => {\n    const dropNodeRef = useRef<HTMLDivElement>(null);\n    const dropNodeRefMulti = useMultipleRefs(ref, dropNodeRef);\n    const dropScrollableContainerRef = useRef(null);\n    const [renderPortal, setRenderPortal] = useState(false);\n    const isVisibleDropDown = !!(renderPortal && visible);\n    const [lockClickOutside, setLockClickOutside] = useState(true);\n    const dropElement = dropNodeRef.current;\n\n    useEffect(() => {\n        setRenderPortal(true);\n    }, []);\n\n    const { metrics, position } = useRenderParams({\n        alignment,\n        direction,\n        activatorRef,\n        dropElementRef: dropNodeRef,\n        host,\n        arrowGuardDistance,\n        preferredViewport,\n        visible: isVisibleDropDown,\n        guardDistance,\n        occupyAllAvailableViewportHeight,\n        dropScrollableContainerRef,\n        forcePosition,\n        widthEqualToActivator,\n    });\n\n    useEscapeToClose(dropNodeRef, () => {\n        onClose?.();\n    });\n\n    useArrowNavigation({\n        enabled: isVisibleDropDown && arrowNavigation,\n        container: dropElement,\n    });\n\n    useEffect(() => {\n        const keydownListener = (event: KeyboardEvent) => {\n            if (\n                document.activeElement &&\n                document.activeElement === dropElement &&\n                keyboardMatch(event, keyboardKeys.ArrowDown)\n            ) {\n                /** Предотвращаем скролл страницы, если переключаем фокус стрелкой */\n                event.preventDefault();\n                dropElement.querySelector<HTMLElement>(focusableSelector)?.focus();\n            }\n        };\n\n        if (arrowNavigation && isVisibleDropDown) {\n            document.addEventListener('keydown', keydownListener);\n        }\n\n        return () => {\n            document.removeEventListener('keydown', keydownListener);\n        };\n    }, [arrowNavigation, dropElement, isVisibleDropDown]);\n\n    useCloseByClickOutside(\n        dropNodeRef,\n        () => {\n            if (isVisibleDropDown && !lockClickOutside && activatorRef.current !== document.activeElement) {\n                onClose?.();\n            }\n        },\n        closeByClickOutside\n    );\n\n    useEffect(() => {\n        if (!isVisibleDropDown) {\n            setLockClickOutside(true);\n        }\n    }, [isVisibleDropDown, setLockClickOutside]);\n\n    useEffect(() => {\n        if (autoFocusWhenOpened && isVisibleDropDown && !lockClickOutside) {\n            dropNodeRef.current?.focus();\n        }\n    }, [autoFocusWhenOpened, isVisibleDropDown, lockClickOutside]);\n\n    return (\n        <>\n            {renderPortal &&\n                createPortal(\n                    <CSSTransition\n                        in={visible}\n                        onEntered={() => {\n                            setLockClickOutside(false);\n                        }}\n                        timeout={animationTimeout}\n                        classNames={animationClassNames}\n                        unmountOnExit\n                    >\n                        <div\n                            {...props}\n                            data-qa=\"drop-base\"\n                            tabIndex={autoFocusWhenOpened ? 0 : -1}\n                            className={styles.dropBase}\n                            ref={dropNodeRefMulti}\n                            style={{\n                                top: `${metrics.top}px`,\n                                left: `${metrics.left}px`,\n                            }}\n                            role={role}\n                        >\n                            {children(position, {\n                                metrics,\n                                dropScrollableContainerRef,\n                            })}\n                        </div>\n                    </CSSTransition>,\n                    host?.current ?? document.body\n                )}\n        </>\n    );\n};\n\nconst DropBase = forwardRef(DropBaseComponent) as (<\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n>(\n    props: DropBaseProps<T> & { ref?: ForwardedRef<HTMLElement> }\n) => ReactElement) & { displayName: string };\n\nDropBase.displayName = 'DropBase';\n\nexport { DropBase };\n","import { type RefObject, useCallback, useEffect, useRef } from 'react';\n\nexport const useCloseByClickOutside = (\n    ref: RefObject<HTMLElement>,\n    callback: (event: MouseEvent) => void,\n    closeByClickOutsideEnabled: boolean\n): void => {\n    const refCallback = useRef(callback);\n\n    const handleClick = useCallback(\n        (event: MouseEvent) => {\n            if (!ref.current?.contains?.(event.target as Node)) {\n                refCallback.current(event);\n            }\n        },\n        [refCallback, ref]\n    );\n\n    useEffect(() => {\n        refCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        if (closeByClickOutsideEnabled) {\n            document.addEventListener('click', handleClick);\n        }\n\n        return () => {\n            if (closeByClickOutsideEnabled) {\n                document.removeEventListener('click', handleClick);\n            }\n        };\n    }, [handleClick, closeByClickOutsideEnabled]);\n};\n","const RELATIVE_POSITION = ['relative', 'sticky'];\n\nexport const findFirstRelativeElement = (element: Element): Element => {\n    if (element === document.body || RELATIVE_POSITION.includes(getComputedStyle(element).position)) {\n        return element;\n    }\n\n    const parentElement = element.parentElement;\n\n    if (parentElement === null) {\n        return element;\n    }\n\n    return findFirstRelativeElement(parentElement);\n};\n\nconst getMetrics = (element: Element): DOMRect => {\n    return element.getBoundingClientRect();\n};\n\nexport interface OffsetMetrics {\n    offsetTop: number;\n    offsetLeft: number;\n}\n\nexport const getOffsetElement = (element: Element, hostElement: Element): OffsetMetrics => {\n    const elementMetrics = getMetrics(element);\n    const hostMetrics = getMetrics(hostElement);\n\n    return { offsetTop: elementMetrics.top - hostMetrics.top, offsetLeft: elementMetrics.left - hostMetrics.left };\n};\n","import {\n    BaseAlignPosition,\n    GetEageCoincidingWithDirectionArgs,\n    GetEdgeOppositeDirectionArgs,\n    GetPointToCenterActivator,\n    CalculateRect,\n    CalculateRectType,\n    CalculateDropHeightAvailableViewportArgs,\n    CalculateDropHeightAvailableViewportResult,\n    DropBaseHorizontalPosition,\n    DropBaseVerticalPosition,\n} from '@hh.ru/magritte-internal-drop-base/types';\n\nexport const VIEWPORT_GUARD_DISTANCE = 16;\n\nconst getPointToCenterActivator = ({\n    point,\n    offsetPoint,\n    contentSize,\n    activatorSize,\n}: GetPointToCenterActivator): number => point + offsetPoint - contentSize / 2 + activatorSize / 2;\n\n/* Позволяет получить метрики drop, позицию относительно viewport\n * для случая, когда дроп может занять всю доступную высоту viewport\n * */\nconst calculateDropHeightAvailableViewport: {\n    top: CalculateDropHeightAvailableViewportArgs;\n    bottom: CalculateDropHeightAvailableViewportArgs;\n} = {\n    top: ({\n        leftPositionForDrop,\n        topPositionForViewport,\n        preferredViewportMetrics,\n        topPositionForDrop,\n        dropMetrics,\n    }) => {\n        const top =\n            -(topPositionForViewport - preferredViewportMetrics.pageTop - topPositionForDrop) + VIEWPORT_GUARD_DISTANCE;\n        const _height =\n            topPositionForViewport + dropMetrics.height - preferredViewportMetrics.pageTop - VIEWPORT_GUARD_DISTANCE;\n        const height = _height < dropMetrics.height ? dropMetrics.height : _height;\n        const _topPositionForViewport = topPositionForViewport + dropMetrics.height - height;\n\n        return {\n            top,\n            height,\n            left: leftPositionForDrop,\n            topPositionForViewport: _topPositionForViewport,\n        };\n    },\n\n    bottom: ({\n        leftPositionForDrop,\n        topPositionForViewport,\n        preferredViewportMetrics,\n        topPositionForDrop,\n        dropMetrics,\n    }) => {\n        const _height =\n            preferredViewportMetrics.height +\n            preferredViewportMetrics.pageTop -\n            topPositionForViewport -\n            VIEWPORT_GUARD_DISTANCE;\n        const height = _height < dropMetrics.height ? dropMetrics.height : _height;\n\n        return {\n            top: topPositionForDrop,\n            left: leftPositionForDrop,\n            height,\n            topPositionForViewport,\n        };\n    },\n};\n\n/**\n * Позволяет получить метрику top или left дропдауна и viewport или\n * контейнера в котором хотим рисовать дропдаун. Считать нужно\n * для top или left в зависимости от того противоположна ли метрика\n * к direction. Т.е мы считает метрику top только\n * для горизонтального направления, a left для вертикального\n * */\nconst getEdgeOppositeDirection = ({\n    activatorPosition,\n    viewportShift,\n    activatorOffset,\n    shift,\n    isNegativeArrowShift,\n    arrowGuardDistance,\n    activatorSize,\n}: GetEdgeOppositeDirectionArgs): [number, number] => {\n    let shiftArrow = 0;\n\n    if (arrowGuardDistance && activatorSize / 2 < arrowGuardDistance) {\n        shiftArrow = arrowGuardDistance - activatorSize / 2;\n    }\n\n    if (isNegativeArrowShift) {\n        shiftArrow = -shiftArrow;\n    }\n\n    const positionForDrop = shift + activatorOffset + shiftArrow;\n    const positionForViewport = shift + activatorPosition + viewportShift + shiftArrow;\n\n    return [positionForDrop, positionForViewport];\n};\n\n/**\n * Позволяет получить метрику top или left дропдауна и viewport\n * или контейнера в котором хотим рисовать дропдаун. Считать нужно для top\n * или left в зависимости от того совпдает ли метрика с direction.\n * Т.е мы считает метрику top только для вертикального направления, a left\n * для горизонтального направления\n * */\nconst getEageCoincidingWithDirection = ({\n    activatorPosition,\n    activatorSize,\n    dropSize,\n    viewportShift,\n    isNegativePosition,\n    activatorOffset,\n    guardDistance,\n}: GetEageCoincidingWithDirectionArgs): [number, number] => {\n    let positionForViewport = 0;\n    let positionForDrop = 0;\n\n    if (isNegativePosition) {\n        positionForDrop = activatorOffset - guardDistance - dropSize;\n        positionForViewport = activatorPosition + viewportShift - guardDistance - dropSize;\n    } else {\n        positionForDrop = activatorOffset + activatorSize + guardDistance;\n        positionForViewport = activatorPosition + viewportShift + activatorSize + guardDistance;\n    }\n\n    return [positionForDrop, positionForViewport];\n};\n\n/**\n * API для расчета метрик дропдауна и viewport | контейнера в котором\n * хотим рисовать дропдаун. Cчитает метрики в случае\n * когда position = Horizontal.\n * Т.е. дропдаун показываем cлева или справа от активатора.\n * Предоставляем три публичных метода для расположения относительно края активатора:\n * top - выравнивание по верхнему краю\n * bottom - выравнивание по нижнему краю\n * center - выравнивание по центру\n * */\nconst calculateRectForHorizontalPosition: {\n    top: CalculateRect<DropBaseHorizontalPosition['direction']>;\n    bottom: CalculateRect<DropBaseHorizontalPosition['direction']>;\n    center: CalculateRect<DropBaseHorizontalPosition['direction']>;\n    _baseAlign: BaseAlignPosition<DropBaseHorizontalPosition['direction']>;\n} = {\n    top({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        preferredViewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        arrowGuardDistance,\n        occupyAllAvailableViewportHeight,\n    }) {\n        const result = this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            isNegativeArrowShift: true,\n            activatorOffset,\n            shift: 0,\n            arrowGuardDistance,\n            guardDistance,\n            preferredViewportMetrics,\n        });\n\n        if (occupyAllAvailableViewportHeight) {\n            const metrics = calculateDropHeightAvailableViewport.bottom({\n                preferredViewportMetrics,\n                topPositionForViewport: result.top,\n                topPositionForDrop: result.dropMetrics.top,\n                leftPositionForDrop: result.dropMetrics.left,\n                dropMetrics,\n            });\n\n            return {\n                ...result,\n                top: metrics.topPositionForViewport,\n                bottom: metrics.topPositionForViewport + metrics.height,\n                dropMetrics: {\n                    top: metrics.top,\n                    left: metrics.left,\n                    height: metrics.height,\n                },\n            };\n        }\n\n        return result;\n    },\n    bottom({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        arrowGuardDistance,\n        occupyAllAvailableViewportHeight,\n        preferredViewportMetrics,\n    }) {\n        const shift = dropMetrics.height - activatorMetrics.height;\n        const result = this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            activatorOffset,\n            shift: -shift,\n            arrowGuardDistance,\n            guardDistance,\n            preferredViewportMetrics,\n        });\n\n        if (occupyAllAvailableViewportHeight) {\n            const metrics = calculateDropHeightAvailableViewport.top({\n                preferredViewportMetrics,\n                topPositionForViewport: result.top,\n                topPositionForDrop: result.dropMetrics.top,\n                leftPositionForDrop: result.dropMetrics.left,\n                dropMetrics,\n            });\n\n            return {\n                top: metrics.topPositionForViewport,\n                left: result.left,\n                bottom: activatorMetrics.bottom,\n                right: result.right,\n                viewportMetrics,\n                dropMetrics: {\n                    top: metrics.top,\n                    left: metrics.left,\n                    height: metrics.height,\n                },\n            };\n        }\n\n        return result;\n    },\n    center({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        preferredViewportMetrics,\n    }) {\n        const pointToCenterActivator = getPointToCenterActivator({\n            point: 0,\n            offsetPoint: 0,\n            contentSize: dropMetrics.height,\n            activatorSize: activatorMetrics.height,\n        });\n\n        return this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            activatorOffset,\n            shift: pointToCenterActivator,\n            guardDistance,\n            preferredViewportMetrics,\n        });\n    },\n    _baseAlign({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        shift,\n        arrowGuardDistance,\n        isNegativeArrowShift = false,\n        guardDistance,\n    }) {\n        const [leftPositionForDrop, leftPositionForViewport] = getEageCoincidingWithDirection({\n            activatorPosition: activatorMetrics.left,\n            activatorSize: activatorMetrics.width,\n            dropSize: dropMetrics.width,\n            viewportShift: viewportMetrics.pageLeft,\n            isNegativePosition: direction === 'left',\n            activatorOffset: activatorOffset.offsetLeft,\n            guardDistance,\n        });\n\n        const [topPositionForDrop, topPositionForViewport] = getEdgeOppositeDirection({\n            activatorPosition: activatorMetrics.top,\n            viewportShift: viewportMetrics.pageTop,\n            activatorOffset: activatorOffset.offsetTop,\n            isNegativeArrowShift,\n            shift,\n            arrowGuardDistance,\n            activatorSize: activatorMetrics.height,\n        });\n\n        return {\n            top: topPositionForViewport,\n            left: leftPositionForViewport,\n            bottom: topPositionForViewport + dropMetrics.height,\n            right: leftPositionForViewport + dropMetrics.width,\n            dropMetrics: {\n                top: topPositionForDrop,\n                left: leftPositionForDrop,\n                height: 'auto',\n            },\n            viewportMetrics,\n        };\n    },\n};\n\n/**\n * API для расчета метрик дропдауна и viewport | контейнера в котором\n * хотим рисовать дропдаун. Cчитает метрики в случае - когда direction = VerticalPosition.\n * Т.е. дропдаун показываем снизу или сверху активатора.\n * Предоставляем три публичных метода для расположения относительно края активатора:\n * left - выравнивание по левому краю\n * right - выравнивание по правому краю\n * center - выравнивание по центру\n * */\nexport const calculateRectForVerticalPosition: {\n    left: CalculateRect<DropBaseVerticalPosition['direction']>;\n    right: CalculateRect<DropBaseVerticalPosition['direction']>;\n    center: CalculateRect<DropBaseVerticalPosition['direction']>;\n    _baseAlign: BaseAlignPosition<DropBaseVerticalPosition['direction']>;\n} = {\n    left({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        arrowGuardDistance,\n        occupyAllAvailableViewportHeight,\n        preferredViewportMetrics,\n    }) {\n        return this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            activatorOffset,\n            shift: 0,\n            isNegativeArrowShift: true,\n            guardDistance,\n            arrowGuardDistance,\n            occupyAllAvailableViewportHeight,\n            preferredViewportMetrics,\n        });\n    },\n    right({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        arrowGuardDistance,\n        occupyAllAvailableViewportHeight,\n        preferredViewportMetrics,\n    }) {\n        return this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            activatorOffset,\n            shift: -(dropMetrics.width - activatorMetrics.width),\n            arrowGuardDistance,\n            guardDistance,\n            occupyAllAvailableViewportHeight,\n            preferredViewportMetrics,\n        });\n    },\n    center({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        guardDistance,\n        occupyAllAvailableViewportHeight,\n        preferredViewportMetrics,\n    }) {\n        const pointToCenterActivator = getPointToCenterActivator({\n            point: 0,\n            offsetPoint: 0,\n            contentSize: dropMetrics.width,\n            activatorSize: activatorMetrics.width,\n        });\n\n        return this._baseAlign({\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics,\n            direction,\n            activatorOffset,\n            shift: pointToCenterActivator,\n            guardDistance,\n            occupyAllAvailableViewportHeight,\n            preferredViewportMetrics,\n        });\n    },\n    _baseAlign({\n        activatorMetrics,\n        dropMetrics,\n        viewportMetrics,\n        direction,\n        activatorOffset,\n        shift,\n        arrowGuardDistance,\n        isNegativeArrowShift = false,\n        guardDistance,\n        occupyAllAvailableViewportHeight,\n        preferredViewportMetrics,\n    }) {\n        const [topPositionForDrop, topPositionForViewport] = getEageCoincidingWithDirection({\n            activatorPosition: activatorMetrics.top,\n            activatorSize: activatorMetrics.height,\n            dropSize: dropMetrics.height,\n            viewportShift: viewportMetrics.pageTop,\n            isNegativePosition: direction !== 'bottom',\n            activatorOffset: activatorOffset.offsetTop,\n            guardDistance,\n        });\n\n        const [leftPositionForDrop, leftPositionForViewport] = getEdgeOppositeDirection({\n            activatorPosition: activatorMetrics.left,\n            viewportShift: viewportMetrics.pageLeft,\n            activatorOffset: activatorOffset.offsetLeft,\n            shift,\n            isNegativeArrowShift,\n            arrowGuardDistance,\n            activatorSize: activatorMetrics.width,\n        });\n\n        let metrics: CalculateDropHeightAvailableViewportResult = {\n            topPositionForViewport,\n            top: topPositionForDrop,\n            left: leftPositionForDrop,\n            height: 0,\n        };\n\n        if (occupyAllAvailableViewportHeight) {\n            metrics = calculateDropHeightAvailableViewport[direction]({\n                topPositionForViewport,\n                preferredViewportMetrics,\n                topPositionForDrop,\n                dropMetrics,\n                leftPositionForDrop,\n            });\n        }\n\n        return {\n            top: metrics.topPositionForViewport,\n            left: leftPositionForViewport,\n            bottom: metrics.topPositionForViewport + (metrics.height !== 0 ? metrics.height : dropMetrics.height),\n            right: leftPositionForViewport + dropMetrics.width,\n            dropMetrics: {\n                top: metrics.top,\n                left: metrics.left,\n                height: metrics.height !== 0 ? metrics.height : 'auto',\n            },\n            viewportMetrics,\n        };\n    },\n};\n\nexport const calculateRect: CalculateRectType<DropBaseHorizontalPosition> &\n    CalculateRectType<DropBaseVerticalPosition> = {\n    left: calculateRectForHorizontalPosition,\n    right: calculateRectForHorizontalPosition,\n    top: calculateRectForVerticalPosition,\n    bottom: calculateRectForVerticalPosition,\n};\n","import { useEffect, useLayoutEffect, useState, RefObject, useCallback, useRef } from 'react';\n\nimport { getOffsetElement } from '@hh.ru/magritte-common-metrics';\nimport { calculateRect, VIEWPORT_GUARD_DISTANCE } from '@hh.ru/magritte-internal-drop-base/calculateRect';\nimport type {\n    ActivatorOffset,\n    DropBaseProps,\n    DropMetrics,\n    RectPosition,\n    CustomVisualViewport,\n    CalculateRectType,\n    ArrowGuardDistance,\n    ArrowGuardDistanceAbstract,\n    DOMRectLike,\n    DropBaseHorizontalPosition,\n    DropBaseVerticalPosition,\n    DropBaseHorizontalPositionWithoutCenter,\n    DropBaseVerticalPositionWithoutCenter,\n} from '@hh.ru/magritte-internal-drop-base/types';\n\nexport const allowedAlignmentForVerticalDirection = ['left', 'right', 'center'] as const;\nexport const allowedAlignmentForHorizontalDirection = ['top', 'bottom', 'center'] as const;\n\nexport const allowedAlignmentForVerticalDirectionWithoutCenter = ['left', 'right'] as const;\nexport const allowedAlignmentForHorizontalDirectionWithoutCenter = ['top', 'bottom'] as const;\n\nexport const verticalDirections = ['top', 'bottom'] as const;\nexport const horizontalDirections = ['left', 'right'] as const;\n\nexport const START_OFFSET = -10000;\nexport const INITIAL_HEIGHT_VALUE = 'force-initial-height';\n\ninterface FindDynamicPositionHor {\n    directions: typeof horizontalDirections;\n    alignments:\n        | typeof allowedAlignmentForHorizontalDirection\n        | typeof allowedAlignmentForHorizontalDirectionWithoutCenter;\n}\n\ninterface FindDynamicPositionVert {\n    directions: typeof verticalDirections;\n    alignments: typeof allowedAlignmentForVerticalDirection | typeof allowedAlignmentForVerticalDirectionWithoutCenter;\n}\n\ninterface FindDynamicPositionElementMetrics {\n    activatorMetrics: DOMRect;\n    dropMetrics: DOMRectLike;\n    viewportMetrics: CustomVisualViewport;\n    activatorOffset: ActivatorOffset;\n    forceFitIntoViewport?: boolean;\n    guardDistance: number;\n    arrowGuardDistance?: ArrowGuardDistance;\n    occupyAllAvailableViewportHeight: boolean;\n}\n\ntype ResultPosition = {\n    viewportMetrics: CustomVisualViewport;\n    hasScroll?: boolean;\n    dropMetricsRelativeToViewport: {\n        top: number;\n        bottom: number;\n        left: number;\n        right: number;\n    };\n    dropMetrics: DropMetrics;\n} & (\n    | DropBaseHorizontalPosition\n    | DropBaseVerticalPosition\n    | DropBaseHorizontalPositionWithoutCenter\n    | DropBaseVerticalPositionWithoutCenter\n);\n\ntype GetDropMetricsByPositionAndAlignment<\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n> = FindDynamicPositionElementMetrics & Pick<DropBaseProps<T>, 'direction' | 'alignment'>;\n\nexport const getDropMetricsByPositionAndAlignment = <\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n>({\n    activatorMetrics,\n    dropMetrics,\n    viewportMetrics,\n    direction,\n    alignment,\n    arrowGuardDistance,\n    activatorOffset,\n    forceFitIntoViewport,\n    guardDistance,\n    occupyAllAvailableViewportHeight,\n}: GetDropMetricsByPositionAndAlignment<T>): ResultPosition | null => {\n    const arrowGuardDistanceByPosition = (arrowGuardDistance as ArrowGuardDistanceAbstract<T>)?.[direction];\n    const minimalRectForActivatorWithDrop: RectPosition = (calculateRect as CalculateRectType<T>)[direction][alignment](\n        {\n            activatorMetrics,\n            dropMetrics,\n            viewportMetrics: window.visualViewport as VisualViewport,\n            preferredViewportMetrics: viewportMetrics,\n            direction,\n            activatorOffset,\n            guardDistance,\n            arrowGuardDistance: arrowGuardDistanceByPosition?.[alignment],\n            occupyAllAvailableViewportHeight,\n        }\n    );\n\n    const isFitIntoViewport =\n        minimalRectForActivatorWithDrop.left >= 0 &&\n        minimalRectForActivatorWithDrop.right >= 0 &&\n        minimalRectForActivatorWithDrop.bottom >= 0 &&\n        minimalRectForActivatorWithDrop.top >= 0 &&\n        minimalRectForActivatorWithDrop.top > viewportMetrics.pageTop &&\n        minimalRectForActivatorWithDrop.bottom < viewportMetrics.pageTop + viewportMetrics.height &&\n        minimalRectForActivatorWithDrop.left > viewportMetrics.pageLeft &&\n        minimalRectForActivatorWithDrop.right < viewportMetrics.pageLeft + viewportMetrics.width;\n\n    if (isFitIntoViewport || forceFitIntoViewport) {\n        return {\n            direction,\n            alignment,\n            dropMetrics: minimalRectForActivatorWithDrop.dropMetrics,\n            viewportMetrics: minimalRectForActivatorWithDrop.viewportMetrics,\n            dropMetricsRelativeToViewport: {\n                top: minimalRectForActivatorWithDrop.top,\n                left: minimalRectForActivatorWithDrop.left,\n                right: minimalRectForActivatorWithDrop.right,\n                bottom: minimalRectForActivatorWithDrop.bottom,\n            },\n        } as ResultPosition;\n    }\n\n    return null;\n};\n\nexport function findDynamicPosition<T extends FindDynamicPositionHor | FindDynamicPositionVert>(\n    {\n        activatorMetrics,\n        arrowGuardDistance,\n        dropMetrics,\n        viewportMetrics,\n        activatorOffset,\n        guardDistance,\n        occupyAllAvailableViewportHeight,\n    }: FindDynamicPositionElementMetrics,\n    { directions, alignments }: T\n): ResultPosition | null {\n    for (const direction of directions) {\n        for (const align of alignments) {\n            const result = getDropMetricsByPositionAndAlignment({\n                activatorMetrics,\n                dropMetrics,\n                viewportMetrics,\n                direction,\n                arrowGuardDistance,\n                alignment: align,\n                activatorOffset,\n                guardDistance,\n                occupyAllAvailableViewportHeight,\n            });\n\n            if (result) {\n                return result;\n            }\n        }\n    }\n\n    return null;\n}\n\nexport type RenderParamsProps<\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n> = Omit<DropBaseProps<T>, 'children' | 'animationClassNames' | 'animationTimeout' | 'guardDistance' | 'role'> & {\n    dropElementRef: RefObject<HTMLElement>;\n    dropScrollableContainerRef: RefObject<HTMLElement>;\n    guardDistance: number;\n    widthEqualToActivator?: boolean;\n};\n\nconst checkScroll = (element: HTMLElement | null) =>\n    element ? element.scrollHeight - element.clientHeight > 0 : false;\n\nexport const useRenderParams = <\n    T extends\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter\n>({\n    direction,\n    alignment,\n    activatorRef,\n    dropElementRef,\n    host,\n    arrowGuardDistance,\n    preferredViewport,\n    visible,\n    guardDistance,\n    occupyAllAvailableViewportHeight,\n    dropScrollableContainerRef,\n    forcePosition,\n    widthEqualToActivator,\n}: RenderParamsProps<T>): {\n    metrics: { top: number; left: number; height?: number | string };\n    position:\n        | DropBaseHorizontalPosition\n        | DropBaseVerticalPosition\n        | DropBaseHorizontalPositionWithoutCenter\n        | DropBaseVerticalPositionWithoutCenter;\n} => {\n    const minimalDropHeightRef = useRef<undefined | number>(undefined);\n    const [calculateDirection, setCalculateDirection] = useState<typeof direction>(direction);\n    const [calculateAlignment, setCalculateAlignment] = useState<typeof alignment>(alignment);\n    const [_occupyAllAvailableViewportHeight, setOccupyAllAvailableViewportHeight] = useState(\n        occupyAllAvailableViewportHeight ?? false\n    );\n    const [result, setResult] = useState<ResultPosition>();\n    const [position, setPosition] = useState<{ top: number; left: number; height?: string | number }>({\n        left: START_OFFSET,\n        top: START_OFFSET,\n        height: undefined,\n    });\n    const hasScrollRef = useRef<boolean | null>(null);\n\n    const updateRenderParams = useCallback(\n        (fromObserver?: boolean) => {\n            const activatorElement = activatorRef.current;\n            const dropElement = dropElementRef.current;\n            const hostElement = host ? host.current : document.body;\n\n            if (!dropElement || !activatorElement || !visible) {\n                return;\n            }\n\n            if (widthEqualToActivator) {\n                const activatorWidth = activatorElement.offsetWidth;\n                dropElement.style.width = `${activatorWidth}px`;\n            }\n\n            hasScrollRef.current = checkScroll(dropScrollableContainerRef.current);\n            const useAvailableViewportHeightForDrop =\n                (hasScrollRef.current && fromObserver) || _occupyAllAvailableViewportHeight;\n\n            const element = activatorElement;\n            const activatorMetrics = element.getBoundingClientRect();\n            const dropMetricsRaw = dropElement.getBoundingClientRect();\n            const dropMetrics: DOMRectLike = {\n                top: dropMetricsRaw.top,\n                left: dropMetricsRaw.left,\n                right: dropMetricsRaw.right,\n                bottom: dropMetricsRaw.bottom,\n                height: dropMetricsRaw.height,\n                width: dropMetricsRaw.width,\n            };\n            const viewport = window.visualViewport;\n\n            if (minimalDropHeightRef.current && dropMetrics.height < minimalDropHeightRef.current) {\n                minimalDropHeightRef.current = dropMetrics.height;\n            }\n\n            if (useAvailableViewportHeightForDrop) {\n                minimalDropHeightRef.current = minimalDropHeightRef.current ?? dropMetrics.height;\n                dropMetrics.height = minimalDropHeightRef.current;\n                dropMetrics.bottom = dropMetrics.top + dropMetrics.height;\n            }\n\n            if (viewport === null) {\n                throw new Error('Magritte component DropBase: Viewport data is null');\n            }\n\n            const viewports: CustomVisualViewport[] = [\n                {\n                    pageTop: viewport.pageTop,\n                    pageLeft: viewport.pageLeft,\n                    width: viewport.width,\n                    height: viewport.height,\n                },\n            ];\n\n            const preferredViewportElement = preferredViewport?.current;\n\n            /**\n             * Метрики расчета кастомного viewport, случай когда хотим\n             * поционировать дроп внутри границ другого элемента\n             * Если дроп не влезает в кастомный viewport помещаем его\n             * в реальный viewport\n             **/\n            if (preferredViewportElement) {\n                const preferredViewportMetrics = preferredViewportElement.getBoundingClientRect();\n\n                /**\n                 * Высота кастомного viewport в случае если элемент находится\n                 * в рамках реального viewport с верхней стороны\n                 **/\n                const viewportHeightForPositiveTop =\n                    preferredViewportMetrics.bottom > viewport.height\n                        ? viewport.height - preferredViewportMetrics.top\n                        : preferredViewportMetrics.height;\n                /**\n                 * Высота кастомного viewport в случае если элемент не находится\n                 * в рамках реального viewport с верхней стороны\n                 * (часть блока проскролили)\n                 **/\n                const viewportHeightForNegativeTop =\n                    preferredViewportMetrics.bottom < 0 ? 0 : preferredViewportMetrics.bottom;\n                /**\n                 * Ширина кастомного viewport в случае если элемент находится\n                 * в рамках реального viewport с левой стороны\n                 **/\n                const viewportWidthForPositiveLeft =\n                    preferredViewportMetrics.right > viewport.width\n                        ? viewport.width - preferredViewportMetrics.left\n                        : preferredViewportMetrics.width;\n                /**\n                 * Ширина кастомного viewport в случае если элемент не находится\n                 * в рамках реального viewport с левой стороны\n                 * (часть блока проскролили)\n                 **/\n                const viewportWidthForForNegativeLeft =\n                    preferredViewportMetrics.right < 0 ? 0 : preferredViewportMetrics.right;\n\n                viewports.unshift({\n                    /* Имитация pageTop, pageLeft кастомного viewport, при скроле могут быть\n                     * смещения либо по границе реального viewport если часть\n                     * кастомного ушла за границу реального viewport, либо\n                     * если кастомный viewport находится в границе реального viewport\n                     **/\n                    pageTop:\n                        preferredViewportMetrics.top < 0\n                            ? viewport.pageTop\n                            : viewport.pageTop + preferredViewportMetrics.top,\n                    pageLeft:\n                        preferredViewportMetrics.left < 0\n                            ? viewport.pageLeft\n                            : viewport.pageLeft + preferredViewportMetrics.left,\n                    width:\n                        preferredViewportMetrics.left < 0\n                            ? viewportWidthForForNegativeLeft\n                            : viewportWidthForPositiveLeft,\n                    height:\n                        preferredViewportMetrics.top < 0 ? viewportHeightForNegativeTop : viewportHeightForPositiveTop,\n                });\n            }\n\n            for (const viewportMetrics of viewports) {\n                const activatorOffset = hostElement\n                    ? getOffsetElement(activatorElement, hostElement)\n                    : { offsetLeft: 0, offsetTop: 0 };\n\n                let result: ResultPosition | null = getDropMetricsByPositionAndAlignment({\n                    activatorMetrics,\n                    dropMetrics,\n                    viewportMetrics,\n                    direction,\n                    arrowGuardDistance,\n                    alignment,\n                    activatorOffset,\n                    guardDistance,\n                    occupyAllAvailableViewportHeight: useAvailableViewportHeightForDrop,\n                    forceFitIntoViewport: forcePosition,\n                });\n\n                if (result === null) {\n                    result = findDynamicPosition<FindDynamicPositionHor>(\n                        {\n                            activatorMetrics,\n                            dropMetrics,\n                            viewportMetrics,\n                            activatorOffset,\n                            arrowGuardDistance,\n                            guardDistance,\n                            occupyAllAvailableViewportHeight: useAvailableViewportHeightForDrop,\n                        },\n                        {\n                            directions: horizontalDirections,\n                            alignments: occupyAllAvailableViewportHeight\n                                ? allowedAlignmentForHorizontalDirectionWithoutCenter\n                                : allowedAlignmentForHorizontalDirection,\n                        }\n                    );\n                }\n\n                if (result === null) {\n                    result = findDynamicPosition<FindDynamicPositionVert>(\n                        {\n                            activatorMetrics,\n                            dropMetrics,\n                            viewportMetrics,\n                            activatorOffset,\n                            arrowGuardDistance,\n                            guardDistance,\n                            occupyAllAvailableViewportHeight: useAvailableViewportHeightForDrop,\n                        },\n                        {\n                            directions: verticalDirections,\n                            alignments: occupyAllAvailableViewportHeight\n                                ? allowedAlignmentForVerticalDirectionWithoutCenter\n                                : allowedAlignmentForVerticalDirection,\n                        }\n                    );\n                }\n\n                if (result === null && viewports[viewports.length - 1] === viewportMetrics) {\n                    result = getDropMetricsByPositionAndAlignment({\n                        activatorMetrics,\n                        dropMetrics,\n                        viewportMetrics,\n                        direction,\n                        alignment,\n                        activatorOffset,\n                        arrowGuardDistance,\n                        forceFitIntoViewport: true,\n                        guardDistance,\n                        occupyAllAvailableViewportHeight: false,\n                    });\n\n                    if (result?.dropMetrics.height) {\n                        result.dropMetrics.height = INITIAL_HEIGHT_VALUE;\n                    }\n                }\n\n                if (result !== null) {\n                    setCalculateDirection(result.direction);\n                    setCalculateAlignment(result.alignment);\n                    setPosition(result.dropMetrics);\n                    hasScrollRef.current = checkScroll(dropScrollableContainerRef.current);\n                    setResult(result);\n\n                    return;\n                }\n            }\n        },\n        [\n            visible,\n            activatorRef,\n            dropElementRef,\n            dropScrollableContainerRef,\n            host,\n            alignment,\n            direction,\n            arrowGuardDistance,\n            preferredViewport,\n            guardDistance,\n            _occupyAllAvailableViewportHeight,\n            occupyAllAvailableViewportHeight,\n            forcePosition,\n            widthEqualToActivator,\n        ]\n    );\n\n    useEffect(() => {\n        if (occupyAllAvailableViewportHeight && result) {\n            if (hasScrollRef.current) {\n                return;\n            }\n\n            if (\n                result.direction === 'top' ||\n                ((result.direction === 'left' || result.direction === 'right') && result.alignment === 'bottom')\n            ) {\n                setOccupyAllAvailableViewportHeight(\n                    result?.dropMetricsRelativeToViewport.top - result.viewportMetrics.pageTop < VIEWPORT_GUARD_DISTANCE\n                );\n            }\n\n            if (\n                result.direction === 'bottom' ||\n                ((result.direction === 'left' || result.direction === 'right') && result.alignment === 'top')\n            ) {\n                setOccupyAllAvailableViewportHeight(\n                    result.viewportMetrics.pageTop +\n                        result.viewportMetrics.height -\n                        result.dropMetricsRelativeToViewport.bottom <\n                        VIEWPORT_GUARD_DISTANCE\n                );\n            }\n        }\n    }, [result, occupyAllAvailableViewportHeight, _occupyAllAvailableViewportHeight]);\n\n    useLayoutEffect(updateRenderParams, [updateRenderParams]);\n\n    useEffect(() => {\n        const activatorElement = activatorRef.current;\n        const hostElement = host ? host.current : document.body;\n\n        const updatePosition = () => {\n            updateRenderParams(true);\n        };\n\n        const resizeObserver = new ResizeObserver(updatePosition);\n        const observer = new MutationObserver(updatePosition);\n\n        if (hostElement === document.body) {\n            window.addEventListener('resize', updatePosition);\n        } else if (hostElement) {\n            resizeObserver.observe(hostElement);\n        }\n        if (hostElement !== document.body && occupyAllAvailableViewportHeight) {\n            resizeObserver.observe(document.body);\n        }\n        if (activatorElement) {\n            resizeObserver.observe(activatorElement);\n        }\n        if (activatorElement) {\n            observer.observe(activatorElement, { attributes: true, childList: false, subtree: false });\n        }\n        if (preferredViewport?.current) {\n            resizeObserver.observe(preferredViewport.current);\n        }\n\n        return () => {\n            resizeObserver.disconnect();\n            observer.disconnect();\n\n            if (hostElement === document.body) {\n                removeEventListener('resize', updatePosition);\n            }\n        };\n    }, [updateRenderParams, activatorRef, host, preferredViewport, occupyAllAvailableViewportHeight]);\n\n    return {\n        position: {\n            direction: calculateDirection,\n            alignment: calculateAlignment,\n        } as\n            | DropBaseHorizontalPosition\n            | DropBaseVerticalPosition\n            | DropBaseHorizontalPositionWithoutCenter\n            | DropBaseVerticalPositionWithoutCenter,\n        metrics: position,\n    };\n};\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { FieldHintProps } from '@hh.ru/magritte-internal-field-hint/types';\nimport { useFieldHintAnimation } from '@hh.ru/magritte-internal-field-hint/useFieldHintAnimation';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './field-hint.less';\n\nexport const FieldHint: FC<FieldHintProps> = ({\n    description,\n    errorMessage,\n    focused,\n    invalid,\n    disabled,\n    descriptionId,\n    'data-qa': dataQa = 'field-hint-container',\n}) => {\n    const descriptionVisible = !!description && (!!focused || !invalid || !errorMessage || !!disabled);\n    const errorMessageVisible = !!(errorMessage && !focused && invalid && !disabled);\n    const { hintRef, descriptionRef, errorMessageRef } = useFieldHintAnimation({\n        descriptionVisible,\n        errorMessageVisible,\n        errorMessage,\n        description,\n        styles,\n    });\n\n    if (!description && !errorMessage) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames(styles.container, {\n                [styles.focused]: focused,\n                [styles.disabled]: disabled,\n                [styles.invalid]: invalid,\n            })}\n            ref={hintRef}\n            data-qa={dataQa}\n        >\n            {!!errorMessage && (\n                <div ref={errorMessageRef} className={`${styles.hint} ${styles.hintError}`} data-qa=\"field-hint-error\">\n                    <Text typography={TextTypography.Label3Regular}>{errorMessage}</Text>\n                </div>\n            )}\n            {!!description && (\n                <div id={descriptionId} ref={descriptionRef} className={styles.hint} data-qa=\"field-hint-description\">\n                    <Text typography={TextTypography.Label3Regular}>{description}</Text>\n                </div>\n            )}\n        </div>\n    );\n};\n","import { useRef, useLayoutEffect, useCallback, RefObject, ReactNode } from 'react';\n\nimport { useDebounce } from '@hh.ru/magritte-common-func-utils';\nimport { useResize } from '@hh.ru/magritte-common-resize';\n\ninterface HookArgs {\n    descriptionVisible: boolean;\n    errorMessageVisible: boolean;\n    errorMessage?: ReactNode;\n    description?: ReactNode;\n    styles: Record<string, string>;\n}\n\nexport const useFieldHintAnimation = ({\n    descriptionVisible,\n    errorMessageVisible,\n    errorMessage,\n    description,\n    styles,\n}: HookArgs): {\n    descriptionRef: RefObject<HTMLDivElement>;\n    errorMessageRef: RefObject<HTMLDivElement>;\n    hintRef: RefObject<HTMLDivElement>;\n} => {\n    const hintRef = useRef<HTMLDivElement>(null);\n    const descriptionRef = useRef<HTMLDivElement>(null);\n    const errorMessageRef = useRef<HTMLDivElement>(null);\n\n    const prevHintState = useRef({\n        descriptionVisible,\n        errorMessageVisible,\n        firstProcessing: true,\n    });\n\n    const currentlyAnimated = useRef<HTMLDivElement | null>();\n\n    // отдельные коллбеки нужны чтобы можно было их удалить из списка слушателей transitionend hпи прерывании анимации\n    const fadeInHint = useCallback(() => {\n        currentlyAnimated.current?.classList.add(styles.hint_animated, styles.hint_visible);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const shrinkHint = useCallback(() => {\n        hintRef.current?.style.setProperty('height', '0');\n    }, []);\n\n    const setCurrentHeight = useCallback(() => {\n        if (hintRef.current) {\n            if (descriptionVisible) {\n                hintRef.current.style.setProperty('height', `${descriptionRef.current?.clientHeight}px`);\n            }\n            if (errorMessageVisible) {\n                hintRef.current.style.setProperty('height', `${errorMessageRef.current?.clientHeight}px`);\n            }\n        }\n    }, [descriptionVisible, errorMessageVisible]);\n\n    useLayoutEffect(() => {\n        if (hintRef.current) {\n            // для начала определяем в какой ситуации мы находимся, чтобы понять какую анимацию воспроизвести\n            // возможны 3 варианта:\n            // подсказка появляется\n            const isEmerging =\n                (errorMessageVisible && !prevHintState.current.descriptionVisible) ||\n                (descriptionVisible && !prevHintState.current.errorMessageVisible);\n\n            // одна подсказка заменяется на другую (например появилась ошибка валидации)\n            const isReplacing =\n                (errorMessageVisible && prevHintState.current.descriptionVisible) ||\n                (descriptionVisible && prevHintState.current.errorMessageVisible);\n\n            // подсказка исчезает\n            const isDissapearing =\n                (!errorMessageVisible && prevHintState.current.errorMessageVisible && !descriptionVisible) ||\n                (!descriptionVisible && prevHintState.current.descriptionVisible && !errorMessageVisible);\n\n            // определяем какой элемент появляется, а какой исчезает\n            const emerged = descriptionVisible ? descriptionRef.current : errorMessageRef.current;\n            const dissapeared =\n                prevHintState.current.descriptionVisible && !descriptionVisible\n                    ? descriptionRef.current\n                    : errorMessageRef.current;\n\n            // если у нас есть незавершенные анимации очищаем их слушателей, сами анимации мы переопределим ниже\n            hintRef.current.removeEventListener('transitionend', fadeInHint);\n            currentlyAnimated.current?.removeEventListener('transitionend', shrinkHint);\n\n            const firstProcessing = prevHintState.current.firstProcessing;\n            // eslint-disable-next-line no-unused-expressions\n            firstProcessing\n                ? hintRef.current?.classList.remove(styles.container_animated)\n                : hintRef.current?.classList.add(styles.container_animated);\n\n            prevHintState.current = {\n                descriptionVisible,\n                errorMessageVisible,\n                firstProcessing: false,\n            };\n\n            if (isReplacing) {\n                emerged?.classList.add(styles.hint_animated, styles.hint_visible);\n                dissapeared?.classList.add(styles.hint_animated);\n                dissapeared?.classList.remove(styles.hint_visible);\n                hintRef.current.style.setProperty('height', `${emerged?.clientHeight}px`);\n                return;\n            }\n\n            if (isEmerging) {\n                // случай когда компонент был только примонтирован\n                // в этом случае нам не нужно анимировать появление подсказки\n                // иначе при загрузке страницы будет много анимаций\n                if (firstProcessing) {\n                    emerged?.classList.remove(styles.hint_animated);\n                    emerged?.classList.add(styles.hint_visible);\n                    hintRef.current.style.setProperty('height', `${emerged?.clientHeight}px`);\n                    return;\n                }\n\n                currentlyAnimated.current = emerged;\n                hintRef.current.addEventListener('transitionend', fadeInHint, { once: true });\n                hintRef.current.style.setProperty('height', `${emerged?.clientHeight}px`);\n                return;\n            }\n\n            if (isDissapearing) {\n                currentlyAnimated.current = dissapeared;\n                // обрабатываем отдельно случай когда текст подсказки становится пустым или undefined\n                // в этом случае нет элемента у которого можно анимировать прозрачность\n                // а значит некуда добавить и transitionend\n                if (!dissapeared) {\n                    shrinkHint();\n                    return;\n                }\n                dissapeared?.addEventListener('transitionend', shrinkHint, { once: true });\n                dissapeared?.classList.add(styles.hint_animated);\n                dissapeared?.classList.remove(styles.hint_visible);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [descriptionVisible, errorMessageVisible, fadeInHint, shrinkHint, errorMessage, description]);\n\n    useResize(useDebounce(setCurrentHeight, 64));\n\n    return {\n        descriptionRef,\n        errorMessageRef,\n        hintRef,\n    };\n};\n","export function debounce<T extends unknown[]>(callback: (...args: T) => void, waitMs: number): typeof callback {\n    let timeout = 0;\n    return (...args: T) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            callback(...args);\n        }, waitMs) as unknown as number;\n    };\n}\n\n/**\n * Обертка модифицирующая функцию так, что она будет вызвана не чаще чем раз в кадр анимации\n */\nexport function scheduleForAnimationFrame<T extends unknown[]>(callback: (...args: T) => void): typeof callback {\n    let scheduled = false;\n    return (...args: T) => {\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        requestAnimationFrame(() => {\n            scheduled = false;\n            callback(...args);\n        });\n    };\n}\n","import { useRef, useEffect, RefObject, useCallback, useLayoutEffect } from 'react';\nimport classnames from 'classnames';\n\nimport { ScrollInternalState, ItemWithOffset, OFFSET_ATTR } from '@hh.ru/magritte-internal-scrollable-container/types';\nimport { debounce, scheduleForAnimationFrame } from '@hh.ru/magritte-internal-scrollable-container/utils';\n\nimport styles from './scrollableContainer.less';\n\nconst BUTTON_WIDTH = 44;\nconst FOCUS_OUTLINE_WIDTH = 4;\n\n/**\n * Возвращает значение из диапазона [min, max], если value в этом диапазоне, то возвращает его, если нет, то ближайшее\n * значени из диапазона [min, max]\n * @param value Исходное значение\n * @param min Нижняя граница диапазона\n * @param max Верхняя граница диапазона\n * @returns Значение из диапазона [min, max]\n */\nconst ensureRange = (value: number, min: number, max: number) => Math.min(Math.max(value, min), max);\n\nconst setTranslation = (translation: number, state: ScrollInternalState) => {\n    const { positionContainerRef, positionContainerWidth, containerWidth } = state;\n    if (!positionContainerRef.current) {\n        return;\n    }\n\n    state.positionContainerTranslation = ensureRange(translation, containerWidth - positionContainerWidth, 0);\n    positionContainerRef.current.style.transform = `translate3d(${state.positionContainerTranslation}px, 0, 0)`;\n};\n\n/**\n * Вычисляет нужно ли показывать фейды по краям и скрывать кнопки скролла\n * Применяет соответствующие классы к обертке\n * Проверяет что сдвиг контейнера позиционирования находится в допустимых пределах и если нет, то корректирует его\n * @param state Состояние скролла\n */\nconst applyScrollButtonsUpdate = (state: ScrollInternalState) => {\n    const { positionContainerRef, wrapperRef, positionContainerWidth, containerWidth } = state;\n    let { positionContainerTranslation } = state;\n\n    if (!positionContainerRef.current || !wrapperRef.current) {\n        return;\n    }\n\n    if (positionContainerWidth + positionContainerTranslation < containerWidth) {\n        positionContainerTranslation = containerWidth - positionContainerWidth;\n        setTranslation(positionContainerTranslation, state);\n    }\n    const isFadeLeft = positionContainerTranslation < 0;\n    const isFadeRight = positionContainerTranslation + positionContainerWidth > containerWidth;\n    const className = classnames({\n        [styles.fadeLeftSide]: isFadeLeft && !isFadeRight,\n        [styles.fadeRightSide]: isFadeRight && !isFadeLeft,\n        [styles.fadeBothSides]: isFadeRight && isFadeLeft,\n    });\n    wrapperRef.current.classList.remove(styles.fadeBothSides, styles.fadeLeftSide, styles.fadeRightSide);\n    className && wrapperRef.current.classList.add(className);\n};\n\nconst setAnimated = (state: ScrollInternalState, animated: boolean) => {\n    state.positionContainerRef.current?.classList.toggle(styles.positionContainerAnimated, animated);\n    if (!animated) {\n        state.scrollAnimationInProgress = false;\n    }\n};\n\n/**\n * Скролл к конкретному элементу группы. Если на момент вызова нет ref контейнера позиционирования, то считаем что\n * функция была при маунте компонента и запоминаем элемент на который нужно скроллить. При маунте вызываем эту функцию\n * еще раз и скроллим к запомненному элементу без анимации.\n * @param state Состояние скролла\n * @param item Элемент к которому нужно подскроллить\n */\nconst scrollTo = (state: ScrollInternalState, item: RefObject<HTMLElement>) => {\n    const {\n        positionContainerTranslation,\n        containerWidth,\n        positionContainerRef,\n        scrollToItemInProgress,\n        disableButtons,\n    } = state;\n    if (!positionContainerRef.current) {\n        state.scrollToOnMount = item;\n        return;\n    }\n\n    if (item.current === scrollToItemInProgress?.current) {\n        return;\n    }\n\n    const offset = (item.current as unknown as ItemWithOffset)[OFFSET_ATTR];\n    const width = offset.right - offset.left;\n    const buttonsCorrection = disableButtons ? 0 : BUTTON_WIDTH;\n\n    let translation = positionContainerTranslation;\n    if (width > containerWidth) {\n        translation = -((width - containerWidth) / 2 + offset.left);\n    } else {\n        if (offset.left + positionContainerTranslation < 0) {\n            translation = -offset.left + buttonsCorrection;\n        }\n\n        if (offset.right + positionContainerTranslation > containerWidth) {\n            translation = containerWidth - offset.right - buttonsCorrection;\n        }\n    }\n\n    const isPositionChanged = translation !== positionContainerTranslation;\n    const needAnimation = !state.scrollToOnMount && isPositionChanged;\n\n    // Если это скролл при маунте, или позиция скролла не изменилась, то его не нужно анимировать\n    setAnimated(state, needAnimation);\n    setTranslation(translation, state);\n    if (needAnimation) {\n        state.scrollAnimationInProgress = true;\n        state.scrollToItemInProgress = item;\n    }\n    applyScrollButtonsUpdate(state);\n};\n\n/**\n * Пересчитывает позиции элементов и обновляет состояние скролла. Вызывается при изменении размеров контейнера или\n * добавлении/удалении элементов. Проходится по всем элементам и вычисляет сдвиг их правой и левой границы относительно\n * контейнера позиционирования. Сортирует элементы по возрастанию сдвига левой границы. Вычисляет ширину внешнего\n * контейнера и контейнера позиционирования. При вычислении ширины контейнера позиционирования правой его границей\n * считается правая граница самого крайнего справа элемента. Это нужно чтобы при переносе элементов на несколько строк\n * справа не появлялось лишнее пустое пространство.\n * @param state Состояние скролла\n */\nconst recalculateItemPositions = (state: ScrollInternalState) => {\n    const { positionContainerRef, containerRef, items } = state;\n\n    if (!positionContainerRef.current || !containerRef.current) {\n        return;\n    }\n    const offset = positionContainerRef.current.getBoundingClientRect().left || 0;\n    items.forEach((itemRef) => {\n        if (!itemRef.current) {\n            return;\n        }\n        const rect = itemRef.current.getBoundingClientRect();\n        itemRef.current[OFFSET_ATTR] = { left: rect.left - offset, right: rect.right - offset };\n    });\n\n    state.recalcRequired = false;\n    // т.к. нам нужна ширина content-box, то вычитаем левую и правую коррекцию, т.к. ей будут равны паддинги\n    state.containerWidth =\n        containerRef.current.offsetWidth - state.correction.leftCorrection - state.correction.rightCorrection;\n    // считаем ширину контейнера позиционирования равной правой границе самого крайнего элемента\n    state.positionContainerWidth = items.reduce(\n        (position, itemRef) => Math.max(position, itemRef.current?.[OFFSET_ATTR]?.right || 0),\n        0\n    );\n    if (!state.disableButtons && state.positionContainerWidth > state.containerWidth) {\n        state.containerWidth -= FOCUS_OUTLINE_WIDTH;\n    }\n\n    // если при маунте, когда у нас еще не было информации об элементах и размерах контейнеров был вызван scrollTo,\n    // то нужно проскроллить без анимации\n    if (state.scrollToOnMount) {\n        scrollTo(state, state.scrollToOnMount);\n        state.scrollToOnMount = null;\n        return;\n    }\n\n    applyScrollButtonsUpdate(state);\n};\n\n/**\n * Инициализирует ResizeObserver для контейнера и контейнера позиционирования\n */\nconst initResizeObserver = (state: ScrollInternalState) => {\n    const { positionContainerRef, containerRef } = state;\n    if (!positionContainerRef.current || !containerRef.current) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        return () => {};\n    }\n    const observer = new ResizeObserver(scheduleForAnimationFrame(() => recalculateItemPositions(state)));\n    observer.observe(containerRef.current);\n    observer.observe(positionContainerRef.current);\n\n    return () => observer.disconnect();\n};\n\n/**\n * Инициализирует обработчик события скролла\n * @param state Состояние скролла\n * @returns Функция удаляющая добавленные обработчики события\n */\nconst initWheelHandler = (state: ScrollInternalState) => {\n    const { wrapperRef } = state;\n\n    const wheelHandler = (event: WheelEvent) => {\n        if (state.scrollAnimationInProgress) {\n            return;\n        }\n        const delta = Math.abs(event.deltaY) > Math.abs(event.deltaX) ? -event.deltaY : -event.deltaX;\n        const translation = state.positionContainerTranslation + delta;\n        setTranslation(translation, state);\n        applyScrollButtonsUpdate(state);\n\n        // эти значения могут быть не равны только в случае если попытались сдвинуть контейнер дальше\n        // допустимого значения, это значит что мы уперлись в левую или правую границу, значит дальнейшие события\n        // скролла можно не превентить\n        if (translation === state.positionContainerTranslation) {\n            event.preventDefault();\n        }\n    };\n\n    wrapperRef.current?.addEventListener('wheel', wheelHandler, { passive: false });\n    return () => wrapperRef.current?.removeEventListener('wheel', wheelHandler);\n};\n\n/**\n * Инициализирует обработчики тач событий для скролла на мобильных устройствах\n * @param state Состояние скролла\n * @returns Функция удаляющая добавленные обработчики событий\n */\nconst initTouchHandlers = (state: ScrollInternalState) => {\n    // Минимальная скорость скролла для анимации инерции (пикселей в мс)\n    const MIN_SPEED_TO_ANIMATE = 0.01;\n    // Минимальный сдвиг контейнера позиционирования в пикселях для анимации инерции\n    const MIN_DELTA_TO_ANIMATE = 5;\n    // Ускорение скролла при отпускании пальца, оно будет направленно в сторону противоположную движению контейнера\n    // в пикселях в мс\n    // Используется для анимации инерции при тач скролле, чем оно больше\n    // тем быстрее будет прекращаться движение по инерции\n    const VELOCITY = 0.007;\n\n    let dragPrevTime = 0;\n    let dragPrevX = 0;\n    let dragPrevY = 0;\n    let dragSpeed = 0;\n    let dragDelta = 0;\n    let startedOnMe = false;\n    let firstMove = true;\n\n    const { positionContainerRef, wrapperRef } = state;\n\n    /**\n     * Функция отвечающая за анимацию инерции при тач скролле, применяет к скорости скролла отрицательное ускорение\n     * и прекращается при достижении скоростью порогового значения\n     * @param speed Скорость скролла в момент начала анимации\n     * @param animationStartTime Время когда началась анимация\n     * @param startPosition Позиция контейнера позиционирования в момент начала анимации\n     */\n    const runTouchScrollInertiaAnimation = scheduleForAnimationFrame(\n        (speed: number, animationStartTime: number, startPosition: number) => {\n            if (!positionContainerRef.current || state.scrollAnimationInProgress || startedOnMe) {\n                return;\n            }\n            const timeDelta = Date.now() - animationStartTime;\n            // ускорение должно быть направлено в противоположную к скроллу сторону\n            const velocity = speed < 0 ? VELOCITY : -VELOCITY;\n\n            // формулы для вычисления пройденного пути и скорости в момент времени t для равноускоренного движения\n            const translation = startPosition + (speed * timeDelta + (velocity * (timeDelta * timeDelta)) / 2);\n            const currentSpeed = speed + velocity * timeDelta;\n            setTranslation(translation, state);\n\n            const isSignChanged = (speed > 0 && currentSpeed < 0) || (speed < 0 && currentSpeed > 0);\n\n            if (\n                Math.abs(currentSpeed) < MIN_SPEED_TO_ANIMATE ||\n                isSignChanged ||\n                translation !== state.positionContainerTranslation\n            ) {\n                return;\n            }\n\n            runTouchScrollInertiaAnimation(speed, animationStartTime, startPosition);\n        }\n    );\n\n    const touchMoveHandler = (event: TouchEvent) => {\n        if (!positionContainerRef.current || state.scrollAnimationInProgress) {\n            return;\n        }\n        const clientX = event.touches[0].clientX;\n        const clientY = event.touches[0].clientY;\n        if (\n            !startedOnMe ||\n            // Если \"пальцев\" больше одного, то это не скролл\n            event.touches.length > 1 ||\n            // Если дельта по вертикали больше чем дельта по горизонтали, то скорее всего пользователь хочет скроллить\n            // страницу вертикально, а не контейнер\n            (firstMove && Math.abs(clientY - dragPrevY) > Math.abs(clientX - dragPrevX))\n        ) {\n            startedOnMe = false;\n            wrapperRef.current?.removeEventListener('touchmove', touchMoveHandler);\n            return;\n        }\n\n        firstMove = false;\n        const now = Date.now();\n        const timeDelta = Date.now() - dragPrevTime;\n        dragDelta = dragPrevX - clientX;\n        dragSpeed = -dragDelta / timeDelta;\n        dragPrevX = clientX;\n        dragPrevTime = now;\n        setTranslation(state.positionContainerTranslation - dragDelta, state);\n    };\n\n    const touchStartHandler = (event: TouchEvent) => {\n        if (event.touches.length > 1 || state.scrollAnimationInProgress) {\n            return;\n        }\n        firstMove = true;\n        startedOnMe = true;\n        const clientX = event.touches[0].clientX;\n        dragPrevY = event.touches[0].clientY;\n        dragPrevX = clientX;\n        dragPrevTime = Date.now();\n        dragDelta = 0;\n        wrapperRef.current?.addEventListener('touchmove', touchMoveHandler, { passive: false });\n    };\n\n    const touchEndHandler = () => {\n        if (!startedOnMe) {\n            return;\n        }\n        startedOnMe = false;\n        wrapperRef.current?.removeEventListener('touchmove', touchMoveHandler);\n        const speed = ensureRange(dragSpeed, -3, 3);\n        if (Math.abs(dragDelta) > MIN_DELTA_TO_ANIMATE && Math.abs(speed) >= MIN_SPEED_TO_ANIMATE) {\n            runTouchScrollInertiaAnimation(speed, Date.now(), state.positionContainerTranslation);\n        }\n    };\n\n    wrapperRef.current?.addEventListener('touchstart', touchStartHandler, { passive: false });\n    document.addEventListener('touchend', touchEndHandler, { passive: false });\n    return () => {\n        wrapperRef.current?.removeEventListener('touchstart', touchStartHandler);\n        document.removeEventListener('touchend', touchEndHandler);\n    };\n};\n\ninterface UseScrollContainer {\n    registerItem: (ref: RefObject<HTMLElement>) => void;\n    removeItem: (ref: RefObject<HTMLElement>) => void;\n    scrollToItem: (ref: RefObject<HTMLElement>) => void;\n    scrollSide: (right?: boolean) => void;\n    initWheelHandler: () => VoidFunction;\n    initTouchHandlers: () => VoidFunction;\n    wrapperRef: RefObject<HTMLDivElement>;\n    positionContainerRef: RefObject<HTMLDivElement>;\n    containerRef: RefObject<HTMLDivElement>;\n}\n\nexport const useScrollContainer = (\n    leftCorrection: number,\n    rightCorrection: number,\n    disableButtons: boolean\n): UseScrollContainer => {\n    const scrollStateRef = useRef<ScrollInternalState>({\n        wrapperRef: useRef<HTMLDivElement>(null),\n        positionContainerRef: useRef<HTMLDivElement>(null),\n        containerRef: useRef<HTMLDivElement>(null),\n        positionContainerWidth: 0,\n        positionContainerTranslation: 0,\n        containerWidth: 0,\n        items: [],\n        correction: { leftCorrection: 0, rightCorrection: 0 },\n        disableButtons: false,\n        scrollAnimationInProgress: false,\n        scrollToOnMount: null,\n        recalcRequired: false,\n        scrollToItemInProgress: null,\n    });\n\n    scrollStateRef.current.correction = { leftCorrection, rightCorrection };\n    scrollStateRef.current.disableButtons = disableButtons;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const recalculateItemPositionsDebounced = useCallback(\n        debounce(() => recalculateItemPositions(scrollStateRef.current), 10),\n        []\n    );\n\n    const scrollToItem = useCallback((ref: RefObject<HTMLElement>) => {\n        if (scrollStateRef.current.recalcRequired) {\n            recalculateItemPositions(scrollStateRef.current);\n        }\n        scrollTo(scrollStateRef.current, ref);\n    }, []);\n\n    const scrollSide = useCallback((directionRight?: boolean) => {\n        const { containerWidth, positionContainerRef, positionContainerTranslation } = scrollStateRef.current;\n        if (!positionContainerRef.current) {\n            return;\n        }\n\n        const translation = positionContainerTranslation + (directionRight ? -containerWidth : containerWidth);\n        setAnimated(scrollStateRef.current, true);\n        setTranslation(translation, scrollStateRef.current);\n        applyScrollButtonsUpdate(scrollStateRef.current);\n    }, []);\n\n    const registerItem = useCallback(\n        (ref: RefObject<HTMLElement>) => {\n            if (!ref.current) {\n                return;\n            }\n\n            scrollStateRef.current.items.push(ref as unknown as RefObject<HTMLElement & ItemWithOffset>);\n            scrollStateRef.current.recalcRequired = true;\n            recalculateItemPositionsDebounced();\n        },\n        [recalculateItemPositionsDebounced]\n    );\n\n    const removeItem = useCallback(\n        (ref: RefObject<HTMLElement>) => {\n            if (!ref.current) {\n                return;\n            }\n\n            scrollStateRef.current.items = scrollStateRef.current.items.filter(\n                (storedRef) => storedRef.current !== ref.current\n            );\n            recalculateItemPositionsDebounced();\n        },\n        [recalculateItemPositionsDebounced]\n    );\n\n    useEffect(() => {\n        const { wrapperRef, positionContainerRef, containerRef } = scrollStateRef.current;\n        if (!containerRef.current || !positionContainerRef.current || !wrapperRef.current) {\n            return;\n        }\n\n        const transitionEndHandler = (event: TransitionEvent) => {\n            if (event.target !== scrollStateRef.current?.positionContainerRef.current) {\n                return;\n            }\n            setAnimated(scrollStateRef.current, false);\n            if (scrollStateRef.current) {\n                scrollStateRef.current.scrollAnimationInProgress = false;\n                scrollStateRef.current.scrollToItemInProgress = null;\n            }\n        };\n        const positionContainer = scrollStateRef.current?.positionContainerRef.current;\n        positionContainer?.addEventListener('transitionend', transitionEndHandler);\n\n        const resizeObserverCleanup = initResizeObserver(scrollStateRef.current);\n\n        // eslint-disable-next-line consistent-return\n        return () => {\n            resizeObserverCleanup();\n            positionContainer?.removeEventListener('transitionend', transitionEndHandler);\n        };\n    }, []);\n\n    useLayoutEffect(() => {\n        applyScrollButtonsUpdate(scrollStateRef.current);\n        if (disableButtons) {\n            setAnimated(scrollStateRef.current, false);\n        }\n    }, [disableButtons, leftCorrection, rightCorrection]);\n\n    return {\n        registerItem,\n        removeItem,\n        scrollToItem,\n        scrollSide,\n        initWheelHandler: () => initWheelHandler(scrollStateRef.current),\n        initTouchHandlers: () => initTouchHandlers(scrollStateRef.current),\n        wrapperRef: scrollStateRef.current.wrapperRef,\n        positionContainerRef: scrollStateRef.current.positionContainerRef,\n        containerRef: scrollStateRef.current.containerRef,\n    };\n};\n","import { FC, PropsWithChildren, createContext, RefObject, useEffect, useMemo, useContext } from 'react';\nimport classnames from 'classnames';\n\nimport { ScrollableContainerProps, SpacingCorrectionProps } from '@hh.ru/magritte-internal-scrollable-container/types';\nimport { useScrollContainer } from '@hh.ru/magritte-internal-scrollable-container/useScrollContainer';\nimport { Action, ActionMode, ActionStyle } from '@hh.ru/magritte-ui-action';\nimport { useBreakpoint, Breakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { ChevronRightOutlinedSize24, ChevronLeftOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\n\nimport styles from './scrollableContainer.less';\n\ninterface ScrollContextType {\n    registerItem: (ref: RefObject<HTMLElement>) => void;\n    removeItem: (ref: RefObject<HTMLElement>) => void;\n    scrollToItem: (ref: RefObject<HTMLElement>) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noopFunc = () => {};\nconst ScrollContext = createContext<ScrollContextType>({\n    registerItem: noopFunc,\n    removeItem: noopFunc,\n    scrollToItem: noopFunc,\n});\n\nexport const useScrollContext = (): ScrollContextType => useContext(ScrollContext);\n\nconst BREAKPOINTS_LIST = [Breakpoint.XS, Breakpoint.S, Breakpoint.M, Breakpoint.L, Breakpoint.XL, Breakpoint.XXL];\nconst NO_BUTTONS_START_FROM_BREAKPOINT = Breakpoint.S;\nconst NO_TRANSLATE = { transform: 'translate3d(0px, 0, 0)' };\n\n/**\n * По переданным параметрам коррекции возвращает значения отступов для текущего брейкпоинта\n * @param props Параметры коррекции\n * @param breakpoint Текуший брейкпоинт\n * @returns Объект содержащий значения отступов\n */\nconst getActualCorrection = (props: SpacingCorrectionProps, breakpoint: Breakpoint) => {\n    const breakpointIndex = BREAKPOINTS_LIST.indexOf(breakpoint);\n    let leftCorrection: number | undefined;\n    let rightCorrection: number | undefined;\n    // Проходимся по всем брейкпоинтам, начиная с текущего в сторону меньших разрешений\n    for (let i = breakpointIndex; i >= 0; i--) {\n        const breakpointName = BREAKPOINTS_LIST[i].toUpperCase();\n        // Ключи, которые могут быть в параметрах коррекции (SpacingCorrectionProps)\n        const leftCorrectionKey = `correctionLeft${breakpointName}` as keyof SpacingCorrectionProps;\n        const rightCorrectionKey = `correctionRight${breakpointName}` as keyof SpacingCorrectionProps;\n        const commonCorrectionKey = `correction${breakpointName}` as keyof SpacingCorrectionProps;\n        // Если для текущего брейкпоинта есть параметры коррекции для левой/правой стороны, то берем их\n        props[leftCorrectionKey] !== undefined &&\n            leftCorrection === undefined &&\n            (leftCorrection = props[leftCorrectionKey]);\n        props[rightCorrectionKey] !== undefined &&\n            rightCorrection === undefined &&\n            (rightCorrection = props[rightCorrectionKey]);\n\n        // Если для левой или правой стороны не найден параметр коррекции, то пробуем взять параметр correction для\n        // брейкпоинта который сейчас обрабатываем в цикле, например correctionM\n        if (props[commonCorrectionKey] !== undefined) {\n            leftCorrection === undefined && (leftCorrection = props[commonCorrectionKey]);\n            rightCorrection === undefined && (rightCorrection = props[commonCorrectionKey]);\n        }\n\n        // Если нашли значения для обеих сторон - возращаем\n        if (leftCorrection !== undefined && rightCorrection !== undefined) {\n            return { leftCorrection, rightCorrection };\n        }\n    }\n\n    // Если не нашли значение для какой то из сторон, то берем значение из correction, без уточнения брейкпоинта\n    return {\n        leftCorrection: leftCorrection === undefined ? props.correction || 0 : leftCorrection,\n        rightCorrection: rightCorrection === undefined ? props.correction || 0 : rightCorrection,\n    };\n};\n\nexport const ScrollableContainer: FC<PropsWithChildren<ScrollableContainerProps>> = ({\n    children,\n    disableButtons: _disableButtons,\n    correction = 0,\n    correctionXS,\n    correctionS,\n    correctionM,\n    correctionL,\n    correctionXL,\n    correctionXXL,\n    correctionLeftXS,\n    correctionLeftS,\n    correctionLeftM,\n    correctionLeftL,\n    correctionLeftXL,\n    correctionLeftXXL,\n    correctionRightXS,\n    correctionRightS,\n    correctionRightM,\n    correctionRightL,\n    correctionRightXL,\n    correctionRightXXL,\n    ...rest\n}) => {\n    const breakpoint = useBreakpoint();\n    const disableButtons =\n        _disableButtons ||\n        BREAKPOINTS_LIST.indexOf(breakpoint.breakpoint) <= BREAKPOINTS_LIST.indexOf(NO_BUTTONS_START_FROM_BREAKPOINT);\n\n    const spacingCorrectionStyles = useMemo(() => {\n        if (!disableButtons) {\n            return { paddingLeft: 0, paddingRight: 0 };\n        }\n        const correctionProps = {\n            correction,\n            correctionXS,\n            correctionS,\n            correctionM,\n            correctionL,\n            correctionXL,\n            correctionXXL,\n            correctionLeftXS,\n            correctionLeftS,\n            correctionLeftM,\n            correctionLeftL,\n            correctionLeftXL,\n            correctionLeftXXL,\n            correctionRightXS,\n            correctionRightS,\n            correctionRightM,\n            correctionRightL,\n            correctionRightXL,\n            correctionRightXXL,\n        };\n        const correctionValue = getActualCorrection(correctionProps, breakpoint.breakpoint);\n\n        return {\n            marginLeft: -correctionValue.leftCorrection,\n            marginRight: -correctionValue.rightCorrection,\n            paddingLeft: correctionValue.leftCorrection,\n            paddingRight: correctionValue.rightCorrection,\n        };\n    }, [\n        correction,\n        correctionXS,\n        correctionS,\n        correctionM,\n        correctionL,\n        correctionXL,\n        correctionXXL,\n        correctionLeftXS,\n        correctionLeftS,\n        correctionLeftM,\n        correctionLeftL,\n        correctionLeftXL,\n        correctionLeftXXL,\n        correctionRightXS,\n        correctionRightS,\n        correctionRightM,\n        correctionRightL,\n        correctionRightXL,\n        correctionRightXXL,\n        breakpoint,\n        disableButtons,\n    ]);\n\n    const {\n        containerRef,\n        positionContainerRef,\n        wrapperRef,\n        registerItem,\n        removeItem,\n        scrollToItem,\n        scrollSide,\n        initWheelHandler,\n        initTouchHandlers,\n    } = useScrollContainer(spacingCorrectionStyles.paddingLeft, spacingCorrectionStyles.paddingRight, disableButtons);\n\n    useEffect(() => {\n        const wheelHandlerCleanup = initWheelHandler();\n        const touchHandlersCleanup = initTouchHandlers();\n        return () => {\n            wheelHandlerCleanup();\n            touchHandlersCleanup();\n        };\n    }, [initTouchHandlers, initWheelHandler]);\n\n    return (\n        <div\n            ref={wrapperRef}\n            data-qa=\"scrollable-container__wrapper\"\n            className={classnames(styles.scrollWrapper, { [styles.noButtons]: disableButtons })}\n            {...rest}\n        >\n            <div\n                className={classnames(styles.scrollableContainer)}\n                style={disableButtons ? spacingCorrectionStyles : {}}\n                ref={containerRef}\n                data-qa=\"scrollable-container__overflow-container\"\n            >\n                <div\n                    data-qa=\"scrollable-container__position-container\"\n                    className={styles.positionContainer}\n                    style={NO_TRANSLATE}\n                    ref={positionContainerRef}\n                >\n                    <ScrollContext.Provider value={{ registerItem, removeItem, scrollToItem }}>\n                        {children}\n                    </ScrollContext.Provider>\n                </div>\n            </div>\n            {!disableButtons && (\n                <>\n                    <div className={classnames(styles.scrollButton, styles.scrollButtonLeft)}>\n                        <Action\n                            tabIndex={-1}\n                            mode={ActionMode.Secondary}\n                            style={ActionStyle.Neutral}\n                            icon={ChevronLeftOutlinedSize24}\n                            showBackground\n                            onClick={() => scrollSide()}\n                            data-qa=\"scrollable-container__scroll-button-left\"\n                        />\n                    </div>\n                    <div className={classnames(styles.scrollButton, styles.scrollButtonRight)}>\n                        <Action\n                            tabIndex={-1}\n                            mode={ActionMode.Secondary}\n                            style={ActionStyle.Neutral}\n                            icon={ChevronRightOutlinedSize24}\n                            showBackground\n                            onClick={() => scrollSide(true)}\n                            data-qa=\"scrollable-container__scroll-button-right\"\n                        />\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n","import { PropsWithChildren, useRef, useLayoutEffect } from 'react';\n\nimport styles from './collapsible.less';\n\ninterface CollapsibleProps {\n    expanded?: boolean;\n}\n\nexport const Collapsible: React.FC<PropsWithChildren<CollapsibleProps>> = ({ children, expanded = false }) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n\n    useLayoutEffect(() => {\n        if (ref.current) {\n            const openedHeight = `${ref.current.scrollHeight}px`;\n            const maxHeight = expanded ? openedHeight : '0px';\n            ref.current.style.maxHeight = maxHeight;\n        }\n    }, [expanded, children]);\n\n    return (\n        <div ref={ref} data-qa=\"collapsible\" className={styles.collapsible}>\n            {children}\n        </div>\n    );\n};\n","import { useEffect, useState, FC, PropsWithChildren } from 'react';\nimport classNames from 'classnames';\n\nimport { Collapsible } from '@hh.ru/magritte-ui-accordion/Collapsible';\nimport { AccordionProps } from '@hh.ru/magritte-ui-accordion/types';\nimport { Card } from '@hh.ru/magritte-ui-card';\nimport { ChevronDownOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\n\nimport styles from './accordion.less';\n\nexport const Accordion: FC<PropsWithChildren<AccordionProps>> = ({\n    title,\n    onClick,\n    padding = 16,\n    children,\n    expanded = false,\n    stretched = true,\n    controlled = false,\n    borderRadius = 12,\n}) => {\n    const [isLocalExpanded, setIsLocalExtended] = useState(expanded);\n\n    useEffect(() => {\n        setIsLocalExtended(expanded);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [controlled]);\n\n    const isExpanded = (controlled && expanded) || (!controlled && isLocalExpanded);\n\n    const handleToggle = () => {\n        if (!controlled) {\n            setIsLocalExtended((prev) => !prev);\n        }\n\n        onClick?.();\n    };\n    const contentStyle = { padding: `0 ${padding}px ${padding}px ${padding}px` };\n\n    return (\n        <Card showBorder borderRadius={borderRadius} stretched={stretched}>\n            <Card actionCard borderRadius={borderRadius} padding={padding} onClick={handleToggle} stretched>\n                <div className={styles.header}>\n                    <div data-qa=\"accordion-title\" className={styles.title}>\n                        {title}\n                    </div>\n                    <div\n                        data-qa=\"accordion-chevron\"\n                        style={{ marginLeft: `${padding}px` }}\n                        className={classNames(styles.titleIcon, {\n                            [styles.titleIconOpen]: isExpanded,\n                        })}\n                    >\n                        <ChevronDownOutlinedSize24 alignmentBaseline=\"auto\" />\n                    </div>\n                </div>\n            </Card>\n            <Collapsible expanded={isExpanded}>\n                <div data-qa=\"accordion-content\" style={contentStyle}>\n                    {children}\n                </div>\n            </Collapsible>\n        </Card>\n    );\n};\n","import {\n    Children,\n    DOMAttributes,\n    FC,\n    Fragment,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n    cloneElement,\n    isValidElement,\n    memo,\n} from 'react';\n\ntype InterceptedProps = Pick<\n    DOMAttributes<HTMLElement>,\n    'onClick' | 'onPointerDown' | 'onPointerCancel' | 'onPointerLeave' | 'onPointerUp'\n>;\n\nconst CLICK_DISTANCE_THRESHOLD_PX = 24;\n\nconst interceptClick = (node: ReactElement<InterceptedProps>) => {\n    const props: InterceptedProps = {};\n\n    if (node.props.onClick) {\n        let click = false;\n        let coordinates: { x: number; y: number } | null = null;\n        props.onClick = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n        props.onPointerDown = (event) => {\n            click = true;\n            coordinates = { x: event.pageX, y: event.pageY };\n            node.props.onPointerDown?.(event);\n        };\n        props.onPointerCancel = (event) => {\n            click = false;\n            node.props.onPointerCancel?.(event);\n        };\n        props.onPointerLeave = (event) => {\n            click = false;\n            node.props.onPointerLeave?.(event);\n        };\n        props.onPointerUp = (event) => {\n            if (click) {\n                if (\n                    coordinates !== null &&\n                    Math.pow(event.pageX - coordinates.x, 2) + Math.pow(event.pageY - coordinates.y, 2) <=\n                        Math.pow(CLICK_DISTANCE_THRESHOLD_PX, 2)\n                ) {\n                    node.props.onClick?.(event as MouseEvent<HTMLElement>);\n                }\n                click = false;\n                coordinates = null;\n            }\n            node.props.onPointerUp?.(event);\n        };\n    }\n\n    return cloneElement(node, props);\n};\n\nconst applyInterceptor = (node: ReactNode, func: (node: ReactElement) => ReactElement): ReactElement => {\n    if (!isValidElement(node)) {\n        return <Fragment>{node}</Fragment>;\n    }\n\n    let children;\n    ((props) => {\n        if (props.children) {\n            children =\n                props.children.length === 1\n                    ? applyInterceptor(Children.only(props.children), func)\n                    : Children.map(props.children, (child) => applyInterceptor(child, func));\n        }\n    })(node.props as { children: ReactNode[] });\n\n    return cloneElement(func(node), {}, children);\n};\n\nexport interface ClickInterceptorProps {\n    children: ReactNode;\n}\n\nexport const ClickInterceptor: FC<ClickInterceptorProps> = memo(({ children }) => {\n    return applyInterceptor(children, interceptClick);\n});\n\nClickInterceptor.displayName = 'ClickInterceptor';\n","import { ReactNode } from 'react';\n\nexport enum BottomSheetHeight {\n    /** Bottom Sheet принимает высоту контента */\n    Content = 'content',\n    /** Bottom Sheet всегда занимает весь вьюпорт, контенту добавляется отступ снизу, если его высоты не хватает */\n    FullScreen = 'full-screen',\n    /**\n     * Если высота контента меньше половины вьюпорта, Bottom Sheet принимает высоту контента.\n     * Если высота контента больше половины вьюпорта, Bottom Sheet при показе занимает половину вьюпорта,\n     * а при скролле контента увеличивается, пока не займет весь вьюпорт или не закончится скролл контента.\n     */\n    HalfScreen = 'half-screen',\n}\n\nexport enum BottomSheetShowDivider {\n    /** Показывать Divider, если футер наезжает на основной контент */\n    AlwaysIfHasScroll = 'always-if-has-scroll',\n    /** Показывать Divider, если футер наезжает на основной контент и основной контент не проскроллен до конца */\n    IfNotScrolledToEnd = 'if-not-scrolled-to-end',\n    /** Никогда ее показывать Divider между футером и основным контентом */\n    Never = 'never',\n}\n\nexport interface BottomSheetProps {\n    /** Разрешать ли скролл при открытой виртуальной клавиатуре */\n    allowScrollWhileFocused?: boolean;\n    /** Основной контент */\n    children?: ReactNode;\n    /** Контент футера */\n    footer?: ReactNode;\n    /** Контент заголовка (NavigationBar) */\n    header?: ReactNode;\n    /** Начальная высота Bottom Sheet */\n    height?: BottomSheetHeight;\n    /**\n     * По умолчанию Bottom Sheet заменяет обработчики onClick на onTouchStart и onTouchEnd,\n     * т.к. onClick не вызывается, если из-за нажатия закрывается виртуальная клавиатура и таргет уезжает из-под пальца\n     * Если вам не нужно это поведение, используйте interceptClickHandlers=false\n     */\n    interceptClickHandlers?: boolean;\n    /** Должна ли виртуальная клавиатура перекрывать Bottom Sheet (по умолчанию) или сдвигать */\n    keyboardOverlaysContent?: boolean;\n    /** Флаг, показывать ли компонент */\n    visible: boolean;\n    /** Колбек, который будет вызван после завершения анимации открытия */\n    onAppear?: VoidFunction;\n    /** Колбек, который будет вызван перед началом анимации закрытия */\n    onBeforeExit?: VoidFunction;\n    /** Колбек, который обязательно должен устанавливать visible=false */\n    onClose: VoidFunction;\n    /** Показывать ли Divider между футером и основным контентом */\n    showDivider?: BottomSheetShowDivider;\n    /** Показывать ли оверлей */\n    showOverlay?: boolean;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { DividerMode, DividerProps } from '@hh.ru/magritte-ui-divider/types';\n\nimport styles from './divider.less';\n\nconst genLengthStyles = (mode: DividerMode, length: number | undefined) => {\n    if (!length) {\n        return {};\n    }\n\n    if (mode === 'vertical') {\n        return {\n            height: `${length}px`,\n        };\n    }\n\n    return {\n        width: `${length}px`,\n    };\n};\n\nexport const Divider: FC<DividerProps> = ({\n    mode = 'horizontal',\n    marginTop = 0,\n    marginRight = 0,\n    marginLeft = 0,\n    marginBottom = 0,\n    length,\n}) => {\n    return (\n        <div\n            className={classNames({\n                [styles.horizontal]: mode === 'horizontal',\n                [styles.vertical]: mode === 'vertical',\n            })}\n            style={{\n                ...genLengthStyles(mode, length),\n                margin: `${marginTop}px ${marginRight}px ${marginBottom}px ${marginLeft}px`,\n            }}\n            role=\"separator\"\n            aria-orientation={mode}\n        />\n    );\n};\n","import { Key, ReactNode } from 'react';\n\nimport { IconWrapperComponentSize24 } from '@hh.ru/magritte-ui-icon/iconTypes';\nimport { ProgressBarProps } from '@hh.ru/magritte-ui-progress-bar/types';\n\nexport enum NavigationBarSize {\n    Large = 'large',\n    Standard = 'standard',\n}\n\ninterface BaseNavigationBarItemProps {\n    'data-qa'?: string;\n    onClick: VoidFunction;\n}\n\nexport interface NavigationBarIconProps extends BaseNavigationBarItemProps {\n    icon: IconWrapperComponentSize24;\n}\n\nexport interface NavigationBarLabelProps extends BaseNavigationBarItemProps {\n    label: ReactNode;\n}\n\nexport type NavigationBarItemProps = NavigationBarIconProps | NavigationBarLabelProps;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype _KeyHelper<T> = T & { key: Key };\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype _ArrayHelper<\n    ItemType,\n    MaxLength extends number,\n    ArrayType extends readonly ItemType[],\n    R = ArrayType\n> = ArrayType['length'] extends MaxLength\n    ? R\n    : _ArrayHelper<ItemType, MaxLength, readonly [ItemType, ...ArrayType], R | readonly [ItemType, ...ArrayType]>;\n\ntype ArrayHelper<ItemType, MaxLength extends number> = _ArrayHelper<ItemType, MaxLength, []>;\n\nexport const MAX_ICONS = 5;\n\nexport type NavigationBarItemArrayProps =\n    | NavigationBarItemProps\n    | ArrayHelper<_KeyHelper<NavigationBarIconProps>, typeof MAX_ICONS>;\n\ninterface BaseNavigationBarProps {\n    /** Размер компонента */\n    size?: NavigationBarSize;\n    /** Контент левого контейнера */\n    left?: NavigationBarIconProps;\n    /** Пропсы прогресс-бара */\n    progress?: ProgressBarProps;\n    /** Контент правого контейнера. Может быть отрендерен не целиком, см. `ellipsisRenderFunc` */\n    right?: NavigationBarItemArrayProps;\n    /** Опциональный контент внизу компонента */\n    options?: ReactNode;\n    /** Показывать ли разделитель, работает только в случае `size===NavigationBarSize.Standard` */\n    showDivider?: boolean;\n    /** Рендер-функция для непоместившегося контента справа, по умолчанию использует `ActionList` */\n    ellipsisRenderFunc?: (items: NavigationBarIconProps[]) => ReactNode;\n}\n\ninterface NavigationBarPropsWithTitle extends BaseNavigationBarProps {\n    /** Заголовок */\n    title: ReactNode;\n    /** Подзаголовок */\n    subtitle?: ReactNode;\n}\n\ninterface NavigationBarPropsWithoutTitle extends BaseNavigationBarProps {\n    title?: never;\n    subtitle?: never;\n}\n\nexport type NavigationBarProps = NavigationBarPropsWithTitle | NavigationBarPropsWithoutTitle;\n","import { FocusEventHandler, useCallback, useEffect, useLayoutEffect, useRef, useState, forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Transition, TransitionStatus } from 'react-transition-group';\nimport classnames from 'classnames';\n\nimport { disableOverscroll, disableScroll } from '@hh.ru/magritte-common-modal-helper';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { useSwipe, SwipeAxis, SwipeEventHandler } from '@hh.ru/magritte-common-use-swipe';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { ClickInterceptor } from '@hh.ru/magritte-ui-bottom-sheet/ClickInterceptor';\nimport { BottomSheetProps, BottomSheetHeight, BottomSheetShowDivider } from '@hh.ru/magritte-ui-bottom-sheet/types';\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\nimport {\n    NavigationBarContext,\n    type NavigationBarContextProps,\n    NavigationBarSize,\n} from '@hh.ru/magritte-ui-navigation-bar';\n\nimport styles from './bottom-sheet.less';\n\nconst CSS_VAR_INITIAL_VIEWPORT_HEIGHT = '--initial-viewport-height';\nconst CSS_VAR_ENTER_ANIMATION_DURATION = '--enter-animation-duration';\nconst CSS_VAR_EXIT_ANIMATION_DURATION = '--exit-animation-duration';\nconst CSS_VAR_HEIGHT_ANIMATION_DURATION = '--height-transition-duration';\nconst CSS_VAR_OVERLAY_OPACITY = '--overlay-opacity';\nconst CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET = '--virtual-keyboard-top-offset';\nconst CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET = '--virtual-keyboard-bottom-offset';\n\nconst INITIAL_VIEWPORT_HEIGHT = (typeof window !== 'undefined' ? window.visualViewport?.height : null) ?? 0;\nconst NAVIGATION_BAR_SIZE_OVERRIDE: NavigationBarContextProps = { size: NavigationBarSize.Standard };\nconst SWIPE_THRESHOLD_REF = { current: { max: Math.round(INITIAL_VIEWPORT_HEIGHT * 0.8) } };\n\nconst forceRepaint = (node: HTMLElement) => node.scrollTop;\n\nconst toNumber = (value: string) => {\n    const result = parseInt(value, 10);\n    return Number.isInteger(result) ? result : 0;\n};\n\ntype AnimationTimeout = { [AnimationType in 'appear' | 'height']: { [AnimationStage in 'enter' | 'exit']: number } };\n\ntype LayoutMetrics = {\n    documentHeight: number;\n    fillHeight: number;\n    grabberSpacing: number;\n    viewportShift: number;\n};\n\ntype BottomSheetState = {\n    grabber: 'sticky' | 'sticky-inside' | 'fake-sticky' | 'fixed';\n    hasFocus: boolean;\n    isSwipeEnabled: boolean;\n    isSwipeInProgress: boolean;\n    swipeOffset: number;\n    resizeRAFHandle: ReturnType<typeof requestAnimationFrame> | null;\n    virtualKeyboardHeight: number;\n};\n\nexport const BottomSheet = forwardRef<HTMLElement, BottomSheetProps>(\n    (\n        {\n            allowScrollWhileFocused,\n            children,\n            footer,\n            header,\n            height = BottomSheetHeight.Content,\n            interceptClickHandlers = true,\n            keyboardOverlaysContent = true,\n            onAppear,\n            onBeforeExit,\n            onClose,\n            showDivider = BottomSheetShowDivider.AlwaysIfHasScroll,\n            showOverlay = true,\n            visible = false,\n        },\n        ref\n    ) => {\n        const contentRef = useRef<HTMLDivElement | null>(null);\n        const cssVariablesContainerRef = useRef<HTMLDivElement | null>(null);\n        const fixedGrabberRef = useRef<HTMLDivElement | null>(null);\n        const footerRef = useRef<HTMLDivElement | null>(null);\n        const headerRef = useRef<HTMLDivElement | null>(null);\n        const heightTransitionElementRef = useRef<HTMLDivElement | null>(null);\n        const scrollContainerRef = useRef<HTMLDivElement | null>(null);\n        const stickyGrabberRef = useRef<HTMLDivElement | null>(null);\n        const scrollContainerRefMulti = useMultipleRefs(scrollContainerRef, ref);\n\n        const layoutMetricsRef = useRef<LayoutMetrics>({\n            documentHeight: 0,\n            fillHeight: 0,\n            grabberSpacing: 0,\n            viewportShift: 0,\n        });\n\n        const prevPropsRef = useRef<{\n            children: typeof children;\n            height: typeof height;\n            visible: typeof visible;\n        }>({ children, height, visible });\n\n        const stateRef = useRef<BottomSheetState>({\n            grabber: 'sticky',\n            hasFocus: false,\n            isSwipeEnabled: false,\n            isSwipeInProgress: false,\n            swipeOffset: 0,\n            resizeRAFHandle: null,\n            virtualKeyboardHeight: 0,\n        });\n\n        const [animationTimeout, setAnimationTimeout] = useState<AnimationTimeout | null>(null);\n        const [heightDiff, setHeightDiff] = useState<number | null>(null);\n        const [isDividerVisible, setDividerVisible] = useState(false);\n        const [onCloseContractCheck, setOnCloseContractCheck] = useState(false);\n\n        const setCSSVariable = (name: string, value: string) =>\n            cssVariablesContainerRef.current !== null &&\n            cssVariablesContainerRef.current.style.setProperty(name, value);\n\n        useEffect(() => {\n            if (!visible) {\n                return void 0;\n            }\n\n            layoutMetricsRef.current.documentHeight = document.documentElement.clientHeight;\n\n            if (!showOverlay) {\n                const enableOverscroll = disableOverscroll();\n                return enableOverscroll;\n            }\n\n            const enableScroll = disableScroll();\n            return enableScroll;\n        }, [showOverlay, visible]);\n\n        useEffect(() => {\n            const animationTimeoutElement = document.createElement('div');\n            animationTimeoutElement.classList.add(styles.animationTimeout);\n            document.body.appendChild(animationTimeoutElement);\n            const style = window.getComputedStyle(animationTimeoutElement);\n            const enter = toNumber(style.getPropertyValue(CSS_VAR_ENTER_ANIMATION_DURATION));\n            const exit = toNumber(style.getPropertyValue(CSS_VAR_EXIT_ANIMATION_DURATION));\n            const height = toNumber(style.getPropertyValue(CSS_VAR_HEIGHT_ANIMATION_DURATION));\n            document.body.removeChild(animationTimeoutElement);\n            setAnimationTimeout({ appear: { enter, exit }, height: { enter: height, exit } });\n        }, [setAnimationTimeout]);\n\n        // Пересчитывает флаги отображения граббера и дивайдера в зависимости от скролла\n        const recalcScrollFlags = useCallback(() => {\n            // расчет состояния граббера в зависимости от того, проскроллен ли контент до верхней границы вьюпорта\n            requestAnimationFrame(() => {\n                if (fixedGrabberRef.current !== null && stickyGrabberRef.current !== null) {\n                    const stickyGrabberDOMRect = stickyGrabberRef.current.getBoundingClientRect();\n                    const grabberTop = Math.round(stickyGrabberDOMRect.top);\n\n                    if (grabberTop >= layoutMetricsRef.current.grabberSpacing * 2 || heightDiff !== null) {\n                        if (stateRef.current.grabber !== 'sticky') {\n                            stateRef.current.grabber = 'sticky';\n                            stickyGrabberRef.current.classList.remove(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.remove(styles.grabberFixed, styles.grabberFakeSticky);\n                            fixedGrabberRef.current.style.top = ``;\n                        }\n                    } else if (grabberTop > layoutMetricsRef.current.grabberSpacing) {\n                        if (stateRef.current.grabber !== 'fake-sticky') {\n                            stateRef.current.grabber = 'fake-sticky';\n                            stickyGrabberRef.current.classList.add(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.add(styles.grabberFakeSticky);\n                            fixedGrabberRef.current.classList.remove(styles.grabberSticky, styles.grabberInvisible);\n                        }\n                        fixedGrabberRef.current.style.top = `${grabberTop + layoutMetricsRef.current.viewportShift}px`;\n                    } else if (stateRef.current.grabber !== 'fixed') {\n                        stateRef.current.grabber = 'fixed';\n                        stickyGrabberRef.current.classList.add(styles.grabberInvisible);\n                        fixedGrabberRef.current.classList.add(styles.grabberFixed);\n                        fixedGrabberRef.current.classList.remove(styles.grabberFakeSticky, styles.grabberInvisible);\n                        fixedGrabberRef.current.style.top = ``;\n                    }\n                }\n            });\n\n            // расчет того, нужно ли показывать дивайдер, в зависимости от того, проскроллен ли контент до конца\n            if (contentRef.current !== null && scrollContainerRef.current !== null) {\n                if (\n                    footer &&\n                    (showDivider === BottomSheetShowDivider.AlwaysIfHasScroll ||\n                        showDivider === BottomSheetShowDivider.IfNotScrolledToEnd)\n                ) {\n                    const hasScroll = contentRef.current.clientHeight > scrollContainerRef.current.clientHeight + 1;\n                    const isScrolledToContentEnd =\n                        Math.round(scrollContainerRef.current.scrollTop + scrollContainerRef.current.clientHeight) ===\n                        scrollContainerRef.current.scrollHeight;\n                    setDividerVisible(\n                        (showDivider === BottomSheetShowDivider.AlwaysIfHasScroll && hasScroll) ||\n                            (showDivider === BottomSheetShowDivider.IfNotScrolledToEnd &&\n                                hasScroll &&\n                                !isScrolledToContentEnd)\n                    );\n                }\n            }\n        }, [footer, heightDiff, setDividerVisible, showDivider]);\n\n        const resetScrollFlags = useCallback(() => {\n            if (fixedGrabberRef.current !== null && stickyGrabberRef.current !== null) {\n                stateRef.current.grabber = 'sticky';\n\n                fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                fixedGrabberRef.current.classList.remove(styles.grabberTransitionAnimation);\n\n                stickyGrabberRef.current.classList.remove(styles.grabberInvisible);\n            }\n\n            setDividerVisible(false);\n        }, [setDividerVisible]);\n\n        const resetHeightDiff = useCallback(() => setHeightDiff(null), [setHeightDiff]);\n\n        useEffect(() => {\n            const meta = document.querySelector('meta[name=\"viewport\"]') ?? document.createElement('meta');\n            const attributesStr = meta.getAttribute('content');\n            const attributes = (\n                attributesStr !== null\n                    ? Object.fromEntries(attributesStr.split(',').map((keyValuePairStr) => keyValuePairStr.split('=')))\n                    : {}\n            ) as Record<string, string>;\n            attributes['interactive-widget'] = keyboardOverlaysContent ? 'resizes-visual' : 'resizes-content';\n            const attributesStrUpdated = Object.entries(attributes)\n                .map((keyValuePair) => keyValuePair.join('='))\n                .join(',');\n            meta.setAttribute('name', 'viewport');\n            meta.setAttribute('content', attributesStrUpdated);\n        }, [keyboardOverlaysContent]);\n\n        const recalcKeyboardOffsets = useCallback(() => {\n            if (!headerRef.current || !scrollContainerRef.current || !visualViewport) {\n                return;\n            }\n\n            if (stateRef.current.hasFocus) {\n                // терминология: https://developer.chrome.com/blog/viewport-resize-behavior/\n                //\n                // делим браузеры на три группы в зависимости от поведения при открытии виртуальной клавиатуры:\n                // 1. Safari — ресайзит Visual Viewport, не меняет Layout Viewport.\n                //    В нем не нужно ничего корректировать при keyboardOverlaysContent=true,\n                //    а при keyboardOverlaysContent=false нужно сдвинуть НИЖНИЙ край контейнера ВВЕРХ,\n                //    чтобы он совпал с границей Visual Viewport\n                // 2. Chrome < 108 & Chromium-based — ресайзит и Visual Viewport, и Layout Viewport\n                //    В нем не нужно ничего корректировать при keyboardOverlaysContent=false,\n                //    а при keyboardOverlaysContent=true нужно сдвинуть НИЖНИЙ край контейнера ВНИЗ,\n                //    чтобы футер уехал под клавиатуру\n                // 3. Chrome >= 108 — поддерживает Virtual Keyboard API и meta-тег interactive-widget\n                //    Используем поведение `resizes-visual` (как в Safari) в случае keyboardOverlaysContent=true\n                //    и `resizes-content` (как в Chrome < 108 & Chromium-based) в случае keyboardOverlaysContent=false\n                //    Таким образом в нем ничего не нужно корректировать.\n\n                const scrollContainerDOMREct = scrollContainerRef.current.getBoundingClientRect();\n\n                // любой браузер может сдвинуть Visual Viewport вверх, если фокусируемый инпут находится близко к нижней границе\n                // из-за этого может возникнуть проблема, что ВЕРХНИЙ край контента уехал за границу Visual Viewport\n                // сдвигаем ВЕРХНИЙ край контейнера ВНИЗ, чтобы он совпал с границей Visual Viewport\n                const visualViewportShift = Math.round(\n                    layoutMetricsRef.current.grabberSpacing - scrollContainerDOMREct.top\n                );\n\n                // запоминаем сдвиг для коррекции позиции граббера\n                layoutMetricsRef.current.viewportShift = visualViewportShift;\n\n                // клавиатура ПОВЕРХ контента\n                // этот кейс нужно корректировать только в Chrome < 108 & Chromium-based\n                if (keyboardOverlaysContent) {\n                    // браузеры из этой группы меняют Layout Viewport\n                    const layoutViewportDiff = Math.round(\n                        layoutMetricsRef.current.documentHeight - document.documentElement.clientHeight\n                    );\n                    if (layoutViewportDiff > 0) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `${visualViewportShift}px`);\n                        // сдвигаем НИЖНИЙ край контейнера ВНИЗ, чтобы футер уехал под клавиатуру\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `${-layoutViewportDiff}px`);\n\n                        // при этом может возникнуть проблема, что клавиатура перекрыла хедер\n                        // проверяем это и компенсируем величину перекрытия при необходимости\n                        const headerDOMRect = headerRef.current.getBoundingClientRect();\n                        const headerOutOfViewportHeight = Math.round(\n                            headerDOMRect.bottom + layoutViewportDiff - layoutMetricsRef.current.documentHeight\n                        );\n                        if (headerOutOfViewportHeight > 0) {\n                            setCSSVariable(\n                                CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET,\n                                `${headerOutOfViewportHeight - layoutViewportDiff}px`\n                            );\n                        }\n                    }\n                } else {\n                    // клавиатура ПОД контентом\n                    // этот кейс нужно корректировать только в Safari\n\n                    // Safari ресайзит Visual Viewport\n                    const visualViewportDiff = Math.round(scrollContainerDOMREct.bottom - visualViewport.height);\n                    if (visualViewportDiff > 0) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `${visualViewportShift}px`);\n                        // сдвигаем НИЖНИЙ край контейнера ВВЕРХ, чтобы он совпал с границей Visual Viewport\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `${visualViewportDiff}px`);\n                    }\n                }\n            } else {\n                setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n                setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n            }\n        }, [keyboardOverlaysContent]);\n\n        const handleFocus: FocusEventHandler = useCallback(\n            (event) => {\n                if (!scrollContainerRef.current) {\n                    return;\n                }\n\n                const focusedElement = event.target;\n                const initialViewportHeight = visualViewport?.height;\n                const resizeRAFStart = performance.now();\n\n                if (!(focusedElement instanceof HTMLInputElement) || stateRef.current.resizeRAFHandle !== null) {\n                    return;\n                }\n\n                const handleResize = () => {\n                    if (stateRef.current.resizeRAFHandle !== null) {\n                        cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n                        stateRef.current.resizeRAFHandle = null;\n                    }\n                    recalcKeyboardOffsets();\n                };\n\n                const waitForResize = () => {\n                    if (performance.now() - resizeRAFStart > 1000 || visualViewport?.height !== initialViewportHeight) {\n                        visualViewport?.removeEventListener('resize', handleResize);\n                        stateRef.current.resizeRAFHandle = null;\n                        recalcKeyboardOffsets();\n                    } else {\n                        stateRef.current.resizeRAFHandle = requestAnimationFrame(waitForResize);\n                    }\n                };\n\n                const handleBlur = () => {\n                    if (!scrollContainerRef.current) {\n                        return;\n                    }\n\n                    focusedElement.removeEventListener('blur', handleBlur);\n                    stateRef.current.hasFocus = false;\n                    scrollContainerRef.current.classList.remove(\n                        styles.scrollContainerNoScroll,\n                        styles.virtualKeyboardAnimation\n                    );\n\n                    if (!('requestIdleCallback' in window)) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n                    }\n\n                    if (stateRef.current.resizeRAFHandle !== null) {\n                        cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n                        stateRef.current.resizeRAFHandle = null;\n                    }\n                    visualViewport?.removeEventListener('resize', handleResize);\n                };\n\n                focusedElement.addEventListener('blur', handleBlur);\n                stateRef.current.hasFocus = true;\n                if (!allowScrollWhileFocused) {\n                    scrollContainerRef.current.classList.add(styles.scrollContainerNoScroll);\n                }\n                scrollContainerRef.current.classList.add(styles.virtualKeyboardAnimation);\n\n                stateRef.current.resizeRAFHandle = requestAnimationFrame(waitForResize);\n                visualViewport?.addEventListener('resize', handleResize);\n            },\n            [allowScrollWhileFocused, recalcKeyboardOffsets]\n        );\n\n        // Запускает анимацию translateY для показа/скрытия боттомшита или изменения высоты контента\n        const runTranslateYAnimation = useCallback(() => {\n            if (\n                !contentRef.current ||\n                !footerRef.current ||\n                !heightTransitionElementRef.current ||\n                !scrollContainerRef.current ||\n                !visualViewport\n            ) {\n                return;\n            }\n\n            if (heightDiff !== null) {\n                if (heightDiff > 0) {\n                    contentRef.current.style.transform = `translateY(${heightDiff}px)`;\n                    footerRef.current.style.transform = `translateY(${-heightDiff}px)`;\n                } else {\n                    heightTransitionElementRef.current.style.flexBasis = `${-heightDiff}px`;\n                }\n            } else {\n                const contentDOMREct = contentRef.current.getBoundingClientRect();\n                const translateY =\n                    scrollContainerRef.current.clientHeight + stateRef.current.swipeOffset - contentDOMREct.top;\n                contentRef.current.style.transform = `translateY(${translateY}px)`;\n                setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `0`);\n            }\n\n            forceRepaint(scrollContainerRef.current);\n        }, [heightDiff]);\n\n        const resetTranslateY = useCallback(() => {\n            if (\n                !contentRef.current ||\n                !footerRef.current ||\n                !heightTransitionElementRef.current ||\n                !scrollContainerRef.current\n            ) {\n                return;\n            }\n\n            if (heightDiff !== null) {\n                contentRef.current.style.transform = ``;\n                footerRef.current.style.transform = ``;\n                heightTransitionElementRef.current.style.flexBasis = ``;\n            } else {\n                contentRef.current.style.transform = `translateY(${stateRef.current.swipeOffset}px)`;\n                setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `1`);\n            }\n\n            forceRepaint(scrollContainerRef.current);\n        }, [heightDiff]);\n\n        const handleAppearAnimationEnd = useCallback(() => {\n            recalcScrollFlags();\n            onAppear?.();\n        }, [onAppear, recalcScrollFlags]);\n\n        const handleExitAnimationStart = useCallback(() => {\n            resetTranslateY();\n            onBeforeExit?.();\n        }, [resetTranslateY, onBeforeExit]);\n\n        const handleExitAnimationEnd = useCallback(() => {\n            stateRef.current.grabber = 'sticky';\n            stateRef.current.hasFocus = false;\n            stateRef.current.isSwipeEnabled = false;\n            stateRef.current.isSwipeInProgress = false;\n            stateRef.current.swipeOffset = 0;\n            stateRef.current.resizeRAFHandle !== null && cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n            stateRef.current.resizeRAFHandle = null;\n\n            layoutMetricsRef.current.fillHeight = 0;\n            layoutMetricsRef.current.grabberSpacing = 0;\n\n            setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `1`);\n            setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n            setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n\n            if (fixedGrabberRef.current !== null) {\n                fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                fixedGrabberRef.current.classList.remove(styles.grabberFixed, styles.grabberFakeSticky);\n                fixedGrabberRef.current.style.transform = ``;\n            }\n\n            if (scrollContainerRef.current !== null) {\n                scrollContainerRef.current.classList.remove(\n                    styles.scrollContainerNoScroll,\n                    styles.virtualKeyboardAnimation\n                );\n            }\n\n            resetScrollFlags();\n            setOnCloseContractCheck(false);\n        }, [resetScrollFlags, setOnCloseContractCheck]);\n\n        const handleClose = useCallback(() => {\n            onClose();\n            setOnCloseContractCheck(true);\n        }, [onClose, setOnCloseContractCheck]);\n\n        const handleSwipeStart: SwipeEventHandler = useCallback(() => {\n            if (!scrollContainerRef.current) {\n                return;\n            }\n\n            if (Object.is(Math.round(scrollContainerRef.current.scrollTop), 0)) {\n                stateRef.current.isSwipeEnabled = true;\n                stateRef.current.swipeOffset = 0;\n            }\n        }, []);\n\n        const handleSwipeMove: SwipeEventHandler = useCallback(\n            (event) => {\n                if (!contentRef.current || !stateRef.current.isSwipeEnabled || !scrollContainerRef.current) {\n                    return;\n                }\n\n                const selection = document.getSelection();\n                if (selection && !selection.isCollapsed) {\n                    return;\n                }\n\n                if (event.distance > 0) {\n                    contentRef.current.style.transform = `translateY(${event.distance}px)`;\n                    if (!stateRef.current.isSwipeInProgress) {\n                        stateRef.current.isSwipeInProgress = true;\n                    }\n                    recalcScrollFlags();\n                } else {\n                    contentRef.current.style.transform = ``;\n                    stateRef.current.isSwipeEnabled = false;\n                    stateRef.current.isSwipeInProgress = false;\n                }\n\n                stateRef.current.swipeOffset = event.distance;\n            },\n            [recalcScrollFlags]\n        );\n\n        const handleSwipeCancel: SwipeEventHandler = useCallback(() => {\n            if (!contentRef.current || !scrollContainerRef.current) {\n                return;\n            }\n\n            if (stateRef.current.isSwipeEnabled && stateRef.current.isSwipeInProgress) {\n                contentRef.current.style.transform = ``;\n            }\n\n            stateRef.current.isSwipeEnabled = false;\n            stateRef.current.isSwipeInProgress = false;\n            stateRef.current.swipeOffset = 0;\n\n            recalcScrollFlags();\n        }, [recalcScrollFlags]);\n\n        const handleSwipeEnd: SwipeEventHandler = useCallback(\n            (event) => {\n                if (stateRef.current.isSwipeEnabled && stateRef.current.isSwipeInProgress) {\n                    handleClose();\n                } else {\n                    handleSwipeCancel(event);\n                }\n            },\n            [handleClose, handleSwipeCancel]\n        );\n\n        const swipeHandlers = useSwipe({\n            axis: SwipeAxis.Vertical,\n            thresholdRef: SWIPE_THRESHOLD_REF,\n            onSwipeStart: handleSwipeStart,\n            onSwipeMove: handleSwipeMove,\n            onSwipeEnd: handleSwipeEnd,\n            onSwipeCancel: handleSwipeCancel,\n        });\n\n        useLayoutEffect(() => {\n            if (!contentRef.current || !scrollContainerRef.current || !visualViewport) {\n                return;\n            }\n\n            if (visible) {\n                stateRef.current.grabber = contentRef.current.offsetTop > 0 ? 'sticky' : 'sticky-inside';\n                if (visible !== prevPropsRef.current.visible) {\n                    layoutMetricsRef.current.fillHeight = contentRef.current.offsetTop;\n                    layoutMetricsRef.current.grabberSpacing = scrollContainerRef.current.offsetTop;\n\n                    setCSSVariable(CSS_VAR_INITIAL_VIEWPORT_HEIGHT, `${INITIAL_VIEWPORT_HEIGHT}px`);\n                } else if (children !== prevPropsRef.current.children || height !== prevPropsRef.current.height) {\n                    const scrollTop = scrollContainerRef.current.scrollTop;\n                    scrollContainerRef.current.scrollTo({ top: 0 });\n\n                    const _heightDiff = layoutMetricsRef.current.fillHeight - contentRef.current.offsetTop;\n                    layoutMetricsRef.current.fillHeight = contentRef.current.offsetTop;\n                    if (_heightDiff !== 0 && !stateRef.current.hasFocus) {\n                        setHeightDiff(_heightDiff);\n                    }\n\n                    scrollContainerRef.current.scrollTo({ top: scrollTop });\n                }\n            }\n\n            prevPropsRef.current = { ...prevPropsRef.current, children, height, visible };\n        }, [children, height, setHeightDiff, visible]);\n\n        if (onCloseContractCheck && visible) {\n            console.error('onClose did not set visible=false', Date.now());\n        }\n\n        if (!animationTimeout) {\n            return null;\n        }\n\n        const renderFunc = (appearTransition: TransitionStatus, heightTransition: TransitionStatus) => (\n            <Layer layer={InternalLayerName.BottomSheet}>\n                <div\n                    className={classnames(styles.overlay, {\n                        [styles.overlayInvisible]:\n                            !showOverlay || (showOverlay && appearTransition !== 'exiting' && !visible),\n                    })}\n                    data-qa=\"bottom-sheet-overlay\"\n                >\n                    <div\n                        className={classnames(styles.overlayBackground, {\n                            [styles.appearAnimation]: appearTransition === 'entering',\n                            [styles.disappearAnimation]: appearTransition === 'exiting',\n                        })}\n                    />\n                    <div\n                        className={classnames(styles.scrollContainer, {\n                            [styles.scrollContainerNoScroll]: !allowScrollWhileFocused && stateRef.current.hasFocus,\n                            [styles.virtualKeyboardAnimation]: stateRef.current.hasFocus,\n                        })}\n                        data-qa=\"bottom-sheet-container\"\n                        onScroll={recalcScrollFlags}\n                        ref={scrollContainerRefMulti}\n                    >\n                        <div\n                            className={classnames(styles.fill, {\n                                [styles.fillFullScreen]: height === BottomSheetHeight.FullScreen,\n                                [styles.fillHalfScreen]: height === BottomSheetHeight.HalfScreen,\n                            })}\n                            data-qa=\"bottom-sheet-fill\"\n                            onClick={handleClose}\n                        />\n                        <div\n                            className={classnames(styles.grabber, styles.grabberTransitionAnimation, {\n                                [styles.grabberInvisible]:\n                                    appearTransition !== 'entered' || heightTransition !== 'exited',\n                                [styles.grabberFixed]:\n                                    stateRef.current.grabber === 'fixed' ||\n                                    stateRef.current.grabber === 'sticky-inside',\n                                [styles.grabberFakeSticky]: stateRef.current.grabber === 'fake-sticky',\n                            })}\n                            ref={fixedGrabberRef}\n                        />\n                        <div\n                            className={classnames(styles.content, {\n                                [styles.appearAnimation]: appearTransition === 'entering',\n                                [styles.closeBySwipeAnimation]:\n                                    appearTransition === 'exiting' && stateRef.current.isSwipeInProgress,\n                                [styles.contentFullScreen]: height === BottomSheetHeight.FullScreen,\n                                [styles.disappearAnimation]: appearTransition === 'exiting',\n                                [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                            })}\n                            data-qa=\"bottom-sheet-content\"\n                            ref={contentRef}\n                            {...swipeHandlers}\n                        >\n                            <div\n                                className={classnames(styles.grabber, styles.grabberSticky, {\n                                    [styles.grabberStickyInside]:\n                                        appearTransition === 'entering' && stateRef.current.grabber === 'sticky-inside',\n                                })}\n                                ref={stickyGrabberRef}\n                            />\n                            <div className={styles.visualContainer}>\n                                <div className={styles.header} onFocus={handleFocus} ref={headerRef}>\n                                    <NavigationBarContext.Provider value={NAVIGATION_BAR_SIZE_OVERRIDE}>\n                                        {header}\n                                    </NavigationBarContext.Provider>\n                                </div>\n                                <div className={classnames(styles.main, { [styles.mainWithoutHeader]: !header })}>\n                                    {children}\n                                </div>\n                                <div\n                                    className={classnames(styles.heightTransitionElement, {\n                                        [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                                    })}\n                                    ref={heightTransitionElementRef}\n                                />\n                                <div\n                                    className={classnames(styles.footer, {\n                                        [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                                    })}\n                                    ref={footerRef}\n                                >\n                                    {isDividerVisible && <Divider />}\n                                    {interceptClickHandlers ? <ClickInterceptor>{footer}</ClickInterceptor> : footer}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Layer>\n        );\n\n        return createPortal(\n            <div\n                className={styles.cssVariablesContainer}\n                data-qa=\"bottom-sheet-css-variables\"\n                ref={cssVariablesContainerRef}\n            >\n                <Transition\n                    appear\n                    in={visible}\n                    mountOnEnter\n                    onEnter={runTranslateYAnimation}\n                    onEntering={resetTranslateY}\n                    onEntered={handleAppearAnimationEnd}\n                    onExit={handleExitAnimationStart}\n                    onExiting={runTranslateYAnimation}\n                    onExited={handleExitAnimationEnd}\n                    timeout={animationTimeout.appear}\n                    unmountOnExit\n                >\n                    {(appearTransition) => (\n                        <Transition\n                            in={heightDiff !== null}\n                            onEnter={runTranslateYAnimation}\n                            onEntering={resetTranslateY}\n                            onEntered={resetHeightDiff}\n                            onExited={recalcScrollFlags}\n                            timeout={animationTimeout.height}\n                        >\n                            {(heightTransition) => renderFunc(appearTransition, heightTransition)}\n                        </Transition>\n                    )}\n                </Transition>\n            </div>,\n            document.body\n        );\n    }\n);\n\nBottomSheet.displayName = 'BottomSheet';\n","import { useRef, PropsWithChildren, useEffect, forwardRef } from 'react';\n\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport type { DividerState } from '@hh.ru/magritte-ui-drop/types';\n\nimport styles from './drop.less';\n\nexport const DropContainer = forwardRef<\n    HTMLDivElement,\n    PropsWithChildren<{\n        height?: number | string;\n        dividerState: DividerState;\n        minHeightForContent: number;\n    }>\n>(({ children, height, dividerState, minHeightForContent }, ref) => {\n    const dividerRef = useRef<HTMLDivElement>(null);\n    const showDivider = dividerState !== 'hide';\n\n    useEffect(() => {\n        if (showDivider && ref && 'current' in ref && ref?.current !== null && dividerRef.current && !!height) {\n            const hasScroll = ref.current.scrollHeight - ref.current.clientHeight > 0;\n            dividerRef.current.style.visibility = hasScroll ? 'visible' : 'hidden';\n        }\n    }, [ref, dividerRef, height, showDivider]);\n\n    const props = showDivider\n        ? {\n              onScroll: ({ target }: { target: EventTarget }) => {\n                  const scrollableContainer = target as HTMLDivElement;\n\n                  if (dividerRef.current && dividerState !== 'showWhenFullyScrolled') {\n                      const scrollEnded =\n                          scrollableContainer.scrollTop +\n                              scrollableContainer.offsetHeight -\n                              scrollableContainer.scrollHeight ===\n                          0;\n\n                      dividerRef.current.style.visibility = scrollEnded ? 'hidden' : 'visible';\n                  }\n              },\n          }\n        : {};\n\n    return (\n        <>\n            <div\n                ref={ref}\n                className={styles.dropContainer}\n                style={{ height: height === undefined ? `${minHeightForContent}px` : 'auto' }}\n                {...props}\n            >\n                {children}\n            </div>\n            {showDivider && (\n                <div ref={dividerRef} data-qa=\"drop-divider\">\n                    <Divider />\n                </div>\n            )}\n        </>\n    );\n});\n\nDropContainer.displayName = 'DropContainer';\n","import { type FC, type PropsWithChildren, memo } from 'react';\n\nconst PureChildren: FC<PropsWithChildren> = memo(({ children }) => <>{children}</>);\n\nPureChildren.displayName = 'PureChildren';\n\nexport { PureChildren };\n","import { useRef, useEffect, useState, type ReactElement, ForwardedRef, forwardRef } from 'react';\nimport classnames from 'classnames';\n\nimport {\n    DropBase,\n    INITIAL_HEIGHT_VALUE,\n    type DropBaseHorizontalPositionWithoutCenter,\n    type DropBaseVerticalPositionWithoutCenter,\n} from '@hh.ru/magritte-internal-drop-base';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { DropContainer } from '@hh.ru/magritte-ui-drop/DropContainer';\nimport { PureChildren } from '@hh.ru/magritte-ui-drop/PureChildren';\nimport type { DropProps } from '@hh.ru/magritte-ui-drop/types';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\n\nimport styles from './drop.less';\n\nconst DropComponent = <T extends DropBaseHorizontalPositionWithoutCenter | DropBaseVerticalPositionWithoutCenter>(\n    {\n        direction,\n        alignment,\n        visible,\n        host,\n        activatorRef,\n        onClose,\n        maxWidth = 320,\n        minHeightForContent = 300,\n        space = 600,\n        children,\n        footer,\n        role = 'dialog',\n        dividerState = 'show',\n        widthEqualToActivator = false,\n        'data-qa': dataQA = 'drop',\n        ...props\n    }: DropProps<T>,\n    ref: ForwardedRef<HTMLElement>\n): ReactElement | null => {\n    const { isMobile } = useBreakpoint();\n    const footerRef = useRef<HTMLDivElement>(null);\n    const [animationTimeout, setAnimationTimeout] = useState(200);\n\n    useEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles.dropAnimationTimeout);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n        const animationTimeout = parseInt(style.getPropertyValue(`--animation-duration`), 10);\n        if (Number.isInteger(animationTimeout)) {\n            setAnimationTimeout(animationTimeout);\n        }\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    if (isMobile) {\n        return null;\n    }\n\n    const position = { direction, alignment } as\n        | DropBaseVerticalPositionWithoutCenter\n        | DropBaseHorizontalPositionWithoutCenter;\n\n    return (\n        <DropBase\n            {...props}\n            {...position}\n            visible={visible}\n            host={host}\n            activatorRef={activatorRef}\n            closeByClickOutside\n            onClose={onClose}\n            autoFocusWhenOpened={role !== 'status'}\n            occupyAllAvailableViewportHeight\n            animationClassNames={{\n                enter: styles.dropEnter,\n                enterActive: styles.dropEnterActive,\n                exit: styles.dropExit,\n                exitActive: styles.dropExitActive,\n            }}\n            animationTimeout={animationTimeout}\n            widthEqualToActivator={widthEqualToActivator}\n            ref={ref}\n        >\n            {({ direction }, { metrics, dropScrollableContainerRef }) => (\n                <Layer layer={InternalLayerName.Drop}>\n                    <div\n                        className={classnames(`${styles.drop} ${styles[`drop-direction-${direction}`]}`, {\n                            [styles.dropSpace300]: space === 300,\n                            [styles.dropSpace400]: space === 400,\n                            [styles.dropSpace600]: space === 600,\n                            [styles.dropWithFooter]: !!footer,\n                        })}\n                        style={{\n                            maxWidth: widthEqualToActivator ? 'none' : maxWidth,\n                            maxHeight: metrics.height === INITIAL_HEIGHT_VALUE ? 'auto' : `${metrics.height}px`,\n                        }}\n                        data-qa={dataQA}\n                    >\n                        <DropContainer\n                            height={metrics.height === INITIAL_HEIGHT_VALUE ? undefined : metrics.height}\n                            dividerState={!footer ? 'hide' : dividerState}\n                            ref={dropScrollableContainerRef}\n                            minHeightForContent={minHeightForContent}\n                        >\n                            <PureChildren>{children}</PureChildren>\n                        </DropContainer>\n                        {footer && (\n                            <div ref={footerRef} className={styles.dropFooter}>\n                                <PureChildren>{footer}</PureChildren>\n                            </div>\n                        )}\n                    </div>\n                </Layer>\n            )}\n        </DropBase>\n    );\n};\n\nconst Drop = forwardRef(DropComponent) as (<\n    T extends DropBaseHorizontalPositionWithoutCenter | DropBaseVerticalPositionWithoutCenter\n>(\n    props: DropProps<T> & { ref?: ForwardedRef<HTMLElement> }\n) => ReactElement | null) & { displayName?: string };\n\nDrop.displayName = 'Drop';\n\nexport { Drop };\n","import { MouseEventHandler, memo } from 'react';\n\nimport { type ActionListProps } from '@hh.ru/magritte-ui-action-list';\nimport { BottomSheet, BottomSheetHeight } from '@hh.ru/magritte-ui-bottom-sheet';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { Drop } from '@hh.ru/magritte-ui-drop';\n\nexport const ActionList = memo<ActionListProps>(({ children, dropProps, bottomSheetProps, ...commonProps }) => {\n    const { isMobile: isBottomSheetMode } = useBreakpoint();\n\n    const dropClickHandler: MouseEventHandler<HTMLDivElement> = (event) => {\n        const target = event.target as Element;\n        const currentTarget = event.currentTarget as Element;\n        const isClickOnButton = currentTarget.contains(target.closest('button, [role=\"button\"]'));\n\n        if (isClickOnButton) {\n            /** Требование из спецификации компонента: при клике по Button, находящейся в Drop, возвращаем фокус на активатор */\n            dropProps.activatorRef?.current?.focus();\n        }\n    };\n\n    if (isBottomSheetMode) {\n        return (\n            <BottomSheet {...bottomSheetProps} {...commonProps} height={BottomSheetHeight.Content}>\n                {children}\n            </BottomSheet>\n        );\n    }\n\n    return (\n        <Drop {...dropProps} {...commonProps} space={400} arrowNavigation onClick={dropClickHandler}>\n            {children}\n        </Drop>\n    );\n});\n\nActionList.displayName = 'ActionList';\n","import { ButtonHTMLAttributes, forwardRef } from 'react';\nimport classnames from 'classnames';\n\nimport '@hh.ru/magritte-common-focus-visible';\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { ActionProps, ActionMode, ActionStyle } from '@hh.ru/magritte-ui-action/types';\n\nimport styles from './action.less';\n\nexport const Action = forwardRef<\n    HTMLButtonElement,\n    ActionProps & Omit<ButtonHTMLAttributes<HTMLButtonElement>, keyof ActionProps | 'type' | 'aria-disabled'>\n>(\n    (\n        {\n            style = ActionStyle.Neutral,\n            mode = ActionMode.Primary,\n            icon,\n            showBackground,\n            onClick,\n            disabled,\n            disablePadding = false,\n            ...rest\n        },\n        ref\n    ) => {\n        const IconComponent = icon;\n        const forceDisabled = useDisabled();\n        const isComponentDisabled = !!disabled || forceDisabled;\n\n        return (\n            <button\n                {...rest}\n                ref={ref}\n                type=\"button\"\n                onClick={onClick}\n                className={classnames(styles.action, styles[`action_mode-${mode}`], styles[`action_style-${style}`], {\n                    [styles['action_show-background']]: !!showBackground && !disablePadding,\n                    [styles['action_disable-padding']]: disablePadding,\n                })}\n                disabled={isComponentDisabled}\n            >\n                <IconComponent />\n            </button>\n        );\n    }\n);\n\nAction.displayName = 'Action';\n","import { EventHandler, MouseEvent } from 'react';\n\nimport { type IconWrapperComponentSize24, type IconWrapperComponentSize16 } from '@hh.ru/magritte-ui-icon/iconTypes';\n\nexport enum ActionMode {\n    Primary = 'primary',\n    Secondary = 'secondary',\n}\n\nexport enum ActionStyle {\n    Neutral = 'neutral',\n    Accent = 'accent',\n    Negative = 'negative',\n    Contrast = 'contrast',\n}\n\nexport interface ActionProps {\n    /** Режим заливки цветом */\n    mode?: ActionMode;\n    /** Стиль отображения компонента */\n    style?: ActionStyle;\n    /** Флаг отключения */\n    disabled?: boolean;\n    /** Обработчик события клика (активации) */\n    onClick: EventHandler<MouseEvent>;\n    /** Компонент иконки */\n    icon: IconWrapperComponentSize24 | IconWrapperComponentSize16;\n    /** Флаг отображения фона */\n    showBackground?: boolean;\n    /** Флаг отключения паддингов */\n    disablePadding?: boolean;\n}\n","import { FC, useCallback } from 'react';\nimport classnames from 'classnames';\n\nimport { DisabledContext } from '@hh.ru/magritte-common-use-disabled';\nimport { Action, ActionMode, ActionStyle } from '@hh.ru/magritte-ui-action';\nimport { BannerProps } from '@hh.ru/magritte-ui-banner/types';\nimport { Card } from '@hh.ru/magritte-ui-card';\nimport type { CardPadding, CardBorderRadius } from '@hh.ru/magritte-ui-card/types';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\n\nimport styles from './banner.less';\n\nexport const Banner: FC<BannerProps> = ({\n    stretched = false,\n    showBorder = false,\n    style,\n    disabled = false,\n    styleClose = ActionStyle.Neutral,\n    content,\n    showClose = true,\n    visible = true,\n    onClose,\n    title,\n    buttonBase,\n    buttonAdditional,\n    'aria-label-close': ariaLabelClose,\n}) => {\n    const handleClose = useCallback(() => {\n        onClose?.();\n    }, [onClose]);\n\n    const cardProps = {\n        stretched,\n        showBorder,\n        padding: 16 as CardPadding,\n        paddingRight: 16 as CardPadding,\n        borderRadius: 16 as CardBorderRadius,\n        borderRadiusBottomLeft: buttonBase || buttonAdditional ? (24 as CardBorderRadius) : (16 as CardBorderRadius),\n        borderRadiusBottomRight: buttonBase || buttonAdditional ? (24 as CardBorderRadius) : (16 as CardBorderRadius),\n    };\n\n    if (style !== undefined) {\n        Object.assign(cardProps, { style });\n    }\n\n    return (\n        <>\n            {visible && (\n                <DisabledContext.Provider value={disabled}>\n                    <Card {...cardProps}>\n                        <div\n                            className={classnames(styles.bannerContent, {\n                                [styles.bannerContentPadding]: showClose,\n                            })}\n                        >\n                            {title && (\n                                <>\n                                    {title}\n                                    <div className={styles.bannerTitlePadding}></div>\n                                </>\n                            )}\n                            {showClose && (\n                                <div className={styles.bannerClose}>\n                                    <Action\n                                        aria-label={ariaLabelClose}\n                                        icon={CrossOutlinedSize24}\n                                        mode={ActionMode.Secondary}\n                                        onClick={handleClose}\n                                        style={styleClose}\n                                        data-qa=\"banner-close\"\n                                    />\n                                </div>\n                            )}\n                            {content}\n                            {(buttonBase || buttonAdditional) && (\n                                <div className={styles.bannerButtonContainer}>\n                                    {buttonBase}\n                                    {buttonAdditional}\n                                </div>\n                            )}\n                        </div>\n                    </Card>\n                </DisabledContext.Provider>\n            )}\n        </>\n    );\n};\n","import {\n    Children,\n    DOMAttributes,\n    FC,\n    Fragment,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n    cloneElement,\n    isValidElement,\n    memo,\n} from 'react';\n\ntype InterceptedProps = Pick<\n    DOMAttributes<HTMLElement>,\n    'onClick' | 'onPointerDown' | 'onPointerCancel' | 'onPointerLeave' | 'onPointerUp'\n>;\n\nconst CLICK_DISTANCE_THRESHOLD_PX = 24;\n\nconst interceptClick = (node: ReactElement<InterceptedProps>) => {\n    const props: InterceptedProps = {};\n\n    if (node.props.onClick) {\n        let click = false;\n        let coordinates: { x: number; y: number } | null = null;\n        props.onClick = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n        props.onPointerDown = (event) => {\n            click = true;\n            coordinates = { x: event.pageX, y: event.pageY };\n            node.props.onPointerDown?.(event);\n        };\n        props.onPointerCancel = (event) => {\n            click = false;\n            node.props.onPointerCancel?.(event);\n        };\n        props.onPointerLeave = (event) => {\n            click = false;\n            node.props.onPointerLeave?.(event);\n        };\n        props.onPointerUp = (event) => {\n            if (click) {\n                if (\n                    coordinates !== null &&\n                    Math.pow(event.pageX - coordinates.x, 2) + Math.pow(event.pageY - coordinates.y, 2) <=\n                        Math.pow(CLICK_DISTANCE_THRESHOLD_PX, 2)\n                ) {\n                    node.props.onClick?.(event as MouseEvent<HTMLElement>);\n                }\n                click = false;\n                coordinates = null;\n            }\n            node.props.onPointerUp?.(event);\n        };\n    }\n\n    return cloneElement(node, props);\n};\n\nconst applyInterceptor = (node: ReactNode, func: (node: ReactElement) => ReactElement): ReactElement => {\n    if (!isValidElement(node)) {\n        return <Fragment>{node}</Fragment>;\n    }\n\n    let children;\n    ((props) => {\n        if (props.children) {\n            children =\n                props.children.length === 1\n                    ? applyInterceptor(Children.only(props.children), func)\n                    : Children.map(props.children, (child) => applyInterceptor(child, func));\n        }\n    })(node.props as { children: ReactNode[] });\n\n    return cloneElement(func(node), {}, children);\n};\n\nexport interface ClickInterceptorProps {\n    children: ReactNode;\n}\n\nexport const ClickInterceptor: FC<ClickInterceptorProps> = memo(({ children }) => {\n    return applyInterceptor(children, interceptClick);\n});\n\nClickInterceptor.displayName = 'ClickInterceptor';\n","import { FocusEventHandler, useCallback, useEffect, useLayoutEffect, useRef, useState, forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Transition, TransitionStatus } from 'react-transition-group';\nimport classnames from 'classnames';\n\nimport { disableOverscroll, disableScroll } from '@hh.ru/magritte-common-modal-helper';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { useSwipe, SwipeAxis, SwipeEventHandler } from '@hh.ru/magritte-common-use-swipe';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { ClickInterceptor } from '@hh.ru/magritte-ui-bottom-sheet/ClickInterceptor';\nimport { BottomSheetProps, BottomSheetHeight, BottomSheetShowDivider } from '@hh.ru/magritte-ui-bottom-sheet/types';\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\nimport {\n    NavigationBarContext,\n    type NavigationBarContextProps,\n    NavigationBarSize,\n} from '@hh.ru/magritte-ui-navigation-bar';\n\nimport styles from './bottom-sheet.less';\n\nconst CSS_VAR_INITIAL_VIEWPORT_HEIGHT = '--initial-viewport-height';\nconst CSS_VAR_ENTER_ANIMATION_DURATION = '--enter-animation-duration';\nconst CSS_VAR_EXIT_ANIMATION_DURATION = '--exit-animation-duration';\nconst CSS_VAR_HEIGHT_ANIMATION_DURATION = '--height-transition-duration';\nconst CSS_VAR_OVERLAY_OPACITY = '--overlay-opacity';\nconst CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET = '--virtual-keyboard-top-offset';\nconst CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET = '--virtual-keyboard-bottom-offset';\n\nconst INITIAL_VIEWPORT_HEIGHT = (typeof window !== 'undefined' ? window.visualViewport?.height : null) ?? 0;\nconst NAVIGATION_BAR_SIZE_OVERRIDE: NavigationBarContextProps = { size: NavigationBarSize.Standard };\nconst SWIPE_THRESHOLD_REF = { current: { max: Math.round(INITIAL_VIEWPORT_HEIGHT * 0.8) } };\n\nconst forceRepaint = (node: HTMLElement) => node.scrollTop;\n\nconst toNumber = (value: string) => {\n    const result = parseInt(value, 10);\n    return Number.isInteger(result) ? result : 0;\n};\n\ntype AnimationTimeout = { [AnimationType in 'appear' | 'height']: { [AnimationStage in 'enter' | 'exit']: number } };\n\ntype LayoutMetrics = {\n    documentHeight: number;\n    fillHeight: number;\n    grabberSpacing: number;\n    viewportShift: number;\n};\n\ntype BottomSheetState = {\n    grabber: 'sticky' | 'sticky-inside' | 'fake-sticky' | 'fixed';\n    hasFocus: boolean;\n    isSwipeEnabled: boolean;\n    isSwipeInProgress: boolean;\n    swipeOffset: number;\n    resizeRAFHandle: ReturnType<typeof requestAnimationFrame> | null;\n    virtualKeyboardHeight: number;\n};\n\nexport const BottomSheet = forwardRef<HTMLElement, BottomSheetProps>(\n    (\n        {\n            allowScrollWhileFocused,\n            children,\n            footer,\n            header,\n            height = BottomSheetHeight.Content,\n            interceptClickHandlers = true,\n            keyboardOverlaysContent = true,\n            onAppear,\n            onBeforeExit,\n            onClose,\n            showDivider = BottomSheetShowDivider.AlwaysIfHasScroll,\n            showOverlay = true,\n            visible = false,\n        },\n        ref\n    ) => {\n        const contentRef = useRef<HTMLDivElement | null>(null);\n        const cssVariablesContainerRef = useRef<HTMLDivElement | null>(null);\n        const fixedGrabberRef = useRef<HTMLDivElement | null>(null);\n        const footerRef = useRef<HTMLDivElement | null>(null);\n        const headerRef = useRef<HTMLDivElement | null>(null);\n        const heightTransitionElementRef = useRef<HTMLDivElement | null>(null);\n        const scrollContainerRef = useRef<HTMLDivElement | null>(null);\n        const stickyGrabberRef = useRef<HTMLDivElement | null>(null);\n        const scrollContainerRefMulti = useMultipleRefs(scrollContainerRef, ref);\n\n        const layoutMetricsRef = useRef<LayoutMetrics>({\n            documentHeight: 0,\n            fillHeight: 0,\n            grabberSpacing: 0,\n            viewportShift: 0,\n        });\n\n        const prevPropsRef = useRef<{\n            children: typeof children;\n            height: typeof height;\n            visible: typeof visible;\n        }>({ children, height, visible });\n\n        const stateRef = useRef<BottomSheetState>({\n            grabber: 'sticky',\n            hasFocus: false,\n            isSwipeEnabled: false,\n            isSwipeInProgress: false,\n            swipeOffset: 0,\n            resizeRAFHandle: null,\n            virtualKeyboardHeight: 0,\n        });\n\n        const [animationTimeout, setAnimationTimeout] = useState<AnimationTimeout | null>(null);\n        const [heightDiff, setHeightDiff] = useState<number | null>(null);\n        const [isDividerVisible, setDividerVisible] = useState(false);\n        const [onCloseContractCheck, setOnCloseContractCheck] = useState(false);\n\n        const setCSSVariable = (name: string, value: string) =>\n            cssVariablesContainerRef.current !== null &&\n            cssVariablesContainerRef.current.style.setProperty(name, value);\n\n        useEffect(() => {\n            if (!visible) {\n                return void 0;\n            }\n\n            layoutMetricsRef.current.documentHeight = document.documentElement.clientHeight;\n\n            if (!showOverlay) {\n                const enableOverscroll = disableOverscroll();\n                return enableOverscroll;\n            }\n\n            const enableScroll = disableScroll();\n            return enableScroll;\n        }, [showOverlay, visible]);\n\n        useEffect(() => {\n            const animationTimeoutElement = document.createElement('div');\n            animationTimeoutElement.classList.add(styles.animationTimeout);\n            document.body.appendChild(animationTimeoutElement);\n            const style = window.getComputedStyle(animationTimeoutElement);\n            const enter = toNumber(style.getPropertyValue(CSS_VAR_ENTER_ANIMATION_DURATION));\n            const exit = toNumber(style.getPropertyValue(CSS_VAR_EXIT_ANIMATION_DURATION));\n            const height = toNumber(style.getPropertyValue(CSS_VAR_HEIGHT_ANIMATION_DURATION));\n            document.body.removeChild(animationTimeoutElement);\n            setAnimationTimeout({ appear: { enter, exit }, height: { enter: height, exit } });\n        }, [setAnimationTimeout]);\n\n        // Пересчитывает флаги отображения граббера и дивайдера в зависимости от скролла\n        const recalcScrollFlags = useCallback(() => {\n            // расчет состояния граббера в зависимости от того, проскроллен ли контент до верхней границы вьюпорта\n            requestAnimationFrame(() => {\n                if (fixedGrabberRef.current !== null && stickyGrabberRef.current !== null) {\n                    const stickyGrabberDOMRect = stickyGrabberRef.current.getBoundingClientRect();\n                    const grabberTop = Math.round(stickyGrabberDOMRect.top);\n\n                    if (grabberTop >= layoutMetricsRef.current.grabberSpacing * 2 || heightDiff !== null) {\n                        if (stateRef.current.grabber !== 'sticky') {\n                            stateRef.current.grabber = 'sticky';\n                            stickyGrabberRef.current.classList.remove(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.remove(styles.grabberFixed, styles.grabberFakeSticky);\n                            fixedGrabberRef.current.style.top = ``;\n                        }\n                    } else if (grabberTop > layoutMetricsRef.current.grabberSpacing) {\n                        if (stateRef.current.grabber !== 'fake-sticky') {\n                            stateRef.current.grabber = 'fake-sticky';\n                            stickyGrabberRef.current.classList.add(styles.grabberInvisible);\n                            fixedGrabberRef.current.classList.add(styles.grabberFakeSticky);\n                            fixedGrabberRef.current.classList.remove(styles.grabberSticky, styles.grabberInvisible);\n                        }\n                        fixedGrabberRef.current.style.top = `${grabberTop + layoutMetricsRef.current.viewportShift}px`;\n                    } else if (stateRef.current.grabber !== 'fixed') {\n                        stateRef.current.grabber = 'fixed';\n                        stickyGrabberRef.current.classList.add(styles.grabberInvisible);\n                        fixedGrabberRef.current.classList.add(styles.grabberFixed);\n                        fixedGrabberRef.current.classList.remove(styles.grabberFakeSticky, styles.grabberInvisible);\n                        fixedGrabberRef.current.style.top = ``;\n                    }\n                }\n            });\n\n            // расчет того, нужно ли показывать дивайдер, в зависимости от того, проскроллен ли контент до конца\n            if (contentRef.current !== null && scrollContainerRef.current !== null) {\n                if (\n                    footer &&\n                    (showDivider === BottomSheetShowDivider.AlwaysIfHasScroll ||\n                        showDivider === BottomSheetShowDivider.IfNotScrolledToEnd)\n                ) {\n                    const hasScroll = contentRef.current.clientHeight > scrollContainerRef.current.clientHeight + 1;\n                    const isScrolledToContentEnd =\n                        Math.round(scrollContainerRef.current.scrollTop + scrollContainerRef.current.clientHeight) ===\n                        scrollContainerRef.current.scrollHeight;\n                    setDividerVisible(\n                        (showDivider === BottomSheetShowDivider.AlwaysIfHasScroll && hasScroll) ||\n                            (showDivider === BottomSheetShowDivider.IfNotScrolledToEnd &&\n                                hasScroll &&\n                                !isScrolledToContentEnd)\n                    );\n                }\n            }\n        }, [footer, heightDiff, setDividerVisible, showDivider]);\n\n        const resetScrollFlags = useCallback(() => {\n            if (fixedGrabberRef.current !== null && stickyGrabberRef.current !== null) {\n                stateRef.current.grabber = 'sticky';\n\n                fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                fixedGrabberRef.current.classList.remove(styles.grabberTransitionAnimation);\n\n                stickyGrabberRef.current.classList.remove(styles.grabberInvisible);\n            }\n\n            setDividerVisible(false);\n        }, [setDividerVisible]);\n\n        const resetHeightDiff = useCallback(() => setHeightDiff(null), [setHeightDiff]);\n\n        useEffect(() => {\n            const meta = document.querySelector('meta[name=\"viewport\"]') ?? document.createElement('meta');\n            const attributesStr = meta.getAttribute('content');\n            const attributes = (\n                attributesStr !== null\n                    ? Object.fromEntries(attributesStr.split(',').map((keyValuePairStr) => keyValuePairStr.split('=')))\n                    : {}\n            ) as Record<string, string>;\n            attributes['interactive-widget'] = keyboardOverlaysContent ? 'resizes-visual' : 'resizes-content';\n            const attributesStrUpdated = Object.entries(attributes)\n                .map((keyValuePair) => keyValuePair.join('='))\n                .join(',');\n            meta.setAttribute('name', 'viewport');\n            meta.setAttribute('content', attributesStrUpdated);\n        }, [keyboardOverlaysContent]);\n\n        const recalcKeyboardOffsets = useCallback(() => {\n            if (!headerRef.current || !scrollContainerRef.current || !visualViewport) {\n                return;\n            }\n\n            if (stateRef.current.hasFocus) {\n                // терминология: https://developer.chrome.com/blog/viewport-resize-behavior/\n                //\n                // делим браузеры на три группы в зависимости от поведения при открытии виртуальной клавиатуры:\n                // 1. Safari — ресайзит Visual Viewport, не меняет Layout Viewport.\n                //    В нем не нужно ничего корректировать при keyboardOverlaysContent=true,\n                //    а при keyboardOverlaysContent=false нужно сдвинуть НИЖНИЙ край контейнера ВВЕРХ,\n                //    чтобы он совпал с границей Visual Viewport\n                // 2. Chrome < 108 & Chromium-based — ресайзит и Visual Viewport, и Layout Viewport\n                //    В нем не нужно ничего корректировать при keyboardOverlaysContent=false,\n                //    а при keyboardOverlaysContent=true нужно сдвинуть НИЖНИЙ край контейнера ВНИЗ,\n                //    чтобы футер уехал под клавиатуру\n                // 3. Chrome >= 108 — поддерживает Virtual Keyboard API и meta-тег interactive-widget\n                //    Используем поведение `resizes-visual` (как в Safari) в случае keyboardOverlaysContent=true\n                //    и `resizes-content` (как в Chrome < 108 & Chromium-based) в случае keyboardOverlaysContent=false\n                //    Таким образом в нем ничего не нужно корректировать.\n\n                const scrollContainerDOMREct = scrollContainerRef.current.getBoundingClientRect();\n\n                // любой браузер может сдвинуть Visual Viewport вверх, если фокусируемый инпут находится близко к нижней границе\n                // из-за этого может возникнуть проблема, что ВЕРХНИЙ край контента уехал за границу Visual Viewport\n                // сдвигаем ВЕРХНИЙ край контейнера ВНИЗ, чтобы он совпал с границей Visual Viewport\n                const visualViewportShift = Math.round(\n                    layoutMetricsRef.current.grabberSpacing - scrollContainerDOMREct.top\n                );\n\n                // запоминаем сдвиг для коррекции позиции граббера\n                layoutMetricsRef.current.viewportShift = visualViewportShift;\n\n                // клавиатура ПОВЕРХ контента\n                // этот кейс нужно корректировать только в Chrome < 108 & Chromium-based\n                if (keyboardOverlaysContent) {\n                    // браузеры из этой группы меняют Layout Viewport\n                    const layoutViewportDiff = Math.round(\n                        layoutMetricsRef.current.documentHeight - document.documentElement.clientHeight\n                    );\n                    if (layoutViewportDiff > 0) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `${visualViewportShift}px`);\n                        // сдвигаем НИЖНИЙ край контейнера ВНИЗ, чтобы футер уехал под клавиатуру\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `${-layoutViewportDiff}px`);\n\n                        // при этом может возникнуть проблема, что клавиатура перекрыла хедер\n                        // проверяем это и компенсируем величину перекрытия при необходимости\n                        const headerDOMRect = headerRef.current.getBoundingClientRect();\n                        const headerOutOfViewportHeight = Math.round(\n                            headerDOMRect.bottom + layoutViewportDiff - layoutMetricsRef.current.documentHeight\n                        );\n                        if (headerOutOfViewportHeight > 0) {\n                            setCSSVariable(\n                                CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET,\n                                `${headerOutOfViewportHeight - layoutViewportDiff}px`\n                            );\n                        }\n                    }\n                } else {\n                    // клавиатура ПОД контентом\n                    // этот кейс нужно корректировать только в Safari\n\n                    // Safari ресайзит Visual Viewport\n                    const visualViewportDiff = Math.round(scrollContainerDOMREct.bottom - visualViewport.height);\n                    if (visualViewportDiff > 0) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `${visualViewportShift}px`);\n                        // сдвигаем НИЖНИЙ край контейнера ВВЕРХ, чтобы он совпал с границей Visual Viewport\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `${visualViewportDiff}px`);\n                    }\n                }\n            } else {\n                setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n                setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n            }\n        }, [keyboardOverlaysContent]);\n\n        const handleFocus: FocusEventHandler = useCallback(\n            (event) => {\n                if (!scrollContainerRef.current) {\n                    return;\n                }\n\n                const focusedElement = event.target;\n                const initialViewportHeight = visualViewport?.height;\n                const resizeRAFStart = performance.now();\n\n                if (!(focusedElement instanceof HTMLInputElement) || stateRef.current.resizeRAFHandle !== null) {\n                    return;\n                }\n\n                const handleResize = () => {\n                    if (stateRef.current.resizeRAFHandle !== null) {\n                        cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n                        stateRef.current.resizeRAFHandle = null;\n                    }\n                    recalcKeyboardOffsets();\n                };\n\n                const waitForResize = () => {\n                    if (performance.now() - resizeRAFStart > 1000 || visualViewport?.height !== initialViewportHeight) {\n                        visualViewport?.removeEventListener('resize', handleResize);\n                        stateRef.current.resizeRAFHandle = null;\n                        recalcKeyboardOffsets();\n                    } else {\n                        stateRef.current.resizeRAFHandle = requestAnimationFrame(waitForResize);\n                    }\n                };\n\n                const handleBlur = () => {\n                    if (!scrollContainerRef.current) {\n                        return;\n                    }\n\n                    focusedElement.removeEventListener('blur', handleBlur);\n                    stateRef.current.hasFocus = false;\n                    scrollContainerRef.current.classList.remove(\n                        styles.scrollContainerNoScroll,\n                        styles.virtualKeyboardAnimation\n                    );\n\n                    if (!('requestIdleCallback' in window)) {\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n                        setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n                    }\n\n                    if (stateRef.current.resizeRAFHandle !== null) {\n                        cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n                        stateRef.current.resizeRAFHandle = null;\n                    }\n                    visualViewport?.removeEventListener('resize', handleResize);\n                };\n\n                focusedElement.addEventListener('blur', handleBlur);\n                stateRef.current.hasFocus = true;\n                if (!allowScrollWhileFocused) {\n                    scrollContainerRef.current.classList.add(styles.scrollContainerNoScroll);\n                }\n                scrollContainerRef.current.classList.add(styles.virtualKeyboardAnimation);\n\n                stateRef.current.resizeRAFHandle = requestAnimationFrame(waitForResize);\n                visualViewport?.addEventListener('resize', handleResize);\n            },\n            [allowScrollWhileFocused, recalcKeyboardOffsets]\n        );\n\n        // Запускает анимацию translateY для показа/скрытия боттомшита или изменения высоты контента\n        const runTranslateYAnimation = useCallback(() => {\n            if (\n                !contentRef.current ||\n                !footerRef.current ||\n                !heightTransitionElementRef.current ||\n                !scrollContainerRef.current ||\n                !visualViewport\n            ) {\n                return;\n            }\n\n            if (heightDiff !== null) {\n                if (heightDiff > 0) {\n                    contentRef.current.style.transform = `translateY(${heightDiff}px)`;\n                    footerRef.current.style.transform = `translateY(${-heightDiff}px)`;\n                } else {\n                    heightTransitionElementRef.current.style.flexBasis = `${-heightDiff}px`;\n                }\n            } else {\n                const contentDOMREct = contentRef.current.getBoundingClientRect();\n                const translateY =\n                    scrollContainerRef.current.clientHeight + stateRef.current.swipeOffset - contentDOMREct.top;\n                contentRef.current.style.transform = `translateY(${translateY}px)`;\n                setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `0`);\n            }\n\n            forceRepaint(scrollContainerRef.current);\n        }, [heightDiff]);\n\n        const resetTranslateY = useCallback(() => {\n            if (\n                !contentRef.current ||\n                !footerRef.current ||\n                !heightTransitionElementRef.current ||\n                !scrollContainerRef.current\n            ) {\n                return;\n            }\n\n            if (heightDiff !== null) {\n                contentRef.current.style.transform = ``;\n                footerRef.current.style.transform = ``;\n                heightTransitionElementRef.current.style.flexBasis = ``;\n            } else {\n                contentRef.current.style.transform = `translateY(${stateRef.current.swipeOffset}px)`;\n                setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `1`);\n            }\n\n            forceRepaint(scrollContainerRef.current);\n        }, [heightDiff]);\n\n        const handleAppearAnimationEnd = useCallback(() => {\n            recalcScrollFlags();\n            onAppear?.();\n        }, [onAppear, recalcScrollFlags]);\n\n        const handleExitAnimationStart = useCallback(() => {\n            resetTranslateY();\n            onBeforeExit?.();\n        }, [resetTranslateY, onBeforeExit]);\n\n        const handleExitAnimationEnd = useCallback(() => {\n            stateRef.current.grabber = 'sticky';\n            stateRef.current.hasFocus = false;\n            stateRef.current.isSwipeEnabled = false;\n            stateRef.current.isSwipeInProgress = false;\n            stateRef.current.swipeOffset = 0;\n            stateRef.current.resizeRAFHandle !== null && cancelAnimationFrame(stateRef.current.resizeRAFHandle);\n            stateRef.current.resizeRAFHandle = null;\n\n            layoutMetricsRef.current.fillHeight = 0;\n            layoutMetricsRef.current.grabberSpacing = 0;\n\n            setCSSVariable(CSS_VAR_OVERLAY_OPACITY, `1`);\n            setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET, `0px`);\n            setCSSVariable(CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET, `0px`);\n\n            if (fixedGrabberRef.current !== null) {\n                fixedGrabberRef.current.classList.add(styles.grabberInvisible);\n                fixedGrabberRef.current.classList.remove(styles.grabberFixed, styles.grabberFakeSticky);\n                fixedGrabberRef.current.style.transform = ``;\n            }\n\n            if (scrollContainerRef.current !== null) {\n                scrollContainerRef.current.classList.remove(\n                    styles.scrollContainerNoScroll,\n                    styles.virtualKeyboardAnimation\n                );\n            }\n\n            resetScrollFlags();\n            setOnCloseContractCheck(false);\n        }, [resetScrollFlags, setOnCloseContractCheck]);\n\n        const handleClose = useCallback(() => {\n            onClose();\n            setOnCloseContractCheck(true);\n        }, [onClose, setOnCloseContractCheck]);\n\n        const handleSwipeStart: SwipeEventHandler = useCallback(() => {\n            if (!scrollContainerRef.current) {\n                return;\n            }\n\n            if (Object.is(Math.round(scrollContainerRef.current.scrollTop), 0)) {\n                stateRef.current.isSwipeEnabled = true;\n                stateRef.current.swipeOffset = 0;\n            }\n        }, []);\n\n        const handleSwipeMove: SwipeEventHandler = useCallback(\n            (event) => {\n                if (!contentRef.current || !stateRef.current.isSwipeEnabled || !scrollContainerRef.current) {\n                    return;\n                }\n\n                const selection = document.getSelection();\n                if (selection && !selection.isCollapsed) {\n                    return;\n                }\n\n                if (event.distance > 0) {\n                    contentRef.current.style.transform = `translateY(${event.distance}px)`;\n                    if (!stateRef.current.isSwipeInProgress) {\n                        stateRef.current.isSwipeInProgress = true;\n                    }\n                    recalcScrollFlags();\n                } else {\n                    contentRef.current.style.transform = ``;\n                    stateRef.current.isSwipeEnabled = false;\n                    stateRef.current.isSwipeInProgress = false;\n                }\n\n                stateRef.current.swipeOffset = event.distance;\n            },\n            [recalcScrollFlags]\n        );\n\n        const handleSwipeCancel: SwipeEventHandler = useCallback(() => {\n            if (!contentRef.current || !scrollContainerRef.current) {\n                return;\n            }\n\n            if (stateRef.current.isSwipeEnabled && stateRef.current.isSwipeInProgress) {\n                contentRef.current.style.transform = ``;\n            }\n\n            stateRef.current.isSwipeEnabled = false;\n            stateRef.current.isSwipeInProgress = false;\n            stateRef.current.swipeOffset = 0;\n\n            recalcScrollFlags();\n        }, [recalcScrollFlags]);\n\n        const handleSwipeEnd: SwipeEventHandler = useCallback(\n            (event) => {\n                if (stateRef.current.isSwipeEnabled && stateRef.current.isSwipeInProgress) {\n                    handleClose();\n                } else {\n                    handleSwipeCancel(event);\n                }\n            },\n            [handleClose, handleSwipeCancel]\n        );\n\n        const swipeHandlers = useSwipe({\n            axis: SwipeAxis.Vertical,\n            thresholdRef: SWIPE_THRESHOLD_REF,\n            onSwipeStart: handleSwipeStart,\n            onSwipeMove: handleSwipeMove,\n            onSwipeEnd: handleSwipeEnd,\n            onSwipeCancel: handleSwipeCancel,\n        });\n\n        useLayoutEffect(() => {\n            if (!contentRef.current || !scrollContainerRef.current || !visualViewport) {\n                return;\n            }\n\n            if (visible) {\n                stateRef.current.grabber = contentRef.current.offsetTop > 0 ? 'sticky' : 'sticky-inside';\n                if (visible !== prevPropsRef.current.visible) {\n                    layoutMetricsRef.current.fillHeight = contentRef.current.offsetTop;\n                    layoutMetricsRef.current.grabberSpacing = scrollContainerRef.current.offsetTop;\n\n                    setCSSVariable(CSS_VAR_INITIAL_VIEWPORT_HEIGHT, `${INITIAL_VIEWPORT_HEIGHT}px`);\n                } else if (children !== prevPropsRef.current.children || height !== prevPropsRef.current.height) {\n                    const scrollTop = scrollContainerRef.current.scrollTop;\n                    scrollContainerRef.current.scrollTo({ top: 0 });\n\n                    const _heightDiff = layoutMetricsRef.current.fillHeight - contentRef.current.offsetTop;\n                    layoutMetricsRef.current.fillHeight = contentRef.current.offsetTop;\n                    if (_heightDiff !== 0 && !stateRef.current.hasFocus) {\n                        setHeightDiff(_heightDiff);\n                    }\n\n                    scrollContainerRef.current.scrollTo({ top: scrollTop });\n                }\n            }\n\n            prevPropsRef.current = { ...prevPropsRef.current, children, height, visible };\n        }, [children, height, setHeightDiff, visible]);\n\n        if (onCloseContractCheck && visible) {\n            console.error('onClose did not set visible=false', Date.now());\n        }\n\n        if (!animationTimeout) {\n            return null;\n        }\n\n        const renderFunc = (appearTransition: TransitionStatus, heightTransition: TransitionStatus) => (\n            <Layer layer={InternalLayerName.BottomSheet}>\n                <div\n                    className={classnames(styles.overlay, {\n                        [styles.overlayInvisible]:\n                            !showOverlay || (showOverlay && appearTransition !== 'exiting' && !visible),\n                    })}\n                    data-qa=\"bottom-sheet-overlay\"\n                >\n                    <div\n                        className={classnames(styles.overlayBackground, {\n                            [styles.appearAnimation]: appearTransition === 'entering',\n                            [styles.disappearAnimation]: appearTransition === 'exiting',\n                        })}\n                    />\n                    <div\n                        className={classnames(styles.scrollContainer, {\n                            [styles.scrollContainerNoScroll]: !allowScrollWhileFocused && stateRef.current.hasFocus,\n                            [styles.virtualKeyboardAnimation]: stateRef.current.hasFocus,\n                        })}\n                        data-qa=\"bottom-sheet-container\"\n                        onScroll={recalcScrollFlags}\n                        ref={scrollContainerRefMulti}\n                    >\n                        <div\n                            className={classnames(styles.fill, {\n                                [styles.fillFullScreen]: height === BottomSheetHeight.FullScreen,\n                                [styles.fillHalfScreen]: height === BottomSheetHeight.HalfScreen,\n                            })}\n                            data-qa=\"bottom-sheet-fill\"\n                            onClick={handleClose}\n                        />\n                        <div\n                            className={classnames(styles.grabber, styles.grabberTransitionAnimation, {\n                                [styles.grabberInvisible]:\n                                    appearTransition !== 'entered' || heightTransition !== 'exited',\n                                [styles.grabberFixed]:\n                                    stateRef.current.grabber === 'fixed' ||\n                                    stateRef.current.grabber === 'sticky-inside',\n                                [styles.grabberFakeSticky]: stateRef.current.grabber === 'fake-sticky',\n                            })}\n                            ref={fixedGrabberRef}\n                        />\n                        <div\n                            className={classnames(styles.content, {\n                                [styles.appearAnimation]: appearTransition === 'entering',\n                                [styles.closeBySwipeAnimation]:\n                                    appearTransition === 'exiting' && stateRef.current.isSwipeInProgress,\n                                [styles.contentFullScreen]: height === BottomSheetHeight.FullScreen,\n                                [styles.disappearAnimation]: appearTransition === 'exiting',\n                                [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                            })}\n                            data-qa=\"bottom-sheet-content\"\n                            ref={contentRef}\n                            {...swipeHandlers}\n                        >\n                            <div\n                                className={classnames(styles.grabber, styles.grabberSticky, {\n                                    [styles.grabberStickyInside]:\n                                        appearTransition === 'entering' && stateRef.current.grabber === 'sticky-inside',\n                                })}\n                                ref={stickyGrabberRef}\n                            />\n                            <div className={styles.visualContainer}>\n                                <div className={styles.header} onFocus={handleFocus} ref={headerRef}>\n                                    <NavigationBarContext.Provider value={NAVIGATION_BAR_SIZE_OVERRIDE}>\n                                        {header}\n                                    </NavigationBarContext.Provider>\n                                </div>\n                                <div className={classnames(styles.main, { [styles.mainWithoutHeader]: !header })}>\n                                    {children}\n                                </div>\n                                <div\n                                    className={classnames(styles.heightTransitionElement, {\n                                        [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                                    })}\n                                    ref={heightTransitionElementRef}\n                                />\n                                <div\n                                    className={classnames(styles.footer, {\n                                        [styles.heightTransitionAnimation]: heightTransition === 'entering',\n                                    })}\n                                    ref={footerRef}\n                                >\n                                    {isDividerVisible && <Divider />}\n                                    {interceptClickHandlers ? <ClickInterceptor>{footer}</ClickInterceptor> : footer}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Layer>\n        );\n\n        return createPortal(\n            <div\n                className={styles.cssVariablesContainer}\n                data-qa=\"bottom-sheet-css-variables\"\n                ref={cssVariablesContainerRef}\n            >\n                <Transition\n                    appear\n                    in={visible}\n                    mountOnEnter\n                    onEnter={runTranslateYAnimation}\n                    onEntering={resetTranslateY}\n                    onEntered={handleAppearAnimationEnd}\n                    onExit={handleExitAnimationStart}\n                    onExiting={runTranslateYAnimation}\n                    onExited={handleExitAnimationEnd}\n                    timeout={animationTimeout.appear}\n                    unmountOnExit\n                >\n                    {(appearTransition) => (\n                        <Transition\n                            in={heightDiff !== null}\n                            onEnter={runTranslateYAnimation}\n                            onEntering={resetTranslateY}\n                            onEntered={resetHeightDiff}\n                            onExited={recalcScrollFlags}\n                            timeout={animationTimeout.height}\n                        >\n                            {(heightTransition) => renderFunc(appearTransition, heightTransition)}\n                        </Transition>\n                    )}\n                </Transition>\n            </div>,\n            document.body\n        );\n    }\n);\n\nBottomSheet.displayName = 'BottomSheet';\n","import { ReactNode } from 'react';\n\nexport enum BottomSheetHeight {\n    /** Bottom Sheet принимает высоту контента */\n    Content = 'content',\n    /** Bottom Sheet всегда занимает весь вьюпорт, контенту добавляется отступ снизу, если его высоты не хватает */\n    FullScreen = 'full-screen',\n    /**\n     * Если высота контента меньше половины вьюпорта, Bottom Sheet принимает высоту контента.\n     * Если высота контента больше половины вьюпорта, Bottom Sheet при показе занимает половину вьюпорта,\n     * а при скролле контента увеличивается, пока не займет весь вьюпорт или не закончится скролл контента.\n     */\n    HalfScreen = 'half-screen',\n}\n\nexport enum BottomSheetShowDivider {\n    /** Показывать Divider, если футер наезжает на основной контент */\n    AlwaysIfHasScroll = 'always-if-has-scroll',\n    /** Показывать Divider, если футер наезжает на основной контент и основной контент не проскроллен до конца */\n    IfNotScrolledToEnd = 'if-not-scrolled-to-end',\n    /** Никогда ее показывать Divider между футером и основным контентом */\n    Never = 'never',\n}\n\nexport interface BottomSheetProps {\n    /** Разрешать ли скролл при открытой виртуальной клавиатуре */\n    allowScrollWhileFocused?: boolean;\n    /** Основной контент */\n    children?: ReactNode;\n    /** Контент футера */\n    footer?: ReactNode;\n    /** Контент заголовка (NavigationBar) */\n    header?: ReactNode;\n    /** Начальная высота Bottom Sheet */\n    height?: BottomSheetHeight;\n    /**\n     * По умолчанию Bottom Sheet заменяет обработчики onClick на onTouchStart и onTouchEnd,\n     * т.к. onClick не вызывается, если из-за нажатия закрывается виртуальная клавиатура и таргет уезжает из-под пальца\n     * Если вам не нужно это поведение, используйте interceptClickHandlers=false\n     */\n    interceptClickHandlers?: boolean;\n    /** Должна ли виртуальная клавиатура перекрывать Bottom Sheet (по умолчанию) или сдвигать */\n    keyboardOverlaysContent?: boolean;\n    /** Флаг, показывать ли компонент */\n    visible: boolean;\n    /** Колбек, который будет вызван после завершения анимации открытия */\n    onAppear?: VoidFunction;\n    /** Колбек, который будет вызван перед началом анимации закрытия */\n    onBeforeExit?: VoidFunction;\n    /** Колбек, который обязательно должен устанавливать visible=false */\n    onClose: VoidFunction;\n    /** Показывать ли Divider между футером и основным контентом */\n    showDivider?: BottomSheetShowDivider;\n    /** Показывать ли оверлей */\n    showOverlay?: boolean;\n}\n","import { FC } from 'react';\n\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './breadcrumbs.less';\n\nexport const BreadcrumbsDivider: FC = () => {\n    return (\n        <span className={styles.breadcrumbsDivider}>\n            <Text Element=\"span\" typography={TextTypography.Label3Regular}>\n                /\n            </Text>\n        </span>\n    );\n};\n","import { FC, useEffect, useRef } from 'react';\n\nimport { BreadcrumbsDivider } from '@hh.ru/magritte-ui-breadcrumbs/BreadcrumbsDivider';\nimport { BreadcrumbsItem } from '@hh.ru/magritte-ui-breadcrumbs/types';\nimport { RefreshItem } from '@hh.ru/magritte-ui-breadcrumbs/useDynamicDisplayContent';\n\ninterface BreadcrumbsDynamicLinkProps {\n    index: number;\n    children: BreadcrumbsItem;\n    refreshItem: RefreshItem;\n}\n\nexport const BreadcrumbsDynamicLink: FC<BreadcrumbsDynamicLinkProps> = ({ index, children, refreshItem }) => {\n    const breadcrumbsDynamicLinkRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (breadcrumbsDynamicLinkRef.current) {\n            refreshItem(breadcrumbsDynamicLinkRef.current.offsetWidth, index);\n        }\n    }, [refreshItem, index]);\n    return (\n        <div ref={breadcrumbsDynamicLinkRef}>\n            {children}\n            <BreadcrumbsDivider />\n        </div>\n    );\n};\n","import { Key, useCallback, useEffect, useRef, useReducer, RefObject } from 'react';\n\nimport { throttle } from '@hh.ru/magritte-common-func-utils';\nimport { BreadcrumbsItem } from '@hh.ru/magritte-ui-breadcrumbs/types';\n\nconst BREAK_INDEX = -2;\nconst RESIZE_THROTTLE_MS = 50;\n\nexport interface BreadcrumbsItemAdditionalParameters {\n    key: Key;\n    index: number;\n    width: number;\n}\n\ninterface StateOfBreadcrumbs {\n    visibleItems: BreadcrumbsItemAdditionalParameters[];\n    collapseItems: BreadcrumbsItemAdditionalParameters[];\n}\n\nenum BreadcrumbsActionType {\n    Limiter = 'LIMITER',\n    AddVisibleItem = 'ADD_VISIBLE_ITEM',\n    AddCollapseItem = 'ADD_COLLAPSE_ITEM',\n    UpdateItemData = 'UPDATE_ITEM_DATA',\n    UpdateData = 'UPDATE_DATA',\n}\n\ntype ActionOfBreadcrumbs =\n    | {\n          type:\n              | BreadcrumbsActionType.Limiter\n              | BreadcrumbsActionType.AddVisibleItem\n              | BreadcrumbsActionType.AddCollapseItem;\n      }\n    | {\n          type: BreadcrumbsActionType.UpdateItemData;\n          payload: {\n              index: number;\n              width: number;\n          };\n      }\n    | {\n          type: BreadcrumbsActionType.UpdateData;\n          payload: StateOfBreadcrumbs;\n      };\n\ninterface OldWidthData {\n    [key: string]: number;\n}\n\nfunction reducer(state: StateOfBreadcrumbs, action: ActionOfBreadcrumbs) {\n    switch (action.type) {\n        case BreadcrumbsActionType.Limiter: {\n            const visibleItems = state.visibleItems.slice(BREAK_INDEX);\n            const collapseItems = state.visibleItems.slice(0, BREAK_INDEX);\n            return {\n                ...state,\n                visibleItems,\n                collapseItems,\n            };\n        }\n        case BreadcrumbsActionType.AddVisibleItem: {\n            if (state.collapseItems.length > 0) {\n                const lastItemInCollapseItems = state.collapseItems[state.collapseItems.length - 1];\n                const visibleItems = [lastItemInCollapseItems, ...state.visibleItems];\n                const collapseItems = state.collapseItems.slice(0, -1);\n                return {\n                    ...state,\n                    visibleItems,\n                    collapseItems,\n                };\n            }\n            return state;\n        }\n        case BreadcrumbsActionType.AddCollapseItem: {\n            if (state.visibleItems.length > 0) {\n                const firstItemInVisibleItems = state.visibleItems[0];\n                const visibleItems = state.visibleItems.slice(1);\n                const collapseItems = [...state.collapseItems, firstItemInVisibleItems];\n                return {\n                    ...state,\n                    visibleItems,\n                    collapseItems,\n                };\n            }\n            return state;\n        }\n        case BreadcrumbsActionType.UpdateItemData: {\n            let updateComplete = false;\n            const visibleItems = state.visibleItems.map((item) => {\n                if (item.index === action.payload.index) {\n                    updateComplete = true;\n                    return { ...item, width: action.payload.width };\n                }\n                return item;\n            });\n            const collapseItems = updateComplete\n                ? [...state.collapseItems]\n                : state.collapseItems.map((item) => {\n                      if (item.index === action.payload.index) {\n                          return { ...item, width: action.payload.width };\n                      }\n                      return item;\n                  });\n            return {\n                ...state,\n                visibleItems,\n                collapseItems,\n            };\n        }\n        case BreadcrumbsActionType.UpdateData: {\n            const oldWidthData: OldWidthData = {};\n            const oldItems = state.collapseItems.concat(state.visibleItems).reduce((accumulator, currentValue) => {\n                const key = `${currentValue.key}`;\n                accumulator[key] = currentValue.width;\n                return accumulator;\n            }, oldWidthData);\n\n            const visibleItems = action.payload.visibleItems.map((item) => {\n                if (oldItems[item.key]) {\n                    return { ...item, width: oldItems[item.key] };\n                }\n                return item;\n            });\n            return {\n                visibleItems,\n                collapseItems: action.payload.collapseItems,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\ninterface BreadcrumbsExtendedItem {\n    key: React.Key;\n    ReactElement: BreadcrumbsItem;\n}\n\nfunction createInitialState(data: BreadcrumbsExtendedItem[]) {\n    const indexOfLastItem = data.length - 1;\n    const visibleItems: BreadcrumbsItemAdditionalParameters[] = data\n        .map((item, index) => ({ key: item.key, index, width: 0 }))\n        .slice(1, indexOfLastItem);\n    const collapseItems: BreadcrumbsItemAdditionalParameters[] = [];\n    return {\n        visibleItems,\n        collapseItems,\n    };\n}\n\nexport interface RefreshItem {\n    (width: number, index: number): void;\n}\n\ninterface UseDynamicDisplayContent {\n    (data: BreadcrumbsExtendedItem[]): {\n        containerRef: RefObject<HTMLDivElement>;\n        contentState: StateOfBreadcrumbs;\n        refreshItem: RefreshItem;\n        emptySpaceRef: RefObject<HTMLDivElement>;\n    };\n}\n\nexport const useDynamicDisplayContent: UseDynamicDisplayContent = (data) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const emptySpaceRef = useRef<HTMLDivElement>(null);\n    const visibleContentWidth = useRef(0);\n    const staticContentWidth = useRef(0);\n    const expandContentWidth = useRef(0);\n    const [contentState, dispatch] = useReducer(reducer, data, createInitialState);\n\n    useEffect(() => {\n        dispatch({\n            type: BreadcrumbsActionType.UpdateData,\n            payload: createInitialState(data),\n        });\n    }, [data]);\n\n    /**\n     * Первоначальный вызов собирает стейт, который содержит только общие данные элементов breadcrumbs. После\n     * рендера элементов (на основе этих данных) мы подтягиваем в стейт ссылки на элементы и ширину каждого из них.\n     */\n\n    const refreshItem: RefreshItem = useCallback((width, index) => {\n        dispatch({\n            type: BreadcrumbsActionType.UpdateItemData,\n            payload: {\n                index,\n                width,\n            },\n        });\n    }, []);\n\n    /**\n     * Перед отрисовкой компонента в браузере нам нужно привести его в соответствие со спецификацией ДС:\n     * в спецификации указано, что breadcrumbs не может отображать более 5-ти элементов.\n     *\n     * Варианты отображения breadcrumbs:\n     * -> link / link / link / link / text\n     * или\n     * -> link / action / link / link / text\n     *\n     * Если лимит будет превышен, лимитер схлопнет в action все элементы, которые окажутся между первым элементом и\n     * тремя последними. Таким образом компонент breadcrumbs будет приведен к виду -> link / action / link / link / text,\n     * где action - это кнопка, раскрывающая дроп-контейнер, в который складываются сколлапсировавшие элементы.\n     *\n     * Если после лимитирования контейнер-родитель всё равно не будет умещать в себе контент, то видимые элементы\n     * один за другим начнут коллапсировать (переходить из массива visibleItems в collapseItems) пока breadcrumbs не примет вид:\n     * -> ink / action / text - это максимально возможный уровень сворачивания элементов.\n     */\n\n    useEffect(() => {\n        if (data.length > 5) {\n            dispatch({ type: BreadcrumbsActionType.Limiter });\n        }\n    }, [data]);\n\n    /**\n     * Здесь мы отслеживаем ширину видимого контента, ширину статичного контента (относительно статичного:\n     * это общая ширина первого и последнего элементов, а также action при его наличии), а также ширину\n     * расширяемого контента.\n     */\n\n    useEffect(() => {\n        const containerNode = containerRef.current;\n        const emptySpaceNode = emptySpaceRef.current;\n        if (!containerNode || !emptySpaceNode) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            return () => {};\n        }\n\n        visibleContentWidth.current = contentState.visibleItems.reduce((sum, children) => sum + children.width, 0);\n        staticContentWidth.current =\n            containerNode.offsetWidth - visibleContentWidth.current - emptySpaceNode.offsetWidth;\n\n        if (contentState.collapseItems.length) {\n            expandContentWidth.current =\n                staticContentWidth.current +\n                visibleContentWidth.current +\n                contentState.collapseItems[contentState.collapseItems.length - 1].width;\n        }\n\n        const observer = new ResizeObserver(\n            throttle(() => {\n                if (containerNode.scrollWidth > containerNode.offsetWidth && contentState.visibleItems.length > 0) {\n                    dispatch({ type: BreadcrumbsActionType.AddCollapseItem });\n                    observer.unobserve(containerNode);\n                    return;\n                }\n                if (\n                    (contentState.visibleItems.length < 2 && contentState.collapseItems.length > 0) ||\n                    (contentState.visibleItems.length < 3 && contentState.collapseItems.length === 1)\n                ) {\n                    if (containerNode.offsetWidth > expandContentWidth.current) {\n                        dispatch({ type: BreadcrumbsActionType.AddVisibleItem });\n                        observer.unobserve(containerNode);\n                    }\n                }\n            }, RESIZE_THROTTLE_MS)\n        );\n        observer.observe(containerNode);\n        return () => {\n            observer.disconnect();\n        };\n    }, [contentState.visibleItems, contentState.collapseItems]);\n\n    return {\n        containerRef,\n        contentState,\n        refreshItem,\n        emptySpaceRef,\n    };\n};\n","import React, { FC, useCallback, useMemo, useState, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { BottomSheet } from '@hh.ru/magritte-ui-bottom-sheet';\nimport { BreadcrumbsDivider } from '@hh.ru/magritte-ui-breadcrumbs/BreadcrumbsDivider';\nimport { BreadcrumbsDynamicLink } from '@hh.ru/magritte-ui-breadcrumbs/BreadcrumbsDynamicLink';\nimport { BreadcrumbsProps } from '@hh.ru/magritte-ui-breadcrumbs/types';\nimport { useDynamicDisplayContent } from '@hh.ru/magritte-ui-breadcrumbs/useDynamicDisplayContent';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { Card, CardStyle } from '@hh.ru/magritte-ui-card';\nimport { Drop } from '@hh.ru/magritte-ui-drop';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './breadcrumbs.less';\n\nconst TEXT_TYPOGRAPHY = TextTypography.Label3Regular;\n\nexport const Breadcrumbs: FC<BreadcrumbsProps> = ({ children, hiddenOnMobile, dataQa }) => {\n    const activatorRef = useRef(null);\n    const { isMobile } = useBreakpoint();\n    const isHidden = hiddenOnMobile && isMobile;\n    const [showCollapseItems, setShowCollapseItems] = useState(false);\n\n    const showCollapseItemsToggle = useCallback(\n        () => setShowCollapseItems((showCollapseItems) => !showCollapseItems),\n        []\n    );\n\n    const breadcrumbsExtendedItems = useMemo(() => {\n        return React.Children.map(children, (child) => {\n            const key = child.key || Math.random();\n            return {\n                key,\n                ReactElement: child,\n            };\n        });\n    }, [children]);\n\n    const { containerRef, contentState, refreshItem, emptySpaceRef } =\n        useDynamicDisplayContent(breadcrumbsExtendedItems);\n\n    const renderCollapseItems = useMemo(() => {\n        return contentState.collapseItems.map((collapseItem) => {\n            const index = collapseItem.index;\n            const breadcrumbsExtendedItem = breadcrumbsExtendedItems[index];\n            if (!breadcrumbsExtendedItem) {\n                return null;\n            }\n            const { onClick, Element = 'a', children, ...usefulProps } = breadcrumbsExtendedItem.ReactElement.props;\n            return (\n                <div\n                    key={breadcrumbsExtendedItem.key}\n                    className={classnames(styles.breadcrumbsCardBottomSheet, {\n                        [styles.breadcrumbsCardDrop]: !isMobile,\n                    })}\n                >\n                    <Card\n                        {...usefulProps}\n                        Element={Element}\n                        borderRadius={12}\n                        padding={8}\n                        paddingLeft={12}\n                        paddingRight={12}\n                        style={CardStyle.Blank}\n                        hoverStyle={CardStyle.Neutral}\n                        actionCard\n                        stretched\n                    >\n                        <div\n                            className={classnames(styles.breadcrumbsItemBottomSheet, {\n                                [styles.breadcrumbsItemDrop]: !isMobile,\n                            })}\n                        >\n                            <Text Element=\"span\" typography={TEXT_TYPOGRAPHY}>\n                                {children}\n                            </Text>\n                        </div>\n                    </Card>\n                </div>\n            );\n        });\n    }, [breadcrumbsExtendedItems, contentState.collapseItems, isMobile]);\n\n    const renderLastItem = (extendedItems: typeof breadcrumbsExtendedItems) => {\n        if (extendedItems.length <= 1) {\n            return null;\n        }\n        const { style, href, ...usefulProps } = extendedItems[extendedItems.length - 1].ReactElement.props;\n        return (\n            <div className={styles.breadcrumbsItemCurrent}>\n                <Text {...usefulProps} Element=\"span\" typography={TEXT_TYPOGRAPHY} />\n            </div>\n        );\n    };\n\n    return (\n        <div\n            className={classnames(styles.breadcrumbs, {\n                [styles.breadcrumbsHidden]: isHidden,\n            })}\n            ref={containerRef}\n            data-qa={dataQa}\n        >\n            <div>\n                {breadcrumbsExtendedItems[0]?.ReactElement}\n                {breadcrumbsExtendedItems.length > 1 && <BreadcrumbsDivider />}\n            </div>\n            {contentState.collapseItems.length > 0 && (\n                <>\n                    <button\n                        type=\"button\"\n                        className={styles.breadcrumbsAction}\n                        ref={activatorRef}\n                        onClick={showCollapseItemsToggle}\n                        data-qa=\"breadcrumbs-action\"\n                    >\n                        <span className={styles.breadcrumbsItem}>\n                            <Text Element=\"span\" typography={TEXT_TYPOGRAPHY}>\n                                ...\n                            </Text>\n                        </span>\n                    </button>\n                    <Drop\n                        activatorRef={activatorRef}\n                        host={containerRef}\n                        direction=\"bottom\"\n                        alignment=\"left\"\n                        space={300}\n                        visible={showCollapseItems}\n                        onClose={showCollapseItemsToggle}\n                    >\n                        {renderCollapseItems}\n                    </Drop>\n                    <BottomSheet visible={isMobile && !isHidden && showCollapseItems} onClose={showCollapseItemsToggle}>\n                        {renderCollapseItems}\n                    </BottomSheet>\n                    <BreadcrumbsDivider />\n                </>\n            )}\n            {contentState.visibleItems.map((visibleItem) => {\n                const index = visibleItem.index;\n                const breadcrumbsExtendedItem = breadcrumbsExtendedItems[index];\n                if (!breadcrumbsExtendedItem) {\n                    return null;\n                }\n                return (\n                    <BreadcrumbsDynamicLink key={breadcrumbsExtendedItem.key} index={index} refreshItem={refreshItem}>\n                        {breadcrumbsExtendedItem.ReactElement}\n                    </BreadcrumbsDynamicLink>\n                );\n            })}\n            {renderLastItem(breadcrumbsExtendedItems)}\n            <div className={styles.breadcrumbsEmptySpace} ref={emptySpaceRef} />\n        </div>\n    );\n};\n\nBreadcrumbs.displayName = 'Breadcrumbs';\n","import { BreadcrumbsItemWithCustomElement } from '@hh.ru/magritte-ui-breadcrumbs/types';\nimport { Link } from '@hh.ru/magritte-ui-link';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './breadcrumbs.less';\n\nexport const BreadcrumbsItem: BreadcrumbsItemWithCustomElement = ({ ...props }) => {\n    return (\n        <Link {...props} typography={TextTypography.Label3Regular} inline>\n            <span className={styles.breadcrumbsItem}>\n                <Text Element=\"span\" typography={TextTypography.Label3Regular}>\n                    {props.children}\n                </Text>\n            </span>\n        </Link>\n    );\n};\n","const MILLISECONDS_IN_HOUR = 3600000;\n\ninterface CookieValue {\n    name: string;\n    value: string;\n}\n\nconst Cookies = {\n    set(name: string, value?: string | number, time?: number): void {\n        if (name === undefined) {\n            return;\n        }\n        let cookie = `${name}=${value || ''};path=/`;\n\n        if (time !== undefined) {\n            const expire = new Date();\n\n            expire.setTime(expire.getTime() + time * MILLISECONDS_IN_HOUR);\n            cookie += `;expires=${expire.toUTCString()}`;\n        }\n\n        document.cookie = cookie;\n    },\n\n    get(name: string): string | null {\n        const result = this.getAll()\n            .reverse()\n            .find((cookie) => cookie.name === name);\n\n        return result?.value ?? null;\n    },\n\n    getAll(): CookieValue[] {\n        const cookies = document.cookie ? document.cookie.split('; ') : [];\n        return cookies.map((cookie) => {\n            const parts = cookie.split('=');\n            let value;\n\n            try {\n                value = decodeURIComponent(parts[1]);\n            } catch (e) {\n                value = parts[1];\n            }\n\n            return {\n                name: parts[0],\n                value,\n            };\n        });\n    },\n\n    remove(name: string): void {\n        this.set(name, '', -1);\n    },\n};\n\nexport { Cookies };\n","import { FC, useEffect, useMemo, useRef, useState, createContext, PropsWithChildren } from 'react';\n\nimport { Cookies } from '@hh.ru/magritte-common-cookies';\nimport { useResize } from '@hh.ru/magritte-common-resize';\n\nimport styles from './styles.less';\n\nexport enum Breakpoint {\n    XS = 'xs',\n    S = 's',\n    M = 'm',\n    L = 'l',\n    XL = 'xl',\n    XXL = 'xxl',\n}\n\nconst DEFAULT_BREAKPOINT = Breakpoint.XS;\n\nexport const BreakpointContext = createContext<{ breakpoint: Breakpoint; renderRestriction: boolean }>({\n    breakpoint: DEFAULT_BREAKPOINT,\n    renderRestriction: false,\n});\n\nconst detectBreakpointValue = (breakpointCheckerNode: HTMLDivElement) => {\n    if (!('getComputedStyle' in window)) {\n        return DEFAULT_BREAKPOINT;\n    }\n\n    const style = window.getComputedStyle(breakpointCheckerNode);\n\n    if (!style) {\n        return DEFAULT_BREAKPOINT;\n    }\n\n    const value = style.getPropertyValue('font-family').replace(/['\"]/g, '');\n\n    if (!value) {\n        return DEFAULT_BREAKPOINT;\n    }\n\n    return Object.values(Breakpoint).find((size) => size === value) || DEFAULT_BREAKPOINT;\n};\n\nconst TWO_WEEKS_IN_HOURS = 24 * 14;\n\ninterface BreakpointProviderProps extends PropsWithChildren {\n    /** Флаг, который позволяет сохранять значение брекпоинта в куку */\n    storeActualBreakpointValueInCookie?: boolean;\n    /** Cохраненное значение брекпоинта, которое будет использоваться начальным */\n    storedBreakpointValue?: Breakpoint;\n    /** Флаг, который позволяет использовать только сохраненное значение брекпоинта\n     * работает если есть сохраненное значение */\n    force?: boolean;\n    /** Флаг, который включает ограничение рендера, позволяет отключить SSR\n     * для колонок, значение брекпоинта которых не совпадает с значением в контексте */\n    renderRestriction?: boolean;\n}\n\nconst BreakpointProvider: FC<BreakpointProviderProps> = ({\n    children,\n    storeActualBreakpointValueInCookie = false,\n    storedBreakpointValue,\n    force = false,\n    renderRestriction = false,\n}) => {\n    const breakpointCheckerNodeRef = useRef<HTMLDivElement>(null);\n    const [breakpoint, setBreakpoint] = useState(storedBreakpointValue ?? DEFAULT_BREAKPOINT);\n    const useOnlyStoredValue = !!(force && storedBreakpointValue);\n\n    const contextValue = useMemo(\n        () => ({\n            breakpoint: useOnlyStoredValue ? storedBreakpointValue : breakpoint,\n            renderRestriction,\n        }),\n        [breakpoint, renderRestriction, useOnlyStoredValue, storedBreakpointValue]\n    );\n\n    const sideEffect = () => {\n        if (!useOnlyStoredValue && breakpointCheckerNodeRef.current) {\n            const breakpoint = detectBreakpointValue(breakpointCheckerNodeRef.current);\n            setBreakpoint(breakpoint);\n\n            if (storeActualBreakpointValueInCookie) {\n                Cookies.set('device_magritte_breakpoint', breakpoint, TWO_WEEKS_IN_HOURS);\n            }\n        }\n    };\n\n    useEffect(sideEffect, [useOnlyStoredValue, storeActualBreakpointValueInCookie]);\n    useResize(sideEffect);\n\n    return (\n        <BreakpointContext.Provider value={contextValue}>\n            {children}\n            <div ref={breakpointCheckerNodeRef} className={styles['breakpoint-checker']} />\n        </BreakpointContext.Provider>\n    );\n};\n\nBreakpointProvider.displayName = 'BreakpointProvider';\n\nexport default BreakpointProvider;\n","import { useContext, useMemo } from 'react';\n\nimport { BreakpointContext, Breakpoint } from '@hh.ru/magritte-ui-breakpoint/BreakpointProvider';\n\nexport interface UseBreakpoint {\n    breakpoint: Breakpoint;\n    isXS: boolean;\n    isS: boolean;\n    isM: boolean;\n    isL: boolean;\n    isXL: boolean;\n    isXXL: boolean;\n    isMobile: boolean;\n    isGtXS: boolean;\n    isGtS: boolean;\n    isGtM: boolean;\n    isGtL: boolean;\n}\n\nconst useBreakpoint: () => UseBreakpoint = () => {\n    const { breakpoint } = useContext(BreakpointContext);\n\n    const breakpointMap = useMemo(\n        () => ({\n            isXS: breakpoint === Breakpoint.XS,\n            isS: breakpoint === Breakpoint.S,\n            isM: breakpoint === Breakpoint.M,\n            isL: breakpoint === Breakpoint.L,\n            isXL: breakpoint === Breakpoint.XL,\n            isXXL: breakpoint === Breakpoint.XXL,\n            isMobile: [Breakpoint.XS, Breakpoint.S].includes(breakpoint),\n            isGtXS: [Breakpoint.S, Breakpoint.M, Breakpoint.L, Breakpoint.XL, Breakpoint.XXL].includes(breakpoint),\n            isGtS: [Breakpoint.M, Breakpoint.L, Breakpoint.XL, Breakpoint.XXL].includes(breakpoint),\n            isGtM: [Breakpoint.L, Breakpoint.XL, Breakpoint.XXL].includes(breakpoint),\n            isGtL: [Breakpoint.XL, Breakpoint.XXL].includes(breakpoint),\n            breakpoint,\n        }),\n        [breakpoint]\n    );\n\n    return breakpointMap;\n};\n\nexport default useBreakpoint;\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { RefComponentWithCustomElementRenderer } from '@hh.ru/magritte-types';\nimport { useButton } from '@hh.ru/magritte-ui-button/aria';\nimport {\n    ButtonProps,\n    ButtonSize,\n    ButtonStyle,\n    ButtonType,\n    ButtonWithCustomElement,\n} from '@hh.ru/magritte-ui-button/types';\nimport { Counter, CounterMode, CounterStyle, CounterSize } from '@hh.ru/magritte-ui-counter';\nimport { Loader } from '@hh.ru/magritte-ui-loader';\n\nimport styles from './button.less';\n\nconst buttonSizeToCounterSize = {\n    [ButtonSize.Large]: CounterSize.Medium,\n    [ButtonSize.Medium]: CounterSize.Medium,\n    [ButtonSize.Small]: CounterSize.Small,\n};\n\nconst ButtonRenderer: RefComponentWithCustomElementRenderer<ButtonProps, 'button'> = (props, ref) => {\n    const {\n        ariaLabel,\n        children,\n        counter,\n        Element = 'button',\n        hideLabel = false,\n        icon,\n        loading,\n        mode,\n        size = ButtonSize.Medium,\n        stretched,\n        style = ButtonStyle.Neutral,\n        subcaption,\n        type = ButtonType.Button,\n        disabled,\n        ...buttonProps\n    } = props;\n\n    const forceDisabled = useDisabled();\n    const { ariaProps: additionalAttributes } = useButton({ disabled: !!disabled || forceDisabled, Element });\n\n    if (Element === 'button') {\n        additionalAttributes.type = type;\n    }\n\n    if (ref) {\n        /**\n         * Element может быть простой функцией по этому напрямую\n         * нельзя назначать ref\n         * А может быть forwardRef, ClassComponent и простой тег,\n         * по этому в обход типизации назначаем ref как unknown\n         */\n        additionalAttributes.ref = ref;\n    }\n\n    const withSubcaption = size !== ButtonSize.Small && subcaption;\n\n    return (\n        <Element\n            className={classnames(styles.button, {\n                [styles[`button_mode-${mode}`]]: mode,\n                [styles[`button_size-${size}`]]: size,\n                [styles.button_stretched]: stretched,\n                [styles.button_subcaption]: withSubcaption,\n                [styles.button_textless]: !withSubcaption && (hideLabel || !children) && !counter,\n                [styles.button_loading]: loading,\n                [styles[`button_style-${style}`]]: style,\n            })}\n            disabled={forceDisabled || !!disabled}\n            {...additionalAttributes}\n            {...buttonProps}\n        >\n            <span className={styles.button__content}>\n                {counter && (\n                    <span className={styles.button__counter}>\n                        <Counter\n                            label={counter}\n                            style={CounterStyle.Attention}\n                            mode={CounterMode.Secondary}\n                            size={buttonSizeToCounterSize[size]}\n                        />\n                    </span>\n                )}\n                {icon && (\n                    <span className={styles.button__icon}>\n                        {React.cloneElement(\n                            icon,\n                            hideLabel ? { 'aria-label': ariaLabel } : { 'aria-hidden': true, focusable: false }\n                        )}\n                    </span>\n                )}\n                {children && !hideLabel && <span className={styles.button__label}>{children}</span>}\n                {withSubcaption && <span className={styles.button__subcaption}>{subcaption}</span>}\n                {loading && (\n                    <span className={styles.button__loading}>\n                        <Loader />\n                    </span>\n                )}\n            </span>\n        </Element>\n    );\n};\n\nexport const Button = forwardRef(ButtonRenderer) as ButtonWithCustomElement<ButtonProps, 'button'>;\n\nexport default Button;\n","export const useButton = ({\n    disabled,\n    Element = 'button',\n}: Record<string, unknown>): {\n    ariaProps: { [x: string]: unknown };\n} => {\n    let additionalAttributes: { [x: string]: unknown } = {};\n\n    if (Element === 'button') {\n        additionalAttributes = {};\n    } else {\n        additionalAttributes = {\n            role: 'button',\n            tabIndex: disabled ? undefined : 0,\n            'aria-disabled': disabled,\n        };\n    }\n\n    return {\n        ariaProps: additionalAttributes,\n    };\n};\n","import { ReactElement, ReactNode } from 'react';\n\nimport { ComponentPropsWithElement, Override, WithCustomElementHelper } from '@hh.ru/magritte-types';\n\nexport enum ButtonSize {\n    Medium = 'medium',\n    Large = 'large',\n    Small = 'small',\n}\n\nexport enum ButtonMode {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Tertiary = 'tertiary',\n}\n\nexport enum ButtonStyle {\n    Neutral = 'neutral',\n    Accent = 'accent',\n    Positive = 'positive',\n    Negative = 'negative',\n    Contrast = 'contrast',\n}\n\nexport enum ButtonType {\n    Submit = 'submit',\n    Button = 'button',\n}\n\nexport type ButtonLabel = ReactNode;\n\n// Взаимосвязанные свойства компонента\ninterface VariableButtonProps {\n    /** Лейбл кнопки для скринридеров, когда основной лейбл скрыт */\n    ariaLabel?: string;\n    /** Содержимое лейбла кнопки */\n    children?: ButtonLabel;\n    /** Значение в счетчике */\n    counter?: string;\n    /** Скрывать ли лейбл */\n    hideLabel?: boolean;\n    /** Иконка */\n    icon?: ReactElement;\n    /** Кнопка растянута по ширине контейнера */\n    stretched?: boolean;\n    /** Подпись под лейблом, отображается только при size = Large или Medium */\n    subcaption?: ReactNode;\n}\n\ninterface ButtonElementProps {\n    /** Тип компонента по назначению возможные варианты [ButtonMode](#button-mode) */\n    mode: ButtonMode;\n    /** Стиль компонента в зависимости от назначения */\n    style?: ButtonStyle;\n    /** Заблокирована ли кнопка */\n    disabled?: boolean;\n    /** Кастомный компонент 'a', 'button', 'span' или функция */\n    Element?: 'a' | 'button' | 'span';\n    /** Отображать индикацию загрузки */\n    loading?: boolean;\n    /** onClick callback */\n    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n    /** Функция для получения DOM элемента кнопки */\n    ref?: React.Ref<HTMLElement>;\n    /** Определяет физический вертикальный размер компонента. */\n    size?: ButtonSize;\n    /** Тип кнопки по назначению */\n    type?: ButtonType;\n    /** QA атрибут для тестирования */\n    'data-qa'?: string;\n}\n\nexport type DefaultButtonProps = Override<\n    VariableButtonProps,\n    {\n        ariaLabel?: never;\n        children: ButtonLabel;\n        hideLabel?: never;\n        icon?: never;\n        subcaption?: never;\n    }\n>;\n\nexport type SubcaptionButton = Override<\n    VariableButtonProps,\n    {\n        ariaLabel?: never;\n        children: string;\n        counter?: never;\n        hideLabel?: never;\n        icon?: never;\n        subcaption: ReactNode;\n    }\n>;\n\nexport type IconButton<IconType, HideLabel> = Override<\n    VariableButtonProps,\n    {\n        ariaLabel: string;\n        children?: ButtonLabel;\n        hideLabel: HideLabel;\n        icon: IconType;\n        stretched?: never;\n        subcaption?: never;\n    }\n>;\n\nexport type LabeledIconButton<IconType, HideLabel> = Override<\n    VariableButtonProps,\n    {\n        ariaLabel?: string;\n        children: ButtonLabel;\n        hideLabel?: HideLabel;\n        icon: IconType;\n        subcaption?: never;\n    }\n>;\n\n// Все допустимые наборы свойств\nexport type AcceptableButtonPropsSets =\n    | SubcaptionButton\n    | IconButton<ReactElement, true>\n    | LabeledIconButton<ReactElement, false>\n    | DefaultButtonProps;\n\nexport type ButtonPropsHelper<IconType, HideLabel> =\n    | SubcaptionButton\n    | (IconType extends ReactElement\n          ? HideLabel extends true\n              ? IconButton<IconType, HideLabel>\n              : LabeledIconButton<IconType, HideLabel>\n          : DefaultButtonProps);\n\nexport type ButtonProps = ButtonElementProps & AcceptableButtonPropsSets;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ButtonWithCustomElement<\n    ComponentProps extends ComponentPropsWithElement,\n    DefaultElementType extends ComponentProps['Element'] | React.ComponentType<any>\n> {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\n    <IconType, HideLabel, ElementType extends any = DefaultElementType>(\n        props: ButtonPropsHelper<IconType, HideLabel> & WithCustomElementHelper<ComponentProps, ElementType>\n    ): ReturnType<React.FC>;\n    displayName?: string;\n}\n","import { MouseEvent, KeyboardEvent } from 'react';\n\nconst INTERACTIVE_COMPONENTS_SELECTORS = [\n    '[tabindex]',\n    '[data-interactive]',\n    'a',\n    'button',\n    'select',\n    'textarea',\n    'option',\n    'input',\n    '[role=\"button\"]',\n    '[role=\"tab\"]',\n    '[role=\"switch\"]',\n    '[role=\"checkbox\"]',\n    '[role=\"spinbutton\"]',\n    '[role=\"combobox\"]',\n    '[role=\"menuitem\"]',\n    '[role=\"menuitemcheckbox\"]',\n    '[role=\"menuitemradio\"]',\n].join(',');\n\nexport const isEventFromInteractiveComponent = (event: KeyboardEvent | MouseEvent): boolean => {\n    const { target, currentTarget } = event;\n    const closest = target instanceof HTMLElement && target.closest(INTERACTIVE_COMPONENTS_SELECTORS);\n    return !!closest && closest !== currentTarget;\n};\n","import { forwardRef, useCallback, MouseEvent, KeyboardEvent, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { keyboardMatches, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { isEventFromInteractiveComponent } from '@hh.ru/magritte-common-mouse';\nimport { DisabledContext, useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { CardBorderRadius, CardPadding, RefCardWithCustomElementRenderer } from '@hh.ru/magritte-ui-card/types';\nimport { TextDynamic } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './card.less';\n\nconst genBorderRadiusClasses = (radiusProps: {\n    TopLeft?: CardBorderRadius;\n    TopRight?: CardBorderRadius;\n    BottomLeft?: CardBorderRadius;\n    BottomRight?: CardBorderRadius;\n}) =>\n    Object.entries(radiusProps).reduce<string[]>(\n        (acc, [key, value]) =>\n            value !== undefined ? [...acc, styles[`cardBorderRadius${key as keyof typeof radiusProps}${value}`]] : acc,\n        []\n    );\n\nconst genPaddingProps = (paddingProps: {\n    Left?: CardPadding;\n    Right?: CardPadding;\n    Top?: CardPadding;\n    Bottom?: CardPadding;\n}) =>\n    Object.entries(paddingProps).reduce<Record<string, number>>(\n        (acc, [key, value]) => (value !== undefined ? { ...acc, [`padding${key}`]: value } : acc),\n        {}\n    );\n\nconst CardComponent: RefCardWithCustomElementRenderer = (\n    {\n        Element = 'div',\n        stretched = false,\n        actionCard = false,\n        onClick,\n        style,\n        hoverStyle,\n        disabled = false,\n        showShadow = false,\n        showShadowOnHover = false,\n        showBorder = false,\n        padding = 0,\n        paddingLeft,\n        paddingRight,\n        paddingTop,\n        paddingBottom,\n        borderRadius = 0,\n        borderRadiusTopLeft,\n        borderRadiusTopRight,\n        borderRadiusBottomLeft,\n        borderRadiusBottomRight,\n        children,\n        ...restProps\n    },\n    ref\n) => {\n    const isToneCard = style !== undefined;\n    const forceDisabled = useDisabled();\n    const hasFocusRef = useRef(false);\n    const focusCallback = () => {\n        hasFocusRef.current = true;\n    };\n    const blurCallback = () => {\n        hasFocusRef.current = false;\n    };\n    const activationHandler = useCallback(\n        (event: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement>) => {\n            if (disabled || forceDisabled || !onClick) {\n                return;\n            }\n\n            if (\n                event.type === 'click' ||\n                (event.type === 'keydown' &&\n                    keyboardMatches((event as KeyboardEvent<HTMLElement>).nativeEvent, [\n                        keyboardKeys.Enter,\n                        keyboardKeys.Space,\n                    ]) &&\n                    hasFocusRef.current)\n            ) {\n                !isEventFromInteractiveComponent(event) && onClick(event);\n            }\n        },\n        [onClick, disabled, forceDisabled]\n    );\n    const paddingProps = genPaddingProps({\n        Left: paddingLeft,\n        Right: paddingRight,\n        Top: paddingTop,\n        Bottom: paddingBottom,\n    });\n    const additionalProps: Record<string, unknown> = {};\n    if (actionCard && !forceDisabled && !disabled) {\n        additionalProps.tabIndex = 0;\n    }\n\n    if (ref) {\n        additionalProps.ref = ref;\n    }\n\n    return (\n        <DisabledContext.Provider value={forceDisabled || (!!disabled && actionCard)}>\n            <Element\n                {...restProps}\n                {...additionalProps}\n                onFocus={focusCallback}\n                onBlur={blurCallback}\n                onClick={activationHandler}\n                onKeyDown={activationHandler}\n                style={{ padding, ...paddingProps }}\n                className={classnames(\n                    styles.card,\n                    styles[`cardBorderRadius${borderRadius}`],\n                    isToneCard && styles[`card-style-${style}`],\n                    hoverStyle && styles[`card-hover-style-${hoverStyle}`],\n                    ...genBorderRadiusClasses({\n                        TopLeft: borderRadiusTopLeft,\n                        TopRight: borderRadiusTopRight,\n                        BottomLeft: borderRadiusBottomLeft,\n                        BottomRight: borderRadiusBottomRight,\n                    }),\n\n                    {\n                        [styles.cardStretched]: stretched,\n                        [styles.cardTone]: isToneCard,\n                        [styles.cardAction]: actionCard,\n                        [styles.cardShowShadow]: showShadow && !isToneCard,\n                        [styles.cardShadowOnHover]: showShadowOnHover && !isToneCard && actionCard,\n                        [styles.cardWithBorder]: showBorder,\n                        [styles.cardDisabled]: actionCard && !!disabled,\n                    }\n                )}\n            >\n                <TextDynamic stretched>{children}</TextDynamic>\n            </Element>\n        </DisabledContext.Provider>\n    );\n};\n\nexport const Card = forwardRef(CardComponent) as RefCardWithCustomElementRenderer;\n\nCard.displayName = 'Card';\n","import { MouseEvent, ForwardedRef, PropsWithoutRef, KeyboardEvent } from 'react';\n\nimport { WithCustomElementHelper } from '@hh.ru/magritte-types';\n\nexport type CardPadding = 0 | 8 | 12 | 16 | 24 | 32 | 40;\nexport type CardBorderRadius = 0 | 12 | 16 | 24 | 32 | 40;\n\nexport enum CardStyle {\n    Blank = 'blank',\n    Neutral = 'neutral',\n    Contrast = 'contrast',\n    Positive = 'positive',\n    Negative = 'negative',\n    Warning = 'warning',\n    Extra1 = 'extra-1',\n    Extra2 = 'extra-2',\n    Extra3 = 'extra-3',\n    Extra4 = 'extra-4',\n    Extra5 = 'extra-5',\n}\n\ninterface CommonCardProps {\n    /** Кастомный элемент 'a', 'div' или функция  */\n    Element?: 'a' | 'div';\n    /** Флаг включающий растягивание на всю ширину контейнера */\n    stretched?: boolean;\n    /** Флаг включающий отображение рамки */\n    showBorder?: boolean;\n    /** Размер паддинга */\n    padding?: CardPadding;\n    /** Размер паддинга слева */\n    paddingLeft?: CardPadding;\n    /** Размер паддинга справа */\n    paddingRight?: CardPadding;\n    /** Размер паддинга сверху */\n    paddingTop?: CardPadding;\n    /** Размер паддинга снизу */\n    paddingBottom?: CardPadding;\n    /** Радиус скругления углов */\n    borderRadius?: CardBorderRadius;\n    /** Радиус скругления верхнего левого угла */\n    borderRadiusTopLeft?: CardBorderRadius;\n    /** Радиус скругления верхнего правого угла */\n    borderRadiusTopRight?: CardBorderRadius;\n    /** Радиус скругления нижнего левого угла */\n    borderRadiusBottomLeft?: CardBorderRadius;\n    /** Радиус скругления нижнего правого угла */\n    borderRadiusBottomRight?: CardBorderRadius;\n}\n\ninterface BlankCardProps {\n    /**\n     * Флаг включающий отображение тени, если это action карточка,\n     * то при наведении будет отображаться тень второго уровня\n     * */\n    showShadow?: boolean;\n    /** Цвет карточки */\n    style?: never;\n    /** Флаг включающий отображение тени для blank карточки в случае если не установлен флаг showShadow */\n    showShadowOnHover?: boolean;\n}\n\ninterface ToneCardProps {\n    showShadow?: never;\n    style: CardStyle;\n    showShadowOnHover?: never;\n}\n\ninterface StaticCardProps {\n    /** Флаг включающий action поведение карточки  */\n    actionCard?: false;\n    /** Флаг отключения карточки */\n    disabled?: never;\n    showShadowOnHover?: never;\n    /** Функция обработчик клика */\n    onClick?: never;\n    hoverStyle?: never;\n}\n\ninterface ActionCardProps {\n    actionCard: true;\n    disabled?: boolean;\n    /** Цвет карточки при наведении */\n    hoverStyle?: CardStyle;\n    showShadowOnHover?: boolean;\n    onClick?: (event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;\n}\n\ntype CardVariants = (StaticCardProps | ActionCardProps) & (BlankCardProps | ToneCardProps);\n\nexport type CardProps<T = 'div'> = WithCustomElementHelper<PropsWithoutRef<CommonCardProps>, T> & CardVariants;\n\nexport interface RefCardWithCustomElementRenderer<DefaultElement extends CommonCardProps['Element'] = 'div'> {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\n    <T extends unknown = DefaultElement>(props: CardProps<T>, ref: ForwardedRef<T>): ReturnType<React.FC>;\n    displayName?: string;\n}\n","import React, { ReactElement, FC, cloneElement } from 'react';\n\nimport { isIconComponent } from '@hh.ru/magritte-ui-icon';\n\nimport styles from './styles.less';\n\ninterface CellItemProps {\n    item: ReactElement;\n}\n\nexport const CellItem: FC<CellItemProps> = ({ item }) => {\n    const defaultProps: Record<string, unknown> = {};\n    if (isIconComponent(item)) {\n        if (!item.props || !('initial' in item.props)) {\n            defaultProps.initial = 'secondary';\n        }\n        if (!item.props || !('highlighted' in item.props)) {\n            defaultProps.highlighted = 'secondary';\n        }\n        if (!item.props || !('disabled' in item.props)) {\n            defaultProps.disabled = 'secondary';\n        }\n    }\n\n    return (\n        <div className={styles.item}>{Object.keys(defaultProps).length ? cloneElement(item, defaultProps) : item}</div>\n    );\n};\n","import { ReactElement, SVGProps, isValidElement } from 'react';\n\nimport { IconColor, IconDisabledColor, IconHoveredColor } from '@hh.ru/magritte-ui-icon/colors';\n\nexport interface IconProps extends SVGProps<SVGSVGElement> {\n    /* Указывает начальный цвет иконки */\n    initial?: IconColor;\n    /* Указывает есть ли поддержка accessibility API, если aria-label не указан\n     * считаем что нет поддержки. Если указан, то есть возможность для отключения.\n     * */\n    'aria-hidden'?: boolean;\n}\n\nexport interface IconDynamicProps extends IconProps {\n    /* Указывает цвет иконки, в случае если иконка динамическая\n     * (hover, focus etc. states)\n     * */\n    highlighted: IconHoveredColor;\n    /* Указывает цвет иконки, в случае если иконка динамическая\n     * и задизейблена\n     * */\n    disabled: IconDisabledColor;\n}\n\ntype MakeNever<T> = {\n    [key in keyof T]?: never;\n};\n\ntype IconPropsUnion = (IconProps & MakeNever<Omit<IconDynamicProps, keyof IconProps>>) | IconDynamicProps;\nexport const isIconComponent = (\n    component: ReactElement\n): component is ReactElement<IconPropsUnion, IconWrapperComponent> => {\n    return isValidElement(component) && typeof component.type !== 'string' && 'isIcon' in component?.type;\n};\n\nexport interface IconWrapperComponent {\n    (props: IconProps): ReactElement;\n    (props: IconDynamicProps): ReactElement;\n    displayName?: string;\n    isIcon?: boolean;\n}\n\nexport interface IconWrapperComponentSize16 extends IconWrapperComponent {\n    _size: 16;\n}\nexport interface IconWrapperComponentSize24 extends IconWrapperComponent {\n    _size: 24;\n}\nexport interface IconWrapperComponentSize32 extends IconWrapperComponent {\n    _size: 32;\n}\n","import { ComponentPropsWithoutRef, FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './icon.less';\n\ninterface IconDynamicProps extends ComponentPropsWithoutRef<'div'> {\n    /** На всю ширину */\n    stretched?: boolean;\n}\n\nconst IconDynamic: FC<PropsWithChildren<IconDynamicProps>> = ({ stretched = false, ...iconDynamicProps }) => (\n    <div\n        className={classnames(styles['icon-dynamic'], {\n            [styles['icon-dynamic_full-width']]: stretched,\n        })}\n        {...iconDynamicProps}\n    />\n);\n\nexport default IconDynamic;\n","import { ReactElement } from 'react';\nimport classnames from 'classnames';\n\nimport { useDisabled, DisabledContext } from '@hh.ru/magritte-common-use-disabled';\nimport { ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport { CellItem } from '@hh.ru/magritte-ui-cell/CellItem';\nimport { CellProps } from '@hh.ru/magritte-ui-cell/types';\nimport { isCheckboxComponent, isRadioComponent } from '@hh.ru/magritte-ui-checkbox-radio';\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport { IconDynamic } from '@hh.ru/magritte-ui-icon';\n\nimport styles from './styles.less';\n\nconst isCheckableComponent = (component?: ReactElement) => {\n    if (!component) {\n        return false;\n    }\n    return isCheckboxComponent(component) || isRadioComponent(component);\n};\n\nexport type CellPropsWithCustomElement = ComponentWithCustomElement<CellProps, 'div'>;\n\nexport const Cell: CellPropsWithCustomElement = ({\n    children,\n    vertPadding,\n    horPadding,\n    align = 'center',\n    roundedBorder = false,\n    onClick,\n    left,\n    right,\n    avatar,\n    showDivider = false,\n    width,\n    disabled,\n    'data-qa': dataQa = 'cell',\n    Element,\n    ...props\n}) => {\n    let isActive = false;\n    const forceDisabled = useDisabled();\n    const isComponentDisabled = !!disabled || forceDisabled;\n    let ElementType: keyof JSX.IntrinsicElements;\n    const isCheckable = isCheckableComponent(left) || isCheckableComponent(right);\n    const additionalProps: Record<string, unknown> = {\n        'data-qa': dataQa,\n    };\n\n    if (Element === undefined) {\n        ElementType = 'div';\n        if (isCheckable) {\n            isActive = true;\n            ElementType = 'label';\n        } else if (onClick) {\n            isActive = true;\n            ElementType = 'button';\n            additionalProps.type = 'button';\n            additionalProps.onClick = onClick;\n        }\n    } else {\n        ElementType = Element;\n    }\n\n    return (\n        <IconDynamic stretched={!width}>\n            <ElementType\n                {...props}\n                className={classnames(styles.cell, {\n                    [styles.active]: isActive,\n                    [styles.vertPadding]: vertPadding,\n                    [styles.horPadding]: horPadding,\n                    [styles.rounded]: roundedBorder,\n                    [styles.alignCenter]: align === 'center',\n                    [styles.alignTop]: align === 'top',\n                })}\n                disabled={isComponentDisabled}\n                {...additionalProps}\n                style={{ width }}\n            >\n                <DisabledContext.Provider value={isComponentDisabled}>\n                    {left && <CellItem item={left} />}\n                    {avatar && <div className={styles.item}>{avatar}</div>}\n                    <div className={classnames(styles.content)}>\n                        <div className={styles.text}>{children}</div>\n                        {right && <CellItem item={right} />}\n                        {showDivider && (\n                            <div className={styles.divider}>\n                                <Divider />\n                            </div>\n                        )}\n                    </div>\n                </DisabledContext.Provider>\n            </ElementType>\n        </IconDynamic>\n    );\n};\n","import { isValidElement, ReactElement, ChangeEventHandler } from 'react';\n\ninterface CheckboxRadioProps {\n    /** флаг состояния по умолчанию - включен - true, выключен/отсутствует - false */\n    checked?: boolean;\n    /** компонент отключен для взаимодействия */\n    disabled?: boolean;\n    /** ошибка валидации */\n    invalid?: boolean;\n    /** функция действия на изменение состояния */\n    onChange?: ChangeEventHandler<HTMLInputElement>;\n    /** атрибут aria-label */\n    ariaLabel?: string;\n    /** атрибут data-qa для контейнера */\n    dataQaContainer?: string;\n}\n\nexport interface RadioBaseProps extends CheckboxRadioProps {\n    /** атрибут data-qa для визуального элемента выполняющего роль радио */\n    dataQaRadio?: string;\n}\n\nexport type RadioProps = RadioBaseProps & JSX.IntrinsicElements['input'];\n\nexport type CheckboxProps = CheckboxRadioProps & {\n    /** визуальное состояние неопределено */\n    indeterminate?: boolean;\n    /** атрибут data-qa для визуального элемента выполняющего роль чекбокса */\n    dataQaCheckbox?: string;\n} & JSX.IntrinsicElements['input'];\n\nexport const isCheckboxComponent = (component: ReactElement): component is ReactElement<CheckboxProps> => {\n    return isValidElement(component) && typeof component.type !== 'string' && 'isCheckbox' in component.type;\n};\n\nexport const isRadioComponent = (component: ReactElement): component is ReactElement<RadioProps> => {\n    return isValidElement(component) && typeof component.type !== 'string' && 'isRadio' in component.type;\n};\n","import React, { FC, PropsWithChildren } from 'react';\n\nimport { Loader } from '@hh.ru/magritte-ui-loader';\nimport { Text, TextProps, TextStyle, TextTypography, TextDynamic } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './cell-text.less';\n\ntype TextType = 'title' | 'subtitle' | 'description';\n\ntype CellTextCommonProps = PropsWithChildren<{\n    /** Стиль текста */\n    style?: TextProps['style'];\n    /** Максимальное кол-во видимых строк.\n     * Текст, который не поместился, будет обрезан до `...`\n     *\n     * Если свойство не указано, то текст обрезаться не будет */\n    maxLines?: number;\n    'data-qa'?: string;\n}>;\n\nexport type CellTextProps = CellTextCommonProps &\n    (\n        | {\n              /** Режим отображения, задает стилизацию */\n              type?: 'title' | 'description';\n              showLoader?: never;\n          }\n        | {\n              type?: 'subtitle';\n              /** Флаг показа лоадера, доступен только при type=\"subtitle\" */\n              showLoader?: boolean;\n          }\n    );\n\nconst TextDefaultStyleMap: Record<TextType, TextStyle> = {\n    title: TextStyle.Primary,\n    subtitle: TextStyle.Secondary,\n    description: TextStyle.Tertiary,\n};\n\nexport const CellText: FC<CellTextProps> = ({\n    showLoader = false,\n    style,\n    type = 'title',\n    'data-qa': dataQa = 'cell-text',\n    maxLines,\n    children,\n}) => {\n    const typography = type === 'title' ? TextTypography.Label2Regular : TextTypography.Label3Regular;\n    const textStyle = style || TextDefaultStyleMap[type];\n\n    if (!children) {\n        return null;\n    }\n\n    return (\n        <div className={styles.container} data-qa={dataQa}>\n            {showLoader && <Loader />}\n            <TextDynamic>\n                <div className={styles.text} style={{ WebkitLineClamp: maxLines || 'none' }}>\n                    <Text typography={typography} style={textStyle}>\n                        {children}\n                    </Text>\n                </div>\n            </TextDynamic>\n        </div>\n    );\n};\n","import { PropsWithChildren, forwardRef, useLayoutEffect, useRef, KeyboardEventHandler } from 'react';\n\nimport { keyboardMatches, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { useScrollContext } from '@hh.ru/magritte-internal-scrollable-container';\nimport { CheckableCardElement } from '@hh.ru/magritte-ui-checkable-card/CheckableCardElement';\nimport type { CheckableCardProps } from '@hh.ru/magritte-ui-checkable-card/types';\n\nexport const CheckableCard = forwardRef<HTMLLabelElement, PropsWithChildren<CheckableCardProps>>(\n    (\n        {\n            children,\n            padding = 0,\n            paddingLeft,\n            paddingRight,\n            paddingTop,\n            paddingBottom,\n            borderRadius = 0,\n            borderRadiusTopLeft,\n            borderRadiusTopRight,\n            borderRadiusBottomLeft,\n            borderRadiusBottomRight,\n            toneHover,\n            onFocus,\n            onClick,\n            disabled,\n            type = 'checkbox',\n            flexible,\n            ...inputProps\n        },\n        ref\n    ) => {\n        const contentRef = useRef<HTMLDivElement>(null);\n        const inputRef = useRef<HTMLInputElement>(null);\n        const forceDisabled = useDisabled();\n\n        const { registerItem, removeItem, scrollToItem } = useScrollContext();\n\n        const stopKeyboardEventPropagation: KeyboardEventHandler<HTMLLabelElement> = (event) => {\n            if (\n                event.target === inputRef.current ||\n                !keyboardMatches(event as unknown as KeyboardEvent, [keyboardKeys.Space, keyboardKeys.Enter])\n            ) {\n                return;\n            }\n            event.stopPropagation();\n            inputRef.current?.dispatchEvent(new KeyboardEvent(event.type, { key: event.key, code: event.code }));\n        };\n\n        useLayoutEffect(() => {\n            registerItem(contentRef);\n            return () => removeItem(contentRef);\n        }, [registerItem, removeItem]);\n\n        useLayoutEffect(() => {\n            if ((inputProps.checked || inputProps.defaultChecked) && type === 'radio' && contentRef.current) {\n                scrollToItem(contentRef);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const props = {\n            padding,\n            paddingLeft,\n            paddingRight,\n            paddingTop,\n            paddingBottom,\n            borderRadius,\n            borderRadiusTopLeft,\n            borderRadiusTopRight,\n            borderRadiusBottomLeft,\n            borderRadiusBottomRight,\n            disabled,\n            toneHover,\n            flexible,\n        };\n\n        return (\n            <CheckableCardElement\n                {...props}\n                onClickCapture={(event) => {\n                    if (event.target === inputRef.current) {\n                        return;\n                    }\n                    event.preventDefault();\n                    event.stopPropagation();\n                    inputRef.current?.click();\n                }}\n                padding={padding}\n                borderRadius={borderRadius}\n                onKeyDownCapture={stopKeyboardEventPropagation}\n                onKeyPressCapture={stopKeyboardEventPropagation}\n                onKeyUpCapture={stopKeyboardEventPropagation}\n                input={\n                    <input\n                        {...inputProps}\n                        ref={inputRef}\n                        type={type}\n                        disabled={!!disabled || forceDisabled}\n                        onFocus={(event) => {\n                            onFocus?.(event);\n                            scrollToItem(contentRef);\n                        }}\n                        onClick={(event) => {\n                            onClick?.(event);\n                            scrollToItem(contentRef);\n                        }}\n                    />\n                }\n                Element=\"label\"\n                labelRef={ref}\n                contentRef={contentRef}\n            >\n                {children}\n            </CheckableCardElement>\n        );\n    }\n);\n\nCheckableCard.displayName = 'CheckableCard';\n","import classnames from 'classnames';\n\nimport { useDisabled, DisabledContext } from '@hh.ru/magritte-common-use-disabled';\nimport type {\n    CheckableCardElementProps,\n    CheckableCardBorderRadius,\n    CheckableCardPadding,\n} from '@hh.ru/magritte-ui-checkable-card/types';\n\nimport styles from './checkable-card.less';\n\nconst genBorderRadiusClasses = (radiusProps: {\n    TopLeft?: CheckableCardBorderRadius;\n    TopRight?: CheckableCardBorderRadius;\n    BottomLeft?: CheckableCardBorderRadius;\n    BottomRight?: CheckableCardBorderRadius;\n}) =>\n    Object.entries(radiusProps).reduce<string[]>(\n        (acc, [key, value]) =>\n            value !== undefined ? [...acc, styles[`borderRadius${key as keyof typeof radiusProps}${value}`]] : acc,\n        []\n    );\n\nconst genPaddingProps = (paddingProps: {\n    Left?: CheckableCardPadding;\n    Right?: CheckableCardPadding;\n    Top?: CheckableCardPadding;\n    Bottom?: CheckableCardPadding;\n}) =>\n    Object.entries(paddingProps).reduce<Record<string, number>>(\n        (acc, [key, value]) => (value !== undefined ? { ...acc, [`padding${key}`]: value } : acc),\n        {}\n    );\n\nexport const CheckableCardElement: CheckableCardElementProps = ({\n    children,\n    padding,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    paddingBottom,\n    borderRadius,\n    borderRadiusTopLeft,\n    borderRadiusTopRight,\n    borderRadiusBottomLeft,\n    borderRadiusBottomRight,\n    toneHover,\n    disabled,\n    flexible,\n    Element = 'div',\n    input,\n    labelRef,\n    contentRef,\n    highlighted = false,\n    focusVisble = false,\n    ...props\n}) => {\n    const paddingProps = genPaddingProps({\n        Left: paddingLeft,\n        Right: paddingRight,\n        Top: paddingTop,\n        Bottom: paddingBottom,\n    });\n\n    const forceDisabled = useDisabled();\n\n    return (\n        <Element\n            {...props}\n            className={classnames(\n                styles.card,\n                styles[`borderRadius${borderRadius}`],\n                genBorderRadiusClasses({\n                    TopLeft: borderRadiusTopLeft,\n                    TopRight: borderRadiusTopRight,\n                    BottomLeft: borderRadiusBottomLeft,\n                    BottomRight: borderRadiusBottomRight,\n                }),\n                {\n                    [styles.toneHover]: toneHover,\n                    [styles.hugContent]: !flexible,\n                    [styles.disabled]: forceDisabled || !!disabled,\n                    [styles.cardHighlighted]: highlighted,\n                    'focus-visible': focusVisble,\n                }\n            )}\n            data-interactive={true}\n            ref={(current: HTMLDivElement | HTMLLabelElement | null) => {\n                if (labelRef && 'current' in labelRef) {\n                    labelRef.current = current;\n                }\n            }}\n        >\n            {input}\n            <div className={styles.content} ref={contentRef}>\n                <div className={styles.contentBorderContainer} style={{ padding, ...paddingProps }}>\n                    <div className={styles.contentOpacityContainer}>\n                        <DisabledContext.Provider value={forceDisabled || !!disabled}>\n                            {children}\n                        </DisabledContext.Provider>\n                    </div>\n                </div>\n            </div>\n        </Element>\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { FcWithFlag } from '@hh.ru/magritte-types';\nimport { CheckboxProps } from '@hh.ru/magritte-ui-checkbox-radio/types';\nimport { CheckboxCheckSize24, CheckboxLineSize24 } from '@hh.ru/magritte-ui-icon/variants/private';\n\nimport styles from './checkbox.less';\n\nexport const Checkbox: FcWithFlag<CheckboxProps, 'isCheckbox'> = ({\n    checked = false,\n    disabled,\n    invalid,\n    indeterminate = false,\n    onChange,\n    readOnly,\n    ariaLabel,\n    dataQaContainer = 'checkbox-container',\n    dataQaCheckbox = 'checkbox',\n    ...props\n}) => {\n    const forceDisabled = useDisabled();\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useEffect(() => {\n        if (!checkboxRef.current) {\n            return;\n        }\n        checkboxRef.current.indeterminate = indeterminate;\n    }, [indeterminate]);\n\n    const isControlledChecked: {\n        checked?: boolean;\n        defaultChecked?: boolean;\n    } = { [onChange || readOnly ? 'checked' : 'defaultChecked']: checked };\n\n    return (\n        <span className={styles.checkbox_container} data-qa={dataQaContainer}>\n            <input\n                {...props}\n                className={styles.checkbox_input}\n                ref={checkboxRef}\n                readOnly={readOnly}\n                type=\"checkbox\"\n                {...isControlledChecked}\n                aria-label={ariaLabel}\n                disabled={forceDisabled || !!disabled}\n                onChange={onChange}\n            />\n            <span\n                className={classnames(styles.checkbox, {\n                    [styles.invalid]: invalid,\n                })}\n                data-qa={dataQaCheckbox}\n            ></span>\n            <span className={styles.icon_wrapper}>\n                {indeterminate ? <CheckboxLineSize24 /> : <CheckboxCheckSize24 />}\n            </span>\n        </span>\n    );\n};\n\nCheckbox.isCheckbox = true;\n","import classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { FcWithFlag } from '@hh.ru/magritte-types';\nimport { RadioProps } from '@hh.ru/magritte-ui-checkbox-radio/types';\nimport { RadioCircleSize24 } from '@hh.ru/magritte-ui-icon/variants/private';\n\nimport styles from './radio.less';\n\nexport const Radio: FcWithFlag<RadioProps, 'isRadio'> = ({\n    checked = false,\n    disabled,\n    invalid,\n    onChange,\n    readOnly,\n    ariaLabel,\n    dataQaContainer = 'radio-container',\n    dataQaRadio = 'radio',\n    ...props\n}) => {\n    const forceDisabled = useDisabled();\n    const isControlledRadio = { [onChange || readOnly ? 'checked' : 'defaultChecked']: checked };\n\n    return (\n        <span className={styles.radio_container} data-qa={dataQaContainer}>\n            <input\n                {...props}\n                className={styles.radio_input}\n                type=\"radio\"\n                readOnly={readOnly}\n                {...isControlledRadio}\n                aria-label={ariaLabel}\n                disabled={forceDisabled || !!disabled}\n                onChange={onChange}\n            />\n            <span\n                className={classnames(styles.radio, {\n                    [styles.invalid]: invalid,\n                })}\n                data-qa={dataQaRadio}\n            ></span>\n            <span className={styles.icon_wrapper}>\n                <RadioCircleSize24 />\n            </span>\n        </span>\n    );\n};\n\nRadio.isRadio = true;\n","import { cloneElement, FC } from 'react';\nimport classnames from 'classnames';\n\nimport { CustomChipProps } from '@hh.ru/magritte-ui-chips/types';\nimport { Counter, CounterMode, CounterStyle } from '@hh.ru/magritte-ui-counter';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './chips.less';\n\ntype ChipContentProps = Pick<\n    CustomChipProps,\n    'addon' | 'hideLabel' | 'ariaLabel' | 'counter' | 'onDelete' | 'children'\n>;\n\nconst ChipContent: FC<ChipContentProps> = ({ addon, ariaLabel, hideLabel, onDelete, counter, children }) => {\n    const showLabel = !hideLabel && !!children;\n    return (\n        <span\n            className={classnames(styles.content, {\n                [styles.contentDeletable]: !!onDelete,\n            })}\n        >\n            {addon && (\n                <span className={styles.addon}>\n                    {cloneElement(addon, {\n                        'data-qa': 'chip-addon',\n                        'aria-label': ariaLabel,\n                        'aria-hidden': showLabel,\n                    })}\n                </span>\n            )}\n            {showLabel && (\n                <>\n                    <span className={styles.label}>\n                        <Text Element=\"span\" typography={TextTypography.Subtitle1Semibold}>\n                            {children}\n                        </Text>\n                    </span>\n                    {counter && (\n                        <span className={styles.counter}>\n                            <Counter label={counter} style={CounterStyle.Attention} mode={CounterMode.Secondary} />\n                        </span>\n                    )}\n                </>\n            )}\n        </span>\n    );\n};\n\nexport default ChipContent;\n","import { InputHTMLAttributes, ReactElement, ReactFragment } from 'react';\n\nimport { SpacingCorrectionProps } from '@hh.ru/magritte-internal-scrollable-container';\nimport { WithCustomElementHelper } from '@hh.ru/magritte-types';\n\nexport enum ChipStyle {\n    Neutral = 'neutral',\n    Accent = 'accent',\n}\n\ntype ChipChildren = ReactElement | string | number | ReactFragment;\n\ntype ChipHideLabelWithIcon = {\n    /** Флаг отключения отображения текста и счетчика */\n    hideLabel: true;\n    /** Текст для озвучивания скринридером, если нет текста для отображения */\n    ariaLabel: string;\n    /** Контент размером 24x24, чаще всего иконка */\n    addon: ReactElement;\n};\ntype ChipHideLabelWithoutIcon = { hideLabel?: false; ariaLabel?: string; addon?: ReactElement };\n\ntype ChipChildrenProps = {\n    /** Содержимое лейбла чипса */\n    children: ChipChildren;\n    style?: ChipStyle;\n    /** Значение в счетчике */\n    counter?: string;\n} & (ChipHideLabelWithIcon | ChipHideLabelWithoutIcon);\n\ntype ChildIconProps = {\n    children?: never;\n    addon: ReactElement;\n    ariaLabel: string;\n    counter?: never;\n    hideLabel?: never;\n};\n\ntype ChipCommonProps = {\n    /** Стиль чипса */\n    style?: ChipStyle;\n    /** data-qa атрибут для самой верхней обертки */\n    dataQaWrapper?: string;\n} & (ChipChildrenProps | ChildIconProps);\n\ntype CheckableChipBaseProps = {\n    /** Тип чипса */\n    type: 'radio' | 'checkbox';\n    /** data-qa атрибут для инпута */\n    'data-qa'?: string;\n} & ChipCommonProps;\n\nexport type CheckableChipProps = Omit<InputHTMLAttributes<HTMLInputElement>, keyof CheckableChipBaseProps> &\n    CheckableChipBaseProps;\n\nexport type CustomChipProps = {\n    /** Флаг выбран ли чипс */\n    checked?: boolean;\n    /** Флаг включен ли чипс */\n    disabled?: boolean;\n    /** Обработчик клика по крестику. Крестик рисуется, если этот проп задан */\n    onDelete?: () => void;\n    /** Кастомный компонент */\n    Element?: 'button' | 'a';\n    /** data-qa атрибут для Element */\n    'data-qa'?: string;\n} & ChipCommonProps;\n\nexport type CustomChipWithElementProps = WithCustomElementHelper<CustomChipProps, 'button'>;\n\nexport type ChipsContainerProps =\n    | {\n          'data-qa'?: string;\n          noWrap?: never;\n          /** Включает возможность скролла в конейнере */\n          scrollable?: false;\n      }\n    | ({\n          'data-qa'?: string;\n          /** Отключает перенос чипс внутри контейнера со скроллом */\n          noWrap?: boolean;\n          scrollable: true;\n      } & SpacingCorrectionProps);\n","import { forwardRef } from 'react';\nimport classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { RefComponentWithCustomElementRenderer, ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport { Action, ActionMode } from '@hh.ru/magritte-ui-action';\nimport ChipContent from '@hh.ru/magritte-ui-chips/ChipContent';\nimport { ChipStyle, CustomChipProps } from '@hh.ru/magritte-ui-chips/types';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/variants/icon';\n\nimport styles from './chips.less';\n\nconst STYLE_TO_CSS = {\n    [ChipStyle.Neutral]: styles.chipStyleNeutral,\n    [ChipStyle.Accent]: styles.chipStyleAccent,\n};\n\nconst CustomChipComponent: RefComponentWithCustomElementRenderer<CustomChipProps, 'button'> = (\n    {\n        Element = 'button',\n        addon,\n        style = ChipStyle.Neutral,\n        counter,\n        onDelete,\n        checked = false,\n        disabled = false,\n        ariaLabel,\n        hideLabel,\n        dataQaWrapper = 'chip',\n        children,\n        ...buttonProps\n    },\n    ref\n) => {\n    const forceDisabled = useDisabled();\n    const isComponentDisabled = disabled || forceDisabled;\n\n    let additionalAttributes: Record<string, unknown>;\n\n    if (Element === 'button') {\n        additionalAttributes = {\n            type: 'button',\n        };\n    } else {\n        additionalAttributes = {\n            tabIndex: isComponentDisabled ? -1 : 0,\n            'aria-disabled': disabled,\n        };\n    }\n\n    if (ref) {\n        additionalAttributes.ref = ref;\n    }\n\n    return (\n        <div\n            className={classnames(styles.chipWrapper, isComponentDisabled && styles.chipWrapperDisabled)}\n            data-qa={dataQaWrapper}\n        >\n            <Element\n                {...additionalAttributes}\n                {...buttonProps}\n                className={classnames(styles.chip, styles.chipCustom, STYLE_TO_CSS[style], {\n                    [styles.chipChecked]: checked,\n                })}\n                disabled={isComponentDisabled}\n            >\n                <ChipContent\n                    counter={counter}\n                    onDelete={onDelete}\n                    addon={addon}\n                    ariaLabel={ariaLabel}\n                    hideLabel={hideLabel}\n                >\n                    {children}\n                </ChipContent>\n            </Element>\n            {onDelete && (\n                <span className={styles.close}>\n                    <Action\n                        data-qa=\"chip-delete-action\"\n                        onClick={onDelete}\n                        disabled={isComponentDisabled}\n                        mode={ActionMode.Secondary}\n                        icon={CrossOutlinedSize24}\n                    />\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport const CustomChip = forwardRef(CustomChipComponent) as ComponentWithCustomElement<CustomChipProps, 'button'>;\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { CounterMode, CounterProps, CounterSize, CounterStyle } from '@hh.ru/magritte-ui-counter/types';\n\nimport styles from './counter.less';\n\nexport const Counter: FC<CounterProps> = ({\n    label,\n    size = CounterSize.Medium,\n    style = CounterStyle.Attention,\n    mode = CounterMode.Primary,\n}) => {\n    const disable = useDisabled();\n    return (\n        <span\n            className={classNames(styles['counter-container'], {\n                [styles[`counter-size-${size}`]]: size,\n                [styles[`counter_${mode}-${style}`]]: style && !disable,\n                [styles[`counter_${mode}-${style}-disabled`]]: !!(style && disable),\n            })}\n        >\n            {label}\n        </span>\n    );\n};\n","import { ReactNode } from 'react';\n\nexport enum CounterSize {\n    Small = 'small',\n    Medium = 'medium',\n}\n\nexport enum CounterStyle {\n    Attention = 'attention',\n    Neutral = 'neutral',\n    Accent = 'accent',\n    Contrast = 'contrast',\n}\n\nexport enum CounterMode {\n    Primary = 'primary',\n    Secondary = 'secondary',\n}\n\nexport interface CounterProps {\n    /**\n     * Текст для лэйбла\n     **/\n    label: ReactNode;\n\n    /**\n     * Размер\n     **/\n    size?: CounterSize;\n\n    /**\n     * Стиль\n     **/\n    style?: CounterStyle;\n\n    /**\n     *Тип отображения\n     **/\n    mode?: CounterMode;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { DividerMode, DividerProps } from '@hh.ru/magritte-ui-divider/types';\n\nimport styles from './divider.less';\n\nconst genLengthStyles = (mode: DividerMode, length: number | undefined) => {\n    if (!length) {\n        return {};\n    }\n\n    if (mode === 'vertical') {\n        return {\n            height: `${length}px`,\n        };\n    }\n\n    return {\n        width: `${length}px`,\n    };\n};\n\nexport const Divider: FC<DividerProps> = ({\n    mode = 'horizontal',\n    marginTop = 0,\n    marginRight = 0,\n    marginLeft = 0,\n    marginBottom = 0,\n    length,\n}) => {\n    return (\n        <div\n            className={classNames({\n                [styles.horizontal]: mode === 'horizontal',\n                [styles.vertical]: mode === 'vertical',\n            })}\n            style={{\n                ...genLengthStyles(mode, length),\n                margin: `${marginTop}px ${marginRight}px ${marginBottom}px ${marginLeft}px`,\n            }}\n            role=\"separator\"\n            aria-orientation={mode}\n        />\n    );\n};\n","import { useRef, PropsWithChildren, useEffect, forwardRef } from 'react';\n\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport type { DividerState } from '@hh.ru/magritte-ui-drop/types';\n\nimport styles from './drop.less';\n\nexport const DropContainer = forwardRef<\n    HTMLDivElement,\n    PropsWithChildren<{\n        height?: number | string;\n        dividerState: DividerState;\n        minHeightForContent: number;\n    }>\n>(({ children, height, dividerState, minHeightForContent }, ref) => {\n    const dividerRef = useRef<HTMLDivElement>(null);\n    const showDivider = dividerState !== 'hide';\n\n    useEffect(() => {\n        if (showDivider && ref && 'current' in ref && ref?.current !== null && dividerRef.current && !!height) {\n            const hasScroll = ref.current.scrollHeight - ref.current.clientHeight > 0;\n            dividerRef.current.style.visibility = hasScroll ? 'visible' : 'hidden';\n        }\n    }, [ref, dividerRef, height, showDivider]);\n\n    const props = showDivider\n        ? {\n              onScroll: ({ target }: { target: EventTarget }) => {\n                  const scrollableContainer = target as HTMLDivElement;\n\n                  if (dividerRef.current && dividerState !== 'showWhenFullyScrolled') {\n                      const scrollEnded =\n                          scrollableContainer.scrollTop +\n                              scrollableContainer.offsetHeight -\n                              scrollableContainer.scrollHeight ===\n                          0;\n\n                      dividerRef.current.style.visibility = scrollEnded ? 'hidden' : 'visible';\n                  }\n              },\n          }\n        : {};\n\n    return (\n        <>\n            <div\n                ref={ref}\n                className={styles.dropContainer}\n                style={{ height: height === undefined ? `${minHeightForContent}px` : 'auto' }}\n                {...props}\n            >\n                {children}\n            </div>\n            {showDivider && (\n                <div ref={dividerRef} data-qa=\"drop-divider\">\n                    <Divider />\n                </div>\n            )}\n        </>\n    );\n});\n\nDropContainer.displayName = 'DropContainer';\n","import { type FC, type PropsWithChildren, memo } from 'react';\n\nconst PureChildren: FC<PropsWithChildren> = memo(({ children }) => <>{children}</>);\n\nPureChildren.displayName = 'PureChildren';\n\nexport { PureChildren };\n","import { useRef, useEffect, useState, type ReactElement, ForwardedRef, forwardRef } from 'react';\nimport classnames from 'classnames';\n\nimport {\n    DropBase,\n    INITIAL_HEIGHT_VALUE,\n    type DropBaseHorizontalPositionWithoutCenter,\n    type DropBaseVerticalPositionWithoutCenter,\n} from '@hh.ru/magritte-internal-drop-base';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { DropContainer } from '@hh.ru/magritte-ui-drop/DropContainer';\nimport { PureChildren } from '@hh.ru/magritte-ui-drop/PureChildren';\nimport type { DropProps } from '@hh.ru/magritte-ui-drop/types';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\n\nimport styles from './drop.less';\n\nconst DropComponent = <T extends DropBaseHorizontalPositionWithoutCenter | DropBaseVerticalPositionWithoutCenter>(\n    {\n        direction,\n        alignment,\n        visible,\n        host,\n        activatorRef,\n        onClose,\n        maxWidth = 320,\n        minHeightForContent = 300,\n        space = 600,\n        children,\n        footer,\n        role = 'dialog',\n        dividerState = 'show',\n        widthEqualToActivator = false,\n        'data-qa': dataQA = 'drop',\n        ...props\n    }: DropProps<T>,\n    ref: ForwardedRef<HTMLElement>\n): ReactElement | null => {\n    const { isMobile } = useBreakpoint();\n    const footerRef = useRef<HTMLDivElement>(null);\n    const [animationTimeout, setAnimationTimeout] = useState(200);\n\n    useEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles.dropAnimationTimeout);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n        const animationTimeout = parseInt(style.getPropertyValue(`--animation-duration`), 10);\n        if (Number.isInteger(animationTimeout)) {\n            setAnimationTimeout(animationTimeout);\n        }\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    if (isMobile) {\n        return null;\n    }\n\n    const position = { direction, alignment } as\n        | DropBaseVerticalPositionWithoutCenter\n        | DropBaseHorizontalPositionWithoutCenter;\n\n    return (\n        <DropBase\n            {...props}\n            {...position}\n            visible={visible}\n            host={host}\n            activatorRef={activatorRef}\n            closeByClickOutside\n            onClose={onClose}\n            autoFocusWhenOpened={role !== 'status'}\n            occupyAllAvailableViewportHeight\n            animationClassNames={{\n                enter: styles.dropEnter,\n                enterActive: styles.dropEnterActive,\n                exit: styles.dropExit,\n                exitActive: styles.dropExitActive,\n            }}\n            animationTimeout={animationTimeout}\n            widthEqualToActivator={widthEqualToActivator}\n            ref={ref}\n        >\n            {({ direction }, { metrics, dropScrollableContainerRef }) => (\n                <Layer layer={InternalLayerName.Drop}>\n                    <div\n                        className={classnames(`${styles.drop} ${styles[`drop-direction-${direction}`]}`, {\n                            [styles.dropSpace300]: space === 300,\n                            [styles.dropSpace400]: space === 400,\n                            [styles.dropSpace600]: space === 600,\n                            [styles.dropWithFooter]: !!footer,\n                        })}\n                        style={{\n                            maxWidth: widthEqualToActivator ? 'none' : maxWidth,\n                            maxHeight: metrics.height === INITIAL_HEIGHT_VALUE ? 'auto' : `${metrics.height}px`,\n                        }}\n                        data-qa={dataQA}\n                    >\n                        <DropContainer\n                            height={metrics.height === INITIAL_HEIGHT_VALUE ? undefined : metrics.height}\n                            dividerState={!footer ? 'hide' : dividerState}\n                            ref={dropScrollableContainerRef}\n                            minHeightForContent={minHeightForContent}\n                        >\n                            <PureChildren>{children}</PureChildren>\n                        </DropContainer>\n                        {footer && (\n                            <div ref={footerRef} className={styles.dropFooter}>\n                                <PureChildren>{footer}</PureChildren>\n                            </div>\n                        )}\n                    </div>\n                </Layer>\n            )}\n        </DropBase>\n    );\n};\n\nconst Drop = forwardRef(DropComponent) as (<\n    T extends DropBaseHorizontalPositionWithoutCenter | DropBaseVerticalPositionWithoutCenter\n>(\n    props: DropProps<T> & { ref?: ForwardedRef<HTMLElement> }\n) => ReactElement | null) & { displayName?: string };\n\nDrop.displayName = 'Drop';\n\nexport { Drop };\n","import { FC, useCallback, KeyboardEvent, MouseEvent, useState } from 'react';\nimport classNames from 'classnames';\n\nimport '@hh.ru/magritte-common-focus-visible';\nimport { keyboardMatches, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { BottomSheet } from '@hh.ru/magritte-ui-bottom-sheet';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { Counter, CounterMode, CounterStyle, CounterSize } from '@hh.ru/magritte-ui-counter';\nimport { FormLabelProps } from '@hh.ru/magritte-ui-form-label/types';\nimport { QuestionCircleOutlinedSize16, CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { NavigationBar } from '@hh.ru/magritte-ui-navigation-bar';\nimport { Tooltip } from '@hh.ru/magritte-ui-tooltip';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './form-label.less';\n\nexport const FormLabel: FC<FormLabelProps> = (props: FormLabelProps) => {\n    const disabled = useDisabled();\n    const { isMobile } = useBreakpoint();\n    const [showBottomSheet, setShowBottomSheet] = useState<boolean>(false);\n    const [showTooltip, setShowTooltip] = useState<boolean>(false);\n\n    const { children, info, counter, 'data-qa': dataQa = 'form-label', ...restProps } = props;\n\n    const onClick = useCallback(\n        (event: MouseEvent) => {\n            if (info) {\n                event.preventDefault();\n            }\n\n            if (!disabled) {\n                setShowBottomSheet(true);\n            }\n        },\n        [disabled, info]\n    );\n\n    const onKeyDown = useCallback(\n        (event: KeyboardEvent<HTMLLabelElement>) => {\n            if (disabled || !onClick) {\n                return;\n            }\n\n            if (keyboardMatches(event.nativeEvent, [keyboardKeys.Enter, keyboardKeys.Space])) {\n                onClick(event as unknown as MouseEvent<HTMLLabelElement>);\n            }\n        },\n        [onClick, disabled]\n    );\n\n    const propsForInfo = info\n        ? {\n              tabIndex: disabled ? -1 : 0,\n              role: 'button',\n              onKeyDown,\n              onClick,\n              onMouseEnter: () => setShowTooltip(true),\n              onMouseLeave: () => setShowTooltip(false),\n              onFocus: () => setShowTooltip(true),\n              onBlur: () => setShowTooltip(false),\n          }\n        : {};\n\n    return (\n        <>\n            <label\n                className={classNames(styles['form-label'], {\n                    [styles[`form-label_disabled`]]: disabled,\n                })}\n                data-qa={dataQa}\n                {...propsForInfo}\n                {...restProps}\n            >\n                {children}\n                {!!counter && (\n                    <span className={styles['form-label__counter']}>\n                        <Counter\n                            label={counter}\n                            style={CounterStyle.Attention}\n                            mode={CounterMode.Secondary}\n                            size={CounterSize.Medium}\n                            data-qa=\"form-label-counter\"\n                        />\n                    </span>\n                )}\n                {info && (\n                    <Tooltip\n                        maxWidth={300}\n                        visible={!isMobile && showTooltip}\n                        activator={\n                            <span data-qa=\"form-label-info-icon\" className={styles['form-label__icon']}>\n                                <QuestionCircleOutlinedSize16 />\n                            </span>\n                        }\n                        alignment=\"center\"\n                        direction=\"top\"\n                        data-qa=\"form-label-tooltip\"\n                    >\n                        {info}\n                    </Tooltip>\n                )}\n            </label>\n            {info && (\n                <BottomSheet\n                    visible={isMobile && showBottomSheet}\n                    onClose={() => {\n                        setShowBottomSheet(false);\n                    }}\n                    header={\n                        <NavigationBar\n                            title={children}\n                            right={{\n                                icon: CrossOutlinedSize24,\n                                onClick: () => {\n                                    setShowBottomSheet(false);\n                                },\n                            }}\n                            showDivider\n                        />\n                    }\n                    data-qa=\"form-label-bottom-sheet\"\n                >\n                    <Text typography={TextTypography.Label2Regular}>{info}</Text>\n                </BottomSheet>\n            )}\n        </>\n    );\n};\n","import { forwardRef, PropsWithChildren, useContext } from 'react';\n\nimport { Breakpoint, BreakpointContext } from '@hh.ru/magritte-ui-breakpoint';\n\nimport styles from './column.less';\n\ntype ColumnCount = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport interface GridColumnProps extends PropsWithChildren {\n    /**\n     * Флаг для сохранения флексового контекста,\n     * может пригодиться, например, если колонку надо растянуть по всей высоте строки\n     */\n    flexibleContent?: boolean;\n    /** Количество занимаемых колонок на XS(320px до 599px) экране (макс 4),\n     *  которые тянутся по доступной ширине\n     * */\n    xs: 0 | 1 | 2 | 3 | 4;\n    /** Количество занимаемых колонок на S(600px до 1023px) экране (макс 8),\n     *  которые тянутся по доступной ширине\n     * - Eсли не указать, то наследует значение от xs\n     * */\n    s?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n    /** Количество занимаемых колонок на M(1024px до 1279px) экране (макс 12).\n     * - Ширина одной колонки имет фиксированную ширину равную 56px\n     * - Eсли не указать, то наследует значение от s->xs\n     * */\n    m?: ColumnCount;\n    /** Количество занимаемых колонок на L(1280px до 1439px) экране (макс 12).\n     * - Ширина одной колонки имет фиксированную ширину равную 72px\n     * - Eсли не указать, то наследует значение от m->s->xs\n     * */\n    l?: ColumnCount;\n    /** Количество занимаемых колонок на XL(1440px до 1919px) экране (макс 12).\n     * - Ширина одной колонки имет фиксированную ширину равную 80px если макет без сайдбара.\n     * - Ширина одной колонки имет фиксированную ширину равную 60px если макет c сайдбаром.\n     * - Eсли не указать, то наследует значение от l->m->s->xs\n     * */\n    xl?: ColumnCount;\n    /** Количество занимаемых колонок на XXL(от 1920px) экране (макс 12)\n     * - Ширина одной колонки имет фиксированную ширину равную 96px если макет без сайдбара.\n     * - Ширина одной колонки имет фиксированную ширину равную 92px если макет c сайдбаром.\n     * - Ширина одной колонки имет фиксированную ширину равную 68px если макет c двумя сайдбарами.\n     * - Eсли не указать, то наследует значение от xl->m->s->xs\n     * */\n    xxl?: ColumnCount;\n}\n\ntype VisibilityCheckProps = Omit<GridColumnProps, 'children'>;\n\nconst isVisible = (sizeProps: VisibilityCheckProps, restriction: boolean, breakpoint: Breakpoint): boolean => {\n    if (!restriction) {\n        return true;\n    }\n\n    return sizeProps[breakpoint] !== 0;\n};\n\nconst GridColumn = forwardRef<HTMLDivElement, GridColumnProps>(\n    ({ children, xs, s, m, l, xl, xxl, flexibleContent = false, ...props }, ref) => {\n        const { renderRestriction, breakpoint } = useContext(BreakpointContext);\n        const extendsS = s ?? xs;\n        const extendsM = m ?? extendsS;\n        const extendsL = l ?? extendsM;\n        const extendsXL = xl ?? extendsL;\n        const extendsXXL = xxl ?? extendsXL;\n\n        if (\n            !isVisible(\n                { xs, s: extendsS, m: extendsM, l: extendsL, xl: extendsXL, xxl: extendsXXL },\n                renderRestriction,\n                breakpoint\n            )\n        ) {\n            return null;\n        }\n\n        const classNames = [\n            styles[`grid-column`],\n            styles[`grid-column_xs-${xs}`],\n            styles[`grid-column_s-${extendsS}`],\n            styles[`grid-column_m-${extendsM}`],\n            styles[`grid-column_l-${extendsL}`],\n            styles[`grid-column_xl-${extendsXL}`],\n            styles[`grid-column_xxl-${extendsXXL}`],\n        ];\n\n        return (\n            <div {...props} ref={ref} className={classNames.join(' ')}>\n                {flexibleContent ? (\n                    children\n                ) : (\n                    /* Пустой div нужен для сброса flex контейнера*/\n                    <div>{children}</div>\n                )}\n            </div>\n        );\n    }\n);\n\nGridColumn.displayName = 'GridColumn';\n\nexport default GridColumn;\n","import { FC, useState } from 'react';\n\nimport GridColumn from '@hh.ru/magritte-ui-grid/Column';\nimport GridLayout from '@hh.ru/magritte-ui-grid/Layout';\nimport GridRow from '@hh.ru/magritte-ui-grid/Row';\n\nimport styles from './highlighter.less';\n\ninterface GridHighlighterProps {\n    /** Включает показ подсветки модульной сетки */\n    show?: boolean;\n}\n\nconst GridHighlighter: FC<GridHighlighterProps> = ({ show = false }) => {\n    const [isVisibleLeftSidebar, setVisibleLeftSidebar] = useState(false);\n    const [isVisibleRightSidebar, setVisibleRightSidebar] = useState(false);\n\n    const [isVisibleLeftSidebarOnXL, setVisibleLeftSidebarOnXL] = useState(false);\n    const [isVisibleRightSidebarOnXL, setVisibleRightSidebarOnXL] = useState(false);\n\n    const [isVisibleSettings, setVisibleSettings] = useState(false);\n\n    if (!show) {\n        return null;\n    }\n\n    const content = <div className={styles['grid-highlighter-column']} />;\n\n    return (\n        <div className={styles['grid-highlighter-wrapper']}>\n            <GridLayout\n                rightSidebar={isVisibleRightSidebar ? content : undefined}\n                leftSidebar={isVisibleLeftSidebar ? content : undefined}\n                hideLeftOnXL={isVisibleLeftSidebarOnXL}\n                hideRightOnXL={isVisibleRightSidebarOnXL}\n            >\n                <GridRow>\n                    <GridColumn xs={1}>{content}</GridColumn>\n                    <GridColumn xs={1}>{content}</GridColumn>\n                    <GridColumn xs={1}>{content}</GridColumn>\n                    <GridColumn xs={1}>{content}</GridColumn>\n                    <GridColumn xs={0} s={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} s={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} s={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} s={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} m={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} m={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} m={1}>\n                        {content}\n                    </GridColumn>\n                    <GridColumn xs={0} m={1}>\n                        {content}\n                    </GridColumn>\n                </GridRow>\n            </GridLayout>\n            {isVisibleSettings && (\n                <div className={styles['grid-highlighter-grid-props']} data-qa=\"magritte-highlighter-settings\">\n                    <div className={styles['grid-highlighter-grid-prop']}>\n                        <div>Left sidebar: {isVisibleLeftSidebar ? 'on' : 'off'}</div>\n                        <button\n                            type=\"button\"\n                            className={styles.gridHighlighterToggle}\n                            onClick={() => setVisibleLeftSidebar(!isVisibleLeftSidebar)}\n                        >\n                            toggle\n                        </button>\n                    </div>\n                    <div className={styles['grid-highlighter-grid-prop']}>\n                        <div>Right sidebar: {isVisibleRightSidebar ? 'on' : 'off'}</div>\n                        <button\n                            type=\"button\"\n                            className={styles.gridHighlighterToggle}\n                            onClick={() => setVisibleRightSidebar(!isVisibleRightSidebar)}\n                        >\n                            toggle\n                        </button>\n                    </div>\n                    <div className={styles['grid-highlighter-grid-prop']}>\n                        <div>Hide left sidebar on XL: {isVisibleLeftSidebarOnXL ? 'on' : 'off'}</div>\n                        <button\n                            type=\"button\"\n                            className={styles.gridHighlighterToggle}\n                            onClick={() => setVisibleLeftSidebarOnXL(!isVisibleLeftSidebarOnXL)}\n                        >\n                            toggle\n                        </button>\n                    </div>\n                    <div className={styles['grid-highlighter-grid-prop']}>\n                        <div>Hide right sidebar on XL: {isVisibleRightSidebarOnXL ? 'on' : 'off'}</div>\n                        <button\n                            type=\"button\"\n                            className={styles.gridHighlighterToggle}\n                            onClick={() => setVisibleRightSidebarOnXL(!isVisibleRightSidebarOnXL)}\n                        >\n                            toggle\n                        </button>\n                    </div>\n                </div>\n            )}\n            <button\n                type=\"button\"\n                data-qa=\"magritte-highlighter-toggle-settings\"\n                className={styles['grid-highlighter-settings']}\n                onClick={() => setVisibleSettings(!isVisibleSettings)}\n            >\n                ⚙️\n            </button>\n        </div>\n    );\n};\n\nGridHighlighter.displayName = 'GridHighlighter';\n\nexport default GridHighlighter;\n","import { ReactNode, forwardRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './layout.less';\n\nexport interface GridLayoutProps extends PropsWithChildren {\n    /** Компонент для отрисовки в левом сайдбаре */\n    leftSidebar?: ReactNode;\n    /** Компонент для отрисовки в правом сайдбаре */\n    rightSidebar?: ReactNode;\n    /** Флаг скрытия правого сайдбара на XL экране */\n    hideRightOnXL?: boolean;\n    /** Флаг скрытия левого сайдбара на XL экране */\n    hideLeftOnXL?: boolean;\n    /** Атрибут data-qa для левого сайдбара */\n    leftSidebarDataQA?: string;\n    /** Атрибут data-qa для правого сайдбара */\n    rightSidebarDataQA?: string;\n    /** Атрибут data-qa для контента */\n    contentDataQA?: string;\n}\n\nconst hasResetWidthOnXL = (\n    hasLeftSidebar: boolean,\n    hasRightSidebar: boolean,\n    hideLeft: boolean,\n    hideRight: boolean\n) => {\n    const onlyLeftSidebarHidden = hasLeftSidebar && hideLeft && !hasRightSidebar;\n    const onlyRightSidebarHidden = hasRightSidebar && hideRight && !hasLeftSidebar;\n    const allSidebarsHidden = hideRight && hideLeft;\n\n    if (onlyLeftSidebarHidden || onlyRightSidebarHidden || allSidebarsHidden) {\n        return true;\n    }\n\n    return false;\n};\n\nconst GridLayout = forwardRef<HTMLDivElement, GridLayoutProps>(\n    (\n        {\n            children,\n            hideLeftOnXL = false,\n            hideRightOnXL = false,\n            rightSidebar,\n            leftSidebar,\n            leftSidebarDataQA = 'left-sidebar',\n            rightSidebarDataQA = 'right-sidebar',\n            contentDataQA = 'main-content',\n            ...props\n        },\n        ref\n    ) => {\n        return (\n            <div\n                {...props}\n                className={classnames(styles['grid-layout'], {\n                    [styles['grid-layout_with-left-sidebar']]: leftSidebar,\n                    [styles['grid-layout_with-right-sidebar']]: rightSidebar,\n                    [styles['grid-layout_hide-left-sidebar']]: hideLeftOnXL,\n                    [styles['grid-layout_hide-right-sidebar']]: hideRightOnXL,\n                    [styles['grid-layout_reset-width']]: hasResetWidthOnXL(\n                        !!leftSidebar,\n                        !!rightSidebar,\n                        hideLeftOnXL,\n                        hideRightOnXL\n                    ),\n                })}\n                ref={ref}\n            >\n                {leftSidebar && (\n                    <div className={`${styles['grid-sidebar']} ${styles['grid-sidebar_left']}`}>\n                        <div data-qa={leftSidebarDataQA}>{leftSidebar}</div>\n                    </div>\n                )}\n                <div className={styles['grid-layout-content']} data-qa={contentDataQA}>\n                    {children}\n                </div>\n                {rightSidebar && (\n                    <div className={`${styles['grid-sidebar']} ${styles['grid-sidebar_right']}`}>\n                        <div data-qa={rightSidebarDataQA}>{rightSidebar}</div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n);\n\nGridLayout.displayName = 'GridLayout';\n\nexport default GridLayout;\n","import { forwardRef, PropsWithChildren } from 'react';\n\nimport styles from './row.less';\n\nconst GridRow = forwardRef<HTMLDivElement, PropsWithChildren>(({ children, ...props }, ref) => {\n    return (\n        <div {...props} className={styles['grid-row']} ref={ref}>\n            {children}\n        </div>\n    );\n});\n\nGridRow.displayName = 'GridRow';\n\nexport default GridRow;\n","import { ComponentType, SVGProps } from 'react';\nimport classnames from 'classnames';\n\nimport {\n    IconWrapperComponent,\n    IconWrapperComponentSize16,\n    IconWrapperComponentSize24,\n    IconWrapperComponentSize32,\n} from '@hh.ru/magritte-ui-icon/iconTypes';\n\nimport styles from './icon.less';\n\ntype IconComponent = ComponentType<SVGProps<SVGSVGElement>>;\ntype SizedIconWrapperComponent<T extends string> = T extends `${string}Size16`\n    ? IconWrapperComponentSize16\n    : T extends `${string}Size24`\n    ? IconWrapperComponentSize24\n    : T extends `${string}Size32`\n    ? IconWrapperComponentSize32\n    : IconWrapperComponent;\n\nconst hoc = function <T extends string>(Icon: IconComponent): SizedIconWrapperComponent<T> {\n    const IconWrapper: IconWrapperComponent = ({\n        initial = 'primary',\n        'aria-label': ariaLabel,\n        'aria-hidden': ariaHidden,\n        ...props\n    }) => {\n        let highlightedValue;\n        let disabledValue;\n        let propsToPass = { ...props };\n\n        if ('highlighted' in propsToPass) {\n            const { highlighted, ...lastProps } = propsToPass;\n            propsToPass = lastProps;\n            highlightedValue = highlighted;\n        }\n\n        if ('disabled' in propsToPass) {\n            const { disabled, ...lastProps } = propsToPass;\n            propsToPass = lastProps;\n            disabledValue = disabled;\n        }\n\n        return (\n            <Icon\n                {...propsToPass}\n                aria-label={ariaLabel}\n                aria-hidden={ariaLabel ? ariaHidden || undefined : true}\n                role=\"img\"\n                focusable=\"false\"\n                className={classnames(styles.icon, {\n                    [styles[`icon_initial-${initial}`]]: !!initial,\n                    [styles[`icon_highlighted-${highlightedValue}`]]: !!highlightedValue,\n                    [styles[`icon_disabled-${disabledValue}`]]: !!disabledValue,\n                })}\n            />\n        );\n    };\n\n    IconWrapper.isIcon = true;\n    return IconWrapper as SizedIconWrapperComponent<T>;\n};\n\nexport default hoc;\n","import { InputHTMLAttributes, forwardRef, ForwardedRef, useCallback, useId, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport { Selection } from '@hh.ru/magritte-common-text-selection';\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { FieldHint } from '@hh.ru/magritte-internal-field-hint';\nimport { Action, ActionMode } from '@hh.ru/magritte-ui-action';\nimport { Counter } from '@hh.ru/magritte-ui-counter';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { IconWrapperComponentSize24 } from '@hh.ru/magritte-ui-icon/src/iconTypes';\nimport { BaseInputProps, InputSize } from '@hh.ru/magritte-ui-input/types';\nimport { useFocus } from '@hh.ru/magritte-ui-input/useFocus';\nimport { useInputAriaProps } from '@hh.ru/magritte-ui-input/useInputAriaProps';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './input.less';\n\nconst BaseInputComponent = (\n    {\n        onChange,\n        onFocus,\n        onBlur,\n        value,\n        placeholder,\n        disabled = false,\n        postfix,\n        size = InputSize.Medium,\n        elevatePlaceholder = false,\n        invalid = false,\n        description,\n        errorMessage,\n        formatter,\n        buttonIcon,\n        clearable = false,\n        clearableOnFocus,\n        onButtonClick,\n        buttonDataQa,\n        inputIcon,\n        wrapperRef,\n        counter,\n        fixedPlaceholder,\n        ...restProps\n    }: BaseInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof BaseInputProps>,\n    ref: ForwardedRef<HTMLInputElement>\n) => {\n    const wrapperCurrentRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [isActionVisible, setActionVisible] = useState(false);\n    const inputRefCallback = useMultipleRefs(ref, inputRef);\n    const wrapperRefCallback = useMultipleRefs(wrapperRef, wrapperCurrentRef);\n    const descriptionId = useId();\n    const labelId = useId();\n    const change = useCallback(\n        (newValue: string) => {\n            if (inputRef.current && formatter) {\n                const caretPosition = Selection.getCaretPosition(inputRef.current);\n                const formatResult = formatter(value, newValue, caretPosition || 0);\n                requestAnimationFrame(() => {\n                    if (inputRef.current) {\n                        Selection.setCaretPosition(inputRef.current, formatResult.caretPosition);\n                    }\n                });\n                onChange(formatResult.outputValue);\n                return;\n            }\n            onChange(newValue);\n        },\n        [formatter, onChange, value, inputRef]\n    );\n\n    const clearClickHandler = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            onChange('');\n            inputRef.current && inputRef.current.focus();\n            onButtonClick?.(event);\n        },\n        [onChange, inputRef, onButtonClick]\n    );\n\n    const forceDisabled = useDisabled();\n    const isComponentDisabled = forceDisabled || !!disabled;\n\n    const { changeHandler, focusHandler, blurHandler, isFocused } = useFocus(change, onFocus, onBlur);\n    const placeholderCanElevated = size === InputSize.Large && !!elevatePlaceholder && !!placeholder;\n\n    const currentValue = formatter?.('', value, 0).formattedValue || value;\n    const buttonQaLabel = buttonDataQa || `input-${clearable ? 'clearable-' : ''}button`;\n    const ariaProps = useInputAriaProps({\n        invalid,\n        hasDescription: !!description,\n        hasPlaceholder: !!placeholder,\n        descriptionId,\n        labelId,\n    });\n\n    const handleWrapperFocus = () => {\n        setActionVisible(true);\n    };\n\n    const handleWrapperBlur = () => {\n        requestAnimationFrame(() => {\n            if (!wrapperCurrentRef.current?.contains(document.activeElement)) {\n                setActionVisible(false);\n            }\n        });\n    };\n\n    const focusedOrFilled = isFocused || value !== '';\n    const placeholderIsElevated = focusedOrFilled && placeholderCanElevated;\n    const showPostfix = !!postfix && (placeholderIsElevated || value !== '');\n    const showFixedPlaceholder = focusedOrFilled && !!fixedPlaceholder;\n    const showLabel = placeholderCanElevated || (value === '' && !showFixedPlaceholder);\n    const showMask = showPostfix || showFixedPlaceholder;\n\n    const InputIconComponent = inputIcon || null;\n    const showClearButton = value.length > 0 && (clearable || (!!clearableOnFocus && isActionVisible));\n\n    return (\n        <div\n            ref={wrapperRefCallback}\n            className={classnames(styles.input, {\n                [styles.input_focused]: isFocused,\n                [styles.input_disabled]: isComponentDisabled,\n                [styles.input_large]: size === InputSize.Large,\n                [styles.input_elevated]: placeholderCanElevated,\n                [styles.input_invalid]: !!invalid && !isFocused,\n                [styles['input_with-right']]: !!buttonIcon || showClearButton || counter,\n                [styles['input_with-icon']]: !!inputIcon,\n            })}\n            onFocus={clearableOnFocus ? handleWrapperFocus : undefined}\n            onBlur={clearableOnFocus ? handleWrapperBlur : undefined}\n        >\n            <div className={styles['input__position-container']}>\n                <input\n                    {...restProps}\n                    {...ariaProps}\n                    disabled={isComponentDisabled}\n                    suppressHydrationWarning\n                    className={styles['input__input-field']}\n                    value={currentValue}\n                    onInput={changeHandler} // maskito требует onInput, (https://maskito.dev/frameworks/react) который работает аналогично onChange\n                    onFocus={focusHandler}\n                    onBlur={blurHandler}\n                    ref={inputRefCallback}\n                />\n                {!!InputIconComponent && (\n                    <div\n                        className={classnames(styles['input__icon-container'], {\n                            [styles['input__icon-container_large']]: size === InputSize.Large,\n                        })}\n                    >\n                        <InputIconComponent />\n                    </div>\n                )}\n                <div className={styles['input__rigging-container']}>\n                    {showLabel && (\n                        <label\n                            className={classnames(styles.input__label, {\n                                [styles.input__label_elevated]: placeholderIsElevated,\n                            })}\n                            id={ariaProps['aria-labelledby']}\n                        >\n                            {placeholder}\n                        </label>\n                    )}\n                    {showMask && (\n                        <div className={styles.input__mask}>\n                            <Text typography={TextTypography.Label2Regular}>\n                                <span className={styles['input__value-ghost']}>{currentValue}</span>\n                                {showFixedPlaceholder && (\n                                    <span className={styles['input__fixed-placeholder']}>\n                                        {fixedPlaceholder.slice(value.length)}\n                                    </span>\n                                )}\n                                {showPostfix && (\n                                    <>\n                                        {'\\u00A0'}\n                                        {postfix}\n                                    </>\n                                )}\n                            </Text>\n                        </div>\n                    )}\n                </div>\n                {(buttonIcon || showClearButton || counter) && (\n                    <div className={styles['input__right-container']}>\n                        {(buttonIcon || showClearButton) && (\n                            <Action\n                                data-qa={buttonQaLabel}\n                                mode={ActionMode.Secondary}\n                                onMouseDown={(event) => event.preventDefault()} // чтобы инпут не терял фокус\n                                onClick={showClearButton ? clearClickHandler : (onButtonClick as () => void)}\n                                icon={\n                                    showClearButton ? CrossOutlinedSize24 : (buttonIcon as IconWrapperComponentSize24)\n                                }\n                                disabled={isComponentDisabled}\n                            />\n                        )}\n                        {counter && <Counter label={counter} />}\n                    </div>\n                )}\n            </div>\n            <FieldHint\n                description={description}\n                errorMessage={errorMessage}\n                descriptionId={ariaProps['aria-describedby']}\n                disabled={isComponentDisabled}\n                focused={isFocused}\n                invalid={invalid}\n            />\n        </div>\n    );\n};\n\nconst BaseInput = forwardRef(BaseInputComponent);\n\nBaseInput.displayName = 'BaseInput';\n\nexport { BaseInput };\n","import { useCallback, useState, FocusEventHandler, ChangeEventHandler } from 'react';\n\nexport const useFocus = <T extends HTMLInputElement | HTMLTextAreaElement = HTMLInputElement>(\n    onChange: (value: string) => void,\n    onFocus: FocusEventHandler<T> | undefined,\n    onBlur: FocusEventHandler<T> | undefined\n): {\n    changeHandler: ChangeEventHandler<T>;\n    focusHandler: FocusEventHandler<T>;\n    blurHandler: FocusEventHandler<T>;\n    isFocused: boolean;\n} => {\n    const [isFocused, setFocused] = useState(false);\n\n    const changeHandler = useCallback<ChangeEventHandler<T>>(\n        (event) => {\n            onChange(event.target.value);\n        },\n        [onChange]\n    );\n\n    const focusHandler = useCallback<FocusEventHandler<T>>(\n        (event) => {\n            setFocused(true);\n            onFocus?.(event);\n        },\n        [setFocused, onFocus]\n    );\n\n    const blurHandler = useCallback<FocusEventHandler<T>>(\n        (event) => {\n            setFocused(false);\n            onBlur?.(event);\n        },\n        [setFocused, onBlur]\n    );\n\n    return { changeHandler, focusHandler, blurHandler, isFocused };\n};\n","import { InputHTMLAttributes, forwardRef, ForwardedRef } from 'react';\n\nimport { BaseInput } from '@hh.ru/magritte-ui-input/BaseInput';\nimport { ControlledInputProps } from '@hh.ru/magritte-ui-input/types';\n\n// Здесь создаем новый компонент, а не переиспользуем BaseInput as <...>, чтобы обеспечить уникальность displayName\nconst InputComponent = (\n    props: ControlledInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof ControlledInputProps>,\n    ref: ForwardedRef<HTMLInputElement>\n) => <BaseInput ref={ref} {...props} />;\n\nconst Input = forwardRef(InputComponent);\n\nInput.displayName = 'Input';\n\nexport { Input };\n","const MINUS_SIGN = '\\u2212';\nconst MINUS_VARIANTS = ['-', MINUS_SIGN];\n\nexport interface FormatParams {\n    /** Разделитель групп разрядов */\n    groupSeparator?: string;\n    /**\n     * Символы, использование которых допускается для отделения дробной части при вводе.\n     * При форматировании для отделении дробной части будет использоваться символ с индексом 0.\n     **/\n    decimalMark?: string[];\n    /** Размер групп разрядов */\n    groupSize?: number;\n    /** Максимальное количество разрядов в дробной части */\n    decimalLength?: number;\n    /** Допустимы ли отрицательные числа */\n    allowNegative?: boolean;\n}\n\nexport const defaults = {\n    groupSeparator: '\\u2009',\n    decimalMark: [',', '.'],\n    groupSize: 3,\n    decimalLength: 2,\n    allowNegative: true,\n};\n\nconst clean = (text: string, params: FormatParams): string => {\n    const trimmedText = text.trim();\n    const minus = params.allowNegative && MINUS_VARIANTS.includes(trimmedText[0]) ? '-' : '';\n    const decimalMarkRegExpString = `[${params.decimalMark?.join('')}]`;\n    const delimiter = String.fromCharCode(\n        Math.max(...(params.decimalMark?.map((mark) => mark.charCodeAt(0)) || []), '9'.charCodeAt(0)) + 1\n    );\n    const cleanedText = trimmedText\n        .replace(new RegExp(`[^\\\\d${params.decimalMark?.join('')}]+`, 'g'), '') // Удаляем всё, кроме разделителей\n        .replace(new RegExp(decimalMarkRegExpString), delimiter) // Первый разделитель меняем на delimiter\n        .replace(new RegExp(decimalMarkRegExpString, 'g'), ''); // Удаляем все остальные разделители\n    const splittedText = `${minus}${cleanedText}`.split(delimiter); // Разрезаем по первому разделителю\n\n    if (params.decimalLength === null) {\n        return splittedText.join('.');\n    }\n    if (params.decimalLength === 0 || splittedText.length === 1) {\n        return splittedText[0];\n    }\n\n    return `${splittedText[0]}.${splittedText[1].slice(0, params.decimalLength)}`;\n};\n\n/**\n * Форматирует строку с учетом параметров\n *\n * @param {String}      text                                    текст для валидации\n * @param {Object}      passedParams                            параметры\n * @param {Number}      [passedParams.groupSize=3]              количество цифр в группе\n * @param {Number|null} [passedParams.decimalLength=2]          ограничение количества знаков после запятой.\n *                                                              `null` — без ограничения\n * @param {String}      [passedParams.groupSeparator=\"\\u2009\"]  разделитель групп\n * @param {String}      [passedParams.decimalMark=\",\"]          разделитель дробной части\n * @param {Boolean}     [passedParams.allowNegative=true]       разрешить отрицательные числа\n */\nexport const format = (text: string, passedParams?: FormatParams): string => {\n    const params = { ...defaults, ...passedParams };\n    const integerGroupsSplit = new RegExp(`\\\\B(?=(\\\\d{${params.groupSize}})+(?!\\\\d))`, 'g');\n    const splittedText = clean(text, params).split('.');\n    splittedText[0] = splittedText[0].replace(integerGroupsSplit, params.groupSeparator).replace(/^-/, MINUS_SIGN);\n    if (splittedText[0] === '' && splittedText.length === 1) {\n        return '';\n    }\n    if (splittedText[1] === '') {\n        return splittedText[0];\n    }\n    if (splittedText[0] === '') {\n        splittedText[0] = '0';\n    }\n    return splittedText.join(params.decimalMark[0]);\n};\n","import { format, type FormatParams, defaults } from '@hh.ru/magritte-common-number-formatter';\nimport { InputFormatter } from '@hh.ru/magritte-ui-input/types';\n\nconst calculateDelimiters = (rawText: string, formatted: string, groupSeparator: string): number =>\n    formatted.split(groupSeparator).length - rawText.trim().split(groupSeparator).length;\n\nexport const numberFormatterFactory: (params?: FormatParams) => InputFormatter = (passedParams = {}) => {\n    const filteredParams = (Object.keys(passedParams) as Array<keyof typeof passedParams>).reduce<FormatParams>(\n        (acc, key) =>\n            passedParams[key] === undefined\n                ? acc\n                : {\n                      ...acc,\n                      [key]: passedParams[key],\n                  },\n        {}\n    );\n    const params = { ...defaults, ...filteredParams };\n    const ouputFormatParams = {\n        groupSeparator: '',\n        decimalMark: ['.', ...params.decimalMark],\n        allowNegative: params.allowNegative,\n        decimalLength: params.decimalLength,\n    };\n    const decimalDelimitersRegExp = new RegExp(`[${params.decimalMark?.join('')}]`, 'g');\n\n    return (prevValue: string, value: string, caretPosition: number) => {\n        const decimalDelimitersCount = value.match(decimalDelimitersRegExp)?.length || 0;\n        if (decimalDelimitersCount > 1) {\n            const lastChar = prevValue.charAt(value.length - 1);\n            const formattedValue = format(prevValue, params) + (params.decimalMark.includes(lastChar) ? lastChar : '');\n            const decimalDelimitersPosition = formattedValue.search(decimalDelimitersRegExp);\n            return {\n                formattedValue,\n                outputValue:\n                    format(prevValue, ouputFormatParams) + (params.decimalMark.includes(lastChar) ? lastChar : ''),\n                caretPosition: decimalDelimitersPosition + 1,\n            };\n        }\n        const lastChar = value.charAt(value.length - 1);\n        const prevLastChar = prevValue.charAt(prevValue.length - 1);\n        const formattedValue = format(value, params) + (params.decimalMark.includes(lastChar) ? lastChar : '');\n        const formattedPrevValue =\n            format(prevValue, params) + (params.decimalMark.includes(prevLastChar) ? prevLastChar : '');\n        const outputValue = format(value, ouputFormatParams) + (params.decimalMark.includes(lastChar) ? lastChar : '');\n        // разница вы количестве разделителей разрядов между предыдушим и текущим значениями\n        const delimitersDelta = calculateDelimiters(formattedPrevValue, formattedValue, params.groupSeparator);\n        const prevValueFirstDelimiterPosition = formattedPrevValue.indexOf(params.groupSeparator) + 1;\n        // если каретка находится левее первого символа разделителя разрядов, то не применяем сдвиг с учетом\n        // разницы в количестве разделителей, т.к. сдвигаются только символы справа от первого разделителя\n        const caret = caretPosition < prevValueFirstDelimiterPosition ? caretPosition : caretPosition + delimitersDelta;\n\n        return {\n            formattedValue,\n            outputValue,\n            caretPosition: formattedPrevValue === formattedValue ? Math.max(caret - 1, 0) : caret,\n        };\n    };\n};\n","import { forwardRef, useMemo, InputHTMLAttributes } from 'react';\n\nimport { defaults } from '@hh.ru/magritte-common-number-formatter';\nimport { Input } from '@hh.ru/magritte-ui-input/Input';\nimport { numberFormatterFactory } from '@hh.ru/magritte-ui-input/numberFormatter';\nimport { ControlledNumberInputProps } from '@hh.ru/magritte-ui-input/types';\n\nexport const NumberInput = forwardRef<\n    HTMLInputElement,\n    ControlledNumberInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof ControlledNumberInputProps>\n>(\n    (\n        {\n            groupSeparator = defaults.groupSeparator,\n            decimalMark = defaults.decimalMark,\n            groupSize = defaults.groupSize,\n            decimalLength = defaults.decimalLength,\n            allowNegative = defaults.allowNegative,\n            ...restProps\n        },\n        ref\n    ) => {\n        const numberFormatter = useMemo(() => {\n            return numberFormatterFactory({ groupSeparator, decimalMark, groupSize, decimalLength, allowNegative });\n        }, [groupSeparator, decimalMark, groupSize, decimalLength, allowNegative]);\n\n        return <Input {...restProps} inputMode=\"decimal\" formatter={numberFormatter} ref={ref} />;\n    }\n);\n\nNumberInput.displayName = 'NumberInput';\n","import { forwardRef, useCallback, useState, InputHTMLAttributes, FocusEventHandler, useRef } from 'react';\n\nimport { Selection } from '@hh.ru/magritte-common-text-selection';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { EyeOutlinedSize24, EyeCrossedOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { Input } from '@hh.ru/magritte-ui-input/Input';\nimport { ControlledPasswordInputProps } from '@hh.ru/magritte-ui-input/types';\n\nexport const PasswordInput = forwardRef<\n    HTMLInputElement,\n    ControlledPasswordInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof ControlledPasswordInputProps>\n>(({ onFocus, ...restProps }, ref) => {\n    const [typePassword, setTypePassword] = useState(true);\n    const clickHandler = useCallback(() => {\n        setTypePassword((typePassword) => !typePassword);\n    }, [setTypePassword]);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n    const inputRefCallback = useMultipleRefs(ref, inputRef);\n\n    const focusHandler = useCallback<FocusEventHandler<HTMLInputElement>>(\n        (event) => {\n            if (inputRef.current) {\n                Selection.set(inputRef.current, 0, inputRef.current.value.length, 'forward');\n            }\n            onFocus && onFocus(event);\n        },\n        [onFocus, inputRef]\n    );\n\n    return (\n        <Input\n            {...restProps}\n            buttonDataQa=\"password-visibility-switch-button\"\n            onFocus={focusHandler}\n            type={typePassword ? 'password' : 'text'}\n            buttonIcon={typePassword ? EyeCrossedOutlinedSize24 : EyeOutlinedSize24}\n            onButtonClick={clickHandler}\n            ref={inputRefCallback}\n        />\n    );\n});\n\nPasswordInput.displayName = 'PasswordInput';\n","import { forwardRef, InputHTMLAttributes } from 'react';\n\nimport { MagnifierOutlinedSize24 } from '@hh.ru/magritte-ui-icon/variants/icon';\nimport { BaseInput } from '@hh.ru/magritte-ui-input/BaseInput';\nimport { ControlledSearchInputProps } from '@hh.ru/magritte-ui-input/types';\n\nexport const SearchInput = forwardRef<\n    HTMLInputElement,\n    ControlledSearchInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof ControlledSearchInputProps>\n>((props, ref) => {\n    return <BaseInput {...props} elevatePlaceholder={false} inputIcon={MagnifierOutlinedSize24} ref={ref} />;\n});\n\nSearchInput.displayName = 'SearchInput';\n","import { forwardRef, InputHTMLAttributes } from 'react';\n\nimport { Input } from '@hh.ru/magritte-ui-input/Input';\nimport { UncontrolledInputProps } from '@hh.ru/magritte-ui-input/types';\nimport { useUncontrolledInput } from '@hh.ru/magritte-ui-input/useUncontrolledInput';\n\nexport const UncontrolledInput = forwardRef<\n    HTMLInputElement,\n    UncontrolledInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof UncontrolledInputProps>\n>(({ value, onChange, ...restProps }, ref) => {\n    const [currentValue, changeHandler] = useUncontrolledInput(value, onChange);\n    return <Input {...restProps} value={currentValue} onChange={changeHandler} ref={ref} />;\n});\n\nUncontrolledInput.displayName = 'UncontrolledInput';\n","import { forwardRef, InputHTMLAttributes } from 'react';\n\nimport { PasswordInput } from '@hh.ru/magritte-ui-input/PasswordInput';\nimport { UncontrolledPasswordInputProps } from '@hh.ru/magritte-ui-input/types';\nimport { useUncontrolledInput } from '@hh.ru/magritte-ui-input/useUncontrolledInput';\n\nexport const UncontrolledPasswordInput = forwardRef<\n    HTMLInputElement,\n    UncontrolledPasswordInputProps & Omit<InputHTMLAttributes<HTMLInputElement>, keyof UncontrolledPasswordInputProps>\n>(({ value, onChange, ...restProps }, ref) => {\n    const [currentValue, changeHandler] = useUncontrolledInput(value, onChange);\n    return <PasswordInput {...restProps} value={currentValue} onChange={changeHandler} ref={ref} />;\n});\n\nUncontrolledPasswordInput.displayName = 'UncontrolledPasswordInput';\n","import type { FocusEventHandler, ForwardedRef, MouseEventHandler, ReactNode } from 'react';\n\nimport { type FormatParams } from '@hh.ru/magritte-common-number-formatter';\nimport { IconWrapperComponentSize24 } from '@hh.ru/magritte-ui-icon/iconTypes';\n\nexport enum InputSize {\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface InputFormatter {\n    /**\n     * @param prevValue - Значение до изменения\n     * @param value - Значение после изменения\n     * @param caretPosition - Позиция каретки после изменения\n     */\n    (prevValue: string, value: string, caretPosition: number): InputFormatterResult;\n}\n\nexport interface InputFormatterResult {\n    /** Отформатированное значение предназначенное для отображение */\n    formattedValue: string;\n    /** Значение которое будет передано в обработчик onChange */\n    outputValue: string;\n    /** Позиция в которую должна быть установлена каретка после применения изменений */\n    caretPosition: number;\n}\n\nexport interface ControlledProps {\n    /** Обработчик события изменения */\n    onChange: (value: string) => void;\n    /** Значение инпута */\n    value: string;\n}\n\nexport type UncontrolledProps = Partial<ControlledProps>;\n\ninterface InputBaseProps {\n    /** Текст плейсхолдера */\n    placeholder?: ReactNode;\n    /** Постфикс */\n    postfix?: ReactNode;\n    /** Обработчик события получения фокуса */\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    /** Обработчик события потери фокуса */\n    onBlur?: FocusEventHandler<HTMLInputElement>;\n    /** Текст подсказки под инпутом */\n    description?: ReactNode;\n    /** Текст сообщения об ошибке */\n    errorMessage?: ReactNode;\n    /** Флаг отключения инпута */\n    disabled?: boolean;\n    /** Признак невалидности */\n    invalid?: boolean;\n    /** Функция форматтер */\n    formatter?: InputFormatter;\n    /** data-qa атрибут кнопки инпута */\n    buttonDataQa?: string;\n    wrapperRef?: ForwardedRef<HTMLDivElement>;\n}\n\ninterface LargeInputProps extends InputBaseProps {\n    /** Размер инпута */\n    size: InputSize.Large;\n    /** Флаг управляющий режимом отображения поейсхолдера */\n    elevatePlaceholder?: boolean;\n}\n\nexport interface MediumInputProps extends InputBaseProps {\n    size?: InputSize.Medium;\n    elevatePlaceholder?: false;\n}\n\ntype OnButtonClickType = MouseEventHandler<HTMLButtonElement>;\n\ninterface InputWithRightButtonProps extends InputBaseProps {\n    /** Флаг управляющий показом кнопки очистки ввода */\n    clearable?: never;\n    /** Флаг управляющий показом кнопки очистки ввода при фокусе */\n    clearableOnFocus?: never;\n    /** Иконка кнопки */\n    buttonIcon: IconWrapperComponentSize24;\n    /** Обработчик события клика по кнопке */\n    onButtonClick: OnButtonClickType;\n    counter?: never;\n}\n\nexport interface InputWithoutRightButtonProps extends InputBaseProps {\n    clearable?: false;\n    clearableOnFocus?: false;\n    buttonIcon?: never;\n    onButtonClick?: never;\n    counter?: never;\n}\n\ninterface InputClearableProps extends InputBaseProps {\n    clearable: true;\n    clearableOnFocus?: never;\n    buttonIcon?: never;\n    onButtonClick?: OnButtonClickType;\n    counter?: never;\n}\n\ninterface InputClearableOnFocusProps extends InputBaseProps {\n    clearable?: never;\n    clearableOnFocus: true;\n    buttonIcon?: never;\n    onButtonClick?: OnButtonClickType;\n    counter?: never;\n}\n\nexport type InputWithRightButtonClearProps = InputClearableProps | InputClearableOnFocusProps;\n\ninterface InputWithRightCounterProps extends InputBaseProps {\n    /** Значение счетчика */\n    counter: ReactNode;\n    clearable?: never;\n    clearableOnFocus?: never;\n    buttonIcon?: never;\n    onButtonClick?: never;\n}\n\ninterface InputWithInputIconProps extends InputBaseProps {\n    inputIcon?: IconWrapperComponentSize24;\n}\n\ninterface InputWithFixedPlaceholderProps extends InputBaseProps {\n    /** Фиксированный placeholder: отображается по мере ввода в input и обрезается на длину введённого значения. Обычно применяется для input-ов с маской: дата/время, номер телефона или банковской карты и т.д. */\n    fixedPlaceholder?: string;\n}\n\ntype NoButtonInputProps = LargeInputProps | MediumInputProps;\nexport type BaseInputProps = NoButtonInputProps &\n    (\n        | InputWithRightButtonProps\n        | InputWithoutRightButtonProps\n        | InputWithRightButtonClearProps\n        | InputWithRightCounterProps\n    ) &\n    InputWithInputIconProps &\n    InputWithFixedPlaceholderProps &\n    ControlledProps;\n\ntype InputProps = NoButtonInputProps &\n    (InputWithRightButtonProps | InputWithoutRightButtonProps | InputWithRightButtonClearProps);\n\nexport type ControlledInputProps = InputProps & ControlledProps;\nexport type UncontrolledInputProps = InputProps & UncontrolledProps;\n\ntype PasswordInputProps = NoButtonInputProps & { type?: never; clearable?: never };\nexport type ControlledPasswordInputProps = PasswordInputProps & ControlledProps;\nexport type UncontrolledPasswordInputProps = PasswordInputProps & UncontrolledProps;\n\ntype NumberInputProps = InputProps & { formatter?: never } & FormatParams;\nexport type ControlledNumberInputProps = NumberInputProps & ControlledProps;\nexport type UncontrolledNumberInputProps = NumberInputProps & UncontrolledProps;\n\nexport type SearchInputProps = (InputWithoutRightButtonProps | InputClearableProps) & {\n    type?: never;\n    postfix?: never;\n    errorMessage?: never;\n    invalid?: never;\n    description?: never;\n    size?: InputSize;\n    elevatePlaceholder?: false;\n};\n\nexport type ControlledSearchInputProps = SearchInputProps & ControlledProps;\nexport type UncontrolledSearchInputProps = SearchInputProps & UncontrolledProps;\n\nexport type DateInputMask = 'd' | 'mm.yyyy' | 'dd.mm.yyyy';\nexport type TimeInputRounding = 5 | 15 | 30 | 60;\n\nexport type DateTimeInputProps = NoButtonInputProps & {\n    /** Формат заполнения даты */\n    dateMask?: DateInputMask;\n    /** Флаг для включения режима ввода времени */\n    timeMask?: boolean;\n    /** Шаг для округления введённого времени */\n    timeRounding?: TimeInputRounding;\n    /** Флаг для отображения кнопки открытия DatePicker или TimePicker */\n    openable?: boolean;\n};\nexport type ControlledDateTimeInputProps = DateTimeInputProps & ControlledProps;\nexport type UncontrolledDateTimeInputProps = DateTimeInputProps & UncontrolledProps;\n","export interface InputAriaHookProps {\n    invalid?: boolean;\n    hasPlaceholder?: boolean;\n    hasDescription?: boolean;\n    descriptionId: string;\n    labelId: string;\n}\n\ninterface AriaProps {\n    'aria-labelledby'?: string;\n    'aria-describedby'?: string;\n    'aria-invalid'?: boolean;\n}\n\nexport const useInputAriaProps = ({\n    invalid,\n    hasPlaceholder,\n    hasDescription,\n    descriptionId,\n    labelId,\n}: InputAriaHookProps): AriaProps => {\n    const ariaProps: AriaProps = {};\n    invalid && (ariaProps['aria-invalid'] = !!invalid);\n    if (hasPlaceholder) {\n        ariaProps['aria-labelledby'] = `input-label-${labelId}`;\n    }\n    if (hasDescription) {\n        ariaProps['aria-describedby'] = `input-description-${descriptionId}`;\n    }\n    return ariaProps;\n};\n","import { useState, useCallback } from 'react';\n\nexport const useUncontrolledInput = (\n    initialValue?: string,\n    changeHandler?: (value: string) => void\n): [string, (value: string) => void] => {\n    const [value, setValue] = useState(initialValue || '');\n\n    const onChange = useCallback(\n        (newValue: string) => {\n            setValue(newValue);\n            changeHandler?.(newValue);\n        },\n        [changeHandler, setValue]\n    );\n\n    return [value, onChange];\n};\n","import { ReactElement } from 'react';\n\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\n\nexport enum LayerName {\n    Content = 'content',\n    Alpha = 'alpha',\n    Epsilon = 'epsilon',\n    Iota = 'iota',\n    Omicron = 'omicron',\n    Tau = 'tau',\n}\n\nexport interface LayerProps {\n    children: ReactElement<ElementCSSInlineStyle>;\n    layer: InternalLayerName | LayerName;\n}\n\nexport const LayerValue = {\n    [LayerName.Content]: 1,\n    [LayerName.Alpha]: 500,\n    [LayerName.Epsilon]: 600,\n    [LayerName.Iota]: 700,\n    [LayerName.Omicron]: 800,\n    [LayerName.Tau]: 900,\n};\n","import { FC, cloneElement, useContext, createContext } from 'react';\n\nimport { InternalLayerValue } from '@hh.ru/magritte-internal-layer-name';\nimport { LayerProps, LayerValue } from '@hh.ru/magritte-ui-layer/types';\n\nconst LAYER_VALUES = { ...InternalLayerValue, ...LayerValue };\n\nexport const LayerContext = createContext(0);\n\nexport const Layer: FC<LayerProps> = ({ children, layer }) => {\n    const baseLayerValue = useContext(LayerContext);\n    const index = LAYER_VALUES[layer];\n    const currentIndex = baseLayerValue + index;\n    return (\n        <LayerContext.Provider value={currentIndex}>\n            {cloneElement(children, { style: { ...children.props.style, zIndex: `${currentIndex}` } })}\n        </LayerContext.Provider>\n    );\n};\n","import { FC } from 'react';\n\nimport { IconWrapperComponent } from '@hh.ru/magritte-ui-icon/src/iconTypes';\n\nimport styles from './vertically-centered-icon.less';\n\ninterface VerticallyCenteredIconProps {\n    icon: IconWrapperComponent;\n    dataQa?: string;\n}\n\nconst VerticallyCenteredIcon: FC<VerticallyCenteredIconProps> = ({ icon, dataQa }) => {\n    const IconComponent = icon;\n    return (\n        <span className={styles.verticallyCenteredIcon}>\n            <IconComponent data-qa={dataQa} />\n        </span>\n    );\n};\nexport default VerticallyCenteredIcon;\n","import { KeyboardEventHandler, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { keyboardMatch, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport VerticallyCenteredIcon from '@hh.ru/magritte-ui-link/VerticallyCenteredIcon';\nimport { LinkComponentWithCustomElement, LinkStyle } from '@hh.ru/magritte-ui-link/types';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './link.less';\n\nconst TYPOGRAPHY_WITH_ICON = [\n    TextTypography.Subtitle1Semibold,\n    TextTypography.Label2Regular,\n    TextTypography.Label3Regular,\n];\n\nconst TYPOGRAPHY_WITH_BIG_ICON = [TextTypography.Subtitle1Semibold];\n\nexport const Link: LinkComponentWithCustomElement = (props) => {\n    const {\n        Element = 'a',\n        children,\n        style = LinkStyle.Accent,\n        inline = false,\n        disabled = false,\n        iconLeft = null,\n        iconRight = null,\n        href,\n        typography = TextTypography.Label2Regular,\n        enableVisited = false,\n        'data-qa': dataQa = 'link',\n        'aria-label': ariaLabel,\n        ...otherProps\n    } = props;\n\n    const textRef = useRef<HTMLSpanElement>(null);\n    const IconLeftComponent = iconLeft;\n    const IconRightComponent = iconRight;\n    const forceDisabled = useDisabled();\n    const isComponentDisabled = forceDisabled || disabled;\n    const withIcon = TYPOGRAPHY_WITH_ICON.includes(typography);\n    const withBigIcon = TYPOGRAPHY_WITH_BIG_ICON.includes(typography);\n    let additionalAttributes: Record<string, unknown>;\n\n    if (Element === 'button') {\n        additionalAttributes = {\n            type: 'button',\n        };\n    } else {\n        additionalAttributes = {\n            tabIndex: isComponentDisabled ? -1 : 0,\n            href,\n        };\n    }\n\n    const handleKeyDown: KeyboardEventHandler = (e) => {\n        // Поддержка перехода по ссылке при нажатии Enter в случае кастомного элемента\n        if (keyboardMatch(e.nativeEvent, keyboardKeys.Enter)) {\n            // Кликаю не по кастомному элементу, а внутри него, тк кастомный может не поддерживать ни ref, ни onClick\n            textRef.current?.click();\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    const renderTextAndRightIcon = () => (\n        <>\n            <span ref={textRef} data-qa={`${dataQa}-text`} className={styles.text}>\n                {children}\n            </span>\n            {withIcon && IconRightComponent && (\n                <span className={styles.linkIconRight}>\n                    <VerticallyCenteredIcon icon={IconRightComponent} dataQa={`${dataQa}-icon-external`} />\n                </span>\n            )}\n        </>\n    );\n    const render = () => (\n        <Element\n            className={classnames(styles.link, styles[`link_style_${style}`], {\n                [styles.link_disabled]: isComponentDisabled,\n                [styles.linkBigIcon]: withBigIcon,\n                [styles.linkBlock]: !inline,\n                [styles.linkEnableVisited]: enableVisited,\n            })}\n            data-qa={dataQa}\n            disabled={isComponentDisabled}\n            aria-label={ariaLabel}\n            onKeyDown={handleKeyDown}\n            {...additionalAttributes}\n            {...otherProps}\n        >\n            <Text Element=\"span\" typography={typography}>\n                {withIcon && IconLeftComponent ? (\n                    <>\n                        <span className={styles.linkIconLeft}>\n                            <VerticallyCenteredIcon icon={IconLeftComponent} dataQa={`${dataQa}-icon-left`} />\n                        </span>\n                        <span>{renderTextAndRightIcon()}</span>\n                    </>\n                ) : (\n                    renderTextAndRightIcon()\n                )}\n            </Text>\n        </Element>\n    );\n\n    return inline ? render() : <div>{render()}</div>;\n};\n","import { ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport {\n    type IconWrapperComponentSize16,\n    type IconWrapperComponentSize24,\n} from '@hh.ru/magritte-ui-icon/src/iconTypes';\nimport { TextTypography } from '@hh.ru/magritte-ui-typography';\n\nexport enum LinkStyle {\n    Neutral = 'neutral',\n    Accent = 'accent',\n    Positive = 'positive',\n    Negative = 'negative',\n    Warning = 'warning',\n    Contrast = 'contrast',\n}\n\nexport interface LinkProps {\n    /** Кастомный элемент для линка */\n    Element: 'a' | 'button';\n    /** Расположение ссылки в тексте */\n    inline?: boolean;\n    /** Стиль компонента в зависимости от назначения */\n    style?: LinkStyle;\n    /** Отображение иконки с левой стороны ссылки */\n    iconLeft?: IconWrapperComponentSize16 | IconWrapperComponentSize24;\n    /** Отображение иконки с правой стороны ссылки */\n    iconRight?: IconWrapperComponentSize16 | IconWrapperComponentSize24;\n    /** Ссылка перестает реагировать на любое взаимодействие */\n    disabled?: boolean;\n    /** Типография */\n    typography?: TextTypography;\n    /** Ссылка */\n    href?: string;\n    /** Кастомный data-qa для тестирования */\n    'data-qa'?: string;\n    /** Вспомогательный лейбл для скринридеров */\n    'aria-label'?: string;\n    /** Флаг включения visited состояния */\n    enableVisited?: boolean;\n}\n\nexport type LinkComponentWithCustomElement = ComponentWithCustomElement<LinkProps, 'a'>;\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport {\n    LoaderOutlinedSize16,\n    LoaderOutlinedSize24,\n    LoaderOutlinedSize64,\n    LoaderOutlinedSize96,\n} from '@hh.ru/magritte-ui-icon/icon';\nimport { IconWrapperComponent } from '@hh.ru/magritte-ui-icon/src';\nimport { type LoaderSize, type LoaderProps } from '@hh.ru/magritte-ui-loader/types';\n\nimport styles from './loader.less';\n\nconst iconsBySize = new Map<LoaderSize, IconWrapperComponent>([\n    [16, LoaderOutlinedSize16],\n    [24, LoaderOutlinedSize24],\n    [64, LoaderOutlinedSize64],\n    [96, LoaderOutlinedSize96],\n]);\n\nexport const Loader: FC<LoaderProps> = ({ size = 16, 'aria-label': ariaLabel = 'loading', ...props }) => {\n    const Element = iconsBySize.get(size);\n\n    if (!Element) {\n        return null;\n    }\n\n    const baseProps = {\n        'aria-label': ariaLabel,\n        ...props,\n    };\n\n    return (\n        <span\n            className={classNames(styles.loader, {\n                [styles.internal_overriden]: !props.initial,\n            })}\n            role=\"status\"\n        >\n            <Element {...baseProps} />\n        </span>\n    );\n};\n","import { FC, useLayoutEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport { requestAnimation } from '@hh.ru/magritte-common-func-utils';\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport { ModalContentProps } from '@hh.ru/magritte-ui-modal/types';\n\nimport styles from './modal.less';\n\nexport const ModalContent: FC<ModalContentProps> = ({ children, showCloseButton, showDivider }) => {\n    const [isDividerVisible, setDividerVisible] = useState(false);\n    const contentContainerRef = useRef<HTMLDivElement>(null);\n    useLayoutEffect(() => {\n        if (showDivider && contentContainerRef.current) {\n            const observer = new ResizeObserver(\n                requestAnimation(() => {\n                    if (!contentContainerRef.current) {\n                        return;\n                    }\n                    const hasScroll =\n                        contentContainerRef.current?.scrollHeight > contentContainerRef.current?.clientHeight;\n                    setDividerVisible(hasScroll);\n                })\n            );\n            observer.observe(contentContainerRef.current);\n            return () => observer.disconnect();\n        }\n\n        return undefined;\n    }, [showDivider, setDividerVisible]);\n    return (\n        <>\n            <div\n                className={classnames(styles.modalContent, { [styles.modalContentWithCloseButton]: showCloseButton })}\n                ref={contentContainerRef}\n            >\n                {children}\n            </div>\n            {isDividerVisible && (\n                <div className={styles.dividerContainer}>\n                    <Divider />\n                </div>\n            )}\n        </>\n    );\n};\n","import { FC } from 'react';\n\nimport { ModalFooterProps } from '@hh.ru/magritte-ui-modal/types';\n\nimport styles from './modal.less';\n\nexport const ModalFooter: FC<ModalFooterProps> = ({ leftButtons, rightButtons }) => {\n    if (!leftButtons && !rightButtons) {\n        return null;\n    }\n\n    return (\n        <div className={styles.modalFooter}>\n            <div className={styles.modalButtonsContainer}>{leftButtons || null}</div>\n            <div className={styles.modalButtonsContainer}>{rightButtons || null}</div>\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { ModalHeaderProps } from '@hh.ru/magritte-ui-modal/types';\nimport { Title, TextStyle } from '@hh.ru/magritte-ui-title';\n\nimport styles from './modal.less';\n\nexport const ModalHeader: FC<ModalHeaderProps & { labelId: string }> = ({\n    title,\n    headerImage,\n    headerHeight = 0,\n    titleAlignment,\n    titleElement,\n    titleMaxLines,\n    titleSize,\n    titleDescription,\n    titleDescriptionMaxLines,\n    labelId,\n}) => {\n    if (!title && !headerImage) {\n        return null;\n    }\n\n    const minHeight = headerImage ? Math.max(headerHeight, 200) : 0;\n\n    return (\n        <div\n            data-qa=\"modal-header\"\n            className={classnames(styles.modalHeader, { [styles.modalHeaderWithImage]: !!headerImage })}\n            style={{\n                backgroundImage: headerImage\n                    ? `${title ? 'var(--modal-header-gradient), ' : ''}url(${headerImage})`\n                    : 'none',\n                minHeight,\n            }}\n        >\n            <Title\n                id={labelId}\n                Element={titleElement}\n                alignment={titleAlignment}\n                maxLines={titleMaxLines}\n                size={titleSize}\n                style={headerImage ? TextStyle.Contrast : TextStyle.Primary}\n                description={titleDescription}\n                descriptionMaxLines={titleDescriptionMaxLines}\n                descriptionStyle={headerImage ? TextStyle.Contrast : TextStyle.Primary}\n            >\n                {title}\n            </Title>\n        </div>\n    );\n};\n","import { useRef } from 'react';\n\nconst STORAGE_KEY = '__MAGRITTE_DOM_STORAGE__';\n\nexport const storeValueInDom = (key: string, value: unknown): void => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    storage[key] = value;\n    (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] = storage;\n};\n\nexport const getValueFromDom = <T>(key: string): T | undefined => {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    return storage[key] as T;\n};\n\nexport const removeValueFromDom = (key: string): void => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    delete storage[key];\n    (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] = storage;\n};\n\nconst UNIQUIE_ID_STORAGE = '_MAGRITTE_UNIQUE_ID_';\nstoreValueInDom(UNIQUIE_ID_STORAGE, 0);\n\nexport const useDomStoredUniqueId = (): string => {\n    const currentId = useRef<number>(-1);\n    if (currentId.current === -1) {\n        const id = getValueFromDom<number>(UNIQUIE_ID_STORAGE);\n        if (id === undefined) {\n            currentId.current = -1;\n        } else {\n            currentId.current = id + 1;\n        }\n        storeValueInDom(UNIQUIE_ID_STORAGE, currentId.current);\n    }\n    return currentId.current.toString();\n};\n","import { RefObject, useEffect, useLayoutEffect, useState } from 'react';\n\nimport { storeValueInDom, getValueFromDom, useDomStoredUniqueId } from '@hh.ru/magritte-common-dom-storage';\n\ntype NotifyCallbackArg = { position: number; count: number };\n\ntype Subscribers = Record<string, (position: NotifyCallbackArg) => void>;\ntype VisibilityMap = Record<string, boolean>;\ntype PositionMap = Record<string, number>;\n\ntype ModalCounterState = {\n    prevVisiblility: VisibilityMap;\n    positions: PositionMap;\n    subscribers: Subscribers;\n    count: number;\n};\n\nconst STORAGE_NAME = '_MAGRITTE_MODAL_COUNTER_';\n\nconst getState = (): ModalCounterState => {\n    const state = getValueFromDom<ModalCounterState>(STORAGE_NAME);\n    if (state === undefined) {\n        return {\n            prevVisiblility: {},\n            positions: {},\n            subscribers: {},\n            count: 0,\n        };\n    }\n    return state;\n};\n\nconst storeState = (state: ModalCounterState): void => {\n    storeValueInDom(STORAGE_NAME, state);\n};\n\nconst counterFactory = () => {\n    return {\n        updateVisiblility: (id: string, visible: boolean) => {\n            // eslint-disable-next-line prefer-const\n            const state = getState();\n            const prevVisible = !!state.prevVisiblility[id];\n            if (visible === prevVisible) {\n                return;\n            }\n            state.prevVisiblility[id] = visible;\n            if (visible) {\n                state.count += 1;\n                state.positions[id] = state.count;\n            } else {\n                state.count -= 1;\n                const currentPosition = state.positions[id];\n                state.positions[id] = 0;\n                Object.entries(state.positions).forEach(([key, value]) => {\n                    state.positions[key] = value > currentPosition ? value - 1 : value;\n                });\n            }\n            storeState(state);\n        },\n        subscribe: (id: string, callback: (position: NotifyCallbackArg) => void) => {\n            const state = getState();\n            state.subscribers[id] = callback;\n            storeState(state);\n        },\n        unsubscribe: (id: string) => {\n            const state = getState();\n            delete state.subscribers[id];\n            storeState(state);\n        },\n        notifyAll: () => {\n            const { subscribers, count, positions } = getState();\n            Object.entries(subscribers).forEach(([id, callback]) => callback({ position: positions[id], count }));\n        },\n    };\n};\n\nconst counter = counterFactory();\n\nexport const useModalOrder = (visible: boolean, modalRef: RefObject<HTMLDivElement>): [number, number] => {\n    const [position, setPosition] = useState<{ position: number; count: number }>({ position: 0, count: 0 });\n    const id = useDomStoredUniqueId();\n\n    useLayoutEffect(() => {\n        counter.updateVisiblility(id, visible);\n        counter.notifyAll();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [visible]);\n\n    useEffect(() => {\n        counter.subscribe(id, setPosition);\n        counter.updateVisiblility(id, visible);\n        return () => {\n            counter.unsubscribe(id);\n            counter.updateVisiblility(id, false);\n            counter.notifyAll();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id]);\n\n    useLayoutEffect(() => {\n        // Если это самый \"верхний\" модал передаем туда фокус\n        if (position.position === position.count && position.count > 0) {\n            modalRef.current?.focus();\n        }\n    }, [position, modalRef]);\n\n    return [position.position, position.count];\n};\n","import { forwardRef, HTMLAttributes, useLayoutEffect, useRef, useState, useCallback, useId, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport classnames from 'classnames';\n\nimport { useServerEnv } from '@hh.ru/magritte-common-is-server-env';\nimport { keyboardMatch, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { disableScroll } from '@hh.ru/magritte-common-modal-helper';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { Action } from '@hh.ru/magritte-ui-action';\nimport { useBreakpoint, Breakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\nimport { ModalContent } from '@hh.ru/magritte-ui-modal/ModalContent';\nimport { ModalFooter } from '@hh.ru/magritte-ui-modal/ModalFooter';\nimport { ModalHeader } from '@hh.ru/magritte-ui-modal/ModalHeader';\nimport { ModalHeaderProps, ModalProps } from '@hh.ru/magritte-ui-modal/types';\nimport { useModalOrder } from '@hh.ru/magritte-ui-modal/useModalOrder';\n\nimport styles from './modal.less';\n\nconst noop = () => undefined;\n\nconst toNumber = (value: string) => {\n    const result = parseInt(value, 10);\n    return Number.isInteger(result) ? result : 0;\n};\n\nconst INVISIBLE_FOR_BREAKPOINTS = [Breakpoint.XS, Breakpoint.S];\n\nexport const Modal = forwardRef<\n    HTMLDivElement,\n    ModalProps &\n        Omit<HTMLAttributes<HTMLDivElement>, keyof ModalProps | 'role' | 'tabindex' | 'className' | 'aria-labeledby'>\n>(\n    (\n        {\n            visible,\n            size = 'medium',\n            title,\n            titleAlignment = 'left',\n            titleSize = 'large',\n            titleMaxLines,\n            titleElement = 'h2',\n            titleDescription,\n            titleDescriptionMaxLines,\n            showCloseButton,\n            children,\n            onClose = noop,\n            leftButtons,\n            rightButtons,\n            showDivider,\n            headerImage,\n            headerHeight,\n            host,\n            ...rest\n        },\n        ref\n    ) => {\n        const isServerEnv = useServerEnv();\n        const enableScrollRef = useRef<() => void>();\n        const [animationTimeout, setAnimationTimeout] = useState<{ enter: number; exit: number }>({\n            enter: 0,\n            exit: 0,\n        });\n        const labelId = useId();\n        const additionalProps: { 'aria-labelledby'?: string } = {};\n        if (title) {\n            additionalProps['aria-labelledby'] = labelId;\n        }\n        const modalRef = useRef<HTMLDivElement>(null);\n        const overlayRef = useRef<HTMLDivElement>(null);\n        const multiplexedRefs = useMultipleRefs(ref, modalRef);\n\n        const onEntering = useCallback(() => {\n            if (!enableScrollRef.current) {\n                enableScrollRef.current = disableScroll();\n            }\n            if (modalRef.current && !modalRef.current.contains(document.activeElement)) {\n                modalRef.current.focus();\n            }\n        }, []);\n        const onExited = useCallback(() => {\n            enableScrollRef.current?.();\n            enableScrollRef.current = undefined;\n        }, []);\n\n        const [position, count] = useModalOrder(!!visible && !isServerEnv, modalRef);\n        const isOverlayHidden = (position === 0 && count > 0) || (count > 1 && position > 1);\n\n        const { breakpoint } = useBreakpoint();\n        useEffect(() => {\n            if (!visible) {\n                return;\n            }\n\n            const currentBreakpointVisible = !INVISIBLE_FOR_BREAKPOINTS.includes(breakpoint);\n            if (!currentBreakpointVisible) {\n                onExited();\n                return;\n            }\n\n            onEntering();\n            // visible не должно быть в зависимостях, т.к. этот эффект обрабатывает только изменение брейкпоинта\n            // visible обрабатывается CSSTransition\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [breakpoint, onEntering, onExited]);\n\n        useEffect(() => () => enableScrollRef.current?.(), []);\n\n        useLayoutEffect(() => {\n            const animationTimeoutElement = document.createElement('div');\n            animationTimeoutElement.classList.add(styles.animationTimeout);\n            document.body.appendChild(animationTimeoutElement);\n            const style = window.getComputedStyle(animationTimeoutElement);\n            setAnimationTimeout({\n                enter: toNumber(style.getPropertyValue('--enter-animation-duration')),\n                exit: toNumber(style.getPropertyValue('--exit-animation-duration')),\n            });\n            document.body.removeChild(animationTimeoutElement);\n        }, [setAnimationTimeout]);\n\n        if (INVISIBLE_FOR_BREAKPOINTS.includes(breakpoint) || isServerEnv) {\n            return null;\n        }\n\n        const modalHeaderProps = {\n            title,\n            titleElement,\n            titleAlignment,\n            titleSize,\n            titleMaxLines,\n            titleDescription,\n            titleDescriptionMaxLines,\n            headerImage,\n            headerHeight,\n        } as ModalHeaderProps;\n\n        return createPortal(\n            <CSSTransition\n                in={visible && !isServerEnv}\n                nodeRef={overlayRef}\n                onEntering={onEntering}\n                onExited={onExited}\n                classNames={{\n                    enter: styles.modalAnimationEnter,\n                    enterActive: styles.modalAnimationEnterActive,\n                    exit: styles.modalAnimationExit,\n                    exitActive: styles.modalAnimationExitActive,\n                }}\n                timeout={animationTimeout}\n                unmountOnExit\n            >\n                <Layer layer={InternalLayerName.Modal}>\n                    <div\n                        ref={overlayRef}\n                        className={styles.modalOverlay}\n                        style={isOverlayHidden ? { backgroundColor: 'transparent' } : {}}\n                        onKeyDown={(event) => {\n                            if (keyboardMatch(event.nativeEvent, keyboardKeys.Escape)) {\n                                onClose();\n                            }\n                        }}\n                        data-qa=\"modal-overlay\"\n                    >\n                        <div\n                            {...rest}\n                            {...additionalProps}\n                            role=\"dialog\"\n                            className={classnames(styles.modal, { [styles.modalSmall]: size === 'small' })}\n                            ref={multiplexedRefs}\n                            tabIndex={0}\n                        >\n                            <ModalHeader {...modalHeaderProps} labelId={labelId} />\n                            <ModalContent\n                                showCloseButton={!title && !headerImage && showCloseButton}\n                                showDivider={showDivider}\n                            >\n                                {children}\n                            </ModalContent>\n                            <ModalFooter leftButtons={leftButtons} rightButtons={rightButtons} />\n                            {showCloseButton && (\n                                <div className={styles.modalCloseButton}>\n                                    <Action\n                                        data-qa=\"modal-close-button\"\n                                        onClick={onClose}\n                                        icon={CrossOutlinedSize24}\n                                        showBackground={!!headerImage}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </Layer>\n            </CSSTransition>,\n            host || document.body\n        );\n    }\n);\n\nModal.displayName = 'Modal';\n","import { useState, useEffect } from 'react';\n\nexport const useServerEnv = (): boolean => {\n    const [isServerENV, setServerENV] = useState(true);\n\n    useEffect(() => {\n        setServerENV(false);\n    }, []);\n\n    return isServerENV;\n};\n","import { AriaRole, FC } from 'react';\n\nimport { Action } from '@hh.ru/magritte-ui-action';\nimport { Link } from '@hh.ru/magritte-ui-link';\nimport { NavigationBarItemProps } from '@hh.ru/magritte-ui-navigation-bar/types';\n\nimport styles from './navigation-bar.less';\n\nexport const NavigationBarItem: FC<NavigationBarItemProps & { role?: AriaRole }> = (props) => {\n    if ('icon' in props) {\n        return (\n            <div className={styles.icon}>\n                <Action {...props} />\n            </div>\n        );\n    }\n\n    if ('label' in props) {\n        const { label, ...rest } = props;\n        return (\n            <div className={styles.label}>\n                <Link {...rest} Element=\"button\" type=\"button\">\n                    {props.label}\n                </Link>\n            </div>\n        );\n    }\n\n    return null;\n};\n","import { FC, Fragment, useCallback, useState } from 'react';\n\nimport { EllipsisHorizontalOutlinedSize24 as Ellipsis } from '@hh.ru/magritte-ui-icon/icon';\nimport { NavigationBarItem } from '@hh.ru/magritte-ui-navigation-bar/NavigationBarItem';\nimport {\n    MAX_ICONS,\n    NavigationBarItemArrayProps,\n    NavigationBarProps,\n    NavigationBarSize,\n} from '@hh.ru/magritte-ui-navigation-bar/types';\n\ninterface NavigationBarItemsProps {\n    items?: NavigationBarItemArrayProps;\n    size: NavigationBarSize;\n    renderFunc?: NavigationBarProps['ellipsisRenderFunc'];\n}\n\nconst defaultRenderFunc: NavigationBarProps['ellipsisRenderFunc'] = () => {\n    // TODO render ActionList when ready\n    return null;\n};\n\nexport const NavigationBarItems: FC<NavigationBarItemsProps> = ({ items, size, renderFunc = defaultRenderFunc }) => {\n    const [ellipsis, setEllipsis] = useState(false);\n    const toggleEllipsis = useCallback(() => setEllipsis(!ellipsis), [ellipsis, setEllipsis]);\n\n    if (items && 'length' in items) {\n        if (size === NavigationBarSize.Standard && items.length > 2) {\n            return (\n                <Fragment>\n                    {ellipsis && renderFunc(items.slice(-MAX_ICONS, -1))}\n                    <NavigationBarItem data-qa=\"navigation-bar-ellipsis\" icon={Ellipsis} onClick={toggleEllipsis} />\n                    <NavigationBarItem role=\"menuitem\" {...items[items.length - 1]} />\n                </Fragment>\n            );\n        }\n\n        return (\n            <Fragment>\n                {items.slice(-MAX_ICONS).map(({ key, ...props }) => (\n                    <NavigationBarItem role=\"menuitem\" {...props} key={key} />\n                ))}\n            </Fragment>\n        );\n    }\n\n    if (items) {\n        return <NavigationBarItem role=\"menuitem\" {...items} />;\n    }\n\n    return null;\n};\n","export enum ProgressBarStyle {\n    Accent = 'accent',\n    Positive = 'positive',\n    Special = 'special',\n}\n\ntype ProgressBarCommonProps = {\n    /** Текущее значение прогресса */\n    progress: number;\n    /** Cтиль прогресс-бара */\n    style?: ProgressBarStyle;\n    ariaLabel?: string;\n    'data-qa'?: string;\n};\n\nexport type ProgressBarSingleProps = ProgressBarCommonProps & {\n    /** Максимальное значение прогресс-бара */\n    max?: number;\n    segments?: never;\n};\n\nexport type ProgressBarSegmentedProps = ProgressBarCommonProps & {\n    max?: never;\n    /** Общее кол-во сегментов */\n    segments: number;\n};\n\nexport type ProgressBarProps = ProgressBarSingleProps | ProgressBarSegmentedProps;\n","import { FC, useRef, useEffect, useLayoutEffect, useState } from 'react';\nimport classnames from 'classnames';\n\nimport { ProgressBarSegmentedProps, ProgressBarStyle } from '@hh.ru/magritte-ui-progress-bar/types';\n\nimport styles from './progress-bar.less';\n\nconst STYLE_TO_CSS = {\n    [ProgressBarStyle.Accent]: styles.segmentedContainerStyleAccent,\n    [ProgressBarStyle.Positive]: styles.segmentedContainerStylePositive,\n    [ProgressBarStyle.Special]: styles.segmentedContainerStyleSpecial,\n};\nexport const SegmentedProgressBar: FC<ProgressBarSegmentedProps> = ({\n    segments,\n    progress,\n    style = ProgressBarStyle.Accent,\n    'data-qa': dataQA = 'progress',\n    ariaLabel,\n}) => {\n    const prevProgress = useRef(progress);\n    const [animationTimeout, setAnimationTimeout] = useState(0);\n    useEffect(() => {\n        prevProgress.current = progress;\n    }, [progress]);\n\n    useLayoutEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles.progressAnimationTimeout);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n        const animationTimeout = parseInt(style.getPropertyValue(`--animation-duration`), 10);\n        if (Number.isInteger(animationTimeout)) {\n            setAnimationTimeout(animationTimeout);\n        }\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    return (\n        <div\n            className={classnames(styles.segmentedContainer, STYLE_TO_CSS[style])}\n            data-qa={dataQA}\n            role=\"progressbar\"\n            aria-valuemin={0}\n            aria-valuemax={segments}\n            aria-valuenow={progress}\n            aria-label={ariaLabel}\n        >\n            {[...Array(segments).keys()].map((_, i) => {\n                let delay = 0;\n                const direction = progress - prevProgress.current >= 0 ? 0 : -1;\n                const startSelection = prevProgress.current + direction;\n                if (i === startSelection) {\n                    delay = 0;\n                } else {\n                    delay = Math.abs(i - startSelection) * animationTimeout;\n                }\n                return (\n                    <div\n                        key={i}\n                        className={classnames(styles.segment, {\n                            [styles.filled]: i < progress,\n                        })}\n                        style={{ transitionDelay: `${delay}ms` }}\n                        data-qa=\"progress-segment\"\n                    />\n                );\n            })}\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport classnames from 'classnames';\n\nimport { ProgressBarStyle, ProgressBarSingleProps } from '@hh.ru/magritte-ui-progress-bar/types';\n\nimport styles from './progress-bar.less';\n\nconst STYLE_TO_CSS = {\n    [ProgressBarStyle.Accent]: styles.progressStyleAccent,\n    [ProgressBarStyle.Positive]: styles.progressStylePositive,\n    [ProgressBarStyle.Special]: styles.progressStyleSpecial,\n};\n\nexport const SingleProgressBar: FC<ProgressBarSingleProps> = ({\n    max = 100,\n    progress,\n    style = ProgressBarStyle.Accent,\n    'data-qa': dataQA = 'progress',\n    ariaLabel,\n}) => {\n    const width = (progress / max) * 100;\n    return (\n        <div\n            className={classnames(styles.progress, STYLE_TO_CSS[style])}\n            role=\"progressbar\"\n            aria-valuemin={0}\n            aria-valuemax={max}\n            aria-valuenow={progress}\n            aria-label={ariaLabel}\n            data-qa={dataQA}\n        >\n            <div className={styles.progressValue} data-qa=\"progress-value\" style={{ width: `${width}%` }} />\n        </div>\n    );\n};\n","import { FC } from 'react';\n\nimport { SegmentedProgressBar } from '@hh.ru/magritte-ui-progress-bar/SegmentedProgressBar';\nimport { SingleProgressBar } from '@hh.ru/magritte-ui-progress-bar/SingleProgressBar';\nimport { ProgressBarProps } from '@hh.ru/magritte-ui-progress-bar/types';\n\nexport const ProgressBar: FC<ProgressBarProps> = (props) => {\n    const isSegmented = props.segments !== undefined;\n    return isSegmented ? <SegmentedProgressBar {...props} /> : <SingleProgressBar {...props} />;\n};\n","import { FC, Fragment, useContext, useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport { throttle } from '@hh.ru/magritte-common-func-utils';\nimport { Divider } from '@hh.ru/magritte-ui-divider';\nimport { NavigationBarItem } from '@hh.ru/magritte-ui-navigation-bar/NavigationBarItem';\nimport { NavigationBarItems } from '@hh.ru/magritte-ui-navigation-bar/NavigationBarItems';\nimport { NavigationBarContext } from '@hh.ru/magritte-ui-navigation-bar/context';\nimport { NavigationBarProps, NavigationBarSize } from '@hh.ru/magritte-ui-navigation-bar/types';\nimport { ProgressBar } from '@hh.ru/magritte-ui-progress-bar';\n\nimport styles from './navigation-bar.less';\n\nconst BASE_STANDARD_HEIGHT = 60;\nconst SCROLL_THROTTLE_MS = 50;\nconst CONTAINER_KEY = 'container';\nconst WRAPPER_KEY = 'wrapper';\nconst OPTIONS_KEY = 'options';\n\nexport const NavigationBarRenderer: FC<NavigationBarProps> = ({\n    size = NavigationBarSize.Standard,\n    title,\n    subtitle,\n    left,\n    progress,\n    right,\n    options,\n    showDivider,\n    ellipsisRenderFunc,\n}) => {\n    const context = useContext(NavigationBarContext);\n    const overridenSize = context.size || size;\n    const [actualSize, setActualSize] = useState(overridenSize);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const wrapperHeightRef = useRef<number | null>(null);\n    const optionsRef = useRef<HTMLDivElement>(null);\n    const scrollTopRef = useRef<number | null>(null);\n\n    // eslint-disable-next-line consistent-return\n    useEffect(() => {\n        if (actualSize === NavigationBarSize.Large && wrapperRef.current !== null) {\n            wrapperHeightRef.current = wrapperRef.current.offsetHeight;\n        }\n\n        if (overridenSize === NavigationBarSize.Large) {\n            const standardHeight =\n                BASE_STANDARD_HEIGHT +\n                (optionsRef.current ? optionsRef.current.offsetHeight : 0) +\n                (showDivider ? 1 : 0);\n\n            const handleScroll = throttle(() => {\n                if (wrapperHeightRef.current !== null && visualViewport !== null) {\n                    const visibleWrapperHeight = wrapperHeightRef.current - visualViewport.pageTop;\n\n                    if (actualSize === NavigationBarSize.Large && visibleWrapperHeight < standardHeight) {\n                        scrollTopRef.current = wrapperHeightRef.current - standardHeight;\n                        setActualSize(NavigationBarSize.Standard);\n                    }\n\n                    if (actualSize === NavigationBarSize.Standard && visibleWrapperHeight > standardHeight) {\n                        scrollTopRef.current = 0;\n                        setActualSize(NavigationBarSize.Large);\n                    }\n                }\n            }, SCROLL_THROTTLE_MS);\n\n            window.addEventListener('scroll', handleScroll);\n\n            return () => {\n                handleScroll.cancel();\n                window.removeEventListener('scroll', handleScroll);\n            };\n        }\n    }, [actualSize, setActualSize, overridenSize, options, showDivider]);\n\n    if (actualSize === NavigationBarSize.Standard) {\n        return (\n            <div key={WRAPPER_KEY} className={styles.sticky} style={{ marginTop: `${scrollTopRef.current}px` }}>\n                <div\n                    key={CONTAINER_KEY}\n                    className={`${styles.container} ${styles.container_standard}`}\n                    data-qa=\"navigation-bar-container navigation-bar-container_standard\"\n                >\n                    <div className={styles.spread} role=\"menu\">\n                        <div className={styles.left}>{left && <NavigationBarItem role=\"menuitem\" {...left} />}</div>\n                        <div className={styles.right}>\n                            <div className={styles.halfTitleWrapper}>\n                                <div className={styles.titleWrapper}>\n                                    {title && (\n                                        <Fragment>\n                                            <div\n                                                className={classnames(styles.title, {\n                                                    [styles.titleWithoutSubtitle]: !subtitle,\n                                                })}\n                                            >\n                                                {title}\n                                            </div>\n                                            {subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n                                        </Fragment>\n                                    )}\n                                </div>\n                            </div>\n                            <div className={left ? styles.rightDummy : undefined}>\n                                <NavigationBarItems items={right} size={actualSize} renderFunc={ellipsisRenderFunc} />\n                            </div>\n                        </div>\n                    </div>\n                    {options && (\n                        <div key={OPTIONS_KEY} className={styles.options} ref={optionsRef}>\n                            {options}\n                        </div>\n                    )}\n                </div>\n                {showDivider && <Divider />}\n            </div>\n        );\n    }\n\n    return (\n        <div key={WRAPPER_KEY} ref={wrapperRef}>\n            <div\n                key={CONTAINER_KEY}\n                className={`${styles.container} ${styles.container_large}`}\n                data-qa=\"navigation-bar-container navigation-bar-container_large\"\n            >\n                <div className={styles.spread} role=\"menu\">\n                    <div className={styles.left}>{left && <NavigationBarItem role=\"menuitem\" {...left} />}</div>\n                    <div className={styles.right}>\n                        {progress && (\n                            <div className={styles.progress}>\n                                <div className={styles.availableWidthWrapper}>\n                                    <ProgressBar {...progress} />\n                                </div>\n                            </div>\n                        )}\n                        <NavigationBarItems items={right} size={actualSize} renderFunc={ellipsisRenderFunc} />\n                    </div>\n                </div>\n                {title && (\n                    <Fragment>\n                        <div className={styles.title}>{title}</div>\n                        {subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n                    </Fragment>\n                )}\n                {options && (\n                    <div key={OPTIONS_KEY} className={styles.options} ref={optionsRef}>\n                        {options}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import { FC, Fragment, PropsWithChildren } from 'react';\n\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { NavigationBarRenderer } from '@hh.ru/magritte-ui-navigation-bar/NavigationBarRenderer';\nimport { NavigationBarProps } from '@hh.ru/magritte-ui-navigation-bar/types';\n\nexport const NavigationBar: FC<PropsWithChildren<NavigationBarProps>> = ({ children, ...props }) => {\n    const { isMobile } = useBreakpoint();\n\n    if (!isMobile) {\n        return <Fragment>{children}</Fragment>;\n    }\n\n    return (\n        <Fragment>\n            <NavigationBarRenderer {...props} />\n            {children}\n        </Fragment>\n    );\n};\n","import { Key, ReactNode } from 'react';\n\nimport { IconWrapperComponentSize24 } from '@hh.ru/magritte-ui-icon/iconTypes';\nimport { ProgressBarProps } from '@hh.ru/magritte-ui-progress-bar/types';\n\nexport enum NavigationBarSize {\n    Large = 'large',\n    Standard = 'standard',\n}\n\ninterface BaseNavigationBarItemProps {\n    'data-qa'?: string;\n    onClick: VoidFunction;\n}\n\nexport interface NavigationBarIconProps extends BaseNavigationBarItemProps {\n    icon: IconWrapperComponentSize24;\n}\n\nexport interface NavigationBarLabelProps extends BaseNavigationBarItemProps {\n    label: ReactNode;\n}\n\nexport type NavigationBarItemProps = NavigationBarIconProps | NavigationBarLabelProps;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype _KeyHelper<T> = T & { key: Key };\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype _ArrayHelper<\n    ItemType,\n    MaxLength extends number,\n    ArrayType extends readonly ItemType[],\n    R = ArrayType\n> = ArrayType['length'] extends MaxLength\n    ? R\n    : _ArrayHelper<ItemType, MaxLength, readonly [ItemType, ...ArrayType], R | readonly [ItemType, ...ArrayType]>;\n\ntype ArrayHelper<ItemType, MaxLength extends number> = _ArrayHelper<ItemType, MaxLength, []>;\n\nexport const MAX_ICONS = 5;\n\nexport type NavigationBarItemArrayProps =\n    | NavigationBarItemProps\n    | ArrayHelper<_KeyHelper<NavigationBarIconProps>, typeof MAX_ICONS>;\n\ninterface BaseNavigationBarProps {\n    /** Размер компонента */\n    size?: NavigationBarSize;\n    /** Контент левого контейнера */\n    left?: NavigationBarIconProps;\n    /** Пропсы прогресс-бара */\n    progress?: ProgressBarProps;\n    /** Контент правого контейнера. Может быть отрендерен не целиком, см. `ellipsisRenderFunc` */\n    right?: NavigationBarItemArrayProps;\n    /** Опциональный контент внизу компонента */\n    options?: ReactNode;\n    /** Показывать ли разделитель, работает только в случае `size===NavigationBarSize.Standard` */\n    showDivider?: boolean;\n    /** Рендер-функция для непоместившегося контента справа, по умолчанию использует `ActionList` */\n    ellipsisRenderFunc?: (items: NavigationBarIconProps[]) => ReactNode;\n}\n\ninterface NavigationBarPropsWithTitle extends BaseNavigationBarProps {\n    /** Заголовок */\n    title: ReactNode;\n    /** Подзаголовок */\n    subtitle?: ReactNode;\n}\n\ninterface NavigationBarPropsWithoutTitle extends BaseNavigationBarProps {\n    title?: never;\n    subtitle?: never;\n}\n\nexport type NavigationBarProps = NavigationBarPropsWithTitle | NavigationBarPropsWithoutTitle;\n","import memoize from 'memoize-one';\n\nconst ESCAPE_REGEX = /[|![\\]^$(){}+=?.*\\\\]/g;\n\n/**\n * Escapes RegExp symbols\n *\n * @param {String} string String\n *\n * @returns {String} Escaped string\n */\nconst escapeRegexp = (string: string): string => string.replace(ESCAPE_REGEX, '\\\\$&');\n\n/**\n * Модуль для поиска одной строки в другой.\n * Учитывает раскладку клавиатуры и буквы Е/Ё.\n * Ищет совпадения только в начале слов.\n *\n * @type {Object}\n */\n\nconst yoRegex = /[её]/g;\nconst spaceRegex = /\\s+/g;\n\nfunction trim(string: string) {\n    return string.replace(spaceRegex, ' ').trim();\n}\n\nfunction prepareForRegExp(string: string) {\n    return escapeRegexp(string).replace(yoRegex, '[её]');\n}\n\nconst RUSSIAN = 'qwertyuiopasdfghjkl;\\'zxcvbnm,QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>`~[].'.split('');\nconst ENGLISH = 'йцукенгшщзфывапролджэячсмитьбЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮёЁхъю'.split('');\n\nfunction createHashMap(names: string[], values: string[]) {\n    return names.reduce<Record<string, string>>((hashMap, item, index) => {\n        hashMap[item] = values[index];\n        return hashMap;\n    }, {});\n}\n\nconst LANG_MAP = {\n    russian: createHashMap(RUSSIAN, ENGLISH),\n    english: createHashMap(ENGLISH, RUSSIAN),\n};\n\n// 'москва city' => 'vjcrdf city'\n// 'москва сity' => 'москва сшен'\nfunction convert(substring: string, alphabet: Record<string, string>) {\n    return substring\n        .split('')\n        .map((item) => alphabet[item] || item)\n        .join('');\n}\n\nfunction getMultilanguageStrings(query: string) {\n    return [\n        query.toLowerCase(), // москва сity\n        convert(query, LANG_MAP.russian).toLowerCase(), // \"москва сшен\"\n        convert(query, LANG_MAP.english).toLowerCase(), // \"vjcrdf city\"\n    ];\n}\n\n/**\n * Возвращает функцию, которая возвращает результат поиска `filterQuery`\n * в переданной строке. Нужно для оптимизации поиска одного и того же\n * фрагмента в большом наборе строк, чтобы не создавать и не хранить\n * много регэкспов.\n *\n * @param filterQuery {String} Что ищем.\n * @returns {Function}\n * @example\n *     const test = FuzzySearch.createMatcher('моск');\n *     test('Москва'); // true\n *     test('Подмосковье'); // false\n * @private\n */\nconst createMatcher = memoize((filterQuery: string) => {\n    const filterQueryTrimmed = trim(filterQuery);\n    if (filterQueryTrimmed.length) {\n        const regexpStrings = getMultilanguageStrings(filterQueryTrimmed).map(prepareForRegExp);\n        const re = new RegExp(`(^|[^a-zа-яё])(${regexpStrings.join('|')})`);\n        return (searchString: string) => re.test(trim(searchString).toLowerCase());\n    }\n    return () => true;\n});\n\n/**\n * Возвращает результат поиска одной строки в другой.\n *\n * @param filterQuery {String} Что ищем.\n * @param searchString {String} Где ищем.\n * @returns {Boolean}\n * @example\n *     FuzzySearch.match('моск', 'Москва'); // true\n *     FuzzySearch.match('моск', 'Подмосковье'); // false\n */\nexport function match(filterQuery: string, searchString: string): boolean {\n    const test = createMatcher(filterQuery);\n    return test(searchString);\n}\n","import { type ForwardedRef, type ReactNode, useState, forwardRef, useEffect, Fragment, useRef } from 'react';\nimport classnames from 'classnames';\n\nimport { keyboardMatches, keyboardKeys, keyboardMatch } from '@hh.ru/magritte-common-keyboard';\nimport { FieldHint } from '@hh.ru/magritte-internal-field-hint';\nimport { Counter } from '@hh.ru/magritte-ui-counter';\nimport { ChevronDownOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { BaseInput } from '@hh.ru/magritte-ui-input/BaseInput';\nimport { InputSize } from '@hh.ru/magritte-ui-input/types';\nimport { type SelectActivatorProps } from '@hh.ru/magritte-ui-select/types';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './styles.less';\n\nconst SelectActivator = forwardRef(\n    <T,>(\n        {\n            placeholder,\n            size = 'medium',\n            elevatePlaceholder = false,\n            disabled = false,\n            multiple,\n            invalid = false,\n            searchable = false,\n            optionsCount,\n            selectedOptions,\n            onClick,\n            onFocus,\n            onBlur,\n            searchValue,\n            setSearchValue,\n            description,\n            errorMessage,\n            visible,\n            dropRef,\n            searchRef,\n        }: SelectActivatorProps<T>,\n        ref: ForwardedRef<HTMLDivElement>\n    ) => {\n        const selectDidMount = useRef(false);\n        const [isFocused, setIsFocused] = useState(false);\n        const counter = multiple ? selectedOptions?.length ?? 0 : 0;\n        const value = selectedOptions?.map(({ label, value }, index) => (\n            <Fragment key={value}>\n                {label}\n                {index === selectedOptions.length - 1 ? '' : ', '}\n            </Fragment>\n        ));\n\n        const hintContent = (\n            <FieldHint\n                key=\"hint\"\n                description={description}\n                errorMessage={errorMessage}\n                disabled={disabled}\n                focused={isFocused}\n                invalid={invalid}\n            />\n        );\n\n        useEffect(() => {\n            if (!visible) {\n                setIsFocused(false);\n            }\n        }, [visible]);\n\n        useEffect(() => {\n            if (selectDidMount.current && !isFocused) {\n                onBlur?.();\n            } else if (isFocused) {\n                onFocus?.();\n            }\n            selectDidMount.current = true;\n        }, [isFocused, onBlur, onFocus]);\n\n        if (searchable && isFocused) {\n            const sizeProp =\n                size === 'large' ? ({ size: InputSize.Large } as const) : ({ size: InputSize.Medium } as const);\n\n            return (\n                <>\n                    <BaseInput\n                        {...sizeProp}\n                        wrapperRef={ref}\n                        onKeyDown={(event) => {\n                            if (\n                                dropRef?.current &&\n                                keyboardMatches(event.nativeEvent, [keyboardKeys.ArrowDown, keyboardKeys.ArrowUp])\n                            ) {\n                                dropRef.current.focus();\n                                event.preventDefault();\n\n                                if (keyboardMatch(event.nativeEvent, keyboardKeys.ArrowUp)) {\n                                    event.stopPropagation();\n                                    const lastOptionNode = dropRef.current.querySelector(\n                                        '[data-magritte-option-last-active-element]'\n                                    ) as HTMLLabelElement;\n                                    lastOptionNode?.focus();\n                                }\n                            }\n                        }}\n                        onBlur={() => {\n                            const optionListNode = dropRef?.current;\n                            if (optionListNode) {\n                                /* Нажатие escape, когда в фокусе инпута отловить нельзя\n                                 * для корректного скрытия смотрю, куда ушел фокус.\n                                 * Если в дропе, то дроп оставляем активным\n                                 * */\n                                requestAnimationFrame(() => {\n                                    const isActiveDrop = optionListNode.contains?.(document.activeElement);\n\n                                    if (!isActiveDrop && visible) {\n                                        onClick(false);\n                                    }\n                                });\n                            }\n                            /* когда опции есть - состояние фокус сбрасывает useEffect отслеживающий visible\n                             * когда опций нет - состояние фокуса сбрасываем здесь\n                             * */\n                            if (optionsCount === 0) {\n                                setIsFocused(false);\n                            }\n                        }}\n                        ref={(input) => {\n                            input?.focus();\n                            if (searchRef) {\n                                searchRef.current = input;\n                            }\n                        }}\n                        value={searchValue}\n                        onChange={setSearchValue}\n                        data-qa=\"magritte-select-activator-input\"\n                        placeholder={selectedOptions.length > 0 ? value : placeholder}\n                        counter={counter === 0 ? undefined : counter}\n                    />\n                    {hintContent}\n                </>\n            );\n        }\n\n        const showValue = selectedOptions.length > 0;\n        const showPlaceholder = !!(placeholder && !showValue);\n        const isLargeSize = size === 'large';\n        const showLabel = !!(isLargeSize && placeholder && elevatePlaceholder && showValue);\n\n        return (\n            <>\n                <div\n                    ref={ref}\n                    data-qa=\"magritte-select-activator\"\n                    className={classnames(styles.selectActivator, {\n                        [styles.selectActivatorSizeLarge]: isLargeSize,\n                        [styles.selectActivatorWithLabel]: showLabel,\n                        [styles.selectActivatorHasCounter]: counter > 0,\n                        [styles.selectActivatorDisabled]: disabled,\n                        [styles.selectActivatorInvalid]: invalid,\n                    })}\n                    onClick={() => {\n                        if (disabled) {\n                            return;\n                        }\n                        if (!visible) {\n                            onClick(true);\n                        }\n                    }}\n                    onFocus={() => {\n                        if (disabled) {\n                            return;\n                        }\n                        setIsFocused(true);\n                        onClick(true);\n                    }}\n                    onBlur={() => {\n                        /* когда опции есть - состояние фокус сбрасывает useEffect отслеживающий visible\n                         * когда опций нет - состояние фокуса сбрасываем здесь\n                         * */\n                        if (!searchable && optionsCount === 0) {\n                            setIsFocused(false);\n                        }\n                    }}\n                    tabIndex={disabled ? -1 : 0}\n                >\n                    <div className={styles.selectActivatorLabelRoot}>\n                        {showPlaceholder && (\n                            <div className={styles.selectActivatorPlaceholder}>\n                                <Text typography={TextTypography.Label2Regular}>\n                                    <div className={styles.selectActivatorEllipsis}>{placeholder}</div>\n                                </Text>\n                            </div>\n                        )}\n                        {showLabel && (\n                            <div className={styles.selectActivatorLabel}>\n                                <Text typography={TextTypography.Label4Regular}>\n                                    <div className={styles.selectActivatorEllipsis}>{placeholder}</div>\n                                </Text>\n                            </div>\n                        )}\n                        {showValue && (\n                            <div className={styles.selectActivatorValue}>\n                                <Text typography={TextTypography.Label2Regular}>\n                                    <div className={styles.selectActivatorEllipsis}>{value}</div>\n                                </Text>\n                            </div>\n                        )}\n                    </div>\n                    <div className={styles.selectActivatorItem}>\n                        {counter > 0 && <Counter label={counter} />}\n                        <div\n                            className={classnames(styles.selectActivatorChevron, {\n                                [styles.selectActivatorChevronUp]: isFocused,\n                            })}\n                        >\n                            <ChevronDownOutlinedSize24 />\n                        </div>\n                    </div>\n                </div>\n                {hintContent}\n            </>\n        );\n    }\n);\n\nSelectActivator.displayName = 'SelectActivator';\n\nconst renderSelectActivator = <T,>(props: SelectActivatorProps<T>): ReactNode => {\n    return <SelectActivator {...props} />;\n};\n\nexport { SelectActivator, renderSelectActivator };\n","import { type ReactElement, useState, useRef } from 'react';\n\nimport { keyboardMatches, keyboardKeys } from '@hh.ru/magritte-common-keyboard';\nimport { Card } from '@hh.ru/magritte-ui-card';\nimport { Cell, CellText } from '@hh.ru/magritte-ui-cell';\nimport { CheckableCardElement } from '@hh.ru/magritte-ui-checkable-card/CheckableCardElement';\nimport { Radio, Checkbox } from '@hh.ru/magritte-ui-checkbox-radio';\nimport type { SelectOptionProps, SelectOptionWrapperProps } from '@hh.ru/magritte-ui-select/types';\nimport { Text, TextTypography, TextStyle } from '@hh.ru/magritte-ui-typography';\n\nconst SelectOptionBase = <T,>({ label, type, input, isXS = false }: SelectOptionProps<T>): ReactElement => {\n    if (type === 'delimiter') {\n        return (\n            <Card paddingTop={8} paddingLeft={16} paddingRight={16}>\n                <CellText maxLines={1} style={TextStyle.Secondary}>\n                    {label}\n                </CellText>\n            </Card>\n        );\n    }\n\n    const cellProps = {\n        [isXS ? 'right' : 'left']: input,\n    };\n\n    return (\n        <Cell Element=\"div\" align=\"top\" {...cellProps}>\n            <CellText maxLines={1}>{label}</CellText>\n        </Cell>\n    );\n};\n\nSelectOptionBase.displayName = 'SelectOptionBase';\n\nconst SelectOption = <T,>({\n    checked,\n    multiple,\n    name,\n    value,\n    disabled,\n    onChange,\n    render = SelectOptionBase,\n    type,\n    isFirstActiveElement,\n    isLastActiveElement,\n    ...props\n}: SelectOptionWrapperProps<T>): ReactElement => {\n    const renderProps = { ...props, checked, multiple, name, value, onChange, render, type };\n    const [focusVisible, setFocusVisible] = useState(false);\n    const lockFocusVisibleAfterClickRef = useRef(false);\n\n    if (type === 'delimiter') {\n        return <Text typography={TextTypography.Label3Regular}>{render(renderProps)}</Text>;\n    }\n    const input = multiple ? (\n        <Checkbox\n            data-focus-visible-skip=\"true\"\n            tabIndex={-1}\n            name={name}\n            value={value}\n            checked={checked}\n            onChange={(event) => {\n                onChange(value, event.target.checked);\n            }}\n        />\n    ) : (\n        <Radio\n            data-focus-visible-skip=\"true\"\n            tabIndex={-1}\n            name={name}\n            value={value}\n            checked={checked}\n            onChange={(event) => {\n                onChange(value, event.target.checked);\n            }}\n        />\n    );\n\n    const firstActiveElementProp = isFirstActiveElement ? { 'data-magritte-option-first-active-element': 'true' } : {};\n    const lastActiveElementProps = isLastActiveElement ? { 'data-magritte-option-last-active-element': 'true' } : {};\n\n    return (\n        <CheckableCardElement\n            {...firstActiveElementProp}\n            {...lastActiveElementProps}\n            tabIndex={0}\n            Element=\"label\"\n            padding={16}\n            borderRadius={12}\n            flexible={false}\n            highlighted={checked}\n            data-magritte-option={value}\n            focusVisble={focusVisible}\n            data-qa={`magritte-select-option-${value}`}\n            disabled={disabled}\n            onMouseDown={() => {\n                lockFocusVisibleAfterClickRef.current = true;\n            }}\n            onKeyDown={(event) => {\n                if (keyboardMatches(event.nativeEvent, [keyboardKeys.Enter, keyboardKeys.Space])) {\n                    onChange(value, !checked);\n                    /* Нужно чтобы отменять автоскролл */\n                    event.preventDefault();\n                    setFocusVisible(true);\n                }\n            }}\n            onFocus={(event) => {\n                if (!event.target.dataset.focusVisibleSkip) {\n                    return;\n                }\n\n                if (lockFocusVisibleAfterClickRef.current) {\n                    lockFocusVisibleAfterClickRef.current = false;\n                    return;\n                }\n\n                setFocusVisible(true);\n            }}\n            onBlur={() => {\n                if (focusVisible) {\n                    setFocusVisible(false);\n                }\n            }}\n        >\n            {render({ ...renderProps, input })}\n        </CheckableCardElement>\n    );\n};\n\nexport { SelectOptionBase, SelectOption };\n","import { type ReactElement, useRef, RefObject } from 'react';\n\nimport { keyboardKeys, keyboardMatch } from '@hh.ru/magritte-common-keyboard';\nimport { Card, CardStyle } from '@hh.ru/magritte-ui-card';\nimport { Cell, CellText } from '@hh.ru/magritte-ui-cell';\nimport { Drop } from '@hh.ru/magritte-ui-drop';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { SelectActivator } from '@hh.ru/magritte-ui-select/SelectActivator';\nimport { SelectOption } from '@hh.ru/magritte-ui-select/SelectOption';\nimport { getChecked } from '@hh.ru/magritte-ui-select/getChecked';\nimport type { InternalSelectProps, RenderItem } from '@hh.ru/magritte-ui-select/types';\n\nimport styles from './styles.less';\n\nexport const SelectForDesktopDevice = <T, MultipleType extends boolean>({\n    name,\n    options,\n    disabled,\n    multiple = false,\n    onChange,\n    onActivatorClick,\n    maxHeight,\n    values,\n    visible,\n    setVisible,\n    selectedOptions,\n    renderItemForDesktop,\n    clearSelectedValues,\n    setCommitChanges,\n    showClearButton,\n    trls,\n    optionsRef,\n    size,\n    elevatePlaceholder,\n    widthEqualToActivator,\n    maxWidth,\n    dropHost,\n    ...activatorProps\n}: InternalSelectProps<T, MultipleType> & {\n    renderItemForDesktop?: RenderItem<T>;\n    dropHost?: RefObject<HTMLElement>;\n}): ReactElement => {\n    const activatorRef = useRef<HTMLDivElement>(null);\n    const dropRef = useRef<HTMLDivElement>(null);\n    const searchRef = useRef(null);\n    const rawOptions = options.filter(({ type }) => type !== 'delimiter');\n    const firstOption = rawOptions?.[0];\n    const lastOption = rawOptions?.[rawOptions.length - 1];\n    const sizeProp =\n        size === 'large' ? ({ size: 'large', elevatePlaceholder } as const) : ({ size: 'medium' } as const);\n\n    return (\n        <>\n            <SelectActivator\n                {...sizeProp}\n                {...activatorProps}\n                disabled={disabled}\n                selectedOptions={selectedOptions}\n                onClick={onActivatorClick}\n                ref={activatorRef}\n                multiple={multiple}\n                visible={visible}\n                dropRef={dropRef}\n                searchRef={searchRef}\n            />\n            <Drop\n                ref={dropRef}\n                maxWidth={maxWidth}\n                visible={options.length > 0 && visible}\n                direction=\"bottom\"\n                alignment=\"left\"\n                activatorRef={activatorRef}\n                role={activatorProps.searchable ? 'status' : 'listbox'}\n                space={400}\n                widthEqualToActivator={widthEqualToActivator}\n                host={dropHost}\n                arrowNavigation\n                forcePosition\n                onClose={() => {\n                    const searchInput = searchRef.current;\n\n                    if (searchInput !== document.activeElement) {\n                        setVisible(false);\n                    }\n                }}\n                onKeyDown={({ nativeEvent }: { nativeEvent: KeyboardEvent }) => {\n                    const activeElement = document.activeElement as HTMLElement;\n                    const searchInput = searchRef.current;\n\n                    if (\n                        searchInput !== null &&\n                        keyboardMatch(nativeEvent, keyboardKeys.ArrowUp) &&\n                        activeElement?.dataset.magritteOptionFirstActiveElement\n                    ) {\n                        (searchInput as HTMLInputElement).focus();\n                    }\n                }}\n            >\n                <div style={{ maxHeight: `${maxHeight}px` }}>\n                    <div data-qa=\"magritte-select-option-list\" className={styles.selectOptions} ref={optionsRef}>\n                        {showClearButton && (\n                            <Card\n                                actionCard\n                                showBorder\n                                borderRadius={12}\n                                padding={16}\n                                stretched\n                                style={CardStyle.Blank}\n                                hoverStyle={CardStyle.Neutral}\n                                onClick={clearSelectedValues}\n                                data-qa=\"magritte-select-clear-action\"\n                                data-magritte-option-first-active-element=\"true\"\n                            >\n                                <Cell left={<CrossOutlinedSize24 initial=\"secondary\" />}>\n                                    <CellText>{trls?.clearButton}</CellText>\n                                </Cell>\n                            </Card>\n                        )}\n                        {options?.map((option) => {\n                            const checked = getChecked(option.value, values, multiple);\n                            const props = {\n                                ...option,\n                                name,\n                                onChange: (value: string, needToPut: boolean) => {\n                                    onChange(value, needToPut);\n                                    setCommitChanges(performance.now());\n                                },\n                                checked,\n                                multiple,\n                            };\n                            return (\n                                <SelectOption\n                                    {...props}\n                                    isFirstActiveElement={!showClearButton && firstOption?.value === option.value}\n                                    isLastActiveElement={lastOption?.value === option.value}\n                                    key={option.value}\n                                    render={renderItemForDesktop}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n            </Drop>\n        </>\n    );\n};\n\nSelectForDesktopDevice.displayName = 'SelectForDesktopDevice';\n","import { type ReactElement, useCallback } from 'react';\n\nimport { BottomSheet, BottomSheetHeight, BottomSheetFooter } from '@hh.ru/magritte-ui-bottom-sheet';\nimport { Button, ButtonMode, ButtonSize } from '@hh.ru/magritte-ui-button';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { SearchInput } from '@hh.ru/magritte-ui-input';\nimport { NavigationBar } from '@hh.ru/magritte-ui-navigation-bar';\nimport { renderSelectActivator } from '@hh.ru/magritte-ui-select/SelectActivator';\nimport { SelectOption } from '@hh.ru/magritte-ui-select/SelectOption';\nimport { getChecked } from '@hh.ru/magritte-ui-select/getChecked';\nimport type { InternalSelectProps, RenderItem, OnChangeAction } from '@hh.ru/magritte-ui-select/types';\n\nimport styles from './styles.less';\n\nexport const SelectForMobileDevice = <T, MultipleType extends boolean>({\n    name,\n    options,\n    disabled,\n    multiple = false,\n    onChange,\n    onActivatorClick,\n    renderItem,\n    renderActivator = renderSelectActivator,\n    values,\n    visible,\n    setVisible,\n    selectedOptions,\n    searchable,\n    clearSelectedValues,\n    setCommitChanges,\n    trls,\n    bottomSheetHeight,\n    optionsRef,\n    searchValue,\n    showClearButton,\n    showCloseButtonInNavigationBar,\n    setSearchValue,\n    size,\n    elevatePlaceholder,\n    setLastValues,\n    placeholder,\n    ...activatorProps\n}: InternalSelectProps<T, MultipleType> & {\n    showCloseButtonInNavigationBar: boolean;\n    renderItem?: RenderItem<T>;\n}): ReactElement => {\n    const sizeProp =\n        size === 'large' ? ({ size: 'large', elevatePlaceholder } as const) : ({ size: 'medium' } as const);\n\n    const clearButton = showClearButton && (\n        <Button\n            data-qa=\"magritte-select-clear-action-on-xs\"\n            mode={ButtonMode.Secondary}\n            onClick={clearSelectedValues}\n            size={ButtonSize.Large}\n        >\n            {trls?.clearButton}\n        </Button>\n    );\n\n    const applyButton = multiple && (\n        <Button\n            data-qa=\"magritte-select-apply-on-xs\"\n            mode={ButtonMode.Primary}\n            size={ButtonSize.Large}\n            onClick={() => {\n                setCommitChanges(performance.now());\n                setVisible(false);\n            }}\n        >\n            {trls?.applyChangesButton}\n        </Button>\n    );\n\n    const handleChange: OnChangeAction = useCallback(\n        (...args) => {\n            if (!multiple) {\n                setCommitChanges(performance.now());\n                setVisible(false);\n            }\n            onChange(...args);\n        },\n        [onChange, setCommitChanges, setVisible, multiple]\n    );\n\n    return (\n        <>\n            {renderActivator({\n                ...sizeProp,\n                ...activatorProps,\n                onClick: onActivatorClick,\n                selectedOptions,\n                multiple,\n                searchValue,\n                setSearchValue,\n                visible,\n                disabled,\n                placeholder,\n            })}\n            <BottomSheet\n                allowScrollWhileFocused\n                keyboardOverlaysContent={false}\n                visible={visible}\n                onClose={() => {\n                    setVisible(false);\n                    setLastValues();\n                }}\n                height={searchable ? BottomSheetHeight.FullScreen : bottomSheetHeight}\n                header={\n                    <NavigationBar\n                        title={placeholder}\n                        right={\n                            showCloseButtonInNavigationBar\n                                ? [\n                                      {\n                                          key: 'close',\n                                          icon: CrossOutlinedSize24,\n                                          onClick: () => setVisible(false),\n                                      },\n                                  ]\n                                : undefined\n                        }\n                        options={searchable && <SearchInput clearable value={searchValue} onChange={setSearchValue} />}\n                    />\n                }\n                footer={\n                    multiple || showClearButton ? (\n                        <BottomSheetFooter>\n                            {clearButton}\n                            {applyButton}\n                        </BottomSheetFooter>\n                    ) : null\n                }\n            >\n                <div\n                    data-qa=\"magritte-select-option-list-on-xs\"\n                    className={`${styles.selectOptions} ${styles['select-options-xs']}`}\n                    ref={optionsRef}\n                >\n                    {options?.map((option) => {\n                        const checked = getChecked(option.value, values, multiple);\n                        const props = {\n                            ...option,\n                            name,\n                            onChange: handleChange,\n                            checked,\n                            multiple,\n                            isXS: true,\n                        };\n                        return <SelectOption key={option.value} {...props} render={renderItem} />;\n                    })}\n                </div>\n            </BottomSheet>\n        </>\n    );\n};\n\nSelectForMobileDevice.displayName = 'SelectForMobileDevice';\n","import { useCallback, useReducer, useEffect, useRef } from 'react';\n\nimport type { ReturnUseSelectState } from '@hh.ru/magritte-ui-select/types';\n\nconst ADD = 'ADD';\nconst SET = 'SET';\nconst REMOVE = 'REMOVE';\nconst SINGLE_CHOICE = 'SINGLE_CHOICE';\nconst CLEAR = 'CLEAR';\n\nconst reducer = (\n    state: string[],\n    {\n        type,\n        payload,\n    }:\n        | { type: typeof ADD | typeof REMOVE | typeof SINGLE_CHOICE; payload: string }\n        | { type: typeof CLEAR; payload?: string }\n        | { type: typeof SET; payload: string[] }\n) => {\n    switch (type) {\n        case ADD:\n            return [...state, payload];\n        case SET:\n            return [...payload];\n        case REMOVE:\n            return state.filter((item) => item !== payload);\n        case CLEAR:\n            return [];\n        case SINGLE_CHOICE:\n            return [payload];\n        default:\n            return state;\n    }\n};\n\nexport const useSelectState = <MultipleType extends boolean>(\n    isMultiple: boolean,\n    values: string[] | string\n): ReturnUseSelectState<MultipleType> => {\n    const valuesArr = Array.isArray(values) ? values : [values];\n    const [state, dispatch] = useReducer(reducer, valuesArr);\n    const stateRef = useRef(state);\n    stateRef.current = state;\n\n    useEffect(() => {\n        const valuesArr = Array.isArray(values) ? values : [values];\n        if (\n            stateRef.current.length === valuesArr.length &&\n            stateRef.current.every((value) => valuesArr.includes(value))\n        ) {\n            return;\n        }\n        dispatch({ type: SET, payload: valuesArr });\n    }, [values, stateRef]);\n\n    return {\n        values: (isMultiple ? state : state[0]) as string & string[],\n        clearSelectedValues: () => dispatch({ type: CLEAR }),\n        setLastValues: () => dispatch({ type: SET, payload: valuesArr }),\n        onChange: useCallback(\n            (value, needToPut) => {\n                const mutipleActionType = needToPut ? ADD : REMOVE;\n                const actionType = isMultiple ? mutipleActionType : SINGLE_CHOICE;\n                dispatch({ type: actionType, payload: value });\n            },\n            [isMultiple]\n        ),\n    };\n};\n","import { ReactElement, useState, useEffect, useRef, useCallback } from 'react';\n\nimport { match } from '@hh.ru/magritte-common-fuzzy-search';\nimport { BottomSheetHeight } from '@hh.ru/magritte-ui-bottom-sheet';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { SelectForDesktopDevice } from '@hh.ru/magritte-ui-select/SelectForDesktopDevice';\nimport { SelectForMobileDevice } from '@hh.ru/magritte-ui-select/SelectForMobileDevice';\nimport type { SelectProps, SelectOption } from '@hh.ru/magritte-ui-select/types';\nimport { useSelectState } from '@hh.ru/magritte-ui-select/useSelectState';\n\nconst getValue = (values?: string | string[]): string[] => {\n    if (values === undefined) {\n        return [];\n    }\n    return typeof values === 'string' ? [values] : values;\n};\n\nconst Select = <ShowClearButtonType extends boolean, MultipleType extends boolean, T>({\n    multiple,\n    showClearButton,\n    showCloseButtonInNavigationBar = false,\n    onChange: onChangeHandler,\n    value: valueSelect,\n    renderItem,\n    renderItemForDesktop,\n    options,\n    maxHeight = 460,\n    widthEqualToActivator = true,\n    maxWidth,\n    bottomSheetHeight = BottomSheetHeight.FullScreen,\n    dropHost,\n    ...props\n}: SelectProps<ShowClearButtonType, MultipleType, T>): ReactElement => {\n    const { isMobile } = useBreakpoint();\n    const [visibleOptionList, setVisibleOptionList] = useState(false);\n    const [commitChanges, setCommitChanges] = useState<number | undefined>();\n    const previousCommitChanges = useRef(commitChanges);\n    const [searchValue, setSearchValue] = useState('');\n    const [optionList, setOptionList] = useState(options);\n    const optionsRef = useRef<HTMLDivElement>(null);\n    const optionListSearchText = useRef<{ search: string; value: string }[]>([]);\n\n    const valueSelectArray = getValue(valueSelect);\n    const [selectedOptions, setSelectedOptions] = useState<SelectOption<T>[]>(() =>\n        valueSelectArray ? options.filter(({ value }) => valueSelectArray.includes(value)) : []\n    );\n\n    const { values, onChange, clearSelectedValues, setLastValues } = useSelectState<MultipleType>(\n        !!multiple,\n        valueSelect || []\n    );\n\n    useEffect(() => {\n        const nextSelectedOptions = options.filter(({ value }) => valueSelectArray.includes(value));\n        const isEqualsSelect = nextSelectedOptions.every((item) => {\n            return selectedOptions.includes(item);\n        });\n\n        if (!isEqualsSelect) {\n            setSelectedOptions(options.filter(({ value }) => valueSelectArray.includes(value)));\n        }\n    }, [options, valueSelectArray, selectedOptions]);\n\n    const optionListProps = {\n        ...props,\n        onChange,\n        maxWidth,\n        widthEqualToActivator,\n        visible: visibleOptionList,\n        setLastValues,\n        clearSelectedValues: () => {\n            clearSelectedValues();\n            setCommitChanges(performance.now());\n            setVisibleOptionList(false);\n        },\n        maxHeight,\n        bottomSheetHeight,\n        onActivatorClick: setVisibleOptionList,\n        values,\n        multiple,\n        selectedOptions,\n        setVisible: setVisibleOptionList,\n        searchValue,\n        setSearchValue,\n        optionsRef,\n        options: optionList,\n        optionsCount: options.length,\n        setCommitChanges,\n        showClearButton,\n    };\n\n    useEffect(() => {\n        if (optionListSearchText.current.length === 0 && visibleOptionList && optionsRef.current) {\n            const options = optionsRef.current.querySelectorAll<HTMLDivElement>('[data-magritte-option]');\n            optionListSearchText.current = [...options].map((optionElement) => {\n                return { search: optionElement.innerText, value: optionElement.dataset.magritteOption as string };\n            });\n        }\n    }, [visibleOptionList]);\n\n    useEffect(() => {\n        if (searchValue === '') {\n            setOptionList(options);\n        } else {\n            const optionToVisible = optionListSearchText.current\n                .filter(({ search }) => {\n                    const result = match(searchValue, search);\n                    return result;\n                })\n                .map(({ value }) => value);\n            const nextOptions = options.filter(({ value }) => optionToVisible.includes(value));\n\n            setOptionList(nextOptions);\n        }\n    }, [searchValue, options]);\n\n    const onChangeSelect = useCallback(() => onChangeHandler(values), [values, onChangeHandler]);\n\n    useEffect(() => {\n        if (previousCommitChanges.current === commitChanges) {\n            return;\n        }\n\n        if (!multiple) {\n            setVisibleOptionList(false);\n        }\n\n        onChangeSelect();\n    }, [isMobile, onChangeSelect, commitChanges, multiple]);\n\n    useEffect(() => {\n        if (previousCommitChanges.current !== commitChanges) {\n            const nextSelectedOptions = options.filter(({ value }) =>\n                Array.isArray(values) ? values.includes(value) : values === value\n            );\n            setSelectedOptions(nextSelectedOptions);\n            previousCommitChanges.current = commitChanges;\n        }\n    }, [options, values, commitChanges]);\n\n    if (isMobile) {\n        return (\n            <SelectForMobileDevice\n                {...optionListProps}\n                showCloseButtonInNavigationBar={showCloseButtonInNavigationBar}\n                renderItem={renderItem}\n            />\n        );\n    }\n\n    return (\n        <SelectForDesktopDevice {...optionListProps} renderItemForDesktop={renderItemForDesktop} dropHost={dropHost} />\n    );\n};\n\nSelect.displayName = 'Select';\n\nexport { Select };\n","import { FC, useContext, useEffect, useId } from 'react';\n\nimport { SnackbarContext } from '@hh.ru/magritte-ui-snackbar/context';\nimport { SnackbarProps, SnackbarTransitionName } from '@hh.ru/magritte-ui-snackbar/types';\n\nexport const Snackbar: FC<SnackbarProps> = (props) => {\n    const context = useContext(SnackbarContext);\n    const uid = useId();\n\n    useEffect(() => {\n        context.animateIn(uid, props);\n    }, [context, uid, props]);\n\n    useEffect(() => {\n        return () => {\n            context.animateOut(uid, SnackbarTransitionName.Hide);\n        };\n    }, [context, uid]);\n\n    return null;\n};\n","import { type AriaSnackbarProps } from '@hh.ru/magritte-ui-snackbar/types';\n\ninterface UseAriaSnackbarProps extends AriaSnackbarProps {\n    hasAction: boolean;\n}\n\ninterface AriaAttributes extends AriaSnackbarProps {\n    'aria-describedby'?: string;\n    'aria-modal'?: 'true' | 'false';\n    tabIndex?: number;\n}\n\nexport const useAriaSnackbar = ({ role, 'aria-label': ariaLabel, hasAction }: UseAriaSnackbarProps): AriaAttributes => {\n    let ariaAttributes: AriaAttributes = {\n        role,\n        'aria-label': ariaLabel,\n    };\n\n    if (hasAction || role === 'alertdialog') {\n        ariaAttributes = {\n            ...ariaAttributes,\n            role: 'alertdialog',\n            'aria-modal': 'true',\n            tabIndex: 0,\n        };\n    }\n\n    if (role !== 'status') {\n        ariaAttributes = {\n            ...ariaAttributes,\n            'aria-describedby': 'dialog-description',\n        };\n    }\n\n    return ariaAttributes;\n};\n","import { useEffect, useRef } from 'react';\n\nimport { UseTimerFunc } from '@hh.ru/magritte-ui-timer/types';\n\nexport const useTimer: UseTimerFunc = (timeout, runner, tickCallback, paused) => {\n    const cachedTimeout = useRef<number>(timeout);\n    const cachedRunner = useRef(runner);\n    const cachedTickCallback = useRef(tickCallback);\n    const remainingTime = useRef<number>(timeout);\n\n    useEffect(() => {\n        if (timeout !== cachedTimeout.current) {\n            remainingTime.current = timeout;\n        }\n\n        const end = Date.now() + remainingTime.current;\n        let cleanupFunc: VoidFunction;\n\n        const nextTickFunc = (): void => {\n            const now = Date.now();\n            cachedTickCallback.current((end - now) / timeout);\n            remainingTime.current = end - now;\n\n            if (now > end) {\n                return;\n            }\n\n            cleanupFunc = cachedRunner.current(nextTickFunc);\n        };\n\n        if (!paused) {\n            nextTickFunc();\n        }\n\n        return () => {\n            cleanupFunc?.();\n        };\n    }, [timeout, paused]);\n};\n","import { FC, useRef } from 'react';\n\nimport { TimerProps } from '@hh.ru/magritte-ui-timer/types';\nimport { useTimer } from '@hh.ru/magritte-ui-timer/useTimer';\n\nimport styles from './timer.less';\n\nconst SVG_CIRCLE_RADIUS = 9.19;\nconst SVG_CIRCLE_LENGTH = 2 * Math.PI * SVG_CIRCLE_RADIUS;\n\nexport const Timer: FC<TimerProps> = ({ timeout, pause = false, callback }) => {\n    const svgRef = useRef<SVGSVGElement>(null);\n    const circleRef = useRef<SVGCircleElement>(null);\n\n    useTimer(\n        timeout,\n        (_callable) => {\n            const timerId = requestAnimationFrame(_callable);\n\n            return () => {\n                cancelAnimationFrame(timerId);\n            };\n        },\n        (remaining) => {\n            if (svgRef.current) {\n                svgRef.current.setAttribute('aria-valuenow', `${Math.round((1 - remaining) * SVG_CIRCLE_LENGTH)}`);\n            }\n            if (circleRef.current) {\n                circleRef.current.setAttribute('stroke-dashoffset', `${remaining * SVG_CIRCLE_LENGTH}`);\n            }\n            if (remaining < 0) {\n                callback?.();\n            }\n        },\n        pause\n    );\n\n    if (!timeout) {\n        return null;\n    }\n\n    return (\n        <svg\n            className={styles.timer}\n            aria-valuemin={0}\n            aria-valuemax={Math.round(SVG_CIRCLE_LENGTH)}\n            role=\"progressbar\"\n            width=\"24px\"\n            height=\"24px\"\n            viewBox=\"0 0 24 24\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            ref={svgRef}\n        >\n            <circle\n                className={styles['timer-circle']}\n                r={SVG_CIRCLE_RADIUS}\n                cx=\"12\"\n                cy=\"12\"\n                fill=\"none\"\n                strokeDasharray={SVG_CIRCLE_LENGTH}\n                strokeLinecap=\"round\"\n                strokeWidth=\"2.625\"\n                transform=\"rotate(-90,12,12)\"\n                ref={circleRef}\n            />\n        </svg>\n    );\n};\n","import { FC, useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classnames from 'classnames';\n\nimport { useDebounce } from '@hh.ru/magritte-common-func-utils';\nimport { useEscapeToClose } from '@hh.ru/magritte-common-keyboard';\nimport { useResize } from '@hh.ru/magritte-common-resize';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { Action, ActionMode, ActionStyle } from '@hh.ru/magritte-ui-action';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\nimport { Link, LinkStyle } from '@hh.ru/magritte-ui-link';\nimport { SnackbarLayout, SnackbarRendererProps, SnackbarTransitionName } from '@hh.ru/magritte-ui-snackbar/types';\nimport { useAriaSnackbar } from '@hh.ru/magritte-ui-snackbar/useAriaSnackbar';\nimport { Timer, useTimer } from '@hh.ru/magritte-ui-timer';\nimport { TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './snackbar.less';\n\nconst CLASS_NAMES = {\n    [SnackbarTransitionName.Show]: {\n        appear: styles.appear,\n        appearActive: styles['appear-active'],\n        appearDone: styles['appear-done'],\n    },\n    [SnackbarTransitionName.Hide]: {\n        exit: styles.exit,\n        exitActive: styles['exit-active'],\n        exitDone: styles['exit-done'],\n    },\n    [SnackbarTransitionName.Autohide]: {\n        exit: styles.exit,\n        exitActive: styles['exit-active_autohide'],\n        exitDone: styles['exit-done'],\n    },\n    [SnackbarTransitionName.Replace]: {\n        appear: styles.appear,\n        appearDone: styles['appear-done'],\n    },\n    [SnackbarTransitionName.RemoveImmediately]: {},\n};\n\nconst DEFAULT_AUTOHIDE_TIME_MS = 6000;\n\nexport const SnackbarRenderer: FC<SnackbarRendererProps> = ({\n    actionLabel,\n    addon,\n    autohideTime = DEFAULT_AUTOHIDE_TIME_MS,\n    children,\n    containerId,\n    animateOut,\n    onAction,\n    onClose,\n    showClose,\n    showTimer,\n    timeout,\n    transition,\n    'aria-label': ariaLabel,\n    ariaLabelClose,\n    role = 'status',\n    ...props\n}) => {\n    const actionFunc = useCallback(() => onAction?.(), [onAction]);\n    const [isFocusedElement, setFocusedElement] = useState(false);\n    const [isHover, setHover] = useState(false);\n    const [layout, setLayout] = useState<SnackbarLayout>(SnackbarLayout.Horizontal);\n    const autohideFunc = useCallback(() => animateOut(SnackbarTransitionName.Autohide), [animateOut]);\n    const closeFunc = useCallback(() => animateOut(SnackbarTransitionName.Hide), [animateOut]);\n    const previousMetrics = useRef<DOMRect | null>(null);\n    const ariaAttributes = useAriaSnackbar({ role, hasAction: !!actionLabel, 'aria-label': ariaLabel });\n\n    const exitAnimationCallback = useCallback(() => {\n        animateOut(SnackbarTransitionName.RemoveImmediately);\n        onClose?.();\n    }, [animateOut, onClose]);\n\n    const nodeRef = useRef<HTMLDivElement>(null);\n    const textRef = useRef<HTMLDivElement>(null);\n    const resizebleContentRef = useRef<HTMLDivElement>(null);\n    useEscapeToClose(nodeRef, exitAnimationCallback);\n\n    const calculateLayout = useCallback(() => {\n        if (textRef.current && resizebleContentRef.current) {\n            const metrics = resizebleContentRef.current?.getBoundingClientRect();\n            const style = window.getComputedStyle(textRef.current);\n            const isVerticalLayout = textRef.current.getBoundingClientRect().height > parseInt(style.lineHeight, 10);\n\n            if (previousMetrics.current !== null) {\n                const increaseScreenSize = metrics.width > previousMetrics.current.width;\n\n                setLayout((layout) => {\n                    /* Уменьшаем размер экрана и если нужно переключится в вертикальный лаяут */\n                    if (!increaseScreenSize && isVerticalLayout && layout === SnackbarLayout.Horizontal) {\n                        return SnackbarLayout.Vertical;\n                    }\n\n                    /* Увеличиваем размер экрана и если нужно переключится в вертикальный лаяут */\n                    if (increaseScreenSize && isVerticalLayout && layout === SnackbarLayout.Horizontal) {\n                        return SnackbarLayout.Vertical;\n                    }\n\n                    /* Кейсы когда уменьшаем или увеличиваем размер экрана и нужно переключится\n                     * с вертикального на горизонтальный лаяут скипаем, потому как доступного места для текста\n                     * меньше и может оказаться что текст будет  в 2 строки и надо\n                     * снова переключатся на вертикальный лаяут. */\n                    return layout;\n                });\n            } else {\n                setLayout(isVerticalLayout ? SnackbarLayout.Vertical : SnackbarLayout.Horizontal);\n            }\n            previousMetrics.current = resizebleContentRef.current?.getBoundingClientRect();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (actionLabel) {\n            nodeRef.current?.focus?.();\n        }\n    }, [actionLabel]);\n\n    useLayoutEffect(calculateLayout, [calculateLayout]);\n    useResize(useDebounce(calculateLayout, 64));\n\n    useTimer(\n        !!autohideTime && !showTimer ? autohideTime : -1,\n        (callable) => {\n            const timeoutId = setTimeout(callable, 50);\n            return () => clearTimeout(timeoutId);\n        },\n        (remaining) => {\n            remaining < 0 && autohideFunc();\n        },\n        isFocusedElement || isHover\n    );\n\n    return (\n        <CSSTransition\n            appear\n            classNames={CLASS_NAMES[transition]}\n            in={transition === SnackbarTransitionName.Show || transition === SnackbarTransitionName.Replace}\n            nodeRef={nodeRef}\n            onExited={exitAnimationCallback}\n            timeout={timeout}\n        >\n            <Layer layer={InternalLayerName.Snackbar}>\n                <div\n                    {...props}\n                    {...ariaAttributes}\n                    className={classnames(styles.snackbar, {\n                        [styles.snackbarFixedWidth]: !containerId,\n                        [styles.snackbarLayoutVertical]: layout === SnackbarLayout.Vertical,\n                        [styles.snackbarLayoutHorizontal]: layout === SnackbarLayout.Horizontal,\n                    })}\n                    ref={nodeRef}\n                    onFocus={(event) => {\n                        if (event.target !== nodeRef.current) {\n                            setFocusedElement(true);\n                        }\n                    }}\n                    onBlur={() => {\n                        setFocusedElement(false);\n                    }}\n                    onMouseEnter={() => {\n                        setHover(true);\n                    }}\n                    onMouseLeave={() => {\n                        setHover(false);\n                    }}\n                >\n                    <div className={styles.snackbarContent}>\n                        {!!addon && (\n                            <div className={styles.snackbarAddon} data-qa=\"snackbar-addon\">\n                                {addon}\n                            </div>\n                        )}\n                        {!!autohideTime && showTimer && (\n                            <div className={styles.snackbarAddon} data-qa=\"snackbar-timer\">\n                                <Timer\n                                    timeout={autohideTime}\n                                    pause={isFocusedElement || isHover}\n                                    callback={autohideFunc}\n                                />\n                            </div>\n                        )}\n                        <div className={styles.snackbarTextAndAction} ref={resizebleContentRef}>\n                            <div className={styles.snackbarText} ref={textRef} id=\"dialog-description\">\n                                {children}\n                            </div>\n                            {!!actionLabel && (\n                                <Link\n                                    data-qa=\"snackbar-user-action\"\n                                    aria-label={actionLabel}\n                                    Element=\"button\"\n                                    type=\"button\"\n                                    onClick={actionFunc}\n                                    typography={TextTypography.Subtitle1Semibold}\n                                    style={LinkStyle.Contrast}\n                                >\n                                    {actionLabel}\n                                </Link>\n                            )}\n                        </div>\n                        {showClose && (\n                            <div className={styles.snackbarClose}>\n                                <Action\n                                    data-qa=\"snackbar-close-action\"\n                                    tabIndex={actionLabel ? 0 : -1}\n                                    aria-label={\n                                        actionLabel && typeof ariaLabelClose === 'string' ? ariaLabelClose : undefined\n                                    }\n                                    icon={CrossOutlinedSize24}\n                                    mode={ActionMode.Secondary}\n                                    onClick={closeFunc}\n                                    style={ActionStyle.Contrast}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </Layer>\n        </CSSTransition>\n    );\n};\n","import { FC, ReactNode, useCallback, useEffect, useMemo, useState, useRef, PropsWithChildren } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { SnackbarRenderer } from '@hh.ru/magritte-ui-snackbar/SnackbarRenderer';\nimport { SnackbarContext, SnackbarContextProps } from '@hh.ru/magritte-ui-snackbar/context';\nimport { SnackbarProps, SnackbarState, SnackbarTransitionName } from '@hh.ru/magritte-ui-snackbar/types';\n\nimport styles from './snackbar.less';\n\nexport const SnackbarContextProvider: FC<PropsWithChildren> = ({ children }) => {\n    const animationTimeoutRef = useRef({\n        [SnackbarTransitionName.Show]: 0,\n        [SnackbarTransitionName.Hide]: 0,\n        [SnackbarTransitionName.Autohide]: 0,\n        [SnackbarTransitionName.Replace]: 0,\n        [SnackbarTransitionName.RemoveImmediately]: 0,\n    });\n    const containerRefs = useRef<{ [id: string]: HTMLElement }>({});\n    const [state, setState] = useState<{ [uid: string]: SnackbarState }>({});\n\n    const animateOut: SnackbarContextProps['animateOut'] = useCallback(\n        (uid, transition) => {\n            setState((prevState) => {\n                if (uid in prevState) {\n                    return transition === SnackbarTransitionName.RemoveImmediately\n                        ? Object.fromEntries(Object.entries(prevState).filter(([key]) => key !== uid))\n                        : { ...prevState, [uid]: { ...prevState[uid], transition } };\n                }\n\n                return prevState;\n            });\n        },\n        [setState]\n    );\n\n    const animateIn: SnackbarContextProps['animateIn'] = useCallback(\n        (uid: string, props: SnackbarProps) => {\n            setState((prevState) => {\n                if (uid in prevState) {\n                    // не даем менять некоторые пропсы у существующего снекбара\n                    const { autohideTime, containerId, showTimer, ..._props } = props;\n                    return { ...prevState, [uid]: { ...prevState[uid], ..._props } as SnackbarState };\n                }\n\n                const _props: Pick<SnackbarState, 'animateOut' | 'transition'> = {\n                    animateOut: (transition) => animateOut(uid, transition),\n                    transition: SnackbarTransitionName[Object.keys(prevState).length > 0 ? 'Replace' : 'Show'],\n                };\n\n                return Object.keys(prevState).reduce(\n                    (accumulator, key) => {\n                        const value = { ...prevState[key], transition: SnackbarTransitionName.Hide };\n                        return key === uid ? accumulator : { ...accumulator, [key]: value };\n                    },\n                    { [uid]: { ..._props, ...props } as SnackbarState }\n                );\n            });\n        },\n        [animateOut, setState]\n    );\n\n    const renderFunc = useCallback(\n        (uid: string): ReactNode => {\n            const containerId = state[uid].containerId;\n            const container = containerId ? containerRefs.current[containerId] : document.body;\n\n            if (!container) {\n                return null;\n            }\n\n            return createPortal(\n                <SnackbarRenderer {...state[uid]} timeout={animationTimeoutRef.current[state[uid].transition]} />,\n                container,\n                uid\n            );\n        },\n        [state]\n    );\n\n    const setContainerRef: SnackbarContextProps['setContainerRef'] = useCallback((containerId, instance) => {\n        if (!instance) {\n            return;\n        }\n\n        containerRefs.current[containerId] = instance;\n    }, []);\n\n    useEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles['snackbar-animation-timeout']);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n\n        for (const transition of Object.values(SnackbarTransitionName)) {\n            const animationTimeout = parseInt(style.getPropertyValue(`--${transition}-animation-duration`), 10);\n            if (Number.isInteger(animationTimeout)) {\n                animationTimeoutRef.current[transition] = animationTimeout;\n            }\n        }\n\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    const value = useMemo<SnackbarContextProps>(() => {\n        return {\n            animateIn,\n            animateOut,\n            setContainerRef,\n        };\n    }, [animateIn, animateOut, setContainerRef]);\n\n    return (\n        <SnackbarContext.Provider value={value}>\n            {Object.keys(state).map(renderFunc)}\n            {children}\n        </SnackbarContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\nimport { SnackbarProps, SnackbarTransitionName } from '@hh.ru/magritte-ui-snackbar/types';\n\nexport interface SnackbarContextProps {\n    animateIn: (uid: string, props: SnackbarProps) => void;\n    animateOut: (\n        uid: string,\n        transition:\n            | SnackbarTransitionName.Hide\n            | SnackbarTransitionName.Autohide\n            | SnackbarTransitionName.RemoveImmediately\n    ) => void;\n    setContainerRef: (containerId: string, instance: HTMLElement | null) => void;\n}\n\nconst noopFunc = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport const SnackbarContext = createContext<SnackbarContextProps>({\n    animateIn: noopFunc,\n    animateOut: noopFunc,\n    setContainerRef: noopFunc,\n});\n","import type { ReactNode, PropsWithChildren } from 'react';\n\nexport enum SnackbarLayout {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical',\n}\n\nexport enum SnackbarTransitionName {\n    Show = 'show',\n    Hide = 'hide',\n    Autohide = 'autohide',\n    Replace = 'replace',\n    RemoveImmediately = 'removeImmediately',\n}\n\nexport interface AriaSnackbarProps {\n    /**\n     * Aтрибут role, логика выбора описана в разделе доступность\n     **/\n    role?: 'status' | 'alertdialog' | 'alert';\n    /**\n     * Aтрибут aria-label\n     **/\n    'aria-label'?: string;\n}\n\ninterface BaseSnackbarProps extends AriaSnackbarProps {\n    /**\n     * Cодержимое уведомления (текст, без каких либо активных компонентов)\n     **/\n    children: ReactNode;\n    /**\n     * Текст действия, фокусирует юзера на уведомлении\n     **/\n    actionLabel?: string;\n    /**\n     * Время aвтоматического скрытия уведомления в мс(дефолт 6000). Если не нужно скрывать\n     * по истечению времени, тогда нужно передать 0.\n     **/\n    autohideTime?: number;\n    /**\n     * Идентификатор контейнера, в котором отрисуется компонент\n     **/\n    containerId?: string;\n    /**\n     * Колбек действия, вызывается после нажатия на действие\n     **/\n    onAction?: VoidFunction;\n    /**\n     * Колбек закрытия компонента, вызывается после скрытия\n     **/\n    onClose?: VoidFunction;\n}\n\ninterface SnackbarPropsWithClose {\n    /**\n     * Булев флаг, который отвечает за показ кнопки закрытия\n     **/\n    showClose?: true;\n    /**\n     * Aria-label атрибут для кнопки закрытия, устанавливается в случае если показываем кнопку закрытия\n     **/\n    ariaLabelClose?: string;\n}\n\ninterface SnackbarPropsWithoutClose {\n    showClose?: false;\n    ariaLabelClose?: never;\n}\n\ninterface SnackbarPropsWithAddon {\n    /**\n     * Компонент, который отрисуется в контейнере с левой стороны children, размер 24*24px\n     **/\n    addon?: ReactNode;\n    showTimer?: false;\n}\n\ninterface SnackbarPropsWithTimer {\n    addon?: never;\n    /**\n     * Булев флаг, который отвечает за показ таймера закрытия компонента, вместо на месте addon\n     **/\n    showTimer: true;\n}\n\nexport type SnackbarProps = BaseSnackbarProps &\n    (SnackbarPropsWithAddon | SnackbarPropsWithTimer) &\n    (SnackbarPropsWithClose | SnackbarPropsWithoutClose);\n\nexport type SnackbarState = SnackbarProps & {\n    animateIn: VoidFunction;\n    animateOut: (\n        transition:\n            | SnackbarTransitionName.Hide\n            | SnackbarTransitionName.Autohide\n            | SnackbarTransitionName.RemoveImmediately\n    ) => void;\n    transition: SnackbarTransitionName;\n};\n\nexport type SnackbarRendererProps = SnackbarState & { timeout: number };\n\nexport interface SnackbarContainerProps extends PropsWithChildren {\n    /**\n     * Уникальный идентификатор контейнера\n     **/\n    id: string;\n}\n","import { FC, memo } from 'react';\n\nimport { type SpacingComponentProps } from '@hh.ru/magritte-ui-spacing/types';\nimport { genCssVarsFromSizesMap, getSizesMap } from '@hh.ru/magritte-ui-spacing/utils';\n\nimport styles from './styles.less';\n\nexport const HSpacing: FC<SpacingComponentProps> = memo((spacingSizes) => {\n    const cssVars = genCssVarsFromSizesMap(getSizesMap(spacingSizes));\n\n    return <div className={styles.hSpacing} style={cssVars} />;\n});\n\nHSpacing.displayName = 'HSpacing';\n","import { FC, memo, PropsWithChildren } from 'react';\n\nimport { type SpacingComponentProps } from '@hh.ru/magritte-ui-spacing/types';\nimport { genCssVarsFromSizesMap, getSizesMap } from '@hh.ru/magritte-ui-spacing/utils';\n\nimport styles from './styles.less';\n\nexport const HSpacingContainer: FC<PropsWithChildren<SpacingComponentProps>> = memo(({ children, ...spacingSizes }) => {\n    const cssVars = genCssVarsFromSizesMap(getSizesMap(spacingSizes));\n\n    return (\n        <div className={styles.hSpacingContainer} style={cssVars}>\n            {children}\n        </div>\n    );\n});\n\nHSpacingContainer.displayName = 'HSpacingContainer';\n","import { FC, memo } from 'react';\n\nimport { type SpacingComponentProps } from '@hh.ru/magritte-ui-spacing/types';\nimport { genCssVarsFromSizesMap, getSizesMap } from '@hh.ru/magritte-ui-spacing/utils';\n\nimport styles from './styles.less';\n\nexport const VSpacing: FC<SpacingComponentProps> = memo((spacingSizes) => {\n    const cssVars = genCssVarsFromSizesMap(getSizesMap(spacingSizes));\n\n    return <div className={styles.vSpacing} style={cssVars} />;\n});\n\nVSpacing.displayName = 'VSpacing';\n","import { FC, memo, PropsWithChildren } from 'react';\n\nimport { type SpacingComponentProps } from '@hh.ru/magritte-ui-spacing/types';\nimport { genCssVarsFromSizesMap, getSizesMap } from '@hh.ru/magritte-ui-spacing/utils';\n\nimport styles from './styles.less';\n\nexport const VSpacingContainer: FC<PropsWithChildren<SpacingComponentProps>> = memo(({ children, ...spacingSizes }) => {\n    const cssVars = genCssVarsFromSizesMap(getSizesMap(spacingSizes));\n\n    return (\n        <div className={styles.vSpacingContainer} style={cssVars}>\n            {children}\n        </div>\n    );\n});\n\nVSpacingContainer.displayName = 'VSpacingContainer';\n","import { TokenBaseStaticSpace } from '@hh.ru/magritte-design-tokens/src/types';\nimport { SpacingComponentProps } from '@hh.ru/magritte-ui-spacing/types';\n\nconst SIZES_SORTED = ['xs', 's', 'm', 'l', 'xl', 'xxl'] as const;\n\nexport const getSizesMap = (\n    sizes: SpacingComponentProps\n): {\n    xs: TokenBaseStaticSpace;\n    s: TokenBaseStaticSpace;\n    m: TokenBaseStaticSpace;\n    l: TokenBaseStaticSpace;\n    xl: TokenBaseStaticSpace;\n    xxl: TokenBaseStaticSpace;\n} => {\n    const result = {\n        xs: sizes.default,\n        s: sizes.default,\n        m: sizes.default,\n        l: sizes.default,\n        xl: sizes.default,\n        xxl: sizes.default,\n    };\n    let prevGteSize = sizes.default;\n    SIZES_SORTED.forEach((size) => {\n        prevGteSize = sizes[`gte${size.charAt(0).toUpperCase()}${size.slice(1)}` as keyof typeof sizes] ?? prevGteSize;\n        const currentSize = sizes[size] ?? prevGteSize;\n        result[size] = currentSize;\n    });\n\n    return result;\n};\n\nexport const genCssVarsFromSizesMap = (sizes: ReturnType<typeof getSizesMap>): Record<string, number> =>\n    Object.entries(sizes).reduce(\n        (acc, [size, value]) => ({ ...acc, [`--magritte-spacing-${size}`]: `${value}px` }),\n        {}\n    );\n","import { ReactEventHandler, Ref, forwardRef, memo, useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport '@hh.ru/magritte-common-focus-visible';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { useScrollContext } from '@hh.ru/magritte-internal-scrollable-container';\nimport { type ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport { Counter, CounterMode } from '@hh.ru/magritte-ui-counter';\nimport { type TabProps } from '@hh.ru/magritte-ui-tabs/types';\nimport { TooltipHover } from '@hh.ru/magritte-ui-tooltip';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './tabs.less';\n\nexport const Tab: ComponentWithCustomElement<TabProps, 'button'> = memo(\n    forwardRef(\n        (\n            {\n                Element = 'button',\n                id,\n                children,\n                counter,\n                selected,\n                onClick,\n                onSelect,\n                hidden,\n                dataQa = 'tab',\n                focused,\n                mode = 'primary',\n                ...buttonProps\n            },\n            ref\n        ) => {\n            const elementRef = useRef<HTMLButtonElement>(null);\n            const elementRefCallback = useMultipleRefs<HTMLButtonElement>(elementRef, ref as Ref<HTMLButtonElement>);\n            const mouseEventRef = useRef(false);\n            const textRef = useRef<HTMLSpanElement>(null);\n            const { removeItem, registerItem, scrollToItem } = useScrollContext();\n            const [showTooltip, setShowTooltip] = useState(false);\n\n            useLayoutEffect(() => {\n                if (elementRef.current) {\n                    registerItem(elementRef);\n                }\n\n                return () => {\n                    removeItem(elementRef);\n                };\n            }, [registerItem, removeItem]);\n\n            useLayoutEffect(() => {\n                if (focused && elementRef.current) {\n                    elementRef.current.focus();\n                }\n            }, [focused]);\n\n            useLayoutEffect(() => {\n                if (selected && elementRef.current) {\n                    scrollToItem(elementRef);\n                }\n            }, [selected, scrollToItem]);\n\n            useLayoutEffect(() => {\n                if (\n                    mode === 'secondary' &&\n                    textRef.current !== null &&\n                    textRef.current.scrollWidth > textRef.current.offsetWidth\n                ) {\n                    setShowTooltip(true);\n                }\n            }, [mode, setShowTooltip]);\n\n            const handleFocus = useCallback(() => {\n                if (!mouseEventRef.current) {\n                    scrollToItem(elementRef);\n                }\n            }, [scrollToItem]);\n\n            const setMouseEventRef = useCallback(() => (mouseEventRef.current = true), []);\n\n            const resetMouseEventRef = useCallback(() => (mouseEventRef.current = false), []);\n\n            if (hidden) {\n                return null;\n            }\n\n            const handleClick: ReactEventHandler = (event) => {\n                if (onSelect) {\n                    onSelect(id);\n                }\n\n                if (onClick) {\n                    onClick(event);\n                }\n            };\n\n            const content = (\n                <span className={styles.tabContent}>\n                    <span className={styles.tabText} ref={textRef}>\n                        <Text\n                            Element=\"span\"\n                            typography={\n                                mode === 'primary' ? TextTypography.Subtitle1Semibold : TextTypography.Label2Regular\n                            }\n                        >\n                            {children}\n                        </Text>\n                    </span>\n                    {counter && (\n                        <span className={styles.tabCounter} data-qa=\"tab-counter\">\n                            <Counter mode={CounterMode.Secondary} label={counter} />\n                        </span>\n                    )}\n                </span>\n            );\n\n            return (\n                <Element\n                    {...buttonProps}\n                    type=\"button\"\n                    ref={elementRefCallback}\n                    role=\"tab\"\n                    data-qa={dataQa}\n                    onClick={handleClick}\n                    className={classnames(styles.tab, {\n                        [styles.tabSelected]: selected,\n                        [styles[`tab_${mode}`]]: !!mode,\n                    })}\n                    aria-selected={selected}\n                    onFocus={handleFocus}\n                    onMouseDown={setMouseEventRef}\n                    onMouseLeave={resetMouseEventRef}\n                    onMouseUp={resetMouseEventRef}\n                >\n                    {showTooltip ? (\n                        <TooltipHover activator={content} alignment=\"center\" direction=\"top\">\n                            {children}\n                        </TooltipHover>\n                    ) : (\n                        content\n                    )}\n                </Element>\n            );\n        }\n    )\n);\n\nTab.displayName = 'Tab';\n","import {\n    isValidElement,\n    ReactElement,\n    useCallback,\n    useRef,\n    useState,\n    Children,\n    useMemo,\n    useEffect,\n    FocusEvent,\n    RefObject,\n    RefCallback,\n} from 'react';\n\nimport { keyboardKeys, keyboardMatches, keyboardMatch } from '@hh.ru/magritte-common-keyboard';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { Tab } from '@hh.ru/magritte-ui-tabs/Tab';\nimport type { TabId, TabProps } from '@hh.ru/magritte-ui-tabs/types';\n\nimport styles from './tabs.less';\n\ninterface Params {\n    activeItemId?: string;\n    indicatorRef: RefObject<HTMLDivElement>;\n    items: ReactElement<TabProps>[];\n    onChange?: (activeItemId: TabId) => void;\n    tabsContainerRef: RefObject<HTMLDivElement>;\n}\n\nconst isValidTabElement = (child: ReactElement<TabProps>) => isValidElement(child) && child.type === Tab;\n\nconst isItemVisible = (child: ReactElement<TabProps>) => !child.props.hidden;\n\nexport const useTabs: (params: Params) => TabProps[] = ({\n    activeItemId,\n    indicatorRef,\n    items,\n    onChange,\n    tabsContainerRef,\n}) => {\n    const [selectedItemId, setSelectedItemId] = useState<TabId | null>(activeItemId || null);\n    const [focusedItemId, setFocusedItemId] = useState<TabId | null>(null);\n    const [focused, setFocused] = useState(false);\n    const animateIndicatorRef = useRef(false);\n    const isControlled = useRef(!!activeItemId && !!onChange);\n    const itemRefs = useRef<Record<string, HTMLElement>>({});\n    const { isXS } = useBreakpoint();\n\n    const itemRefCallbacks = useMemo(() => {\n        return items.reduce((result, item) => {\n            return {\n                ...result,\n                [item.props.id]: (element: HTMLElement) => {\n                    itemRefs.current[item.props.id] = element;\n                },\n            };\n        }, {} as Record<TabId, RefCallback<HTMLElement>>);\n    }, [items]);\n\n    const handleSelect = useCallback(\n        (itemId: TabId) => {\n            if (!isXS) {\n                setFocusedItemId(itemId);\n            }\n\n            if (!isControlled.current) {\n                setSelectedItemId(itemId);\n            }\n\n            if (onChange) {\n                onChange(itemId);\n            }\n        },\n        [isXS, onChange, setFocusedItemId, setSelectedItemId]\n    );\n\n    const tabs: TabProps[] = useMemo(() => {\n        return Children.toArray(items)\n            .filter(\n                (tab) =>\n                    isValidTabElement(tab as ReactElement<TabProps>) && isItemVisible(tab as ReactElement<TabProps>)\n            )\n            .map((item, index) => {\n                const itemId = (item as ReactElement<TabProps>).props.id;\n                const isSelected = isControlled?.current ? itemId === activeItemId : itemId === selectedItemId;\n                const tabIndex = index === 0 ? 0 : -1;\n\n                return {\n                    ...(item as ReactElement<TabProps>).props,\n                    tabIndex: focused ? -1 : tabIndex,\n                    selected: isSelected,\n                    onSelect: handleSelect,\n                    focused: itemId === focusedItemId,\n                    ref: itemRefCallbacks[itemId],\n                };\n            });\n    }, [activeItemId, focused, focusedItemId, handleSelect, items, itemRefCallbacks, selectedItemId]);\n\n    const getNextTab = useCallback(\n        (currentTab: TabId) => {\n            const itemIndex = tabs.findIndex(({ id }) => id === currentTab);\n\n            if (itemIndex === tabs.length - 1) {\n                return currentTab;\n            }\n\n            return tabs[itemIndex + 1].id;\n        },\n        [tabs]\n    );\n\n    const getPrevTab = useCallback(\n        (currentTab: TabId) => {\n            const itemIndex = tabs.findIndex(({ id }) => id === currentTab);\n\n            if (itemIndex <= 0) {\n                return currentTab;\n            }\n\n            return tabs[itemIndex - 1].id;\n        },\n        [tabs]\n    );\n\n    const getFirstTab = useCallback(() => tabs[0].id, [tabs]);\n\n    const getLastTab = useCallback(() => tabs[tabs.length - 1].id, [tabs]);\n\n    const handleKeydown = useCallback(\n        (event: KeyboardEvent) => {\n            if (keyboardMatch(event, keyboardKeys.Tab)) {\n                return;\n            }\n\n            const defaultFocusedItem = getFirstTab();\n            if (keyboardMatch(event, keyboardKeys.ArrowLeft)) {\n                setFocusedItemId(getPrevTab(focusedItemId || defaultFocusedItem));\n            } else if (keyboardMatch(event, keyboardKeys.ArrowRight)) {\n                setFocusedItemId(getNextTab(focusedItemId || defaultFocusedItem));\n            } else if (keyboardMatch(event, keyboardKeys.Home)) {\n                setFocusedItemId(getFirstTab());\n            } else if (keyboardMatch(event, keyboardKeys.End)) {\n                setFocusedItemId(getLastTab());\n            } else if (keyboardMatches(event, [keyboardKeys.Enter, keyboardKeys.Space])) {\n                handleSelect(focusedItemId || defaultFocusedItem);\n            } else {\n                return;\n            }\n\n            event.preventDefault();\n        },\n        [getFirstTab, getNextTab, getPrevTab, focusedItemId, getLastTab, handleSelect]\n    );\n\n    useEffect(() => {\n        const itemId = isControlled ? activeItemId : selectedItemId;\n        if (\n            !!itemId &&\n            indicatorRef.current !== null &&\n            tabsContainerRef.current !== null &&\n            itemRefs.current[itemId]\n        ) {\n            if (!animateIndicatorRef.current) {\n                animateIndicatorRef.current = true;\n            } else {\n                indicatorRef.current.classList.add(styles.animate);\n            }\n            indicatorRef.current.style.left = `${itemRefs.current[itemId].offsetLeft}px`;\n            indicatorRef.current.style.width = `${itemRefs.current[itemId].offsetWidth}px`;\n        }\n    }, [activeItemId, selectedItemId, indicatorRef, tabsContainerRef]);\n\n    useEffect(() => {\n        const handleFocusIn = (event: Event | FocusEvent) => {\n            if (focused && tabsContainerRef?.current?.contains((event as FocusEvent).relatedTarget)) {\n                return;\n            }\n            setFocused(true);\n        };\n\n        const handleFocusOut = (event: Event | FocusEvent) => {\n            if (tabsContainerRef?.current?.contains((event as FocusEvent).relatedTarget)) {\n                return;\n            }\n\n            setFocused(false);\n            setFocusedItemId(null);\n        };\n\n        const element = tabsContainerRef?.current;\n\n        if (focused) {\n            element?.addEventListener('focusout', handleFocusOut);\n\n            return () => {\n                element?.removeEventListener('focusout', handleFocusOut);\n            };\n        }\n\n        element?.addEventListener('focusin', handleFocusIn);\n\n        return () => {\n            element?.removeEventListener('focusin', handleFocusIn);\n        };\n    }, [focused, tabsContainerRef]);\n\n    useEffect(() => {\n        const element = tabsContainerRef?.current;\n        element?.addEventListener('keydown', handleKeydown);\n\n        return () => {\n            element?.removeEventListener('keydown', handleKeydown);\n        };\n    }, [handleKeydown, tabsContainerRef]);\n\n    return tabs;\n};\n","import { FC, useCallback, useRef, useState } from 'react';\n\nimport { ScrollableContainer } from '@hh.ru/magritte-internal-scrollable-container';\nimport { Tab } from '@hh.ru/magritte-ui-tabs/Tab';\nimport { type TabsProps } from '@hh.ru/magritte-ui-tabs/types';\nimport { useTabs } from '@hh.ru/magritte-ui-tabs/useTabs';\n\nimport styles from './tabs.less';\n\nconst defaultContainerCorrections = {};\n\nexport const Tabs: FC<TabsProps> = ({\n    children,\n    activeItemId,\n    onChange,\n    dataQa = 'tab-list',\n    containerCorrections = defaultContainerCorrections,\n    mode = 'primary',\n    ...tabsProps\n}) => {\n    const [tabsContainer, setTabsContainer] = useState<HTMLDivElement | null>(null);\n    const indicatorRef = useRef<HTMLDivElement | null>(null);\n\n    const tabs = useTabs({\n        activeItemId,\n        indicatorRef,\n        items: children,\n        onChange,\n        tabsContainerRef: { current: tabsContainer },\n    });\n\n    const setRefElement = useCallback(\n        (element: HTMLDivElement | null) => {\n            if (element && !tabsContainer) {\n                setTabsContainer(element);\n            }\n        },\n        [tabsContainer]\n    );\n\n    if (!tabs?.length) {\n        return null;\n    }\n\n    return (\n        <ScrollableContainer {...containerCorrections}>\n            <div {...tabsProps} className={styles.tabs} data-qa={dataQa} role=\"tablist\" ref={setRefElement}>\n                {tabs.map((item) => (\n                    <Tab key={item.id} {...item} mode={mode} />\n                ))}\n            </div>\n            {mode === 'secondary' && (\n                <div className={styles.indicatorWrapper}>\n                    <div className={styles.indicator} ref={indicatorRef} data-qa=\"active-tab-indicator\" />\n                </div>\n            )}\n        </ScrollableContainer>\n    );\n};\n","import { ReactElement } from 'react';\nimport classnames from 'classnames';\n\nimport { IconWrapperComponentSize16 } from '@hh.ru/magritte-ui-icon/iconTypes';\nimport { TagProps, TagSize, TagStyle } from '@hh.ru/magritte-ui-tag/types';\n\nimport styles from './tag.less';\n\nconst SIZE_TO_CSS = {\n    [TagSize.Large]: styles.tagSizeLarge,\n    [TagSize.Medium]: styles.tagSizeMedium,\n};\n\nconst STYLE_TO_CSS = {\n    [TagStyle.Special]: styles.tagStyleSpecial,\n    [TagStyle.Warning]: styles.tagStyleWarning,\n    [TagStyle.Positive]: styles.tagStylePositive,\n    [TagStyle.Negative]: styles.tagStyleNegative,\n    [TagStyle.Neutral]: styles.tagStyleNeutral,\n};\n\nexport const Tag = <C, I>({\n    style = TagStyle.Neutral,\n    size = TagSize.Medium,\n    disabled = false,\n    hideLabel,\n    icon,\n    ariaLabel,\n    children,\n}: TagProps<C, I>): ReactElement => {\n    const showLabel = !hideLabel && children;\n    const IconComponent: IconWrapperComponentSize16 | null = icon ?? null;\n    return (\n        <div\n            className={classnames(styles.tag, STYLE_TO_CSS[style], SIZE_TO_CSS[size], {\n                [styles.tagStateDisabled]: disabled,\n            })}\n        >\n            {IconComponent && (\n                <div className={styles.tagIcon}>\n                    <IconComponent aria-label={!showLabel ? ariaLabel : undefined} />\n                </div>\n            )}\n            {showLabel && <div className={styles.tagLabel}>{children}</div>}\n        </div>\n    );\n};\n","import { ReactElement, ReactFragment, HTMLAttributes } from 'react';\n\nimport { IconWrapperComponentSize16 } from '@hh.ru/magritte-ui-icon/iconTypes';\n\nexport enum TagStyle {\n    Neutral = 'neutral',\n    Positive = 'positive',\n    Negative = 'negative',\n    Special = 'special',\n    Warning = 'warning',\n}\n\nexport enum TagSize {\n    Medium = 'medium',\n    Large = 'large',\n}\n\ntype TagChildren = ReactElement | string | number | ReactFragment;\n\ntype CommonTagProps = {\n    style?: TagStyle;\n    size?: TagSize;\n    disabled?: boolean;\n};\n\ntype AriaByHideProps = { hideLabel: boolean; ariaLabel: string } | { hideLabel?: false; ariaLabel?: string };\ntype AriaPartialProps = { hideLabel?: false; ariaLabel?: string };\n\ntype AdditionalChildrenTagProps<I> = I extends IconWrapperComponentSize16 ? AriaByHideProps : AriaPartialProps;\n\ntype ChildrenTagProps<C, I> = {\n    children: C;\n    icon?: I extends IconWrapperComponentSize16 ? I : never;\n} & CommonTagProps &\n    AdditionalChildrenTagProps<I>;\n\ntype IconTagProps<I> = {\n    children?: never;\n    icon: I;\n    ariaLabel: string;\n    hideLabel?: never;\n} & CommonTagProps;\n\nexport type TagPropsHelper<C, I> = C extends TagChildren\n    ? ChildrenTagProps<C, I>\n    : I extends IconWrapperComponentSize16\n    ? IconTagProps<I>\n    : never;\n\nexport type TagProps<C, I> = TagPropsHelper<C, I> & Omit<HTMLAttributes<HTMLDivElement>, keyof TagPropsHelper<C, I>>;\n","import { forwardRef, type ForwardedRef, useId, useRef, useState, type TextareaHTMLAttributes, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { useMultipleRefs } from '@hh.ru/magritte-common-use-multiple-refs';\nimport { FieldHint } from '@hh.ru/magritte-internal-field-hint';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { GripSize24 } from '@hh.ru/magritte-ui-icon/private';\nimport { useInputAriaProps } from '@hh.ru/magritte-ui-input/useInputAriaProps';\nimport type { ControlledTextAreaProps } from '@hh.ru/magritte-ui-textarea/types';\nimport { useFocus } from '@hh.ru/magritte-ui-textarea/useFocus';\nimport { Text, TextTypography } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './textarea.less';\n\nconst TextAreaComponent = (\n    {\n        onChange,\n        onFocus,\n        onBlur,\n        onValidate,\n        value,\n        placeholder,\n        disabled = false,\n        elevatePlaceholder = false,\n        invalid = false,\n        invalidLimit = false,\n        maxLength,\n        description,\n        errorMessage,\n        resize = 'none',\n        layout = 'fixed',\n        ...restProps\n    }: ControlledTextAreaProps & Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, keyof ControlledTextAreaProps>,\n    ref: ForwardedRef<HTMLTextAreaElement>\n) => {\n    const { isXS, isS } = useBreakpoint();\n    const [internalInvalid, setInternalInvalid] = useState(false);\n    const [isFocusVisible, setFocusVisible] = useState(false);\n    const previousInvalid = useRef(internalInvalid);\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\n    const resizableDivRef = useRef<HTMLDivElement>(null);\n    const resizableDivSizes = useRef<{ width?: number; height?: number } | null>(null);\n    const resizableDivWasResized = useRef(false);\n    const textAreaRefCallback = useMultipleRefs(ref, textAreaRef);\n    const descriptionId = useId();\n    const labelId = useId();\n    const [animationTimeout, setAnimationTimeout] = useState(100);\n    const currentResizeValue = isXS || isS ? 'none' : resize;\n    const isResizable = currentResizeValue !== 'none';\n\n    const forceDisabled = useDisabled();\n    const isComponentDisabled = forceDisabled || !!disabled;\n\n    useEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles.textareaAnimationTimeout);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n        const animationTimeout = parseInt(style.getPropertyValue(`--animation-duration`), 10);\n        if (Number.isInteger(animationTimeout)) {\n            setAnimationTimeout(animationTimeout);\n        }\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    const { focusHandler, blurHandler, isFocused } = useFocus<HTMLTextAreaElement>(onFocus, onBlur);\n\n    const handleClick = () => {\n        if (resizableDivWasResized.current) {\n            resizableDivWasResized.current = false;\n            return;\n        }\n        textAreaRef.current?.focus();\n    };\n\n    const handleMouseUp = () => {\n        if (\n            resizableDivRef.current?.offsetWidth !== resizableDivSizes.current?.width ||\n            resizableDivRef.current?.offsetHeight !== resizableDivSizes.current?.height\n        ) {\n            resizableDivWasResized.current = true;\n        }\n    };\n\n    const handleMouseDown = () => {\n        resizableDivSizes.current = {\n            width: resizableDivRef.current?.offsetWidth,\n            height: resizableDivRef.current?.offsetHeight,\n        };\n    };\n\n    useEffect(() => {\n        if (maxLength) {\n            const invalid = !isFocused && value.length > maxLength;\n            setInternalInvalid(invalid);\n\n            if (previousInvalid.current !== invalid) {\n                onValidate({ invalidLimit: invalid });\n            }\n            previousInvalid.current = invalid;\n        }\n    }, [onValidate, value, internalInvalid, maxLength, isFocused]);\n\n    useEffect(() => {\n        if (textAreaRef.current) {\n            setFocusVisible(isFocused && textAreaRef.current.classList.contains('focus-visible'));\n        }\n    }, [isFocused]);\n\n    const isElevatedPlaceholder = !!elevatePlaceholder && !!placeholder;\n    const showLabel = isElevatedPlaceholder || value === '';\n\n    const invalidState = invalid || invalidLimit;\n    const ariaProps = useInputAriaProps({\n        invalid: invalidState || internalInvalid,\n        hasDescription: !!description,\n        hasPlaceholder: !!placeholder,\n        descriptionId,\n        labelId,\n    });\n\n    const hasElevatedPlaceholderClass = (isFocused || value !== '') && isElevatedPlaceholder;\n\n    return (\n        <div\n            data-qa=\"textarea-wrapper\"\n            className={classnames(styles.textarea, {\n                [styles.textareaFocused]: isFocused,\n                [styles.textareaDisabled]: isComponentDisabled,\n                [styles.textareaInvalid]: !!(invalidState || internalInvalid) && !isFocused,\n                [styles.textareaLimitError]:\n                    ((invalidLimit || internalInvalid) && !isFocused) ||\n                    (maxLength === undefined || maxLength === null ? false : value.length > maxLength),\n                [styles.textareaLimited]: !!maxLength,\n                [styles.textareaLayoutFillBoth]: layout === 'fill-both',\n                [styles.textareaLayoutFillVertical]: layout === 'fill-vertical',\n                [styles.textareaLayoutFillHorizontal]: layout === 'fill-horizontal',\n                [styles.textareaLayoutHug]: layout === 'hug',\n                [styles.textareaWithoutLabel]: !isElevatedPlaceholder,\n            })}\n        >\n            <div\n                className={classnames(styles.textareaPositionContainerWrapper, {\n                    'focus-visible': isFocusVisible,\n                })}\n            >\n                <div\n                    className={classnames(styles.textareaPositionContainer, {\n                        [styles.textareaElevated]: isElevatedPlaceholder,\n                    })}\n                    onClick={handleClick}\n                    onMouseDown={isResizable ? handleMouseDown : undefined}\n                    onMouseUp={isResizable ? handleMouseUp : undefined}\n                    style={{ resize: currentResizeValue }}\n                    ref={resizableDivRef}\n                >\n                    <div\n                        className={styles.textareaWrapper}\n                        data-qa=\"textarea-native-wrapper\"\n                        data-replicated-value={layout === 'hug' ? value : ''}\n                    >\n                        <textarea\n                            {...restProps}\n                            {...ariaProps}\n                            disabled={isComponentDisabled}\n                            suppressHydrationWarning\n                            className={styles.textareaNative}\n                            value={value}\n                            onChange={onChange}\n                            onFocus={focusHandler}\n                            onBlur={blurHandler}\n                            ref={textAreaRefCallback}\n                        />\n                    </div>\n                    {showLabel && (\n                        <div className={styles.textareaRiggingContainer}>\n                            <label\n                                className={classnames(styles.textareaLabel, {\n                                    [styles.textareaLabelElevated]: hasElevatedPlaceholderClass,\n                                })}\n                                id={ariaProps['aria-labelledby']}\n                            >\n                                {placeholder}\n                            </label>\n                        </div>\n                    )}\n                    {!!maxLength && (\n                        <CSSTransition\n                            in={isFocused || value.length > maxLength}\n                            timeout={animationTimeout}\n                            classNames={{\n                                enter: styles.textareaLimitEnter,\n                                enterActive: styles.textareaLimitEnterActive,\n                                exit: styles.textareaLimitExit,\n                                exitActive: styles.textareaLimitExitActive,\n                            }}\n                            unmountOnExit\n                        >\n                            <div className={styles.textareaLimit}>\n                                <Text typography={TextTypography.Label3Regular}>\n                                    {value.length}/{maxLength}\n                                </Text>\n                            </div>\n                        </CSSTransition>\n                    )}\n                </div>\n                {currentResizeValue !== 'none' && (\n                    <div className={styles.textareaGrip}>\n                        <div className={styles.textareaGripIcon}>\n                            <GripSize24 />\n                        </div>\n                    </div>\n                )}\n            </div>\n            <FieldHint\n                description={description}\n                errorMessage={errorMessage}\n                descriptionId={ariaProps['aria-describedby']}\n                disabled={isComponentDisabled}\n                focused={isFocused}\n                invalid={invalidState}\n                data-qa=\"textarea-hint-container\"\n            />\n        </div>\n    );\n};\n\nconst TextArea = forwardRef(TextAreaComponent);\n\nTextArea.displayName = 'TextArea';\n\nexport { TextArea };\n","import { useCallback, useState, FocusEventHandler } from 'react';\n\nexport const useFocus = <T extends HTMLTextAreaElement = HTMLTextAreaElement>(\n    onFocus: FocusEventHandler<T> | undefined,\n    onBlur: FocusEventHandler<T> | undefined\n): {\n    focusHandler: FocusEventHandler<T>;\n    blurHandler: FocusEventHandler<T>;\n    isFocused: boolean;\n} => {\n    const [isFocused, setFocused] = useState(false);\n    const focusHandler = useCallback<FocusEventHandler<T>>(\n        (event) => {\n            setFocused(true);\n            onFocus?.(event);\n        },\n        [setFocused, onFocus]\n    );\n\n    const blurHandler = useCallback<FocusEventHandler<T>>(\n        (event) => {\n            setFocused(false);\n            onBlur?.(event);\n        },\n        [setFocused, onBlur]\n    );\n\n    return { focusHandler, blurHandler, isFocused };\n};\n","import { forwardRef, TextareaHTMLAttributes, useCallback, useState, type ChangeEvent } from 'react';\n\nimport { TextArea } from '@hh.ru/magritte-ui-textarea/Textarea';\nimport { UncontrolledTextAreaProps } from '@hh.ru/magritte-ui-textarea/types';\n\nexport const UncontrolledTextArea = forwardRef<\n    HTMLTextAreaElement,\n    UncontrolledTextAreaProps & Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, keyof UncontrolledTextAreaProps>\n>(({ value = '', onChange, ...restProps }, ref) => {\n    const [defaultValue, setDefaultValue] = useState(value);\n    const changeHandler = useCallback(\n        (event: ChangeEvent<HTMLTextAreaElement>) => {\n            setDefaultValue(event.target.value);\n            onChange?.(event);\n        },\n        [onChange]\n    );\n\n    return <TextArea {...restProps} value={defaultValue} onChange={changeHandler} ref={ref} />;\n});\n\nUncontrolledTextArea.displayName = 'UncontrolledTextArea';\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\nimport { TitleProps } from '@hh.ru/magritte-ui-title/types';\nimport { Text, TextStyle, TextTypography, TextDynamic } from '@hh.ru/magritte-ui-typography';\n\nimport styles from './title.less';\n\nconst TextTypographyOptions = {\n    'extra-large': TextTypography.Paragraph1Regular,\n    large: TextTypography.Paragraph1Regular,\n    medium: TextTypography.Paragraph2Regular,\n    small: TextTypography.Paragraph2Regular,\n    'extra-small': TextTypography.Paragraph2Regular,\n} as const;\n\nexport const Title: FC<TitleProps> = ({\n    style = TextStyle.Primary,\n    size = 'extra-large',\n    Element = 'h1',\n    alignment = 'left',\n    maxLines,\n    description,\n    children,\n    descriptionMaxLines,\n    descriptionStyle = TextStyle.Secondary,\n    dataQaContainer = 'title-container',\n    dataQaDescription = 'title-description',\n    dataQaTitle = 'title',\n    ...rest\n}) => {\n    const isDisabled = useDisabled();\n\n    const shouldHaveLargeMargin = size === 'extra-large' || size === 'large';\n    const containerStyles = classNames(isDisabled && styles['text-disabled'], styles[`text-alignment-${alignment}`]);\n\n    const titleStyles = classNames(\n        styles.text,\n        styles['text-overflow'],\n        styles[`text-typography-${size}`],\n        styles[`text-style-${style}`]\n    );\n\n    const descriptionStyles = classNames(\n        styles.text,\n        styles['text-overflow'],\n        styles[`space-${shouldHaveLargeMargin ? 'large' : 'small'}`]\n    );\n\n    return (\n        <div data-qa={dataQaContainer} className={containerStyles}>\n            <Element {...rest} data-qa={dataQaTitle} className={titleStyles} style={{ WebkitLineClamp: maxLines }}>\n                {children}\n            </Element>\n            {!!description && (\n                <TextDynamic>\n                    <div\n                        data-qa={dataQaDescription}\n                        className={descriptionStyles}\n                        style={{ WebkitLineClamp: descriptionMaxLines }}\n                    >\n                        <Text typography={TextTypographyOptions[size]} style={descriptionStyle}>\n                            {description}\n                        </Text>\n                    </div>\n                </TextDynamic>\n            )}\n        </div>\n    );\n};\n","import React, { type ReactElement, useRef } from 'react';\n\nimport type { DropBaseHorizontalPosition, DropBaseVerticalPosition } from '@hh.ru/magritte-internal-drop-base';\nimport { TooltipBase } from '@hh.ru/magritte-ui-tooltip/TooltipBase';\nimport { TooltipProps } from '@hh.ru/magritte-ui-tooltip/types';\n\nexport const Tooltip = <T extends DropBaseHorizontalPosition | DropBaseVerticalPosition>({\n    activator,\n    children,\n    direction,\n    alignment,\n    ...props\n}: TooltipProps<T>): ReactElement | null => {\n    const activatorRef = useRef<HTMLElement>(null);\n\n    if (!(activator && React.isValidElement(activator))) {\n        return null;\n    }\n\n    const activatorProps = { ref: activatorRef };\n    const position = { direction, alignment } as DropBaseHorizontalPosition | DropBaseVerticalPosition;\n\n    return (\n        <>\n            {React.cloneElement(activator, activatorProps)}\n            <TooltipBase {...props} {...position} activatorRef={activatorRef}>\n                {children}\n            </TooltipBase>\n        </>\n    );\n};\n","import { type ReactElement, useEffect, useId, useState } from 'react';\nimport classnames from 'classnames';\n\nimport {\n    DropBase,\n    type ArrowGuardDistance,\n    DropBaseVerticalPosition,\n    DropBaseHorizontalPosition,\n} from '@hh.ru/magritte-internal-drop-base';\nimport { InternalLayerName } from '@hh.ru/magritte-internal-layer-name';\nimport { Action, ActionMode, ActionStyle } from '@hh.ru/magritte-ui-action';\nimport { useBreakpoint } from '@hh.ru/magritte-ui-breakpoint';\nimport { Button, ButtonStyle, ButtonMode } from '@hh.ru/magritte-ui-button';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui-icon/icon';\nimport { Layer } from '@hh.ru/magritte-ui-layer';\nimport { TooltipArrow } from '@hh.ru/magritte-ui-tooltip/TooltipArrow';\nimport { TooltipBaseProps } from '@hh.ru/magritte-ui-tooltip/types';\nimport { Text, HeadersTypography, TextTypography, TextStyle } from '@hh.ru/magritte-ui-typography';\nimport { BaseText } from '@hh.ru/magritte-ui-typography/BaseText';\n\nimport styles from './tooltip.less';\n\nconst arrowGuardDistanceWithActionLayout: ArrowGuardDistance = {\n    left: {\n        top: 30,\n        bottom: 38,\n        center: 30,\n    },\n    right: {\n        top: 30,\n        bottom: 38,\n        center: 30,\n    },\n    top: {\n        left: 38,\n        center: 30,\n        right: 38,\n    },\n    bottom: {\n        left: 30,\n        center: 30,\n        right: 30,\n    },\n} as const;\n\nconst arrowGuardDistance: ArrowGuardDistance = {\n    left: {\n        top: 30,\n        bottom: 30,\n        center: 30,\n    },\n    right: {\n        top: 30,\n        bottom: 30,\n        center: 30,\n    },\n    top: {\n        left: 30,\n        center: 30,\n        right: 30,\n    },\n    bottom: {\n        left: 30,\n        center: 30,\n        right: 30,\n    },\n} as const;\n\nexport const TooltipBase = <T extends DropBaseHorizontalPosition | DropBaseVerticalPosition>({\n    direction,\n    alignment,\n    visible,\n    host,\n    activatorRef,\n    onClose,\n    maxWidth = 400,\n    title,\n    action,\n    actionClose,\n    children,\n    showClose,\n    actionProps,\n    guardDistance = 20,\n    closeByClickOutside = true,\n    'aria-label-close': ariaLabelClose,\n    role = 'tooltip',\n    ...props\n}: TooltipBaseProps<T>): ReactElement | null => {\n    const { isMobile } = useBreakpoint();\n    const id = useId();\n    const ariaLabledBy = `tooltip-aria-label-${id}`;\n    const ariaDescribedBy = `tooltip-aria-description-${id}`;\n    const [animationTimeout, setAnimationTimeout] = useState(200);\n\n    const ariaRole = role === 'tooltip' && action ? 'alertdialog' : role;\n\n    useEffect(() => {\n        const animationTimeoutElement = document.createElement('div');\n        animationTimeoutElement.classList.add(styles.tooltipAnimationTimeout);\n        document.body.appendChild(animationTimeoutElement);\n        const style = window.getComputedStyle(animationTimeoutElement);\n        const animationTimeout = parseInt(style.getPropertyValue(`--animation-duration`), 10);\n        if (Number.isInteger(animationTimeout)) {\n            setAnimationTimeout(animationTimeout);\n        }\n        document.body.removeChild(animationTimeoutElement);\n    }, []);\n\n    if (isMobile) {\n        return null;\n    }\n\n    const position = { direction, alignment } as DropBaseHorizontalPosition | DropBaseVerticalPosition;\n\n    return (\n        <DropBase\n            {...props}\n            {...position}\n            visible={visible}\n            host={host}\n            activatorRef={activatorRef}\n            arrowGuardDistance={action ? arrowGuardDistanceWithActionLayout : arrowGuardDistance}\n            closeByClickOutside={closeByClickOutside}\n            onClose={onClose}\n            autoFocusWhenOpened={ariaRole !== 'tooltip'}\n            guardDistance={guardDistance}\n            animationClassNames={{\n                enterActive: styles.tooltipEnterActive,\n                enterDone: styles.tooltipEnterDone,\n                exitActive: styles.tooltipExitActive,\n            }}\n            animationTimeout={animationTimeout}\n            role={ariaRole}\n            aria-labelledby={title && role !== 'tooltip' ? ariaLabledBy : undefined}\n            aria-describedby={role !== 'tooltip' ? ariaDescribedBy : undefined}\n        >\n            {({ direction, alignment }) => (\n                <Layer layer={InternalLayerName.Tooltip}>\n                    <div\n                        data-qa=\"tooltip\"\n                        className={classnames(\n                            `${styles.tooltip} ${styles[`tooltip-direction-${direction}`]} ${\n                                styles[`tooltip-alignment-${alignment}`]\n                            }`,\n                            {\n                                [styles.tooltipWithAction]: action,\n                                [styles.tooltipWithClose]: !action && showClose,\n                            }\n                        )}\n                        style={{\n                            maxWidth: `${maxWidth}px`,\n                        }}\n                    >\n                        {title && (\n                            <div className={styles.tooltipTitle}>\n                                <BaseText\n                                    id={ariaLabledBy}\n                                    data-qa=\"tooltip-title\"\n                                    Element=\"div\"\n                                    style={TextStyle.Primary}\n                                    typography={HeadersTypography.Title5Semibold}\n                                >\n                                    {title}\n                                </BaseText>\n                            </div>\n                        )}\n                        <Text typography={TextTypography.Paragraph2Regular} id={ariaDescribedBy}>\n                            {children}\n                        </Text>\n                        {action && (\n                            <div className={styles.tooltipActions}>\n                                <Button\n                                    data-qa=\"tooltip-action\"\n                                    {...actionProps}\n                                    style={ButtonStyle.Contrast}\n                                    mode={ButtonMode.Secondary}\n                                >\n                                    {action}\n                                </Button>\n                                {actionClose && (\n                                    <Button\n                                        data-qa=\"tooltip-close-action\"\n                                        onClick={() => onClose?.()}\n                                        style={ButtonStyle.Contrast}\n                                        mode={ButtonMode.Tertiary}\n                                    >\n                                        {actionClose}\n                                    </Button>\n                                )}\n                            </div>\n                        )}\n                        {!action && showClose && (\n                            <div className={styles.tooltipClose}>\n                                <Action\n                                    data-qa=\"tooltip-close-action\"\n                                    aria-label={ariaLabelClose}\n                                    icon={CrossOutlinedSize24}\n                                    mode={ActionMode.Secondary}\n                                    onClick={() => onClose?.()}\n                                    style={ActionStyle.Contrast}\n                                />\n                            </div>\n                        )}\n                        <TooltipArrow className={styles.tooltipArrow} />\n                    </div>\n                </Layer>\n            )}\n        </DropBase>\n    );\n};\n","import React, { type ReactElement, type ReactNode, useCallback, useRef, useState } from 'react';\n\nimport type { DropBaseHorizontalPosition, DropBaseVerticalPosition } from '@hh.ru/magritte-internal-drop-base';\nimport { TooltipBase } from '@hh.ru/magritte-ui-tooltip/TooltipBase';\nimport { type TooltipHoverProps } from '@hh.ru/magritte-ui-tooltip/types';\n\nconst useHoverHandlers = (toggle: (arg: boolean) => void) => {\n    const isTouchStart = useRef(false);\n\n    const handleTouchStart = useCallback(() => {\n        isTouchStart.current = true;\n    }, []);\n\n    const handleMouseEnter = useCallback(() => {\n        if (!isTouchStart.current) {\n            toggle(true);\n        }\n    }, [toggle]);\n\n    const handleMouseLeave = useCallback(() => {\n        isTouchStart.current = false;\n        toggle(false);\n    }, [toggle]);\n\n    return {\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        onTouchStart: handleTouchStart,\n    };\n};\n\nexport const TooltipHover = <T extends DropBaseHorizontalPosition | DropBaseVerticalPosition>({\n    activator,\n    children,\n    direction,\n    alignment,\n    ...props\n}: TooltipHoverProps<T>): ReactElement | null => {\n    const activatorRef = useRef<HTMLElement>(null);\n    const [visible, setVisible] = useState(false);\n    const hoverHandlers = useHoverHandlers(setVisible);\n\n    if (!activator) {\n        return null;\n    }\n\n    const wrappedActivator: ReactNode =\n        typeof activator === 'string' ? <span ref={activatorRef}>{activator}</span> : activator;\n    const activatorProps = { ref: activatorRef, ...hoverHandlers };\n    const position = { direction, alignment } as DropBaseHorizontalPosition | DropBaseVerticalPosition;\n\n    return (\n        <>\n            {React.isValidElement(wrappedActivator) && React.cloneElement(wrappedActivator, activatorProps)}\n            <TooltipBase {...props} {...position} visible={visible} activatorRef={activatorRef}>\n                {children}\n            </TooltipBase>\n        </>\n    );\n};\n","import { PropsWithChildren } from 'react';\n\nimport { ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport { BaseTextProps } from '@hh.ru/magritte-ui-typography/types';\n\nimport styles from './base-text.less';\n\nexport const BaseText: ComponentWithCustomElement<PropsWithChildren<BaseTextProps>, 'div'> = ({\n    style,\n    typography,\n    Element,\n    children,\n    ...props\n}) => {\n    return (\n        <Element\n            {...props}\n            className={`${styles.text} ${styles[`text_style-${style}`]} ${styles[`text_typography-${typography}`]}`}\n        >\n            {children}\n        </Element>\n    );\n};\n","import { PropsWithChildren } from 'react';\n\nimport { ComponentWithCustomElement } from '@hh.ru/magritte-types';\nimport { BaseText } from '@hh.ru/magritte-ui-typography/BaseText';\nimport { TextProps, TextStyle, TextTypography } from '@hh.ru/magritte-ui-typography/types';\n\nexport const Text: ComponentWithCustomElement<PropsWithChildren<TextProps>, 'div'> = ({\n    Element = 'div',\n    style = TextStyle.Primary,\n    typography = TextTypography.Paragraph2Regular,\n    ...restProps\n}) => {\n    return <BaseText Element={Element} style={style} typography={typography} {...restProps} />;\n};\n","import { FC, HTMLAttributes, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport { useDisabled } from '@hh.ru/magritte-common-use-disabled';\n\nimport styles from './base-text.less';\n\ninterface TextDynamicProps extends HTMLAttributes<HTMLDivElement> {\n    /** На всю ширину */\n    stretched?: boolean;\n}\n\nexport const TextDynamic: FC<PropsWithChildren<TextDynamicProps>> = ({ stretched, ...props }) => {\n    const forceDisabled = useDisabled();\n\n    return (\n        <div\n            className={classnames([styles.textDynamic, stretched && styles.textDynamicStretched], {\n                [styles.textDynamicDisabled]: forceDisabled,\n            })}\n            {...props}\n        />\n    );\n};\n","export enum TextStyle {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Tertiary = 'tertiary',\n    Accent = 'accent',\n    AccentSecondary = 'accent-secondary',\n    Positive = 'positive',\n    PositiveSecondary = 'positive-secondary',\n    Negative = 'negative',\n    NegativeSecondary = 'negative-secondary',\n    Warning = 'warning',\n    WarningSecondary = 'warning-secondary',\n    Special = 'special',\n    SpecialSecondary = 'special-secondary',\n    Contrast = 'contrast',\n    ContrastSecondary = 'contrast-secondary',\n}\n\nexport enum HeadersTypography {\n    Title1Semibold = 'title-1-semibold',\n    Title2Semibold = 'title-2-semibold',\n    Title3Semibold = 'title-3-semibold',\n    Title4Semibold = 'title-4-semibold',\n    Title5Semibold = 'title-5-semibold',\n}\n\nexport enum TextTypography {\n    Subtitle1Semibold = 'subtitle-1-semibold',\n    Subtitle2Semibold = 'subtitle-2-semibold',\n    Subtitle3Semibold = 'subtitle-3-semibold',\n    Subtitle4Semibold = 'subtitle-4-semibold',\n    Label1Regular = 'label-1-regular',\n    Label2Regular = 'label-2-regular',\n    Label3Regular = 'label-3-regular',\n    Label4Regular = 'label-4-regular',\n    Label5Regular = 'label-5-regular',\n    Paragraph1Regular = 'paragraph-1-regular',\n    Paragraph2Regular = 'paragraph-2-regular',\n    Paragraph3Regular = 'paragraph-3-regular',\n    Paragraph4Regular = 'paragraph-4-regular',\n    Custom1Semibold = 'custom-1-semibold',\n    Custom2Semibold = 'custom-2-semibold',\n    Custom3Semibold = 'custom-3-semibold',\n    Custom4Semibold = 'custom-4-semibold',\n    Custom5Semibold = 'custom-5-semibold',\n    Custom1Italic = 'custom-1-italic',\n    Custom2Italic = 'custom-2-italic',\n    Custom3Italic = 'custom-3-italic',\n    Custom4Italic = 'custom-4-italic',\n    Custom5Italic = 'custom-5-italic',\n    Custom1Medium = 'custom-1-medium',\n    Custom2Medium = 'custom-2-medium',\n    Custom3Medium = 'custom-3-medium',\n    Custom4Medium = 'custom-4-medium',\n    Custom5Medium = 'custom-5-medium',\n}\n\nexport interface TextProps {\n    Element?: 'span' | 'p' | 'div' | 'b' | 'strong';\n    style?: TextStyle;\n    typography?: TextTypography;\n}\n\ninterface HeaderProps {\n    Element?: 'span' | 'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n    style?: TextStyle;\n    typography?: HeadersTypography;\n}\n\nexport type BaseTextProps = Required<TextProps> | Required<HeaderProps>;\n","/**\n * @licence https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/*\n  Модифицированная версия https://github.com/WICG/focus-visible/releases/tag/v5.2.0\n  В оригинальной версии класс focus-visible для инпутов с типами перечисленными в переменной inputTypesAllowlist\n  добавляется вместе с установкой фокуса на элементе. В данной версии он устанавливается только при установке фокуса\n  с помощью клавиши Tab. Кроме того для этих же типов инпутов отключена установка focus-visible после\n  нажатия клавиши клавиатуры в момент нахождения фокуса на элементе. Отключена установка focus-visible если фокус\n  устанавливается из кода сразу после загрузки страницы, до действий пользователя.\n*/\n\n/**\n * Applies the :focus-visible polyfill at the given scope.\n * A scope in this case is either the top-level Document or a Shadow Root.\n *\n * @param {(Document|ShadowRoot)} scope\n * @see https://github.com/WICG/focus-visible\n */\nfunction applyFocusVisiblePolyfill(scope: (Document | ShadowRoot) & { focusVisiblePolyfillApplied?: boolean }) {\n    if (scope.focusVisiblePolyfillApplied === true) {\n        return;\n    }\n    scope.focusVisiblePolyfillApplied = true;\n\n    let hadKeyboardEvent = false;\n    let hadFocusVisibleRecently = false;\n    let hadFocusVisibleRecentlyTimeout: number | undefined;\n\n    const inputTypesAllowlist: Record<HTMLInputElement['type'], boolean> = {\n        text: true,\n        search: true,\n        url: true,\n        tel: true,\n        email: true,\n        password: true,\n        number: true,\n        date: true,\n        month: true,\n        week: true,\n        time: true,\n        datetime: true,\n        'datetime-local': true,\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el: Element | null | Document) {\n        return (\n            el &&\n            el !== document &&\n            el.nodeName !== 'HTML' &&\n            el.nodeName !== 'BODY' &&\n            'classList' in el &&\n            'contains' in el.classList\n        );\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el: Element | null) {\n        if (el) {\n            if (el.classList.contains('focus-visible')) {\n                return;\n            }\n            el.classList.add('focus-visible');\n            el.setAttribute('data-focus-visible-added', '');\n        }\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el: Element) {\n        if (!el.hasAttribute('data-focus-visible-added')) {\n            return;\n        }\n        el.classList.remove('focus-visible');\n        el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e: KeyboardEvent) {\n        if (e.metaKey || e.altKey || e.ctrlKey) {\n            return;\n        }\n\n        const element = scope.activeElement as HTMLElement | null;\n        if (\n            element &&\n            isValidFocusTarget(element) &&\n            !(element.tagName === 'INPUT' && inputTypesAllowlist[(element as HTMLInputElement).type])\n        ) {\n            addFocusVisibleClass(element);\n        }\n\n        hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown() {\n        hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {FocusEvent} e\n     */\n    function onFocus(e: Event) {\n        // Prevent IE from focusing the document or HTML element.\n        if (!isValidFocusTarget(e.target as Element)) {\n            return;\n        }\n\n        if (hadKeyboardEvent) {\n            addFocusVisibleClass(e.target as Element);\n        }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e: Event) {\n        const target = e.target as Element;\n        if (!isValidFocusTarget(target)) {\n            return;\n        }\n\n        if (target.classList.contains('focus-visible') || target.hasAttribute('data-focus-visible-added')) {\n            // To detect a tab/window switch, we look for a blur event followed\n            // rapidly by a visibility change.\n            // If we don't see a visibility change within 100ms, it's probably a\n            // regular focus change.\n            hadFocusVisibleRecently = true;\n            window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n            hadFocusVisibleRecentlyTimeout = window.setTimeout(() => (hadFocusVisibleRecently = false), 100);\n            removeFocusVisibleClass(target);\n        }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange() {\n        if (document.visibilityState === 'hidden') {\n            // If the tab becomes active again, the browser will handle calling focus\n            // on the element (Safari actually calls it twice).\n            // If this tab change caused a blur on an element with focus-visible,\n            // re-apply the class when the user switches back to the tab.\n            if (hadFocusVisibleRecently) {\n                hadKeyboardEvent = true;\n            }\n            addInitialPointerMoveListeners();\n        }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n        document.addEventListener('mousemove', onInitialPointerMove);\n        document.addEventListener('mousedown', onInitialPointerMove);\n        document.addEventListener('mouseup', onInitialPointerMove);\n        document.addEventListener('pointermove', onInitialPointerMove);\n        document.addEventListener('pointerdown', onInitialPointerMove);\n        document.addEventListener('pointerup', onInitialPointerMove);\n        document.addEventListener('touchmove', onInitialPointerMove);\n        document.addEventListener('touchstart', onInitialPointerMove);\n        document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n        document.removeEventListener('mousemove', onInitialPointerMove);\n        document.removeEventListener('mousedown', onInitialPointerMove);\n        document.removeEventListener('mouseup', onInitialPointerMove);\n        document.removeEventListener('pointermove', onInitialPointerMove);\n        document.removeEventListener('pointerdown', onInitialPointerMove);\n        document.removeEventListener('pointerup', onInitialPointerMove);\n        document.removeEventListener('touchmove', onInitialPointerMove);\n        document.removeEventListener('touchstart', onInitialPointerMove);\n        document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e: Event) {\n        const target = e.target as Element;\n        // Work around a Safari quirk that fires a mousemove on <html> whenever the\n        // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n        if (target.nodeName && target.nodeName.toLowerCase() === 'html') {\n            return;\n        }\n\n        hadKeyboardEvent = false;\n        removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (scope as ShadowRoot).host) {\n        // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n        // have a root element to add a class to. So, we add this attribute to the\n        // host element instead:\n        (scope as ShadowRoot).host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n        document.documentElement.classList.add('js-focus-visible');\n        document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n}\n\n(function () {\n    // It is important to wrap all references to global window and document in\n    // these checks to support server-side rendering use cases\n    // @see https://github.com/WICG/focus-visible/issues/199\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n        // Make the polyfill helper globally available. This can be used as a signal\n        // to interested libraries that wish to coordinate with the polyfill for e.g.,\n        // applying the polyfill to a shadow root:\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n        // Notify interested libraries of the polyfill's presence, in case the\n        // polyfill was loaded lazily:\n        let event;\n\n        try {\n            event = new CustomEvent('focus-visible-polyfill-ready');\n        } catch (error) {\n            // IE11 does not support using CustomEvent as a constructor directly:\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n        }\n\n        window.dispatchEvent(event);\n    }\n})();\n\nif (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n}\n\nexport {};\n","import { useRef } from 'react';\n\nconst STORAGE_KEY = '__MAGRITTE_DOM_STORAGE__';\n\nexport const storeValueInDom = (key: string, value: unknown): void => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    storage[key] = value;\n    (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] = storage;\n};\n\nexport const getValueFromDom = <T>(key: string): T | undefined => {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    return storage[key] as T;\n};\n\nexport const removeValueFromDom = (key: string): void => {\n    if (typeof window === 'undefined') {\n        return;\n    }\n\n    const storage = (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] || {};\n    delete storage[key];\n    (window as unknown as Record<typeof STORAGE_KEY, Record<string, unknown>>)[STORAGE_KEY] = storage;\n};\n\nconst UNIQUIE_ID_STORAGE = '_MAGRITTE_UNIQUE_ID_';\nstoreValueInDom(UNIQUIE_ID_STORAGE, 0);\n\nexport const useDomStoredUniqueId = (): string => {\n    const currentId = useRef<number>(-1);\n    if (currentId.current === -1) {\n        const id = getValueFromDom<number>(UNIQUIE_ID_STORAGE);\n        if (id === undefined) {\n            currentId.current = -1;\n        } else {\n            currentId.current = id + 1;\n        }\n        storeValueInDom(UNIQUIE_ID_STORAGE, currentId.current);\n    }\n    return currentId.current.toString();\n};\n","import { storeValueInDom, getValueFromDom } from '@hh.ru/magritte-common-dom-storage';\n\nimport styles from './modal-helper.less';\n\nlet scrollbarWidth: number | null = null;\n\nconst hasScrollbar = () => document.body.offsetWidth > document.body.clientWidth;\n\nconst getScrollbarWidth = () => {\n    if (scrollbarWidth !== null) {\n        return hasScrollbar() ? scrollbarWidth : 0;\n    }\n\n    const scrollContainer = document.createElement('div');\n    scrollContainer.style.visibility = 'hidden';\n    scrollContainer.style.overflow = 'scroll';\n    document.body.appendChild(scrollContainer);\n\n    const scrollContent = document.createElement('div');\n    scrollContainer.appendChild(scrollContent);\n    scrollbarWidth = scrollContainer.offsetWidth - scrollContent.offsetWidth;\n    document.body.removeChild(scrollContainer);\n\n    return hasScrollbar() ? scrollbarWidth : 0;\n};\n\nconst toNumber = (value: string) => {\n    const num = parseInt(value, 10);\n    return Number.isInteger(num) ? num : 0;\n};\n\nconst STORAGE_NAME = '_MAGRITTE_MODAL_HELPER_';\n\ntype ScrollHelperState = {\n    enableFunc: VoidFunction;\n    modalsCount: number;\n};\n\ntype VoidFunctionFactory = () => VoidFunction;\n\nconst getState = (): ScrollHelperState => {\n    const state = getValueFromDom<ScrollHelperState>(STORAGE_NAME);\n    if (state === undefined) {\n        return {\n            enableFunc: () => undefined,\n            modalsCount: 0,\n        };\n    }\n    return state;\n};\n\nconst storeState = (state: ScrollHelperState): void => {\n    storeValueInDom(STORAGE_NAME, state);\n};\n\nconst addToStateDecorator = (enableFuncFactory: VoidFunctionFactory) => {\n    const state = getState();\n\n    state.modalsCount += 1;\n    storeState(state);\n\n    if (state.modalsCount > 1) {\n        return state.enableFunc;\n    }\n\n    state.enableFunc = enableFuncFactory();\n    storeState(state);\n    return state.enableFunc;\n};\n\nconst removeFromStateDecorator = (enableFuncCallback: VoidFunction) => {\n    const state = getState();\n    state.modalsCount = Math.max(state.modalsCount - 1, 0);\n    storeState(state);\n\n    if (state.modalsCount > 0) {\n        return;\n    }\n\n    enableFuncCallback();\n};\n\nexport const disableOverscroll: VoidFunctionFactory = () => {\n    return addToStateDecorator(() => {\n        if (visualViewport === null) {\n            return () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n        }\n\n        document.body.classList.add(styles.noOverscroll);\n        document.documentElement.classList.add(styles.noOverscroll);\n\n        return () => {\n            removeFromStateDecorator(() => {\n                document.body.classList.remove(styles.noOverscroll);\n                document.documentElement.classList.remove(styles.noOverscroll);\n            });\n        };\n    });\n};\n\nexport const disableScroll: VoidFunctionFactory = () => {\n    return addToStateDecorator(() => {\n        if (visualViewport === null) {\n            return () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n        }\n\n        const scrollPosition = visualViewport.pageTop;\n\n        const marginTopBefore = document.body.style.marginTop;\n        document.body.style.marginTop = `${Math.round(toNumber(marginTopBefore) - scrollPosition)}px`;\n\n        const paddingRightBefore = document.body.style.paddingRight;\n        document.body.style.paddingRight = `${Math.round(toNumber(paddingRightBefore) + getScrollbarWidth())}px`;\n\n        document.body.classList.add(styles.noScroll);\n        document.documentElement.classList.add(styles.noScroll);\n\n        return () => {\n            removeFromStateDecorator(() => {\n                document.body.style.marginTop = marginTopBefore;\n                document.body.style.paddingRight = paddingRightBefore;\n\n                document.body.classList.remove(styles.noScroll);\n                document.documentElement.classList.remove(styles.noScroll);\n\n                if (scrollPosition !== null) {\n                    window.scrollTo(0, Math.round(scrollPosition));\n                }\n            });\n        };\n    });\n};\n","type TextInputElement = HTMLInputElement | HTMLTextAreaElement;\ntype SelectionDirection = 'forward' | 'backward' | 'none';\n\nconst getSelection = (element: TextInputElement) => ({\n    start: element.selectionStart,\n    end: element.selectionEnd,\n    direction: element.selectionDirection || 'none',\n});\n\nconst setSelection = (element: TextInputElement, start: number, end: number, direction: SelectionDirection) => {\n    element.setSelectionRange(start, end, direction);\n};\n\n/**\n * Утилита для работы с выделением текста.\n */\nexport const Selection = {\n    /**\n     * Возвращает информацию о выделенном тексте в переданом элементе.\n     * @param {Element} element textarea или input\n     * @returns {Object} Объект со свойствами start, end, direction\n     */\n    get(element: TextInputElement): ReturnType<typeof getSelection> {\n        return getSelection(element);\n    },\n\n    /**\n     * Возвращает положение каретки в элементе.\n     * @throws {TextSelectionError} Выкинет ошибку, если браузер не поддерживают необходимую функциональность.\n     * @param {Element} element textarea или input\n     * @returns {Number} Позиция каретки\n     */\n    getCaretPosition(element: TextInputElement): number | null {\n        const selection = this.get(element);\n\n        if (selection.direction === 'forward') {\n            return selection.end;\n        }\n\n        return selection.start;\n    },\n\n    /**\n     * Устанавливает селект на элементе.\n     * @param {Element} element     textarea или input\n     * @param {Number}  start       Позиция начала текста для выделения\n     * @param {Number}  [end]       Позиция конца текста для выделения\n     * @param {String}  [direction] Направление выделения текста\n     */\n    set(element: TextInputElement, start: number, end?: number, direction?: SelectionDirection): void {\n        element.focus();\n        setSelection(\n            element,\n            start,\n            end || start,\n            !direction || !['forward', 'backward'].includes(direction) ? 'none' : direction\n        );\n    },\n\n    /**\n     * Устанавливает позицию каретки на элементе.\n     * @param {Element} element  textarea или input элемент\n     * @param {Number}  position Позиция каретки\n     */\n    setCaretPosition(element: HTMLInputElement | HTMLTextAreaElement, position: number): void {\n        this.set(element, position, position);\n    },\n};\n","export enum InternalLayerName {\n    Drop = 'drop',\n    Tooltip = 'tooltip',\n    BottomSheet = 'bottom-sheet',\n    Modal = 'modal',\n    Snackbar = 'snackbar',\n}\n\nexport const InternalLayerValue = {\n    [InternalLayerName.Drop]: 1000,\n    [InternalLayerName.Tooltip]: 1100,\n    [InternalLayerName.BottomSheet]: 1200,\n    [InternalLayerName.Modal]: 1200,\n    [InternalLayerName.Snackbar]: 300000,\n};\n","import { PropsWithChildren, FC } from 'react';\n\ninterface ThemeProviderProps {\n    /**\n     * Функция, которая возвращает токены и класс темы.\n     * Должна создаваться с помощью [@hh.ru/magritte-design-tokens-utils](https://github.com/hhru/magritte/tree/master/packages/design-tokens-utils#readme)\n     * @param tokensVersion Версия пакета magritte-design-tokens для которой создается тема\n     * @returns Объект с токенами и классом темы\n     **/\n    themeProducer: (tokensVersion: string) => { tokensString: string; themeClassName: string };\n}\n\nexport const ThemeProvider: FC<PropsWithChildren<ThemeProviderProps>> = ({ children, themeProducer }) => {\n    // __TOKENS_VERSION__ is replaced by the build process\n    const { tokensString, themeClassName } = themeProducer('__TOKENS_VERSION__');\n\n    return (\n        <>\n            <style>{tokensString}</style>\n            <div className={themeClassName}>{children}</div>\n        </>\n    );\n};\n"],"names":["requestAnimation","func","that","frame","_args","scheduled","args","this","requestAnimationFrame","time","apply","cancel","cancelAnimationFrame","throttle","waitMS","timeout","throttled","setTimeout","clearTimeout","debounce","callback","timeoutId","debounced","useDebounce","useMemo","Escape","key","code","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","keyboardMatch","event","keyboardMatches","keysToMatch","i","length","useEscapeToClose","ref","handleKeyDown","elementContainsFocus","document","activeElement","current","contains","useEffect","addEventListener","removeEventListener","useResize","handler","handlerRef","useRef","resizeHandler","window","DisabledContext","createContext","useDisabled","useContext","useMultipleRefs","refs","passedRefs","refMultiplexer","useCallback","forEach","r","SwipeAxis","handleSwipeEvent","eventHandler","defaultCallback","_default","preventDefault","useSwipe","axis","thresholdRef","onSwipeStart","onSwipeMove","onSwipeEnd","onSwipeCancel","stateRef","handleSwipeStart","touchEvent","changedTouches","pageX","x","pageY","y","swipeEvent","distance","velocity","distanceX","distanceY","actualAxis","startPos","handleSwipeMove","prevState","_distanceX","_distanceY","Math","abs","_distance","_velocity","handleSwipeEnd","_","lastCoordinate","delta","projection","projectionDistance","value","prevValue","threshold","startPosition","Number","isNaN","deltaMin","deltaMax","min","max","checkSwipeThreshold","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","focusableSelector","handleArrowKeyNavigation","container","side","keyboardKeys.ArrowUp","keyboardKeys.ArrowRight","keyboardKeys.ArrowDown","keyboardKeys.ArrowLeft","getSide","matches","focusableElements","querySelectorAll","nearestElement","targetElement","searchElements","targetRect","getBoundingClientRect","targetCenterX","round","left","width","targetCenterY","top","height","minDistance","Infinity","element","elementRect","elementCenterX","elementCenterY","bottom","right","hypot","findNearestElement","focus","visible","children","arrowGuardDistance","activatorRef","host","alignment","direction","preferredViewport","onClose","autoFocusWhenOpened","closeByClickOutside","animationTimeout","animationClassNames","guardDistance","role","occupyAllAvailableViewportHeight","forcePosition","widthEqualToActivator","arrowNavigation","props","dropNodeRef","dropNodeRefMulti","dropScrollableContainerRef","isVisibleDropDown","setRenderPortal","metrics","position","dropElementRef","enabled","listener","keydownListener","closeByClickOutsideEnabled","refCallback","handleClick","target","useCloseByClickOutside","setLockClickOutside","_jsx","jsx","in","onEntered","classNames","unmountOnExit","tabIndex","className","style","DropBase","getMetrics","getOffsetElement","hostElement","elementMetrics","hostMetrics","offsetTop","offsetLeft","point","offsetPoint","contentSize","activatorSize","leftPositionForDrop","topPositionForViewport","preferredViewportMetrics","topPositionForDrop","dropMetrics","_height","getEdgeOppositeDirection","activatorPosition","viewportShift","activatorOffset","shift","isNegativeArrowShift","shiftArrow","positionForDrop","getEageCoincidingWithDirection","dropSize","isNegativePosition","positionForViewport","activatorMetrics","viewportMetrics","result","_baseAlign","leftPositionForViewport","calculateRectForHorizontalPosition","allowedAlignmentForHorizontalDirection","allowedAlignmentForVerticalDirectionWithoutCenter","allowedAlignmentForHorizontalDirectionWithoutCenter","verticalDirections","START_OFFSET","forceFitIntoViewport","arrowGuardDistanceByPosition","minimalRectForActivatorWithDrop","visualViewport","isFitIntoViewport","pageLeft","findDynamicPosition","directions","alignments","align","checkScroll","minimalDropHeightRef","calculateDirection","setCalculateDirection","useState","calculateAlignment","_occupyAllAvailableViewportHeight","setResult","hasScrollRef","activatorElement","dropElement","body","useAvailableViewportHeightForDrop","dropMetricsRaw","viewport","pageTop","viewportHeightForPositiveTop","viewportWidthForPositiveLeft","viewports","viewportWidthForForNegativeLeft","horizontalDirections","allowedAlignmentForVerticalDirection","setCalculateAlignment","setPosition","setOccupyAllAvailableViewportHeight","useLayoutEffect","updateRenderParams","updatePosition","resizeObserver","observer","MutationObserver","attributes","childList","subtree","disconnect","FieldHint","description","errorMessage","focused","invalid","disabled","descriptionId","dataQa","descriptionVisible","errorMessageVisible","hintRef","descriptionRef","errorMessageRef","styles","prevHintState","firstProcessing","shrinkHint","setCurrentHeight","isEmerging","isReplacing","isDissapearing","emerged","dissapeared","classList","remove","container_animated","add","currentlyAnimated","once","fadeInHint","classnames","typography","id","scheduleForAnimationFrame","ensureRange","setTranslation","positionContainerRef","positionContainerWidth","containerWidth","state","applyScrollButtonsUpdate","wrapperRef","positionContainerTranslation","isFadeLeft","isFadeRight","scrollToItemInProgress","disableButtons","item","offset","buttonsCorrection","BUTTON_WIDTH","translation","isPositionChanged","setAnimated","scrollAnimationInProgress","recalculateItemPositions","containerRef","items","itemRef","scrollTo","useScrollContainer","correction","leftCorrection","rightCorrection","scrollToOnMount","recalcRequired","scrollStateRef","recalculateItemPositionsDebounced","scrollSide","transitionEndHandler","positionContainer","observe","resizeObserverCleanup","registerItem","removeItem","scrollToItem","initWheelHandler","wheelHandler","deltaX","passive","initTouchHandlers","dragPrevTime","dragPrevX","dragPrevY","dragSpeed","dragDelta","startedOnMe","runTouchScrollInertiaAnimation","animationStartTime","speed","timeDelta","isSignChanged","touchMoveHandler","clientX","touches","clientY","firstMove","now","touchStartHandler","Date","touchEndHandler","noopFunc","useScrollContext","BREAKPOINTS_LIST","Breakpoint","NO_BUTTONS_START_FROM_BREAKPOINT","transform","correctionXS","correctionS","correctionM","correctionL","correctionXL","correctionXXL","correctionLeftXS","correctionLeftS","correctionLeftM","correctionLeftL","correctionLeftXL","correctionLeftXXL","correctionRightXS","correctionRightS","correctionRightM","correctionRightL","correctionRightXL","correctionRightXXL","rest","breakpoint","_disableButtons","spacingCorrectionStyles","paddingLeft","paddingRight","leftCorrectionKey","breakpointName","rightCorrectionKey","undefined","marginLeft","correctionValue","marginRight","wheelHandlerCleanup","touchHandlersCleanup","mode","icon","showBackground","onClick","expanded","openedHeight","maxHeight","Accordion","title","padding","stretched","controlled","borderRadius","isExpanded","showBorder","actionCard","setIsLocalExtended","alignmentBaseline","interceptClick","node","click","coordinates","pow","applyInterceptor","Children","BottomSheetHeight","BottomSheetShowDivider","genLengthStyles","marginTop","marginBottom","margin","NavigationBarSize","CSS_VAR_OVERLAY_OPACITY","CSS_VAR_VIRTUAL_KEYBOARD_TOP_OFFSET","CSS_VAR_VIRTUAL_KEYBOARD_BOTTOM_OFFSET","INITIAL_VIEWPORT_HEIGHT","NAVIGATION_BAR_SIZE_OVERRIDE","size","SWIPE_THRESHOLD_REF","forceRepaint","toNumber","parseInt","forwardRef","allowScrollWhileFocused","footer","header","interceptClickHandlers","keyboardOverlaysContent","onAppear","onBeforeExit","showDivider","showOverlay","contentRef","cssVariablesContainerRef","fixedGrabberRef","footerRef","headerRef","heightTransitionElementRef","scrollContainerRef","stickyGrabberRef","scrollContainerRefMulti","documentHeight","fillHeight","grabberSpacing","prevPropsRef","grabber","hasFocus","isSwipeEnabled","isSwipeInProgress","swipeOffset","resizeRAFHandle","virtualKeyboardHeight","heightDiff","isDividerVisible","setOnCloseContractCheck","setCSSVariable","layoutMetricsRef","disableOverscroll","disableScroll","animationTimeoutElement","appendChild","enter","getPropertyValue","exit","setAnimationTimeout","appear","stickyGrabberDOMRect","grabberTop","hasScroll","setDividerVisible","resetScrollFlags","meta","querySelector","attributesStr","Object","map","keyValuePair","join","setAttribute","layoutViewportDiff","headerDOMRect","headerOutOfViewportHeight","visualViewportDiff","focusedElement","initialViewportHeight","resizeRAFStart","recalcKeyboardOffsets","waitForResize","runTranslateYAnimation","contentDOMREct","translateY","resetTranslateY","recalcScrollFlags","selection","getSelection","handleSwipeCancel","handleClose","swipeHandlers","_heightDiff","setHeightDiff","onCloseContractCheck","console","mountOnEnter","onEnter","onEntering","onExit","onExiting","onExited","appearTransition","layer","onScroll","heightTransition","_jsxs","appearAnimation","disappearAnimation","onFocus","jsxs","dividerState","minHeightForContent","dividerRef","scrollableContainer","offsetHeight","PureChildren","maxWidth","space","isMobile","enterActive","exitActive","Drop","ActionList","memo","dropProps","bottomSheetProps","commonProps","isBottomSheetMode","useBreakpoint","BottomSheet","Content","currentTarget","closest","displayName","Action","disablePadding","IconComponent","forceDisabled","type","ActionMode","ActionStyle","styleClose","content","showClose","buttonBase","buttonAdditional","cardProps","borderRadiusBottomLeft","borderRadiusBottomRight","_Fragment","s","BreadcrumbsDivider","Element","index","refreshItem","breadcrumbsDynamicLinkRef","reducer","action","BreadcrumbsActionType","visibleItems","slice","BREAK_INDEX","collapseItems","AddVisibleItem","AddCollapseItem","firstItemInVisibleItems","payload","updateComplete","UpdateData","oldWidthData","concat","accumulator","currentValue","data","indexOfLastItem","TEXT_TYPOGRAPHY","TextTypography","hiddenOnMobile","isHidden","showCollapseItems","showCollapseItemsToggle","setShowCollapseItems","breadcrumbsExtendedItems","React","ReactElement","contentState","emptySpaceRef","visibleContentWidth","staticContentWidth","expandContentWidth","dispatch","containerNode","emptySpaceNode","ResizeObserver","renderCollapseItems","breadcrumbsExtendedItem","usefulProps","hoverStyle","extendedItems","inline","Cookies","set","name","cookie","expire","setTime","getTime","toUTCString","get","getAll","reverse","find","split","parts","decodeURIComponent","e","DEFAULT_BREAKPOINT","renderRestriction","storeActualBreakpointValueInCookie","storedBreakpointValue","force","breakpointCheckerNodeRef","useOnlyStoredValue","contextValue","breakpointCheckerNode","setBreakpoint","sideEffect","isXS","isS","isM","isL","isXL","isXXL","S","isGtXS","isGtS","XXL","isGtM","isGtL","buttonSizeToCounterSize","ButtonSize","CounterSize","ButtonRenderer","ariaLabel","counter","hideLabel","loading","subcaption","buttonProps","ariaProps","additionalAttributes","button_stretched","button_subcaption","withSubcaption","button_textless","button_loading","label","focusable","ButtonMode","ButtonStyle","ButtonType","INTERACTIVE_COMPONENTS_SELECTORS","showShadow","showShadowOnHover","paddingTop","paddingBottom","borderRadiusTopLeft","borderRadiusTopRight","restProps","isToneCard","hasFocusRef","nativeEvent","keyboardKeys","HTMLElement","paddingProps","reduce","acc","genPaddingProps","Left","Right","Top","Bottom","additionalProps","onBlur","onKeyDown","TopLeft","TopRight","BottomLeft","BottomRight","entries","cardStretched","cardTone","cardAction","cardShowShadow","cardShadowOnHover","cardWithBorder","Card","CardStyle","CellItem","defaultProps","component","iconDynamicProps","isCheckableComponent","Cell","vertPadding","horPadding","roundedBorder","avatar","isComponentDisabled","isCheckable","ElementType","isActive","active","rounded","TextDefaultStyleMap","subtitle","showLoader","maxLines","Label2Regular","textStyle","WebkitLineClamp","toneHover","flexible","inputProps","inputRef","checked","CheckableCardElement","onClickCapture","onKeyDownCapture","onKeyPressCapture","onKeyUpCapture","input","labelRef","highlighted","focusVisble","indeterminate","onChange","readOnly","dataQaContainer","dataQaCheckbox","checkboxRef","dataQaRadio","ChipContent","addon","onDelete","ChipStyle","STYLE_TO_CSS","dataQaWrapper","disable","CounterStyle","CounterMode","showBottomSheet","info","setShowBottomSheet","propsForInfo","onMouseEnter","setShowTooltip","onMouseLeave","activator","GridColumn","xs","m","l","xl","xxl","flexibleContent","extendsS","extendsM","extendsL","extendsXL","extendsXXL","GridHighlighter","show","isVisibleLeftSidebar","setVisibleLeftSidebar","isVisibleRightSidebar","isVisibleLeftSidebarOnXL","setVisibleLeftSidebarOnXL","isVisibleRightSidebarOnXL","rightSidebar","leftSidebar","hideLeftOnXL","hideRightOnXL","leftSidebarDataQA","rightSidebarDataQA","contentDataQA","hideLeft","hasLeftSidebar","hideRight","hoc","Icon","highlightedValue","disabledValue","initial","propsToPass","lastProps","IconWrapper","placeholder","postfix","elevatePlaceholder","formatter","buttonIcon","clearable","clearableOnFocus","onButtonClick","buttonDataQa","inputIcon","fixedPlaceholder","wrapperCurrentRef","inputRefCallback","wrapperRefCallback","useId","labelId","newValue","caretPosition","Selection","clearClickHandler","changeHandler","focusHandler","blurHandler","isFocused","setFocused","placeholderCanElevated","InputSize","formattedValue","buttonQaLabel","hasDescription","hasPlaceholder","focusedOrFilled","placeholderIsElevated","showPostfix","showFixedPlaceholder","showLabel","showMask","InputIconComponent","isActionVisible","setActionVisible","suppressHydrationWarning","onInput","onMouseDown","BaseInput","InputComponent","Input","MINUS_VARIANTS","defaults","groupSeparator","decimalMark","groupSize","decimalLength","allowNegative","format","text","passedParams","params","integerGroupsSplit","RegExp","splittedText","trimmedText","trim","minus","includes","decimalMarkRegExpString","delimiter","String","fromCharCode","mark","charCodeAt","replace","clean","calculateDelimiters","filteredParams","lastChar","outputValue","prevLastChar","formattedPrevValue","delimitersDelta","inputMode","PasswordInput","setTypePassword","clickHandler","typePassword","useInputAriaProps","initialValue","setValue","LayerName","LayerValue","Alpha","Epsilon","Iota","Omicron","Tau","LAYER_VALUES","InternalLayerValue","LayerContext","Layer","currentIndex","Provider","cloneElement","zIndex","VerticallyCenteredIcon","Link","iconLeft","iconRight","href","enableVisited","otherProps","textRef","IconLeftComponent","IconRightComponent","withIcon","TYPOGRAPHY_WITH_ICON","withBigIcon","stopPropagation","renderTextAndRightIcon","link_disabled","linkBigIcon","linkBlock","LinkStyle","iconsBySize","LoaderOutlinedSize16","LoaderOutlinedSize24","LoaderOutlinedSize64","Loader","loader","ModalContent","showCloseButton","contentContainerRef","scrollHeight","leftButtons","rightButtons","headerImage","headerHeight","titleAlignment","titleElement","titleMaxLines","titleSize","titleDescription","titleDescriptionMaxLines","backgroundImage","minHeight","descriptionMaxLines","descriptionStyle","STORAGE_KEY","storeValueInDom","storage","getValueFromDom","UNIQUIE_ID_STORAGE","STORAGE_NAME","prevVisiblility","positions","subscribers","count","currentPosition","storeState","subscribe","unsubscribe","getState","modalRef","currentId","toString","updateVisiblility","noop","INVISIBLE_FOR_BREAKPOINTS","isServerEnv","isServerENV","setServerENV","enableScrollRef","overlayRef","multiplexedRefs","useModalOrder","isOverlayHidden","modalHeaderProps","nodeRef","backgroundColor","NavigationBarItem","NavigationBarItems","renderFunc","toggleEllipsis","ProgressBarStyle","segments","progress","prevProgress","startSelection","delay","transitionDelay","SingleProgressBar","CONTAINER_KEY","WRAPPER_KEY","OPTIONS_KEY","options","ellipsisRenderFunc","overridenSize","context","setActualSize","wrapperHeightRef","optionsRef","actualSize","standardHeight","handleScroll","visibleWrapperHeight","scrollTopRef","ESCAPE_REGEX","yoRegex","spaceRegex","string","prepareForRegExp","escapeRegexp","RUSSIAN","ENGLISH","createHashMap","names","values","hashMap","LANG_MAP","russian","english","convert","substring","alphabet","createMatcher","memoize","filterQuery","filterQueryTrimmed","regexpStrings","query","toLowerCase","re","searchString","test","multiple","searchable","optionsCount","selectedOptions","searchValue","setSearchValue","dropRef","searchRef","selectDidMount","setIsFocused","lastOptionNode","optionListNode","showValue","showPlaceholder","isLargeSize","SelectActivator","SelectOptionBase","cellProps","SelectOption","render","isFirstActiveElement","isLastActiveElement","renderProps","lockFocusVisibleAfterClickRef","Checkbox","Radio","firstActiveElementProp","setFocusVisible","focusVisible","onActivatorClick","setVisible","renderItemForDesktop","clearSelectedValues","setCommitChanges","showClearButton","trls","dropHost","activatorProps","rawOptions","firstOption","lastOption","searchInput","getChecked","option","needToPut","createElement","SelectForMobileDevice","renderItem","renderActivator","bottomSheetHeight","showCloseButtonInNavigationBar","setLastValues","sizeProp","clearButton","Button","performance","handleChange","SET","REMOVE","SINGLE_CHOICE","CLEAR","visibleOptionList","previousCommitChanges","setOptionList","optionListSearchText","valueSelectArray","getValue","setSelectedOptions","valuesArr","useReducer","isMultiple","setVisibleOptionList","search","filter","match","onChangeSelect","uid","runner","cachedTimeout","cachedRunner","cachedTickCallback","remainingTime","end","cleanupFunc","nextTickFunc","SVG_CIRCLE_LENGTH","pause","svgRef","useTimer","_callable","remaining","circleRef","viewBox","version","xmlns","cx","cy","fill","strokeDasharray","strokeLinecap","strokeWidth","CLASS_NAMES","appearActive","appearDone","exitDone","DEFAULT_AUTOHIDE_TIME_MS","actionLabel","autohideTime","containerId","animateOut","onAction","showTimer","transition","ariaLabelClose","actionFunc","isFocusedElement","setFocusedElement","isHover","setHover","autohideFunc","closeFunc","previousMetrics","ariaAttributes","hasAction","SnackbarTransitionName","resizebleContentRef","isVerticalLayout","increaseScreenSize","setLayout","calculateLayout","layout","SnackbarLayout","SnackbarContextProvider","animationTimeoutRef","Hide","Replace","containerRefs","_props","setState","createPortal","setContainerRef","getComputedStyle","animateIn","HSpacing","HSpacingContainer","spacingSizes","getSizesMap","VSpacing","VSpacingContainer","sizes","default","prevGteSize","charAt","currentSize","selected","onSelect","hidden","elementRef","elementRefCallback","mouseEventRef","setMouseEventRef","resetMouseEventRef","tabSelected","onMouseUp","activeItemId","indicatorRef","tabsContainerRef","selectedItemId","setSelectedItemId","focusedItemId","animateIndicatorRef","isControlled","itemRefs","itemRefCallbacks","handleSelect","setFocusedItemId","isValidTabElement","child","itemId","isSelected","itemIndex","tabs","findIndex","getFirstTab","getLastTab","handleKeydown","defaultFocusedItem","getNextTab","handleFocusOut","defaultContainerCorrections","Tabs","containerCorrections","tabsProps","setTabsContainer","tabsContainer","SIZE_TO_CSS","TagSize","TagStyle","TextAreaComponent","onValidate","invalidLimit","maxLength","resize","internalInvalid","setInternalInvalid","previousInvalid","textAreaRef","resizableDivRef","resizableDivSizes","resizableDivWasResized","textAreaRefCallback","currentResizeValue","isResizable","isElevatedPlaceholder","invalidState","textareaLimited","textareaLayoutFillBoth","offsetWidth","hasElevatedPlaceholderClass","TextArea","UncontrolledTextArea","setDefaultValue","TextTypographyOptions","large","medium","small","TextStyle","dataQaDescription","dataQaTitle","isDisabled","shouldHaveLargeMargin","containerStyles","titleStyles","center","actionClose","actionProps","ariaLabledBy","ariaDescribedBy","enterDone","tooltipEnterDone","tooltipWithAction","hoverHandlers","toggle","isTouchStart","wrappedActivator","textDynamic","HeadersTypography","applyFocusVisiblePolyfill","scope","focusVisiblePolyfillApplied","hadFocusVisibleRecentlyTimeout","hadKeyboardEvent","hadFocusVisibleRecently","inputTypesAllowlist","url","tel","email","password","number","date","month","week","datetime","isValidFocusTarget","el","nodeName","addFocusVisibleClass","onPointerDown","addInitialPointerMoveListeners","onInitialPointerMove","metaKey","altKey","ctrlKey","tagName","visibilityState","hasAttribute","removeAttribute","nodeType","Node","DOCUMENT_FRAGMENT_NODE","DOCUMENT_NODE","documentElement","CustomEvent","error","createEvent","initCustomEvent","dispatchEvent","hasScrollbar","enableFunc","modalsCount","enableFuncFactory","enableFuncCallback","addToStateDecorator","scrollPosition","scrollbarWidth","scrollContainer","visibility","marginTopBefore","start","selectionStart","selectionEnd","selectionDirection","getCaretPosition","setSelectionRange","setSelection","setCaretPosition","InternalLayerName","Tooltip","Modal","Snackbar","ThemeProvider","themeProducer","tokensString","themeClassName"],"sourceRoot":""}