{"version":3,"file":"99051.2be440f06cae4bd5e3c9.js","mappings":"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","sources":["xhh/./webapp-static/lux/components/Auction/Analytics/AuctionContentShown.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/BidRating/styles.less?9535","xhh/./webapp-static/lux/components/Auction/Common/BidRating/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/Controls/AuctionInput/styles.less?0417","xhh/./webapp-static/lux/components/Auction/Common/Controls/AuctionInput/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/Controls/AvailableMoney/styles.less?5299","xhh/./webapp-static/lux/components/Auction/Common/Controls/AvailableMoney/ClickmeAvailableMoney.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/AvailableMoney/index.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/Bid/index.tsx","xhh/./webapp-static/lux/components/Auction/Common/Controls/Bid/fetchBidRating.ts","xhh/./webapp-static/lux/components/Auction/Common/Controls/Budget/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/Controls/DummyControls/styles.less?927c","xhh/./webapp-static/lux/components/Auction/Common/Controls/DummyControls/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Common/Controls/HintOrErrorWrapper/hint-or-error-wrapper.less?5b2f","xhh/./webapp-static/lux/components/Auction/Common/Controls/HintOrErrorWrapper/index.tsx","webpack://xhh/./webapp-static/lux/components/Auction/Modals/HowItWorksModal/styles.less?cde4","xhh/./webapp-static/lux/components/Auction/Modals/HowItWorksModal/index.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useFetchProduct.tsx","xhh/./webapp-static/lux/components/Auction/hooks/useHhtmSourceLabelFromRunActionQs.ts","xhh/./webapp-static/lux/components/Auction/utils.ts","webpack://xhh/./webapp-static/lux/components/Clickme/AutoCampaign/common/BannerContent/banner-content.less?6473","xhh/./webapp-static/lux/components/Clickme/AutoCampaign/common/BannerContent/BannerContent.tsx","webpack://xhh/./webapp-static/lux/components/Clickme/AutoCampaign/common/FormErrorHint/form-error-hint.less?1264","xhh/./webapp-static/lux/components/Clickme/AutoCampaign/common/FormErrorHint/FormErrorHint.tsx","xhh/./webapp-static/lux/components/ClickmeAutoCampaign/utils.ts","xhh/./webapp-static/lux/components/FieldTip/TipWrapper.tsx","webpack://xhh/./webapp-static/lux/components/FieldTip/field-tip.less?79ed","xhh/./webapp-static/lux/components/FieldTip/index.tsx","xhh/./webapp-static/lux/components/FieldTip/types.ts","webpack://xhh/./webapp-static/lux/components/FlexibleRow/styles.less?f0e1","xhh/./webapp-static/lux/components/FlexibleRow/index.tsx","xhh/./webapp-static/lux/components/MoneyInput.tsx","webpack://xhh/./webapp-static/lux/components/VacancyCreate/CheckboxWithLabel/checkbox-with-label.less?09e3","xhh/./webapp-static/lux/components/VacancyCreate/CheckboxWithLabel/index.tsx","xhh/./webapp-static/lux/components/VacancyCreate/common/TypographyMigration.tsx","xhh/./webapp-static/lux/components/VacancyCreate/useRedesigned.ts","xhh/./webapp-static/lux/requests/fetchCalculatedProduct.ts","xhh/./webapp-static/lux/requests/price/addToCartAnimation.ts","xhh/./webapp-static/lux/requests/price/cart.ts"],"sourcesContent":["import React, { FC, PropsWithChildren } from 'react';\n\nimport { ElementShownAnchor } from '@hh.ru/analytics-js';\nimport auctionContentElementShown from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_content_element_shown';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\n\nimport useHhtmSourceLabelFromRunActionQs from 'lux/components/Auction/hooks/useHhtmSourceLabelFromRunActionQs';\nimport { AuctionFieldName } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst AuctionContentShown: FC<PropsWithChildren> = ({ children }) => {\n    const { bidRating, controls, vacancyId, campaignDraft, currentVacancyAuctionCampaign, campaignCreationStatus } =\n        useSelectorNonNullable(({ auctionData }) => auctionData);\n    const vacancyCreateDraftId = useSelector(({ vacancyCreateDraftId }) => vacancyCreateDraftId);\n    const hhtmSourceLabel = useHhtmSourceLabelFromRunActionQs();\n\n    const campaignId = currentVacancyAuctionCampaign ? String(currentVacancyAuctionCampaign.campaignId) : undefined;\n    const campaignDraftId = campaignDraft ? String(campaignDraft.campaignDraftId) : undefined;\n    const campaignStatus = currentVacancyAuctionCampaign?.campaignStatus;\n\n    return (\n        <ElementShownAnchor\n            fn={auctionContentElementShown}\n            vacancyId={vacancyId}\n            campaignId={campaignId}\n            campaignDraftId={campaignDraftId}\n            campaignStatus={campaignStatus}\n            campaignCreationStatus={campaignCreationStatus}\n            draftId={vacancyCreateDraftId}\n            bid={controls[AuctionFieldName.Bid].value}\n            budget={controls[AuctionFieldName.Budget].value}\n            competingCampaignBids={JSON.stringify(bidRating.data.competingCampaignBids)}\n            competingCampaignIds={JSON.stringify(bidRating.data.competingCampaignIds)}\n            initialBid={controls[AuctionFieldName.Bid].initialValue}\n            initialBudget={controls[AuctionFieldName.Budget].initialValue}\n            ratingStatus={bidRating.data.bidFrequencyStatus}\n            hhtmSourceLabel={hhtmSourceLabel}\n        >\n            {children}\n        </ElementShownAnchor>\n    );\n};\n\nexport default AuctionContentShown;\n","// extracted by mini-css-extract-plugin\nexport default {\"bidRatingWrapper\":\"bid-rating-wrapper--Q7E3yyQJPsbUyEFwmrTA\",\"bidRatingWrapperInversed\":\"bid-rating-wrapper_inversed--muGsO3mqZNdiQSLkYod5\",\"bidRatingWrapperContent\":\"bid-rating-wrapper-content--xdGCaZ5IyWtvv3TFROPW\",\"bidRatingWrapperLoader\":\"bid-rating-wrapper-loader--yLoBObbFtLME87YZbUWy\",\"bidRatingWrapperLoading\":\"bid-rating-wrapper_loading--t88xtSuwD1Q0q46kKkbQ\",\"bidRatingWrapperLoadingWithChildren\":\"bid-rating-wrapper_loading-with-children--dp3QJfp4vKHrBsQAWdbC\"};","import classnames from 'classnames';\n\nimport { Text as MagritteText, TextStyle, TextTypography } from '@hh.ru/magritte-ui';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Conversion from 'bloko/blocks/conversion';\nimport { H1 } from 'bloko/blocks/header';\nimport BlokoLoading, { LoadingScale } from 'bloko/blocks/loading';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport TypographyMigration from 'lux/components/VacancyCreate/common/TypographyMigration';\nimport translation from 'lux/components/translation';\nimport useExperiment from 'lux/hooks/useExperiment';\nimport { BidFrequencyStatus } from 'lux/models/auctionData';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    description: 'auction.bidRating.description',\n    leadingBid: {\n        title: 'auction.bidRating.leadingBid.title',\n        description: 'auction.bidRating.leadingBid.description',\n        similarVacancy: {\n            all: 'auction.bidRating.leadingBid.similarVacancy.all',\n            one: 'auction.bidRating.leadingBid.similarVacancy.one',\n            some: 'auction.bidRating.leadingBid.similarVacancy.some',\n            many: 'auction.bidRating.leadingBid.similarVacancy.many',\n        },\n    },\n    higherBid: {\n        title: 'auction.bidRating.higherBid.title',\n        description: 'auction.bidRating.higherBid.description',\n        descriptionOneVacancy: 'auction.bidRating.higherBid.description.one',\n        similarVacancy: {\n            one: 'auction.bidRating.higherBid.similarVacancy.one',\n            some: 'auction.bidRating.higherBid.similarVacancy.some',\n            many: 'auction.bidRating.higherBid.similarVacancy.many',\n        },\n    },\n    equalBid: {\n        title: 'auction.bidRating.equalBid.title',\n        description: 'auction.bidRating.equalBid.description',\n        descriptionOneVacancy: 'auction.bidRating.equalBid.description.one',\n        similarVacancy: {\n            one: 'auction.bidRating.equalBid.similarVacancy.one',\n            some: 'auction.bidRating.equalBid.similarVacancy.some',\n            many: 'auction.bidRating.equalBid.similarVacancy.many',\n        },\n    },\n};\n\ninterface BidRatingProps {\n    inversed?: boolean;\n    inBuilder?: boolean;\n}\n\nconst BidRating: TranslatedComponent<BidRatingProps> = ({ inversed, inBuilder = false, trls, children }) => {\n    const bidRatingData = useSelectorNonNullable(({ auctionData }) => auctionData.bidRating.data);\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const loading = useSelectorNonNullable(({ auctionData }) => auctionData.bidRating.loading);\n\n    const {\n        bidFrequencyStatus,\n        oftenThresholdBid,\n        recommendedBid,\n        similarVacanciesWithEqualBidAmount,\n        similarVacanciesWithHigherBidAmount,\n    } = bidRatingData;\n\n    // tempexp_27104_start\n    const isBranchAEnabled = useExperiment('auction_rec_exp_bid_25_percent');\n    const isBranchBEnabled = useExperiment('auction_rec_exp_bid_75_percent');\n    const isBranchCEnabled = useExperiment('auction_rec_exp_bid_100');\n    const isExperimentEnabled = isBranchAEnabled || isBranchBEnabled || isBranchCEnabled;\n    // tempexp_27104_end\n\n    let title = null;\n    let description = null;\n    // tempexp_27104_next_line condition\n    if (!isExperimentEnabled && !similarVacanciesWithHigherBidAmount && !similarVacanciesWithEqualBidAmount) {\n        title = null;\n        description = (\n            <>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text strong>{null}</Text>}\n                    Magritte={<MagritteText typography={TextTypography.Label2Regular}>{null}</MagritteText>}\n                >\n                    {trls[TrlKeys.leadingBid.title]}\n                </TypographyMigration>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text>{null}</Text>}\n                    Magritte={\n                        <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {formatToReactComponent(trls[TrlKeys.leadingBid.description], {\n                        '{0}': trls[TrlKeys.leadingBid.similarVacancy.all],\n                    })}\n                </TypographyMigration>\n            </>\n        );\n    }\n\n    // tempexp_27104_next_line condition\n    if (!isExperimentEnabled && !similarVacanciesWithHigherBidAmount && similarVacanciesWithEqualBidAmount) {\n        const similarVacanciesWithEqualBidAmountMoreOne = similarVacanciesWithEqualBidAmount > 1;\n        title = String(similarVacanciesWithEqualBidAmount);\n        description = (\n            <>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text Element=\"span\">{null}</Text>}\n                    Magritte={\n                        <MagritteText Element=\"span\" typography={TextTypography.Label2Regular}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    <Conversion\n                        hasValue={false}\n                        value={similarVacanciesWithEqualBidAmount}\n                        one={trls[TrlKeys.equalBid.similarVacancy.one]}\n                        some={trls[TrlKeys.equalBid.similarVacancy.some]}\n                        many={trls[TrlKeys.equalBid.similarVacancy.many]}\n                    />{' '}\n                </TypographyMigration>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={\n                        <Text Element=\"span\" strong>\n                            {null}\n                        </Text>\n                    }\n                    Magritte={\n                        <MagritteText Element=\"span\" typography={TextTypography.Label2Regular}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {trls[TrlKeys.equalBid.title]}\n                </TypographyMigration>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text>{null}</Text>}\n                    Magritte={\n                        <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {similarVacanciesWithEqualBidAmountMoreOne &&\n                        formatToReactComponent(trls[TrlKeys.equalBid.description], {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {recommendedBid}\n                                </FormatMoney>\n                            ),\n                        })}\n                    {!similarVacanciesWithEqualBidAmountMoreOne &&\n                        formatToReactComponent(trls[TrlKeys.equalBid.descriptionOneVacancy], {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {recommendedBid}\n                                </FormatMoney>\n                            ),\n                        })}\n                </TypographyMigration>\n            </>\n        );\n    }\n\n    // tempexp_27104_next_line condition\n    if (!isExperimentEnabled && similarVacanciesWithHigherBidAmount) {\n        const similarVacanciesWithHigherBidAmountMoreOne = similarVacanciesWithHigherBidAmount > 1;\n        title = String(similarVacanciesWithHigherBidAmount);\n        description = (\n            <>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text Element=\"span\">{null}</Text>}\n                    Magritte={\n                        <MagritteText Element=\"span\" typography={TextTypography.Label2Regular}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    <Conversion\n                        hasValue={false}\n                        value={similarVacanciesWithHigherBidAmount}\n                        one={trls[TrlKeys.higherBid.similarVacancy.one]}\n                        some={trls[TrlKeys.higherBid.similarVacancy.some]}\n                        many={trls[TrlKeys.higherBid.similarVacancy.many]}\n                    />{' '}\n                </TypographyMigration>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={\n                        <Text Element=\"span\" strong>\n                            {null}\n                        </Text>\n                    }\n                    Magritte={\n                        <MagritteText Element=\"span\" typography={TextTypography.Label2Regular}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {trls[TrlKeys.higherBid.title]}\n                </TypographyMigration>\n                <TypographyMigration\n                    enableMigration={inBuilder}\n                    Bloko={<Text>{null}</Text>}\n                    Magritte={\n                        <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {similarVacanciesWithHigherBidAmountMoreOne &&\n                        formatToReactComponent(trls[TrlKeys.higherBid.description], {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {recommendedBid}\n                                </FormatMoney>\n                            ),\n                        })}\n                    {!similarVacanciesWithHigherBidAmountMoreOne &&\n                        formatToReactComponent(trls[TrlKeys.higherBid.descriptionOneVacancy], {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {recommendedBid}\n                                </FormatMoney>\n                            ),\n                        })}\n                </TypographyMigration>\n            </>\n        );\n    }\n\n    // tempexp_27104_start\n    if (isExperimentEnabled) {\n        title = null;\n\n        if (bidFrequencyStatus === BidFrequencyStatus.Rare) {\n            description = (\n                <>\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text strong>{null}</Text>}\n                        Magritte={<MagritteText typography={TextTypography.Label2Regular}>{null}</MagritteText>}\n                    >\n                        {'Показы в\\u00a0топе поиска: редко'}\n                    </TypographyMigration>\n                    <VSpacing base={1} />\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text>{null}</Text>}\n                        Magritte={\n                            <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                                {null}\n                            </MagritteText>\n                        }\n                    >\n                        {formatToReactComponent('Чтобы показывать вакансию чаще, сделайте ставку от\\u00a0{0}.', {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {oftenThresholdBid as number}\n                                </FormatMoney>\n                            ),\n                        })}\n                    </TypographyMigration>\n                </>\n            );\n        }\n\n        if (bidFrequencyStatus === BidFrequencyStatus.Average) {\n            description = (\n                <>\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text strong>{null}</Text>}\n                        Magritte={<MagritteText typography={TextTypography.Label2Regular}>{null}</MagritteText>}\n                    >\n                        {'Показы в\\u00a0топе поиска: периодически'}\n                    </TypographyMigration>\n                    <VSpacing base={1} />\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text>{null}</Text>}\n                        Magritte={\n                            <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                                {null}\n                            </MagritteText>\n                        }\n                    >\n                        {formatToReactComponent('Чтобы показывать вакансию чаще, сделайте ставку от\\u00a0{0}.', {\n                            '{0}': (\n                                <FormatMoney currency={currency} inCents>\n                                    {oftenThresholdBid as number}\n                                </FormatMoney>\n                            ),\n                        })}\n                    </TypographyMigration>\n                </>\n            );\n        }\n\n        if (bidFrequencyStatus === BidFrequencyStatus.Often) {\n            description = (\n                <>\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text strong>{null}</Text>}\n                        Magritte={<MagritteText typography={TextTypography.Label2Regular}>{null}</MagritteText>}\n                    >\n                        {'Показы в\\u00a0топе поиска: часто'}\n                    </TypographyMigration>\n                    <VSpacing base={1} />\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={<Text>{null}</Text>}\n                        Magritte={\n                            <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                                {null}\n                            </MagritteText>\n                        }\n                    >\n                        {'Выше ставка\\u00a0— чаще показы в\\u00a0топе. Сейчас ваша ставка среди лидирующих.'}\n                    </TypographyMigration>\n                </>\n            );\n        }\n    }\n    // tempexp_27104_end\n\n    return (\n        <div\n            className={classnames(styles.bidRatingWrapper, {\n                [styles.bidRatingWrapperInversed]: inversed,\n                [styles.bidRatingWrapperLoading]: loading && !children,\n                [styles.bidRatingWrapperLoadingWithChildren]: loading && children,\n            })}\n        >\n            <div className={styles.bidRatingWrapperContent}>\n                {title && <H1 Element=\"span\">{title}</H1>}\n                <div>{description}</div>\n            </div>\n            <div className={styles.bidRatingWrapperLoader}>\n                <BlokoLoading scale={LoadingScale.Medium} />\n            </div>\n            {children}\n        </div>\n    );\n};\n\nexport default translation(BidRating);\n","// extracted by mini-css-extract-plugin\nexport default {\"auctionInput\":\"auction-input--QRqfKM7LCRiNlqZu6Lpl\"};","import { FC } from 'react';\n\nimport { Button, ButtonMode, ButtonStyle } from '@hh.ru/magritte-ui';\nimport { MinusOutlinedSize24, PlusOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\nimport BlokoButton from 'bloko/blocks/button';\nimport ControlGroup, { ControlGroupItem } from 'bloko/blocks/controlGroup';\nimport Icon, { IconScale, IconView } from 'bloko/blocks/icon';\n\nimport MoneyInput, { MoneyInputProps } from 'lux/components/MoneyInput';\nimport useRedesigned from 'lux/components/VacancyCreate/useRedesigned';\n\nimport styles from './styles.less';\n\nexport type AuctionInputProps = MoneyInputProps & {\n    step: number;\n    onChange: (value: string) => void;\n    onPlusOrMinusClick?: (value: string) => void;\n    minusDataQa?: string;\n    plusDataQa?: string;\n};\n\nconst AuctionInput: FC<AuctionInputProps> = ({\n    step,\n    value,\n    min,\n    onPlusOrMinusClick,\n    onChange,\n    minusDataQa,\n    plusDataQa,\n    ...inputProps\n}) => {\n    const redesigned = useRedesigned();\n    const numberValue = Number(value);\n    const handler = onPlusOrMinusClick || onChange;\n\n    const handleMinus = () => {\n        if (min) {\n            if (numberValue === min) {\n                return;\n            } else if (numberValue - step < min) {\n                handler?.(String(min));\n                return;\n            }\n        }\n\n        handler?.(String(numberValue - step));\n    };\n    const handlePlus = () => {\n        if (numberValue + step < Number(min)) {\n            handler?.(String(min));\n\n            return;\n        }\n\n        handler?.(String(numberValue + step));\n    };\n\n    if (redesigned) {\n        return (\n            <div className={styles.auctionInput}>\n                <MoneyInput value={value} onChange={onChange} {...inputProps} />\n                <Button\n                    onClick={handleMinus}\n                    mode={ButtonMode.Primary}\n                    style={ButtonStyle.Contrast}\n                    ariaLabel=\"\"\n                    hideLabel\n                    data-qa={minusDataQa}\n                    icon={<MinusOutlinedSize24 />}\n                />\n                <Button\n                    onClick={handlePlus}\n                    mode={ButtonMode.Primary}\n                    style={ButtonStyle.Contrast}\n                    ariaLabel=\"\"\n                    hideLabel\n                    data-qa={plusDataQa}\n                    icon={<PlusOutlinedSize24 />}\n                />\n            </div>\n        );\n    }\n\n    return (\n        <ControlGroup>\n            <ControlGroupItem main>\n                <MoneyInput value={value} onChange={onChange} {...inputProps} />\n            </ControlGroupItem>\n            <ControlGroupItem>\n                <BlokoButton\n                    icon={<Icon scale={IconScale.Small} view={IconView.Minus} />}\n                    onClick={handleMinus}\n                    data-qa={minusDataQa}\n                />\n            </ControlGroupItem>\n            <ControlGroupItem>\n                <BlokoButton\n                    icon={<Icon scale={IconScale.Small} view={IconView.Plus} />}\n                    onClick={handlePlus}\n                    data-qa={plusDataQa}\n                />\n            </ControlGroupItem>\n        </ControlGroup>\n    );\n};\n\nexport default AuctionInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"availableMoney\":\"available-money--Y7jgpFNY9RGIiAnZms5G\"};","import { FC } from 'react';\n\nimport FormatMoney from 'lux/components/FormatMoney';\nimport { CurrencyType } from 'lux/models/currencies.types';\nimport { NON_BREAKING_SPACE, NARROW_NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nimport styles from './styles.less';\n\ntype ClickmeAvailableMoneyProps = {\n    availableMoney: number;\n    currency: CurrencyType;\n};\n\nconst ClickmeAvailableMoney: FC<ClickmeAvailableMoneyProps> = ({ availableMoney, currency }) => {\n    return (\n        <span className={styles.availableMoney}>\n            <FormatMoney\n                currency={currency}\n                groupSeparator={NARROW_NON_BREAKING_SPACE}\n                inCents\n                render={(amount, currencyNode) => (\n                    <>\n                        <span data-qa=\"clickme-account-balance\">{amount}</span>\n                        {NON_BREAKING_SPACE}\n                        {currencyNode}\n                    </>\n                )}\n            >\n                {availableMoney}\n            </FormatMoney>\n        </span>\n    );\n};\n\nexport default ClickmeAvailableMoney;\n","import { useDispatch } from 'react-redux';\n\nimport { CellText } from '@hh.ru/magritte-ui';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Checkbox from 'bloko/blocks/checkbox';\nimport { HoverTip } from 'bloko/blocks/drop';\nimport { TipLayer, TipPlacement } from 'bloko/blocks/drop/Tip';\nimport Icon, { IconColor, IconLink, IconScale, IconVerticalAlignment, IconView } from 'bloko/blocks/icon';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport FieldTip from 'lux/components/FieldTip';\nimport CheckboxWithLabel from 'lux/components/VacancyCreate/CheckboxWithLabel';\nimport translation from 'lux/components/translation';\nimport { changeUseAvailableMoney } from 'lux/models/auctionData';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport ClickmeAvailableMoney from 'lux/components/Auction/Common/Controls/AvailableMoney/ClickmeAvailableMoney';\n\nconst TrlKeys = {\n    availableMoney: 'auction.controls.availableMoney',\n    accountBalanceInfo: 'auction.controls.accountBalance.info',\n    accountBalanceInfoTitle: 'auction.controls.accountBalance.infoTitle',\n};\n\ninterface AvailableMoneyProps {\n    onUseAvailableMoneyChange?: (use: boolean) => void;\n    redesign?: boolean;\n}\n\nconst AvailableMoney: TranslatedComponent<AvailableMoneyProps> = ({ trls, onUseAvailableMoneyChange, redesign }) => {\n    const dispatch = useDispatch();\n    const useAvailableMoney = useSelector(({ auctionData }) => auctionData?.useAvailableMoney || false);\n    const availableMoney = useSelector(({ auctionData }) => auctionData?.availableMoney || 0);\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n\n    const toogleUseAvailableMoney = () => {\n        dispatch(changeUseAvailableMoney(!useAvailableMoney));\n        onUseAvailableMoneyChange?.(!useAvailableMoney);\n    };\n\n    if (redesign) {\n        return (\n            <FieldTip tipContent={trls[TrlKeys.accountBalanceInfo]} fieldName={trls[TrlKeys.accountBalanceInfoTitle]}>\n                <CheckboxWithLabel\n                    name=\"useAvailableMoney\"\n                    title={\n                        <CellText type=\"title\">\n                            {trls[TrlKeys.availableMoney]} {NON_BREAKING_SPACE}\n                            <ClickmeAvailableMoney availableMoney={availableMoney} currency={currency} />\n                        </CellText>\n                    }\n                    checked={useAvailableMoney && !!availableMoney}\n                    data-qa=\"use-available-money\"\n                    disabled={!availableMoney}\n                    onChange={toogleUseAvailableMoney}\n                >\n                    {trls[TrlKeys.availableMoney]}\n                    {NON_BREAKING_SPACE}\n                    <ClickmeAvailableMoney availableMoney={availableMoney} currency={currency} />\n                </CheckboxWithLabel>\n            </FieldTip>\n        );\n    }\n\n    return (\n        <>\n            <Checkbox\n                name=\"useAvailableMoney\"\n                checked={useAvailableMoney && !!availableMoney}\n                data-qa=\"use-available-money\"\n                disabled={!availableMoney}\n                onChange={toogleUseAvailableMoney}\n            >\n                {trls[TrlKeys.availableMoney]}\n                {NON_BREAKING_SPACE}\n                <ClickmeAvailableMoney availableMoney={availableMoney} currency={currency} />\n            </Checkbox>\n            {NON_BREAKING_SPACE}\n            <HoverTip\n                host={!process.env.LUX_SERVER ? document.body : null}\n                layer={TipLayer.AboveOverlayContent}\n                placement={TipPlacement.Right}\n                render={() => <Text>{trls[TrlKeys.accountBalanceInfo]}</Text>}\n            >\n                <IconVerticalAlignment>\n                    <IconLink>\n                        <Icon view={IconView.QuestionMark} initial={IconColor.Gray60} scale={IconScale.Small} />\n                    </IconLink>\n                </IconVerticalAlignment>\n            </HoverTip>\n        </>\n    );\n};\n\nexport default translation(AvailableMoney);\n","import { FC, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios, { Canceler } from 'axios';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport useDebounce from 'bloko/common/hooks/useDebounce';\n\nimport AuctionInput, { AuctionInputProps } from 'lux/components/Auction/Common/Controls/AuctionInput';\nimport { AuctionFieldError, BidRatingRequestParams } from 'lux/models/auctionData';\n\nimport { fetchBidRating } from 'lux/components/Auction/Common/Controls/Bid/fetchBidRating';\n\nconst BID_STEP = 500;\n\ninterface BidProps extends Omit<AuctionInputProps, 'step'> {\n    error?: AuctionFieldError;\n    onPlusOrMinusClick?: (bid: string) => void;\n    minusDataQa?: string;\n    plusDataQa?: string;\n}\n\nconst Bid: FC<BidProps> = ({ error, value, onPlusOrMinusClick, ...props }) => {\n    const bidRatingRequestParams = useSelectorNonNullable(({ auctionData }) => auctionData.bidRating.requestParams);\n    const vacancyId = useSelectorNonNullable(({ auctionData }) => auctionData.vacancyId || null);\n    const dispatch = useDispatch();\n\n    const cancelFetchBidRatingRef = useRef<Canceler | null>(null);\n    const fetchBidRatingDebouncedRef = useRef(\n        useDebounce((params: BidRatingRequestParams & { bid: number; vacancyId: string | null }) => {\n            const cancelToken = new axios.CancelToken((cancel) => {\n                cancelFetchBidRatingRef.current = cancel;\n            });\n\n            void dispatch(fetchBidRating({ params, cancelToken }));\n        }, 500)\n    );\n\n    const isFirstBidRequestRef = useRef(true);\n    useEffect(() => {\n        if (isFirstBidRequestRef.current) {\n            isFirstBidRequestRef.current = false;\n            return;\n        }\n        cancelFetchBidRatingRef.current?.();\n        if (!error && bidRatingRequestParams) {\n            fetchBidRatingDebouncedRef.current({ ...bidRatingRequestParams, bid: Number(value), vacancyId });\n        } else {\n            fetchBidRatingDebouncedRef.current.cancel();\n        }\n    }, [bidRatingRequestParams, dispatch, error, vacancyId, value]);\n\n    return <AuctionInput {...props} value={value} step={BID_STEP} onPlusOrMinusClick={onPlusOrMinusClick} />;\n};\n\nexport default Bid;\n","import { CancelToken } from 'axios';\nimport { Dispatch, AnyAction } from 'redux';\n\nimport auctionControlsEdit from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_controls_edit';\n\nimport { getInputChangeAnalyticsParams } from 'lux/components/Auction/utils';\nimport { BidRatingData, BidRatingRequestParams, setBidRatingData, setBidRatingLoading } from 'lux/models/auctionData';\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/vacancy/auction/bid_rating': {\n            queryParams: BidRatingRequestParams & { bid: number };\n            response: BidRatingData;\n        };\n    }\n}\n\ninterface FetchBidRatingArgs {\n    params: BidRatingRequestParams & { bid: number; vacancyId: string | null };\n    cancelToken: CancelToken;\n}\n\nexport const fetchBidRating =\n    ({ params, cancelToken }: FetchBidRatingArgs) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        dispatch(setBidRatingLoading(true));\n\n        return fetcher\n            .get('/shards/vacancy/auction/bid_rating', { params, cancelToken })\n            .then(\n                (data) => {\n                    auctionControlsEdit(\n                        dispatch(\n                            getInputChangeAnalyticsParams({\n                                bid: String(params.bid),\n                            })\n                        )\n                    );\n                    dispatch(setBidRatingData(data));\n                },\n                (error) => {\n                    if (fetcher.isCancel(error)) {\n                        return;\n                    }\n\n                    console.error(error);\n                }\n            )\n            .finally(() => {\n                dispatch(setBidRatingLoading(false));\n            });\n    };\n","import { FC } from 'react';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\n\nimport AuctionInput, { AuctionInputProps } from 'lux/components/Auction/Common/Controls/AuctionInput';\nimport useFetchProduct from 'lux/components/Auction/hooks/useFetchProduct';\nimport { AuctionFieldError } from 'lux/models/auctionData';\n\nconst BUDGET_STEP = 10000;\n\ninterface BudgetProps extends Omit<AuctionInputProps, 'step'> {\n    error?: AuctionFieldError;\n    onPlusOrMinusClick?: (budget: string) => void;\n    minusDataQa?: string;\n    plusDataQa?: string;\n}\nconst Budget: FC<BudgetProps> = ({ value, error, onPlusOrMinusClick, ...props }) => {\n    const numericValue = Number(value);\n    const currentVacancyAuctionCampaign = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.currentVacancyAuctionCampaign\n    );\n    const actualBudget = currentVacancyAuctionCampaign\n        ? numericValue - currentVacancyAuctionCampaign.budget\n        : numericValue;\n\n    useFetchProduct({ replenishment: actualBudget, error });\n    return <AuctionInput {...props} value={value} step={BUDGET_STEP} onPlusOrMinusClick={onPlusOrMinusClick} />;\n};\n\nexport default Budget;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--pQE6AC06aocaCqFx1BE0\",\"inputBlock\":\"input-block--EmahGVCdnosmKKBgpf4X\",\"inputSeparator\":\"input-separator--iRSo8IyIOt4Kl8jzJk2e\"};","import { ReactNode } from 'react';\n\nimport { FormLabel, VSpacing as MagritteVspacing, Text as MagritteText } from '@hh.ru/magritte-ui';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport AvailableMoney from 'lux/components/Auction/Common/Controls/AvailableMoney';\nimport Bid from 'lux/components/Auction/Common/Controls/Bid';\nimport Budget from 'lux/components/Auction/Common/Controls/Budget';\nimport Currency from 'lux/components/Currency';\nimport FieldTip from 'lux/components/FieldTip';\nimport TypographyMigration from 'lux/components/VacancyCreate/common/TypographyMigration';\nimport translation from 'lux/components/translation';\nimport { AuctionFieldError, AuctionFieldName } from 'lux/models/auctionData';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    bid: 'auction.controls.bid',\n    bidInfo: {\n        0: 'auction.controls.bid.info.0',\n        1: 'auction.controls.bid.info.1',\n    },\n    budget: 'auction.controls.budget',\n    budgetInfo: {\n        0: 'auction.controls.budget.info.0',\n        1: 'auction.controls.budget.info.1',\n    },\n};\n\ninterface AuctionControlsProps {\n    bidError?: AuctionFieldError;\n    bidShowError?: boolean;\n    redesign?: boolean;\n    bidValue: string;\n    minBid: number;\n    budgetError?: AuctionFieldError;\n    budgetShowError?: boolean;\n    budgetValue: string;\n    minBudget: number;\n    inBuilder?: boolean;\n    onBidBlur: () => void;\n    onBidChange: (value: string) => void;\n    onBidFocus: () => void;\n    onBudgetBlur: () => void;\n    onBudgetChange: (value: string) => void;\n    onBudgetFocus: () => void;\n    onBudgetPlusOrMinusClick?: (value: string) => void;\n    renderBidError: () => ReactNode;\n    renderBudgetError: () => ReactNode;\n    onUseAvailableMoneyChange?: (use: boolean) => void;\n}\n\nconst AuctionDummyControls: TranslatedComponent<AuctionControlsProps> = ({\n    bidError,\n    bidShowError,\n    bidValue,\n    minBid,\n    budgetError,\n    budgetShowError,\n    budgetValue,\n    minBudget,\n    inBuilder = false,\n    onBidBlur,\n    onBidChange,\n    onBidFocus,\n    onBudgetBlur,\n    onBudgetChange,\n    onBudgetFocus,\n    onBudgetPlusOrMinusClick,\n    renderBidError,\n    renderBudgetError,\n    onUseAvailableMoneyChange,\n    trls,\n}) => {\n    const currency = useSelectorNonNullable(({ auctionData }) => auctionData.currency);\n    const hideClickmeBalance = useSelector(({ auctionData }) => auctionData?.hideClickmeBalance);\n\n    return (\n        <>\n            <div className={styles.wrapper}>\n                <div className={styles.inputBlock}>\n                    <TypographyMigration\n                        enableMigration={inBuilder}\n                        Bloko={\n                            <FieldTip\n                                tipContent={\n                                    <>\n                                        <MagritteText>{trls[TrlKeys.bidInfo[0]]}</MagritteText>\n                                        <MagritteVspacing default={8} />\n                                        <MagritteText>{trls[TrlKeys.bidInfo[1]]}</MagritteText>\n                                    </>\n                                }\n                                fieldName={trls[TrlKeys.bid]}\n                            >\n                                <Text Element=\"span\" strong>\n                                    {trls[TrlKeys.bid]}\n                                </Text>\n                            </FieldTip>\n                        }\n                        Magritte={\n                            <FormLabel\n                                info={\n                                    <>\n                                        {trls[TrlKeys.bidInfo[0]]}\n                                        <VSpacing base={2} />\n                                        {trls[TrlKeys.bidInfo[1]]}\n                                    </>\n                                }\n                            >\n                                <MagritteText>{`${trls[TrlKeys.bid]} `}</MagritteText>\n                            </FormLabel>\n                        }\n                    />\n                    <VSpacing base={1} />\n                    <div>\n                        <Bid\n                            data-qa=\"auction-bid-control\"\n                            invalid={bidShowError}\n                            maxLength={7}\n                            name={AuctionFieldName.Bid}\n                            onBlur={onBidBlur}\n                            onChange={onBidChange}\n                            onFocus={onBidFocus}\n                            value={bidValue}\n                            min={minBid}\n                            postfix={<Currency value={currency} />}\n                            error={bidError}\n                            minusDataQa=\"bid-minus\"\n                            plusDataQa=\"bid-plus\"\n                        />\n                        <VSpacing base={2} />\n                        {renderBidError()}\n                    </div>\n                </div>\n                <div className={styles.inputSeparator} />\n                <div className={styles.inputBlock}>\n                    <TypographyMigration\n                        Bloko={\n                            <FieldTip\n                                tipContent={\n                                    <>\n                                        <MagritteText>{trls[TrlKeys.budgetInfo[0]]}</MagritteText>\n                                        <MagritteVspacing default={8} />\n                                        <MagritteText>{trls[TrlKeys.budgetInfo[1]]}</MagritteText>\n                                    </>\n                                }\n                                fieldName={trls[TrlKeys.budget]}\n                            >\n                                <Text Element=\"span\" strong>\n                                    {trls[TrlKeys.budget]}\n                                </Text>\n                            </FieldTip>\n                        }\n                        Magritte={\n                            <FormLabel\n                                info={\n                                    <>\n                                        {trls[TrlKeys.budgetInfo[0]]}\n                                        <VSpacing base={2} />\n                                        {trls[TrlKeys.budgetInfo[1]]}\n                                    </>\n                                }\n                            >\n                                <MagritteText>{`${trls[TrlKeys.budget]} `}</MagritteText>\n                            </FormLabel>\n                        }\n                    />\n                    <VSpacing base={1} />\n                    <Budget\n                        data-qa=\"auction-budget-control\"\n                        invalid={budgetShowError}\n                        maxLength={7}\n                        name={AuctionFieldName.Budget}\n                        onBlur={onBudgetBlur}\n                        onChange={onBudgetChange}\n                        onPlusOrMinusClick={onBudgetPlusOrMinusClick}\n                        onFocus={onBudgetFocus}\n                        value={budgetValue}\n                        min={minBudget}\n                        postfix={<Currency value={currency} />}\n                        error={budgetError}\n                        minusDataQa=\"budget-minus\"\n                        plusDataQa=\"budget-plus\"\n                    />\n                    <VSpacing base={2} />\n                    {renderBudgetError()}\n                </div>\n            </div>\n            {!hideClickmeBalance && (\n                <AvailableMoney onUseAvailableMoneyChange={onUseAvailableMoneyChange} redesign={inBuilder} />\n            )}\n        </>\n    );\n};\n\nexport default translation(AuctionDummyControls);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--OhT__ukalGc1rpZeYFTN\"};","// tempexp_27104_file\nimport { FC, PropsWithChildren } from 'react';\n\nimport styles from './hint-or-error-wrapper.less';\n\nconst HintOrErrorWrapper: FC<PropsWithChildren> = ({ children }) => {\n    return <div className={styles.wrapper}>{children}</div>;\n};\n\nexport default HintOrErrorWrapper;\n","// extracted by mini-css-extract-plugin\nexport default {\"contentWrapper\":\"content-wrapper--YxHh2AOZ8u1ziBk7Gf7Z\",\"principleList\":\"principle-list--et2hhKecJyRv7Y02e_df\",\"principleListItem\":\"principle-list-item--sy5ClpqUfi8KvjlCFzsh\",\"howAuctionWorksImage\":\"how-auction-works-image--PeSUUETa8FyhMn7RJxbP\",\"factorList\":\"factor-list--JrPeoG3Xh0nhuR4GMe9A\",\"factorListItem\":\"factor-list-item--XktQwhihwPLtWcADSCI6\"};","import Button from 'bloko/blocks/button';\nimport { H1, H2 } from 'bloko/blocks/header';\nimport Modal, { ModalContent, ModalTitle, ModalFooter } from 'bloko/blocks/modal';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport styles from './styles.less';\n\nconst TrlKeys = {\n    title: 'auction.howItWorks.title',\n    principle: 'auction.howItWorks.principle',\n    principleListItem: {\n        0: 'auction.howItWorks.principle.listItem.0',\n        1: 'auction.howItWorks.principle.listItem.1',\n        2: 'auction.howItWorks.principle.listItem.2',\n    },\n    principleDescription: 'auction.howItWorks.principle.description',\n    subTitle: {\n        bid: 'auction.howItWorks.subTitle.bid',\n        factor: 'auction.howItWorks.subTitle.factor',\n    },\n    factor: 'auction.howItWorks.factor',\n    factorListItem: {\n        0: 'auction.howItWorks.factor.listItem.0',\n        1: 'auction.howItWorks.factor.listItem.1',\n    },\n    relevance: 'auction.howItWorks.factor.relevance',\n    bidDescription: {\n        0: 'auction.howItWorks.bid.description.0',\n        1: 'auction.howItWorks.bid.description.1',\n    },\n    close: 'close',\n};\n\ninterface HowItWorksModalProps {\n    visible: boolean;\n    onClose: () => void;\n}\n\nconst HowItWorksModal: TranslatedComponent<HowItWorksModalProps> = ({ onClose, trls, visible }) => {\n    return (\n        <Modal visible={visible} onClose={onClose}>\n            <ModalTitle>\n                <H1>{trls[TrlKeys.title]}</H1>\n            </ModalTitle>\n            <VSpacing base={6} />\n            <ModalContent>\n                <div className={styles.contentWrapper}>\n                    <>\n                        <Text size={TextSize.Large}>{trls[TrlKeys.principle]}</Text>\n                        <VSpacing base={4} />\n                        <ol className={styles.principleList}>\n                            <li className={styles.principleListItem}>\n                                <Text size={TextSize.Large}>{trls[TrlKeys.principleListItem[0]]}</Text>\n                                <VSpacing base={4} />\n                            </li>\n                            <li className={styles.principleListItem}>\n                                <Text size={TextSize.Large}>{trls[TrlKeys.principleListItem[1]]}</Text>\n                                <VSpacing base={4} />\n                            </li>\n                            <li className={styles.principleListItem}>\n                                <Text size={TextSize.Large}>{trls[TrlKeys.principleListItem[2]]}</Text>\n                                <VSpacing base={4} />\n                            </li>\n                        </ol>\n                        <VSpacing base={2} />\n                        <Text size={TextSize.Large}>{trls[TrlKeys.principleDescription]}</Text>\n                        <VSpacing base={8} />\n                        <H2>{trls[TrlKeys.subTitle.factor]}</H2>\n                        <VSpacing base={4} />\n                        <Text size={TextSize.Large}>{trls[TrlKeys.factor]}</Text>\n                        <VSpacing base={2} />\n                        <ul className={styles.factorList}>\n                            <li className={styles.factorListItem}>\n                                <Text size={TextSize.Large}>{trls[TrlKeys.factorListItem[0]]}</Text>\n                            </li>\n                            <li className={styles.factorListItem}>\n                                <Text size={TextSize.Large}>{trls[TrlKeys.factorListItem[1]]}</Text>\n                            </li>\n                        </ul>\n                        <VSpacing base={4} />\n                        <Text size={TextSize.Large}>{trls[TrlKeys.relevance]}</Text>\n                        <VSpacing base={4} />\n                        <div className={styles.howAuctionWorksImage} />\n                        <VSpacing base={8} />\n                        <H2>{trls[TrlKeys.subTitle.bid]}</H2>\n                        <VSpacing base={4} />\n                        <Text size={TextSize.Large}>{trls[TrlKeys.bidDescription[0]]}</Text>\n                        <VSpacing base={4} />\n                        <Text size={TextSize.Large}>{trls[TrlKeys.bidDescription[1]]}</Text>\n                        <VSpacing base={6} />\n                    </>\n                </div>\n            </ModalContent>\n            <ModalFooter>\n                <Button onClick={onClose}>{trls[TrlKeys.close]}</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(HowItWorksModal);\n","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios, { Canceler } from 'axios';\n\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport useDebounce from 'bloko/common/hooks/useDebounce';\n\nimport { setProductInfoLoading, setProductInfoData, AuctionFieldError } from 'lux/models/auctionData';\nimport { ClickmeProductType } from 'lux/models/price/product.types';\nimport { ServiceItemCode } from 'lux/models/price/productCodes';\nimport fetcher from 'lux/modules/fetcher';\nimport fetchCalculatedProduct from 'lux/requests/fetchCalculatedProduct';\n\ninterface UseFetchProductProps {\n    replenishment: number;\n    error?: AuctionFieldError;\n}\n\nconst useFetchProduct = ({ error, replenishment }: UseFetchProductProps): void => {\n    const currentVacancyAuctionCampaign = useSelectorNonNullable(\n        ({ auctionData }) => auctionData.currentVacancyAuctionCampaign\n    );\n    const useAvailableMoney = useSelectorNonNullable(({ auctionData }) => auctionData.useAvailableMoney || false);\n    const availableMoney = useSelectorNonNullable(({ auctionData }) => auctionData.availableMoney || 0);\n\n    const dispatch = useDispatch();\n\n    const cancelFetchProductRef = useRef<Canceler | null>(null);\n    const fetchProductDebouncedRef = useRef(\n        useDebounce((count: number) => {\n            const cancelToken = new axios.CancelToken((cancel) => {\n                cancelFetchProductRef.current = cancel;\n            });\n\n            dispatch(setProductInfoLoading(true));\n            fetchCalculatedProduct({\n                // count должен быть в рублях\n                params: { code: ServiceItemCode.Clickme, count: Math.round(count / 100).toString(), isAuction: true },\n                cancelToken,\n            })\n                .then(\n                    (data) => {\n                        dispatch(setProductInfoData(data as ClickmeProductType));\n                    },\n                    (error) => {\n                        if (fetcher.isCancel(error)) {\n                            return;\n                        }\n\n                        console.error(error);\n                    }\n                )\n                .finally(() => {\n                    dispatch(setProductInfoLoading(false));\n                });\n        }, 500)\n    );\n\n    const isFirstProductRequestRef = useRef(true);\n    useEffect(() => {\n        if (isFirstProductRequestRef.current) {\n            isFirstProductRequestRef.current = false;\n            return;\n        }\n        cancelFetchProductRef.current?.();\n\n        if (replenishment && !error) {\n            const superActualBudget = useAvailableMoney\n                ? replenishment - Math.min(replenishment, availableMoney)\n                : replenishment;\n\n            if (superActualBudget > 0) {\n                fetchProductDebouncedRef.current(superActualBudget);\n            } else {\n                fetchProductDebouncedRef.current.cancel();\n                dispatch([setProductInfoData(null), setProductInfoLoading(false)]);\n            }\n        } else {\n            dispatch(setProductInfoLoading(false));\n            fetchProductDebouncedRef.current.cancel();\n        }\n    }, [availableMoney, currentVacancyAuctionCampaign, dispatch, error, useAvailableMoney, replenishment]);\n};\n\nexport default useFetchProduct;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { QS_PARAM_TO_OPEN_AUCTION, QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH } from 'lux/components/Auction/utils';\nimport { AuctionHhtmlSourceLabel, setAuctionHhtmlSourceLabel } from 'lux/models/auctionHhtmSourceLabel';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst useHhtmSourceLabelFromRunActionQs = (): AuctionHhtmlSourceLabel => {\n    const dispatch = useDispatch();\n    const hhtmSourceLabelFromRunActionQs = useSelector(\n        (state) =>\n            [QS_PARAM_TO_OPEN_AUCTION, QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH].find((param) => {\n                return state.runActionArgument === param;\n            }) as AuctionHhtmlSourceLabel\n    );\n    const auctionHhtmSourceLabel = useSelector((state) => state.auctionHhtmSourceLabel);\n\n    const [hhtmSourceLabel, setHhtmSourceLabel] = useState<AuctionHhtmlSourceLabel>(null);\n\n    useEffect(() => {\n        // hhtmSourceLabel, будет иметь значение только в том случае если пользователь открыл аукцион по ссылке\n        if (hhtmSourceLabelFromRunActionQs && !auctionHhtmSourceLabel) {\n            dispatch(setAuctionHhtmlSourceLabel(hhtmSourceLabelFromRunActionQs));\n            setHhtmSourceLabel(hhtmSourceLabelFromRunActionQs);\n        } else {\n            setHhtmSourceLabel(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return hhtmSourceLabel;\n};\n\nexport default useHhtmSourceLabelFromRunActionQs;\n","import { Dispatch, AnyAction } from 'redux';\n\nimport auctionControlsEdit from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_controls_edit';\nimport {\n    CampaignStatus,\n    Action,\n} from '@hh.ru/analytics-js-events/build/xhh/employer/auction/auction_modal_edit_campaign_button_click';\nimport { NonNullableRootState } from '@hh.ru/redux-create-reducer';\nimport debounce from 'bloko/common/debounce';\n\nimport {\n    AuctionCampaignStatus,\n    AuctionFieldName,\n    CampaignCreationStatus,\n    AuctionDataWithCampaign,\n} from 'lux/models/auctionData';\n\nexport const isActiveCampaignStatus = (campaignStatus?: AuctionCampaignStatus): boolean =>\n    campaignStatus === AuctionCampaignStatus.Active;\n\nexport const isPauseCampaignStatus = (campaignStatus?: AuctionCampaignStatus): boolean =>\n    campaignStatus === AuctionCampaignStatus.Blocked;\n\nexport const isCampaignLowBalanceCampaignStatus = (campaignStatus?: AuctionCampaignStatus): boolean =>\n    campaignStatus === AuctionCampaignStatus.CampaignLowBalance;\n\nexport const isAccountLowBalanceCampaignStatus = (campaignStatus?: AuctionCampaignStatus): boolean =>\n    campaignStatus === AuctionCampaignStatus.AccountLowBalance;\n\nexport const QS_PARAM_TO_OPEN_AUCTION = 'useSearchTop';\nexport const QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH = 'openBudget';\n\ninterface BaseAnalyticParams {\n    vacancyId?: string;\n    campaignId?: string;\n    campaignDraftId?: string;\n    campaignCreationStatus: CampaignCreationStatus;\n    draftId?: number;\n    campaignStatus?: AuctionCampaignStatus;\n}\ninterface InputChangeAnalyticParams extends BaseAnalyticParams {\n    bid?: string;\n    budget?: string;\n}\ninterface AnalyticsProps {\n    budget?: string;\n    bid?: string;\n}\nexport const getInputChangeAnalyticsParams =\n    ({ bid, budget }: AnalyticsProps = {}) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): InputChangeAnalyticParams => {\n        const { auctionData, vacancyCreateDraftId } = getState();\n        const { vacancyId, campaignDraft, currentVacancyAuctionCampaign, campaignCreationStatus } = auctionData;\n        const campaignId = currentVacancyAuctionCampaign ? String(currentVacancyAuctionCampaign.campaignId) : undefined;\n        const campaignDraftId = campaignDraft ? String(campaignDraft.campaignDraftId) : undefined;\n        const campaignStatus = currentVacancyAuctionCampaign?.campaignStatus;\n        return {\n            vacancyId,\n            campaignId,\n            campaignDraftId,\n            campaignStatus,\n            campaignCreationStatus,\n            draftId: vacancyCreateDraftId,\n            bid,\n            budget,\n        };\n    };\n\ninterface EditCampaignClickAnalyticParams {\n    vacancyId: string;\n    campaignId: string;\n    bidInCents: number;\n    budgetInCents: number;\n    budgetDiffInCents: number;\n    campaignStatus: CampaignStatus;\n    maxBidAmongSimilarVacancies: number;\n    useAvailableMoney: boolean;\n    availableMoneyInCents: number;\n    action: Action;\n}\n\nexport const getEditCampaignClickAnalyticsParams =\n    (action: Action) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): EditCampaignClickAnalyticParams => {\n        const auctionData = getState().auctionData as AuctionDataWithCampaign;\n        const { controls, bidRating, useAvailableMoney, availableMoney } = auctionData;\n        const budget = Number(controls[AuctionFieldName.Budget].value);\n        const { vacancyId, currentVacancyAuctionCampaign } = auctionData;\n        const campaignId = String(currentVacancyAuctionCampaign.campaignId);\n        const campaignStatus = currentVacancyAuctionCampaign.campaignStatus;\n\n        return {\n            vacancyId,\n            campaignId,\n            campaignStatus,\n            bidInCents: Number(controls[AuctionFieldName.Bid].value),\n            budgetInCents: budget,\n            budgetDiffInCents: Number(budget) - Number(currentVacancyAuctionCampaign?.budget),\n            maxBidAmongSimilarVacancies: bidRating.data.maxBidAmongSimilarVacancies as number,\n            useAvailableMoney,\n            availableMoneyInCents: availableMoney,\n            action,\n        };\n    };\n\nexport const debouncedAuctionControlsEdit = debounce((props: InputChangeAnalyticParams) => {\n    auctionControlsEdit(props);\n}, 300);\n\nexport const isRestoreAction = (bidChanged: boolean, campaignStatus: AuctionCampaignStatus | undefined): boolean =>\n    bidChanged && isPauseCampaignStatus(campaignStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickmeBannerImageText\":\"clickme-banner-image-text--ST4q4nfjDEA5IEWXx2xn\",\"clickmeBannerImage\":\"clickme-banner-image--JdUsroAEPrMbS3KnarXC\",\"clickmeBannerText\":\"clickme-banner-text--SaMJLA43QeMfB9z4gcYk\"};","import { FC } from 'react';\n\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport { LimitBannerContent } from 'lux/components/ClickmeAutoCampaign/utils';\nimport { ELLIPSIS } from 'lux/modules/symbols';\n\nimport styles from './banner-content.less';\n\nconst checkLimit = (text: string, limit: number) => (text.length > limit ? `${text.slice(0, limit)}${ELLIPSIS}` : text);\n\ninterface BannerContentProps {\n    text: string;\n    title: string;\n}\n\nconst BannerContent: FC<BannerContentProps> = ({ text, title }) => {\n    return (\n        <>\n            <div className={styles.clickmeBannerImageText}>\n                <div className={styles.clickmeBannerImage} />\n                <HSpacing base={3} />\n                <div className={styles.clickmeBannerText}>\n                    <Text size={TextSize.Small} strong>\n                        {checkLimit(title, LimitBannerContent.Title)}\n                    </Text>\n                    <VSpacing base={2} />\n                    <Text size={TextSize.Small}>{checkLimit(text, LimitBannerContent.Text)}</Text>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default BannerContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"clickmeFormError\":\"clickme-form-error--ftiaz4vBfX1zi6DYPbdQ\"};","import { Text as MagritteText, TextStyle, TextTypography } from '@hh.ru/magritte-ui';\nimport Conversion from 'bloko/blocks/conversion';\nimport Text, { TextImportance } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { formatToReactComponent } from 'bloko/common/trl';\n\nimport TypographyMigration from 'lux/components/VacancyCreate/common/TypographyMigration';\nimport translation from 'lux/components/translation';\n\nimport styles from './form-error-hint.less';\n\ninterface FormErrorHintProps {\n    content: string;\n    contentLimit: number;\n}\n\nconst TrlKeys = {\n    hint: {\n        symbol: {\n            zero: 'clickme.autoCampaign.form.input.hint.symbol.zero',\n            one: 'clickme.autoCampaign.form.input.hint.symbol.one',\n            some: 'clickme.autoCampaign.form.input.hint.symbol.some',\n            many: 'clickme.autoCampaign.form.input.hint.symbol.many',\n        },\n        success: 'clickme.autoCampaign.form.input.hint.success',\n        error: 'clickme.autoCampaign.form.input.hint.error',\n    },\n};\n\nconst FormErrorHint: TranslatedComponent<FormErrorHintProps> = ({ trls, content, contentLimit }) => {\n    const getHint = (str: string, limit: number) => {\n        const value = Math.abs(limit - str.length);\n        const formatValues = {\n            '{0}': value,\n            '{1}': (\n                <Conversion\n                    zero={trls[TrlKeys.hint.symbol.zero]}\n                    one={trls[TrlKeys.hint.symbol.one]}\n                    some={trls[TrlKeys.hint.symbol.some]}\n                    many={trls[TrlKeys.hint.symbol.many]}\n                    value={value}\n                    hasValue={false}\n                />\n            ),\n            '{2}': limit,\n        };\n        if (str.length <= limit) {\n            return (\n                <TypographyMigration\n                    Bloko={<Text importance={TextImportance.Secondary}>{null}</Text>}\n                    Magritte={\n                        <MagritteText typography={TextTypography.Label3Regular} style={TextStyle.Secondary}>\n                            {null}\n                        </MagritteText>\n                    }\n                >\n                    {formatToReactComponent(trls[TrlKeys.hint.success], formatValues)}\n                </TypographyMigration>\n            );\n        }\n        return (\n            <div className={styles.clickmeFormError}>\n                {formatToReactComponent(trls[TrlKeys.hint.error], formatValues)}\n            </div>\n        );\n    };\n\n    return getHint(content, contentLimit);\n};\n\nexport default translation(FormErrorHint);\n","import { FormName } from '@hh.ru/analytics-js-events/build/xhh/employer/clickme/auto_campaign_form_submit';\nimport { ButtonName } from '@hh.ru/analytics-js-events/build/xhh/employer/clickme/auto_campaign_next_button_click';\n\nimport { SourceCode } from 'lux/models/clickmeAutoCampaign';\n\ntype GetClickmeLink = (utmCampaign: string) => string;\n\nexport const getClickmeLink: GetClickmeLink = (utmCampaign) =>\n    `https://clickme.hh.ru/new/dashboard/?utm_source=hh.ru&utm_medium=banner&utm_campaign=${utmCampaign}`;\n\nexport const enum CampaignState {\n    Start = 'START',\n    Editing = 'EDITING',\n    Confirmation = 'CONFIRMATION',\n    CreatedButPaymentRequired = 'CREATED_BUT_PAYMENT_REQUIRED',\n    Created = 'CREATED',\n    AlreadyCreated = 'ALREADY_CREATED',\n}\n\nexport const enum Source {\n    Hh = 'HH',\n    YandexDirect = 'YANDEX_DIRECT',\n    VkAds = 'VK_ADS',\n}\n\nexport enum SubSource {\n    Hh = 'HH',\n    YandexSearch = 'YANDEX_SEARCH',\n    YandexNetwork = 'YANDEX_NETWORK',\n    VkAdsVk = 'VK_ADS_VK',\n    VkAdsOk = 'VK_ADS_OK',\n    VkAdsNetwork = 'VK_ADS_NETWORK',\n    VkAdsProject = 'VK_ADS_PROJECT',\n}\n\nexport interface OutgoingSourceConfig {\n    apiSource: Source;\n    subSources: SubSource[];\n}\n\nexport const SUBSOURCE_TO_SOURCE_MAPPING = {\n    [SubSource.Hh]: Source.Hh,\n    [SubSource.YandexSearch]: Source.YandexDirect,\n    [SubSource.YandexNetwork]: Source.YandexDirect,\n    [SubSource.VkAdsVk]: Source.VkAds,\n    [SubSource.VkAdsOk]: Source.VkAds,\n    [SubSource.VkAdsNetwork]: Source.VkAds,\n    [SubSource.VkAdsProject]: Source.VkAds,\n};\n\nexport const SOURCES_CONFIG = {\n    [SourceCode.Hh]: [SubSource.Hh],\n    [SourceCode.HhYandex]: [SubSource.Hh, SubSource.YandexSearch],\n    [SourceCode.HhYandexSocial]: [\n        SubSource.Hh,\n        SubSource.YandexSearch,\n        SubSource.YandexNetwork,\n        SubSource.VkAdsVk,\n        SubSource.VkAdsOk,\n        SubSource.VkAdsNetwork,\n        SubSource.VkAdsProject,\n    ],\n};\n\nexport enum LimitBannerContent {\n    Title = 25,\n    Text = 70,\n}\n\nexport const enum CampaignDataField {\n    Title = 'title',\n    Text = 'text',\n    SourceCode = 'sourceCode',\n}\n\nexport interface CampaignData {\n    [CampaignDataField.Title]: string;\n    [CampaignDataField.Text]: string;\n    [CampaignDataField.SourceCode]: SourceCode;\n}\n\nexport const INIT_STATE_CAMPAIGN_DATA = {\n    [CampaignDataField.Title]: '',\n    [CampaignDataField.Text]: '',\n    [CampaignDataField.SourceCode]: SourceCode.Hh,\n};\n\nexport type ValidationField = CampaignDataField.Title | CampaignDataField.Text;\n\nexport type StartOrValidationCampaignState = CampaignState.Start | CampaignState.Editing | CampaignState.Confirmation;\n\nexport type CampaignErrors = Partial<Record<ValidationField, string>>;\n\ninterface Params {\n    next: ButtonName;\n    form: FormName;\n}\n\nexport const ANALYTICS_PARAMS: Record<StartOrValidationCampaignState, Params> = {\n    [CampaignState.Start]: {\n        next: 'clickme_auto_campaign_run',\n        form: 'clickme_auto_campaign_start',\n    },\n    [CampaignState.Editing]: {\n        next: 'clickme_auto_campaign_save',\n        form: 'clickme_auto_campaign_editing',\n    },\n    [CampaignState.Confirmation]: {\n        next: 'clickme_auto_campaign_pay',\n        form: 'clickme_auto_campaign_confirmation',\n    },\n};\n\nexport const mapOutgoingSourceConfig = (sources: SubSource[]): OutgoingSourceConfig[] =>\n    [...new Set(sources.map((subSourceItem) => SUBSOURCE_TO_SOURCE_MAPPING[subSourceItem]))].map((sourceItem) => ({\n        apiSource: sourceItem,\n        subSources: sources.filter((subSourceItem) => sourceItem === SUBSOURCE_TO_SOURCE_MAPPING[subSourceItem]),\n    }));\n","import React, { FC, ReactNode } from 'react';\n\nimport {\n    BottomSheet,\n    BottomSheetFooter,\n    Button,\n    ButtonMode,\n    NavigationBar,\n    Text,\n    Tooltip,\n    TooltipHover,\n} from '@hh.ru/magritte-ui';\nimport { CrossOutlinedSize24 } from '@hh.ru/magritte-ui/icon';\n\nimport { ActionPropsType, TooltipType } from 'lux/components/FieldTip/types';\n\ninterface TipWrapperProps {\n    tipContent: ReactNode;\n    bottomSheetTitle: string;\n    useBottomSheet: boolean;\n    visible: boolean;\n    onClose: () => void;\n    children: JSX.Element;\n    tooltipType: TooltipType;\n    actionProps?: ActionPropsType;\n    action?: string;\n    actionClose?: string;\n}\n\nconst TipWrapper: FC<TipWrapperProps> = ({\n    children,\n    tipContent,\n    bottomSheetTitle,\n    useBottomSheet,\n    visible,\n    onClose,\n    tooltipType,\n    action,\n    actionProps = {},\n    actionClose,\n}) => {\n    if (useBottomSheet) {\n        return (\n            <>\n                {children}\n                <BottomSheet\n                    visible={visible}\n                    onClose={onClose}\n                    header={\n                        <NavigationBar\n                            title={bottomSheetTitle}\n                            showDivider\n                            right={{ icon: CrossOutlinedSize24, onClick: onClose }}\n                        />\n                    }\n                    footer={\n                        action && (\n                            <BottomSheetFooter>\n                                <Button\n                                    {...actionProps}\n                                    onClick={(event) => {\n                                        actionProps.onClick?.(event);\n                                        onClose();\n                                    }}\n                                    mode={ButtonMode.Secondary}\n                                >\n                                    {action}\n                                </Button>\n                            </BottomSheetFooter>\n                        )\n                    }\n                >\n                    <Text>{tipContent}</Text>\n                </BottomSheet>\n            </>\n        );\n    }\n\n    if (tooltipType === TooltipType.Click) {\n        return (\n            <Tooltip\n                direction=\"right\"\n                alignment=\"top\"\n                activator={children}\n                visible={visible}\n                onClose={onClose}\n                action={action}\n                actionProps={actionProps}\n                actionClose={actionClose}\n            >\n                {tipContent}\n            </Tooltip>\n        );\n    }\n\n    return (\n        <TooltipHover direction=\"right\" alignment=\"top\" activator={children}>\n            {tipContent}\n        </TooltipHover>\n    );\n};\nexport default TipWrapper;\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldTip\":\"field-tip--nsCQFcTP0kamU1Dn9ghc\",\"fieldTipActionWithoutVertPadding\":\"field-tip__action_without-vert-padding--dvED5urR93xIme8koTwN\"};","import { FC, PropsWithChildren, ReactNode } from 'react';\nimport classnames from 'classnames';\n\nimport { Action, ActionMode, useBreakpoint } from '@hh.ru/magritte-ui';\nimport { QuestionCircleOutlinedSize16 } from '@hh.ru/magritte-ui/icon';\n\nimport useOnOffState from 'lux/hooks/useOnOffState';\n\nimport TipWrapper from 'lux/components/FieldTip/TipWrapper';\nimport { ActionPropsType, TooltipType } from 'lux/components/FieldTip/types';\n\nimport styles from './field-tip.less';\n\ninterface FieldTipProps extends PropsWithChildren {\n    tipContent: ReactNode;\n    fieldName: string;\n    tooltipType?: TooltipType;\n    action?: string;\n    actionProps?: ActionPropsType;\n    actionClose?: string;\n    withoutVertPadding?: boolean;\n}\n\nconst FieldTip: FC<FieldTipProps> = ({\n    tipContent,\n    fieldName,\n    children,\n    action,\n    actionProps,\n    actionClose,\n    tooltipType = TooltipType.Hover,\n    withoutVertPadding = false,\n}) => {\n    const [visible, show, hide] = useOnOffState(false);\n    const { isMobile: useBottomSheet } = useBreakpoint();\n\n    return (\n        <div className={styles.fieldTip}>\n            {children}\n            <TipWrapper\n                tipContent={tipContent}\n                bottomSheetTitle={fieldName}\n                useBottomSheet={useBottomSheet}\n                visible={visible}\n                onClose={hide}\n                tooltipType={tooltipType}\n                action={action}\n                actionProps={actionProps}\n                actionClose={actionClose}\n            >\n                <div className={classnames({ [styles.fieldTipActionWithoutVertPadding]: withoutVertPadding })}>\n                    <Action\n                        icon={QuestionCircleOutlinedSize16}\n                        onClick={() => {\n                            if (useBottomSheet || tooltipType === TooltipType.Click) {\n                                show();\n                            }\n                        }}\n                        mode={ActionMode.Secondary}\n                        disablePadding={withoutVertPadding}\n                    />\n                </div>\n            </TipWrapper>\n        </div>\n    );\n};\n\nexport default FieldTip;\n","import React from 'react';\n\nimport { Tooltip } from '@hh.ru/magritte-ui';\n\nexport enum TooltipType {\n    Click = 'click',\n    Hover = 'hover',\n}\n\nexport type ActionPropsType = React.ComponentProps<typeof Tooltip>['actionProps'];\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"row--Op_1Wii6QvpMOpLO91jO\",\"rowDisableOnXs\":\"row_disable-on-xs--jqwecbQ3yj9TQ_foxH49\",\"rowAlignItemsStart\":\"row_align-items-start--HEY5iK39YZRcL5voR0Xg\"};","import { FC, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './styles.less';\n\nexport enum FlexibleRowAlignItems {\n    Start = 'start',\n}\n\nconst FlexibleRow: FC<\n    {\n        alignItems?: FlexibleRowAlignItems;\n        disableOnXS?: boolean;\n    } & PropsWithChildren\n> = ({ children, alignItems, disableOnXS }) => (\n    <div\n        className={classnames(styles.row, {\n            [styles.rowDisableOnXs]: disableOnXS,\n            [styles.rowAlignItemsStart]: alignItems === FlexibleRowAlignItems.Start,\n        })}\n    >\n        {children}\n    </div>\n);\n\nexport default FlexibleRow;\n","import { useCallback, useRef } from 'react';\n\nimport { NumberInput, InputSize } from '@hh.ru/magritte-ui';\nimport FormattedNumericInput from 'bloko/blocks/formattedNumericInput';\nimport { InputChangeHandler } from 'bloko/blocks/inputText';\nimport { NumericInputProps } from 'bloko/blocks/numericInput';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport useRedesigned from 'lux/components/VacancyCreate/useRedesigned';\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    decimalLengthError: 'formatted.numeric.input.error.decimalLength',\n    notNumberError: 'formatted.numeric.input.error.notNumber',\n};\n\nconst CENTS_IN_RUB = 100;\n\nconst convertCentsToRubles = (value: string, decimalLength: number): string => {\n    if (!value) {\n        return '';\n    }\n\n    const parsedValue = parseFloat(value);\n\n    if (isNaN(parsedValue)) {\n        return '';\n    }\n\n    return (parsedValue / CENTS_IN_RUB).toFixed(decimalLength);\n};\n\nconst convertRublesToCents = (value: string): string => {\n    const parsedValue = parseFloat(value);\n\n    if (isNaN(parsedValue)) {\n        return '';\n    }\n\n    return (parsedValue * CENTS_IN_RUB).toFixed();\n};\n\nconst formatPrice = (price: string, decimalMark: string): string => {\n    const firstChar = price.charAt(0);\n    const secondChar = price.charAt(1);\n    let formatted = price;\n\n    if (secondChar && firstChar === '0' && secondChar !== decimalMark) {\n        formatted = formatted.slice(1);\n    }\n\n    return formatted;\n};\n\nexport interface MoneyInputProps extends NumericInputProps {\n    value: string;\n}\n\nconst MoneyInput: TranslatedComponent<MoneyInputProps> = ({\n    decimalLength = 0,\n    onChange,\n    value,\n    decimalMark = ',',\n    trls,\n    ...inputProps\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const redesigned = useRedesigned();\n    const onInputChange = useCallback<InputChangeHandler>(\n        (value, { element }) => {\n            const formattedValue = formatPrice(value, decimalMark);\n            onChange(convertRublesToCents(formattedValue), { element });\n        },\n        [onChange, decimalMark]\n    );\n\n    if (redesigned) {\n        const onInputChange = (value: string) => {\n            const formattedValue = formatPrice(value, decimalMark);\n            if (inputRef.current) {\n                onChange(convertRublesToCents(formattedValue), {\n                    element: inputRef.current,\n                });\n            }\n        };\n        return (\n            <NumberInput\n                ref={inputRef}\n                decimalLength={decimalLength}\n                onChange={onInputChange}\n                value={convertCentsToRubles(value, decimalLength)}\n                decimalMark={[decimalMark]}\n                allowNegative={false}\n                {...inputProps}\n                clearableOnFocus={false}\n                size={InputSize.Medium}\n                prefix={undefined}\n            />\n        );\n    }\n\n    return (\n        <FormattedNumericInput\n            decimalLength={decimalLength}\n            errors={{\n                decimalLength: format(trls[TrlKeys.decimalLengthError], {\n                    '{0}': decimalLength,\n                }),\n                notNumber: trls[TrlKeys.notNumberError],\n            }}\n            onChange={onInputChange}\n            value={convertCentsToRubles(value, decimalLength)}\n            decimalMark={decimalMark}\n            {...inputProps}\n        />\n    );\n};\n\nexport default translation(MoneyInput);\n","// extracted by mini-css-extract-plugin\nexport default {\"rightCell\":\"right-cell--QUVjGczoCGFdeGAaSxdF\"};","import { ComponentProps, FC, ReactElement, ReactNode, isValidElement } from 'react';\n\nimport { Checkbox as MagritteCheckbox, Cell, CellText, useBreakpoint } from '@hh.ru/magritte-ui';\nimport BlokoCheckbox from 'bloko/blocks/checkbox';\n\nimport useRedesigned from 'lux/components/VacancyCreate/useRedesigned';\n\nimport styles from './checkbox-with-label.less';\n\ntype MagritteCheckboxProps = ComponentProps<typeof MagritteCheckbox>;\n\ninterface CheckboxWithLabelProps extends Omit<MagritteCheckboxProps, 'title'> {\n    disabled?: boolean;\n    title?: string | ReactElement;\n    subtitle?: ReactNode;\n    description?: ReactNode;\n    right?: ReactElement;\n    bottom?: ReactElement;\n}\n\nconst CheckboxWithLabel: FC<CheckboxWithLabelProps> = ({\n    children,\n    disabled,\n    title,\n    subtitle,\n    description,\n    right,\n    bottom,\n    ...checkboxProps\n}) => {\n    const redesigned = useRedesigned();\n    const { isXS } = useBreakpoint();\n\n    if (!redesigned) {\n        return (\n            <BlokoCheckbox disabled={disabled} {...checkboxProps}>\n                {children}\n            </BlokoCheckbox>\n        );\n    }\n\n    const { 'data-qa': dataQaCheckbox, ...otherProps } = checkboxProps;\n\n    const getTitle = (title: string | ReactElement) => {\n        if (isValidElement(title)) {\n            return title;\n        }\n        return <CellText type=\"title\">{title}</CellText>;\n    };\n\n    return (\n        <Cell\n            align=\"top\"\n            disabled={disabled}\n            left={<MagritteCheckbox {...otherProps} />}\n            right={!isXS ? right : undefined}\n        >\n            {title && getTitle(title)}\n            {subtitle && <CellText type=\"subtitle\">{subtitle}</CellText>}\n            {description && <CellText type=\"description\">{description}</CellText>}\n            {bottom}\n            {right && isXS && <div className={styles.rightCell}>{right}</div>}\n        </Cell>\n    );\n};\n\nexport default CheckboxWithLabel;\n","import { cloneElement } from 'react';\n\nimport { useBreakpoint } from '@hh.ru/magritte-ui';\n\nimport useRedesigned from 'lux/components/VacancyCreate/useRedesigned';\n\ninterface TypographyMigrationProps {\n    enableMigration?: boolean;\n    Bloko: React.ReactElement;\n    Magritte: React.ReactElement;\n    magritteMobileProps?: Record<string, unknown>;\n    children?: React.ReactNode;\n}\n\n// Временный компонент для фейслифта билдера :)\n// Приоритетный чилдрен у TypographyMigration\n\nconst TypographyMigration: React.FC<TypographyMigrationProps> = ({\n    enableMigration = true,\n    Bloko,\n    Magritte,\n    magritteMobileProps,\n    children,\n}) => {\n    const { isXS, isS } = useBreakpoint();\n    const redesigned = useRedesigned();\n\n    const Component = redesigned ? Magritte : Bloko;\n    const props = redesigned && (isS || isXS) ? magritteMobileProps : undefined;\n\n    if (!enableMigration) {\n        if (!children) {\n            return cloneElement(Bloko, {});\n        }\n        return cloneElement(Bloko, {}, children);\n    }\n\n    if (!children) {\n        return cloneElement(Component, props);\n    }\n    return cloneElement(Component, props || {}, children);\n};\n\nexport default TypographyMigration;\n","import { useSelector } from 'lux/modules/useSelector';\n\nconst useRedesigned = (): boolean => {\n    return useSelector((state) => !!state.vacancyBuilderInputRedesignEnabled);\n};\n\nexport default useRedesigned;\n","import { CancelToken } from 'axios';\n\nimport { CountType, ProductType } from 'lux/models/price/product.types';\nimport { ServiceCode, ServiceItemCode } from 'lux/models/price/productCodes';\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherGetApi {\n        '/shards/product_calculator': {\n            queryParams: {\n                code: ServiceCode | ServiceItemCode;\n                count: string;\n                isAuction?: boolean;\n            };\n            response: ProductType & { count: CountType };\n        };\n    }\n}\n\ninterface FetchCalculatedProductArgs {\n    params: {\n        code: ServiceCode | ServiceItemCode;\n        count: string;\n        isAuction?: boolean;\n    };\n    cancelToken: CancelToken;\n}\n\nconst fetchCalculatedProduct = ({\n    params,\n    cancelToken,\n}: FetchCalculatedProductArgs): Promise<ProductType & { count: CountType }> =>\n    fetcher.get('/shards/product_calculator', {\n        params,\n        cancelToken,\n    });\n\nexport default fetchCalculatedProduct;\n","import { Breakpoint, getBreakpoint } from 'bloko/common/media';\n\nconst addToCartAnimation = (target: EventTarget): void => {\n    const totalCost = document.querySelector('.HH-AddItemToCartAnimation-TotalCost');\n\n    if (!totalCost) {\n        return;\n    }\n\n    if (getBreakpoint() !== Breakpoint.L) {\n        const flyingElement = document.createElement('div');\n        const playTotalCostUpdateAnimation = () => {\n            flyingElement.remove();\n            totalCost.classList.remove('price-cart-update-blink');\n            setTimeout(() => {\n                totalCost.classList.add('price-cart-update-blink');\n            }, 0);\n            flyingElement.removeEventListener('transitionend', playTotalCostUpdateAnimation);\n        };\n        flyingElement.addEventListener('transitionend', playTotalCostUpdateAnimation);\n        flyingElement.classList.add('price-cart-flying-item');\n        const targetRect = (target as HTMLElement).getBoundingClientRect();\n        flyingElement.style.top = `${targetRect.top + window.scrollY}px`;\n        flyingElement.style.left = `${targetRect.left + window.scrollX}px`;\n        document.body.appendChild(flyingElement);\n        const totalCostRect = totalCost.getBoundingClientRect();\n        setTimeout(() => {\n            flyingElement.style.top = `${totalCostRect.top + window.scrollY}px`;\n            flyingElement.style.left = `${totalCostRect.left + window.scrollX}px`;\n        }, 0);\n        flyingElement.classList.add('price-cart-flying-item_animated');\n    } else {\n        totalCost.classList.remove('price-cart-update-blink');\n        setTimeout(() => {\n            totalCost.classList.add('price-cart-update-blink');\n        }, 0);\n    }\n};\n\nexport default addToCartAnimation;\n","import { AxiosError } from 'axios';\nimport { push } from 'connected-react-router';\nimport { CONFLICT } from 'http-status-codes';\nimport { AnyAction, Dispatch } from 'redux';\n\nimport { makeSetStoreField, NonNullableRootState } from '@hh.ru/redux-create-reducer';\n\nimport Debug from 'HHC/Debug';\nimport { updateUrl } from 'Modules/url';\nimport {\n    AutoCampaignDraftResponseData,\n    AutoCampaignResponseData,\n    CampaignData,\n    PromotionAutoCampaignRequestData,\n} from 'lux/components/Clickme/AutoCampaign/utils';\nimport { DEFAULT_ERROR } from 'lux/components/Notifications/DefaultError';\nimport { AUCTION_ERROR, AuctionErrorType } from 'lux/components/Notifications/EmployerAuction';\nimport { ADD_TO_CART_ERROR_NOTIFICATION } from 'lux/components/Notifications/PriceCartError';\nimport { SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY } from 'lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification';\nimport { AuctionData, CreatedAuctionData, CurrentVacancyAuctionCampaign } from 'lux/models/auctionData';\nimport { ProductName } from 'lux/models/clickme/clickmeProducts';\nimport { PriceCart } from 'lux/models/price/priceCart';\nimport { ProductType } from 'lux/models/price/product.types';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport addToCartAnimation from 'lux/requests/price/addToCartAnimation';\n\nconst priceCartAction = makeSetStoreField('priceCart');\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/price/cart/items': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                product: ProductType;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/price/cart/item_list': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                productList: ProductType[];\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherDeleteApi {\n        '/shards/price/cart/item': {\n            queryParams: {\n                itemId: string;\n                employerId?: string;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/price/cart/purchase': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: null;\n            response?: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_cart': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/clickme_auto_campaign/create_cart_with_clickme_auto_campaign_draft': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                title: string;\n                text: string;\n                type: ProductName;\n            };\n            response: AutoCampaignDraftResponseData;\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/clickme_auto_campaign/promotion_create': PromotionAutoCampaignRequestData;\n        '/shards/employer/clickme_auto_campaign/promotion_validate': PromotionAutoCampaignRequestData;\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_cart_with_clickme_auction_campaign_draft': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                bid: number;\n                budget: number;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_clickme_auction_campaign_without_purchase': {\n            queryParams: void;\n            body: {\n                vacancyId: string;\n                bid: number;\n                budget: number;\n            };\n            response: CreatedAuctionData;\n        };\n    }\n    interface FetcherGetApi {\n        '/shards/price/cart/get_items': {\n            queryParams: {\n                employerId?: string;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/employer/create_cart_with_changed_clickme_campaign': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                bid: number;\n                budget: number;\n                campaignId: number;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/vacancy/save_auction_campaign': {\n            queryParams: {\n                vacancyId: string;\n                campaignId: number;\n                budget: number;\n                bid: number;\n            };\n            body: null;\n            response: AuctionData;\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/vacancy/save_and_restore_auction_campaign': {\n            queryParams: {\n                vacancyId: string;\n                campaignId: number;\n                budget: number;\n                bid: number;\n            };\n            body: null;\n            response: Partial<CurrentVacancyAuctionCampaign>;\n        };\n    }\n}\n\nexport const addItem =\n    (product: ProductType, target: EventTarget) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/items', { product }, { params: { employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                    addToCartAnimation(target);\n                } else {\n                    dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n                }\n            },\n            () => {\n                dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n            }\n        );\n    };\n\nexport const addItemList =\n    (productList: ProductType[], target: EventTarget) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/item_list', { productList }, { params: { employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                    addToCartAnimation(target);\n                } else {\n                    dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n                }\n            },\n            () => {\n                dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n            }\n        );\n    };\n\nexport const removeItem =\n    (itemId: string) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.delete(`/shards/price/cart/item`, { params: { itemId, employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                } else {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\nexport const getItems =\n    () =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.get('/shards/price/cart/get_items', { params: { employerId } }).then(\n            ({ priceCart }) => {\n                if (priceCart) {\n                    dispatch(priceCartAction(priceCart));\n                } else {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\ninterface PurchaseParams {\n    hhtmFromLabel: string;\n}\nexport const purchase =\n    ({ hhtmFromLabel }: PurchaseParams) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/purchase', null, { params: { employerId } }).then(\n            (response) => {\n                if (response.data?.purchaseUrl) {\n                    dispatch(\n                        push(\n                            updateUrl(response.data.purchaseUrl, {\n                                hhtmFromLabel,\n                            })\n                        )\n                    );\n                } else {\n                    Debug.log('out error', new Error('Missing purchaseUrl'));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\nexport const createCart =\n    (products: ProductType[], purchaseParams: Record<string, string> = {}, employerId?: string) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_cart', { products, purchaseParams }, { params: { employerId } })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(updateUrl(data.purchaseUrl)));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n    };\n\nexport const createCartWithClickmeAutoCampaignDraft = (\n    products: ProductType[],\n    purchaseParams: Record<string, string> = {},\n    vacancyId: string,\n    campaignData: CampaignData,\n    onSuccess: (autoCampaignDraftResponseData: AutoCampaignDraftResponseData) => void,\n    onError: () => void\n): Promise<void> => {\n    const { activeProductType, title, text } = campaignData;\n\n    return fetcher\n        .post('/shards/employer/clickme_auto_campaign/create_cart_with_clickme_auto_campaign_draft', {\n            products,\n            purchaseParams,\n            vacancyId,\n            title,\n            text,\n            type: activeProductType,\n        })\n        .then(\n            ({ data }) => {\n                if (data) {\n                    onSuccess(data);\n                } else {\n                    onError();\n                }\n            },\n            () => {\n                onError();\n            }\n        );\n};\n\nexport const createClickmeAutoCampaignWithoutPurchase = (\n    vacancyId: number,\n    campaignData: CampaignData,\n    isOnlyValidation: boolean,\n    onSuccess: (autoCampaignRequestData: AutoCampaignResponseData) => void,\n    onError: () => void\n): Promise<void> => {\n    const { activeProductType, title, text } = campaignData;\n\n    return fetcher\n        .post(\n            isOnlyValidation\n                ? '/shards/employer/clickme_auto_campaign/promotion_validate'\n                : '/shards/employer/clickme_auto_campaign/promotion_create',\n            {\n                vacancyId,\n                title,\n                text,\n                type: activeProductType,\n            }\n        )\n        .then(\n            ({ data }) => {\n                if (data) {\n                    onSuccess(data);\n                } else {\n                    onError();\n                }\n            },\n            () => {\n                onError();\n            }\n        );\n};\n\nexport const createCartWithClickmeAuctionCampaignDraft =\n    (\n        products: ProductType[],\n        purchaseParams: Record<string, string> = {},\n        vacancyId: string,\n        bid: number,\n        budget: number\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_cart_with_clickme_auction_campaign_draft', {\n                products,\n                purchaseParams,\n                vacancyId,\n                bid,\n                budget,\n            })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(data.purchaseUrl));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n    };\n\nexport const createClickmeAuctionCampaignWithoutPurchase =\n    (\n        vacancyId: string,\n        bid: number,\n        budget: number,\n        onSuccess: (createdAuctionData: CreatedAuctionData) => void,\n        onConflictError: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_clickme_auction_campaign_without_purchase', {\n                vacancyId,\n                bid,\n                budget,\n            })\n            .then(\n                ({ data }) => {\n                    onSuccess(data);\n                },\n                ({ response }: AxiosError) => {\n                    if (response?.status === CONFLICT) {\n                        dispatch(addNotification(AUCTION_ERROR, { errorType: AuctionErrorType.AlreadyCreated }));\n                        onConflictError();\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                }\n            );\n    };\n\nexport const createCartWithChangedClickmeCampaign =\n    (\n        products: ProductType[],\n        purchaseParams: Record<string, string> = {},\n        vacancyId: string,\n        bid: number,\n        budget: number,\n        campaignId: number\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/employer/create_cart_with_changed_clickme_campaign', {\n                products,\n                purchaseParams,\n                vacancyId,\n                bid,\n                budget,\n                campaignId,\n            })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(data.purchaseUrl));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n\nexport const changedClickmeCampaign =\n    (\n        vacancyId: string,\n        campaignId: number,\n        bid: number,\n        budget: number,\n        callback: (auction: AuctionData) => void,\n        onError?: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/vacancy/save_auction_campaign', null, {\n                params: {\n                    vacancyId,\n                    campaignId,\n                    budget,\n                    bid,\n                },\n            })\n            .then(\n                ({ data }) => {\n                    if (data) {\n                        if (callback) {\n                            callback(data);\n                        }\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                        onError?.();\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                    onError?.();\n                }\n            );\n\nexport const changeAndRestoreAuctionCampaign =\n    (\n        vacancyId: string,\n        campaignId: number,\n        bid: number,\n        budget: number,\n        callback: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void,\n        onError: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/vacancy/save_and_restore_auction_campaign', null, {\n                params: {\n                    vacancyId,\n                    campaignId,\n                    budget,\n                    bid,\n                },\n            })\n            .then(\n                ({ data }) => {\n                    if (data) {\n                        dispatch(addNotification(SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY));\n                        if (callback) {\n                            // в data не приходит bid, но в комопонентах мы используем самое свежее значение,\n                            // поэтому примешиваем в ответ\n                            // хорошо бы чтобы бэк это возвращал и нам не надо было делать \"примесь\"\n                            callback({ ...data, bid });\n                        }\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                        onError?.();\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                    onError?.();\n                }\n            );\n"],"names":["AuctionContentShown","children","bidRating","controls","vacancyId","campaignDraft","currentVacancyAuctionCampaign","campaignCreationStatus","useSelectorNonNullable","auctionData","vacancyCreateDraftId","useSelector","hhtmSourceLabel","useHhtmSourceLabelFromRunActionQs","campaignId","String","undefined","campaignDraftId","campaignStatus","ElementShownAnchor","fn","auctionContentElementShown","draftId","bid","AuctionFieldName","value","budget","competingCampaignBids","JSON","stringify","data","competingCampaignIds","initialBid","initialValue","initialBudget","ratingStatus","bidFrequencyStatus","TrlKeys","title","description","similarVacancy","all","one","some","many","descriptionOneVacancy","BidRating","inversed","inBuilder","trls","bidRatingData","currency","loading","oftenThresholdBid","recommendedBid","similarVacanciesWithEqualBidAmount","similarVacanciesWithHigherBidAmount","isBranchAEnabled","useExperiment","isBranchBEnabled","isBranchCEnabled","isExperimentEnabled","TypographyMigration","enableMigration","Bloko","strong","Magritte","typography","TextTypography","style","TextStyle","formatToReactComponent","similarVacanciesWithEqualBidAmountMoreOne","Element","hasValue","FormatMoney","inCents","similarVacanciesWithHigherBidAmountMoreOne","BidFrequencyStatus","base","className","classnames","styles","H1","scale","LoadingScale","translation","AuctionInput","step","min","onPlusOrMinusClick","onChange","minusDataQa","plusDataQa","inputProps","redesigned","useRedesigned","numberValue","Number","handler","handleMinus","handlePlus","MoneyInput","Button","onClick","mode","ButtonMode","ButtonStyle","ariaLabel","hideLabel","icon","MinusOutlinedSize24","PlusOutlinedSize24","ControlGroupItem","main","IconScale","view","IconView","ClickmeAvailableMoney","availableMoney","groupSeparator","NARROW_NON_BREAKING_SPACE","render","amount","currencyNode","NON_BREAKING_SPACE","AvailableMoney","onUseAvailableMoneyChange","redesign","dispatch","useDispatch","useAvailableMoney","toogleUseAvailableMoney","changeUseAvailableMoney","FieldTip","tipContent","fieldName","CheckboxWithLabel","name","CellText","type","checked","disabled","HoverTip","host","document","body","layer","TipLayer","placement","TipPlacement","IconVerticalAlignment","IconLink","initial","IconColor","Bid","error","props","bidRatingRequestParams","requestParams","cancelFetchBidRatingRef","useRef","fetchBidRatingDebouncedRef","useDebounce","params","cancelToken","axios","cancel","current","setBidRatingLoading","fetcher","then","auctionControlsEdit","getInputChangeAnalyticsParams","setBidRatingData","console","finally","fetchBidRating","isFirstBidRequestRef","useEffect","Budget","numericValue","actualBudget","useFetchProduct","replenishment","AuctionDummyControls","bidError","bidShowError","bidValue","minBid","budgetError","budgetShowError","budgetValue","minBudget","onBidBlur","onBidChange","onBidFocus","onBudgetBlur","onBudgetChange","onBudgetFocus","onBudgetPlusOrMinusClick","renderBidError","renderBudgetError","hideClickmeBalance","default","FormLabel","info","invalid","maxLength","onBlur","onFocus","postfix","Currency","HintOrErrorWrapper","factor","HowItWorksModal","onClose","visible","ModalTitle","ModalContent","size","TextSize","H2","ModalFooter","cancelFetchProductRef","fetchProductDebouncedRef","count","setProductInfoLoading","fetchCalculatedProduct","code","ServiceItemCode","Math","round","toString","isAuction","setProductInfoData","isFirstProductRequestRef","superActualBudget","hhtmSourceLabelFromRunActionQs","state","QS_PARAM_TO_OPEN_AUCTION","QS_PARAM_TO_OPEN_AUCTION_BUDGET_REPLENISH","find","param","runActionArgument","auctionHhtmSourceLabel","setHhtmSourceLabel","useState","setAuctionHhtmlSourceLabel","isActiveCampaignStatus","AuctionCampaignStatus","isPauseCampaignStatus","isCampaignLowBalanceCampaignStatus","isAccountLowBalanceCampaignStatus","getState","getEditCampaignClickAnalyticsParams","action","bidInCents","budgetInCents","budgetDiffInCents","maxBidAmongSimilarVacancies","availableMoneyInCents","debouncedAuctionControlsEdit","debounce","isRestoreAction","bidChanged","checkLimit","text","limit","length","slice","ELLIPSIS","BannerContent","LimitBannerContent","symbol","zero","success","content","contentLimit","str","abs","formatValues","importance","TextImportance","getHint","getClickmeLink","utmCampaign","CampaignState","Source","SubSource","SUBSOURCE_TO_SOURCE_MAPPING","Hh","YandexSearch","YandexDirect","YandexNetwork","VkAdsVk","VkAds","VkAdsOk","VkAdsNetwork","VkAdsProject","SOURCES_CONFIG","SourceCode","CampaignDataField","INIT_STATE_CAMPAIGN_DATA","Title","Text","ANALYTICS_PARAMS","Start","next","form","Editing","Confirmation","mapOutgoingSourceConfig","sources","Set","map","subSourceItem","sourceItem","apiSource","subSources","filter","TipWrapper","bottomSheetTitle","useBottomSheet","tooltipType","actionProps","actionClose","BottomSheet","header","NavigationBar","showDivider","right","CrossOutlinedSize24","footer","BottomSheetFooter","event","TooltipType","Tooltip","direction","alignment","activator","TooltipHover","withoutVertPadding","show","hide","useOnOffState","isMobile","useBreakpoint","Action","QuestionCircleOutlinedSize16","ActionMode","disablePadding","FlexibleRowAlignItems","FlexibleRow","alignItems","disableOnXS","convertCentsToRubles","decimalLength","parsedValue","parseFloat","isNaN","toFixed","convertRublesToCents","formatPrice","price","decimalMark","firstChar","charAt","secondChar","formatted","inputRef","onInputChange","useCallback","element","formattedValue","ref","allowNegative","clearableOnFocus","InputSize","prefix","errors","format","notNumber","subtitle","bottom","checkboxProps","isXS","dataQaCheckbox","otherProps","Cell","align","left","isValidElement","getTitle","magritteMobileProps","isS","Component","cloneElement","vacancyBuilderInputRedesignEnabled","target","totalCost","querySelector","getBreakpoint","Breakpoint","flyingElement","createElement","playTotalCostUpdateAnimation","remove","classList","setTimeout","add","removeEventListener","addEventListener","targetRect","getBoundingClientRect","top","window","scrollY","scrollX","appendChild","totalCostRect","priceCartAction","makeSetStoreField","addItem","product","employerId","priceData","priceEmployerId","priceCart","addToCartAnimation","addNotification","ADD_TO_CART_ERROR_NOTIFICATION","addItemList","productList","removeItem","itemId","DEFAULT_ERROR","getItems","purchase","hhtmFromLabel","response","purchaseUrl","push","updateUrl","Debug","Error","createCart","products","purchaseParams","createCartWithClickmeAutoCampaignDraft","campaignData","onSuccess","onError","activeProductType","createClickmeAutoCampaignWithoutPurchase","isOnlyValidation","createCartWithClickmeAuctionCampaignDraft","createClickmeAuctionCampaignWithoutPurchase","onConflictError","status","CONFLICT","AUCTION_ERROR","errorType","AuctionErrorType","createCartWithChangedClickmeCampaign","changedClickmeCampaign","callback","changeAndRestoreAuctionCampaign","SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY"],"sourceRoot":""}