{"version":3,"file":"76859.8d06e15b351131d80788.js","mappings":";;;gLAaA,SAAgBA,EAASC,KACrBC,OAAOC,qBAAoB,KACvBC,EAAAA,QAAAA,KAAuB,CACnBJ,QAAAA,EACAK,YACI,MAAM,IAAEC,EAAG,GAAEC,EAAE,aAAEC,EAAY,YAAEC,GAAgBR,EAC/C,IAAIS,EAAU,CAACH,GACXD,IACAI,EAAUJ,GAEdK,EAAAA,QAAAA,OAAeX,EAASU,EAASF,EAAcC,W;;;iGCjB/D,MAoCA,EApC0B,CAWtBG,KAAKC,GACD,IAAIC,GAAU,EACd,MAAMd,EAAUa,EAAQb,QAClBe,EAAe,KACbD,IAGAd,EAAQgB,aAAehB,EAAQiB,cAAgBjB,EAAQkB,iBAAiBC,QACxEL,GAAU,EACVD,EAAQR,YACRH,OAAOkB,oBAAoB,SAAUL,GACrCb,OAAOkB,oBAAoB,oBAAqBL,GAChDf,EAAQqB,QAAQC,gBAAkB,SAElCR,GAAU,IAG8B,SAA5CD,EAAQb,QAAQqB,QAAQC,kBACxBpB,OAAOqB,iBAAiB,SAAUR,GAClCb,OAAOqB,iBAAiB,oBAAqBR,GAC7CF,EAAQb,QAAQqB,QAAQC,gBAAkB,QAE9CP,O;;;oMCpCD,IAAKS,GAGX,SAHWA,GAAAA,EAAa,UAAbA,EAAa,YAGxB,CAHWA,IAAAA,EAAa,KAUzB,MAAMC,EAAoD,QAAC,KAAEC,EAAI,SAAEC,EAAQ,UAAEC,GAAW,SACpF,gBACIC,UAAWC,GAAAA,CAAW,YAAa,CAC/B,CAAE,aAAYJ,GAAQ,MAAOA,EAC7B,4BAA6BE,IAC9B,SAEFD,KAPHF,EAAiD,mDAWvD,SAAeM,EAAAA,EAAAA,MAAKN,I;;;wxBChBpB,IAAIO,EAKAA,EAAsBC,iDAAAA,OAAAA,QAuB1B,MAAMC,UAAeC,EAAAA,UACjBnC,QAA8B,KAC9B,oBAAsB,CAClBQ,aAAc,8BAGlB4B,oBACIC,KAAKrC,QAAUqC,KAAKC,MAAMC,QAAU,KAAQC,IAAAA,YAAqBH,MAC7DA,KAAKrC,UACLqC,KAAKrC,QAAQuB,iBAAiB,kBAAmBc,KAAKI,cAAcC,KAAKL,OACzEA,KAAKM,eAIbC,qBACQP,KAAKrC,SACLqC,KAAKM,cAIbE,uBAAuB,MACP,QAAZ,EAAAR,KAAKrC,eAAO,OAAZ,EAAcoB,oBAAoB,kBAAmBiB,KAAKI,eAG9DK,sBAAsBC,GAClB,OAAIA,EAAUC,qBAGPD,EAAUE,SAAWZ,KAAKC,MAAMW,QAAUF,EAAUG,WAAab,KAAKC,MAAMY,UAGvFP,cAAc,MACV,MAAM,GAAEpC,EAAE,aAAEC,EAAY,YAAEC,EAAW,cAAE0C,GAAkBd,KAAKC,MAK9D,IAAIc,EAJAf,KAAKrC,UACLqC,KAAKrC,QAAQqD,MAAMC,OAAU,GAAEjB,KAAKrC,QAAQuD,iBAC5ClB,KAAKrC,QAAQwD,UAAY,IAGzB/C,IACA2C,EAAsB,EAAH,KACZ3C,GAAW,IACdgD,KAAM,QACNC,SAAUnD,EACVoD,MAAOpD,EACPqD,sBAAuBT,EACvBU,kBAAmBpD,EAAYoD,mBAAqB,MAG5D,MAAMC,EAAe,CACjBvD,GAAAA,EACAC,aAAAA,EACAC,YAAa2C,GAGE,QAAnB,EAAApB,SAAmB,OAAnB,EAAsBK,KAAKrC,QAAS8D,GAGxCrB,cAAgB,KACRJ,KAAKrC,UACLqC,KAAKrC,QAAQqD,MAAMC,OAAS,SAIpCS,SACI,OAAO1B,KAAKC,MAAMX,WAAY,oBAhEhCO,EAAM,6CAoEZ,SAAe8B,EAAAA,EAAAA,UAASC,IAAuB,CAC3Cf,SAAUe,EAAMC,OAAOC,SAASjB,SAChCD,OAAQgB,EAAMC,OAAOC,SAASlB,OAC9BD,mBAAoBiB,EAAMjB,mBAC1BG,cAAec,EAAMd,iBAJzB,CAKIjB,G,8lBCrGJ,MAAMkC,EAAgD,IAAyC,IAAxC,GAAE7D,EAAE,IAAE8D,EAAG,GAAEC,EAAE,GAAEC,GAAoB,EAAb9D,GAAW,YACpF,MAAM+D,EAAcF,GAAMC,EACpBE,GAA4BC,EAAAA,EAAAA,8BAA4BC,EAAAA,EAAAA,OAE9D,OAAKH,GAAeC,GACT,SAAC,EAAM,CAAWlE,GAAIA,EAAIgC,QAASkC,GAAtBJ,IAIpB,SAAC,EAAM,CAEH9D,GAAIA,EACJC,aAAa,GACbC,YAAW,GACP6D,GAAAA,EACAC,GAAAA,EACAF,IAAAA,GACG5D,GACL,UAEF,gBACIF,GAAI8D,EACJxC,UAAY,cAAatB,+CAAgDA,2CAA4CA,IACrH,iBAAgBA,EAChB,mBAAiB,oBACjB,oBAAkB,uBAfjB8D,IAVXD,EAA6C,oEA+BnD,W;;;8rBCfA,MAAMQ,EAAsC,IAAuC,IAAtC,MAAEC,EAAK,MAAEC,EAAK,gBAAEC,GAAiB,EAC1E,MAAMC,GAAwBC,EAAAA,EAAAA,iBAAgBC,IAA0C,CACpFC,WAAYN,EAAMO,KAAI,QAAC,KAAEC,GAAM,SAAKA,KAAMC,KAAK,MAC/CP,gBAAAA,IAUJ,OACI,iCACI,SAAC,IAAQ,CAACQ,KAAM,MAChB,iBAAKC,IAAKR,EAAsB,WAC5B,SAAC,EAAAS,UAAS,UAAEX,KACZ,SAAC,IAAQ,CAACS,KAAM,KAChB,eAAI1D,UAAU,mDAAkD,SAC3DgD,EAAMO,KAAI,CAACM,EAAMC,KACd,eAAoB9D,UAAU,gBAAe,UACzC,SAAC,IAAS,CACN+D,gBAAc,EACdlE,KAAMmE,EAAAA,SAAAA,UACNC,QAAS,IAnBV,EAACJ,EAAmBC,IAC3CI,GAAAA,CAAyC,CACrCC,SAAUL,EAAQ,EAClBM,OAAQP,EAAKL,MAAQ,GACrBN,gBAAAA,IAemCmB,CAAmBR,EAAMC,GACxCQ,QAASC,EAAAA,KACTC,WAAS,EACTC,GAAIZ,EAAKa,KAAK,UAEd,0BAAOb,EAAKZ,WATXY,EAAKa,iBArBhC3B,EAAmC,iEAwCzC,SAAe4B,EAAAA,EAAAA,GAAY5B,I;;;yaCtD3B,MAAM6B,EAAsB,CACxBC,EACAC,EACAC,IAEA,CAACF,EAAmBC,EAAYC,GAAaC,QAAO,CAACC,EAAMC,KACnDA,IACAD,EAAQ,GAAEA,KAAQC,KAEfD,IACR,IAEDE,EAAU,CACZC,OAAQ,kCACR,CAACC,EAAAA,EAAAA,gBAAmC,6CACpC,CAACA,EAAAA,EAAAA,gBAAmC,kDACpC,CAACA,EAAAA,EAAAA,mBAAsC,6CACvC,CAACA,EAAAA,EAAAA,kBAAqC,yCACtC,CAACA,EAAAA,EAAAA,qBAAwC,2CACzC,CAACA,EAAAA,EAAAA,iBAAoC,sCACrC,CAACA,EAAAA,EAAAA,eAAkC,0CACnC,CAACC,EAAAA,GAAAA,cAAkC,4CACnC,CAACA,EAAAA,GAAAA,wBAA4C,iDAC7C,CAACA,EAAAA,GAAAA,oBAAwC,oDACzC,CAACA,EAAAA,GAAAA,UAA8B,sCAC/B,CAACA,EAAAA,GAAAA,gBAAoC,6CACrC,CAACA,EAAAA,GAAAA,qBAAyC,4CAC1C,CAACA,EAAAA,GAAAA,iBAAqC,oCACtC,CAACA,EAAAA,GAAAA,uBAA2C,kDAG1CC,EAAoC,IAAc,IAAb,KAAEC,GAAM,EAC/C,MAAMC,GAAeC,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqD,eAC5CE,GAA0BD,EAAAA,EAAAA,IAAatD,GAAUA,EAAMuD,0BAGvDd,GAFaa,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwD,uBAAuBhE,SAGpDiE,EAAAA,EAAAA,QAAqBC,EAAAA,EAAAA,UAA8BA,EAAAA,EAAAA,QAEtE,OACI,SAAC,IAAY,CACT9C,MAAOyC,EAAalC,KAAKwB,IAAW,CAChCL,KAAME,EAAoBC,EAAmBc,EAAyBZ,GACtE9B,MAAOuC,EAAKL,EAAQJ,IACpBvB,KAAMuB,MAEV9B,MAAOuC,EAAKL,EAAQC,QACpBlC,gBAAiB,2BAhBvBqC,EAAiC,iEAqBvC,SAAeZ,EAAAA,EAAAA,GAAYY,I;;;83BCtD3B,MAAMJ,EACM,4BAONY,EAAyD,IAAuB,IAAtB,QAAEC,EAAO,KAAER,GAAM,EAC7E,MAAMxC,GAAQiD,EAAAA,EAAAA,UACV,IACID,EAAQzC,KAAK2C,GACF,EAAP,KAAYA,GAAK,IAAE1C,KAAM0C,EAAMxB,KAAKyB,MAAM,KAAKC,MAAM,GAAG3C,KAAK,UAErE,CAACuC,IAEL,OAAO,SAAC,IAAY,CAAChD,MAAOA,EAAOC,MAAOuC,EAAKL,GAAiBjC,gBAAiB,0BAR/E6C,EAAsD,2DAW5D,SAAepB,EAAAA,EAAAA,GAAYoB,I;;;kOCT3B,MAAMZ,EAAU,CACZkB,KAAM,CACFC,IAAK,aACLC,KAAM,aACNC,KAAM,aACNC,KAAM,cAEVC,MAAO,CACHJ,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,WAIRE,EAA+C,IAM/C,IANgD,SAClDC,GAAW,EAAI,YACfC,EAAW,MACXC,EAAK,KACLtB,EAAI,kBACJuB,GACH,EACG,MAAMC,EAAeD,EAAoB5B,EAAQuB,MAAQvB,EAAQkB,KASjE,OACI,SAAC,IAAU,CACPG,KAAMhB,EAAKwB,EAAaR,MACxBD,KAAMf,EAAKwB,EAAaT,MACxBD,IAAKd,EAAKwB,EAAaV,KACvBG,KAAMjB,EAAKwB,EAAaP,MACxBI,YAZAE,EACQD,IAAa,aAAK,iBAAMG,0BAAwB,WAA2B,QAA3B,EAAEJ,MAAAA,OAAW,EAAXA,EAAsB,GAARC,UAAW,QAAY,GAARA,KAEpFD,EAUHD,SAAUA,EACVE,MAAOA,KAxBbH,EAA4C,sDA6BlD,SAAehC,EAAAA,EAAAA,GAAYgC,I;;;8rBCzC3B,MAAMxB,EACW,CACT,CAAC+B,EAAAA,GAAAA,sBAAmC,gDAFtC/B,EAIW,CACT,CAACgC,EAAAA,GAAAA,gBAA6B,uCAC9B,CAACA,EAAAA,GAAAA,MAAmB,2BACpB,CAACA,EAAAA,GAAAA,OAAoB,4BACrB,CAACA,EAAAA,GAAAA,gBAA6B,sCAC9B,CAACA,EAAAA,GAAAA,UAAuB,+BACxB,CAACA,EAAAA,GAAAA,kBAA+B,wCAChC,CAACA,EAAAA,GAAAA,WAAwB,gCACzB,CAACA,EAAAA,GAAAA,MAAmB,2BACpB,CAACA,EAAAA,GAAAA,WAAwB,gCACzB,CAACA,EAAAA,GAAAA,aAA0B,kCAC3B,CAACA,EAAAA,GAAAA,WAAwB,gCACzB,CAACA,EAAAA,GAAAA,YAAyB,iCAC1B,CAACA,EAAAA,GAAAA,cAA2B,mCAC5B,CAACA,EAAAA,GAAAA,eAA4B,qCAC7B,CAACA,EAAAA,GAAAA,kBAA+B,wCAChC,CAACA,EAAAA,GAAAA,aAA0B,mCApB7BhC,EAsBI,OAGJiC,EAAuD,IAAqB,IAApB,MAAEC,EAAK,KAAE7B,GAAM,EACzE,MAAM,eAAE8B,EAAc,kBAAEC,EAAiB,iBAAEC,IAAqB9B,EAAAA,EAAAA,IAC3DtD,GAAUA,EAAMqF,mBAAmBC,WAElCC,GAAcC,EAAAA,EAAAA,QAAwB,OACrCC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACvC,SAAE1G,EAAQ,OAAED,IAAWsE,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,WAC3D0F,GAAWC,EAAAA,EAAAA,gBAEVC,EAA2BC,IAA8BJ,EAAAA,EAAAA,WAAS,GAEzE,IAAKR,IAAsBD,EACvB,OAAO,KAmBX,OACI,SAAC,IAAI,CAACc,KAAMC,EAAAA,SAAAA,MAAgB,UAAQ,qCAAoC,UACpE,UAAC,IAAI,CAACC,SAlBCC,MAAAA,IAEX,GADAC,EAAMC,iBACDd,EAAYe,QAAjB,CAGAZ,GAAc,GACd,UACUa,EAAAA,EAAAA,GAAwB,IAAIC,SAASjB,EAAYe,UACzD,MAAOG,GACLC,QAAQC,MAAMF,GAChB,QACExB,MAAAA,GAAAA,IACAW,GAASgB,EAAAA,EAAAA,MAAM,GAAE3H,IAAWD,SAMJuC,IAAKgE,EAAa,UAAQ,yBAAwB,WACtE,0BACkC,IAA7BJ,EAAkBjI,QACfiI,EAAkBhE,KAAK0F,IACnB,SAAC,EAAAC,SAAQ,WACL,SAAC,IAAQ,CACLC,eAAgB7B,EAAe8B,SAASH,GACxC,UAAU,qBAAoBA,IAC9BzF,KAAK,QACLsD,MAAOmC,EAAM,UAEb,iBAAMjJ,UAAU,iCAAgC,SAC3CwF,EAAKL,EAAoB8D,SARvBA,KAatBzB,IACG,iCACI,gBAAKxH,UAAU,8BAA6B,UACxC,gBAAKA,UAAU,0BAEnB,kBACI4B,KAAK,SACL4B,KAAO,MAAKgE,EAAiBhE,OAC7BsD,MAAOuC,OAAOnB,MAElB,SAAC,EAAAgB,SAAQ,WACL,SAAC,IAAQ,CACLC,eAAgB3B,EAAiBV,MACjC,UAAU,qBAAoBU,EAAiBhE,OAC/CA,KAAMgE,EAAiBhE,KACvBsD,MAAM,OACNwC,SAAU,IAAMnB,GAA2B,GAAM,UAEjD,iBAAMnI,UAAU,iCAAgC,SAC3CwF,EAAKL,EAAoBqC,EAAiBhE,oBAOnE,gBAAKxD,UAAU,2BAA0B,UACrC,SAAC,IAAM,CACH4B,KAAM2H,EAAAA,WAAAA,OACN,UAAQ,yBACRC,QAAS3B,IAAc,SAAC,IAAO,CAAC4B,MAAOC,EAAAA,aAAAA,QAAuB,SAE7DlE,EAAKL,aAlFxBiC,EAAoD,4DA0F1D,SAAezC,EAAAA,EAAAA,GAAYyC,I;;;gZC/G3B,QAAe,QAAC,OAAEhJ,EAAM,WAAEuL,GAA0B,SAChDpB,MAAAA,IACI,IACI,MAAM,cAAEqB,SAAwBC,EAAAA,EAAAA,IAAY,iDAAkD,CAC1FzL,OAAAA,IAGJ,OAAIuL,GAAqD,IAAvCC,EAAcE,sBAC5B9B,GAAS+B,EAAAA,EAAAA,GAAgBC,EAAAA,MAElB,IAGXhC,GAASiC,EAAAA,EAAAA,IAAgB,CAAEC,UAAWN,MAE/B,GACT,MAAOO,GAGL,MAFAnC,GAASoC,EAAAA,EAAAA,GAAiBD,IAEpBA,M;;;wQC9BlB,MAAMhF,EACK,0BAQLkF,EAAmD,IAA6C,IAA5C,UAAEC,EAAS,MAAExD,EAAK,YAAEyD,EAAW,KAAE/E,GAAM,EACzFgF,GACA,SAAC,IAAI,CACDC,KAAMC,EAAAA,SAAAA,KACNC,QAASC,EAAAA,UAAAA,OACT/K,KAAMgL,EAAAA,SAAAA,QACNC,WAAYC,EAAAA,eAAAA,SACZtB,MAAOuB,EAAAA,UAAAA,QAuBf,OAnBIlE,IACA0D,GACI,SAAC,EAAAS,YAAW,WACR,SAAC,EAAAC,SAAQ,CAAC5G,QAAQ,SAAS1C,KAAK,SAASqB,MAAOuC,EAAKL,GAAgBlB,QAASsG,EAAY,UACtF,SAAC,IAAI,CACDE,KAAMC,EAAAA,SAAAA,MACNC,QAASC,EAAAA,UAAAA,OACTO,YAAaP,EAAAA,UAAAA,OACbnB,MAAOuB,EAAAA,UAAAA,aAOvBV,IACAE,GAAa,SAAC,IAAO,CAACf,MAAOC,EAAAA,aAAAA,SAG1Bc,GA9BLH,EAAgD,qDAiCtD,SAAe1F,EAAAA,EAAAA,GAAY0F,I;;;uVCvD3B,QAA0B,gCAA1B,EAAsE,mCAAtE,EAAqH,kCAArH,EAAiK,gCAAjK,EAAiN,uCAAjN,EAAgQ,8B,6OCoBhQ,MAYMlF,EACK,yCADLA,EAEY,CACViG,KAAM,qDACNC,SAAU,0DAJZlG,EAMO,2CAQPmG,EAAwB,CAACnN,EAAsBoN,IACjDC,IAAAA,wBAAkCrN,E,qWAAS,CAAF,CAAIsN,YAAa,iCAAoCF,IAK5FG,EAAkE,IAA0B,IAAzB,WAAEC,EAAU,KAAEnG,GAAM,EACzF,MAAMwC,GAAWC,EAAAA,EAAAA,eAEX2D,GAAalG,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwJ,aAC1CC,GAAoBnG,EAAAA,EAAAA,IAAatD,IAAK,aAA0B,QAA1B,EAAKA,EAAM0J,uBAAe,aAArB,EAAuBpN,MAElEqN,GAAcC,EAAAA,EAAAA,cAAY,KATZT,IAAAA,EAUhBvD,GAASiE,EAAAA,EAAAA,IAAkC,IAC3CpC,EAAAA,EAAAA,IAxCO,gDAwCaqC,MAAMpD,QAAQC,OAXlBwC,EAYD,CAAEK,WAAAA,EAAYC,kBAAAA,GAXjCL,IAAAA,uBAAiC,sCAAuCD,KAYrE,CAACvD,EAAU4D,EAAYC,IAEpBM,GAAOC,EAAAA,EAAAA,MAyBb,OACI,SAACC,EAAA,EAAkB,CAACC,GAAIhB,EAAuBM,WAAYA,EAAYC,kBAAmBA,EAAkB,UACxG,gBACI7L,UAAWC,GAAAA,CAAWsM,EAAgB,CAClC,CAACA,GAAmBJ,IACrB,UAEH,iBAAKnM,UAAWuM,EAAiB,WAC7B,gBAAKvM,UAAWuM,EAAe,SAAEZ,GA9B7C,iCACI,SAAC,EAAA/H,UAAS,WACN,gBAAK5D,UAAWuM,EAAqB,SAAE/G,EAAKL,QAEhD,SAAC,IAAQ,CAACzB,KAAM,KAChB,UAAC,IAAI,WACA8B,EAAKL,EAAqBkG,UAC1BmB,EAAAA,GACAhH,EAAKL,UAMd,iCACI,SAAC,EAAAvB,UAAS,UAAE4B,EAAKL,MACjB,SAAC,IAAQ,CAACzB,KAAM,KAChB,SAAC,IAAI,UAAE8B,EAAKL,EAAqBiG,SACjC,SAAC,IAAI,UAAE5F,EAAKL,WAaJ,gBAAKnF,UAAWuM,KAChB,SAAC,EAAArB,SAAQ,CAACjH,QAAS8H,EAAY,UAC3B,SAAC,IAAI,CAACtB,KAAMC,EAAAA,SAAAA,MAAgBjB,MAAOuB,EAAAA,UAAAA,mBAhDrDU,EAA+D,uDAwDrE,SAAe/G,EAAAA,EAAAA,GAAY+G,I;;;iUC5G3B,QAA0B,gCAA1B,EAAyE,sCAAzE,EAA4H,oCAA5H,EAAsK,4B,6OCkBtK,MAiBMJ,EAAwB,CAACnN,EAAsBoN,IACjDC,IAAAA,wBAAkCrN,E,qWAAS,CAAF,CAAIsN,YAAa,gCAAmCF,IAQ3FpG,EACK,6CADLA,EAEQ,gDAFRA,EAGW,mDAHXA,EAIM,8CAGNsH,EAAuC,IAAc,IAAb,KAAEjH,GAAM,EAClD,MAAOvG,EAASyN,EAASC,IAAWC,EAAAA,EAAAA,IAAc,GAE5ChB,GAAalG,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwJ,aAC1CC,GAAoBnG,EAAAA,EAAAA,IAAatD,IAAK,aAA0B,QAA1B,EAAKA,EAAM0J,uBAAe,aAArB,EAAuBpN,OAExEmO,EAAAA,EAAAA,YAAU,IAAMH,KAAW,CAACA,IAE5B,MAAMI,GAAcd,EAAAA,EAAAA,cAAY,KAC5BW,IACA9C,EAAAA,EAAAA,IA3CO,sDA2CaqC,MAAMpD,QAAQC,OAClCgE,EAAAA,EAAAA,UAAqB,2CACtB,CAACJ,IAEJ,OACI,SAAC,IAAK,CACFK,QAAS,KA7BGzB,IAAAA,EA8BRuB,IA9BQvB,EA+BO,CAAEK,WAAAA,EAAYC,kBAAAA,GA9BzCL,IAAAA,uBAAiC,qCAAsCD,IAgC/DtM,QAASA,EAAQ,UAEjB,UAACoN,EAAA,EAAkB,CACfC,GAAIhB,EACJM,WAAYA,EACZC,kBAAmBA,EAAkB,WAErC,SAAC,EAAAoB,UAAS,UAAEzH,EAAKL,MACjB,SAAC,IAAQ,CAACzB,KAAM,KAChB,iBAAK1D,UAAWuM,EAAe,WAC3B,SAAC,IAAI,CAACW,QAAM,WAAE1H,EAAKL,MACnB,SAAC,IAAQ,CAACzB,KAAM,KAChB,SAAC,IAAI,UAAE8B,EAAKL,MACZ,SAAC,IAAQ,CAACzB,KAAM,KAChB,gBAAK1D,UAAWuM,EAAkB,UAC9B,gBAAKvM,UAAWuM,UAGxB,SAAC,IAAQ,CAAC7I,KAAM,KAChB,gBAAK1D,UAAWuM,EAAoB,UAChC,SAAC,IAAM,CACH1M,KAAMsN,EAAAA,WAAAA,QACNlJ,QAAS,KApDRsH,IAAAA,EAqDGuB,IArDHvB,EAsDmB,CAAEK,WAAAA,EAAYC,kBAAAA,GArDtDL,IAAAA,uBAAiC,sCAAuCD,IAsDlD,SAED/F,EAAKL,aA/CxBsH,EAAoC,qDAuD1C,SAAe9H,EAAAA,EAAAA,GAAY8H,I;;;sdChG3B,MAAMW,EAAe,IAAwB,IAAvB,SAAEtN,EAAQ,KAAE0F,GAAM,EACpC,MAAM6H,GAAY3H,EAAAA,EAAAA,IAAatD,GAAUA,EAAMiL,YACzCC,GAAW5H,EAAAA,EAAAA,IAAatD,GAAUA,EAAMkL,WAE9C,OAAkB,MAAdD,GAAqBC,IAAaC,EAAAA,EAAAA,UAE9B,SAAC,KAAa,WACV,SAAC,IAAS,CAAC1N,KAAMF,EAAAA,EAAAA,IAAmBI,WAAS,YACxCyN,EAAAA,EAAAA,eAAchI,EAAK4H,EAAa5H,KAAKiI,cAK/C,SAAC,IAAgB,UAAE3N,KAbxBsN,EAAY,2DAgBlBA,EAAa5H,KAAO,CAChBiI,OAAQ,iCAGZL,EAAaM,UAAY,CACrB5N,SAAU6N,IAAAA,KACVnI,KAAMmI,IAAAA,QAGV,SAAehJ,EAAAA,EAAAA,GAAYyI,I;;;sOC/B3B,MAAMQ,EAAuC,IAAkB,IAAjB,SAAE9N,GAAU,EACtD,OACI,iCACI,SAAC,EAAA8D,UAAS,CAACU,QAAQ,KAAI,SAAExE,KACzB,SAAC,IAAQ,CAAC+N,GAAI,EAAGnK,KAAM,QAJ7BkK,EAAoC,6DAS1C,W;;;spBCDA,MAAMzI,EACS,2CADTA,EAEW,6CAFXA,EAGI,oBAHJA,EAIM,yBAGN2I,EAAmD,IAAc,UAAb,KAAEtI,GAAM,EAC9D,MAAMwC,GAAWC,EAAAA,EAAAA,eAEXiC,GAAYxE,EAAAA,EAAAA,IAAatD,IAAK,aAAqC,QAArC,EAAKA,EAAM2L,iBAAiB7D,iBAAS,aAAhC,EAAkC8D,QACrElE,GAAuBpE,EAAAA,EAAAA,IAAatD,IAAK,aAAqC,QAArC,EAAKA,EAAM2L,iBAAiB7D,iBAAS,aAAhC,EAAkCJ,yBAAyB,EACzGmE,GAAmBC,EAAAA,EAAAA,MACnBC,EAAcjE,MAAAA,GAAoE,QAA3D,EAATA,EAAWkE,MAAMC,GAAYA,EAAQC,YAAcL,WAAiB,WAA3D,EAAT,EAAsEzK,KAEpF+K,EAAOJ,EAAe,GAAE3I,EAAKL,OAAuBgJ,KAAiB3I,EAAKL,GAC1EqJ,EAAWL,EAAc3I,EAAKL,GAAkBK,EAAKL,GAO3D,OACI,4BACI,SAAC,EAAAvB,UAAS,CAACU,QAAQ,OAAM,SAAEiK,KAC3B,SAAC,IAAQ,CAAC7K,KAAM,KAChB,SAAC,IAAI,CAACO,QATI,KACdwK,GAAAA,CAAiC,CAAE3E,qBAAAA,IACnC9B,GAAS0G,EAAAA,EAAAA,IAAqB,KAOD,SAAEF,QApBjCV,EAAgD,yFAyBtD,SAAenJ,EAAAA,EAAAA,GAAYmJ,I;;;sOC1CpB,MAAMa,EAAqC,KAC9C,MACMC,GADWlJ,EAAAA,EAAAA,IAAY,QAAC,SAAE4H,GAAU,SAAKA,OACfC,EAAAA,EAAAA,UAE1B,aAAEsB,EAAY,oBAAEC,IAAwBpJ,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2M,4BAE3E,OAAOH,KAAgBE,IAAwBD,I;;;wcCRnD,QAAuB,6BAAvB,EAA+D,kC,eCgC/D,MAEM1J,EACW,+BADXA,EAES,qDAFTA,EAGM,sBAHNA,EAIM,6BAJNA,EAKM,oCAEN6J,EAAwC,IAAc,IAAb,KAAExJ,GAAM,EACnD,MAAMwC,GAAWC,EAAAA,EAAAA,eACX3F,GAAW2M,EAAAA,EAAAA,gBAEX,oBAAEH,EAAmB,YAAEI,IAAgBxJ,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2M,4BACpE7E,GAAYxE,EAAAA,EAAAA,IAAatD,IAAK,aAAqC,QAAhC,EAAAA,EAAM2L,iBAAiB7D,iBAAS,aAAhC,EAAkC8D,OAAQ,MAC7EmB,EAAuB,CACzB,CAAE3L,KAAMgC,EAAKL,GAAoBmJ,UAAWc,EAAAA,GAA+BC,SAAU,SAClFnF,GAGD+D,GAAmBC,EAAAA,EAAAA,OAClBoB,EAAiBC,IAAsBxH,EAAAA,EAAAA,UAASkG,IAChDuB,EAAaC,IAAkB1H,EAAAA,EAAAA,UAAS,KACxC2H,EAAwBC,IAA6B5H,EAAAA,EAAAA,WAAS,IAC9D6H,EAAiBC,IAAsB9H,EAAAA,EAAAA,WAAS,IACjD,SAAE1G,EAAQ,OAAED,IAAWsE,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,WAE3DwN,GAAc9D,EAAAA,EAAAA,cAAY,IAAM2D,GAA0B,IAAQ,IAElEI,GAAkB9J,EAAAA,EAAAA,UACpB,IACI+J,GAAAA,EAAUlJ,IACN6I,GAA0B,GAC1B3H,GACIiI,EAAAA,EAAAA,GAAuB,CACnB7R,OAAQ,CACJ+P,YAAarH,MAGvBoJ,KAAKJ,EAAaA,KAvCZ,MAyChB,CAAC9H,EAAU8H,IAGTK,GAAuBrJ,IACzB2I,EAAe3I,GACfiJ,EAAgBjJ,IAOdkG,IAAUhB,EAAAA,EAAAA,cAAY,KACxBhE,GAAS0G,EAAAA,EAAAA,IAAqB,MAC/B,CAAC1G,IAwBJ,OANA6E,EAAAA,EAAAA,YAAU,KACN4C,EAAe,IACfI,GAAmB,GACnB7C,OACD,CAAC1K,EAAU0K,KAET8B,GAKD,UAAC,IAAK,CAAC7P,UAAWiQ,EAAalC,QAASA,GAAQ,WAC5C,UAAC,EAAAoD,YAAW,YACR,SAAC,EAAAC,WAAU,CAAC/L,QAAQ,KAAI,SAAEkB,EAAKL,MAC/B,SAAC,IAAQ,CAACzB,KAAM,KAChB,SAAC,IAAS,CACN4M,YAAa9K,EAAKL,GAClB2B,MAAO0I,EACPlG,SAAU6G,GACVI,MACI,SAAClG,EAAA,EAAU,CACPC,UAAWoF,EACX5I,MAAO0I,EACPjF,YA/CO,KAC3B4F,GAAoB,aAmDhB,SAAC,EAAAK,aAAY,WACT,SAACC,EAAA,EAAI,CAACzQ,UAAWwB,EAAW,SACvB2N,EAAqB5L,KAAI,QAAC,KAAEC,EAAI,UAAE8K,EAAS,SAAEe,GAAU,SACpD,gBAAqBrP,UAAWwB,EAAe,UAC3C,UAAC,IAAK,CACFsF,MAAQ,GAAEwH,IACVoC,QAASpC,IAAcgB,EACvBhG,SAAU,IAAMiG,EAAmBjB,GAAW,WAE9C,SAAC,IAAI,UAAE9K,IACN6L,IACG,SAAC,IAAI,CAACjH,KAAMC,EAAAA,SAAAA,MAAgBsI,WAAYC,EAAAA,eAAAA,UAAyB,SAC5DvB,QATPf,WAiBtB,UAAC,EAAAuC,YAAW,YACR,SAAC,IAAM,CAAC5M,QAAS+I,GAAQ,SAAExH,EAAKL,MAChC,SAAC,EAAA2L,WAAU,WACP,SAAC,IAAM,CACHxM,QAASC,EAAAA,KACTE,GArEA,MAChB,MAAMsM,EAAYC,GAAAA,CAAU3P,EAAWD,GAIvC,OAHA2P,EAAU3S,OAAO6S,EAAAA,IACb3B,IAAoBF,EAAAA,QAAgC8B,EAAY5B,EAE7DyB,EAAUI,MAgEGC,GACJnN,QA9DH,KACboN,GAAAA,CAAgC,CAC5B/C,UAAWgB,EACXgC,iBAAkB9B,IAEtBK,GAAmB,IA0DHhQ,KAAMsN,EAAAA,WAAAA,QACN3D,QAASoG,IAAmB,SAAC,IAAO,CAACnG,MAAOC,EAAAA,aAAAA,MAAoBiB,QAAS4G,EAAAA,aAAAA,QAAuB,SAE/F/L,EAAKL,aAnDf,MAvET6J,EAAqC,mEAkI3C,SAAerK,EAAAA,EAAAA,GAAYqK,I;;;2OCxKpB,MAAMI,GAAiC,EACjC6B,EAA2B,qBAE3B/C,EAA6B,KAAc,MACpD,MAAMsD,GAAMC,EAAAA,EAAAA,KACNV,EAAYC,GAAAA,CAAUQ,GAE5B,OAAOE,OAAiD,QAA3C,EAACX,EAAU3S,OAAO6S,UAAyB,QAAI7B,K;;;mXCVhE,QAA4B,kC,eCU5B,MAAMjK,EACK,wCADLA,EAEW,8CAFXA,EAGM,yCAGNwM,EAAyC,IAAc,IAAb,KAAEnM,GAAM,EACpD,MAAMoM,GAAoBlM,EAAAA,EAAAA,IAAatD,GAAUA,EAAMyP,8BACjDvD,GAAY5I,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,SAAS4D,MAAM4L,aAErE,OAAKF,GAKD,iCACI,iBAAK5R,UAAWuM,EAAiB,WAC7B,4BACI,SAAC,IAAI,CAACW,QAAM,WAAE1H,EAAKL,MACnB,SAAC,IAAQ,CAACzB,KAAM,KAChB,SAAC,IAAI,UAAE8B,EAAKL,SAEhB,SAAC,IAAM,CACHb,QAASC,EAAAA,KACT1E,KAAMsN,EAAAA,WAAAA,QACN1I,GAAK,mDAAkD6J,gBACvDyD,OAAO,SAAQ,SAEdvM,EAAKL,SAGd,SAAC,IAAQ,CAACzB,KAAM,OApBb,MALTiO,EAAsC,qEA8B5C,SAAehN,EAAAA,EAAAA,GAAYgN,G,qCC9C3B,QAAyB,+BAAzB,EAAqE,qCAArE,EAAuI,sDAAvI,EAA2M,sCAA3M,EAAoQ,4CCY9PxM,EACK,uCADLA,EAEW,6CAFXA,EAGU,4CAGV6M,EAAyC,IAAc,IAAb,KAAExM,GAAM,EACpD,MAAMwC,GAAWC,EAAAA,EAAAA,eAMjB,OACI,iBAAKjI,UAAWuM,EAAc,WAC1B,iBAAKvM,UAAWuM,EAAkB,WAC9B,SAAC,EAAA3I,UAAS,UAAE4B,EAAKL,MACjB,SAAC,IAAQ,CAACzB,KAAM,KAEhB,gBAAK1D,UAAWuM,EAAkC,UAC9C,SAAC,IAAI,UAAE/G,EAAKL,QAEhB,SAAC,IAAQ,CAACzB,KAAM,KAEhB,SAAC,IAAM,CACH7D,KAAMsN,EAAAA,WAAAA,QACNvL,KAAM2H,EAAAA,WAAAA,OACNE,MAAOwI,EAAAA,YAAAA,MACPhO,QAnBE,KACd+D,GAAS0G,EAAAA,EAAAA,IAAqB,KAkBC,SAElBlJ,EAAKL,SAId,gBAAKnF,UAAWuM,KAChB,gBAAKvM,UAAWuM,QA7BtByF,EAAsC,qEAkC5C,SAAerN,EAAAA,EAAAA,GAAYqN,G,6ECrC3B,MAAME,EAAwB,KAC1BC,EAAAA,gBAAAA,eAA+B,WAAY,cAAe,0BAC1D3G,IAAAA,uBAAiC,2BAG/BrG,GACQ,gCADRA,GAEyB,yCAFzBA,GAGsB,sCAHtBA,GAIc,uCAGdiN,GAAoD,IAAc,IAAb,KAAE5M,GAAM,EAC/D,MAAM6M,GAAezK,EAAAA,EAAAA,QAAuB,MACtC0K,GAAcC,EAAAA,EAAAA,yBAAwBnQ,GAAUA,EAAMoQ,QAAS,uBAC/DC,GAAQ/M,EAAAA,EAAAA,IAAatD,IAAK,aAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,aAAxB,EAA0BgL,SAU/D,IARA5F,EAAAA,EAAAA,YAAU,KACFwF,EAAa3J,SACb8C,IAAAA,wBAAkC6G,EAAa3J,QAAS,CACpDlF,KAAM,4CAGf,CAAC6O,IAE8B,OAA9BI,EAAMC,sBAAiCJ,EACvC,OAAO,KAGX,MAAMK,EAA0BF,EAAMC,oBAAsBD,EAAMG,sBAElE,OACI,iBAAKjP,IAAK0O,EAAcrS,UAAU,uBAAsB,WACpD,iBAAKA,UAAU,gCAA+B,WAC1C,iBAAMA,UAAU,+BAChB,4BACI,SAAC,IAAI,CAACkN,QAAM,EAAC,UAAQ,sBAAqB,SACrC1H,EAAKL,OAEV,SAAC,IAAQ,CAACzB,KAAM,KAChB,UAAC,IAAI,CAAC,UAAQ,sBAAqB,UACF,IAA5BiP,GAAiCnN,EAAKL,IACtCwN,EAA0B,IACvBE,EAAAA,EAAAA,QAAOrN,EAAKL,IAAoC,CAC5C,MAAO2N,IAAAA,OAAwB,GAAEH,IAA2B,CACxDI,eAAgBC,EAAAA,iBAMxC,gBAAKhT,UAAU,+BAA8B,UACzC,gBAAKA,UAAU,uCAAsC,UACjD,SAAC,IAAM,CACHsE,QAASC,EAAAA,KACT1E,KAAMsN,EAAAA,WAAAA,QACNlJ,QAASiO,EACTzN,GAAI6N,EACJ,UAAQ,mCAAkC,SAEzC9M,EAAKL,cAhDxBiN,GAAiD,2FAwDvD,UAAezN,EAAAA,EAAAA,GAAYyN,I,4GCnE3B,MAAMa,GACM,SADNA,GAEK,QAGLC,GAA0B,IAAc,IAAb,KAAE1N,GAAM,EACrC,MAAMU,GAAQR,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBzB,QAAQmN,aAChEC,GAAa1N,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmB2L,aAE7DpL,GAAWC,EAAAA,EAAAA,gBACV7F,EAAOiR,IAAYtL,EAAAA,EAAAA,UAAS,OAC5BuL,EAAUC,IAAexL,EAAAA,EAAAA,WAAS,GACnCzF,GAAWoD,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,WAUrD,IARAuK,EAAAA,EAAAA,YAAU,KACN0G,GAAY,KACb,KAEH1G,EAAAA,EAAAA,YAAU,KACNwG,EAAS,QACV,CAAC/Q,KAEC8Q,EACD,OAAO,KAgBX,OACI,iCACI,gBAAKpT,UAAU,mBAAkB,UAC7B,SAACyQ,GAAA,EAAI,CAACnI,SAhBGC,MAAAA,IACjBC,EAAMC,iBACN4K,EAASJ,IACT,UACUpJ,GAAAA,EAAAA,KAAc,2BAA0B3D,KAChD,MAAO6C,GAGL,OAFAf,GAASoC,EAAAA,GAAAA,GAAiBrB,SAC1BsK,EAAS,MAGbA,EAASJ,KAM6B,UAAQ,6BAA4B,SAC7D7Q,IAAU6Q,IACP,iBAAKjT,UAAU,4BAA2B,WACtC,4BACI,SAAC,IAAI,CAACkN,QAAM,WAAE1H,EAAK0N,GAAwB1N,KAAKgO,YAChD,SAAC,IAAQ,CAAC9P,KAAM,KAChB,yBAAM8B,EAAK0N,GAAwB1N,KAAKiO,eAE5C,0BACI,SAAC,IAAM,CACH7R,KAAM2H,EAAAA,WAAAA,OACN,UAAQ,+BACR1J,KAAMsN,EAAAA,WAAAA,QACNmG,SAAUA,EACV7J,MAAOwI,EAAAA,YAAAA,MACPzI,QACIpH,IAAU6Q,KACN,SAAC,KAAI,CACDpT,KAAM+K,GAAAA,UAAAA,OACNH,KAAMC,GAAAA,SAAAA,OACNjB,MAAOuB,GAAAA,UAAAA,QAGlB,SAEAxF,EAAK0N,GAAwB1N,KAAKkO,mBAK/C,iBAAK,UAAQ,6BAA4B,UACpClO,EAAK0N,GAAwB1N,KAAKmO,QACnC,SAAC,KAAS,CAAC5P,gBAAc,EAACO,QAASC,EAAAA,KAAME,GAAG,qBAAoB,SAC3De,EAAK0N,GAAwB1N,KAAK2N,sBAMvD,SAAC,IAAQ,CAACzP,KAAM,QA5EtBwP,GAAuB,iFAiF7BA,GAAwBxF,UAAY,CAChClI,KAAMmI,KAAAA,QAGVuF,GAAwB1N,KAAO,CAC3BgO,QAAS,4BACTC,QAAS,4BACTC,UAAW,uCACXC,MAAO,0DACPR,WAAY,wDAGhB,UAAexO,EAAAA,EAAAA,GAAYuO,I,2EClH3B,SAAyB,+BAAzB,GAAqE,qCAArE,GAAwH,sCCWlH/N,GACK,uCADLA,GAEW,6CAGXyO,GAA6BzV,GACxBqN,IAAAA,wBAAkCrN,EAAS,CAC9CqF,KAAM,gCAIRqQ,GAA+C,IAAc,IAAb,KAAErO,GAAM,EAC1D,OACI,UAAC6G,GAAA,EAAkB,CAACC,GAAIsH,GAA2B5T,UAAWuM,GAAc,WACxE,iBAAKvM,UAAWuM,GAAkB,WAC9B,SAAC,EAAA3I,UAAS,UAAE4B,EAAKL,OACjB,SAAC,IAAQ,CAACzB,KAAM,KAChB,SAAC,IAAI,UAAE8B,EAAKL,UAEhB,gBAAKnF,UAAWuM,SARtBsH,GAA4C,iFAalD,UAAelP,EAAAA,EAAAA,GAAYkP,I,ylBC9B3B,MAAMC,GAAkB,CAAC,EAAG,GAkCtBC,GAAmD,IAA2B,IAA1B,SAAE5P,EAAQ,QAAEtF,GAAS,EAC3E,MAAMmV,GAAkBtO,EAAAA,EAAAA,IAAatD,GAAUA,EAAM4R,kBACrD,IA3BsB7P,CAAAA,GAAiD2P,GAAgB1K,SAASjF,GA2B3F8P,CAAiB9P,GAClB,OAAO,KAEX,MAAM,QAAE+P,EAAO,QAAEC,EAAO,QAAEC,EAAO,SAAEC,GA5BkB,EAACxV,EAASsF,KAC5C,CACf,EAAG,CACC+P,QAASrV,EAAQ,gBACjBsV,QAAStV,EAAQ,gBACjBuV,QAASvV,EAAQ,gBACjBwV,SAAUxV,EAAQ,kBAEtB,EAAG,CACCqV,QAASrV,EAAQ,iBACjBsV,QAAStV,EAAQ,iBACjBuV,QAASvV,EAAQ,iBACjBwV,SAAUxV,EAAQ,oBAGRsF,IAa8BmQ,CAAwBzV,EAASsF,GAC3EoQ,EAAmB,GAAET,GAAgBU,QAAQrQ,GAAY,KAAKA,IACpE,OACI,iCACK+P,MAAAA,OAAO,EAAPA,EAAS5U,QAAS,IACf,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,eAAc,UACzB,SAACuC,GAAA,EAAiB,SACV2R,EAAQ,IAAE,IACdlS,kBAAmBgS,EACnBS,aAAcF,UAK7BJ,MAAAA,OAAO,EAAPA,EAAS7U,QAAS,IACf,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,eAAc,UACzB,SAACuC,GAAA,EAAiB,SACV4R,EAAQ,IAAE,IACdnS,kBAAmBgS,EACnBS,aAAcF,UAK7BH,MAAAA,OAAO,EAAPA,EAAS9U,QAAS,IACf,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,eAAc,UACzB,SAACuC,GAAA,EAAiB,SACV6R,EAAQ,IAAE,IACdpS,kBAAmBgS,EACnBS,aAAcF,UAK7BF,MAAAA,OAAQ,EAARA,EAAU/U,QAAS,IAChB,gBAAKU,UAAU,kCAAiC,UAC5C,gBAAKA,UAAU,eAAc,UACzB,SAACuC,GAAA,EAAiB,SACV8R,EAAS,IAAE,IACfrS,kBAAmBgS,EACnBS,aAAcF,aAhDpCR,GAAgD,yEAyDtD,Y,wCC/EA,MAAMW,GAAwB,EACxBC,GAAyB,EAEzBC,GAAuB,uBAEvBC,GAAgB,IAAc,UAAb,KAAErP,GAAM,GAC3BsP,EAAAA,GAAAA,GAAqBjP,GAAAA,EAAAA,SACrBkP,EAAAA,GAAAA,KAEA,MAAMlW,GAAU6G,EAAAA,EAAAA,IAAatD,GAAUA,EAAMvD,UACvCmW,GAAUtP,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBuN,UAC1DC,GAAoBvP,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBwN,oBACpEC,GAAWxP,EAAAA,EAAAA,IAAatD,GAAUA,EAAM8S,WACxCC,GAAgBzP,EAAAA,EAAAA,IAAatD,GAAUA,EAAM+S,iBAC5CC,EAAeC,IAAoBtN,EAAAA,EAAAA,UACtCmN,EAASL,GAAcK,SAASI,kCAE9BC,EAAiE,QAA3D,GAAG7P,EAAAA,EAAAA,IAAatD,IAAK,aAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,aAAxB,EAA0B8N,iBAAO,QAAI,GAUrEC,EAAmBJ,EAA0BJ,EAAQ5O,MAAM,EAAGgP,GAA3BJ,EAQzC,IAPAnI,EAAAA,EAAAA,YAAU,KACFuI,GAAiBJ,EAAQ1V,OAAS8V,GAElCC,EAAiB,KAEtB,CAACL,EAAQ1V,OAAQ8V,IAEG,IAAnBJ,EAAQ1V,QAAgB2V,EACxB,OAAO,SAAC,GAAuB,IAGnC,GAAuB,IAAnBD,EAAQ1V,OACR,OACI,SAAC,WAAG,CAACmW,KAAG,EAACC,QAAM,WACVlQ,EAAKqP,GAAcrP,KAAKmQ,YAKrC,MAAMC,EAAiBC,KAAKC,IAAIN,EAAgBlW,OAAS,EA7C7B,GA8C5B,OACI,kBAAMU,UAAU,sBAAsB,UAAQ,8BAA8BtB,GAAIqX,GAAAA,GAAW,UACtFd,IACG,iCACI,SAAC,GAAuB,KACxB,SAAC,IAAQ,CAACvR,KAAM,OAGvB8R,EAAgBjS,KAAI,CAACyS,EAAQlS,KAC1B,UAAC,EAAAmS,SAAQ,YACL,SAACC,GAAA,EAAU,CAEPF,OAAQA,EACRG,UAAWZ,EAAOS,EAAOI,YAAYC,OAFhCL,EAAOI,YAAYE,MAI3B,CAAC5B,GAAuBC,IAAwBvL,SAAStF,EAAQ,KAC9D,SAACyS,GAAmB,CAAC1X,QAASA,EAASsF,SAAUL,EAAQ,IAE5D8R,IAAmB9R,IAChB,SAAC0S,GAAA,EAAY,CACTC,UAAU,kBACVC,UAAW9B,GACX+B,YAAa/B,OAbVoB,EAAOI,YAAYE,SAkBtC,SAAC,KAAsB,IACtBnB,IAAiB,gBAAKnV,UAAU,mCAvEvC6U,GAAa,6DA4EnBA,GAAcrP,KAAO,CACjBmQ,SAAU,yCAGdd,GAAcnH,UAAY,CACtBlI,KAAMmI,KAAAA,OAAAA,YAGVkH,GAAcK,SAAW,CACrBI,gCAAiC,kCAGrC,UAAe3Q,EAAAA,EAAAA,GAAYkQ,I,oICzG3B,MAAM1P,GACO,iCAQPyR,GAAqD,IAA+B,IAA9B,SAAEtN,EAAQ,MAAExC,EAAK,KAAEtB,GAAM,EACjF,MAAMqR,EAAS,CAAC,GAAI,GAAI,GAAI,KAO5B,OALKA,EAAOzN,SAAStC,KACjB+P,EAAO7N,KAAKlC,GACZ+P,EAAOC,MAAK,CAACC,EAAGC,IAAMtF,OAAOqF,GAAKrF,OAAOsF,OAIzC,SAAC,KAAY,CACTxT,KAAK,gBACL8F,SAAUA,EACV2N,aAAc,CAAE,UAAW,gCAC3BnQ,MAAOA,EACPoQ,OAAK,EACLC,UAAQ,WAEPN,EAAOtT,KAAKuD,IACT,UAAC,GAAAsQ,mBAAkB,CAAC,UAAU,iBAAgBtQ,IAAqBA,MAAOA,EAAM,UAC3EA,EACAuQ,EAAAA,GACA7R,EAAKL,MAHkD2B,QAlBtE8P,GAAkD,yDA4BxD,UAAejS,EAAAA,EAAAA,GAAYiS,I,gBClC3B,MAAMzR,GAAU,CACZ,CAACmS,GAAAA,GAAAA,iBAAgC,gCACjC,CAACA,GAAAA,GAAAA,YAA2B,2BAC5B,CAACA,GAAAA,GAAAA,WAA0B,0BAC3B,CAACA,GAAAA,GAAAA,WAA0B,0BAQzBC,GAAqD,IAA+B,IAA9B,SAAEjO,EAAQ,MAAExC,EAAK,KAAEtB,GAAM,EACjF,MAAMqR,GAASnR,EAAAA,EAAAA,IAAatD,GAAUA,EAAMoV,yBAAyBC,GAAAA,GAAAA,WACrE,OAAKZ,GAKD,SAAC,KAAY,CACTrT,KAAK,WACL8F,SAAUA,EACVxC,MAAOA,EACPmQ,aAAc,CAAE,UAAW,2BAC3BC,OAAK,EACLC,UAAQ,WAEPN,EAAOtT,KAAKuD,IACT,SAAC,GAAAsQ,mBAAkB,CAAC,UAAU,YAAWtQ,IAAqBA,MAAOA,EAAM,SACtEtB,EAAKL,GAAQ2B,KADqCA,OAbxD,MAHTyQ,GAAkD,yDAwBxD,UAAe5S,EAAAA,EAAAA,GAAY4S,I,gBC/B3B,MAAMpS,GAAU,CACZuS,eAAgB,mBAChB,CAACC,GAAAA,GAAAA,SAA6B,kBAC9B,CAACA,GAAAA,GAAAA,KAAyB,kBAC1B,CAACA,GAAAA,GAAAA,WAA+B,kBAChC,CAACA,GAAAA,GAAAA,MAA0B,kBAC3B,CAACA,GAAAA,GAAAA,OAA2B,mBAC5B,CAACA,GAAAA,GAAAA,MAA0B,qBAGzBC,GAAuD,IAA+B,IAA9B,SAAEtO,EAAQ,MAAExC,EAAK,KAAEtB,GAAM,EACnF,MAAMqR,GAASnR,EAAAA,EAAAA,IAAatD,GAAUA,EAAMoV,yBAAyBK,gBAErE,IAAKhB,EACD,OAAO,KAGX,MAAMiB,EAA+B,mBAAVhR,EAA6B,IAAI+P,EAAQ/P,GAAS+P,EAE7E,OACI,SAAC,KAAY,CACTrT,KAAK,gBACL8F,SAAUA,EACV2N,aAAc,CAAE,UAAW,gCAC3BnQ,MAAOA,EACPoQ,OAAK,EACLC,UAAQ,WAEPW,EAAmBvU,KAAKuD,IACrB,SAAC,GAAAsQ,mBAAkB,CAAC,UAAU,iBAAgBtQ,IAAqBA,MAAOA,EAAM,SAC3EtB,EAAKL,GAAQ2B,KAD0CA,QAnBtE8Q,GAAoD,2DA2B1D,UAAejT,EAAAA,EAAAA,GAAYiT,I,ykBCjC3B,MAAMG,GAAW,IAAc,IAAb,KAAEvS,GAAM,EACtB,MAAM8B,GAAiB5B,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBC,SAASJ,iBAC1EC,GAAoB7B,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBC,SAASH,oBAC7EC,GAAmB9B,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBC,SAASF,mBAC5EwQ,GAAWtS,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBuQ,WAC3DhS,GAAUN,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBzB,UAC1D3E,GAAWqE,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,SAASjB,WACxD4W,GAAuBvS,EAAAA,EAAAA,IAAatD,GAAUA,EAAM8V,iBAAiBC,UACrEC,GAAoB1S,EAAAA,EAAAA,IAAatD,GAAUA,EAAMmJ,gBAAgB8M,aACjEC,GAAaC,EAAAA,GAAAA,iBAEbvQ,GAAWC,EAAAA,EAAAA,eAEXuQ,EAAW,CACbX,cAAe7R,EAAQyS,iBACvBC,SAAU1S,EAAQ2S,YAClBC,cAAe5S,EAAQ6S,iBAGrBC,EAAe,CAACtV,EAAMsD,KACxB,MAAMZ,EAAQsS,EAAShV,GACjBgO,EAAMR,IAAAA,CAAU3P,GACtBmQ,EAAIpQ,OAAS8E,EACbsL,EAAIpT,OAAS,SAAKoT,EAAIpT,QAAM,IAAE,CAACoF,GAAO,CAACsD,KACvCkB,GAASgB,EAAAA,GAAAA,MAAKwI,EAAIL,QAGhB4H,GAAgB/M,EAAAA,EAAAA,cAClB,QAAC,SAAElM,GAAU,SACT,SAAC,KAAS,CACNqX,UAAQ,EACR6B,MAAOC,GAAAA,UAAAA,eACPC,UAAWC,GAAAA,cAAAA,YACXC,kBAAgB,EAChBlX,OAASmF,IAAU,SAACD,GAAA,EAAY,CAACC,MAAOA,IAAU,SAEjDvH,MAGT,KAIA+X,cAAewB,EACfX,SAAUY,EACVV,cAAeW,EACfC,UAAWC,EACXC,QAASC,GACT3B,EAEE4B,EAAsBH,GAAYE,EAAS,iBAAmBN,EAC9DQ,EAAmBvS,EAAehI,OAAS,CAACkI,GAAkBpD,QAAQ0V,GAAYA,MAAAA,OAAO,EAAPA,EAAShT,QAAOxH,OACxG,OACI,iBAAKU,UAAU,qDAAoD,WAC/D,SAAC,GAAY,CACTsJ,SAAWxC,IACPgS,EAAa,gBAAiBhS,GAE9B,MAAMiT,EAAQ,CAACC,GAAAA,WAAAA,GAAeA,GAAAA,WAAAA,GAAc5Q,SAASkP,GAC/C2B,EAAc,yBAAuBF,EAAQ,QAAU,SACvD1B,EAAa0B,EAAS,uBAAwB3B,EACpD5M,IAAAA,uBAAiCyO,EAAY,CACzCrY,KAAM,gBACNsY,SAAUN,EACVO,SAAUrT,EACVuR,WAAAA,KAGRvR,MAAO8S,KAEX,SAAC,GAAW,CACRtQ,SAAWxC,IACPgS,EAAa,WAAYhS,IAE7BA,MAAOwS,IAEV/R,EAAkBjI,OAAS,IAAM2Y,IAC9B,SAACc,EAAa,WACV,UAAC,KAAY,CAAC5B,UAAQ,EAACD,OAAK,EAAC,UAAQ,+BAA8B,UAC9D1R,EAAKuS,GAASvS,KAAKiF,MACnBnD,EAAehI,OAAS,IACrB,iBAAMU,UAAU,sDAAqD,SAChE6Z,UAMrB,SAAC,GAAW,CACRvQ,SAAWxC,IACPgS,EAAa,gBAAiBhS,IAElCA,MAAOyS,QA5FjBxB,GAAQ,mDAkGdA,GAASrK,UAAY,CACjBlI,KAAMmI,KAAAA,QAGVoK,GAASvS,KAAO,CACZ4U,SAAU,wBACV3P,KAAM,wCAGV,UAAe9F,EAAAA,EAAAA,GAAYoT,I,8DC/G3B,MAAMsC,GACoB,yBAqE1B,GAlEqC,KACjC,IAAIC,EAAgC,CAChCC,GAAAA,GAAAA,OACAA,GAAAA,GAAAA,UACAA,GAAAA,GAAAA,KACAA,GAAAA,GAAAA,MACAA,GAAAA,GAAAA,WACAA,GAAAA,GAAAA,gBACAA,GAAAA,GAAAA,IACAA,GAAAA,GAAAA,WACAA,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,WACAA,GAAAA,GAAAA,iBACAA,GAAAA,GAAAA,OACAA,GAAAA,GAAAA,OACAA,GAAAA,GAAAA,YACAA,GAAAA,GAAAA,MACAA,GAAAA,GAAAA,eACAA,GAAAA,GAAAA,MACAA,GAAAA,GAAAA,KAEAC,EAAsD,CACtDD,GAAAA,GAAAA,WACAA,GAAAA,GAAAA,mBACAA,GAAAA,GAAAA,UAGJ,MAAME,GAAuB/U,EAAAA,EAAAA,IAAY,QAAC,SAAEwP,GAAU,SAAKA,EAASmF,OAC9DK,GAAetO,EAAAA,GAAAA,MACfuO,GAAeC,EAAAA,GAAAA,MACrB,GAAKH,GAAwBE,GAAiBD,EAAc,CACxD,MAAMG,EAAUP,EAAa9F,QAAQ+F,GAAAA,GAAAA,OAC/BO,EAAsB,IAAIR,GAChCQ,EAAoBC,OAAOF,EAAU,EAAG,EAAGN,GAAAA,GAAAA,UAC3CD,EAAeQ,EAGnB,GAAIH,EAAc,CACd,MAAMK,EAAgBV,EAAa9F,QAAQ+F,GAAAA,GAAAA,YACrCU,EAAyB,IAAIX,GACnCW,EAAuBF,OAAOC,EAAgB,EAAG,EAAGT,GAAAA,GAAAA,mBACpDD,EAAeW,EAGnB,GAAIP,EAAc,CACd,MAAMQ,EAAqB,CAACX,GAAAA,GAAAA,WAA0BA,GAAAA,GAAAA,MAAqBA,GAAAA,GAAAA,gBAE3ED,EAAeA,EAAalW,QAAQ1F,IAAQwc,EAAmB9R,SAAS1K,KAExE,MAAMyc,EAAmB,CAACZ,GAAAA,GAAAA,YAA2BA,GAAAA,GAAAA,SAAwBA,GAAAA,GAAAA,YAC7EC,EAAyBA,EAAuBpW,QAAQ1F,IAAQyc,EAAiB/R,SAAS1K,KAG1Fgc,IACAJ,EAAeA,EAAalW,QAAQ1F,GAAOA,IAAO6b,GAAAA,GAAAA,mBAGtD,KAD2B7U,EAAAA,EAAAA,IAAatD,GAAUA,EAAMgZ,qBAC/B,CACrB,MAAMC,EAAgBf,EAAa9F,QAAQkG,EAAeH,GAAAA,GAAAA,OAAuBA,GAAAA,GAAAA,OAC3Ee,EAAuB,IAAIhB,GACjCgB,EAAqBP,OAAOM,EAAgB,EAAG,EAAGd,GAAAA,GAAAA,eAA8BA,GAAAA,GAAAA,YAChFD,EAAegB,EAEnB,MAAO,CAAEhB,aAAAA,EAAcE,uBAAAA,I,ylBCtD3B,MAAMe,GAAoB,KACtB,MAAM,QACFvG,EAAO,SACPgD,EAAQ,OACRwD,EACA9T,UAAU,iBAAEF,GAAkB,kBAC9BiU,EAAiB,kBACjBxG,IACAvP,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,qBAC3BiU,GAAc9T,EAAAA,EAAAA,QAAO,MACrBqQ,GAAuBvS,EAAAA,EAAAA,IAAY,QAAC,iBAAEwS,GAAkB,SAAKA,EAAiBC,WAC9EwD,GAAcjW,EAAAA,EAAAA,IAAY,QAAC,SAAE4H,GAAU,SAAKC,GAAAA,EAAAA,YAAuBD,MACnE,aAAEgN,EAAY,uBAAEE,GAA2BoB,KAC3CC,GAAenW,EAAAA,EAAAA,IAAatD,GAAUA,EAAMyZ,eAC5CC,EAAqB7G,GAAwC,IAAnBD,EAAQ1V,OAClDyc,GAAiCrW,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2Z,iCAC9DC,GAAsCtW,EAAAA,EAAAA,IAAatD,GAAUA,EAAM4Z,sCACnEC,GAA0BvW,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2M,0BAA0BF,eAQvF,IANAhC,EAAAA,EAAAA,YAAU,KACFoL,GACAyD,EAAYhT,QAAQwT,mBAEzB,CAACjE,KAECwD,EACD,OACI,gBAAKzb,UAAU,cAAa,UACxB,SAAC,IAAM,CAACmc,EAAE,IAAIC,EAAE,KAAKC,EAAE,KAAI,UACvB,4BACMP,IACE,SAAC,EAAA5S,SAAQ,WACL,SAAC,GAAQ,MAGhB6S,IACG,iCACI,SAAC,IAA0B,KAC3B,SAAC,IAAQ,CAACrY,KAAM,OAGvBsY,IAAuC,SAAC,IAAyB,IACjEC,IACG,iCACI,SAAC,EAAiB,KAClB,SAAC,IAAQ,CAACvY,KAAM,QAGtBoY,IAAsB,SAAC,GAAuB,KAChD,SAAC,EAAiB,KAClB,SAAC,GAAa,KACd,SAAC,IAAG,CAACrG,KAAG,YACJ,SAAC6G,EAAA,EAAU,MAAKd,OAEpB,SAACe,GAAA,EAAuB,WAO5C,MAAMC,IAA6BhV,MAAAA,GAAAA,EAAkBV,OAE/C2V,GACF,SAACC,GAAA,GAAa,CAACC,gBAAiBC,GAAAA,GAAY,UACxC,SAAC,IAAM,CAAC/O,GAAIoK,EAAuB,IAAM,IAAKkE,EAAGlE,EAAuB,IAAM,IAAKmE,EAAE,IAAIC,EAAE,IAAG,UAC1F,SAACQ,EAAA,EAAW,CACR7E,SAAUA,EACVsC,aAAcA,EACdE,uBAAwBA,EACxBsC,aAAa,QAM7B,OACI,SAACC,EAAA,GAA+B,WAC5B,gBAAKpZ,IAAK+X,EAAa1b,UAAU,cAAa,UAC1C,UAAC0c,GAAA,GAAuB,YAClBF,GAA6BC,GAC/B,SAACC,GAAA,GAAa,CAACC,gBAAiBC,GAAAA,GAAY,UACxC,UAAC,IAAM,CAAC/O,GAAIoK,EAAuB,IAAM,IAAKkE,EAAGlE,EAAuB,IAAM,IAAKmE,EAAE,IAAIC,EAAE,KAAI,UAC1FV,IAAe,SAAC,GAA4B,KAC3CG,IACE,SAAC,EAAA5S,SAAQ,WACL,SAAC,GAAQ,MAGhB6S,IACG,iCACI,SAAC,IAA0B,KAC3B,SAAC,IAAQ,CAACrY,KAAM,OAGvBsY,IAAuC,SAAC,IAAyB,IACjEC,IACG,iCACI,SAAC,EAAiB,KAClB,SAAC,IAAQ,CAACvY,KAAM,QAGtBoY,IAAsB,SAAC,GAAuB,KAChD,SAAC,EAAiB,KAClB,SAAC,GAAa,KACd,SAAC,IAAQ,CAACpY,KAAM,KAChB,SAAC4Y,EAAA,EAAU,MAAKd,KACfK,MAAAA,OAAY,EAAZA,EAAcvc,QAAS,IAAK,SAAC,IAAY,CAAC0G,QAAS6V,KACpD,SAAC,IAAuB,IACvB7G,EAAQ1V,OAAS,IAAK,SAACid,GAAA,EAAuB,KAC/C,SAACS,GAAA,EAAsB,SAG9BR,GAA6BC,UAjH5ClB,GAAiB,qEAwHvBA,GAAkBrG,SAAW,CACzBuF,qBAAsB,0BAG1B,a;;;gXClIA,MAAMtV,EAGQ,kCAHRA,EAIc,yCAJdA,EAKK,+BALLA,EAMe,CACb8X,QAAS,+BACTC,eAAgB,sCAChBC,cAAe,qCACfC,OAAQ,8BACRC,SAAU,+BACVC,aAAc,qCACdC,aAAc,sCAbhBpY,EAgBQ,YAhBRA,EAiBO,WAjBPA,EAkBQ,YAGRqY,EAAmC,IAAc,IAAb,KAAEhY,GAAM,EAC9C,MAAMiY,GAAkB/X,EAAAA,EAAAA,IAAatD,IAAK,aAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,aAAxB,EAA0BgW,mBACnEC,GAA4BhY,EAAAA,EAAAA,IAAatD,IAAK,aAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,aAAxB,EAA0BiW,6BAC7Etc,GAASsE,EAAAA,EAAAA,IAAatD,GAAUA,EAAMC,OAAOC,SAASlB,SACtD4G,GAAWC,EAAAA,EAAAA,eAEjB,IAAKwV,EACD,OAAO,KAGX,IAAIC,MAAAA,OAAyB,EAAzBA,EAA2BC,UAAWC,EAAAA,GAAAA,MACtC,OACI,gBAAK5d,UAAU,uBAAsB,UACjC,UAAC,IAAI,WACAwF,EAAKL,IACN,gBAAKnF,UAAU,uBAAsB,UACjC,SAAC,IAAM,CACHH,KAAMsN,EAAAA,WAAAA,QACN7I,QAASC,EAAAA,KACTE,GAAK,GAAEoZ,EAAAA,EAAAA,6BAAmCzc,IAAS,SAElDoE,EAAKL,YAQ9B,GAAIuY,MAAAA,GAAAA,EAA2BI,SAC3B,OACI,gBAAK9d,UAAU,uBAAsB,UACjC,UAAC,IAAI,WACAwF,EAAKL,GAAgB,KACtB,SAAC,IAAgB,CACb2B,MAAOiX,SAASL,EAA0BI,SAAU,IACpDxX,IAAKd,EAAKL,GACVoB,KAAMf,EAAKL,GACXqB,KAAMhB,EAAKL,UAO/B,IAAIuY,MAAAA,OAAyB,EAAzBA,EAA2BC,UAAWC,EAAAA,GAAAA,KAAtC,MAAoDF,GAAAA,EAA2BM,QAAS,CACxF,MAAM,SAAEC,EAAQ,MAAEC,GAAUR,EAA0BM,QAEhDA,EAAUN,EAA0BM,QACpCG,GAAkBC,EAAAA,EAAAA,IAA4BJ,EAASK,EAAAA,GAAAA,IACvDC,GAAkBF,EAAAA,EAAAA,IAA4BJ,EAASK,EAAAA,GAAAA,IACvDE,EAA6BC,QAAQL,IAAoBK,QAAQF,GACjEnB,EAAgBgB,GAAmBG,EACnCG,EAAYT,EAAQS,UAC1B,OACI,gBAAKze,UAAU,uBAAsB,UACjC,4BACI,SAAC,EAAA0e,GAAE,UAAElZ,EAAKL,EAAwB8X,YAClC,SAAC,IAAQ,CAACvZ,KAAM,KAChB,UAAC,IAAI,YACD,4BACI,SAAC,IAAc,CACXoD,MAAO4K,OAAOsM,EAAQW,QACtB5X,kBAA8C,IAA3B2K,OAAOsM,EAAQW,UAErCH,QAAQC,IAAe,KAAIA,IAC1B,KAAIjZ,EAAKL,EAAwB+X,qBAEtCqB,GACG,yBACM,IAAE1L,EAAAA,EAAAA,QAAOrN,EAAKL,EAAwBkY,UAAW,CAC/C,MAAOhU,OAAO8U,QACZ3Y,EAAKL,EAAwBmY,mBAAkBzK,EAAAA,EAAAA,QACjDrN,EAAKL,EAAwBkY,UAC7B,CAAE,MAAOhU,OAAOiV,QACf9Y,EAAKL,EAAwBoY,kBAGtCiB,QAAQrB,KACJ,0BACKtK,EAAAA,EAAAA,QAAOrN,EAAKL,EAAwBgY,eAAgB,CACjD,MAAO9T,OAAO8T,WAMlC,gBAAKnd,UAAU,uBAAsB,UACjC,SAAC,IAAM,CACH,UAAQ,yCACRH,KAAMsN,EAAAA,WAAAA,QACNlJ,QAAS,KACA+D,GAAS4W,EAAAA,EAAAA,IAAW,CAAClB,EAA0BM,YACtD,UAEDa,EAAAA,EAAAA,wBAAuBrZ,EAAKL,EAAwBiY,QAAS,CAC1D,OACI,SAAC0B,EAAA,EAAW,CAACb,SAAUA,EAAUc,SAAS,EAAK,SAC1Cb,eAWrC,OAAO,MA7GLV,EAAgC,yDAgHtC,SAAe7Y,EAAAA,EAAAA,GAAY6Y,GCrJrBrY,EACS,0CADTA,EAEO,wCAGP6Z,EAAkC,IAAc,IAAb,KAAExZ,GAAM,EAC7C,MAAMyZ,GAAWvZ,EAAAA,EAAAA,IAAatD,IAAK,iBAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,OAAO,QAAP,EAAxB,EAA0ByX,aAAK,OAAM,QAAN,EAA/B,EAAiC3Q,YAAI,WAAb,EAAxB,EAAuC4Q,YAE/E,OAAKF,GAKD,yBACKzZ,EAAKL,IACN,iBAAMnF,UAAU,wBAAuB,SAAEif,IACxCzZ,EAAKL,MAPH,MAJT6Z,EAA+B,uDAgBrC,SAAera,EAAAA,EAAAA,GAAYqa,G,mCCjB3B,MAAM7Z,EACS,0CADTA,EAEQ,yCAGRia,EAAqC,IAAc,IAAb,KAAE5Z,GAAM,EAChD,MAAM6Z,GAAW3Z,EAAAA,EAAAA,IAAatD,IAAK,eAA6B,QAA7B,EAAKA,EAAMqF,0BAAkB,OAAU,QAAV,EAAxB,EAA0B4X,gBAAQ,WAAV,EAAxB,EAAoC9Q,QAE5E,OAAK8Q,GAKD,yBACK7Z,EAAKL,GACL6N,EAAAA,IACD,SAAC,IAAS,CAACjP,gBAAc,EAACO,QAASC,EAAAA,KAAME,GAAK,IAAG4a,EAASnZ,QAAQ,UAC9D,4BAASmZ,EAASvY,UAErBkM,EAAAA,IACAH,EAAAA,EAAAA,QAAOrN,EAAKL,GAAmB,CAAE,MAAOka,EAASC,WAX/C,MAJTF,EAAkC,6DAoBxC,SAAeza,EAAAA,EAAAA,GAAYya,G,iCClB3B,MAAMja,EACS,iDADTA,EAEa,kDAFbA,EAGQ,uDAkCd,GAAeR,EAAAA,EAAAA,IA/B4D,IAMrE,IANsE,KACxEa,EAAI,oBACJkN,EAAmB,sBACnBE,EAAqB,YACrB2M,EAAW,WACX3Q,GACH,EACG,OAAI2Q,EACI7M,EAAsB,IACf,8BAAGlN,EAAKL,MAGf,+BACK0N,EAAAA,EAAAA,QAAOrN,EAAKL,GAAoB,CAC7B,MAAO2N,IAAAA,OAAwB,GAAEF,KACjC,MAAOE,IAAAA,OAAwB,GAAEJ,SAM7C9D,GAEI,8BAAI,IAAEiE,EAAAA,EAAAA,QAAOrN,EAAKL,GAAmB,CACjC,MAAO2N,IAAAA,OAAuBJ,EAAoB8M,gBACjDxM,EAAAA,QAGN,Q,yBCvCX,MAAM7N,GACG,kCAGHsa,GAA0C,IAAc,IAAb,KAAEja,GAAM,EACrD,MAAM+Z,GAAc7Z,EAAAA,EAAAA,IAAY,QAAC,SAAE4H,GAAU,SAAKC,EAAAA,EAAAA,YAAuBD,KACnEsB,GAAalJ,EAAAA,EAAAA,IAAY,QAAC,SAAE4H,GAAU,SAAKC,EAAAA,EAAAA,WAAsBD,KACjEoS,GAAcha,EAAAA,EAAAA,IAAY,QAAC,SAAE4H,GAAU,SAAKC,EAAAA,EAAAA,YAAuBD,KACnEmF,GAAQ/M,EAAAA,EAAAA,IAAY,QAAC,mBAAE+B,GAAoB,SAAKA,MAAAA,OAAkB,EAAlBA,EAAoBgL,SACpEkN,GAAmBja,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwd,eAAiBC,EAAAA,GAAAA,KAEvE,GAAKpN,MAAAA,IAAAA,EAAOC,oBACR,OAAO,KAGX,MAAM,oBAAEA,EAAmB,sBAAEE,GAA0BH,EACvD,OAAIiN,EACO,MAGP,iBAAK1f,UAAU,uBAAuB,UAAQ,sDAAqD,WAC/F,gBAAKA,UAAU,4BAA2B,UACtC,SAAC,IAAI,WACD,SAAC,EAAmB,CAChBuf,YAAaA,EACb3Q,WAAYA,EACZ8D,oBAAqBA,EACrBE,sBAAuBA,QAIlChE,GAAc+Q,IACX,gBAAK3f,UAAU,4BAA2B,UACtC,SAAC,IAAM,CACHsE,QAASC,EAAAA,KACT1E,KAAMsN,EAAAA,WAAAA,QACN1I,GAAG,SACHgF,MAAOwI,EAAAA,YAAAA,MACP,UAAQ,mCAAkC,SAEzCzM,EAAKL,YApCxBsa,GAAuC,uEA4C7C,UAAe9a,EAAAA,EAAAA,GAAY8a,ICnDrBK,GAAsB,KAEpB,iCACI,SAAC,EAAW,KACZ,SAAC,EAAU,KACX,SAAC,EAAa,KACd,SAAC,GAAkB,KACnB,SAAC,IAAW,OAPlBA,GAAmB,iEAYzB,a;;;+QCnBA,QAA8B,sCAA9B,EAAuF,4CAAvF,EAA4J,mDAA5J,EAAmO,6C,6OCcnO,MAkBMC,EAAyB,IAAsC,IAArC,gBAAExU,EAAe,YAAEyU,GAAa,EAC5D,MAAM1S,GAAW5H,EAAAA,EAAAA,IAAatD,GAAUA,EAAMkL,YAEvC2S,EAAOC,IAAYnY,EAAAA,EAAAA,WAAkB,IACrCoY,EAAkBC,EAAqBC,IAAqBzT,EAAAA,EAAAA,IAAc,GAE3E0T,GAAe1F,EAAAA,EAAAA,MA4BrB,IA1BA/N,EAAAA,EAAAA,YAAU,KACN,IAAKyT,EACD,OAGJ,MAAMC,EAAeC,GAAAA,EACjB,IACIN,GACKF,IACIG,GACD9hB,OAAOoiB,QAlCM,GAkCmCpiB,OAAOqiB,cApC9C,KA2CzB,OAFAriB,OAAOqB,iBAAiB,SAAU6gB,GAE3B,IAAMliB,OAAOkB,oBAAoB,SAAUghB,KACnD,CAACP,EAAaM,EAAcH,KAE/BtT,EAAAA,EAAAA,YAAU,KACFmT,GACAE,GAAS,KAEd,CAACF,KAECM,EACD,OAAO,KAuBX,OACI,gBACItgB,UAAWC,GAAAA,CAAWsM,EAAoB,CACtC,CAACA,GAA0B0T,EAC3B,CAAC1T,GAAgCyT,IAClC,UAEH,mBAAQhgB,UAAWuM,EAA0BtI,QA3BjC,KAChB,MACM0c,EADyBtiB,OAAOuiB,WAAW,oCAAoCC,QAC5B,EAzDlC,IA2DvBC,GAAAA,CAAU,CACNrL,IAAK,EACLsL,MAAOJ,EACPK,uBAAwBZ,EACxBa,qBAAsBZ,KAE1Ba,EAAAA,EAAAA,GAAcC,SAASC,gBAAkBD,SAASC,cAAcC,OAChEnB,GAAS,GACT1U,IAAAA,uBAAiC,c,qWAAe,CAAF,CAC1C8B,SAAAA,EACAgU,eAAgBjjB,OAAOoiB,QACvBc,cAAeJ,SAASK,KAAK9f,cAC1B6J,KAW+D,UAC9D,SAAC,IAAI,CAACd,KAAMC,EAAAA,SAAAA,MAAgBjB,MAAOuB,EAAAA,UAAAA,MAAiBnL,KAAMgL,EAAAA,SAAAA,UAlEpEkV,EAAsB,uDAwE5B,W;;;6PCxGA,SAAgB,cAAgB,uCAAuC,0BAA4B,qDAAqD,OAAS,+BAA+B,UAAY,mCAAmC,aAAe,uCAAuC,iBAAmB,2CAA2C,oBAAsB,8CAA8C,eAAiB,yCAAyC,eAAiB,yCAAyC,MAAQ,8BAA8B,cAAgB,uCAAuC,YAAc,sC,eCetoB,MAYM5a,EACK,8BADLA,EAGM,CACJsc,IAAK,4BACLC,QAAS,gCACTC,WAAY,mCACZC,MAAO,8BACPC,MAAO,+BAEb,IAEGC,GAAM,SAANA,GAAAA,EAAM,UAANA,EAAM,kBAANA,EAAM,wBAANA,EAAM,cAANA,EAAM,eAANA,IAAAA,EAAM,KAcX,MAAMtL,EAAuD,IAAiD,IAAhD,KAAEhR,EAAI,UAAEiR,EAAS,UAAEC,EAAS,YAAEC,GAAa,EACrG,MAAMoL,GAAiBrc,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwD,uBAAuBhE,SAAUiE,EAAAA,EAAAA,OAC/Emc,GAAetc,EAAAA,EAAAA,IAAatD,GAAUA,EAAM4f,eAC5CC,GAAara,EAAAA,EAAAA,QAAO,OACnBsa,EAASC,IAAcpa,EAAAA,EAAAA,UAAwB,MA6BtD,OAVA8E,EAAAA,EAAAA,YAAU,KACFoV,EAAWvZ,SACX8C,IAAAA,wBAAkCyW,EAAWvZ,QAAS,CAClDlF,KAAM,6BACNiT,UAAW,kBACX2L,WAAY/jB,OAAOiE,SAAS6O,SAGrC,CAAC8Q,IAEGD,GACH,iCACI,gBACIhiB,UAAWC,GAAAA,CAAWsM,EAAAA,cAAsB,CACxC,CAACA,EAAAA,2BAAmCwV,IAExCpe,IAAKse,EAAW,UAEhB,iCACI,SAAC,EAAAre,UAAS,UAAE4B,EAAKL,MACjB,SAAC,IAAQ,CAACzB,KAAM,KAChB,gBAAK1D,UAAWuM,EAAAA,OAAc,SACzB8V,OAAOxL,OAAOiL,GAAQve,KAAK+e,IAEpB,mBAEI,aAAY9c,EAAKL,EAAemd,IAChCtiB,UAAWC,GAAAA,CAAWsM,EAAAA,MAAc,CAChC,CAACA,EAAAA,eAAuB+V,IAAUJ,GAAuB,OAAZA,EAC7C,CAAC3V,EAAAA,aAAqB+V,IAAUJ,IAEpCje,QAAS,KAAMse,OAjD3Bzb,EAiDsCwb,OAhDtC,OAAZJ,IACA1W,IAAAA,uBAAiCkL,EAAW,CACxCD,UAAAA,EACA2L,WAAY/jB,OAAOiE,SAAS6O,KAC5BqR,MAAO1b,IAEX+C,EAAAA,EAAAA,KAlDU,0BAmDe,CACjBrG,KAAMmT,IAETzG,MAAK,KACFiS,EAAWrb,MAEdoF,MAAMpD,QAAQC,SAdPjC,IAAAA,GAiD6C,UAEjC,iBACI9G,UAAWC,GAAAA,CACPsM,EAAAA,UACAA,EAAQ,YAAWkW,GAAAA,CAAWH,UAXjCA,aAoB7B,SAAC,IAAQ,CAAC5e,KAAM,OAEpB,MAtEF8S,EAAoD,yDAyE1D,SAAe7R,EAAAA,EAAAA,GAAY6R,I;;;qRCzH3B,MAAMkM,EAA8B,KAChC,MAAMC,GAAgBjd,EAAAA,EAAAA,IAAatD,GAAUA,EAAMqF,mBAAmBuN,QAAQ1V,SACxEsjB,GAAuBld,EAAAA,EAAAA,IAAatD,GAAUA,EAAM8V,iBAAiBC,UAE3E,OACI,SAAC,IAAW,CACR5M,gBAAiB,CAAEsX,WAAYhd,EAAAA,EAAAA,QAAoB8c,cAAAA,GACnD3C,YAAa4C,KAPnBF,EAA2B,0EAYjC,W;;;gZCTA,MAAMvd,EACY,kCADZA,EAEc,0CAGd6X,EAA8C,IAAc,IAAb,KAAExX,GAAM,EACzD,MAAMyS,GAAuBvS,EAAAA,EAAAA,IAAatD,GAAUA,EAAM8V,iBAAiBC,UACrE2K,GAA2Bpd,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2gB,oBAAoBD,2BAC5EE,GAAyBC,EAAAA,EAAAA,KACzBJ,GAAand,EAAAA,EAAAA,IAAatD,GAAUA,EAAMwD,uBAAuBhE,OACvE,OACI,gBAAK5B,UAAU,qCAAoC,UAC/C,SAAC,IAAM,CACHiE,QAAS,KACLuH,IAAAA,uBAAkC,GAAEqX,wBACpCG,GAAwB/K,IAE5BpY,KAAMsN,EAAAA,WAAAA,QAAmB,SAExB2V,EAA2Btd,EAAKL,GAA0BK,EAAKL,QAd1E6X,EAA2C,mFAoBjD,SAAerY,EAAAA,EAAAA,GAAYqY,I;;;uMCjC3B,QAA0C,mDAA1C,EAAoH,+CAApH,EAAyL,8CAAzL,EAA6P,8CAA7P,EAAiU,8CAAjU,EAAkY,2CAAlY,EAAmc,8C,ICS9bkG,E,YAAiB,SAAjBA,GAAAA,EAAiB,gBAAjBA,EAAiB,gBAAjBA,EAAiB,sBAAjBA,EAAiB,6BAAjBA,IAAAA,EAAiB,KAWtB,MAAMC,EAAc,CAChB,CAACD,EAAkBE,QAAS7W,EAC5B,CAAC2W,EAAkBG,QAAS9W,EAC5B,CAAC2W,EAAkBI,WAAY/W,EAC/B,CAAC2W,EAAkBK,cAAehX,GAGzBiX,EAAY,CAACxJ,EAAAA,WAAAA,IACb4C,EAAc,CAAC5C,EAAAA,WAAAA,GAAeA,EAAAA,WAAAA,GAC9ByJ,EAAgB,CAACzJ,EAAAA,WAAAA,GAAeA,EAAAA,WAAAA,EAAcA,EAAAA,WAAAA,GAuB9C0J,EAAiD,QAAC,SAAE5jB,GAAU,SACvE,gBAAKE,UAAWuM,EAA+B,SAAEzM,KADxC4jB,EAA8C,qEAgB3D,MAAMhH,EAIF,IAAmC,IAAlC,SAAE5c,EAAQ,gBAAE6c,GAAiB,EAC9B,MAAMgH,GAAY/b,EAAAA,EAAAA,UACZ0Z,GAAiB1Z,EAAAA,EAAAA,QAAyB,oBAAXvJ,OAAyBA,OAAOoiB,QAAU,GACzEmD,GAAiBhc,EAAAA,EAAAA,SAAO,GACxBic,GAAOjc,EAAAA,EAAAA,QAAOsb,EAAkBE,QAEhCU,GAAU9X,EAAAA,EAAAA,cAAa+X,IACrBJ,EAAUjb,SAAWmb,EAAKnb,UAAYqb,IACtCJ,EAAUjb,QAAQlH,MAAMiU,IACpBsO,IAAYb,EAAkBG,OAAU,GAAEM,EAAUjb,QAAQsb,cAAgB,GAChFL,EAAUjb,QAAQ1I,UAAYmjB,EAAYY,IAE9CF,EAAKnb,QAAUqb,IAChB,IAEGE,GAAgBjY,EAAAA,EAAAA,cAAY,KAC9B,IAAK4X,EAAelb,UAAYib,EAAUjb,QACtC,OAGJ,MAAMwb,EAAa5C,EAAe5Y,QAAUrK,OAAOoiB,QAC7C0D,EAAe7C,EAAe5Y,QAAUrK,OAAOoiB,QAC/C2D,EAAST,EAAUjb,QAAQ2b,wBAE7BH,GAAcrO,KAAKyO,KAAKF,EAAO3O,MAAQ,EAIvCqO,EAAQZ,EAAkBI,WACnBa,GAAgBtO,KAAK0O,MAAMH,EAAO1O,SAAWrX,OAAOqiB,YAI3DoD,EAAQZ,EAAkBK,eACnBW,GAAcC,IAIrBL,EAAQZ,EAAkBG,QAG9B/B,EAAe5Y,QAAUrK,OAAOoiB,UACjC,CAACqD,IAIEU,GAAcxY,EAAAA,EAAAA,cAAY,KAAM,MAIlC,GAFA4X,EAAelb,SAAU,GAEpBib,EAAUjb,QACX,OAGJ,MAAM4P,GAAaC,EAAAA,EAAAA,iBACnB,GAAIoE,EAAgBvT,SAASkP,GAEzB,YADAwL,EAAQZ,EAAkBE,QAI9B,MAAMgB,EAAST,EAAUjb,QAAQ2b,wBAC3BI,GAA4C,QAA7B,EAACd,EAAUjb,QAAQgc,kBAAU,aAA7B,EAA2CL,wBAAwB5iB,SAAU,EAG9F2iB,EAAO3iB,QAAUgjB,EACjBX,EAAQZ,EAAkBE,QAM1BgB,EAAO3iB,QAAUpD,OAAOqiB,YACxBoD,EAAQZ,EAAkBI,YAM9BM,EAAelb,SAAU,EAIrB0b,EAAO3O,KAAO,EACdqO,EAAQZ,EAAkBI,WACnBc,EAAO1O,QAAUrX,OAAOqiB,YAC/BoD,EAAQZ,EAAkBK,cAE1BO,EAAQZ,EAAkBG,WAE/B,CAAC1G,EAAiBmH,IAErBa,GAAAA,CAAUH,IACVI,EAAAA,EAAAA,GAAUX,GAEV,MAAMY,GAAiBjd,EAAAA,EAAAA,UAEjBkd,GAAoB9Y,EAAAA,EAAAA,cACrBrI,IACQkhB,EAAenc,SAAqC,oBAAnBqc,iBAClCF,EAAenc,QAAU,IAAIqc,eAAeP,IAG5CK,EAAenc,UAEfib,EAAUjb,SAAWmc,EAAenc,QAAQsc,UAAUrB,EAAUjb,SAChEib,EAAUjb,SAAWmc,EAAenc,QAAQsc,UAAUrB,EAAUjb,QAAQgc,YAIxE/gB,GAAOkhB,EAAenc,QAAQuc,QAAQthB,GACtCA,GAAOkhB,EAAenc,QAAQuc,QAAQthB,EAAI+gB,aAG9Cf,EAAUjb,QAAU/E,EACpB6gB,MAEJ,CAACA,IAGL,OACI,iBAAKxkB,UAAWuM,EAA4B,WACxC,gBAAK5I,IAAKmhB,EAAkB,SAAEhlB,KAC9B,gBAAKE,UAAWuM,QA9HtBmQ,EAIL,2DA+HD,W;;;42BCnMA,MAAMwI,EAAoB,OAEpB3I,EAA8B,KAChC,MAAM1d,GAAU6G,EAAAA,EAAAA,IAAatD,GAAUA,EAAMvD,UACvCmV,GAAkBtO,EAAAA,EAAAA,IAAatD,GAAUA,EAAM4R,mBAE/C,QAAEE,EAAO,QAAEC,EAAO,QAAEC,EAAO,SAAEC,GAAa,CAC5CH,QAASrV,EAAQ,qCACjBsV,QAAStV,EAAQ,qCACjBuV,QAASvV,EAAQ,qCACjBwV,SAAUxV,EAAQ,uCAGtB,OACI,gCACKqV,GAAWA,EAAQ5U,OAAS,IACzB,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,gBAAgB,oBAAmBkU,EAAQ,GAAGxV,GAAG,UAC5D,SAAC,IAAiB,OACVwV,EAAQ,IAAE,IACdlS,kBAAmBgS,EACnBS,aAAcyQ,SAK7B/Q,GAAWA,EAAQ7U,OAAS,IACzB,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,gBAAgB,oBAAmBmU,EAAQ,GAAGzV,GAAG,UAC5D,SAAC,IAAiB,OACVyV,EAAQ,IAAE,IACdnS,kBAAmBgS,EACnBS,aAAcyQ,SAK7B9Q,GAAWA,EAAQ9U,OAAS,IACzB,gBAAKU,UAAU,iCAAgC,UAC3C,gBAAKA,UAAU,gBAAgB,oBAAmBoU,EAAQ,GAAG1V,GAAG,UAC5D,SAAC,IAAiB,OACV0V,EAAQ,IAAE,IACdpS,kBAAmBgS,EACnBS,aAAcyQ,SAK7B7Q,GAAYA,EAAS/U,OAAS,IAC3B,gBAAKU,UAAU,kCAAiC,UAC5C,gBAAKA,UAAU,gBAAgB,oBAAmBqU,EAAS,GAAG3V,GAAG,UAC7D,SAAC,IAAiB,OACV2V,EAAS,IAAE,IACfrS,kBAAmBgS,EACnBS,aAAcyQ,aApDpC3I,EAA2B,+EA6DjC,W;;;wGClEA,QAAgB4I,KACZtY,EAAAA,EAAAA,YAAU,KACNxO,OAAOqB,iBAAiB,SAAUylB,GAC3B,KACH9mB,OAAOkB,oBAAoB,SAAU4lB,MAE1C,CAACA,M;;;oUCCR,MAAMC,EAAoB,CACtB,CAACvf,EAAAA,EAAAA,QAAoB0H,EAAAA,EAAAA,UACrB,CAAC1H,EAAAA,EAAAA,SAAqB0H,EAAAA,EAAAA,UAG1B,EAAgBsV,IACZ,MAAMwC,GAAaC,EAAAA,EAAAA,MACbhY,GAAW5H,EAAAA,EAAAA,IAAatD,GAAUA,EAAMkL,WACxC0U,GAAetc,EAAAA,EAAAA,IAAatD,GAAUA,EAAM4f,eAC5CuD,GAAyBF,IAAerD,GAAgB1U,IAAa8X,EAAkBvC,IACvF,yBAAEC,IAA6Bpd,EAAAA,EAAAA,IAAatD,GAAUA,EAAM2gB,uBAClElW,EAAAA,EAAAA,YAAU,KACN,IAAK0Y,EACD,OAOJ,IAAI7O,EAAa,GAAEmM,oBAA6BvV,IAC5CwV,IACApM,EAAY,6BAEhB3J,EAAAA,EAAAA,UAAqB2J,KACtB,CAACpJ,EAAUiY,EAAuB1C,EAAYC,M;;;uNCjB9C,MAAM/N,EAA6B,KACtC,MAAMyQ,GAAsB5d,EAAAA,EAAAA,QAAsB,MAE5C6d,EAAgBjF,GAAAA,EAAS,KACvBgF,EAAoB9c,UACpB8C,IAAAA,YAAsB,gBAAiB,CACnCC,YAAa,4BACbia,WAAYC,KAAKC,UAAUJ,EAAoB9c,WAEnD8c,EAAoB9c,QAAU,QAEnC,KAEGmd,GAAmB7Z,EAAAA,EAAAA,cACpBxD,IACG,MAAMsd,EAActd,EACdud,EAAmB,IAAKP,EAAoB9c,SAAW,IAC7Dqd,EAAiB/c,KAAK8c,EAAYE,QAClCR,EAAoB9c,QAAUqd,EAC9BN,MAEJ,CAACA,KAGL5Y,EAAAA,EAAAA,YAAU,KACNxO,OAAOqB,iBAAiB,4BAA6BmmB,GAE9C,KACHxnB,OAAOkB,oBAAoB,4BAA6BsmB,MAE7D,CAACA,M;;;yKC5CD,IAAKI,GAOX,SAPWA,GAAAA,EAAkB,iDAAlBA,EAAkB,gDAAlBA,EAAkB,yCAAlBA,EAAkB,+BAAlBA,EAAkB,iCAAlBA,EAAkB,oCAO7B,CAPWA,IAAAA,EAAkB,KASvB,MAAMC,EAA8B,CAACC,EAAAA,GAAAA,oBAAiCA,EAAAA,GAAAA,wBAItE,IAAKC,EAQAC,GAFX,SANWD,GAAAA,EAAa,kBAAbA,EAAa,sCAAbA,EAAa,2BAAbA,EAAa,wCAAbA,EAAa,uEAMxB,CANWA,IAAAA,EAAa,KAiBxB,SATWC,GAAAA,EAAc,wBAAdA,EAAc,kBAAdA,EAAc,UAAdA,EAAc,4BAAdA,EAAc,kBAAdA,EAAc,gBAAdA,EAAc,QAAdA,EAAc,YASzB,CATWA,IAAAA,EAAc,M;;;6HCnBnB,MACMC,EAAyB,IACzBC,EAAsB,GAS5B,IAAKC,EAKAC,EAMAC,EAKArI,GAbX,SAHWmI,GAAAA,EAAa,YAAbA,EAAa,cAGxB,CAHWA,IAAAA,EAAa,KASxB,SAJWC,GAAAA,EAAuB,cAAvBA,EAAuB,iBAAvBA,EAAuB,kBAIlC,CAJWA,IAAAA,EAAuB,KASlC,SAHWC,GAAAA,EAAoB,YAApBA,EAAoB,cAG/B,CAHWA,IAAAA,EAAoB,KAQ/B,SAHWrI,GAAAA,EAAe,QAAfA,EAAe,QAG1B,CAHWA,IAAAA,EAAe,M;;;kEChCpB,IAAKsI,E,iBAOX,SAPWA,GAAAA,EAAQ,yBAARA,EAAQ,mDAARA,EAAQ,gDAARA,EAAQ,sDAARA,EAAQ,+BAARA,EAAQ,eAOnB,CAPWA,IAAAA,EAAQ,M;;;8ICiBpB,QACIC,GAEA/c,EAAAA,EAAAA,aAAqB,yBAA0B+c,I;;;mFCpB5C,MAAM1F,EAAiB/iB,GACnBA,aAAmB0oB,a;;;6dCa9B,MAAMC,EAAc,CAChBC,EACAC,IAC6B3E,OAAOxL,OAAOkQ,EAAeE,UAAY,IAAI7Y,KAAK4Y,GAEtEE,EAAgB,CAACH,EAA6BI,IACvDL,EAAYC,GAAiBK,GAAeA,EAAWD,OAASA,IAEvDE,EAAerJ,IACxB,MAAMsJ,EAAaJ,EAAclJ,EAASuJ,EAAAA,GAAAA,YAC1C,OAAOD,EAAavJ,SAASuJ,EAAWE,MAAO,IAAM,MAG5CC,EAAoBzJ,IAC7B,MAAM0J,EAAaR,EAAclJ,EAASuJ,EAAAA,GAAAA,cAC1C,OAAOG,EAAa3J,SAAS2J,EAAWF,MAAO,IAAM,MAG5CG,EAA4BP,GACrCA,EAAWD,OAASI,EAAAA,GAAAA,aAKXK,EAA2B5J,IAAoB,aACJ,QADI,EACxDkJ,EAAclJ,EAASuJ,EAAAA,GAAAA,qBAA6B,aAApD,EAAsDrS,UAE7C2S,EAA4B7J,GACrC8I,EAAY9I,GAAS,QAAC,KAAEmJ,GAAM,SAAKW,EAAAA,GAAAA,SAA2BX,MAErDY,EAA0B/J,IAAoB,aACtB,QADsB,EACvD6J,EAAyB7J,UAAQ,aAAjC,EAAmC9I,UAE1B8S,EAAqBhK,IAAoB,aACG,QADH,EAClDkJ,EAAclJ,EAASuJ,EAAAA,GAAAA,sBAA8B,aAArD,EAAuDrS,UAE9C+S,EAAwBjK,IACjC,MAAMkK,EAAqBL,EAAyB7J,GACpD,OAAOkK,EAAqBnK,SAASmK,EAAmBV,MAAO,IAAM,MAG5DW,EAAyBnK,IAClC,MAAMoK,EAAYpK,EAAQmJ,OAAShB,EAAAA,GAAAA,yBAC7BkC,EAAUrK,EAAQmJ,OAAShB,EAAAA,GAAAA,cAA4Be,EAAclJ,EAASuJ,EAAAA,GAAAA,cACpF,OAAOa,GAAaC,GAIXC,EAAwC,CACjDtK,EACAuK,KAEA,OA/BuCxB,EA+BL/I,EA9BlCqE,OAAOxL,OAAOkQ,EAAeE,UAAY,IAAI7iB,OAAOujB,IA8BTvjB,QAAQgjB,IAAe,MAC9D,MAAMoB,GAA+B,QAAnB,EAAApB,EAAWlS,gBAAQ,aAAnB,EAAqBuT,mBAAoB,GAC3D,OAA4B,IAArBD,EAAUlpB,QAAgBkpB,EAAU,KAAOD,KAjCfxB,IAAAA,GAqC9B3I,EAA8B,CAACJ,EAAsBuK,KAC9D,MAAMG,EAAcJ,EAAsCtK,EAASuK,GACnE,OAAOG,EAAYppB,OAASye,SAAS2K,EAAY,GAAGlB,MAAO,IAAM,MAGxDmB,EAAyB3K,IAClC,MAAM4K,EAA0B5K,EAAQmJ,OAAShB,EAAAA,GAAAA,eAC3C0C,EAA0Bf,EAAAA,GAAAA,SAA2B9J,EAAQmJ,MACnE,OAAOyB,GAA2BC,GAGzBC,EAAoB9K,IAAkC,MAC/D,OAAOA,EAAQmJ,OAASI,EAAAA,GAAAA,WAAmD,QAAxB,EAACvJ,EAAQ+K,uBAAe,OAAvB,EAAyBC,UAGpEC,EAAoBjL,IAAkC,MAC/D,OAAOA,EAAQmJ,OAASI,EAAAA,GAAAA,SAA2B/I,QAA+B,QAAxB,EAACR,EAAQ+K,uBAAe,aAAvB,EAAyBC,UAG3EE,EAAmBlL,GACrBA,EAAQmJ,OAAShB,EAAAA,GAAAA,OAGfgD,EAAmBnL,KACnBkJ,EAAclJ,EAASuJ,EAAAA,GAAAA,eAGvB6B,EAAoBpL,GACtBA,EAAQmJ,OAAShB,EAAAA,GAAAA,QAGfkD,EAAuBrL,GAChCkJ,EAAclJ,EAASuJ,EAAAA,GAAAA,eAEd+B,EAAqBtL,GAAkCkI,EAAAA,GAAAA,SAAqClI,EAAQmJ,MAIpGoC,EAA2BvL,IACpC,GAAIA,MAAAA,GAAAA,EAASwL,QAAkCxL,EAAQwL,SAHuB7C,EAAAA,EAAAA,uBAI1E,OAAO,EAEX,MAAMxJ,EAAgBa,GAAWyJ,EAAiBzJ,GAClD,QAASb,GAAiBA,GAAiBsM,EAAAA,IAGlCC,EAAkB1L,KAClBkJ,EAAclJ,EAASuJ,EAAAA,GAAAA,aAMvBoC,EAAsB3L,IAC/B,MAAMkK,EAAqBpB,EAAY9I,GAAUoJ,GAAeU,EAAAA,GAAAA,SAA2BV,EAAWD,QACtG,OAAOe,EAAqBA,EAAmBf,KAAO,O;;;uIC7H1D,MAqCA,EArC4BpV,IACxB,MAAM6X,EAAYzI,SAAS0I,cAAc,wCAEzC,GAAKD,EAIL,IAAIrR,EAAAA,EAAAA,mBAAoByB,EAAAA,WAAAA,EAAc,CAClC,MAAM8P,EAAgB3I,SAAS4I,cAAc,OACvCC,EAA+B,KACjCF,EAAcG,SACdL,EAAUM,UAAUD,OAAO,2BAC3BE,YAAW,KACPP,EAAUM,UAAUE,IAAI,6BACzB,GACHN,EAAcvqB,oBAAoB,gBAAiByqB,IAEvDF,EAAcpqB,iBAAiB,gBAAiBsqB,GAChDF,EAAcI,UAAUE,IAAI,0BAC5B,MAAMC,EAActY,EAAuBsS,wBAC3CyF,EAActoB,MAAMiU,IAAO,GAAE4U,EAAW5U,IAAMpX,OAAOoiB,YACrDqJ,EAActoB,MAAM8oB,KAAQ,GAAED,EAAWC,KAAOjsB,OAAOksB,YACvDpJ,SAASK,KAAKgJ,YAAYV,GAC1B,MAAMW,EAAgBb,EAAUvF,wBAChC8F,YAAW,KACPL,EAActoB,MAAMiU,IAAO,GAAEgV,EAAchV,IAAMpX,OAAOoiB,YACxDqJ,EAActoB,MAAM8oB,KAAQ,GAAEG,EAAcH,KAAOjsB,OAAOksB,cAC3D,GACHT,EAAcI,UAAUE,IAAI,wCAE5BR,EAAUM,UAAUD,OAAO,2BAC3BE,YAAW,KACPP,EAAUM,UAAUE,IAAI,6BACzB,K;;;m5CCPX,MAAMM,GAAkBC,EAAAA,EAAAA,mBAAkB,aAiJ7BC,EACT,CAAC5M,EAAsBjM,IACvB,CAAC/J,EAA+B6iB,KAC5B,MAAMjf,EAAaif,IAAWC,UAAUC,gBACxC,OAAOlhB,EAAAA,EAAAA,KAAa,2BAA4B,CAAEmU,QAAAA,GAAW,CAAE5f,OAAQ,CAAEwN,WAAAA,KAAgBsE,MACrF,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAKoE,WACLhjB,EAAS0iB,EAAgB9D,EAAKoE,aAC9BC,EAAAA,EAAAA,GAAmBlZ,IAEnB/J,GAAS+B,EAAAA,EAAAA,GAAgBmhB,EAAAA,OAGjC,KACIljB,GAAS+B,EAAAA,EAAAA,GAAgBmhB,EAAAA,QAK5BC,EACT,CAACC,EAA4BrZ,IAC7B,CAAC/J,EAA+B6iB,KAC5B,MAAMjf,EAAaif,IAAWC,UAAUC,gBACxC,OAAOlhB,EAAAA,EAAAA,KAAa,+BAAgC,CAAEuhB,YAAAA,GAAe,CAAEhtB,OAAQ,CAAEwN,WAAAA,KAAgBsE,MAC7F,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAKoE,WACLhjB,EAAS0iB,EAAgB9D,EAAKoE,aAC9BC,EAAAA,EAAAA,GAAmBlZ,IAEnB/J,GAAS+B,EAAAA,EAAAA,GAAgBmhB,EAAAA,OAGjC,KACIljB,GAAS+B,EAAAA,EAAAA,GAAgBmhB,EAAAA,QAK5BG,EACRC,GACD,CAACtjB,EAA+B6iB,KAC5B,MAAMjf,EAAaif,IAAWC,UAAUC,gBACxC,OAAOlhB,EAAAA,EAAAA,OAAgB,0BAA0B,CAAEzL,OAAQ,CAAEktB,OAAAA,EAAQ1f,WAAAA,KAAgBsE,MACjF,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAKoE,UACLhjB,EAAS0iB,EAAgB9D,EAAKoE,YAE9BhjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAGjC,KACIvjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,QAK5BC,EACT,IACA,CAACxjB,EAA+B6iB,KAC5B,MAAMjf,EAAaif,IAAWC,UAAUC,gBACxC,OAAOlhB,EAAAA,EAAAA,IAAY,+BAAgC,CAAEzL,OAAQ,CAAEwN,WAAAA,KAAgBsE,MAC3E,IAAmB,IAAlB,UAAE8a,GAAW,EAENhjB,EADAgjB,EACSN,EAAgBM,IAEhBjhB,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAGjC,KACIvjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,QAQ5BE,EACT,QAAC,cAAEC,GAA+B,QAClC,CAAC1jB,EAA+B6iB,KAC5B,MAAMjf,EAAaif,IAAWC,UAAUC,gBACxC,OAAOlhB,EAAAA,EAAAA,KAAa,8BAA+B,KAAM,CAAEzL,OAAQ,CAAEwN,WAAAA,KAAgBsE,MAChF7E,IAAa,MACO,QAAjB,EAAIA,EAASub,YAAI,OAAb,EAAe+E,YACf3jB,GACIgB,EAAAA,EAAAA,OACI4iB,EAAAA,EAAAA,WAAUvgB,EAASub,KAAK+E,YAAa,CACjCD,cAAAA,MAKZG,EAAAA,QAAAA,IAAU,YAAa,IAAIC,MAAM,2BAGzC,KACI9jB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,SAK5B3M,EACT,SAACqI,GAAuB,IAAE8E,EAAyC,UAAH,6CAAG,GAAIngB,EAAmB,8CACzF5D,GACU6B,EAAAA,EAAAA,KACG,+BAAgC,CAAEod,SAAAA,EAAU8E,eAAAA,GAAkB,CAAE3tB,OAAQ,CAAEwN,WAAAA,KAC/EsE,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAK+E,YACL3jB,GAASgB,EAAAA,EAAAA,OAAK4iB,EAAAA,EAAAA,WAAUhF,EAAK+E,eAE7B3jB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAGjC,KACIvjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,QAKhCS,EAAyC,SAClD/E,GAMgB,IALhB8E,EAAyC,UAAH,6CAAG,GACzCzd,EAAiB,uCACjB2d,EAA0B,uCAC1BC,EAAiF,uCACjFC,EAAmB,uCAEnB,MAAM,kBAAEC,EAAiB,MAAEnpB,EAAK,KAAEsL,GAAS0d,EAE3C,OAAOpiB,EAAAA,EAAAA,KACG,sFAAuF,CACzFod,SAAAA,EACA8E,eAAAA,EACAzd,UAAAA,EACArL,MAAAA,EACAsL,KAAAA,EACA3M,KAAMwqB,IAETlc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EACAsF,EAAUtF,GAEVuF,OAGR,KACIA,QAKHE,EAA2C,CACpD/d,EACA2d,EACAK,EACAJ,EACAC,KAEA,MAAM,kBAAEC,EAAiB,MAAEnpB,EAAK,KAAEsL,GAAS0d,EAE3C,OAAOpiB,EAAAA,EAAAA,KAECyiB,EACM,4DACA,0DACN,CACIhe,UAAAA,EACArL,MAAAA,EACAsL,KAAAA,EACA3M,KAAMwqB,IAGblc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EACAsF,EAAUtF,GAEVuF,OAGR,KACIA,QAKHI,EACT,SACItF,GAAuB,IACvB8E,EAAyC,UAAH,6CAAG,GACzCzd,EAAiB,uCACjBke,EAAW,uCACXC,EAAc,8CAEjBzkB,GACU6B,EAAAA,EAAAA,KACG,mEAAoE,CACtEod,SAAAA,EACA8E,eAAAA,EACAzd,UAAAA,EACAke,IAAAA,EACAC,OAAAA,IAEHvc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAK+E,YACL3jB,GAASgB,EAAAA,EAAAA,MAAK4d,EAAK+E,cAEnB3jB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAGjC,KACIvjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,QAKhCmB,EACT,CACIpe,EACAke,EACAC,EACAP,EACAS,IAEH3kB,GACU6B,EAAAA,EAAAA,KACG,oEAAqE,CACvEyE,UAAAA,EACAke,IAAAA,EACAC,OAAAA,IAEHvc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACLsF,EAAUtF,MAEd,IAA8B,IAA7B,SAAEvb,GAAsB,GACjBA,MAAAA,OAAQ,EAARA,EAAUuhB,UAAWC,EAAAA,IACrB7kB,GAAS+B,EAAAA,EAAAA,GAAgB+iB,EAAAA,GAAe,CAAEC,UAAWC,EAAAA,GAAAA,kBACrDL,KAEA3kB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAMpC0B,EACT,SACIhG,GAAuB,IACvB8E,EAAyC,UAAH,6CAAG,GACzCzd,EAAiB,uCACjBke,EAAW,uCACXC,EAAc,uCACdS,EAAkB,8CAErBllB,GACG6B,EAAAA,EAAAA,IACS,6DAA8D,CAC/Dod,SAAAA,EACA8E,eAAAA,EACAzd,UAAAA,EACAke,IAAAA,EACAC,OAAAA,EACAS,WAAAA,IAEHhd,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EAAK+E,YACL3jB,GAASgB,EAAAA,EAAAA,MAAK4d,EAAK+E,cAEnB3jB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,OAGjC,KACIvjB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,QAIhC4B,EACT,CACI7e,EACA4e,EACAV,EACAC,EACAW,EACAjB,IAEHnkB,GACG6B,EAAAA,EAAAA,IACS,wCAAyC,KAAM,CAChDzL,OAAQ,CACJkQ,UAAAA,EACA4e,WAAAA,EACAT,OAAAA,EACAD,IAAAA,KAGPtc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,EACIwG,GACAA,EAASxG,IAGb5e,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,IACzBY,MAAAA,GAAAA,QAGR,KACInkB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,IACzBY,MAAAA,GAAAA,OAIPkB,EACT,CACI/e,EACA4e,EACAV,EACAC,EACAW,EACAjB,IAEHnkB,GACG6B,EAAAA,EAAAA,IACS,oDAAqD,KAAM,CAC5DzL,OAAQ,CACJkQ,UAAAA,EACA4e,WAAAA,EACAT,OAAAA,EACAD,IAAAA,KAGPtc,MACG,IAAc,IAAb,KAAE0W,GAAM,EACDA,GACA5e,GAAS+B,EAAAA,EAAAA,GAAgBujB,EAAAA,IACrBF,GAIAA,EAAS,EAAD,KAAMxG,GAAI,IAAE4F,IAAAA,OAGxBxkB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,IACzBY,MAAAA,GAAAA,QAGR,KACInkB,GAAS+B,EAAAA,EAAAA,GAAgBwhB,EAAAA,IACzBY,MAAAA,GAAAA","sources":["xhh/./webapp-static/js/HH/LoadBannerOnVisibleModule.js","xhh/./webapp-static/js/Utils/VisibilityWatcher.js","xhh/./webapp-static/lux/components/Attention/index.tsx","xhh/./webapp-static/lux/components/Banner/index.tsx","xhh/./webapp-static/lux/components/Banner/AdsExternalBanner.tsx","xhh/./webapp-static/lux/components/CatalogSearch/CatalogLinks.tsx","xhh/./webapp-static/lux/components/CatalogSearch/ExtraFilters.tsx","xhh/./webapp-static/lux/components/CatalogSearch/index.tsx","xhh/./webapp-static/lux/components/Conversion/DateOnly.tsx","xhh/./webapp-static/lux/components/Employer/ResumeView/SettingsForm.tsx","xhh/./webapp-static/lux/components/EmployerVacancies/searchManagerVacancies.ts","xhh/./webapp-static/lux/components/FilterIcon/index.tsx","webpack://xhh/./webapp-static/lux/components/ResumeCard/Onboarding/Banner/index.less?47f3","xhh/./webapp-static/lux/components/ResumeCard/Onboarding/Banner/index.tsx","webpack://xhh/./webapp-static/lux/components/ResumeCard/Onboarding/Modal/index.less?50ef","xhh/./webapp-static/lux/components/ResumeCard/Onboarding/Modal/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/ErrorWrapper/index.jsx","xhh/./webapp-static/lux/components/ResumeSearch/HeaderWrapper/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyAdditionalHeader/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyAdditionalHeader/useShowPickVacancyAdditionalHeader.ts","webpack://xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyModal/style.less?86a6","xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyModal/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyModal/useContextVacancyIdFromUrl.ts","webpack://xhh/./webapp-static/lux/components/ResumeSearch/AutoInviteSnippet/index.less?ad58","xhh/./webapp-static/lux/components/ResumeSearch/AutoInviteSnippet/index.tsx","webpack://xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyBanner/style.less?32b1","xhh/./webapp-static/lux/components/ResumeSearch/PickVacancyBanner/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/RegistrationAnonActionInSerp/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/SavedSearchSubscription/index.jsx","webpack://xhh/./webapp-static/lux/components/ResumeSearch/NotFoundByContactBanner/NotFoundByContactBanner.less?b47a","xhh/./webapp-static/lux/components/ResumeSearch/NotFoundByContactBanner/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/ResumeSearchBanners/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/SearchResults/index.jsx","xhh/./webapp-static/lux/components/ResumeSearch/ItemsOnPage/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/SearchOrder/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/SearchPeriod/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/Settings/index.jsx","xhh/./webapp-static/lux/hooks/useNovaFiltersOrderForResume.ts","xhh/./webapp-static/lux/components/ResumeSearch/ResumeSearchItems/index.jsx","xhh/./webapp-static/lux/components/ResumeSearch/BuyContacts/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/QueryFixer/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/QuerySuggests/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/RegistrationMessage/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/RegistrationAction/index.tsx","xhh/./webapp-static/lux/components/ResumeSearch/ResumeSearchTop/index.tsx","webpack://xhh/./webapp-static/lux/components/ScrollToTop/scroll-to-top.less?29b0","xhh/./webapp-static/lux/components/ScrollToTop/index.tsx","webpack://xhh/./webapp-static/lux/components/SearchRating/searchRating.less?7f74","xhh/./webapp-static/lux/components/SearchRating/index.tsx","xhh/./webapp-static/lux/components/SearchScrollToTop/Resume.tsx","xhh/./webapp-static/lux/components/SearchSorts/SearchPreferenceButton.tsx","webpack://xhh/./webapp-static/lux/components/StickySidebar/sticky-sidebar.less?acfe","xhh/./webapp-static/lux/components/StickySidebar/index.tsx","xhh/./webapp-static/lux/components/UnderSearchResultBanner/index.tsx","xhh/./webapp-static/lux/hooks/useScroll.ts","xhh/./webapp-static/lux/hooks/useSearchQualityUxFb.ts","xhh/./webapp-static/lux/hooks/useSendExperienceAnalytics.ts","xhh/./webapp-static/lux/models/price/priceBranding/priceBranding.types.ts","xhh/./webapp-static/lux/models/price/product.types.ts","xhh/./webapp-static/lux/models/price/zpTariff.ts","xhh/./webapp-static/lux/modules/employer/setResumeSearchSettings.ts","xhh/./webapp-static/lux/modules/isHtmlElement.ts","xhh/./webapp-static/lux/modules/price/products.ts","xhh/./webapp-static/lux/requests/price/addToCartAnimation.ts","xhh/./webapp-static/lux/requests/price/cart.ts"],"sourcesContent":["import Banners from 'HHC/Banners';\nimport visibilityWatcher from 'Utils/VisibilityWatcher';\n/**\n * Подгружает баннер в ноду компонента, при видимости этой ноды.\n *\n * @param {String|Number}   id              ID баннера\n * @param {Array}           ids             ID баннеров, имеет приоритет перед id\n * @param {String}          [templateName]  Имя шаблона для баннера, если имя шаблона не указано, то баннер будет\n *                                          добавлен в текущую ноду без применения шаблонов\n *\n * @name HH/LoadBannerOnVisibleModule\n * @constructor\n */\nexport default (element, params) => {\n    window.requestIdleCallback(() => {\n        visibilityWatcher.init({\n            element,\n            onVisible() {\n                const { ids, id, templateName, adfoxParams } = params;\n                let banners = [id];\n                if (ids) {\n                    banners = ids;\n                }\n                Banners.create(element, banners, templateName, adfoxParams);\n            },\n        });\n    });\n};\n","/**\n * Утилита следит за видимостью элемента на странице, и запускает калбеки при изменении состояния. <br>\n *\n * @type {Object}\n * @exports Utils/VisibilityWatcher\n */\nconst visibilityWatcher = {\n    /**\n     * Инициализирует вотчер на элементе.\n     *\n     * @param {Object}   options\n     * @param {Element}  options.element   DOM элемент за которым наблюдаем\n     * @param {Function} options.onVisible Функция, которая будет вызвана, когда элемент отобразится\n     *\n     * @member\n     * @method\n     */\n    init(options) {\n        let visible = false;\n        const element = options.element;\n        const checkVisible = () => {\n            if (visible) {\n                return;\n            }\n            if (element.offsetWidth || element.offsetHeight || element.getClientRects().length) {\n                visible = true;\n                options.onVisible();\n                window.removeEventListener('resize', checkVisible);\n                window.removeEventListener('element-displayed', checkVisible);\n                element.dataset.listenersSetted = 'false';\n            } else {\n                visible = false;\n            }\n        };\n        if (options.element.dataset.listenersSetted !== 'true') {\n            window.addEventListener('resize', checkVisible);\n            window.addEventListener('element-displayed', checkVisible);\n            options.element.dataset.listenersSetted = 'true';\n        }\n        checkVisible();\n    },\n};\nexport default visibilityWatcher;\n","import { FC, memo, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\n\nexport enum AttentionKind {\n    Bad = 'bad',\n    Good = 'good',\n}\n\ninterface AttentionProps {\n    kind?: AttentionKind;\n    corrected?: boolean;\n}\n\nconst Attention: FC<AttentionProps & PropsWithChildren> = ({ kind, children, corrected }) => (\n    <div\n        className={classnames('attention', {\n            [`attention_${kind || ''}`]: kind,\n            'attention_corrected-width': corrected,\n        })}\n    >\n        {children}\n    </div>\n);\n\nexport default memo(Attention);\n","import { Component, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect, DefaultRootState } from 'react-redux';\n\nimport LoadBannerOnVisibleSignature from 'HH/LoadBannerOnVisibleModule.d';\nimport { YandexAdfoxBannerProps } from 'lux/models/banners/YandexAdfoxBanner.types';\nimport { UserTargeting } from 'lux/models/userTargeting';\n\nlet loadBannerOnVisible: typeof LoadBannerOnVisibleSignature | undefined;\n\nif (!process.env.LUX_SERVER) {\n    /* eslint @typescript-eslint/no-var-requires: \"off\" */\n    /* eslint @typescript-eslint/no-unsafe-member-access: \"off\" */\n    loadBannerOnVisible = require('HH/LoadBannerOnVisibleModule').default as typeof LoadBannerOnVisibleSignature;\n}\n\ninterface BannerProps {\n    /** Индификатор баннера */\n    id: string;\n    /** Название шаблона для баннера */\n    templateName?: string;\n    /** Нода в которую кладется баннер */\n    children?: ReactNode;\n    /** Флаг отмены отправки запросов в баннерную систему */\n    cancelFetchBanners?: boolean;\n    /** Строка текущих get параметров URL */\n    search?: string;\n    /** Строка текущего URL без параметров */\n    pathname?: string;\n    /** Параметры для Yandex adfox баннеров */\n    adfoxParams?: Omit<YandexAdfoxBannerProps, 'id'>;\n    /** Строит пустой див вместо баннера **/\n    isEmpty?: boolean;\n    userTargeting?: UserTargeting;\n}\n\nclass Banner extends Component<BannerProps> {\n    element: HTMLElement | null = null;\n    static defaultProps = {\n        templateName: 'HHC-Banners-Place-Template',\n    };\n\n    componentDidMount() {\n        this.element = this.props.isEmpty ? null : (ReactDOM.findDOMNode(this) as HTMLElement);\n        if (this.element) {\n            this.element.addEventListener('HH-Banners-Init', this.setAutoHeight.bind(this));\n            this.initBanners();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.element) {\n            this.initBanners();\n        }\n    }\n\n    componentWillUnmount() {\n        this.element?.removeEventListener('HH-Banners-Init', this.setAutoHeight);\n    }\n\n    shouldComponentUpdate(nextProps: BannerProps) {\n        if (nextProps.cancelFetchBanners) {\n            return false;\n        }\n        return nextProps.search !== this.props.search || nextProps.pathname !== this.props.pathname;\n    }\n\n    initBanners() {\n        const { id, templateName, adfoxParams, userTargeting } = this.props;\n        if (this.element) {\n            this.element.style.height = `${this.element.clientHeight}px`;\n            this.element.innerHTML = '';\n        }\n        let adfoxParamsProperty;\n        if (adfoxParams) {\n            adfoxParamsProperty = {\n                ...adfoxParams,\n                type: 'adfox',\n                bannerId: id,\n                place: id,\n                bannerCommonTargeting: userTargeting,\n                bannerAdTargeting: adfoxParams.bannerAdTargeting || {},\n            };\n        }\n        const bannerParams = {\n            id,\n            templateName,\n            adfoxParams: adfoxParamsProperty,\n        };\n\n        loadBannerOnVisible?.(this.element, bannerParams);\n    }\n\n    setAutoHeight = (): void => {\n        if (this.element) {\n            this.element.style.height = 'auto';\n        }\n    };\n\n    render() {\n        return this.props.children || <div />;\n    }\n}\n\nexport default connect((state: DefaultRootState) => ({\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    cancelFetchBanners: state.cancelFetchBanners,\n    userTargeting: state.userTargeting,\n}))(Banner);\n","import type { FC } from 'react';\n\nimport { isExternalBannersRestricted } from 'HHC/Banners';\nimport { useIsBelarus } from 'lux/hooks/useCountries';\nimport { AdsExternalBannerProps } from 'lux/models/banners/AdsExternalBanner.types';\n\nimport Banner from 'lux/components/Banner';\n\nconst AdsExternalBanner: FC<AdsExternalBannerProps> = ({ id, cId, pp, p2, ...adfoxParams }) => {\n    const enableAdfox = pp && p2;\n    const shouldHideExternalBanners = isExternalBannersRestricted(useIsBelarus());\n\n    if (!enableAdfox || shouldHideExternalBanners) {\n        return <Banner key={cId} id={id} isEmpty={shouldHideExternalBanners} />;\n    }\n\n    return (\n        <Banner\n            key={cId}\n            id={id}\n            templateName=\"\"\n            adfoxParams={{\n                pp,\n                p2,\n                cId,\n                ...adfoxParams,\n            }}\n        >\n            <div\n                id={cId}\n                className={`HHC-Banner-${id} HH-Banner-Adfox banner-place banner-place_${id} banner-place-adfox banner-place-adfox_${id}`}\n                data-banner-id={id}\n                data-empty-class=\"banner-place_hide\"\n                data-loaded-class=\"banner-place_show\"\n            />\n        </Banner>\n    );\n};\n\nexport default AdsExternalBanner;\n","import { FC } from 'react';\n\nimport { useElementShown } from '@hh.ru/analytics-js';\nimport vacancySearchQuickFilterApplyButtonClick from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/vacancy_search_filter/vacancy_search_quick_filter_apply_button_click';\nimport vacancySearchQuickFilterListElementShown from '@hh.ru/analytics-js-events/build/xhh/common/vacancy_search/vacancy_search_filter/vacancy_search_quick_filter_list_element_shown';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport { H3Section } from 'bloko/blocks/header';\nimport BlokoLink, { LinkKind } from 'bloko/blocks/link';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport translation from 'lux/components/translation';\n\nexport interface CatalogLink {\n    path: string;\n    title: string;\n    name?: string;\n}\n\ninterface CatalogLinksProps {\n    links: CatalogLink[];\n    title: string;\n    hhtmSourceLabel: 'BOTTOM_FILTER_CATALOG' | 'BOTTOM_SIMILAR_QUERY';\n}\n\nconst CatalogLinks: FC<CatalogLinksProps> = ({ links, title, hhtmSourceLabel }) => {\n    const showLinksContainerRef = useElementShown(vacancySearchQuickFilterListElementShown, {\n        filterList: links.map(({ name }) => name).join(', '),\n        hhtmSourceLabel,\n    });\n\n    const onCatalogLinkClick = (link: CatalogLink, index: number) =>\n        vacancySearchQuickFilterApplyButtonClick({\n            position: index + 1,\n            filter: link.name || '',\n            hhtmSourceLabel,\n        });\n\n    return (\n        <>\n            <VSpacing base={12} />\n            <div ref={showLinksContainerRef}>\n                <H3Section>{title}</H3Section>\n                <VSpacing base={4} />\n                <ul className=\"multiple-column-list multiple-column-list_narrow\">\n                    {links.map((link, index) => (\n                        <li key={link.path} className=\"catalog__item\">\n                            <BlokoLink\n                                disableVisited\n                                kind={LinkKind.Secondary}\n                                onClick={() => onCatalogLinkClick(link, index)}\n                                Element={Link}\n                                isSeoLink\n                                to={link.path}\n                            >\n                                <span>{link.title}</span>\n                            </BlokoLink>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nexport default translation(CatalogLinks);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport translation from 'lux/components/translation';\nimport { CommonExtraFilter, VacancyExtraFilter } from 'lux/models/extraFilters';\nimport { SearchCatalogType } from 'lux/models/searchCatalogType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport CatalogLinks from 'lux/components/CatalogSearch/CatalogLinks';\n\nconst getSearchCatalogUrl = (\n    searchCatalogType: SearchCatalogType,\n    profession: string,\n    extraFilter: CommonExtraFilter | VacancyExtraFilter\n): string =>\n    [searchCatalogType, profession, extraFilter].reduce((prev, param) => {\n        if (param) {\n            prev = `${prev}/${param}`;\n        }\n        return prev;\n    }, '');\n\nconst TrlKeys = {\n    header: 'seo_catalog.extra_filters.title',\n    [CommonExtraFilter.EmploymentFull]: 'seo_catalog.extra_filter.polnaya_zanyatost',\n    [CommonExtraFilter.EmploymentPart]: 'seo_catalog.extra_filter.chastichnaya_zanyatost',\n    [CommonExtraFilter.EmploymentProject]: 'seo_catalog.extra_filter.proektnaya_rabota',\n    [CommonExtraFilter.ScheduleFlexible]: 'seo_catalog.extra_filter.gibkiy_grafik',\n    [CommonExtraFilter.ScheduleFlyInFlyOut]: 'seo_catalog.extra_filter.vakhtoviy_metod',\n    [CommonExtraFilter.ScheduleFullDay]: 'seo_catalog.extra_filter.polniy_den',\n    [CommonExtraFilter.ScheduleShift]: 'seo_catalog.extra_filter.smenniy_grafik',\n    [VacancyExtraFilter.ExperienceNo]: 'seo_catalog.extra_filter.bez_opyta_raboty',\n    [VacancyExtraFilter.LabelAcceptHandicapped]: 'seo_catalog.extra_filter.rabota_dlya_invalidov',\n    [VacancyExtraFilter.LabelNotFromAgency]: 'seo_catalog.extra_filter.ot_pryamih_rabotodateley',\n    [VacancyExtraFilter.PartTime]: 'seo_catalog.extra_filter.podrabotka',\n    [VacancyExtraFilter.ScheduleRemote]: 'seo_catalog.extra_filter.udalennaya_rabota',\n    [VacancyExtraFilter.ScheduleSeasonalJob]: 'seo_catalog.extra_filter.sezonnaya_rabota',\n    [VacancyExtraFilter.SearchPeriodDay]: 'seo_catalog.extra_filter.za_sutki',\n    [VacancyExtraFilter.SearchPeriodThreeDays]: 'seo_catalog.extra_filter.za_poslednie_tri_dnya',\n};\n\nconst ExtraFilters: TranslatedComponent = ({ trls }) => {\n    const extraFilters = useSelector((state) => state.extraFilters);\n    const searchCatalogProfession = useSelector((state) => state.searchCatalogProfession);\n    const searchType = useSelector((state) => state.searchClustersSettings.type);\n\n    const searchCatalogType =\n        searchType === SearchType.Vacancy ? SearchCatalogType.Vacancies : SearchCatalogType.Resumes;\n\n    return (\n        <CatalogLinks\n            links={extraFilters.map((extraFilter) => ({\n                path: getSearchCatalogUrl(searchCatalogType, searchCatalogProfession, extraFilter),\n                title: trls[TrlKeys[extraFilter]],\n                name: extraFilter,\n            }))}\n            title={trls[TrlKeys.header]}\n            hhtmSourceLabel={'BOTTOM_FILTER_CATALOG'}\n        />\n    );\n};\n\nexport default translation(ExtraFilters);\n","import { useMemo } from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nimport CatalogLinks, { CatalogLink } from 'lux/components/CatalogSearch/CatalogLinks';\n\nconst TrlKeys = {\n    header: 'search.catalogLinks.title',\n};\n\ninterface CatalogSearchProps {\n    queries: CatalogLink[];\n}\n\nconst CatalogSearch: TranslatedComponent<CatalogSearchProps> = ({ queries, trls }) => {\n    const links = useMemo(\n        () =>\n            queries.map((query) => {\n                return { ...query, name: query.path.split('/').slice(2).join('/') };\n            }),\n        [queries]\n    );\n    return <CatalogLinks links={links} title={trls[TrlKeys.header]} hhtmSourceLabel={'BOTTOM_SIMILAR_QUERY'} />;\n};\n\nexport default translation(CatalogSearch);\n","import { ReactNode } from 'react';\n\nimport Conversion from 'bloko/blocks/conversion';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\ninterface DateOnlyProps {\n    /** Количество дней */\n    value: number;\n    /** Флаг выводить ли со склоняемым словом число */\n    hasValue?: boolean;\n    /** Функция обработки числа */\n    formatValue?: (value: number) => ReactNode;\n    /** Выводить количество дней в часах */\n    shouldShowInHours?: boolean;\n}\n\nconst TrlKeys = {\n    days: {\n        one: 'lang.day.1', // 1 день\n        some: 'lang.day.2', // 2 дня\n        many: 'lang.day.5', // 5 дней\n        zero: 'lang.day.5', // 0 дней\n    },\n    hours: {\n        one: 'hour.2', // 24 часа\n        some: 'hour.5', // 48 часов\n        many: 'hour.5', // 120 часов\n        zero: 'hour.5', // 0 часов\n    },\n};\n\nconst DateOnly: TranslatedComponent<DateOnlyProps> = ({\n    hasValue = true,\n    formatValue,\n    value,\n    trls,\n    shouldShowInHours,\n}) => {\n    const translations = shouldShowInHours ? TrlKeys.hours : TrlKeys.days;\n\n    const getFormatter = () => {\n        if (shouldShowInHours) {\n            return (value: number) => <span suppressHydrationWarning>{formatValue?.(value * 24) ?? value * 24}</span>;\n        }\n        return formatValue;\n    };\n\n    return (\n        <Conversion\n            many={trls[translations.many]}\n            some={trls[translations.some]}\n            one={trls[translations.one]}\n            zero={trls[translations.zero]}\n            formatValue={getFormatter()}\n            hasValue={hasValue}\n            value={value}\n        />\n    );\n};\n\nexport default translation(DateOnly);\n","import { FormEvent, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nimport Button, { ButtonType } from 'bloko/blocks/button';\nimport Checkbox from 'bloko/blocks/checkbox';\nimport { FormItem } from 'bloko/blocks/form';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport Text, { TextSize } from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport { SettingName, SettingType } from 'lux/models/search/resume/resumeSearchResult';\nimport setResumeSearchSettings from 'lux/modules/employer/setResumeSearchSettings';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface SettingsFormProps {\n    close?: () => void;\n}\n\nconst TrlKeys = {\n    settingName: {\n        [SettingName.ShowFiltersOnTheLeft]: 'resume.search.field.show_filters_on_the_left',\n    },\n    settingType: {\n        [SettingType.LastChangeTime]: 'resume.search.field.last_change_time',\n        [SettingType.Name]: 'resume.search.field.name',\n        [SettingType.Photo]: 'resume.search.field.photo',\n        [SettingType.LastExperience]: 'resume.search.field.last_experience',\n        [SettingType.Comments]: 'resume.search.field.comments',\n        [SettingType.CommentsExpanded]: 'resume.search.field.comments_expanded',\n        [SettingType.Languages]: 'resume.search.field.languages',\n        [SettingType.Area]: 'resume.search.field.area',\n        [SettingType.Education]: 'resume.search.field.education',\n        [SettingType.Citizenship]: 'resume.search.field.citizenship',\n        [SettingType.Companies]: 'resume.search.field.companies',\n        [SettingType.Relocation]: 'resume.search.field.relocation',\n        [SettingType.Certificates]: 'resume.search.field.certificates',\n        [SettingType.ExperienceSum]: 'resume.search.field.experience_sum',\n        [SettingType.ProfessionalRole]: 'resume.search.field.professional_role',\n        [SettingType.RoleWarring]: 'resume.search.field.roleWarring',\n    },\n    save: 'Save',\n};\n\nconst SettingsForm: TranslatedComponent<SettingsFormProps> = ({ close, trls }) => {\n    const { activeSettings, availableSettings, filtersOnTheLeft } = useSelector(\n        (state) => state.resumeSearchResult.settings\n    );\n    const formElement = useRef<HTMLFormElement>(null);\n    const [isFetching, setIsFetching] = useState(false);\n    const { pathname, search } = useSelector((state) => state.router.location);\n    const dispatch = useDispatch();\n\n    const [isFiltersOnTheLeftToggled, setFiltersOnTheLeftToggled] = useState(false);\n\n    if (!availableSettings || !activeSettings) {\n        return null;\n    }\n\n    const submit = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!formElement.current) {\n            return;\n        }\n        setIsFetching(true);\n        try {\n            await setResumeSearchSettings(new FormData(formElement.current));\n        } catch (e) {\n            console.error(e);\n        } finally {\n            close?.();\n            dispatch(push(`${pathname}${search}`));\n        }\n    };\n\n    return (\n        <Text size={TextSize.Small} data-qa=\"resume-serp__set-view-result-block\">\n            <Form onSubmit={submit} ref={formElement} data-qa=\"resume-serp__view-form\">\n                <ul>\n                    {availableSettings.length !== 0 &&\n                        availableSettings.map((field) => (\n                            <FormItem key={field}>\n                                <Checkbox\n                                    defaultChecked={activeSettings.includes(field)}\n                                    data-qa={`resume-serp__view-${field}`}\n                                    name=\"field\"\n                                    value={field}\n                                >\n                                    <span className=\"resume-serp-filters-form__text\">\n                                        {trls[TrlKeys.settingType[field]]}\n                                    </span>\n                                </Checkbox>\n                            </FormItem>\n                        ))}\n                    {filtersOnTheLeft && (\n                        <>\n                            <div className=\"resume-serp-filters-divider\">\n                                <div className=\"horizontal-divider\" />\n                            </div>\n                            <input\n                                type=\"hidden\"\n                                name={`cs-${filtersOnTheLeft.name}`}\n                                value={String(isFiltersOnTheLeftToggled)}\n                            />\n                            <FormItem>\n                                <Checkbox\n                                    defaultChecked={filtersOnTheLeft.value}\n                                    data-qa={`resume-serp__view-${filtersOnTheLeft.name}`}\n                                    name={filtersOnTheLeft.name}\n                                    value=\"true\"\n                                    onChange={() => setFiltersOnTheLeftToggled(true)}\n                                >\n                                    <span className=\"resume-serp-filters-form__text\">\n                                        {trls[TrlKeys.settingName[filtersOnTheLeft.name]]}\n                                    </span>\n                                </Checkbox>\n                            </FormItem>\n                        </>\n                    )}\n                </ul>\n                <div className=\"resume-serp-filters-save\">\n                    <Button\n                        type={ButtonType.Submit}\n                        data-qa=\"resume-serp__view-save\"\n                        loading={isFetching && <Loading scale={LoadingScale.Small} />}\n                    >\n                        {trls[TrlKeys.save]}\n                    </Button>\n                </div>\n            </Form>\n        </Text>\n    );\n};\n\nexport default translation(SettingsForm);\n","import { AnyAction, Dispatch } from 'redux';\n\nimport { EMPTY_FILTERS_RESULT } from 'lux/components/Notifications/EmployerVacancies';\nimport { filterVacancies } from 'lux/models/employerVacancies/managerVacancies';\nimport { VacanciesFilters, VacanciesList } from 'lux/models/employerVacancies/vacancy.types';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\ntype QueryParams = Partial<VacanciesFilters> & { groupId?: string; order?: string };\n\ninterface SearchParams {\n    params: QueryParams;\n    catchEmpty?: boolean;\n}\n\ndeclare global {\n    interface FetcherGetApi {\n        ['/shards/employer/vacancies_dashboard/vacancies']: {\n            queryParams: QueryParams;\n            response: { vacanciesData: VacanciesList; clickmeAutoCampaignPromotionExpEnabled: boolean };\n        };\n    }\n}\n\nexport default ({ params, catchEmpty }: SearchParams): ((dispatch: Dispatch<AnyAction>) => Promise<boolean>) =>\n    async (dispatch: Dispatch<AnyAction>) => {\n        try {\n            const { vacanciesData } = await fetcher.get('/shards/employer/vacancies_dashboard/vacancies', {\n                params,\n            });\n\n            if (catchEmpty && vacanciesData.activeVacanciesCount === 0) {\n                dispatch(addNotification(EMPTY_FILTERS_RESULT));\n\n                return true;\n            }\n\n            dispatch(filterVacancies({ vacancies: vacanciesData }));\n\n            return false;\n        } catch (err) {\n            dispatch(showDefaultError(err));\n\n            throw err;\n        }\n    };\n","import Icon, {\n    IconDynamic,\n    IconLink,\n    IconKind,\n    IconAppearance,\n    IconScale,\n    IconColor,\n    IconView,\n} from 'bloko/blocks/icon';\nimport Loading, { LoadingScale } from 'bloko/blocks/loading';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\n\nconst TrlKeys = {\n    title: 'filter.clear.icon.title',\n};\n\ninterface FilterIconProps {\n    isLoading: boolean;\n    value: string;\n    handleClear: () => void;\n}\nconst FilterIcon: TranslatedComponent<FilterIconProps> = ({ isLoading, value, handleClear, trls }) => {\n    let filterIcon = (\n        <Icon\n            view={IconView.Lupa}\n            initial={IconColor.Gray50}\n            kind={IconKind.Default}\n            appearance={IconAppearance.Outlined}\n            scale={IconScale.Small}\n        />\n    );\n\n    if (value) {\n        filterIcon = (\n            <IconDynamic>\n                <IconLink Element=\"button\" type=\"button\" title={trls[TrlKeys.title]} onClick={handleClear}>\n                    <Icon\n                        view={IconView.Cross}\n                        initial={IconColor.Gray50}\n                        highlighted={IconColor.Gray60}\n                        scale={IconScale.Small}\n                    />\n                </IconLink>\n            </IconDynamic>\n        );\n    }\n\n    if (isLoading) {\n        filterIcon = <Loading scale={LoadingScale.Small} />;\n    }\n\n    return filterIcon;\n};\n\nexport default translation(FilterIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper--o5KXR8Qs6xQXxfx3DkuI\",\"wrapperZp\":\"wrapper_zp--i2BzQ3uuIWIRSWHsQGcw\",\"container\":\"container--sCfPq0ENeW1t4g71ynWg\",\"content\":\"content--LRBJSiZ9BdHUqydqfT_Y\",\"titleResponse\":\"title-response--ItSXB4PbxvjkUoVJLE6o\",\"image\":\"image--GjB_lidVMK5DOkr1Mb4t\"};","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { H3Section } from 'bloko/blocks/header';\nimport Icon, { IconLink, IconScale, IconView } from 'bloko/blocks/icon';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ElementShownAnchor from 'lux/components/ElementShownAnchor';\nimport translation from 'lux/components/translation';\nimport { useIsZarplataPlatform } from 'lux/hooks/usePlatform';\nimport { setIsResumeCardRedesignOnboarding } from 'lux/models/isRedesignOnboarding';\nimport fetcher from 'lux/modules/fetcher';\nimport { REGULAR_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './index.less';\n\nconst REMOTE = '/shards/hide_resume_card_redesign_onboarding';\n\ndeclare global {\n    interface FetcherPutApi {\n        [REMOTE]: {\n            queryParams: undefined;\n            body: undefined;\n            response: void;\n        };\n    }\n}\n\nconst TrlKeys = {\n    title: 'resume.snippet.onboarding.banner.title',\n    improvements: {\n        serp: 'resume.snippet.onboarding.banner.improvements.serp',\n        response: 'resume.snippet.onboarding.banner.improvements.response',\n    },\n    changes: 'resume.snippet.onboarding.banner.changes',\n};\n\ntype AnalyticsParams = {\n    employerId: string;\n    employerManagerId?: string;\n};\n\nconst sendEventElementShown = (element: HTMLElement, analyticsParams: AnalyticsParams) =>\n    Analytics.sendHHEventElementShown(element, { elementName: 'resume_card_onboarding_banner', ...analyticsParams });\n\nconst sendEventClose = (analyticsParams: AnalyticsParams) =>\n    Analytics.sendHHEventButtonClick('resume_card_onboarding_banner_close', analyticsParams);\n\nconst OnboardingBanner: TranslatedComponent<{ isResponse?: boolean }> = ({ isResponse, trls }) => {\n    const dispatch = useDispatch();\n\n    const employerId = useSelector((state) => state.employerId);\n    const employerManagerId = useSelector((state) => state.employerManager?.id);\n\n    const handleClick = useCallback(() => {\n        dispatch(setIsResumeCardRedesignOnboarding(false));\n        fetcher.put(REMOTE).catch(console.error);\n        sendEventClose({ employerId, employerManagerId });\n    }, [dispatch, employerId, employerManagerId]);\n\n    const isZP = useIsZarplataPlatform();\n\n    const contentResponse = () => (\n        <>\n            <H3Section>\n                <div className={styles.titleResponse}>{trls[TrlKeys.title]}</div>\n            </H3Section>\n            <VSpacing base={2} />\n            <Text>\n                {trls[TrlKeys.improvements.response]}\n                {REGULAR_SPACE}\n                {trls[TrlKeys.changes]}\n            </Text>\n        </>\n    );\n\n    const contentSerp = () => (\n        <>\n            <H3Section>{trls[TrlKeys.title]}</H3Section>\n            <VSpacing base={2} />\n            <Text>{trls[TrlKeys.improvements.serp]}</Text>\n            <Text>{trls[TrlKeys.changes]}</Text>\n        </>\n    );\n\n    return (\n        <ElementShownAnchor fn={sendEventElementShown} employerId={employerId} employerManagerId={employerManagerId}>\n            <div\n                className={classnames(styles.wrapper, {\n                    [styles.wrapperZp]: isZP,\n                })}\n            >\n                <div className={styles.container}>\n                    <div className={styles.content}>{isResponse ? contentResponse() : contentSerp()}</div>\n                    <div className={styles.image} />\n                    <IconLink onClick={handleClick}>\n                        <Icon view={IconView.Cross} scale={IconScale.Medium} />\n                    </IconLink>\n                </div>\n            </div>\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(OnboardingBanner);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content--kfz4yK_5kRjOUvxQViuf\",\"rightButtons\":\"right-buttons--dFSkb8VhHvVXhuz6MH1j\",\"gifWrapper\":\"gif-wrapper--dFBVQ2DH4QzovQyIRrHm\",\"gif\":\"gif--tTK6XyWcU7CYrN9YX1pN\"};","import { useCallback, useEffect } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { H2Section } from 'bloko/blocks/header';\nimport Modal from 'bloko/blocks/modal';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ElementShownAnchor from 'lux/components/ElementShownAnchor';\nimport translation from 'lux/components/translation';\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\n\nimport styles from './index.less';\n\nconst REMOTE = '/shards/hide_resume_card_redesign_onboarding_modal';\n\ndeclare global {\n    interface FetcherPutApi {\n        [REMOTE]: {\n            queryParams: undefined;\n            body: undefined;\n            response: void;\n        };\n    }\n}\n\ntype AnalyticsParams = {\n    employerId: string;\n    employerManagerId?: string;\n};\n\nconst sendEventElementShown = (element: HTMLElement, analyticsParams: AnalyticsParams) =>\n    Analytics.sendHHEventElementShown(element, { elementName: 'resume_card_onboarding_modal', ...analyticsParams });\n\nconst sendEventClose = (analyticsParams: AnalyticsParams) =>\n    Analytics.sendHHEventButtonClick('resume_card_onboarding_modal_close', analyticsParams);\n\nconst sendEventSubmit = (analyticsParams: AnalyticsParams) =>\n    Analytics.sendHHEventButtonClick('resume_card_onboarding_modal_submit', analyticsParams);\n\nconst TrlKeys = {\n    title: 'resumeCard.redesign.onboarding.modal.title',\n    subtitle: 'resumeCard.redesign.onboarding.modal.subtitle',\n    description: 'resumeCard.redesign.onboarding.modal.description',\n    submit: 'resumeCard.redesign.onboarding.modal.submit',\n};\n\nconst OnboardingModal: TranslatedComponent = ({ trls }) => {\n    const [visible, setShow, setHide] = useOnOffState(false);\n\n    const employerId = useSelector((state) => state.employerId);\n    const employerManagerId = useSelector((state) => state.employerManager?.id);\n\n    useEffect(() => setShow(), [setShow]);\n\n    const handleClose = useCallback(() => {\n        setHide();\n        fetcher.put(REMOTE).catch(console.error);\n        UXFeedback.sendEvent('resume_snippet_redesign_view_override');\n    }, [setHide]);\n\n    return (\n        <Modal\n            onClose={() => {\n                handleClose();\n                sendEventClose({ employerId, employerManagerId });\n            }}\n            visible={visible}\n        >\n            <ElementShownAnchor\n                fn={sendEventElementShown}\n                employerId={employerId}\n                employerManagerId={employerManagerId}\n            >\n                <H2Section>{trls[TrlKeys.title]}</H2Section>\n                <VSpacing base={4} />\n                <div className={styles.content}>\n                    <Text strong>{trls[TrlKeys.subtitle]}</Text>\n                    <VSpacing base={4} />\n                    <Text>{trls[TrlKeys.description]}</Text>\n                    <VSpacing base={4} />\n                    <div className={styles.gifWrapper}>\n                        <div className={styles.gif} />\n                    </div>\n                </div>\n                <VSpacing base={4} />\n                <div className={styles.rightButtons}>\n                    <Button\n                        kind={ButtonKind.Primary}\n                        onClick={() => {\n                            handleClose();\n                            sendEventSubmit({ employerId, employerManagerId });\n                        }}\n                    >\n                        {trls[TrlKeys.submit]}\n                    </Button>\n                </div>\n            </ElementShownAnchor>\n        </Modal>\n    );\n};\n\nexport default translation(OnboardingModal);\n","import PropTypes from 'prop-types';\n\nimport { formatNewLine } from 'bloko/common/trl';\n\nimport Attention, { AttentionKind } from 'lux/components/Attention';\nimport PageErrorWrapper from 'lux/components/PageErrorWrapper';\nimport { DefaultLayout } from 'lux/components/PageLayout';\nimport translation from 'lux/components/translation';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ErrorWrapper = ({ children, trls }) => {\n    const errorCode = useSelector((state) => state.errorCode);\n    const userType = useSelector((state) => state.userType);\n\n    if (errorCode === 403 && userType === UserType.Employer) {\n        return (\n            <DefaultLayout>\n                <Attention kind={AttentionKind.Bad} corrected>\n                    {formatNewLine(trls[ErrorWrapper.trls.denied])}\n                </Attention>\n            </DefaultLayout>\n        );\n    }\n    return <PageErrorWrapper>{children}</PageErrorWrapper>;\n};\n\nErrorWrapper.trls = {\n    denied: 'employer.resumesSearch.denied',\n};\n\nErrorWrapper.propTypes = {\n    children: PropTypes.node,\n    trls: PropTypes.object,\n};\n\nexport default translation(ErrorWrapper);\n","import { FC, PropsWithChildren } from 'react';\n\nimport { H3Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nconst HeaderWrapper: FC<PropsWithChildren> = ({ children }) => {\n    return (\n        <>\n            <H3Section Element=\"h1\">{children}</H3Section>\n            <VSpacing xs={6} base={3} />\n        </>\n    );\n};\n\nexport default HeaderWrapper;\n","import { useDispatch } from 'react-redux';\n\nimport pickVacancyFromHeaderButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/search/pick_vacancy_from_header_button_click';\nimport HSpacing from 'bloko/blocks/hSpacing';\nimport { H3Section } from 'bloko/blocks/header';\nimport Link from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport { useContextVacancyIdFromUrl } from 'lux/components/ResumeSearch/PickVacancyModal/useContextVacancyIdFromUrl';\nimport translation from 'lux/components/translation';\nimport { showPickVacancyModal } from 'lux/models/pickVacancyOnResumeSearch';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    toVacancy: 'resumeSearch.pickVacancyHeader.toVacancy',\n    pickVacancy: 'resumeSearch.pickVacancyHeader.pickVacancy',\n    pick: 'treeselector.save',\n    change: 'jobSearchStatus.change',\n};\n\nconst PickVacancyAdditionalHeader: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n\n    const vacancies = useSelector((state) => state.managerVacancies.vacancies?.list);\n    const activeVacanciesCount = useSelector((state) => state.managerVacancies.vacancies?.activeVacanciesCount) || 0;\n    const contextVacancyId = useContextVacancyIdFromUrl();\n    const vacancyName = vacancies?.find((vacancy) => vacancy.vacancyId === contextVacancyId)?.name;\n\n    const text = vacancyName ? `${trls[TrlKeys.toVacancy]} \"${vacancyName}\"` : trls[TrlKeys.pickVacancy];\n    const linkText = vacancyName ? trls[TrlKeys.change] : trls[TrlKeys.pick];\n\n    const openModal = () => {\n        pickVacancyFromHeaderButtonClick({ activeVacanciesCount });\n        dispatch(showPickVacancyModal(true));\n    };\n\n    return (\n        <div>\n            <H3Section Element=\"span\">{text}</H3Section>\n            <HSpacing base={2} />\n            <Link onClick={openModal}>{linkText}</Link>\n        </div>\n    );\n};\n\nexport default translation(PickVacancyAdditionalHeader);\n","import { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nexport const useShowPickVacancyAdditionalHeader = (): boolean => {\n    const userType = useSelector(({ userType }) => userType);\n    const isEmployer = userType === UserType.Employer;\n\n    const { isBannerShow, isEnablePickVacancy } = useSelector((state) => state.pickVacancyOnResumeSearch);\n\n    return isEmployer && !!isEnablePickVacancy && !isBannerShow;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form--bX23CTaqG3XDhlcJKz9G\",\"formItem\":\"form-item--DgKgNC3bPmSmXoyOIt1Q\"};","import { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport pickedVacancyInModalButtonClick from '@hh.ru/analytics-js-events/build/xhh/employer/search/picked_vacancy_in_modal_button_click';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { FormSpacer } from 'bloko/blocks/form';\nimport InputText from 'bloko/blocks/inputText';\nimport Loading, { LoadingScale, LoadingColor } from 'bloko/blocks/loading';\nimport Modal, { ModalHeader, ModalTitle, ModalFooter, ModalContent } from 'bloko/blocks/modal';\nimport Radio from 'bloko/blocks/radio';\nimport Text, { TextImportance, TextSize } from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport debounce from 'bloko/common/debounce';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport urlParser from 'bloko/common/urlParser';\n\nimport searchManagerVacancies from 'lux/components/EmployerVacancies/searchManagerVacancies';\nimport FilterIcon from 'lux/components/FilterIcon';\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport { showPickVacancyModal } from 'lux/models/pickVacancyOnResumeSearch';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport {\n    CONTEXT_VACANCY_ID_NOT_CHOSEN,\n    CONTEXT_VACANCY_ID_PARAM,\n    useContextVacancyIdFromUrl,\n} from 'lux/components/ResumeSearch/PickVacancyModal/useContextVacancyIdFromUrl';\n\nimport style from './style.less';\n\nconst FILTER_DEBOUNCE = 300;\n\nconst TrlKeys = {\n    myVacancies: 'vacancies.groups.myVacancies',\n    notChosen: 'employer.vacancy.SelectInputField.defaultEmptyText',\n    submit: 'customSelect.submit',\n    cancel: 'assessments.filters.cancel',\n    search: 'index.employerLastSearches.search',\n};\nconst PickVacancyModal: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    const { isEnablePickVacancy, isShowModal } = useSelector((state) => state.pickVacancyOnResumeSearch);\n    const vacancies = useSelector((state) => state.managerVacancies.vacancies?.list || []);\n    const displayedVacancyList = [\n        { name: trls[TrlKeys.notChosen], vacancyId: CONTEXT_VACANCY_ID_NOT_CHOSEN, areaName: null },\n        ...vacancies,\n    ];\n\n    const contextVacancyId = useContextVacancyIdFromUrl();\n    const [pickedVacancyId, setPickedVacancyId] = useState(contextVacancyId);\n    const [searchValue, setSearchValue] = useState('');\n    const [isVacancySearchLoading, setIsVacancySearchLoading] = useState(false);\n    const [isSubmitLoading, setIsSubmitLoading] = useState(false);\n    const { pathname, search } = useSelector((state) => state.router.location);\n\n    const stopLoading = useCallback(() => setIsVacancySearchLoading(false), []);\n\n    const debouncedSearch = useMemo(\n        () =>\n            debounce((value: string) => {\n                setIsVacancySearchLoading(true);\n                dispatch(\n                    searchManagerVacancies({\n                        params: {\n                            vacancyName: value,\n                        },\n                    })\n                ).then(stopLoading, stopLoading);\n            }, FILTER_DEBOUNCE),\n        [dispatch, stopLoading]\n    );\n\n    const onSearchValueChange = (value: string) => {\n        setSearchValue(value);\n        debouncedSearch(value);\n    };\n\n    const handleSearchValueClear = () => {\n        onSearchValueChange('');\n    };\n\n    const onClose = useCallback(() => {\n        dispatch(showPickVacancyModal(false));\n    }, [dispatch]);\n\n    const getLinkHref = () => {\n        const parsedUrl = urlParser(pathname + search);\n        parsedUrl.params[CONTEXT_VACANCY_ID_PARAM] =\n            pickedVacancyId === CONTEXT_VACANCY_ID_NOT_CHOSEN ? undefined : pickedVacancyId;\n\n        return parsedUrl.href;\n    };\n\n    const onSubmit = () => {\n        pickedVacancyInModalButtonClick({\n            vacancyId: pickedVacancyId,\n            searchInputValue: searchValue,\n        });\n        setIsSubmitLoading(true);\n    };\n\n    useEffect(() => {\n        setSearchValue('');\n        setIsSubmitLoading(false);\n        onClose();\n    }, [location, onClose]);\n\n    if (!isEnablePickVacancy) {\n        return null;\n    }\n\n    return (\n        <Modal visible={!!isShowModal} onClose={onClose}>\n            <ModalHeader>\n                <ModalTitle Element=\"h2\">{trls[TrlKeys.myVacancies]}</ModalTitle>\n                <VSpacing base={3} />\n                <InputText\n                    placeholder={trls[TrlKeys.search]}\n                    value={searchValue}\n                    onChange={onSearchValueChange}\n                    icon={\n                        <FilterIcon\n                            isLoading={isVacancySearchLoading}\n                            value={searchValue}\n                            handleClear={handleSearchValueClear}\n                        />\n                    }\n                />\n            </ModalHeader>\n            <ModalContent>\n                <Form className={style.form}>\n                    {displayedVacancyList.map(({ name, vacancyId, areaName }) => (\n                        <div key={vacancyId} className={style.formItem}>\n                            <Radio\n                                value={`${vacancyId}`}\n                                checked={vacancyId === pickedVacancyId}\n                                onChange={() => setPickedVacancyId(vacancyId)}\n                            >\n                                <Text>{name}</Text>\n                                {areaName && (\n                                    <Text size={TextSize.Small} importance={TextImportance.Secondary}>\n                                        {areaName}\n                                    </Text>\n                                )}\n                            </Radio>\n                        </div>\n                    ))}\n                </Form>\n            </ModalContent>\n            <ModalFooter>\n                <Button onClick={onClose}>{trls[TrlKeys.cancel]}</Button>\n                <FormSpacer>\n                    <Button\n                        Element={Link}\n                        to={getLinkHref()}\n                        onClick={onSubmit}\n                        kind={ButtonKind.Primary}\n                        loading={isSubmitLoading && <Loading scale={LoadingScale.Small} initial={LoadingColor.White} />}\n                    >\n                        {trls[TrlKeys.submit]}\n                    </Button>\n                </FormSpacer>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default translation(PickVacancyModal);\n","import urlParser from 'bloko/common/urlParser';\n\nimport useUrl from 'lux/hooks/useUrl';\n\nexport const CONTEXT_VACANCY_ID_NOT_CHOSEN = -1;\nexport const CONTEXT_VACANCY_ID_PARAM = 'context_vacancy_id';\n\nexport const useContextVacancyIdFromUrl = (): number => {\n    const url = useUrl();\n    const parsedUrl = urlParser(url);\n\n    return Number(parsedUrl.params[CONTEXT_VACANCY_ID_PARAM] ?? CONTEXT_VACANCY_ID_NOT_CHOSEN);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container--yJLYW_Cy_WOLTBRwYj5G\"};","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './index.less';\n\nconst TrlKeys = {\n    title: 'search.resume.autoInviteSnippet.title',\n    description: 'search.resume.autoInviteSnippet.description',\n    button: 'search.resume.autoInviteSnippet.button',\n};\n\nconst AutoInviteSnippet: TranslatedComponent = ({ trls }) => {\n    const isAutoInvitePromo = useSelector((state) => state.resumeSearchAutoInvitePromo);\n    const vacancyId = useSelector((state) => state.router.location.query.vacancy_id);\n\n    if (!isAutoInvitePromo) {\n        return null;\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div>\n                    <Text strong>{trls[TrlKeys.title]}</Text>\n                    <VSpacing base={2} />\n                    <Text>{trls[TrlKeys.description]}</Text>\n                </div>\n                <Button\n                    Element={Link}\n                    kind={ButtonKind.Success}\n                    to={`/employer/vacancyresponses/autoinvite?vacancyId=${vacancyId}&active=true`}\n                    target=\"_blank\"\n                >\n                    {trls[TrlKeys.button]}\n                </Button>\n            </div>\n            <VSpacing base={6} />\n        </>\n    );\n};\n\nexport default translation(AutoInviteSnippet);\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"banner--GYi6olDcFb1LAUSTeAyK\",\"bannerInfo\":\"banner__info--Ad8N6YAPlQ5IG3RTduxw\",\"bannerDescriptionContainer\":\"banner__description-container--c0OW1ZR1IXSGQ_runO54\",\"bannerImage\":\"banner__image--D4zDb0wSDGmkhaImJDLQ\",\"bannerActionCard\":\"banner__action-card--b2NcTTQepkmYJIuUmkxM\"};","import { useDispatch } from 'react-redux';\n\nimport Button, { ButtonKind, ButtonScale, ButtonType } from 'bloko/blocks/button';\nimport { H3Section } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { showPickVacancyModal } from 'lux/models/pickVacancyOnResumeSearch';\n\nimport styles from './style.less';\n\nconst TrlKeys = {\n    title: 'resumeSearch.pickVacancyBanner.title',\n    description: 'resumeSearch.pickVacancyBanner.description',\n    buttonText: 'resumeSearch.pickVacancyBanner.buttonText',\n};\n\nconst PickVacancyBanner: TranslatedComponent = ({ trls }) => {\n    const dispatch = useDispatch();\n\n    const openModal = () => {\n        dispatch(showPickVacancyModal(true));\n    };\n\n    return (\n        <div className={styles.banner}>\n            <div className={styles.bannerInfo}>\n                <H3Section>{trls[TrlKeys.title]}</H3Section>\n                <VSpacing base={2} />\n\n                <div className={styles.bannerDescriptionContainer}>\n                    <Text>{trls[TrlKeys.description]}</Text>\n                </div>\n                <VSpacing base={2} />\n\n                <Button\n                    kind={ButtonKind.Primary}\n                    type={ButtonType.Button}\n                    scale={ButtonScale.Small}\n                    onClick={openModal}\n                >\n                    {trls[TrlKeys.buttonText]}\n                </Button>\n            </div>\n\n            <div className={styles.bannerImage} />\n            <div className={styles.bannerActionCard} />\n        </div>\n    );\n};\n\nexport default translation(PickVacancyBanner);\n","import { useRef, useEffect } from 'react';\n\nimport Analytics, { VendorAnalytics } from '@hh.ru/analytics-js';\nimport { useSelectorNonNullable } from '@hh.ru/redux-create-reducer';\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport numberFormatter from 'bloko/common/numberFormatter';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst sendRegisterAnalytics = () => {\n    VendorAnalytics.eventToStorage('employer', 'to_register', 'search_up_registration');\n    Analytics.sendHHEventButtonClick('search_up_registration');\n};\n\nconst TrlKeys = {\n    register: 'resumesSearch.inSerp.register',\n    benefitsForNotEmptyResult: 'resumesSearch.inSerp.benefits.notEmpty',\n    benefitsForEmptyResult: 'resumesSearch.inSerp.benefits.empty',\n    registerAction: 'resumesSearch.normalResults.register',\n};\n\nconst RegistrationAnonActionInSerp: TranslatedComponent = ({ trls }) => {\n    const regBannerRef = useRef<HTMLDivElement>(null);\n    const registerURL = useSelectorNonNullable((state) => state.authUrl[`auth-employer-url`]);\n    const stats = useSelector((state) => state.resumeSearchResult?.stats);\n\n    useEffect(() => {\n        if (regBannerRef.current) {\n            Analytics.sendHHEventElementShown(regBannerRef.current, {\n                name: 'show_registration_anon_action_in_serp',\n            });\n        }\n    }, [regBannerRef]);\n\n    if (stats.normalSearchResults === null || !registerURL) {\n        return null;\n    }\n\n    const showedAfterRegistration = stats.normalSearchResults - stats.totalUngroupedResults;\n\n    return (\n        <div ref={regBannerRef} className=\"registration-in-serp\">\n            <div className=\"registration-in-serp-messages\">\n                <span className=\"registration-in-serp-icon\" />\n                <div>\n                    <Text strong data-qa=\"resumes-total-found\">\n                        {trls[TrlKeys.register]}\n                    </Text>\n                    <VSpacing base={1} />\n                    <Text data-qa=\"resumes-total-found\">\n                        {showedAfterRegistration === 0 && trls[TrlKeys.benefitsForEmptyResult]}\n                        {showedAfterRegistration > 0 &&\n                            format(trls[TrlKeys.benefitsForNotEmptyResult], {\n                                '{0}': numberFormatter.format(`${showedAfterRegistration}`, {\n                                    groupSeparator: NON_BREAKING_SPACE,\n                                }),\n                            })}\n                    </Text>\n                </div>\n            </div>\n            <div className=\"registration-in-serp-actions\">\n                <div className=\"registration-in-serp-actions-content\">\n                    <Button\n                        Element={Link}\n                        kind={ButtonKind.Primary}\n                        onClick={sendRegisterAnalytics}\n                        to={registerURL}\n                        data-qa=\"resume-serp__action-after-search\"\n                    >\n                        {trls[TrlKeys.registerAction]}\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default translation(RegistrationAnonActionInSerp);\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonType, ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport Icon, { IconScale, IconColor, IconView } from 'bloko/blocks/icon';\nimport BlokoLink from 'bloko/blocks/link';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport Form from 'lux/components/Form';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\nimport showDefaultError from 'lux/requests/notifications/showDefaultError';\n\nconst STATE = {\n    SAVING: 'saving',\n    SAVED: 'saved',\n};\n\nconst SavedSearchSubscription = ({ trls }) => {\n    const query = useSelector((state) => state.resumeSearchResult.queries.autosearch);\n    const saveSearch = useSelector((state) => state.resumeSearchResult.saveSearch);\n\n    const dispatch = useDispatch();\n    const [state, setState] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const location = useSelector((state) => state.router.location);\n\n    useEffect(() => {\n        setDisabled(false);\n    }, []);\n\n    useEffect(() => {\n        setState(null);\n    }, [location]);\n\n    if (!saveSearch) {\n        return null;\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setState(STATE.SAVING);\n        try {\n            await fetcher.post(`/resumesavedsearch/save?${query}`);\n        } catch (error) {\n            dispatch(showDefaultError(error));\n            setState(null);\n            return;\n        }\n        setState(STATE.SAVED);\n    };\n\n    return (\n        <>\n            <div className=\"employer-snippet\">\n                <Form onSubmit={handleSubmit} data-qa=\"autosearch-subscribe__form\">\n                    {state !== STATE.SAVED ? (\n                        <div className=\"saved-search-subscription\">\n                            <div>\n                                <Text strong>{trls[SavedSearchSubscription.trls.teaser1]}</Text>\n                                <VSpacing base={1} />\n                                <div>{trls[SavedSearchSubscription.trls.teaser2]}</div>\n                            </div>\n                            <div>\n                                <Button\n                                    type={ButtonType.Submit}\n                                    data-qa=\"autosearch-subscribe__submit\"\n                                    kind={ButtonKind.Success}\n                                    disabled={disabled}\n                                    scale={ButtonScale.Small}\n                                    loading={\n                                        state === STATE.SAVING && (\n                                            <Icon\n                                                kind={IconColor.Blue60}\n                                                view={IconView.Loader}\n                                                scale={IconScale.Small}\n                                            />\n                                        )\n                                    }\n                                >\n                                    {trls[SavedSearchSubscription.trls.subscribe]}\n                                </Button>\n                            </div>\n                        </div>\n                    ) : (\n                        <div data-qa=\"vacancy-serp__search-saved\">\n                            {trls[SavedSearchSubscription.trls.saved]}\n                            <BlokoLink disableVisited Element={Link} to=\"/resumesavedsearch\">\n                                {trls[SavedSearchSubscription.trls.autosearch]}\n                            </BlokoLink>\n                        </div>\n                    )}\n                </Form>\n            </div>\n            <VSpacing base={4} />\n        </>\n    );\n};\n\nSavedSearchSubscription.propTypes = {\n    trls: PropTypes.object,\n};\n\nSavedSearchSubscription.trls = {\n    teaser1: 'serp.savedSearch.teaser.1',\n    teaser2: 'serp.savedSearch.teaser.2',\n    subscribe: 'search.vacancy.savedSearch.subscribe',\n    saved: 'vacancySearchResults.saveSearchPreference.searchSavedIn',\n    autosearch: 'vacancySearchResults.saveSearchPreference.autosearch',\n};\n\nexport default translation(SavedSearchSubscription);\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"banner--g7wqudMADEzzb17Io62R\",\"bannerInfo\":\"banner__info--qH9oJaIbMDlRSmK3d93T\",\"bannerImage\":\"banner__image--eU_iQmiVULTCxAXY9W1Q\"};","import Analytics from '@hh.ru/analytics-js';\nimport { H3Section } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { ElementSpyInstance } from 'bloko/common/elementSpy';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport ElementShownAnchor from 'lux/components/ElementShownAnchor';\nimport translation from 'lux/components/translation';\n\nimport styles from './NotFoundByContactBanner.less';\n\nconst TrlKeys = {\n    title: 'search.resume.notFoundByContactTitle',\n    description: 'search.resume.notFoundByContactDescription',\n};\n\nconst sendElementShownAnalytics = (element: HTMLElement): ElementSpyInstance => {\n    return Analytics.sendHHEventElementShown(element, {\n        name: 'not_found_by_contact_banner',\n    });\n};\n\nconst NotFoundByContactBanner: TranslatedComponent = ({ trls }) => {\n    return (\n        <ElementShownAnchor fn={sendElementShownAnalytics} className={styles.banner}>\n            <div className={styles.bannerInfo}>\n                <H3Section>{trls[TrlKeys.title]}</H3Section>\n                <VSpacing base={2} />\n                <Text>{trls[TrlKeys.description]}</Text>\n            </div>\n            <div className={styles.bannerImage}></div>\n        </ElementShownAnchor>\n    );\n};\n\nexport default translation(NotFoundByContactBanner);\n","import React, { FC } from 'react';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { AdsExternalBannerProps } from 'lux/models/banners/AdsExternalBanner.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst bannerPositions = [3, 9] as const;\ntype BannerPosition = (typeof bannerPositions)[number];\ninterface GetPositionToBannersMap {\n    (banners: Record<string, AdsExternalBannerProps[]>, position: BannerPosition): Record<\n        string,\n        AdsExternalBannerProps[]\n    >;\n}\n\nconst isBannerPosition = (position: number): position is BannerPosition => bannerPositions.includes(position);\n\nconst getPositionToBannersMap: GetPositionToBannersMap = (banners, position) => {\n    const bannersMap = {\n        3: {\n            bannerL: banners['serp-first-l'],\n            bannerM: banners['serp-first-m'],\n            bannerS: banners['serp-first-s'],\n            bannerXS: banners['serp-first-xs'],\n        },\n        9: {\n            bannerL: banners['serp-second-l'],\n            bannerM: banners['serp-second-m'],\n            bannerS: banners['serp-second-s'],\n            bannerXS: banners['serp-second-xs'],\n        },\n    };\n    return bannersMap[position];\n};\n\ninterface SearchResultBannersType {\n    position: number;\n    banners: Record<string, AdsExternalBannerProps[]>;\n}\n\nconst SearchResultBanners: FC<SearchResultBannersType> = ({ position, banners }) => {\n    const adsSearchParams = useSelector((state) => state.adsSearchParams);\n    if (!isBannerPosition(position)) {\n        return null;\n    }\n    const { bannerL, bannerM, bannerS, bannerXS } = getPositionToBannersMap(banners, position);\n    const adsPositionInfo = `${bannerPositions.indexOf(position) + 1}_${position}`;\n    return (\n        <>\n            {bannerL?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-l\">\n                    <div className=\"serp-special\">\n                        <AdsExternalBanner\n                            {...bannerL[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerM?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-m\">\n                    <div className=\"serp-special\">\n                        <AdsExternalBanner\n                            {...bannerM[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerS?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-s\">\n                    <div className=\"serp-special\">\n                        <AdsExternalBanner\n                            {...bannerS[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerXS?.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-xs\">\n                    <div className=\"serp-special\">\n                        <AdsExternalBanner\n                            {...bannerXS[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={adsPositionInfo}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default SearchResultBanners;\n","import { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Gap from 'bloko/blocks/gap/index';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport CONTENT_ID from 'lux/components/A11y/A11yConstants';\nimport ChatikSpoilerPreloader from 'lux/components/ChatikSpoiler/Preloader';\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport ResumeCard from 'lux/components/ResumeCard';\nimport NotFoundByContactBanner from 'lux/components/ResumeSearch/NotFoundByContactBanner';\nimport ResumeSearchBanners from 'lux/components/ResumeSearch/ResumeSearchBanners';\nimport SearchRating from 'lux/components/SearchRating';\nimport translation from 'lux/components/translation';\nimport useSearchQualityUxFb from 'lux/hooks/useSearchQualityUxFb';\nimport { useSendExperienceAnalytics } from 'lux/hooks/useSendExperienceAnalytics';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst FIRST_BANNER_POSITION = 3;\nconst SECOND_BANNER_POSITION = 9;\nconst DEFAULT_RATING_POSITION = 9;\nconst RESUME_SEARCH_RATING = 'resume_search_rating';\n\nconst SearchResults = ({ trls }) => {\n    useSearchQualityUxFb(SearchType.Resume);\n    useSendExperienceAnalytics();\n\n    const banners = useSelector((state) => state.banners);\n    const resumes = useSelector((state) => state.resumeSearchResult.resumes);\n    const withHiddenResumes = useSelector((state) => state.resumeSearchResult.withHiddenResumes);\n    const features = useSelector((state) => state.features);\n    const searchLoading = useSelector((state) => state.searchLoading);\n    const [resumesNumber, setResumesNumber] = useState(\n        features[SearchResults.features.numberOfResumesRenderedOnServer]\n    );\n    const videos = useSelector((state) => state.resumeSearchResult?.videos) ?? {};\n    /**\n     * Рендерим на сервере и на клиенте до CDM только минимально необходимое количество резюме.\n     * Значение в настройке зависит от количества резюме выводимых в SEO-каталогах резюме.\n     *\n     * Это нужно потому, что рендер резюме — очень нагруженная операция,\n     * из-за большого количества элементов и логики,\n     * чтобы укладываться в адекватное время на сервере решили остановиться\n     * на частичном рендере и таким образом оптимизировать время серверного рендеринга\n     */\n    const resumesToRender = !resumesNumber ? resumes : resumes.slice(0, resumesNumber);\n    useEffect(() => {\n        if (resumesNumber && resumes.length > resumesNumber) {\n            // значение 0 отрендерит все\n            setResumesNumber(0);\n        }\n    }, [resumes.length, resumesNumber]);\n\n    if (resumes.length === 0 && withHiddenResumes) {\n        return <NotFoundByContactBanner />;\n    }\n\n    if (resumes.length === 0) {\n        return (\n            <Gap top bottom>\n                {trls[SearchResults.trls.notFound]}\n            </Gap>\n        );\n    }\n\n    const ratingPosition = Math.min(resumesToRender.length - 1, DEFAULT_RATING_POSITION);\n    return (\n        <main className=\"resume-serp-content\" data-qa=\"resume-serp__results-search\" id={CONTENT_ID}>\n            {withHiddenResumes && (\n                <>\n                    <NotFoundByContactBanner />\n                    <VSpacing base={4} />\n                </>\n            )}\n            {resumesToRender.map((resume, index) => (\n                <Fragment key={resume._attributes.hash}>\n                    <ResumeCard\n                        key={resume._attributes.hash}\n                        resume={resume}\n                        videoLink={videos[resume._attributes.user]}\n                    />\n                    {[FIRST_BANNER_POSITION, SECOND_BANNER_POSITION].includes(index + 1) && (\n                        <ResumeSearchBanners banners={banners} position={index + 1} />\n                    )}\n                    {ratingPosition === index && (\n                        <SearchRating\n                            portfolio=\"PORTFOLIO-16916\"\n                            eventName={RESUME_SEARCH_RATING}\n                            infoTipName={RESUME_SEARCH_RATING}\n                        />\n                    )}\n                </Fragment>\n            ))}\n            <ChatikSpoilerPreloader />\n            {searchLoading && <div className=\"resume-serp-content-loader\" />}\n        </main>\n    );\n};\n\nSearchResults.trls = {\n    notFound: 'search.vacancy.changeParamsOrKeywords',\n};\n\nSearchResults.propTypes = {\n    trls: PropTypes.object.isRequired,\n};\n\nSearchResults.features = {\n    numberOfResumesRenderedOnServer: 'max_resumes_rendered_on_server',\n};\n\nexport default translation(SearchResults);\n","import CustomSelect, { CustomSelectOption } from 'bloko/blocks/customSelect';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { NARROW_NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\nconst TrlKeys = {\n    resumes: 'employer.resumesSearch.resumes',\n};\n\ninterface ItemsOnPageProps {\n    onChange: (value: number) => void;\n    value: number;\n}\n\nconst ItemsOnPage: TranslatedComponent<ItemsOnPageProps> = ({ onChange, value, trls }) => {\n    const values = [20, 50, 70, 100];\n\n    if (!values.includes(value)) {\n        values.push(value);\n        values.sort((a, b) => Number(a) - Number(b));\n    }\n\n    return (\n        <CustomSelect\n            name=\"items_on_page\"\n            onChange={onChange}\n            wrapperProps={{ 'data-qa': 'serp-settings__items-on-page' }}\n            value={value}\n            light\n            flexible\n        >\n            {values.map((value) => (\n                <CustomSelectOption data-qa={`items-on-page-${value}`} key={value} value={value}>\n                    {value}\n                    {NARROW_NON_BREAKING_SPACE}\n                    {trls[TrlKeys.resumes]}\n                </CustomSelectOption>\n            ))}\n        </CustomSelect>\n    );\n};\n\nexport default translation(ItemsOnPage);\n","import React from 'react';\n\nimport CustomSelect, { CustomSelectOption } from 'bloko/blocks/customSelect';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { CriteriaKey, OrderByOption } from 'lux/models/search/searchCriteria.types';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    [OrderByOption.PublicationTime]: 'search.order.publication_time',\n    [OrderByOption.SalaryDesc]: 'search.order.salary_desc',\n    [OrderByOption.SalaryAsc]: 'search.order.salary_asc',\n    [OrderByOption.Relevance]: 'search.order.relevance',\n};\n\ninterface SearchOrderProps {\n    onChange: (value: OrderByOption) => void;\n    value: OrderByOption;\n}\n\nconst SearchOrder: TranslatedComponent<SearchOrderProps> = ({ onChange, value, trls }) => {\n    const values = useSelector((state) => state.resumeSearchDictionaries[CriteriaKey.OrderBy]);\n    if (!values) {\n        return null;\n    }\n\n    return (\n        <CustomSelect\n            name=\"order_by\"\n            onChange={onChange}\n            value={value}\n            wrapperProps={{ 'data-qa': 'serp-settings__order-by' }}\n            light\n            flexible\n        >\n            {values.map((value) => (\n                <CustomSelectOption data-qa={`order-by-${value}`} key={value} value={value}>\n                    {trls[TrlKeys[value]]}\n                </CustomSelectOption>\n            ))}\n        </CustomSelect>\n    );\n};\n\nexport default translation(SearchOrder);\n","import React from 'react';\n\nimport CustomSelect, { CustomSelectOption } from 'bloko/blocks/customSelect';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { SearchPeriodOption, PossibleSearchPeriod } from 'lux/models/resumeSearchCriteria';\nimport { useSelector } from 'lux/modules/useSelector';\n\ninterface SearchPeriodProps {\n    onChange: (value: PossibleSearchPeriod) => void;\n    value: PossibleSearchPeriod;\n}\n\nconst TrlKeys = {\n    customInterval: 'search.period.-1',\n    [SearchPeriodOption.AllTime]: 'search.period.0',\n    [SearchPeriodOption.Day]: 'search.period.1',\n    [SearchPeriodOption.ThreeDays]: 'search.period.3',\n    [SearchPeriodOption.Week]: 'search.period.7',\n    [SearchPeriodOption.Month]: 'search.period.30',\n    [SearchPeriodOption.Year]: 'search.period.365',\n};\n\nconst SearchPeriod: TranslatedComponent<SearchPeriodProps> = ({ onChange, value, trls }) => {\n    const values = useSelector((state) => state.resumeSearchDictionaries.search_period); // eslint-disable-line camelcase\n\n    if (!values) {\n        return null;\n    }\n\n    const searchPeriodValues = value === 'customInterval' ? [...values, value] : values;\n\n    return (\n        <CustomSelect\n            name=\"search_period\"\n            onChange={onChange}\n            wrapperProps={{ 'data-qa': 'serp-settings__search-period' }}\n            value={value}\n            light\n            flexible\n        >\n            {searchPeriodValues.map((value) => (\n                <CustomSelectOption data-qa={`search-period-${value}`} key={value} value={value}>\n                    {trls[TrlKeys[value]]}\n                </CustomSelectOption>\n            ))}\n        </CustomSelect>\n    );\n};\n\nexport default translation(SearchPeriod);\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport PropTypes from 'prop-types';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport ButtonSelect from 'bloko/blocks/button/ButtonSelect';\nimport ClickDown, { DownLayer, DownPlacement } from 'bloko/blocks/drop/Down/Click';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\nimport urlParser from 'bloko/common/urlParser';\n\nimport SettingsForm from 'lux/components/Employer/ResumeView/SettingsForm';\nimport ItemsOnPage from 'lux/components/ResumeSearch/ItemsOnPage';\nimport SearchOrder from 'lux/components/ResumeSearch/SearchOrder';\nimport SearchPeriod from 'lux/components/ResumeSearch/SearchPeriod';\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst Settings = ({ trls }) => {\n    const activeSettings = useSelector((state) => state.resumeSearchResult.settings.activeSettings);\n    const availableSettings = useSelector((state) => state.resumeSearchResult.settings.availableSettings);\n    const filtersOnTheLeft = useSelector((state) => state.resumeSearchResult.settings.filtersOnTheLeft);\n    const criteria = useSelector((state) => state.resumeSearchResult.criteria);\n    const queries = useSelector((state) => state.resumeSearchResult.queries);\n    const pathname = useSelector((state) => state.router.location.pathname);\n    const showSearchPreference = useSelector((state) => state.searchPreference.isShown);\n    const defaultHhtmSource = useSelector((state) => state.analyticsParams.hhtmSource);\n    const breakpoint = getBreakpoint();\n\n    const dispatch = useDispatch();\n\n    const queryMap = {\n        search_period: queries.searchPeriodBase, // eslint-disable-line camelcase\n        order_by: queries.orderByBase, // eslint-disable-line camelcase\n        items_on_page: queries.itemsOnPageBase, // eslint-disable-line camelcase\n    };\n\n    const handleChange = (name, value) => {\n        const query = queryMap[name];\n        const url = urlParser(pathname);\n        url.search = query;\n        url.params = { ...url.params, [name]: [value] };\n        dispatch(push(url.href));\n    };\n\n    const ViewClickDown = useCallback(\n        ({ children }) => (\n            <ClickDown\n                flexible\n                layer={DownLayer.OverlayContent}\n                placement={DownPlacement.BottomStart}\n                onlySetPlacement\n                render={(close) => <SettingsForm close={close} />}\n            >\n                {children}\n            </ClickDown>\n        ),\n        []\n    );\n\n    const {\n        search_period: searchPeriod,\n        order_by: orderBy,\n        items_on_page: itemsOnPage,\n        date_from: dateFrom,\n        date_to: dateTo,\n    } = criteria;\n\n    const genericSearchPeriod = dateFrom && dateTo ? 'customInterval' : searchPeriod;\n    const selectedSettings = activeSettings.length + [filtersOnTheLeft].filter((setting) => setting?.value).length;\n    return (\n        <div className=\"resume-serp-filters resume-serp-filters_nova-order\">\n            <SearchPeriod\n                onChange={(value) => {\n                    handleChange('search_period', value);\n\n                    const isSXS = [Breakpoint.XS, Breakpoint.S].includes(breakpoint);\n                    const buttonName = `resume_search_filter_${isSXS ? 'touch' : 'apply'}`;\n                    const hhtmSource = isSXS ? `resume_search_filter` : defaultHhtmSource;\n                    Analytics.sendHHEventButtonClick(buttonName, {\n                        type: 'SEARCH_PERIOD',\n                        oldValue: genericSearchPeriod,\n                        newValue: value,\n                        hhtmSource,\n                    });\n                }}\n                value={genericSearchPeriod}\n            />\n            <SearchOrder\n                onChange={(value) => {\n                    handleChange('order_by', value);\n                }}\n                value={orderBy}\n            />\n            {availableSettings.length > 0 && !showSearchPreference && (\n                <ViewClickDown>\n                    <ButtonSelect flexible light data-qa=\"resume-serp__set-view-result\">\n                        {trls[Settings.trls.view]}\n                        {activeSettings.length > 0 && (\n                            <span className=\"supernova-navi-counter supernova-navi-counter_clear\">\n                                {selectedSettings}\n                            </span>\n                        )}\n                    </ButtonSelect>\n                </ViewClickDown>\n            )}\n            <ItemsOnPage\n                onChange={(value) => {\n                    handleChange('items_on_page', value);\n                }}\n                value={itemsOnPage}\n            />\n        </div>\n    );\n};\n\nSettings.propTypes = {\n    trls: PropTypes.object,\n};\n\nSettings.trls = {\n    advanced: 'search.advancedSearch',\n    view: 'employer.resumesSearch.settings.view',\n};\n\nexport default translation(Settings);\n","import { NovaFilterKey } from 'lux/models/novaFilters';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport { useIsHeadHunterPlatform, useIsZarplataPlatform } from 'lux/hooks/usePlatform';\n\nexport type AdditionalFiltersOrderKey =\n    | typeof NovaFilterKey.WorkTicket\n    | typeof NovaFilterKey.DriverLicenseTypes\n    | typeof NovaFilterKey.Language;\ninterface NovaFiltersOrders {\n    filtersOrder: NovaFilterKey[];\n    additionalFiltersOrder: AdditionalFiltersOrderKey[];\n}\n\nconst Features = {\n    enableDistrictFilter: 'enable_district_filter',\n};\n\nconst useNovaFiltersOrderForResume = (): NovaFiltersOrders => {\n    let filtersOrder: NovaFilterKey[] = [\n        NovaFilterKey.Resume,\n        NovaFilterKey.VacancyId,\n        NovaFilterKey.Area,\n        NovaFilterKey.Metro,\n        NovaFilterKey.Relocation,\n        NovaFilterKey.JobSearchStatus,\n        NovaFilterKey.Age,\n        NovaFilterKey.Employment,\n        NovaFilterKey.Schedule,\n        NovaFilterKey.Experience,\n        NovaFilterKey.ProfessionalRole,\n        NovaFilterKey.Gender,\n        NovaFilterKey.Salary,\n        NovaFilterKey.Citizenship,\n        NovaFilterKey.Label,\n        NovaFilterKey.VerifiedSkills,\n        NovaFilterKey.Skill,\n        NovaFilterKey.Etc,\n    ];\n    let additionalFiltersOrder: AdditionalFiltersOrderKey[] = [\n        NovaFilterKey.WorkTicket,\n        NovaFilterKey.DriverLicenseTypes,\n        NovaFilterKey.Language,\n    ];\n\n    const enableDistrictFilter = useSelector(({ features }) => features[Features.enableDistrictFilter] as boolean);\n    const isPlatformZp = useIsZarplataPlatform();\n    const isPlatformHH = useIsHeadHunterPlatform();\n    if ((enableDistrictFilter && isPlatformHH) || isPlatformZp) {\n        const areaPos = filtersOrder.indexOf(NovaFilterKey.Metro);\n        const filtersWithDistrict = [...filtersOrder];\n        filtersWithDistrict.splice(areaPos + 1, 0, NovaFilterKey.District);\n        filtersOrder = filtersWithDistrict;\n    }\n\n    if (isPlatformHH) {\n        const relocationPos = filtersOrder.indexOf(NovaFilterKey.Relocation);\n        const filtersWithExpIndustry = [...filtersOrder];\n        filtersWithExpIndustry.splice(relocationPos + 1, 0, NovaFilterKey.FilterExpIndustry);\n        filtersOrder = filtersWithExpIndustry;\n    }\n\n    if (isPlatformZp) {\n        const uniqHhBasicFilters = [NovaFilterKey.Relocation, NovaFilterKey.Skill, NovaFilterKey.VerifiedSkills];\n\n        filtersOrder = filtersOrder.filter((id) => !uniqHhBasicFilters.includes(id));\n\n        const uniqHhAddFilters = [NovaFilterKey.Citizenship, NovaFilterKey.Language, NovaFilterKey.WorkTicket];\n        additionalFiltersOrder = additionalFiltersOrder.filter((id) => !uniqHhAddFilters.includes(id));\n    }\n\n    if (isPlatformZp) {\n        filtersOrder = filtersOrder.filter((id) => id !== NovaFilterKey.JobSearchStatus);\n    }\n    const searchOldEducation = useSelector((state) => state.searchOldEducation);\n    if (!searchOldEducation) {\n        const skillPosition = filtersOrder.indexOf(isPlatformZp ? NovaFilterKey.Salary : NovaFilterKey.Label);\n        const filtersWithEducation = [...filtersOrder];\n        filtersWithEducation.splice(skillPosition + 1, 0, NovaFilterKey.EducationLevel, NovaFilterKey.University);\n        filtersOrder = filtersWithEducation;\n    }\n    return { filtersOrder, additionalFiltersOrder };\n};\n\nexport default useNovaFiltersOrderForResume;\n","import { useRef, useEffect } from 'react';\n\nimport Column from 'bloko/blocks/column';\nimport { FormItem } from 'bloko/blocks/form';\nimport Gap from 'bloko/blocks/gap';\nimport VSpacing from 'bloko/blocks/vSpacing';\n\nimport CatalogLinks from 'lux/components/CatalogSearch';\nimport ExtraFilterCatalogLinks from 'lux/components/CatalogSearch/ExtraFilters';\nimport NovaFilters from 'lux/components/NovaFilters';\nimport NovaFilterUpdateContextProvider from 'lux/components/NovaFilters/NovaFilterUpdateContext';\nimport Pagination from 'lux/components/Pagination';\nimport ResumeCardOnboardingBanner from 'lux/components/ResumeCard/Onboarding/Banner';\nimport ResumeCardOnboardingModal from 'lux/components/ResumeCard/Onboarding/Modal';\nimport AutoInviteSnippet from 'lux/components/ResumeSearch/AutoInviteSnippet';\nimport PickVacancyBanner from 'lux/components/ResumeSearch/PickVacancyBanner';\nimport RegistrationAnonActionInSerp from 'lux/components/ResumeSearch/RegistrationAnonActionInSerp';\nimport SavedSearchSubscription from 'lux/components/ResumeSearch/SavedSearchSubscription';\nimport SearchResults from 'lux/components/ResumeSearch/SearchResults';\nimport Settings from 'lux/components/ResumeSearch/Settings';\nimport SearchPreferenceButton from 'lux/components/SearchSorts/SearchPreferenceButton';\nimport StickySidebar, { SCREEN_XS_S, StickySidebarAndContent } from 'lux/components/StickySidebar';\nimport UnderSearchResultBanner from 'lux/components/UnderSearchResultBanner';\nimport useNovaFiltersOrderForResume from 'lux/hooks/useNovaFiltersOrderForResume';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ResumeSearchItems = () => {\n    const {\n        resumes,\n        criteria,\n        paging,\n        settings: { filtersOnTheLeft },\n        isClustersEnabled,\n        withHiddenResumes,\n    } = useSelector((state) => state.resumeSearchResult);\n    const resumeSerps = useRef(null);\n    const showSearchPreference = useSelector(({ searchPreference }) => searchPreference.isShown);\n    const isAnonymous = useSelector(({ userType }) => UserType.Anonymous === userType);\n    const { filtersOrder, additionalFiltersOrder } = useNovaFiltersOrderForResume();\n    const catalogLinks = useSelector((state) => state.catalogLinks);\n    const shouldHideSettings = withHiddenResumes && resumes.length === 0;\n    const isResumeCardRedesignOnboarding = useSelector((state) => state.isResumeCardRedesignOnboarding);\n    const isResumeCardRedesignOnboardingModal = useSelector((state) => state.isResumeCardRedesignOnboardingModal);\n    const isPickVacancyBannerShow = useSelector((state) => state.pickVacancyOnResumeSearch.isBannerShow);\n\n    useEffect(() => {\n        if (showSearchPreference) {\n            resumeSerps.current.scrollIntoView();\n        }\n    }, [showSearchPreference]);\n\n    if (!isClustersEnabled) {\n        return (\n            <div className=\"resume-serp\">\n                <Column s=\"8\" m=\"12\" l=\"16\">\n                    <div>\n                        {!shouldHideSettings && (\n                            <FormItem>\n                                <Settings />\n                            </FormItem>\n                        )}\n                        {isResumeCardRedesignOnboarding && (\n                            <>\n                                <ResumeCardOnboardingBanner />\n                                <VSpacing base={4} />\n                            </>\n                        )}\n                        {isResumeCardRedesignOnboardingModal && <ResumeCardOnboardingModal />}\n                        {isPickVacancyBannerShow && (\n                            <>\n                                <PickVacancyBanner />\n                                <VSpacing base={4} />\n                            </>\n                        )}\n                        {!shouldHideSettings && <SavedSearchSubscription />}\n                        <AutoInviteSnippet />\n                        <SearchResults />\n                        <Gap top>\n                            <Pagination {...paging} />\n                        </Gap>\n                        <UnderSearchResultBanner />\n                    </div>\n                </Column>\n            </div>\n        );\n    }\n\n    const showNovaFiltersOnTheRight = !filtersOnTheLeft?.value;\n\n    const novafiltersSidebar = (\n        <StickySidebar disabledScreens={SCREEN_XS_S}>\n            <Column xs={showSearchPreference ? '4' : '0'} s={showSearchPreference ? '8' : '0'} m=\"3\" l=\"3\">\n                <NovaFilters\n                    criteria={criteria}\n                    filtersOrder={filtersOrder}\n                    additionalFiltersOrder={additionalFiltersOrder}\n                    withCounter={true}\n                />\n            </Column>\n        </StickySidebar>\n    );\n\n    return (\n        <NovaFilterUpdateContextProvider>\n            <div ref={resumeSerps} className=\"resume-serp\">\n                <StickySidebarAndContent>\n                    {!showNovaFiltersOnTheRight && novafiltersSidebar}\n                    <StickySidebar disabledScreens={SCREEN_XS_S}>\n                        <Column xs={showSearchPreference ? '0' : '4'} s={showSearchPreference ? '0' : '8'} m=\"9\" l=\"13\">\n                            {isAnonymous && <RegistrationAnonActionInSerp />}\n                            {!shouldHideSettings && (\n                                <FormItem>\n                                    <Settings />\n                                </FormItem>\n                            )}\n                            {isResumeCardRedesignOnboarding && (\n                                <>\n                                    <ResumeCardOnboardingBanner />\n                                    <VSpacing base={4} />\n                                </>\n                            )}\n                            {isResumeCardRedesignOnboardingModal && <ResumeCardOnboardingModal />}\n                            {isPickVacancyBannerShow && (\n                                <>\n                                    <PickVacancyBanner />\n                                    <VSpacing base={4} />\n                                </>\n                            )}\n                            {!shouldHideSettings && <SavedSearchSubscription />}\n                            <AutoInviteSnippet />\n                            <SearchResults />\n                            <VSpacing base={2} />\n                            <Pagination {...paging} />\n                            {catalogLinks?.length > 0 && <CatalogLinks queries={catalogLinks} />}\n                            <ExtraFilterCatalogLinks />\n                            {resumes.length > 0 && <UnderSearchResultBanner />}\n                            <SearchPreferenceButton />\n                        </Column>\n                    </StickySidebar>\n                    {showNovaFiltersOnTheRight && novafiltersSidebar}\n                </StickySidebarAndContent>\n            </div>\n        </NovaFilterUpdateContextProvider>\n    );\n};\n\nResumeSearchItems.features = {\n    enableDistrictFilter: 'enable_district_filter',\n};\n\nexport default ResumeSearchItems;\n","import { useDispatch } from 'react-redux';\n\nimport { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport ConversionNumber from 'bloko/blocks/conversion';\nimport { H3 } from 'bloko/blocks/header';\nimport Text from 'bloko/blocks/text';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format, formatToReactComponent } from 'bloko/common/trl';\n\nimport ConversionDate from 'lux/components/Conversion/DateOnly';\nimport FormatMoney from 'lux/components/FormatMoney';\nimport translation from 'lux/components/translation';\nimport { BillingPlatform, DBAccessProductType } from 'lux/models/price/product.types';\nimport { Action } from 'lux/models/search/resume/resumeSearchResult';\nimport { getContactsCountForPlatform } from 'lux/modules/price/products';\nimport paths from 'lux/modules/routePaths';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { createCart } from 'lux/requests/price/cart';\n\nconst TrlKeys = {\n    suitable: 'search.resume.suitable.buy',\n    buttonBuy: 'search.resume.suitable.buy.button',\n    activate: 'search.resume.suitable.activate',\n    buttonActivate: 'search.resume.suitable.activate.button',\n    timer: 'search.resume.suitable.timer',\n    buyResumeAccess: {\n        message: 'search.resume.access.message',\n        profRoleGroups: 'search.resume.access.profRoleGroups',\n        contactsCount: 'search.resume.access.contactsCount',\n        buyFor: 'search.resume.access.buyFor',\n        contacts: 'price.dbaccess.contactsCount',\n        contactsOnHh: 'price.dbaccess.contactsCount.on.HH',\n        contactsOnZp: 'price.dbaccess.contactsCount.on.ZP',\n    },\n    // Это произошло из-за legacy кода, который много категоризировал как немного и наборот\n    daysSome: 'days.many',\n    daysOne: 'days.one',\n    daysMany: 'days.some',\n};\n\nconst BuyContacts: TranslatedComponent = ({ trls }) => {\n    const isSimilarSearch = useSelector((state) => state.resumeSearchResult?.isSimilarSearch);\n    const vacancySimilarBuyContacts = useSelector((state) => state.resumeSearchResult?.vacancySimilarBuyContacts);\n    const search = useSelector((state) => state.router.location.search);\n    const dispatch = useDispatch();\n\n    if (!isSimilarSearch) {\n        return null;\n    }\n\n    if (vacancySimilarBuyContacts?.action === Action.Apply) {\n        return (\n            <div className=\"resumesearch__dialog\">\n                <Text>\n                    {trls[TrlKeys.activate]}\n                    <div className=\"resumesearch__action\">\n                        <Button\n                            kind={ButtonKind.Success}\n                            Element={Link}\n                            to={`${paths.resumeSearch}/similar/apply${search}`}\n                        >\n                            {trls[TrlKeys.buttonActivate]}\n                        </Button>\n                    </div>\n                </Text>\n            </div>\n        );\n    }\n\n    if (vacancySimilarBuyContacts?.daysLost) {\n        return (\n            <div className=\"resumesearch__dialog\">\n                <Text>\n                    {trls[TrlKeys.timer]}{' '}\n                    <ConversionNumber\n                        value={parseInt(vacancySimilarBuyContacts.daysLost, 10)}\n                        one={trls[TrlKeys.daysOne]}\n                        some={trls[TrlKeys.daysSome]}\n                        many={trls[TrlKeys.daysMany]}\n                    />\n                </Text>\n            </div>\n        );\n    }\n\n    if (vacancySimilarBuyContacts?.action === Action.Buy && vacancySimilarBuyContacts?.product) {\n        const { currency, price } = vacancySimilarBuyContacts.product;\n\n        const product = vacancySimilarBuyContacts.product;\n        const contactsCountHh = getContactsCountForPlatform(product, BillingPlatform.HH);\n        const contactsCountZp = getContactsCountForPlatform(product, BillingPlatform.ZP);\n        const hasContactsOnBothPlatforms = Boolean(contactsCountHh) && Boolean(contactsCountZp);\n        const contactsCount = contactsCountHh || contactsCountZp;\n        const regionTrl = product.regionTrl;\n        return (\n            <div className=\"resumesearch__dialog\">\n                <div>\n                    <H3>{trls[TrlKeys.buyResumeAccess.message]}</H3>\n                    <VSpacing base={3} />\n                    <Text>\n                        <div>\n                            <ConversionDate\n                                value={Number(product.period)}\n                                shouldShowInHours={Number(product.period) === 1}\n                            />\n                            {Boolean(regionTrl) && `, ${regionTrl}`}\n                            {`, ${trls[TrlKeys.buyResumeAccess.profRoleGroups]}`}\n                        </div>\n                        {hasContactsOnBothPlatforms ? (\n                            <div>\n                                {`${format(trls[TrlKeys.buyResumeAccess.contacts], {\n                                    '{0}': String(contactsCountHh),\n                                })} ${trls[TrlKeys.buyResumeAccess.contactsOnHh]}, ${format(\n                                    trls[TrlKeys.buyResumeAccess.contacts],\n                                    { '{0}': String(contactsCountZp) }\n                                )} ${trls[TrlKeys.buyResumeAccess.contactsOnZp]}`}\n                            </div>\n                        ) : (\n                            Boolean(contactsCount) && (\n                                <div>\n                                    {format(trls[TrlKeys.buyResumeAccess.contactsCount], {\n                                        '{0}': String(contactsCount),\n                                    })}\n                                </div>\n                            )\n                        )}\n                    </Text>\n                    <div className=\"resumesearch__action\">\n                        <Button\n                            data-qa=\"similar-resumesearch-buy-resume-access\"\n                            kind={ButtonKind.Success}\n                            onClick={() => {\n                                void dispatch(createCart([vacancySimilarBuyContacts.product as DBAccessProductType]));\n                            }}\n                        >\n                            {formatToReactComponent(trls[TrlKeys.buyResumeAccess.buyFor], {\n                                '{0}': (\n                                    <FormatMoney currency={currency} inCents={true}>\n                                        {price}\n                                    </FormatMoney>\n                                ),\n                            })}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nexport default translation(BuyContacts);\n","import { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    corrected: 'employer.resumesSearch.nigmer.corrected',\n    nothing: 'employer.resumesSearch.nigmer.nothing',\n};\n\nconst QueryFixer: TranslatedComponent = ({ trls }) => {\n    const queryFix = useSelector((state) => state.resumeSearchResult?.fixes?.text?.original);\n\n    if (!queryFix) {\n        return null;\n    }\n\n    return (\n        <p>\n            {trls[TrlKeys.corrected]}\n            <span className=\"resumesearch__request\">{queryFix}</span>\n            {trls[TrlKeys.nothing]}\n        </p>\n    );\n};\n\nexport default translation(QueryFixer);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport BlokoLink from 'bloko/blocks/link';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    byRequest: 'employer.resumesSearch.nigmer.byRequest',\n    willFind: 'employer.resumesSearch.nigmer.willFind',\n};\n\nconst QuerySuggests: TranslatedComponent = ({ trls }) => {\n    const suggests = useSelector((state) => state.resumeSearchResult?.suggests?.text);\n\n    if (!suggests) {\n        return null;\n    }\n\n    return (\n        <p>\n            {trls[TrlKeys.byRequest]}\n            {NON_BREAKING_SPACE}\n            <BlokoLink disableVisited Element={Link} to={`?${suggests.query}`}>\n                <strong>{suggests.value}</strong>\n            </BlokoLink>\n            {NON_BREAKING_SPACE}\n            {format(trls[TrlKeys.willFind], { '{0}': suggests.found })}\n        </p>\n    );\n};\n\nexport default translation(QuerySuggests);\n","import React from 'react';\n\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\nimport numberFormatter from 'bloko/common/numberFormatter';\nimport { format } from 'bloko/common/trl';\n\nimport translation from 'lux/components/translation';\nimport { NON_BREAKING_SPACE } from 'lux/modules/symbols';\n\ninterface RegistrationMessageProps {\n    normalSearchResults: number;\n    totalUngroupedResults: number;\n    isApplicant: boolean;\n    isEmployer: boolean;\n}\n\nconst TrlKeys = {\n    applicant: 'resumesSearch.normalResults.applicant.advanced',\n    applicantTiny: 'resumesSearch.normalResults.applicant.full.tiny',\n    employer: 'resumesSearch.normalResults.employer.warnRegister.v2',\n};\n\nconst RegistrationMessage: TranslatedComponent<RegistrationMessageProps> = ({\n    trls,\n    normalSearchResults,\n    totalUngroupedResults,\n    isApplicant,\n    isEmployer,\n}) => {\n    if (isApplicant) {\n        if (normalSearchResults < 10) {\n            return <>{trls[TrlKeys.applicantTiny]}</>;\n        }\n        return (\n            <>\n                {format(trls[TrlKeys.applicant], {\n                    '{0}': numberFormatter.format(`${totalUngroupedResults}`),\n                    '{1}': numberFormatter.format(`${normalSearchResults}`),\n                })}\n            </>\n        );\n    }\n\n    if (isEmployer) {\n        return (\n            <>{`${format(trls[TrlKeys.employer], {\n                '{0}': numberFormatter.format(normalSearchResults.toString()),\n            })}${NON_BREAKING_SPACE} `}</>\n        );\n    }\n    return null;\n};\n\nexport default translation(RegistrationMessage);\n","import { Link } from '@hh.ru/redux-spa-middleware';\nimport Button, { ButtonKind, ButtonScale } from 'bloko/blocks/button';\nimport Text from 'bloko/blocks/text';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport RegistrationMessage from 'lux/components/ResumeSearch/RegistrationMessage';\nimport translation from 'lux/components/translation';\nimport { TopLevelSite } from 'lux/models/topLevelSite';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst TrlKeys = {\n    buy: 'resumesSearch.normalResults.buy',\n};\n\nconst RegistrationAction: TranslatedComponent = ({ trls }) => {\n    const isApplicant = useSelector(({ userType }) => UserType.Applicant === userType);\n    const isEmployer = useSelector(({ userType }) => UserType.Employer === userType);\n    const isAnonimous = useSelector(({ userType }) => UserType.Anonymous === userType);\n    const stats = useSelector(({ resumeSearchResult }) => resumeSearchResult?.stats);\n    const buyButtonVisible = useSelector((state) => state.topLevelSite !== TopLevelSite.AZ);\n\n    if (!stats?.normalSearchResults) {\n        return null;\n    }\n\n    const { normalSearchResults, totalUngroupedResults } = stats;\n    if (isAnonimous) {\n        return null;\n    }\n    return (\n        <div className=\"resumesearch__dialog\" data-qa=\"resume-serp__resumes-count-found-after-registration\">\n            <div className=\"resumesearch__dialog-item\">\n                <Text>\n                    <RegistrationMessage\n                        isApplicant={isApplicant}\n                        isEmployer={isEmployer}\n                        normalSearchResults={normalSearchResults}\n                        totalUngroupedResults={totalUngroupedResults}\n                    />\n                </Text>\n            </div>\n            {isEmployer && buyButtonVisible && (\n                <div className=\"resumesearch__dialog-item\">\n                    <Button\n                        Element={Link}\n                        kind={ButtonKind.Success}\n                        to=\"/price\"\n                        scale={ButtonScale.Small}\n                        data-qa=\"resume-serp__action-after-search\"\n                    >\n                        {trls[TrlKeys.buy]}\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default translation(RegistrationAction);\n","import { FC } from 'react';\n\nimport GetPageHtml from 'lux/components/GetPageHtml/GetPageHtml.obfuscate';\nimport BuyContacts from 'lux/components/ResumeSearch/BuyContacts';\nimport QueryFixer from 'lux/components/ResumeSearch/QueryFixer';\nimport QuerySuggests from 'lux/components/ResumeSearch/QuerySuggests';\nimport RegistrationAction from 'lux/components/ResumeSearch/RegistrationAction';\n\nconst ResumeSearchTop: FC = () => {\n    return (\n        <>\n            <BuyContacts />\n            <QueryFixer />\n            <QuerySuggests />\n            <RegistrationAction />\n            <GetPageHtml />\n        </>\n    );\n};\n\nexport default ResumeSearchTop;\n","// extracted by mini-css-extract-plugin\nexport default {\"scrollToTop\":\"scroll-to-top--wI2Je7S9QL9xLCPE22nX\",\"scrollToTopShown\":\"scroll-to-top_shown--ywjCmEm_GAtap7lMhzVg\",\"scrollToTopForceHidden\":\"scroll-to-top_force-hidden--Gq4VnbCyX_3hPsPq8HSr\",\"scrollToTopButton\":\"scroll-to-top-button--qnTFzYwLX9idBdnXLiNh\",\"spin\":\"spin--yV9cXvOhgVQJvxuWTL_0\"};","import { FC, useEffect, useState } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport Icon, { IconKind, IconScale, IconView } from 'bloko/blocks/icon';\nimport scrollTop from 'bloko/common/scrollTop';\nimport throttle from 'bloko/common/throttle';\n\nimport useOnOffState from 'lux/hooks/useOnOffState';\nimport { useIsHeadHunterPlatform } from 'lux/hooks/usePlatform';\nimport { isHtmlElement } from 'lux/modules/isHtmlElement';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './scroll-to-top.less';\n\nconst SCROLL_THROTTLE_DELAY_MS = 100;\nconst SCROLL_TO_TOP_SPEED_MS = 150;\nconst CHECKPOINT_SHOW_BUTTON_RATIO = 0.5;\n\n/**\n * Свойства компонента.\n *\n * @prop analyticsParams Параметры аналитики.\n * @prop [forceHidden] Флаг принудительного скрытия кнопки для ручного управления из родителя.\n */\ntype Props = {\n    analyticsParams: Record<string, unknown>;\n    forceHidden?: boolean;\n};\n\n/**\n * Следящая кнопка для скролла вверх на страницах поиска.\n */\nconst ScrollToTop: FC<Props> = ({ analyticsParams, forceHidden }) => {\n    const userType = useSelector((state) => state.userType);\n\n    const [shown, setShown] = useState<boolean>(false);\n    const [isScrollingToTop, scrollingToTopStart, scrollingToTopEnd] = useOnOffState(false);\n\n    const isHhPlatform = useIsHeadHunterPlatform();\n\n    useEffect(() => {\n        if (!isHhPlatform) {\n            return undefined;\n        }\n\n        const handleScroll = throttle(\n            () =>\n                setShown(\n                    !forceHidden &&\n                        !isScrollingToTop &&\n                        window.scrollY > CHECKPOINT_SHOW_BUTTON_RATIO * window.innerHeight\n                ),\n            SCROLL_THROTTLE_DELAY_MS\n        );\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [forceHidden, isHhPlatform, isScrollingToTop]);\n\n    useEffect(() => {\n        if (forceHidden) {\n            setShown(false);\n        }\n    }, [forceHidden]);\n\n    if (!isHhPlatform) {\n        return null;\n    }\n\n    const handleClick = () => {\n        const isPrefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n        const genericScrollToTopSpeed = isPrefersReducedMotion ? 0 : SCROLL_TO_TOP_SPEED_MS;\n\n        scrollTop({\n            top: 0,\n            speed: genericScrollToTopSpeed,\n            animationStartCallback: scrollingToTopStart,\n            animationEndCallback: scrollingToTopEnd,\n        });\n        isHtmlElement(document.activeElement) && document.activeElement.blur();\n        setShown(false);\n        Analytics.sendHHEventButtonClick('scrollToTop', {\n            userType,\n            scrollPosition: window.scrollY,\n            contentHeight: document.body.clientHeight,\n            ...analyticsParams,\n        });\n    };\n\n    return (\n        <div\n            className={classnames(styles.scrollToTop, {\n                [styles.scrollToTopShown]: shown,\n                [styles.scrollToTopForceHidden]: forceHidden,\n            })}\n        >\n            <button className={styles.scrollToTopButton} onClick={handleClick}>\n                <Icon view={IconView.Arrow} scale={IconScale.Small} kind={IconKind.Up} />\n            </button>\n        </div>\n    );\n};\n\nexport default ScrollToTop;\n","// extracted by mini-css-extract-plugin\nexport default {\"smilesWrapper\":\"smiles-wrapper--blnYPZKxvTkdFoX60ap7\",\"smilesWrapperResumeSearch\":\"smiles-wrapper_resume-search--xCv5jxBG8mz3XUqna6Hi\",\"smiles\":\"smiles--rCfxWtr5wpbj6SpNsquf\",\"smileIcon\":\"smile-icon--B5gpnyPy0Y2unAKwB4en\",\"smileIconSad\":\"smile-icon_sad--pkvu2Ea4L4w9uROoALn6\",\"smileIconUnhappy\":\"smile-icon_unhappy--tRAFSr3mhLTVsNE288G8\",\"smileIconIndifirent\":\"smile-icon_indifirent--nyWTT411YpXxpiGYp1wv\",\"smileIconSmirk\":\"smile-icon_smirk--k2SlVmayAM7fWfPatdtN\",\"smileIconHappy\":\"smile-icon_happy--PrUZ2VfjirmuYYq5A3rS\",\"smile\":\"smile--Ft5D5VBmi8XthDJ9gYgJ\",\"smileInactive\":\"smile_inactive--BP33iUKr85WzU32NF1_n\",\"smileActive\":\"smile_active--Ld9yeBHkAkTdYtQDwtEM\"};","import { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport { H3Section } from 'bloko/blocks/header';\nimport VSpacing from 'bloko/blocks/vSpacing';\nimport capitalize from 'bloko/common/capitalize';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport translation from 'lux/components/translation';\nimport fetcher from 'lux/modules/fetcher';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport styles from './searchRating.less';\n\nconst SEARCH_RATING = '/notices/mark_as_viewed';\n\ndeclare global {\n    interface FetcherPostApi {\n        [SEARCH_RATING]: {\n            queryParams: null;\n            body: { name: string };\n            response: void;\n        };\n    }\n}\n\nconst TrlKeys = {\n    title: 'vacancy.search.rating.title',\n    thnx: 'vacancy.search.rating.thnxMessage',\n    smiles: {\n        sad: 'vacancy.search.rating.sad',\n        unhappy: 'vacancy.search.rating.unhappy',\n        indifirent: 'vacancy.search.rating.indifirent',\n        smirk: 'vacancy.search.rating.smirk',\n        happy: 'vacancy.search.rating.happy',\n    },\n};\n\nenum Smiles {\n    Sad = 'sad',\n    Unhappy = 'unhappy',\n    Indifirent = 'indifirent',\n    Smirk = 'smirk',\n    Happy = 'happy',\n}\n\ninterface SearchRatingProps {\n    portfolio: string;\n    eventName: string;\n    infoTipName: string;\n}\n\nconst SearchRating: TranslatedComponent<SearchRatingProps> = ({ trls, portfolio, eventName, infoTipName }) => {\n    const isResumeSearch = useSelector((state) => state.searchClustersSettings.type) === SearchType.Resume;\n    const searchRating = useSelector((state) => state.searchRating);\n    const spyElement = useRef(null);\n    const [clicked, setClicked] = useState<Smiles | null>(null);\n    const clickEvent = (value: Smiles) => {\n        if (clicked === null) {\n            Analytics.sendHHEventButtonClick(eventName, {\n                portfolio,\n                requestUrl: window.location.href,\n                score: value,\n            });\n            fetcher\n                .post(SEARCH_RATING, {\n                    name: infoTipName,\n                })\n                .then(() => {\n                    setClicked(value);\n                })\n                .catch(console.error);\n        }\n    };\n\n    useEffect(() => {\n        if (spyElement.current) {\n            Analytics.sendHHEventElementShown(spyElement.current, {\n                name: 'select_search_rating_shown',\n                portfolio: 'PORTFOLIO-14535',\n                requestUrl: window.location.href,\n            });\n        }\n    }, [spyElement]);\n\n    return searchRating ? (\n        <>\n            <div\n                className={classnames(styles.smilesWrapper, {\n                    [styles.smilesWrapperResumeSearch]: isResumeSearch,\n                })}\n                ref={spyElement}\n            >\n                <>\n                    <H3Section>{trls[TrlKeys.title]}</H3Section>\n                    <VSpacing base={4} />\n                    <div className={styles.smiles}>\n                        {Object.values(Smiles).map((smile) => {\n                            return (\n                                <button\n                                    key={smile}\n                                    aria-label={trls[TrlKeys.smiles[smile]]}\n                                    className={classnames(styles.smile, {\n                                        [styles.smileInactive]: smile !== clicked && clicked !== null,\n                                        [styles.smileActive]: smile === clicked,\n                                    })}\n                                    onClick={() => clickEvent(smile)}\n                                >\n                                    <span\n                                        className={classnames(\n                                            styles.smileIcon,\n                                            styles[`smileIcon${capitalize(smile)}`]\n                                        )}\n                                    />\n                                </button>\n                            );\n                        })}\n                    </div>\n                </>\n            </div>\n            <VSpacing base={4} />\n        </>\n    ) : null;\n};\n\nexport default translation(SearchRating);\n","import { FC } from 'react';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport ScrollToTop from 'lux/components/ScrollToTop';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ResumeSearchScrollToTop: FC = () => {\n    const totalSnippets = useSelector((state) => state.resumeSearchResult.resumes.length);\n    const isMobileFiltersShown = useSelector((state) => state.searchPreference.isShown);\n\n    return (\n        <ScrollToTop\n            analyticsParams={{ searchType: SearchType.Vacancy, totalSnippets }}\n            forceHidden={isMobileFiltersShown}\n        />\n    );\n};\n\nexport default ResumeSearchScrollToTop;\n","import Analytics from '@hh.ru/analytics-js';\nimport Button, { ButtonKind } from 'bloko/blocks/button';\nimport { TranslatedComponent } from 'bloko/common/hooks/useTranslations';\n\nimport translation from 'lux/components/translation';\nimport { useSelector } from 'lux/modules/useSelector';\n\nimport useToggleSearchPreference from 'lux/components/SearchSorts/hooks/useToggleSearchPreference';\n\nconst TrlKeys = {\n    buttonFilter: 'search.vacancy.button.filters.s',\n    buttonFilterXS: 'novafilters.similarSavedSearch.filterXS',\n};\n\nconst SearchPreferenceButton: TranslatedComponent = ({ trls }) => {\n    const showSearchPreference = useSelector((state) => state.searchPreference.isShown);\n    const enableSimilarSavedSearch = useSelector((state) => state.vacancySearchResult.enableSimilarSavedSearch);\n    const toggleSearchPreference = useToggleSearchPreference();\n    const searchType = useSelector((state) => state.searchClustersSettings.type);\n    return (\n        <div className=\"vacancy-serp-sticky-filters-button\">\n            <Button\n                onClick={() => {\n                    Analytics.sendHHEventButtonClick(`${searchType}_search_filter_open`);\n                    toggleSearchPreference(!showSearchPreference);\n                }}\n                kind={ButtonKind.Primary}\n            >\n                {enableSimilarSavedSearch ? trls[TrlKeys.buttonFilterXS] : trls[TrlKeys.buttonFilter]}\n            </Button>\n        </div>\n    );\n};\n\nexport default translation(SearchPreferenceButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"stickySidebarAndContent\":\"sticky-sidebar-and-content--NmOyAQ7IxIOkgRiBRSEg\",\"stickySidebarWrapper\":\"sticky-sidebar-wrapper--voTDvjwe1WkoQDdpZqVu\",\"stickySidebarHelper\":\"sticky-sidebar-helper--qABaTuhQcjN3h7q1fEfV\",\"stickySidebarStatic\":\"sticky-sidebar-static--ZD4wlOc8uH3FeEkYT14v\",\"stickySidebarScroll\":\"sticky-sidebar-scroll--cueCMboxnHwPMukpTL2R\",\"stickySidebarTop\":\"sticky-sidebar-top--SWsnltVN8urArzhh6gL5\",\"stickySidebarBottom\":\"sticky-sidebar-bottom--T8F8spY9qYKCAanWDEp9\"};","import { FC, useCallback, useRef, PropsWithChildren } from 'react';\n\nimport useResize from 'bloko/common/hooks/useResize';\nimport { Breakpoint, getBreakpoint } from 'bloko/common/media';\n\nimport useScroll from 'lux/hooks/useScroll';\n\nimport styles from './sticky-sidebar.less';\n\n// Режимы работы липкого блока\nenum StickySidebarMode {\n    // Без изменений\n    Static = 'Static',\n    // Липкий блок фиксируется и скроллится вместе с контентом.\n    Scroll = 'Scroll',\n    // Липкий блок прилипает верхним краем при прокрутке вниз.\n    StickyTop = 'StickyTop',\n    // Липкий блок прилипает нижним краем при прокрутке вверх.\n    StickyBottom = 'StickyBottom',\n}\n\nconst ClassByMode = {\n    [StickySidebarMode.Static]: styles.stickySidebarStatic,\n    [StickySidebarMode.Scroll]: styles.stickySidebarScroll,\n    [StickySidebarMode.StickyTop]: styles.stickySidebarTop,\n    [StickySidebarMode.StickyBottom]: styles.stickySidebarBottom,\n};\n\nexport const SCREEN_XS = [Breakpoint.XS];\nexport const SCREEN_XS_S = [Breakpoint.XS, Breakpoint.S];\nexport const SCREEN_XS_S_M = [Breakpoint.XS, Breakpoint.S, Breakpoint.M];\n\n/**\n * Обёртка для StickySidebar и контента.\n *\n * Дочерние элементы становятся одинаковыми по высоте, за счёт чего\n * прилипающий блок может двигаться по вертикали (если контент больше\n * липкого блока).\n *\n * Контент — это соседний со StickySidebar элемент. В качестве\n * контента может выступать любой элемент, не обязательно колонка.\n *\n * Пример разметки с колонками:\n    // Обёртка\n    <StickySidebarAndContent>\n        // Сайдбар\n        <StickySidebar disabledScreens={SCREEN_XS_S}>\n            <Column xs=\"0\" s=\"0\" m=\"4\" l=\"4\">{sidebarContent}</Column>\n        </StickySidebar>\n        // Контент\n        <Column xs=\"4\" s=\"8\" m=\"8\" l=\"12\">{pageContent}</Column>\n    </StickySidebarAndContent>\n */\nexport const StickySidebarAndContent: FC<PropsWithChildren> = ({ children }) => (\n    <div className={styles.stickySidebarAndContent}>{children}</div>\n);\n\n/**\n * Липкий блок с кастомной логикой прилипания:\n * - Если липкий блок меньше, чем размер вьюпорта, прилипает\n *   верхний край (полный аналог `position: sticky; top: 0;`).\n * - Если липкий блок больше вьюпорта, то он листается вместе с контентом.\n * -- Если при скролле вниз дошли до нижней границы липкого блока,\n *    прилипает нижний край. При скролле отсюда вверх липкий блок снова\n *    будет проматываться, чтобы можно было увидеть всё его содержимое.\n * -- Если при скролле вверх дошли до верхней границы липкого блока,\n *    прилипает верхний край. При скролле отсюда вниз липкий блок снова\n *    будет проматываться, чтобы можно было увидеть всё его содержимое.\n */\nconst StickySidebar: FC<\n    {\n        disabledScreens: Breakpoint[];\n    } & PropsWithChildren\n> = ({ children, disabledScreens }) => {\n    const stickyRef = useRef<HTMLDivElement>();\n    const scrollPosition = useRef(typeof window !== 'undefined' ? window.scrollY : 0);\n    const trackScrolling = useRef(false);\n    const mode = useRef(StickySidebarMode.Static);\n\n    const setMode = useCallback((newMode: StickySidebarMode) => {\n        if (stickyRef.current && mode.current !== newMode) {\n            stickyRef.current.style.top =\n                newMode === StickySidebarMode.Scroll ? `${stickyRef.current.offsetTop}px` : '';\n            stickyRef.current.className = ClassByMode[newMode];\n        }\n        mode.current = newMode;\n    }, []);\n\n    const scrollHandler = useCallback(() => {\n        if (!trackScrolling.current || !stickyRef.current) {\n            return;\n        }\n\n        const isMovingUp = scrollPosition.current > window.scrollY;\n        const isMovingDown = scrollPosition.current < window.scrollY;\n        const sticky = stickyRef.current.getBoundingClientRect();\n\n        if (isMovingUp && Math.ceil(sticky.top) >= 0) {\n            // Мотаем вверх, и верхний край липкого блока уже на экране, значит он\n            // больше не должен ехать вниз вместе со скроллом, прилепляем верхний край.\n            // ЛИБО мотаем вверх НАД контентом, где липкий блок ещё не прилипает.\n            setMode(StickySidebarMode.StickyTop);\n        } else if (isMovingDown && Math.floor(sticky.bottom) <= window.innerHeight) {\n            // Мотаем вниз, и нижний край липкого блока уже на экране, значит он\n            // больше не должен ехать вверх вместе со скроллом, прилепляем нижний край.\n            // ЛИБО мотаем вниз ПОД контентом, где липкий блок уже не прилипает.\n            setMode(StickySidebarMode.StickyBottom);\n        } else if (isMovingUp || isMovingDown) {\n            // Мотаем в сторону края, который ЗА пределами экрана,\n            // значит нужно включить прокрутку, чтобы была возможность\n            // увидеть всё содержимое липкого блока.\n            setMode(StickySidebarMode.Scroll);\n        }\n\n        scrollPosition.current = window.scrollY;\n    }, [setMode]);\n\n    // Вызывается при изменении конфигурации блоков: ресайз окна, ресайз\n    // липкого блока, ресайз контента, обновление рефа липкого блока.\n    const setupSticky = useCallback(() => {\n        // По дефолту слежение за скроллом ВЫКЛючено.\n        trackScrolling.current = false;\n\n        if (!stickyRef.current || process.env.LUX_SERVER) {\n            return;\n        }\n\n        const breakpoint = getBreakpoint();\n        if (disabledScreens.includes(breakpoint)) {\n            setMode(StickySidebarMode.Static);\n            return;\n        }\n\n        const sticky = stickyRef.current.getBoundingClientRect();\n        const parentHeight = (stickyRef.current.parentNode as Element)?.getBoundingClientRect().height || 0;\n\n        // Если липкий блок больше контента, ездить он точно не будет.\n        if (sticky.height >= parentHeight) {\n            setMode(StickySidebarMode.Static);\n            return;\n        }\n\n        // Если липкий блок меньше высоты окна,\n        // это обычный `position: sticky; top: 0`.\n        if (sticky.height <= window.innerHeight) {\n            setMode(StickySidebarMode.StickyTop);\n            return;\n        }\n\n        // Липкий блок больше вьюпорта (раз мы тут),\n        // начинаем следить за скроллом.\n        trackScrolling.current = true;\n\n        // Логика определения начального режима такая же,\n        // как при скролле, только без учёта направлений.\n        if (sticky.top >= 0) {\n            setMode(StickySidebarMode.StickyTop);\n        } else if (sticky.bottom <= window.innerHeight) {\n            setMode(StickySidebarMode.StickyBottom);\n        } else {\n            setMode(StickySidebarMode.Scroll);\n        }\n    }, [disabledScreens, setMode]);\n\n    useResize(setupSticky);\n    useScroll(scrollHandler);\n\n    const resizeObserver = useRef<ResizeObserver>();\n\n    const stickyRefCallback = useCallback(\n        (ref: HTMLDivElement) => {\n            if (!resizeObserver.current && typeof ResizeObserver !== 'undefined') {\n                resizeObserver.current = new ResizeObserver(setupSticky);\n            }\n\n            if (resizeObserver.current) {\n                // Если меняется ссылка, нужно отписаться от предыдущих элементов.\n                stickyRef.current && resizeObserver.current.unobserve(stickyRef.current);\n                stickyRef.current && resizeObserver.current.unobserve(stickyRef.current.parentNode as Element);\n\n                // Делаем перерасчёт при изменении размеров липкого блока\n                // или его враппера (высота враппера == высоте контента).\n                ref && resizeObserver.current.observe(ref);\n                ref && resizeObserver.current.observe(ref.parentNode as Element);\n            }\n\n            stickyRef.current = ref;\n            setupSticky();\n        },\n        [setupSticky]\n    );\n\n    return (\n        <div className={styles.stickySidebarWrapper}>\n            <div ref={stickyRefCallback}>{children}</div>\n            <div className={styles.stickySidebarHelper} />\n        </div>\n    );\n};\n\nexport default StickySidebar;\n","import { FC } from 'react';\n\nimport AdsExternalBanner from 'lux/components/Banner/AdsExternalBanner';\nimport { useSelector } from 'lux/modules/useSelector';\n\nconst ADS_POSITION_INFO = 'LAST';\n\nconst UnderSearchResultBanner: FC = () => {\n    const banners = useSelector((state) => state.banners);\n    const adsSearchParams = useSelector((state) => state.adsSearchParams);\n\n    const { bannerL, bannerM, bannerS, bannerXS } = {\n        bannerL: banners['under-pagination-search-results-l'],\n        bannerM: banners['under-pagination-search-results-m'],\n        bannerS: banners['under-pagination-search-results-s'],\n        bannerXS: banners['under-pagination-search-results-xs'],\n    };\n\n    return (\n        <>\n            {bannerL && bannerL.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-l\">\n                    <div className=\"center-banner\" data-qa-banner-id={bannerL[0].id}>\n                        <AdsExternalBanner\n                            {...bannerL[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={ADS_POSITION_INFO}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerM && bannerM.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-m\">\n                    <div className=\"center-banner\" data-qa-banner-id={bannerM[0].id}>\n                        <AdsExternalBanner\n                            {...bannerM[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={ADS_POSITION_INFO}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerS && bannerS.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-s\">\n                    <div className=\"center-banner\" data-qa-banner-id={bannerS[0].id}>\n                        <AdsExternalBanner\n                            {...bannerS[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={ADS_POSITION_INFO}\n                        />\n                    </div>\n                </div>\n            )}\n            {bannerXS && bannerXS.length > 0 && (\n                <div className=\"banner-place-wrapper_show-on-xs\">\n                    <div className=\"center-banner\" data-qa-banner-id={bannerXS[0].id}>\n                        <AdsExternalBanner\n                            {...bannerXS[0]}\n                            bannerAdTargeting={adsSearchParams}\n                            positionInfo={ADS_POSITION_INFO}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default UnderSearchResultBanner;\n","import { useEffect } from 'react';\n\nexport default (handler: (event: Event) => void): void => {\n    useEffect(() => {\n        window.addEventListener('scroll', handler);\n        return () => {\n            window.removeEventListener('scroll', handler);\n        };\n    }, [handler]);\n};\n","import { useEffect } from 'react';\n\nimport SearchType from 'lux/components/NovaFilters/SearchType';\nimport { UserType } from 'lux/models/userType';\nimport { useSelector } from 'lux/modules/useSelector';\nimport { UXFeedback } from 'lux/modules/uxfeedback';\n\nimport { useIsRabotaBy } from 'lux/hooks/useSites';\n\nconst excludingUserType = {\n    [SearchType.Resume]: UserType.Applicant,\n    [SearchType.Vacancy]: UserType.Employer,\n};\n\nexport default (searchType: SearchType.Resume | SearchType.Vacancy): void => {\n    const isRabotaBy = useIsRabotaBy();\n    const userType = useSelector((state) => state.userType);\n    const searchRating = useSelector((state) => state.searchRating);\n    const showSearchQualityUxFb = !isRabotaBy && !searchRating && userType !== excludingUserType[searchType];\n    const { enableSimilarSavedSearch } = useSelector((state) => state.vacancySearchResult);\n    useEffect(() => {\n        if (!showSearchQualityUxFb) {\n            return;\n        }\n        /* Possible values:\n         * resume_search_quality_anonymous\n         * resume_search_quality_employer\n         * vacancy_search_quality_anonymous\n         * vacancy_search_quality_applicant */\n        let eventName = `${searchType}_search_quality_${userType}`;\n        if (enableSimilarSavedSearch) {\n            eventName = 'recommended_resume_search';\n        }\n        UXFeedback.sendEvent(eventName);\n    }, [userType, showSearchQualityUxFb, searchType, enableSimilarSavedSearch]);\n};\n","// tempexp_26416_file\nimport { useEffect, useRef, useCallback } from 'react';\n\nimport Analytics from '@hh.ru/analytics-js';\nimport throttle from 'bloko/common/throttle';\n\nimport { RelevantExperienceResumesType } from 'lux/models/resumesRelevantExperience';\n\ntype Experience = {\n    resumeHash: string;\n    totalExperience: number;\n    relevantExperience: number;\n    collectionType: RelevantExperienceResumesType;\n    requestId: string;\n};\ntype AnalyticsData = Experience[] | null;\n\nexport const useSendExperienceAnalytics = (): void => {\n    const experienceAnalytics = useRef<AnalyticsData>(null);\n\n    const sendAnalytics = throttle(() => {\n        if (experienceAnalytics.current) {\n            Analytics.sendHHEvent('element_shown', {\n                elementName: 'resume_snippet_experience',\n                experience: JSON.stringify(experienceAnalytics.current),\n            });\n            experienceAnalytics.current = null;\n        }\n    }, 2000);\n\n    const onExpShowHandler = useCallback(\n        (event: Event) => {\n            const customEvent = event as CustomEvent<Experience>;\n            const currentAnalytics = [...(experienceAnalytics.current || [])];\n            currentAnalytics.push(customEvent.detail);\n            experienceAnalytics.current = currentAnalytics;\n            sendAnalytics();\n        },\n        [sendAnalytics]\n    );\n\n    useEffect(() => {\n        window.addEventListener('HH-Resume-Experience-Show', onExpShowHandler);\n\n        return () => {\n            window.removeEventListener('HH-Resume-Experience-Show', onExpShowHandler);\n        };\n    }, [onExpShowHandler]);\n};\n","import { BrandingProductType } from 'lux/models/price/product.types';\nimport { ServiceCode } from 'lux/models/price/productCodes';\n\nexport enum ServiceCodesForCRM {\n    BrandingPageCopywriting = 'BRAND_PAGE_COPYWRITING',\n    BrandVacancyRewriting = 'BRAND_VACANCY_REWRITING',\n    BrandingVacancyLogo = 'BRAND_VACANCY_LOGO',\n    BrandingPageSimple = 'Z6_SIMPLE',\n    BrandingPageOptimal = 'Z6_OPTIMAL',\n    BrandingPageProfessional = 'Z6_PROFF',\n}\n\nexport const BrandingBuilderServiceCodes = [ServiceCode.BrandingBuilderPage, ServiceCode.BrandingBuilderVacancy];\n\nexport type BrandingBuilderServiceCodeType = (typeof BrandingBuilderServiceCodes)[number];\n\nexport enum PriceItemMode {\n    Article = 'ARTICLE',\n    SubmitAplication = 'SUBMIT_APPLICATION',\n    PeriodPrice = 'PERIOD_PRICE',\n    SelectPeriodPrice = 'SELECT_PERIOD_PRICE',\n    PriceVacanciesConstructorPayment = 'PRICE_VACANCIES_CONSTRUCTOR_PAYMENT',\n}\n\nexport enum PriceItemImage {\n    Individual = 'INDIVIDUAL',\n    Typical = 'TYPICAL',\n    VBC = 'VBC',\n    Professional = 'PROFESSIONAL',\n    Optimal = 'OPTIMAL',\n    Simple = 'SIMPLE',\n    Z1 = 'Z1',\n    Mail = 'MAIL',\n}\n\nexport interface PriceWithFormatData extends BrandingProductType {\n    name: string;\n    priceRegionId: string;\n    priceRegionTrl: string;\n    order: string;\n}\n\nexport type ServiceCodesForPrice =\n    | ServiceCodesForCRM\n    | ServiceCode.BrandingBuilderVacancy\n    | ServiceCode.BrandingBuilderPage\n    | ServiceCode.BrandingMailTemplate;\n\nexport interface ServicePriceItem {\n    code: ServiceCodesForPrice;\n    image: PriceItemImage;\n    mode: PriceItemMode;\n    title: string;\n    description: {\n        text?: string | null;\n        advantages: string[];\n    };\n    extra: {\n        url: string;\n        analyticCode: string;\n        price: PriceWithFormatData[];\n    };\n    index: number;\n}\n","import { CurrencyType } from 'lux/models/currencies.types';\n\nimport { ServiceItemCode, ServiceCode } from 'lux/models/price/productCodes';\nimport { ZpTariff } from 'lux/models/price/zpTariff';\n\nexport const ANY_REGION_ID = '0';\nexport const ANY_PROF_ROLE_GROUP_ID = '0';\nexport const START_AFTER_PAYMENT = '';\n\nexport type CountType = string; // Должен быть number\nexport type ProductIdType = string;\nexport type RegionIdType = string;\nexport type PeriodType = number;\nexport type WrongPeriodType = string; // Должен быть number\nexport type StartAfterPayment = typeof START_AFTER_PAYMENT;\n\nexport enum BooleanString {\n    True = 'true',\n    False = 'false',\n}\n\nexport enum IntervalInSecondsString {\n    OneDay = '1440',\n    ThreeDays = '4320',\n    SevenDays = '10080',\n}\n\nexport enum IntervalInDaysString {\n    OneWeek = '7',\n    OneYear = '365',\n}\n\nexport enum BillingPlatform {\n    HH = 'HH',\n    ZP = 'ZP',\n}\n\nexport interface ResumeAccessFeatures {\n    /**\n     * Открытые контакты сохранятся на 365 дней\n     */\n    civDuration?: IntervalInDaysString;\n    billingPlatforms?: BillingPlatform[];\n}\n\nexport interface PublicationFeatures {\n    /**\n     * Поднятие на первые страницы поиска раз в 24 часа вручную\n     */\n    manualUpdateInterval: IntervalInSecondsString;\n    /**\n     * Автоподнятие на первые страницы поиска раз в 3 дня\n     */\n    autoUpdateInterval: IntervalInSecondsString;\n    /**\n     * Выделение логотипом\n     */\n    logo: BooleanString;\n}\n\nexport interface OptionFeatures {\n    /**\n     * На первых местах в поиске\n     */\n    searchPremiumPosition: IntervalInDaysString;\n    /**\n     * Реклама на главной в разделе «Вакансии дня»\n     */\n    vacancyDay: IntervalInDaysString;\n    /**\n     * Выделение цветным значком\n     */\n    premiumLabel: BooleanString;\n    /**\n     * Выделение логотипом\n     */\n    logo: BooleanString;\n    /**\n     * Поднятие на первые страницы поиска раз в 24 часа вручную\n     */\n    manualUpdateInterval: IntervalInSecondsString;\n}\n\nexport interface SubProductType {\n    code: ServiceItemCode;\n    count: CountType;\n    features?: ResumeAccessFeatures | PublicationFeatures | OptionFeatures;\n}\n\nexport interface ResumeAccessSubProductType extends SubProductType {\n    code: ServiceItemCode.ContactsView;\n    features?: ResumeAccessFeatures;\n}\n\nexport interface ProductType {\n    businessContext?: {\n        auction?: unknown;\n    };\n    code: ServiceCode | ServiceItemCode;\n    currency: CurrencyType;\n    price: number;\n    products?: Record<string, SubProductType>;\n    profRoleGroup: string[];\n    region: string;\n    tariff?: ZpTariff;\n    /** Последний день действия цены: YYYY-MM-DD */\n    priceValidUntilDate?: string;\n}\n\nexport interface TariffProductType extends ProductType {\n    period: string;\n    tariff: ZpTariff;\n}\n\nexport interface AddContactsProductType extends ProductType {\n    code: ServiceCode.Add | ServiceCode.Reservation;\n    count: CountType;\n    products: Record<string, SubProductType>;\n}\n\nexport interface BrandingProductType extends ProductType {\n    code: ServiceCode.BrandingBuilderVacancy | ServiceCode.BrandingBuilderPage;\n    period: string;\n    products: Record<string, SubProductType>;\n}\n\nexport interface ClickmeProductType extends ProductType {\n    code: ServiceItemCode.Clickme;\n    count: CountType;\n}\n\nexport interface DBAccessProductType extends ProductType {\n    code: ServiceCode.Disposable | ServiceCode.ContactsViewWithStandart;\n    period: string;\n    products: Record<string, SubProductType>;\n}\n\nexport interface PublicationProductType extends ProductType {\n    code: ServiceCode.LimitedVacancy;\n    count: CountType;\n    period: string;\n    pricePerOne: number;\n}\n","export enum ZpTariff {\n    Anonymous = 'ZP_ANONYMOUS',\n    ResumeAccessUnlimited = 'ZP_RESUME_ACCESS_UNLIMITED',\n    ResumeAccessByPiece = 'ZP_RESUME_ACCESS_BY_PIECE',\n    ResumeAccessByCategory = 'ZP_RESUME_ACCESS_BY_CATEGORY',\n    OptionPremium = 'OPTION_PREMIUM',\n    Branding = 'VBC',\n}\n","import { AxiosResponse } from 'axios';\n\nimport { VacancyResponsesFiltersFields } from 'lux/models/vacancyCreate/vacancyResponsesFilters';\nimport fetcher from 'lux/modules/fetcher';\n\ndeclare global {\n    interface FetcherPostApi {\n        '/resumesearch/settings': {\n            body: {\n                field: VacancyResponsesFiltersFields[];\n            };\n            queryParams: void;\n            response: void;\n        };\n    }\n}\n\nexport default (\n    data: FetcherPostApi['/resumesearch/settings']['body'] | FormData\n): Promise<AxiosResponse<FetcherPostApi['/resumesearch/settings']['response']>> =>\n    fetcher.postFormData('/resumesearch/settings', data);\n","export const isHtmlElement = (element: Element | null): element is HTMLElement => {\n    return element instanceof HTMLElement;\n};\n","import { BrandingBuilderServiceCodes } from 'lux/models/price/priceBranding/priceBranding.types';\nimport { UNLIMITED_RESUME_THRESHOLD } from 'lux/models/price/priceZp';\nimport {\n    OptionFeatures,\n    ProductType,\n    ResumeAccessSubProductType,\n    PublicationFeatures,\n    ResumeAccessFeatures,\n    SubProductType,\n    BillingPlatform,\n} from 'lux/models/price/product.types';\nimport { publicationsCodes, ServiceCode, ServiceItemCode } from 'lux/models/price/productCodes';\nimport { ZpTariff } from 'lux/models/price/zpTariff';\n\nconst findProduct = (\n    bundledProduct: ProductType,\n    predicate: (subProduct: SubProductType) => boolean\n): SubProductType | undefined => Object.values(bundledProduct.products || {}).find(predicate);\n\nexport const getSubProduct = (bundledProduct: ProductType, code: ServiceItemCode): SubProductType | undefined =>\n    findProduct(bundledProduct, (subProduct) => subProduct.code === code);\n\nexport const getApiCount = (product: ProductType): number | null => {\n    const apiProduct = getSubProduct(product, ServiceItemCode.ApiLimited);\n    return apiProduct ? parseInt(apiProduct.count, 10) : null;\n};\n\nexport const getContactsCount = (product: ProductType): number | null => {\n    const civProduct = getSubProduct(product, ServiceItemCode.ContactsView);\n    return civProduct ? parseInt(civProduct.count, 10) : null;\n};\n\nexport const isResumeAccessSubProduct = (subProduct: SubProductType): subProduct is ResumeAccessSubProductType =>\n    subProduct.code === ServiceItemCode.ContactsView;\n\nexport const getResumeAccessSubProducts = (bundledProduct: ProductType): ResumeAccessSubProductType[] =>\n    Object.values(bundledProduct.products || {}).filter(isResumeAccessSubProduct);\n\nexport const getResumeAccessFeatures = (product: ProductType): ResumeAccessFeatures | undefined =>\n    getSubProduct(product, ServiceItemCode.ContactsView)?.features as ResumeAccessFeatures;\n\nexport const getPublicationSubProduct = (product: ProductType): SubProductType | undefined =>\n    findProduct(product, ({ code }) => publicationsCodes.includes(code));\n\nexport const getPublicationFeatures = (product: ProductType): PublicationFeatures | undefined =>\n    getPublicationSubProduct(product)?.features as PublicationFeatures;\n\nexport const getOptionFeatures = (product: ProductType): OptionFeatures | undefined =>\n    getSubProduct(product, ServiceItemCode.OptionPremium)?.features as OptionFeatures;\n\nexport const getPublicationsCount = (product: ProductType): number | null => {\n    const publicationProduct = getPublicationSubProduct(product);\n    return publicationProduct ? parseInt(publicationProduct.count, 10) : null;\n};\n\nexport const isResumeAccessProduct = (product: ProductType): boolean => {\n    const isCivVppl = product.code === ServiceCode.ContactsViewWithStandart;\n    const isCivDi = product.code === ServiceCode.Disposable && !!getSubProduct(product, ServiceItemCode.ContactsView);\n    return isCivVppl || isCivDi;\n};\n\n// CIV, у которых указана определённая платформа, и только она.\nexport const getResumeAccessSubProductsForPlatform = (\n    product: ProductType,\n    platform: BillingPlatform\n): ResumeAccessSubProductType[] => {\n    return getResumeAccessSubProducts(product).filter((subProduct) => {\n        const platforms = subProduct.features?.billingPlatforms || [];\n        return platforms.length === 1 && platforms[0] === platform;\n    });\n};\n\nexport const getContactsCountForPlatform = (product: ProductType, platform: BillingPlatform): number | null => {\n    const civProducts = getResumeAccessSubProductsForPlatform(product, platform);\n    return civProducts.length ? parseInt(civProducts[0].count, 10) : null;\n};\n\nexport const isPublicationsProduct = (product: ProductType): boolean => {\n    const isNewPublicationProduct = product.code === ServiceCode.LimitedVacancy;\n    const isOldPublicationProduct = publicationsCodes.includes(product.code);\n    return isNewPublicationProduct || isOldPublicationProduct;\n};\n\nexport const isClickmeProduct = (product: ProductType): boolean => {\n    return product.code === ServiceItemCode.Clickme && !product.businessContext?.auction;\n};\n\nexport const isAuctionProduct = (product: ProductType): boolean => {\n    return product.code === ServiceItemCode.Clickme && Boolean(product.businessContext?.auction);\n};\n\nexport const isBundleProduct = (product: ProductType): boolean => {\n    return product.code === ServiceCode.Bundle;\n};\n\nexport const isOptionProduct = (product: ProductType): boolean => {\n    return !!getSubProduct(product, ServiceItemCode.OptionPremium);\n};\n\nexport const isZpEventProduct = (product: ProductType): boolean => {\n    return product.code === ServiceCode.ZpEvent;\n};\n\nexport const getOptionSubProduct = (product: ProductType): SubProductType | undefined =>\n    getSubProduct(product, ServiceItemCode.OptionPremium);\n\nexport const isBrandingProduct = (product: ProductType): boolean => BrandingBuilderServiceCodes.includes(product.code);\n\nconst isUnlimitedResumeTariff = (tariffName: ZpTariff): boolean => tariffName === ZpTariff.ResumeAccessByCategory;\n\nexport const isUnlimitedResumeAccess = (product: ProductType | null): boolean => {\n    if (product?.tariff && isUnlimitedResumeTariff(product.tariff)) {\n        return true;\n    }\n    const contactsCount = product && getContactsCount(product);\n    return !!contactsCount && contactsCount >= UNLIMITED_RESUME_THRESHOLD;\n};\n\nexport const hasZpCrossPost = (product: ProductType): boolean => {\n    return !!getSubProduct(product, ServiceItemCode.ZpCrosspost);\n};\n\n/**\n * Возвращает код подпродукта публикации для определения типа составного продукта VPPL.\n */\nexport const getPublicationCode = (product: ProductType): ServiceItemCode | null => {\n    const publicationProduct = findProduct(product, (subProduct) => publicationsCodes.includes(subProduct.code));\n    return publicationProduct ? publicationProduct.code : null;\n};\n","import { Breakpoint, getBreakpoint } from 'bloko/common/media';\n\nconst addToCartAnimation = (target: EventTarget): void => {\n    const totalCost = document.querySelector('.HH-AddItemToCartAnimation-TotalCost');\n\n    if (!totalCost) {\n        return;\n    }\n\n    if (getBreakpoint() !== Breakpoint.L) {\n        const flyingElement = document.createElement('div');\n        const playTotalCostUpdateAnimation = () => {\n            flyingElement.remove();\n            totalCost.classList.remove('price-cart-update-blink');\n            setTimeout(() => {\n                totalCost.classList.add('price-cart-update-blink');\n            }, 0);\n            flyingElement.removeEventListener('transitionend', playTotalCostUpdateAnimation);\n        };\n        flyingElement.addEventListener('transitionend', playTotalCostUpdateAnimation);\n        flyingElement.classList.add('price-cart-flying-item');\n        const targetRect = (target as HTMLElement).getBoundingClientRect();\n        flyingElement.style.top = `${targetRect.top + window.scrollY}px`;\n        flyingElement.style.left = `${targetRect.left + window.scrollX}px`;\n        document.body.appendChild(flyingElement);\n        const totalCostRect = totalCost.getBoundingClientRect();\n        setTimeout(() => {\n            flyingElement.style.top = `${totalCostRect.top + window.scrollY}px`;\n            flyingElement.style.left = `${totalCostRect.left + window.scrollX}px`;\n        }, 0);\n        flyingElement.classList.add('price-cart-flying-item_animated');\n    } else {\n        totalCost.classList.remove('price-cart-update-blink');\n        setTimeout(() => {\n            totalCost.classList.add('price-cart-update-blink');\n        }, 0);\n    }\n};\n\nexport default addToCartAnimation;\n","import { AxiosError } from 'axios';\nimport { push } from 'connected-react-router';\nimport { CONFLICT } from 'http-status-codes';\nimport { AnyAction, Dispatch } from 'redux';\n\nimport { makeSetStoreField, NonNullableRootState } from '@hh.ru/redux-create-reducer';\n\nimport Debug from 'HHC/Debug';\nimport { updateUrl } from 'Modules/url';\nimport {\n    AutoCampaignDraftResponseData,\n    AutoCampaignResponseData,\n    CampaignData,\n    PromotionAutoCampaignRequestData,\n} from 'lux/components/Clickme/AutoCampaign/utils';\nimport { DEFAULT_ERROR } from 'lux/components/Notifications/DefaultError';\nimport { AUCTION_ERROR, AuctionErrorType } from 'lux/components/Notifications/EmployerAuction';\nimport { ADD_TO_CART_ERROR_NOTIFICATION } from 'lux/components/Notifications/PriceCartError';\nimport { SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY } from 'lux/components/Notifications/VacancyAuctionSaveSuccessfullNotification';\nimport { AuctionData, CreatedAuctionData, CurrentVacancyAuctionCampaign } from 'lux/models/auctionData';\nimport { ProductName } from 'lux/models/clickme/clickmeProducts';\nimport { PriceCart } from 'lux/models/price/priceCart';\nimport { ProductType } from 'lux/models/price/product.types';\nimport fetcher from 'lux/modules/fetcher';\nimport addNotification from 'lux/requests/notifications/addNotification';\n\nimport addToCartAnimation from 'lux/requests/price/addToCartAnimation';\n\nconst priceCartAction = makeSetStoreField('priceCart');\n\ndeclare global {\n    interface FetcherPostApi {\n        '/shards/price/cart/items': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                product: ProductType;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/price/cart/item_list': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                productList: ProductType[];\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherDeleteApi {\n        '/shards/price/cart/item': {\n            queryParams: {\n                itemId: string;\n                employerId?: string;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/price/cart/purchase': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: null;\n            response?: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_cart': {\n            queryParams: {\n                employerId?: string;\n            };\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/clickme_auto_campaign/create_cart_with_clickme_auto_campaign_draft': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                title: string;\n                text: string;\n                type: ProductName;\n            };\n            response: AutoCampaignDraftResponseData;\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/clickme_auto_campaign/promotion_create': PromotionAutoCampaignRequestData;\n        '/shards/employer/clickme_auto_campaign/promotion_validate': PromotionAutoCampaignRequestData;\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_cart_with_clickme_auction_campaign_draft': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                bid: number;\n                budget: number;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPostApi {\n        '/shards/employer/create_clickme_auction_campaign_without_purchase': {\n            queryParams: void;\n            body: {\n                vacancyId: string;\n                bid: number;\n                budget: number;\n            };\n            response: CreatedAuctionData;\n        };\n    }\n    interface FetcherGetApi {\n        '/shards/price/cart/get_items': {\n            queryParams: {\n                employerId?: string;\n            };\n            response: { priceCart: PriceCart };\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/employer/create_cart_with_changed_clickme_campaign': {\n            queryParams: void;\n            body: {\n                products: ProductType[];\n                purchaseParams: Record<string, string>;\n                vacancyId: string;\n                bid: number;\n                budget: number;\n                campaignId: number;\n            };\n            response: { purchaseUrl: string };\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/vacancy/save_auction_campaign': {\n            queryParams: {\n                vacancyId: string;\n                campaignId: number;\n                budget: number;\n                bid: number;\n            };\n            body: null;\n            response: AuctionData;\n        };\n    }\n    interface FetcherPutApi {\n        '/shards/vacancy/save_and_restore_auction_campaign': {\n            queryParams: {\n                vacancyId: string;\n                campaignId: number;\n                budget: number;\n                bid: number;\n            };\n            body: null;\n            response: Partial<CurrentVacancyAuctionCampaign>;\n        };\n    }\n}\n\nexport const addItem =\n    (product: ProductType, target: EventTarget) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/items', { product }, { params: { employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                    addToCartAnimation(target);\n                } else {\n                    dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n                }\n            },\n            () => {\n                dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n            }\n        );\n    };\n\nexport const addItemList =\n    (productList: ProductType[], target: EventTarget) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/item_list', { productList }, { params: { employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                    addToCartAnimation(target);\n                } else {\n                    dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n                }\n            },\n            () => {\n                dispatch(addNotification(ADD_TO_CART_ERROR_NOTIFICATION));\n            }\n        );\n    };\n\nexport const removeItem =\n    (itemId: string) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.delete(`/shards/price/cart/item`, { params: { itemId, employerId } }).then(\n            ({ data }) => {\n                if (data.priceCart) {\n                    dispatch(priceCartAction(data.priceCart));\n                } else {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\nexport const getItems =\n    () =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.get('/shards/price/cart/get_items', { params: { employerId } }).then(\n            ({ priceCart }) => {\n                if (priceCart) {\n                    dispatch(priceCartAction(priceCart));\n                } else {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\ninterface PurchaseParams {\n    hhtmFromLabel: string;\n}\nexport const purchase =\n    ({ hhtmFromLabel }: PurchaseParams) =>\n    (dispatch: Dispatch<AnyAction>, getState: () => NonNullableRootState): Promise<void> => {\n        const employerId = getState().priceData.priceEmployerId;\n        return fetcher.post('/shards/price/cart/purchase', null, { params: { employerId } }).then(\n            (response) => {\n                if (response.data?.purchaseUrl) {\n                    dispatch(\n                        push(\n                            updateUrl(response.data.purchaseUrl, {\n                                hhtmFromLabel,\n                            })\n                        )\n                    );\n                } else {\n                    Debug.log('out error', new Error('Missing purchaseUrl'));\n                }\n            },\n            () => {\n                dispatch(addNotification(DEFAULT_ERROR));\n            }\n        );\n    };\n\nexport const createCart =\n    (products: ProductType[], purchaseParams: Record<string, string> = {}, employerId?: string) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_cart', { products, purchaseParams }, { params: { employerId } })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(updateUrl(data.purchaseUrl)));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n    };\n\nexport const createCartWithClickmeAutoCampaignDraft = (\n    products: ProductType[],\n    purchaseParams: Record<string, string> = {},\n    vacancyId: string,\n    campaignData: CampaignData,\n    onSuccess: (autoCampaignDraftResponseData: AutoCampaignDraftResponseData) => void,\n    onError: () => void\n): Promise<void> => {\n    const { activeProductType, title, text } = campaignData;\n\n    return fetcher\n        .post('/shards/employer/clickme_auto_campaign/create_cart_with_clickme_auto_campaign_draft', {\n            products,\n            purchaseParams,\n            vacancyId,\n            title,\n            text,\n            type: activeProductType,\n        })\n        .then(\n            ({ data }) => {\n                if (data) {\n                    onSuccess(data);\n                } else {\n                    onError();\n                }\n            },\n            () => {\n                onError();\n            }\n        );\n};\n\nexport const createClickmeAutoCampaignWithoutPurchase = (\n    vacancyId: number,\n    campaignData: CampaignData,\n    isOnlyValidation: boolean,\n    onSuccess: (autoCampaignRequestData: AutoCampaignResponseData) => void,\n    onError: () => void\n): Promise<void> => {\n    const { activeProductType, title, text } = campaignData;\n\n    return fetcher\n        .post(\n            isOnlyValidation\n                ? '/shards/employer/clickme_auto_campaign/promotion_validate'\n                : '/shards/employer/clickme_auto_campaign/promotion_create',\n            {\n                vacancyId,\n                title,\n                text,\n                type: activeProductType,\n            }\n        )\n        .then(\n            ({ data }) => {\n                if (data) {\n                    onSuccess(data);\n                } else {\n                    onError();\n                }\n            },\n            () => {\n                onError();\n            }\n        );\n};\n\nexport const createCartWithClickmeAuctionCampaignDraft =\n    (\n        products: ProductType[],\n        purchaseParams: Record<string, string> = {},\n        vacancyId: string,\n        bid: number,\n        budget: number\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_cart_with_clickme_auction_campaign_draft', {\n                products,\n                purchaseParams,\n                vacancyId,\n                bid,\n                budget,\n            })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(data.purchaseUrl));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n    };\n\nexport const createClickmeAuctionCampaignWithoutPurchase =\n    (\n        vacancyId: string,\n        bid: number,\n        budget: number,\n        onSuccess: (createdAuctionData: CreatedAuctionData) => void,\n        onConflictError: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> => {\n        return fetcher\n            .post('/shards/employer/create_clickme_auction_campaign_without_purchase', {\n                vacancyId,\n                bid,\n                budget,\n            })\n            .then(\n                ({ data }) => {\n                    onSuccess(data);\n                },\n                ({ response }: AxiosError) => {\n                    if (response?.status === CONFLICT) {\n                        dispatch(addNotification(AUCTION_ERROR, { errorType: AuctionErrorType.AlreadyCreated }));\n                        onConflictError();\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                }\n            );\n    };\n\nexport const createCartWithChangedClickmeCampaign =\n    (\n        products: ProductType[],\n        purchaseParams: Record<string, string> = {},\n        vacancyId: string,\n        bid: number,\n        budget: number,\n        campaignId: number\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/employer/create_cart_with_changed_clickme_campaign', {\n                products,\n                purchaseParams,\n                vacancyId,\n                bid,\n                budget,\n                campaignId,\n            })\n            .then(\n                ({ data }) => {\n                    if (data.purchaseUrl) {\n                        dispatch(push(data.purchaseUrl));\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                }\n            );\n\nexport const changedClickmeCampaign =\n    (\n        vacancyId: string,\n        campaignId: number,\n        bid: number,\n        budget: number,\n        callback: (auction: AuctionData) => void,\n        onError?: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/vacancy/save_auction_campaign', null, {\n                params: {\n                    vacancyId,\n                    campaignId,\n                    budget,\n                    bid,\n                },\n            })\n            .then(\n                ({ data }) => {\n                    if (data) {\n                        if (callback) {\n                            callback(data);\n                        }\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                        onError?.();\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                    onError?.();\n                }\n            );\n\nexport const changeAndRestoreAuctionCampaign =\n    (\n        vacancyId: string,\n        campaignId: number,\n        bid: number,\n        budget: number,\n        callback: (campaign: Partial<CurrentVacancyAuctionCampaign>) => void,\n        onError: () => void\n    ) =>\n    (dispatch: Dispatch<AnyAction>): Promise<void> =>\n        fetcher\n            .put('/shards/vacancy/save_and_restore_auction_campaign', null, {\n                params: {\n                    vacancyId,\n                    campaignId,\n                    budget,\n                    bid,\n                },\n            })\n            .then(\n                ({ data }) => {\n                    if (data) {\n                        dispatch(addNotification(SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY));\n                        if (callback) {\n                            // в data не приходит bid, но в комопонентах мы используем самое свежее значение,\n                            // поэтому примешиваем в ответ\n                            // хорошо бы чтобы бэк это возвращал и нам не надо было делать \"примесь\"\n                            callback({ ...data, bid });\n                        }\n                    } else {\n                        dispatch(addNotification(DEFAULT_ERROR));\n                        onError?.();\n                    }\n                },\n                () => {\n                    dispatch(addNotification(DEFAULT_ERROR));\n                    onError?.();\n                }\n            );\n"],"names":["element","params","window","requestIdleCallback","visibilityWatcher","onVisible","ids","id","templateName","adfoxParams","banners","Banners","init","options","visible","checkVisible","offsetWidth","offsetHeight","getClientRects","length","removeEventListener","dataset","listenersSetted","addEventListener","AttentionKind","Attention","kind","children","corrected","className","classnames","memo","loadBannerOnVisible","require","Banner","Component","componentDidMount","this","props","isEmpty","ReactDOM","setAutoHeight","bind","initBanners","componentDidUpdate","componentWillUnmount","shouldComponentUpdate","nextProps","cancelFetchBanners","search","pathname","userTargeting","adfoxParamsProperty","style","height","clientHeight","innerHTML","type","bannerId","place","bannerCommonTargeting","bannerAdTargeting","bannerParams","render","connect","state","router","location","AdsExternalBanner","cId","pp","p2","enableAdfox","shouldHideExternalBanners","isExternalBannersRestricted","useIsBelarus","CatalogLinks","links","title","hhtmSourceLabel","showLinksContainerRef","useElementShown","vacancySearchQuickFilterListElementShown","filterList","map","name","join","base","ref","H3Section","link","index","disableVisited","LinkKind","onClick","vacancySearchQuickFilterApplyButtonClick","position","filter","onCatalogLinkClick","Element","Link","isSeoLink","to","path","translation","getSearchCatalogUrl","searchCatalogType","profession","extraFilter","reduce","prev","param","TrlKeys","header","CommonExtraFilter","VacancyExtraFilter","ExtraFilters","trls","extraFilters","useSelector","searchCatalogProfession","searchClustersSettings","SearchType","SearchCatalogType","CatalogSearch","queries","useMemo","query","split","slice","days","one","some","many","zero","hours","DateOnly","hasValue","formatValue","value","shouldShowInHours","translations","suppressHydrationWarning","SettingName","SettingType","SettingsForm","close","activeSettings","availableSettings","filtersOnTheLeft","resumeSearchResult","settings","formElement","useRef","isFetching","setIsFetching","useState","dispatch","useDispatch","isFiltersOnTheLeftToggled","setFiltersOnTheLeftToggled","size","TextSize","onSubmit","async","event","preventDefault","current","setResumeSearchSettings","FormData","e","console","error","push","field","FormItem","defaultChecked","includes","String","onChange","ButtonType","loading","scale","LoadingScale","catchEmpty","vacanciesData","fetcher","activeVacanciesCount","addNotification","EMPTY_FILTERS_RESULT","filterVacancies","vacancies","err","showDefaultError","FilterIcon","isLoading","handleClear","filterIcon","view","IconView","initial","IconColor","IconKind","appearance","IconAppearance","IconScale","IconDynamic","IconLink","highlighted","serp","response","sendEventElementShown","analyticsParams","Analytics","elementName","OnboardingBanner","isResponse","employerId","employerManagerId","employerManager","handleClick","useCallback","setIsResumeCardRedesignOnboarding","catch","isZP","useIsZarplataPlatform","ElementShownAnchor","fn","styles","REGULAR_SPACE","OnboardingModal","setShow","setHide","useOnOffState","useEffect","handleClose","UXFeedback","onClose","H2Section","strong","ButtonKind","ErrorWrapper","errorCode","userType","UserType","formatNewLine","denied","propTypes","PropTypes","HeaderWrapper","xs","PickVacancyAdditionalHeader","managerVacancies","list","contextVacancyId","useContextVacancyIdFromUrl","vacancyName","find","vacancy","vacancyId","text","linkText","pickVacancyFromHeaderButtonClick","showPickVacancyModal","useShowPickVacancyAdditionalHeader","isEmployer","isBannerShow","isEnablePickVacancy","pickVacancyOnResumeSearch","PickVacancyModal","useLocation","isShowModal","displayedVacancyList","CONTEXT_VACANCY_ID_NOT_CHOSEN","areaName","pickedVacancyId","setPickedVacancyId","searchValue","setSearchValue","isVacancySearchLoading","setIsVacancySearchLoading","isSubmitLoading","setIsSubmitLoading","stopLoading","debouncedSearch","debounce","searchManagerVacancies","then","onSearchValueChange","ModalHeader","ModalTitle","placeholder","icon","ModalContent","Form","checked","importance","TextImportance","ModalFooter","FormSpacer","parsedUrl","urlParser","CONTEXT_VACANCY_ID_PARAM","undefined","href","getLinkHref","pickedVacancyInModalButtonClick","searchInputValue","LoadingColor","url","useUrl","Number","AutoInviteSnippet","isAutoInvitePromo","resumeSearchAutoInvitePromo","vacancy_id","target","PickVacancyBanner","ButtonScale","sendRegisterAnalytics","VendorAnalytics","RegistrationAnonActionInSerp","regBannerRef","registerURL","useSelectorNonNullable","authUrl","stats","normalSearchResults","showedAfterRegistration","totalUngroupedResults","format","numberFormatter","groupSeparator","NON_BREAKING_SPACE","STATE","SavedSearchSubscription","autosearch","saveSearch","setState","disabled","setDisabled","teaser1","teaser2","subscribe","saved","sendElementShownAnalytics","NotFoundByContactBanner","bannerPositions","SearchResultBanners","adsSearchParams","isBannerPosition","bannerL","bannerM","bannerS","bannerXS","getPositionToBannersMap","adsPositionInfo","indexOf","positionInfo","FIRST_BANNER_POSITION","SECOND_BANNER_POSITION","RESUME_SEARCH_RATING","SearchResults","useSearchQualityUxFb","useSendExperienceAnalytics","resumes","withHiddenResumes","features","searchLoading","resumesNumber","setResumesNumber","numberOfResumesRenderedOnServer","videos","resumesToRender","top","bottom","notFound","ratingPosition","Math","min","CONTENT_ID","resume","Fragment","ResumeCard","videoLink","_attributes","user","hash","ResumeSearchBanners","SearchRating","portfolio","eventName","infoTipName","ItemsOnPage","values","sort","a","b","wrapperProps","light","flexible","CustomSelectOption","NARROW_NON_BREAKING_SPACE","OrderByOption","SearchOrder","resumeSearchDictionaries","CriteriaKey","customInterval","SearchPeriodOption","SearchPeriod","search_period","searchPeriodValues","Settings","criteria","showSearchPreference","searchPreference","isShown","defaultHhtmSource","hhtmSource","breakpoint","getBreakpoint","queryMap","searchPeriodBase","order_by","orderByBase","items_on_page","itemsOnPageBase","handleChange","ViewClickDown","layer","DownLayer","placement","DownPlacement","onlySetPlacement","searchPeriod","orderBy","itemsOnPage","date_from","dateFrom","date_to","dateTo","genericSearchPeriod","selectedSettings","setting","isSXS","Breakpoint","buttonName","oldValue","newValue","advanced","Features","filtersOrder","NovaFilterKey","additionalFiltersOrder","enableDistrictFilter","isPlatformZp","isPlatformHH","useIsHeadHunterPlatform","areaPos","filtersWithDistrict","splice","relocationPos","filtersWithExpIndustry","uniqHhBasicFilters","uniqHhAddFilters","searchOldEducation","skillPosition","filtersWithEducation","ResumeSearchItems","paging","isClustersEnabled","resumeSerps","isAnonymous","useNovaFiltersOrderForResume","catalogLinks","shouldHideSettings","isResumeCardRedesignOnboarding","isResumeCardRedesignOnboardingModal","isPickVacancyBannerShow","scrollIntoView","s","m","l","Pagination","UnderSearchResultBanner","showNovaFiltersOnTheRight","novafiltersSidebar","StickySidebar","disabledScreens","SCREEN_XS_S","NovaFilters","withCounter","NovaFilterUpdateContext","SearchPreferenceButton","message","profRoleGroups","contactsCount","buyFor","contacts","contactsOnHh","contactsOnZp","BuyContacts","isSimilarSearch","vacancySimilarBuyContacts","action","Action","paths","daysLost","parseInt","product","currency","price","contactsCountHh","getContactsCountForPlatform","BillingPlatform","contactsCountZp","hasContactsOnBothPlatforms","Boolean","regionTrl","H3","period","createCart","formatToReactComponent","FormatMoney","inCents","QueryFixer","queryFix","fixes","original","QuerySuggests","suggests","found","isApplicant","toString","RegistrationAction","isAnonimous","buyButtonVisible","topLevelSite","TopLevelSite","ResumeSearchTop","ScrollToTop","forceHidden","shown","setShown","isScrollingToTop","scrollingToTopStart","scrollingToTopEnd","isHhPlatform","handleScroll","throttle","scrollY","innerHeight","genericScrollToTopSpeed","matchMedia","matches","scrollTop","speed","animationStartCallback","animationEndCallback","isHtmlElement","document","activeElement","blur","scrollPosition","contentHeight","body","sad","unhappy","indifirent","smirk","happy","Smiles","isResumeSearch","searchRating","spyElement","clicked","setClicked","requestUrl","Object","smile","clickEvent","score","capitalize","ResumeSearchScrollToTop","totalSnippets","isMobileFiltersShown","searchType","enableSimilarSavedSearch","vacancySearchResult","toggleSearchPreference","useToggleSearchPreference","StickySidebarMode","ClassByMode","Static","Scroll","StickyTop","StickyBottom","SCREEN_XS","SCREEN_XS_S_M","StickySidebarAndContent","stickyRef","trackScrolling","mode","setMode","newMode","offsetTop","scrollHandler","isMovingUp","isMovingDown","sticky","getBoundingClientRect","ceil","floor","setupSticky","parentHeight","parentNode","useResize","useScroll","resizeObserver","stickyRefCallback","ResizeObserver","unobserve","observe","ADS_POSITION_INFO","handler","excludingUserType","isRabotaBy","useIsRabotaBy","showSearchQualityUxFb","experienceAnalytics","sendAnalytics","experience","JSON","stringify","onExpShowHandler","customEvent","currentAnalytics","detail","ServiceCodesForCRM","BrandingBuilderServiceCodes","ServiceCode","PriceItemMode","PriceItemImage","ANY_PROF_ROLE_GROUP_ID","START_AFTER_PAYMENT","BooleanString","IntervalInSecondsString","IntervalInDaysString","ZpTariff","data","HTMLElement","findProduct","bundledProduct","predicate","products","getSubProduct","code","subProduct","getApiCount","apiProduct","ServiceItemCode","count","getContactsCount","civProduct","isResumeAccessSubProduct","getResumeAccessFeatures","getPublicationSubProduct","publicationsCodes","getPublicationFeatures","getOptionFeatures","getPublicationsCount","publicationProduct","isResumeAccessProduct","isCivVppl","isCivDi","getResumeAccessSubProductsForPlatform","platform","platforms","billingPlatforms","civProducts","isPublicationsProduct","isNewPublicationProduct","isOldPublicationProduct","isClickmeProduct","businessContext","auction","isAuctionProduct","isBundleProduct","isOptionProduct","isZpEventProduct","getOptionSubProduct","isBrandingProduct","isUnlimitedResumeAccess","tariff","UNLIMITED_RESUME_THRESHOLD","hasZpCrossPost","getPublicationCode","totalCost","querySelector","flyingElement","createElement","playTotalCostUpdateAnimation","remove","classList","setTimeout","add","targetRect","left","scrollX","appendChild","totalCostRect","priceCartAction","makeSetStoreField","addItem","getState","priceData","priceEmployerId","priceCart","addToCartAnimation","ADD_TO_CART_ERROR_NOTIFICATION","addItemList","productList","removeItem","itemId","DEFAULT_ERROR","getItems","purchase","hhtmFromLabel","purchaseUrl","updateUrl","Debug","Error","purchaseParams","createCartWithClickmeAutoCampaignDraft","campaignData","onSuccess","onError","activeProductType","createClickmeAutoCampaignWithoutPurchase","isOnlyValidation","createCartWithClickmeAuctionCampaignDraft","bid","budget","createClickmeAuctionCampaignWithoutPurchase","onConflictError","status","CONFLICT","AUCTION_ERROR","errorType","AuctionErrorType","createCartWithChangedClickmeCampaign","campaignId","changedClickmeCampaign","callback","changeAndRestoreAuctionCampaign","SAVE_SUCCESSFULLY_AUCTION_MODAL_VACANCY"],"sourceRoot":""}